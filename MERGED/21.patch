From fb72912a0392fa1f31b02bce0b4549be9cc5ee00 Mon Sep 17 00:00:00 2001
From: m-kirihara <sfaddmki-git@yahoo.co.jp>
Date: Thu, 10 Aug 2023 18:24:18 +0900
Subject: [PATCH 1/5] =?UTF-8?q?typo:=20@code{\"SS\"}=E3=80=82=E2=86=92@cod?=
 =?UTF-8?q?e{\"i\\u0307\"}=20(=E2=80=A6)=E3=80=82=EF=BC=8C(@code{\\\"i\\\\?=
 =?UTF-8?q?u0307\\\"}=E2=86=92@code{\"i\\u0307\"})?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

emacs-28ブランチ，emacs-29ブランチへの修正はバックスラッシュが多いと思います．
---
 lispref/nonascii.texi.po | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lispref/nonascii.texi.po b/lispref/nonascii.texi.po
index 61a3dfee..a7faace6 100644
--- a/lispref/nonascii.texi.po
+++ b/lispref/nonascii.texi.po
@@ -1030,7 +1030,7 @@ msgstr "special-lowercase"
 #. type: table
 #: original_texis/nonascii.texi:642
 msgid "Corresponds to Unicode language- and context-independent special lower-casing rules.  The value of this property is a string (which may be empty).  For example mapping for U+0130 @sc{latin capital letter i with dot above} the value is @code{\"i\\u0307\"} (i.e. 2-character string consisting of @sc{latin small letter i} followed by U+0307 @sc{combining dot above}).  For characters with no special mapping, the value is @code{nil} which means @code{lowercase} property needs to be consulted instead."
-msgstr "Unicodeの言語やコンテキストに依存しない特別な小文字caseルールに対応する。このプロパティの値は文字列(空も可)。たとえばU+0130 @sc{latin capital letter i with dot above}にたいするマッピングは@code{\"SS\"}。特別なマッピングのない文字にたいする値は@code{nil} (かわりに@code{lowercase}プロパティの照会が必要なことを意味する)。"
+msgstr "Unicodeの言語やコンテキストに依存しない特別な小文字caseルールに対応する。このプロパティの値は文字列(空も可)。たとえばU+0130 @sc{latin capital letter i with dot above}にたいするマッピングは@code{\"i\\u0307\"} (すなわち@sc{latin small letter i}の後にU+0307 @sc{combining dot above}が続くことによって構成される2文字の文字列)。特別なマッピングのない文字にたいする値は@code{nil} (かわりに@code{lowercase}プロパティの照会が必要なことを意味する)。"
 
 #. type: item
 #: original_texis/nonascii.texi:643

From 2e3ce8f32bbac4bd33ca4b305282bb1472e2e940 Mon Sep 17 00:00:00 2001
From: m-kirihara <sfaddmki-git@yahoo.co.jp>
Date: Thu, 10 Aug 2023 18:28:19 +0900
Subject: [PATCH 2/5] =?UTF-8?q?typo:=20=E3=83=8F=E2=86=92=E3=81=AF?=
 =?UTF-8?q?=EF=BC=8C=E3=83=8B=E2=86=92=E3=81=AB?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

「は」の置換はemacs-28ブランチ，emacs-29ブランチでも忘れています．
---
 lispref/objects.texi.po | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lispref/objects.texi.po b/lispref/objects.texi.po
index b59973ad..d89107a8 100644
--- a/lispref/objects.texi.po
+++ b/lispref/objects.texi.po
@@ -2420,7 +2420,7 @@ msgstr "primitive function"
 #. type: Plain text
 #: original_texis/objects.texi:1413
 msgid "A @dfn{primitive function} is a function callable from Lisp but written in the C programming language.  Primitive functions are also called @dfn{subrs} or @dfn{built-in functions}.  (The word ``subr'' is derived from ``subroutine''.)  Most primitive functions evaluate all their arguments when they are called.  A primitive function that does not evaluate all its arguments is called a @dfn{special form} (@pxref{Special Forms})."
-msgstr "@dfn{プリミティブ関数(primitive function)}とは、Cプログラミング言語で記述されたLispから呼び出せる関数です。プリミティブ関数は@dfn{subrs}や@dfn{ビルトイン関数(built-in functions)}とも呼ばれます(単語``subr''は``サブルーチン(subroutine)''が由来)。ほとんどのプリミティブ関数ハ、呼び出されたときニすべての引数を評価します。すべての引数を評価しないプリミティブ関数は@dfn{スペシャルフォーム(special form)}と呼ばれます(@ref{Special Forms}を参照)。"
+msgstr "@dfn{プリミティブ関数(primitive function)}とは、Cプログラミング言語で記述されたLispから呼び出せる関数です。プリミティブ関数は@dfn{subrs}や@dfn{ビルトイン関数(built-in functions)}とも呼ばれます(単語``subr''は``サブルーチン(subroutine)''が由来)。ほとんどのプリミティブ関数は、呼び出されたときにすべての引数を評価します。すべての引数を評価しないプリミティブ関数は@dfn{スペシャルフォーム(special form)}と呼ばれます(@ref{Special Forms}を参照)。"
 
 #. type: Plain text
 #: original_texis/objects.texi:1421

From eed14dc97f8ae7118e3529d975017f29745b21d7 Mon Sep 17 00:00:00 2001
From: m-kirihara <sfaddmki-git@yahoo.co.jp>
Date: Thu, 10 Aug 2023 18:31:31 +0900
Subject: [PATCH 3/5] =?UTF-8?q?typo:=20=E3=80=8C=E3=81=9F=E3=81=A8?=
 =?UTF-8?q?=E3=81=88=E3=81=B0=E3=80=8D=E6=8C=BF=E5=85=A5=EF=BC=8C=E3=81=A7?=
 =?UTF-8?q?=E2=86=92=E3=81=A7=E3=81=82=E3=82=8A=EF=BC=8C(=E3=81=9F?=
 =?UTF-8?q?=E3=81=84=E3=81=97=E3=81=A6=E3=80=82=E2=86=92=E3=81=9F=E3=81=84?=
 =?UTF-8?q?=E3=81=97=E3=81=A6=E3=80=81)?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

emacs-28ブランチ，emacs-29ブランチへの変更と同じですが，それらのブランチでは「たいして。」のように句点への誤変換があります．
---
 lispref/objects.texi.po | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lispref/objects.texi.po b/lispref/objects.texi.po
index d89107a8..b4b77fa3 100644
--- a/lispref/objects.texi.po
+++ b/lispref/objects.texi.po
@@ -2737,7 +2737,7 @@ msgstr "@dfn{バッファー(buffer)}とは、編集されるテキストを保
 #. type: Plain text
 #: original_texis/objects.texi:1567
 msgid "The contents of a buffer are much like a string, but buffers are not used like strings in Emacs Lisp, and the available operations are different.  For example, you can insert text efficiently into an existing buffer, altering the buffer's contents, whereas inserting text into a string requires concatenating substrings, and the result is an entirely new string object."
-msgstr "バッファーの内容は文字列によく似ていますが、バッファーはEmacs Lispの文字列と同じようには使用されず、利用可能な操作は異なります。文字列にテキストを挿入するためには部分文字列の結合が必要で、結果は完全に新しい文字列オブジェクトなのるのにたいして、バッファーでは既存のバッファーに効率的にテキストを挿入してバッファーの内容を変更できます。"
+msgstr "バッファーの内容は文字列によく似ていますが、バッファーはEmacs Lispの文字列と同じようには使用されず、利用可能な操作は異なります。たとえば文字列にテキストを挿入するためには部分文字列の結合が必要であり、結果は完全に新しい文字列オブジェクトなのるのにたいして、バッファーでは既存のバッファーに効率的にテキストを挿入してバッファーの内容を変更できます。"
 
 #. type: Plain text
 #: original_texis/objects.texi:1571

From 1be7a431499ccc394dfea1f4f033602ec168c26f Mon Sep 17 00:00:00 2001
From: m-kirihara <sfaddmki-git@yahoo.co.jp>
Date: Thu, 10 Aug 2023 18:35:04 +0900
Subject: [PATCH 4/5] =?UTF-8?q?typo:=20=E5=85=88=E9=A0=AD=E2=86=92?=
 =?UTF-8?q?=E7=B5=82=E7=AB=AF=EF=BC=8C@samp{\\(}=E2=86=92@samp{\\)}?=
 =?UTF-8?q?=EF=BC=8C@samp{\\(=3F:}=E5=89=8A=E9=99=A4?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

二つの@samp{…}の修正はemacs-28ブランチにもemacs-29ブランチにもありません．
---
 lispref/searching.texi.po | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lispref/searching.texi.po b/lispref/searching.texi.po
index f3f04d0f..c7e486fa 100644
--- a/lispref/searching.texi.po
+++ b/lispref/searching.texi.po
@@ -885,7 +885,7 @@ msgstr "バッファーではなく文字列とマッチする際には、@samp{
 #. type: table
 #: original_texis/searching.texi:524
 msgid "For historical compatibility reasons, @samp{$} can be used only at the end of the regular expression, or before @samp{\\)} or @samp{\\|}."
-msgstr "歴史的な互換性という理由により@samp{$}は正規表現の先頭、または@samp{\\(}、@samp{\\(?:}、@samp{\\|}の前でのみ使用できる。"
+msgstr "歴史的な互換性という理由により@samp{$}は正規表現の終端、または@samp{\\)}、@samp{\\|}の前でのみ使用できる。"
 
 #. type: samp{#1}
 #: original_texis/searching.texi:525

From b3057c081502a92f1e5c47995fbcc3421b7ea39a Mon Sep 17 00:00:00 2001
From: m-kirihara <sfaddmki-git@yahoo.co.jp>
Date: Thu, 10 Aug 2023 18:40:15 +0900
Subject: [PATCH 5/5] =?UTF-8?q?=E3=80=8C{\\=3D`}=E3=81=AF@samp{`}=E3=80=81?=
 =?UTF-8?q?=E3=80=8D=E3=81=AE=E8=BF=BD=E5=8A=A0?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

「@samp{\\=`}」への余分なバックスラッシュの削除と「@samp{`}、@samp{\\=\\[}」にある読点の追加がemacs-28ブランチには必要です．(つまり正しくは，emacs-29ブランチの記述と同じになります．)
---
 lispref/help.texi.po | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lispref/help.texi.po b/lispref/help.texi.po
index 2911388c..9a0bd2fa 100644
--- a/lispref/help.texi.po
+++ b/lispref/help.texi.po
@@ -732,7 +732,7 @@ msgstr "\\="
 #. type: table
 #: original_texis/help.texi:368
 msgid "quotes the following character and is discarded; thus, @samp{\\=`} puts @samp{`} into the output, @samp{\\=\\[} puts @samp{\\[} into the output, and @samp{\\=\\=} puts @samp{\\=} into the output."
-msgstr "これは後続の文字をクォートして無効にする。したがって@samp{\\=\\[}は@samp{\\[}、@samp{\\=\\=}は@samp{\\=}を出力する。"
+msgstr "これは後続の文字をクォートして無効にする。したがって@samp{\\=`}は@samp{`}、@samp{\\=\\[}は@samp{\\[}、@samp{\\=\\=}は@samp{\\=}を出力する。"
 
 #. type: item
 #: original_texis/help.texi:369
