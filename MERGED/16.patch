From d14813cbcb1b29ffd83cfdc009fc8316e32e49c8 Mon Sep 17 00:00:00 2001
From: m-kirihara <sfaddmki-git@yahoo.co.jp>
Date: Tue, 8 Aug 2023 22:10:29 +0900
Subject: [PATCH 1/5] =?UTF-8?q?=E3=82=84=E3=82=81=E2=86=92=E3=81=9F?=
 =?UTF-8?q?=E3=82=81?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

emacs-28ブランチは変更されていますが，emacs-29ブランチは忘れています．
---
 lispref/objects.texi.po | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lispref/objects.texi.po b/lispref/objects.texi.po
index b59973ad..f28cb01a 100644
--- a/lispref/objects.texi.po
+++ b/lispref/objects.texi.po
@@ -1513,7 +1513,7 @@ msgstr "リスト、文字列、およびその他の配列型も、重要な類
 #. type: Plain text
 #: original_texis/objects.texi:742
 msgid "It is generally impossible to read the same sequence twice, since sequences are always created anew upon reading.  If you read the read syntax for a sequence twice, you get two sequences with equal contents.  There is one exception: the empty list @code{()} always stands for the same object, @code{nil}."
-msgstr "シーケンスは読み取りにより常に新たに作成されるやめ、同じシーケンスを2回読み取るのは一般的に不可能です。シーケンスにたいする入力構文を2回読み取った場合には、内容が等しい2つのシーケンスを得ます。これには1つ例外があります。空リスト@code{()}は、常に同じオブジェクト@code{nil}を表します。"
+msgstr "シーケンスは読み取りにより常に新たに作成されるため、同じシーケンスを2回読み取るのは一般的に不可能です。シーケンスにたいする入力構文を2回読み取った場合には、内容が等しい2つのシーケンスを得ます。これには1つ例外があります。空リスト@code{()}は、常に同じオブジェクト@code{nil}を表します。"
 
 #. type: subsection
 #: original_texis/objects.texi:744

From 6e06f586fa55050c24122f15a6d1543e94c2a04e Mon Sep 17 00:00:00 2001
From: m-kirihara <sfaddmki-git@yahoo.co.jp>
Date: Tue, 8 Aug 2023 22:19:35 +0900
Subject: [PATCH 2/5] =?UTF-8?q?=E5=89=AF=E4=BD=9C=E7=94=A8=E3=82=92?=
 =?UTF-8?q?=E2=80=A6=E3=82=AA=E3=83=96=E3=82=B8=E3=82=A7=E3=82=AF=E3=83=88?=
 =?UTF-8?q?=E3=81=A7=E3=81=99=E3=80=82=E2=86=92@dfn{mutable(=E5=8F=AF?=
 =?UTF-8?q?=E5=A4=89)}=E2=80=A6=E5=AE=89=E5=85=A8=E3=81=A7=E3=81=99?=
 =?UTF-8?q?=E3=80=82?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

emacs-28ブランチは変更されていますが，emacs-29ブランチは忘れています．
---
 lispref/objects.texi.po | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lispref/objects.texi.po b/lispref/objects.texi.po
index f28cb01a..8bfa0a74 100644
--- a/lispref/objects.texi.po
+++ b/lispref/objects.texi.po
@@ -4201,7 +4201,7 @@ msgstr "変更されるべきではないLispオブジェクトがいくつか
 #. type: Plain text
 #: original_texis/objects.texi:2423
 msgid "Other Lisp objects are @dfn{mutable}: it is safe to change their values via destructive operations involving side effects.  For example, an existing marker can be changed by moving the marker to point to somewhere else."
-msgstr "その他のLispオブジェクトは副作用をともなう破壊的な操作を通じて安全に値を変更可能な@dfn{mutable(可変)}オブジェクトです。たとえばマーカーを別のポイントを指すマーカーに移動することにより、既存のマーカーを変更することができます。"
+msgstr "その他のLispオブジェクトは@dfn{mutable(可変)}オブジェクトで、副作用をともなう破壊的な操作を通じて値を変更しても安全です。たとえばマーカーを別のポイントを指すマーカーに移動することにより、既存のマーカーを変更することができます。"
 
 #. type: Plain text
 #: original_texis/objects.texi:2431

From 80978868f55ba1ef588ab736bb0839fb7088072b Mon Sep 17 00:00:00 2001
From: m-kirihara <sfaddmki-git@yahoo.co.jp>
Date: Tue, 8 Aug 2023 22:27:55 +0900
Subject: [PATCH 3/5] =?UTF-8?q?=E3=82=92=E2=86=92=E3=81=AB?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

emacs-28ブランチもemacs-29ブランチも忘れています．
---
 lispref/numbers.texi.po | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lispref/numbers.texi.po b/lispref/numbers.texi.po
index 3b6dac61..04f56d6c 100644
--- a/lispref/numbers.texi.po
+++ b/lispref/numbers.texi.po
@@ -1688,7 +1688,7 @@ msgstr "arithmetic shift"
 #. type: defun
 #: original_texis/numbers.texi:886
 msgid "@code{ash} (@dfn{arithmetic shift}) shifts the bits in @var{integer1} to the left @var{count} places, or to the right if @var{count} is negative.  Left shifts introduce zero bits on the right; right shifts discard the rightmost bits.  Considered as an integer operation, @code{ash} multiplies @var{integer1} by"
-msgstr "@code{ash} (@dfn{算術シフト(arithmetic shift)})は、@var{integer1}の中のビット位置を左に@var{count}シフトする。@var{count}が負なら右にシフトする。左シフトでは右側に0が挿入されて、右シフトでは最右ビットが破棄される。整数処理として考えると、@code{ash}は@var{integer1}を"
+msgstr "@code{ash} (@dfn{算術シフト(arithmetic shift)})は、@var{integer1}の中のビット位置を左に@var{count}シフトする。@var{count}が負なら右にシフトする。左シフトでは右側に0が挿入されて、右シフトでは最右ビットが破棄される。整数処理として考えると、@code{ash}は@var{integer1}に"
 
 #. type: ifnottex
 #: original_texis/numbers.texi:888

From fa577cdc76c51ccc77f33ac9eebec32a0c206704 Mon Sep 17 00:00:00 2001
From: m-kirihara <sfaddmki-git@yahoo.co.jp>
Date: Tue, 8 Aug 2023 22:31:18 +0900
Subject: [PATCH 4/5] =?UTF-8?q?typo:=20=E4=BD=BF=E7=94=A8=E4=B8=AD?=
 =?UTF-8?q?=E3=81=AE=E3=82=B7=E3=83=B3=E2=86=92=E4=BD=BF=E7=94=A8=E4=B8=AD?=
 =?UTF-8?q?=E3=81=AE=E3=83=9E=E3=82=B7=E3=83=B3=EF=BC=8C(=E4=BD=BF?=
 =?UTF-8?q?=E7=94=A8=E4=B8=AD=E3=83=9E=E3=82=B7=E3=83=B3=E2=86=92=E4=BD=BF?=
 =?UTF-8?q?=E7=94=A8=E4=B8=AD=E3=81=AE=E3=83=9E=E3=82=B7=E3=83=B3)?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

「使用中のマシン」にある「の」がemacs-28ブランチ，emacs-29ブランチでは削除されています．masterブランチは指摘の通り「マ」が削除されています．
---
 lispref/numbers.texi.po | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lispref/numbers.texi.po b/lispref/numbers.texi.po
index 04f56d6c..cd2a9cd6 100644
--- a/lispref/numbers.texi.po
+++ b/lispref/numbers.texi.po
@@ -492,7 +492,7 @@ msgstr "@acronym{IEEE} floating point"
 #. type: Plain text
 #: original_texis/numbers.texi:233
 msgid "Floating-point numbers are useful for representing numbers that are not integral.  The range of floating-point numbers is the same as the range of the C data type @code{double} on the machine you are using.  On all computers supported by Emacs, this is @acronym{IEEE} binary64 floating point format, which is standardized by @url{https://standards.ieee.org/standard/754-2019.html,,IEEE Std 754-2019} and is discussed further in David Goldberg's paper ``@url{https://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html, What Every Computer Scientist Should Know About Floating-Point Arithmetic}''.  On modern platforms, floating-point operations follow the IEEE-754 standard closely; however, results are not always rounded correctly on some obsolescent platforms, notably 32-bit x86."
-msgstr "浮動小数点数は整数以外の数値の表現に有用です。浮動小数点数の範囲は使用中のシンでのCのデータ型@code{double}と同じ範囲です。Emacsがサポートするすべてのコンピューターでは@acronym{IEEE}の64ビット浮動小数フォーマットであり、これは@url{https://standards.ieee.org/standard/754-2019.html,,IEEE Std 754-2019}で標準化されたもので、David Goldbergの論文``@url{https://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html, What Every Computer Scientist Should Know About Floating-Point Arithmetic}''で更に議論されています。モダンなプラットフォームでは浮動小数処理はIEEE-754標準に厳密にしたがいますが、特に32ビットX86のような陳腐化したプラットフォームでは丸めは常に正しい訳ではありません。"
+msgstr "浮動小数点数は整数以外の数値の表現に有用です。浮動小数点数の範囲は使用中のマシンでのCのデータ型@code{double}と同じ範囲です。Emacsがサポートするすべてのコンピューターでは@acronym{IEEE}の64ビット浮動小数フォーマットであり、これは@url{https://standards.ieee.org/standard/754-2019.html,,IEEE Std 754-2019}で標準化されたもので、David Goldbergの論文``@url{https://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html, What Every Computer Scientist Should Know About Floating-Point Arithmetic}''で更に議論されています。モダンなプラットフォームでは浮動小数処理はIEEE-754標準に厳密にしたがいますが、特に32ビットX86のような陳腐化したプラットフォームでは丸めは常に正しい訳ではありません。"
 
 #. type: Plain text
 #: original_texis/numbers.texi:243

From ca6535c71db29bfb1246a10ce336ed058f620af8 Mon Sep 17 00:00:00 2001
From: m-kirihara <sfaddmki-git@yahoo.co.jp>
Date: Tue, 8 Aug 2023 22:34:40 +0900
Subject: [PATCH 5/5] =?UTF-8?q?=E6=95=B4=E6=95=B0=E3=82=92=E6=B5=AE?=
 =?UTF-8?q?=E5=8B=95=E5=B0=91=E6=95=B0=E3=81=AE=E5=A4=89=E6=8F=9B=E2=86=92?=
 =?UTF-8?q?=E6=95=B4=E6=95=B0=E3=81=AE=E6=B5=AE=E5=8B=95=E5=B0=8F=E6=95=B0?=
 =?UTF-8?q?=E3=81=B8=E3=81=AE=E5=A4=89=E6=8F=9B?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

ayatakesi.github.io の pull request #14 について，「小数」への修正はemacs-28ブランチやemacs-29ブランチにあるのですが，それ以外の部分についての修正はなされていないようです．その pull request の修正とは違いますが，以下のように(emacs-28ブランチもemacs-29ブランチも)修正してみるのはどうでしょうか．
---
 lispref/numbers.texi.po | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lispref/numbers.texi.po b/lispref/numbers.texi.po
index cd2a9cd6..4227cc5b 100644
--- a/lispref/numbers.texi.po
+++ b/lispref/numbers.texi.po
@@ -994,7 +994,7 @@ msgstr "converting numbers"
 #. type: Plain text
 #: original_texis/numbers.texi:518
 msgid "To convert an integer to floating point, use the function @code{float}."
-msgstr "整数を浮動少数の変換には関数@code{float}を使用します。"
+msgstr "整数の浮動小数への変換には関数@code{float}を使用します。"
 
 #. type: defun
 #: original_texis/numbers.texi:519
