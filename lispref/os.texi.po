#. type: node
#: original_texis/os.texi:6
#, no-wrap
msgid "System Interface"
msgstr ""

#. type: chapter
#: original_texis/os.texi:7
#, no-wrap
msgid "Operating System Interface"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:11
msgid "This chapter is about starting and getting out of Emacs, access to values in the operating system environment, and terminal input, output."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:15
msgid "@xref{Building Emacs}, for related information.  @xref{Display}, for additional operating system status information pertaining to the terminal and the screen."
msgstr ""

#. type: node
#: original_texis/os.texi:40 original_texis/os.texi:42
#, no-wrap
msgid "Starting Up"
msgstr ""

#. type: menuentry
#: original_texis/os.texi:40
msgid "Customizing Emacs startup processing."
msgstr ""

#. type: node
#: original_texis/os.texi:40 original_texis/os.texi:680
#, no-wrap
msgid "Getting Out"
msgstr ""

#. type: menuentry
#: original_texis/os.texi:40
msgid "How exiting works (permanent or temporary)."
msgstr ""

#. type: node
#: original_texis/os.texi:40 original_texis/os.texi:924
#, no-wrap
msgid "System Environment"
msgstr ""

#. type: menuentry
#: original_texis/os.texi:40
msgid "Distinguish the name and kind of system."
msgstr ""

#. type: section
#: original_texis/os.texi:40 original_texis/os.texi:1217
#: original_texis/os.texi:1218
#, no-wrap
msgid "User Identification"
msgstr ""

#. type: menuentry
#: original_texis/os.texi:40
msgid "Finding the name and user id of the user."
msgstr ""

#. type: section
#: original_texis/os.texi:40 original_texis/os.texi:1335
#: original_texis/os.texi:1336
#, no-wrap
msgid "Time of Day"
msgstr ""

#. type: menuentry
#: original_texis/os.texi:40
msgid "Getting the current time."
msgstr ""

#. type: section
#: original_texis/os.texi:40 original_texis/os.texi:1488
#: original_texis/os.texi:1489
#, no-wrap
msgid "Time Zone Rules"
msgstr ""

#. type: menuentry
#: original_texis/os.texi:40
msgid "Rules for time zones and daylight saving time."
msgstr ""

#. type: section
#: original_texis/os.texi:40 original_texis/os.texi:1548
#: original_texis/os.texi:1549
#, no-wrap
msgid "Time Conversion"
msgstr ""

#. type: menuentry
#: original_texis/os.texi:40
msgid "Converting among timestamp forms."
msgstr ""

#. type: node
#: original_texis/os.texi:40 original_texis/os.texi:1778
#, no-wrap
msgid "Time Parsing"
msgstr ""

#. type: menuentry
#: original_texis/os.texi:40
msgid "Converting timestamps to text and vice versa."
msgstr ""

#. type: node
#: original_texis/os.texi:40 original_texis/os.texi:2069
#, no-wrap
msgid "Processor Run Time"
msgstr ""

#. type: menuentry
#: original_texis/os.texi:40
msgid "Getting the run time used by Emacs."
msgstr ""

#. type: section
#: original_texis/os.texi:40 original_texis/os.texi:2110
#: original_texis/os.texi:2111
#, no-wrap
msgid "Time Calculations"
msgstr ""

#. type: menuentry
#: original_texis/os.texi:40
msgid "Adding, subtracting, comparing times, etc."
msgstr ""

#. type: node
#: original_texis/os.texi:40 original_texis/os.texi:2192
#, no-wrap
msgid "Timers"
msgstr ""

#. type: menuentry
#: original_texis/os.texi:40
msgid "Setting a timer to call a function at a certain time."
msgstr ""

#. type: section
#: original_texis/os.texi:40 original_texis/os.texi:2377
#: original_texis/os.texi:2378
#, no-wrap
msgid "Idle Timers"
msgstr ""

#. type: menuentry
#: original_texis/os.texi:40
msgid "Setting a timer to call a function when Emacs has been idle for a certain length of time."
msgstr ""

#. type: section
#: original_texis/os.texi:40 original_texis/os.texi:2479
#: original_texis/os.texi:2480
#, no-wrap
msgid "Terminal Input"
msgstr ""

#. type: menuentry
#: original_texis/os.texi:40
msgid "Accessing and recording terminal input."
msgstr ""

#. type: section
#: original_texis/os.texi:40 original_texis/os.texi:2594
#: original_texis/os.texi:2595
#, no-wrap
msgid "Terminal Output"
msgstr ""

#. type: menuentry
#: original_texis/os.texi:40
msgid "Controlling and recording terminal output."
msgstr ""

#. type: section
#: original_texis/os.texi:40 original_texis/os.texi:2671
#: original_texis/os.texi:2672
#, no-wrap
msgid "Sound Output"
msgstr ""

#. type: menuentry
#: original_texis/os.texi:40
msgid "Playing sounds on the computer's speaker."
msgstr ""

#. type: node
#: original_texis/os.texi:40 original_texis/os.texi:2728
#, no-wrap
msgid "X11 Keysyms"
msgstr ""

#. type: menuentry
#: original_texis/os.texi:40
msgid "Operating on key symbols for X Windows."
msgstr ""

#. type: section
#: original_texis/os.texi:40 original_texis/os.texi:2783
#: original_texis/os.texi:2784
#, no-wrap
msgid "Batch Mode"
msgstr ""

#. type: menuentry
#: original_texis/os.texi:40
msgid "Running Emacs without terminal interaction."
msgstr ""

#. type: section
#: original_texis/os.texi:40 original_texis/os.texi:2850
#: original_texis/os.texi:2851
#, no-wrap
msgid "Session Management"
msgstr ""

#. type: menuentry
#: original_texis/os.texi:40
msgid "Saving and restoring state with X Session Management."
msgstr ""

#. type: section
#: original_texis/os.texi:40 original_texis/os.texi:2906
#: original_texis/os.texi:2907
#, no-wrap
msgid "Desktop Notifications"
msgstr ""

#. type: menuentry
#: original_texis/os.texi:40
msgid "Desktop notifications."
msgstr ""

#. type: node
#: original_texis/os.texi:40 original_texis/os.texi:3328
#, no-wrap
msgid "File Notifications"
msgstr ""

#. type: menuentry
#: original_texis/os.texi:40
msgid "File notifications."
msgstr ""

#. type: node
#: original_texis/os.texi:40 original_texis/os.texi:3567
#, no-wrap
msgid "Dynamic Libraries"
msgstr ""

#. type: menuentry
#: original_texis/os.texi:40
msgid "On-demand loading of support libraries."
msgstr ""

#. type: section
#: original_texis/os.texi:40 original_texis/os.texi:3619
#: original_texis/os.texi:3620
#, no-wrap
msgid "Security Considerations"
msgstr ""

#. type: menuentry
#: original_texis/os.texi:40
msgid "Running Emacs in an unfriendly environment."
msgstr ""

#. type: section
#: original_texis/os.texi:43
#, no-wrap
msgid "Starting Up Emacs"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:47
msgid "This section describes what Emacs does when it is started, and how you can customize these actions."
msgstr ""

#. type: node
#: original_texis/os.texi:54 original_texis/os.texi:56
#, no-wrap
msgid "Startup Summary"
msgstr ""

#. type: menuentry
#: original_texis/os.texi:54
msgid "Sequence of actions Emacs performs at startup."
msgstr ""

#. type: node
#: original_texis/os.texi:54 original_texis/os.texi:374
#, no-wrap
msgid "Init File"
msgstr ""

#. type: menuentry
#: original_texis/os.texi:54
msgid "Details on reading the init file."
msgstr ""

#. type: node
#: original_texis/os.texi:54 original_texis/os.texi:492
#, no-wrap
msgid "Terminal-Specific"
msgstr ""

#. type: menuentry
#: original_texis/os.texi:54
msgid "How the terminal-specific Lisp file is read."
msgstr ""

#. type: subsection
#: original_texis/os.texi:54 original_texis/os.texi:570
#: original_texis/os.texi:571
#, no-wrap
msgid "Command-Line Arguments"
msgstr ""

#. type: menuentry
#: original_texis/os.texi:54
msgid "How command-line arguments are processed, and how you can customize them."
msgstr ""

#. type: subsection
#: original_texis/os.texi:57
#, no-wrap
msgid "Summary: Sequence of Actions at Startup"
msgstr ""

#. type: cindex
#: original_texis/os.texi:58
#, no-wrap
msgid "initialization of Emacs"
msgstr ""

#. type: cindex
#: original_texis/os.texi:59
#, no-wrap
msgid "startup of Emacs"
msgstr ""

#. type: file{#1}
#: original_texis/os.texi:60
#, no-wrap
msgid "startup.el"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:64
msgid "When Emacs is started up, it performs the following operations (see @code{normal-top-level} in @file{startup.el}):"
msgstr ""

#. type: enumerate
#: original_texis/os.texi:72
msgid "It adds subdirectories to @code{load-path}, by running the file named @file{subdirs.el} in each directory in the list.  Normally, this file adds the directory's subdirectories to the list, and those are scanned in their turn.  The files @file{subdirs.el} are normally generated automatically when Emacs is installed."
msgstr ""

#. type: enumerate
#: original_texis/os.texi:80
msgid "It loads any @file{leim-list.el} that it finds in the @code{load-path} directories.  This file is intended for registering input methods.  The search is only for any personal @file{leim-list.el} files that you may have created; it skips the directories containing the standard Emacs libraries (these should contain only a single @file{leim-list.el} file, which is compiled into the Emacs executable)."
msgstr ""

#. type: vindex
#: original_texis/os.texi:81
#, no-wrap
msgid "before-init-time"
msgstr ""

#. type: enumerate
#: original_texis/os.texi:87
msgid "It sets the variable @code{before-init-time} to the value of @code{current-time} (@pxref{Time of Day}).  It also sets @code{after-init-time} to @code{nil}, which signals to Lisp programs that Emacs is being initialized."
msgstr ""

#. type: enumerate
#: original_texis/os.texi:92
msgid "It sets the language environment and the terminal coding system, if requested by environment variables such as @env{LANG}."
msgstr ""

#. type: enumerate
#: original_texis/os.texi:95
msgid "It does some basic parsing of the command-line arguments."
msgstr ""

#. type: enumerate
#: original_texis/os.texi:102
msgid "It loads your early init file (@pxref{Early Init File,,, emacs, The GNU Emacs Manual}).  This is not done if the options @samp{-q}, @samp{-Q}, or @samp{--batch} were specified.  If the @samp{-u} option was specified, Emacs looks for the init file in that user's home directory instead."
msgstr ""

#. type: enumerate
#: original_texis/os.texi:111
msgid "It calls the function @code{package-activate-all} to activate any optional Emacs Lisp package that has been installed.  @xref{Packaging Basics}.  However, Emacs doesn't activate the packages when @code{package-enable-at-startup} is @code{nil} or when it's started with one of the options @samp{-q}, @samp{-Q}, or @samp{--batch}.  To activate the packages in the latter case, @code{package-activate-all} should be called explicitly (e.g., via the @samp{--funcall} option)."
msgstr ""

#. type: vindex
#: original_texis/os.texi:112
#, no-wrap
msgid "initial-window-system@r{, and startup}"
msgstr ""

#. type: findex
#: original_texis/os.texi:113
#, no-wrap
msgid "window-system-initialization"
msgstr ""

#. type: enumerate
#: original_texis/os.texi:125
msgid "If not running in batch mode, it initializes the window system that the variable @code{initial-window-system} specifies (@pxref{Window Systems, initial-window-system}).  The initialization function, @code{window-system-initialization}, is a @dfn{generic function} (@pxref{Generic Functions}) whose actual implementation is different for each supported window system.  If the value of @code{initial-window-system} is @var{windowsystem}, then the appropriate implementation of the initialization function is defined in the file @file{term/@var{windowsystem}-win.el}.  This file should have been compiled into the Emacs executable when it was built."
msgstr ""

#. type: enumerate
#: original_texis/os.texi:128
msgid "It runs the normal hook @code{before-init-hook}."
msgstr ""

#. type: enumerate
#: original_texis/os.texi:136
msgid "If appropriate, it creates a graphical frame.  As part of creating the graphical frame, it initializes the window system specified by @code{initial-frame-alist} and @code{default-frame-alist} (@pxref{Initial Parameters}) for the graphical frame, by calling the @code{window-system-initialization} function for that window system.  This is not done in batch (noninteractive) or daemon mode."
msgstr ""

#. type: enumerate
#: original_texis/os.texi:142
msgid "It initializes the initial frame's faces, and sets up the menu bar and tool bar if needed.  If graphical frames are supported, it sets up the tool bar even if the current frame is not a graphical one, since a graphical frame may be created later on."
msgstr ""

#. type: enumerate
#: original_texis/os.texi:149
msgid "It use @code{custom-reevaluate-setting} to re-initialize the members of the list @code{custom-delayed-init-variables}.  These are any pre-loaded user options whose default value depends on the run-time, rather than build-time, context.  @xref{Building Emacs, custom-initialize-delay}."
msgstr ""

#. type: enumerate
#: original_texis/os.texi:156
msgid "It loads the library @file{site-start}, if it exists.  This is not done if the options @samp{-Q} or @samp{--no-site-file} were specified."
msgstr ""

#. type: file{#1}
#: original_texis/os.texi:156
#, no-wrap
msgid "site-start.el"
msgstr ""

#. type: enumerate
#: original_texis/os.texi:163
msgid "It loads your init file (@pxref{Init File}).  This is not done if the options @samp{-q}, @samp{-Q}, or @samp{--batch} were specified.  If the @samp{-u} option was specified, Emacs looks for the init file in that user's home directory instead."
msgstr ""

#. type: enumerate
#: original_texis/os.texi:168
msgid "It loads the library @file{default}, if it exists.  This is not done if @code{inhibit-default-init} is non-@code{nil}, nor if the options @samp{-q}, @samp{-Q}, or @samp{--batch} were specified."
msgstr ""

#. type: file{#1}
#: original_texis/os.texi:168
#, no-wrap
msgid "default.el"
msgstr ""

#. type: enumerate
#: original_texis/os.texi:175
msgid "It loads your abbrevs from the file specified by @code{abbrev-file-name}, if that file exists and can be read (@pxref{Abbrev Files, abbrev-file-name}).  This is not done if the option @samp{--batch} was specified."
msgstr ""

#. type: vindex
#: original_texis/os.texi:176
#, no-wrap
msgid "after-init-time"
msgstr ""

#. type: enumerate
#: original_texis/os.texi:183
msgid "It sets the variable @code{after-init-time} to the value of @code{current-time}.  This variable was set to @code{nil} earlier; setting it to the current time signals that the initialization phase is over, and, together with @code{before-init-time}, provides the measurement of how long it took."
msgstr ""

#. type: enumerate
#: original_texis/os.texi:188
msgid "It runs the normal hooks @code{after-init-hook} and @code{delayed-warnings-hook}.  The latter shows any warnings emitted during previous stages of startup, which are automatically delayed."
msgstr ""

#. type: enumerate
#: original_texis/os.texi:193
msgid "If the buffer @file{*scratch*} exists and is still in Fundamental mode (as it should be by default), it sets its major mode according to @code{initial-major-mode}."
msgstr ""

#. type: enumerate
#: original_texis/os.texi:199
msgid "If started on a text terminal, it loads the terminal-specific Lisp library (@pxref{Terminal-Specific}), and runs the hook @code{tty-setup-hook}.  This is not done in @code{--batch} mode, nor if @code{term-file-prefix} is @code{nil}."
msgstr ""

#. type: enumerate
#: original_texis/os.texi:205
msgid "It displays the initial echo area message, unless you have suppressed that with @code{inhibit-startup-echo-area-message}."
msgstr ""

#. type: enumerate
#: original_texis/os.texi:208
msgid "It processes any command-line options that were not handled earlier."
msgstr ""

#. type: enumerate
#: original_texis/os.texi:213
msgid "It now exits if the option @code{--batch} was specified."
msgstr ""

#. type: enumerate
#: original_texis/os.texi:217
msgid "If the @file{*scratch*} buffer exists and is empty, it inserts @code{(substitute-command-keys initial-scratch-message)} into that buffer."
msgstr ""

#. type: enumerate
#: original_texis/os.texi:226
msgid "If @code{initial-buffer-choice} is a string, it visits the file (or directory) with that name.  If it is a function, it calls the function with no arguments and selects the buffer that it returns.  If one file is given as a command line argument, that file is visited and its buffer displayed alongside @code{initial-buffer-choice}.  If more than one file is given, all of the files are visited and the @file{*Buffer List*} buffer is displayed alongside @code{initial-buffer-choice}."
msgstr ""

#. type: enumerate
#: original_texis/os.texi:244
msgid "It runs @code{emacs-startup-hook}."
msgstr ""

#. type: enumerate
#: original_texis/os.texi:249
msgid "It calls @code{frame-notice-user-settings}, which modifies the parameters of the selected frame according to whatever the init files specify."
msgstr ""

#. type: enumerate
#: original_texis/os.texi:254
msgid "It runs @code{window-setup-hook}.  The only difference between this hook and @code{emacs-startup-hook} is that this one runs after the previously mentioned modifications to the frame parameters."
msgstr ""

#. type: cindex
#: original_texis/os.texi:256
#, no-wrap
msgid "startup screen"
msgstr ""

#. type: enumerate
#: original_texis/os.texi:262
msgid "It displays the @dfn{startup screen}, which is a special buffer that contains information about copyleft and basic Emacs usage.  This is not done if @code{inhibit-startup-screen} or @code{initial-buffer-choice} are non-@code{nil}, or if the @samp{--no-splash} or @samp{-Q} command-line options were specified."
msgstr ""

#. type: enumerate
#: original_texis/os.texi:275
msgid "If a daemon was requested, it calls @code{server-start}.  (On POSIX systems, if a background daemon was requested, it then detaches from the controlling terminal.)  @xref{Emacs Server,,, emacs, The GNU Emacs Manual}."
msgstr ""

#. type: enumerate
#: original_texis/os.texi:280
msgid "If started by the X session manager, it calls @code{emacs-session-restore} passing it as argument the ID of the previous session.  @xref{Session Management}."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:289
msgid "The following options affect some aspects of the startup sequence."
msgstr ""

#. type: defopt
#: original_texis/os.texi:290
#, no-wrap
msgid "inhibit-startup-screen"
msgstr ""

#. type: defopt
#: original_texis/os.texi:294
msgid "This variable, if non-@code{nil}, inhibits the startup screen.  In that case, Emacs typically displays the @file{*scratch*} buffer; but see @code{initial-buffer-choice}, below."
msgstr ""

#. type: defopt
#: original_texis/os.texi:298
msgid "Do not set this variable in the init file of a new user, or in a way that affects more than one user, as that would prevent new users from receiving information about copyleft and basic Emacs usage."
msgstr ""

#. type: vindex
#: original_texis/os.texi:299
#, no-wrap
msgid "inhibit-startup-message"
msgstr ""

#. type: vindex
#: original_texis/os.texi:300
#, no-wrap
msgid "inhibit-splash-screen"
msgstr ""

#. type: defopt
#: original_texis/os.texi:303
msgid "@code{inhibit-startup-message} and @code{inhibit-splash-screen} are aliases for this variable."
msgstr ""

#. type: defopt
#: original_texis/os.texi:305
#, no-wrap
msgid "initial-buffer-choice"
msgstr ""

#. type: defopt
#: original_texis/os.texi:312
msgid "If non-@code{nil}, this variable is a string that specifies a file or directory for Emacs to display after starting up, instead of the startup screen.  If its value is a function, Emacs calls that function which must return a buffer which is then displayed.  If its value is @code{t}, Emacs displays the @file{*scratch*} buffer."
msgstr ""

#. type: defopt
#: original_texis/os.texi:314
#, no-wrap
msgid "inhibit-startup-echo-area-message"
msgstr ""

#. type: defopt
#: original_texis/os.texi:318
msgid "This variable controls the display of the startup echo area message.  You can suppress the startup echo area message by adding text with this form to your init file:"
msgstr ""

#. type: example
#: original_texis/os.texi:322
#, no-wrap
msgid ""
"(setq inhibit-startup-echo-area-message\n"
"      \"@var{your-login-name}\")\n"
msgstr ""

#. type: defopt
#: original_texis/os.texi:331
msgid "Emacs explicitly checks for an expression as shown above in your init file; your login name must appear in the expression as a Lisp string constant.  You can also use the Customize interface.  Other methods of setting @code{inhibit-startup-echo-area-message} to the same value do not inhibit the startup message.  This way, you can easily inhibit the message for yourself if you wish, but thoughtless copying of your init file will not inhibit the message for someone else."
msgstr ""

#. type: defopt
#: original_texis/os.texi:333
#, no-wrap
msgid "initial-scratch-message"
msgstr ""

#. type: defopt
#: original_texis/os.texi:338
msgid "This variable, if non-@code{nil}, should be a string, which is treated as documentation to be inserted into the @file{*scratch*} buffer when Emacs starts up or when that buffer is recreated.  If it is @code{nil}, the @file{*scratch*} buffer is empty."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:343
msgid "The following command-line options affect some aspects of the startup sequence.  @xref{Initial Options,,, emacs, The GNU Emacs Manual}."
msgstr ""

#. type: item
#: original_texis/os.texi:345
#, no-wrap
msgid "--no-splash"
msgstr ""

#. type: table
#: original_texis/os.texi:347
msgid "Do not display a splash screen."
msgstr ""

#. type: item
#: original_texis/os.texi:348
#, no-wrap
msgid "--batch"
msgstr ""

#. type: table
#: original_texis/os.texi:350
msgid "Run without an interactive terminal.  @xref{Batch Mode}."
msgstr ""

#. type: item
#: original_texis/os.texi:351
#, no-wrap
msgid "--daemon"
msgstr ""

#. type: itemx
#: original_texis/os.texi:352
#, no-wrap
msgid "--bg-daemon"
msgstr ""

#. type: itemx
#: original_texis/os.texi:353
#, no-wrap
msgid "--fg-daemon"
msgstr ""

#. type: table
#: original_texis/os.texi:356
msgid "Do not initialize any display; just start a server.  (A ``background'' daemon automatically runs in the background.)"
msgstr ""

#. type: item
#: original_texis/os.texi:357
#, no-wrap
msgid "--no-init-file"
msgstr ""

#. type: itemx
#: original_texis/os.texi:358
#, no-wrap
msgid "-q"
msgstr ""

#. type: table
#: original_texis/os.texi:360
msgid "Do not load either the init file, or the @file{default} library."
msgstr ""

#. type: item
#: original_texis/os.texi:361
#, no-wrap
msgid "--no-site-file"
msgstr ""

#. type: table
#: original_texis/os.texi:363
msgid "Do not load the @file{site-start} library."
msgstr ""

#. type: item
#: original_texis/os.texi:364
#, no-wrap
msgid "--quick"
msgstr ""

#. type: itemx
#: original_texis/os.texi:365
#, no-wrap
msgid "-Q"
msgstr ""

#. type: table
#: original_texis/os.texi:368
msgid "Equivalent to @samp{-q --no-site-file --no-splash}."
msgstr ""

#. type: item
#: original_texis/os.texi:369
#, no-wrap
msgid "--init-directory"
msgstr ""

#. type: table
#: original_texis/os.texi:371
msgid "Specify the directory to use when finding the Emacs init files."
msgstr ""

#. type: subsection
#: original_texis/os.texi:375
#, no-wrap
msgid "The Init File"
msgstr ""

#. type: cindex
#: original_texis/os.texi:376
#, no-wrap
msgid "init file"
msgstr ""

#. type: file{#1}
#: original_texis/os.texi:377
#, no-wrap
msgid ".emacs"
msgstr ""

#. type: file{#1}
#: original_texis/os.texi:378
#, no-wrap
msgid "init.el"
msgstr ""

#. type: file{#1}
#: original_texis/os.texi:379
#, no-wrap
msgid "early-init.el"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:385
msgid "When you start Emacs, it normally attempts to load your @dfn{init file}.  This is either a file named @file{.emacs} or @file{.emacs.el} in your home directory, or a file named @file{init.el} in a subdirectory named @file{.emacs.d} in your home directory."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:402
msgid "The command-line switches @samp{-q}, @samp{-Q}, and @samp{-u} control whether and where to find the init file; @samp{-q} (and the stronger @samp{-Q}) says not to load an init file, while @samp{-u @var{user}} says to load @var{user}'s init file instead of yours.  @xref{Entering Emacs,,, emacs, The GNU Emacs Manual}.  If neither option is specified, Emacs uses the @env{LOGNAME} environment variable, or the @env{USER} (most systems) or @env{USERNAME} (MS systems) variable, to find your home directory and thus your init file; this way, even if you have su'd, Emacs still loads your own init file.  If those environment variables are absent, though, Emacs uses your user-id to find your home directory."
msgstr ""

#. type: cindex
#: original_texis/os.texi:403
#, no-wrap
msgid "early init file"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:415
msgid "Emacs also attempts to load a second init file, called the @dfn{early init file}, if it exists.  This is a file named @file{early-init.el} in your @file{~/.emacs.d} directory.  The difference between the early init file and the regular init file is that the early init file is loaded much earlier during the startup process, so you can use it to customize some things that are initialized before loading the regular init file.  For example, you can customize the process of initializing the package system, by setting variables such as @var{package-load-list} or @var{package-enable-at-startup}.  @xref{Package Installation,,, emacs,The GNU Emacs Manual}."
msgstr ""

#. type: cindex
#: original_texis/os.texi:416
#, no-wrap
msgid "default init file"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:428
msgid "An Emacs installation may have a @dfn{default init file}, which is a Lisp library named @file{default.el}.  Emacs finds this file through the standard search path for libraries (@pxref{How Programs Do Loading}).  The Emacs distribution does not come with this file; it is intended for local customizations.  If the default init file exists, it is loaded whenever you start Emacs.  But your own personal init file, if any, is loaded first; if it sets @code{inhibit-default-init} to a non-@code{nil} value, then Emacs does not subsequently load the @file{default.el} file.  In batch mode, or if you specify @samp{-q} (or @samp{-Q}), Emacs loads neither your personal init file nor the default init file."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:432
msgid "Another file for site-customization is @file{site-start.el}.  Emacs loads this @emph{before} the user's init file.  You can inhibit the loading of this file with the option @samp{--no-site-file}."
msgstr ""

#. type: defopt
#: original_texis/os.texi:433
#, no-wrap
msgid "site-run-file"
msgstr ""

#. type: defopt
#: original_texis/os.texi:439
msgid "This variable specifies the site-customization file to load before the user's init file.  Its normal value is @code{\"site-start\"}.  The only way you can change it with real effect is to do so before dumping Emacs."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:444
msgid "@xref{Init Examples,, Init File Examples, emacs, The GNU Emacs Manual}, for examples of how to make various commonly desired customizations in your @file{.emacs} file."
msgstr ""

#. type: defopt
#: original_texis/os.texi:445
#, no-wrap
msgid "inhibit-default-init"
msgstr ""

#. type: defopt
#: original_texis/os.texi:448
msgid "If this variable is non-@code{nil}, it prevents Emacs from loading the default initialization library file.  The default value is @code{nil}."
msgstr ""

#. type: defvar
#: original_texis/os.texi:450
#, no-wrap
msgid "before-init-hook"
msgstr ""

#. type: defvar
#: original_texis/os.texi:454
msgid "This normal hook is run, once, just before loading all the init files (@file{site-start.el}, your init file, and @file{default.el}).  (The only way to change it with real effect is before dumping Emacs.)"
msgstr ""

#. type: defvar
#: original_texis/os.texi:456
#, no-wrap
msgid "after-init-hook"
msgstr ""

#. type: defvar
#: original_texis/os.texi:461
msgid "This normal hook is run, once, just after loading all the init files (@file{site-start.el}, your init file, and @file{default.el}), before loading the terminal-specific library (if started on a text terminal) and processing the command-line action arguments."
msgstr ""

#. type: defvar
#: original_texis/os.texi:463
#, no-wrap
msgid "emacs-startup-hook"
msgstr ""

#. type: defvar
#: original_texis/os.texi:466
msgid "This normal hook is run, once, just after handling the command line arguments.  In batch mode, Emacs does not run this hook."
msgstr ""

#. type: defvar
#: original_texis/os.texi:468
#, no-wrap
msgid "window-setup-hook"
msgstr ""

#. type: defvar
#: original_texis/os.texi:472
msgid "This normal hook is very similar to @code{emacs-startup-hook}.  The only difference is that it runs slightly later, after setting of the frame parameters.  @xref{Startup Summary, window-setup-hook}."
msgstr ""

#. type: defvar
#: original_texis/os.texi:474
#, no-wrap
msgid "user-init-file"
msgstr ""

#. type: defvar
#: original_texis/os.texi:478
msgid "This variable holds the absolute file name of the user's init file.  If the actual init file loaded is a compiled file, such as @file{.emacs.elc}, the value refers to the corresponding source file."
msgstr ""

#. type: defvar
#: original_texis/os.texi:480
#, no-wrap
msgid "user-emacs-directory"
msgstr ""

#. type: defvar
#: original_texis/os.texi:490
msgid "This variable holds the name of the Emacs default directory.  It defaults to @file{$@{XDG_CONFIG_HOME-'~/.config'@}/emacs/} if that directory exists and @file{~/.emacs.d/} and @file{~/.emacs} do not exist, otherwise to @file{~/.emacs.d/} on all platforms but MS-DOS@.  Here, @file{$@{XDG_CONFIG_HOME-'~/.config'@}} stands for the value of the environment variable @env{XDG_CONFIG_HOME} if that variable is set, and for @file{~/.config} otherwise.  @xref{Find Init,,How Emacs Finds Your Init File, emacs, The GNU Emacs Manual}."
msgstr ""

#. type: subsection
#: original_texis/os.texi:493
#, no-wrap
msgid "Terminal-Specific Initialization"
msgstr ""

#. type: cindex
#: original_texis/os.texi:494
#, no-wrap
msgid "terminal-specific initialization"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:507
msgid "Each terminal type can have its own Lisp library that Emacs loads when run on that type of terminal.  The library's name is constructed by concatenating the value of the variable @code{term-file-prefix} and the terminal type (specified by the environment variable @env{TERM}).  Normally, @code{term-file-prefix} has the value @code{\"term/\"}; changing this is not recommended.  If there is an entry matching @env{TERM} in the @code{term-file-aliases} association list, Emacs uses the associated value in place of @env{TERM}.  Emacs finds the file in the normal manner, by searching the @code{load-path} directories, and trying the @samp{.elc} and @samp{.el} suffixes."
msgstr ""

#. type: cindex
#: original_texis/os.texi:508
#, no-wrap
msgid "Termcap"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:513
msgid "The usual role of a terminal-specific library is to enable special keys to send sequences that Emacs can recognize.  It may also need to set or add to @code{input-decode-map} if the Termcap or Terminfo entry does not specify all the terminal's function keys.  @xref{Terminal Input}."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:525
msgid "When the name of the terminal type contains a hyphen or underscore, and no library is found whose name is identical to the terminal's name, Emacs strips from the terminal's name the last hyphen or underscore and everything that follows it, and tries again.  This process is repeated until Emacs finds a matching library, or until there are no more hyphens or underscores in the name (i.e., there is no terminal-specific library).  For example, if the terminal name is @samp{xterm-256color} and there is no @file{term/xterm-256color.el} library, Emacs tries to load @file{term/xterm.el}.  If necessary, the terminal library can evaluate @code{(getenv \"TERM\")} to find the full name of the terminal type."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:528
msgid "Your init file can prevent the loading of the terminal-specific library by setting the variable @code{term-file-prefix} to @code{nil}."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:534
msgid "You can also arrange to override some of the actions of the terminal-specific library by using @code{tty-setup-hook}.  This is a normal hook that Emacs runs after initializing a new text terminal.  You could use this hook to define initializations for terminals that do not have their own libraries.  @xref{Hooks}."
msgstr ""

#. type: defopt
#: original_texis/os.texi:535
#, no-wrap
msgid "term-file-prefix"
msgstr ""

#. type: cindex
#: original_texis/os.texi:536
#, no-wrap
msgid "@env{TERM} environment variable"
msgstr ""

#. type: defopt
#: original_texis/os.texi:539
msgid "If the value of this variable is non-@code{nil}, Emacs loads a terminal-specific initialization file as follows:"
msgstr ""

#. type: example
#: original_texis/os.texi:542
#, no-wrap
msgid "(load (concat term-file-prefix (getenv \"TERM\")))\n"
msgstr ""

#. type: defopt
#: original_texis/os.texi:548
msgid "You may set the @code{term-file-prefix} variable to @code{nil} in your init file if you do not wish to load the terminal-initialization file."
msgstr ""

#. type: defopt
#: original_texis/os.texi:550
msgid "On MS-DOS, Emacs sets the @env{TERM} environment variable to @samp{internal}."
msgstr ""

#. type: defopt
#: original_texis/os.texi:552
#, no-wrap
msgid "term-file-aliases"
msgstr ""

#. type: defopt
#: original_texis/os.texi:557
msgid "This variable is an association list mapping terminal types to their aliases.  For example, an element of the form @code{(\"vt102\" . \"vt100\")} means to treat a terminal of type @samp{vt102} like one of type @samp{vt100}."
msgstr ""

#. type: defvar
#: original_texis/os.texi:559
#, no-wrap
msgid "tty-setup-hook"
msgstr ""

#. type: defvar
#: original_texis/os.texi:566
msgid "This variable is a normal hook that Emacs runs after initializing a new text terminal.  (This applies when Emacs starts up in non-windowed mode, and when making a tty @command{emacsclient} connection.)  The hook runs after loading your init file (if applicable) and the terminal-specific Lisp file, so you can use it to adjust the definitions made by that file."
msgstr ""

#. type: defvar
#: original_texis/os.texi:568
msgid "For a related feature, @pxref{Init File, window-setup-hook}."
msgstr ""

#. type: cindex
#: original_texis/os.texi:572
#, no-wrap
msgid "command-line arguments"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:582
msgid "You can use command-line arguments to request various actions when you start Emacs.  Note that the recommended way of using Emacs is to start it just once, after logging in, and then do all editing in the same Emacs session (@pxref{Entering Emacs,,, emacs, The GNU Emacs Manual}).  For this reason, you might not use command-line arguments very often; nonetheless, they can be useful when invoking Emacs from session scripts or debugging Emacs.  This section describes how Emacs processes command-line arguments."
msgstr ""

#. type: defun
#: original_texis/os.texi:583
#, no-wrap
msgid "command-line"
msgstr ""

#. type: defun
#: original_texis/os.texi:587
msgid "This function parses the command line that Emacs was called with, processes it, and (amongst other things) loads the user's init file and displays the startup messages."
msgstr ""

#. type: defvar
#: original_texis/os.texi:589
#, no-wrap
msgid "command-line-processed"
msgstr ""

#. type: defvar
#: original_texis/os.texi:592
msgid "The value of this variable is @code{t} once the command line has been processed."
msgstr ""

#. type: defvar
#: original_texis/os.texi:597
msgid "If you redump Emacs by calling @code{dump-emacs} (@pxref{Building Emacs}), you may wish to set this variable to @code{nil} first in order to cause the new dumped Emacs to process its new command-line arguments."
msgstr ""

#. type: defvar
#: original_texis/os.texi:599
#, no-wrap
msgid "command-switch-alist"
msgstr ""

#. type: cindex
#: original_texis/os.texi:600
#, no-wrap
msgid "switches on command line"
msgstr ""

#. type: cindex
#: original_texis/os.texi:601
#, no-wrap
msgid "options on command line"
msgstr ""

#. type: cindex
#: original_texis/os.texi:602
#, no-wrap
msgid "command-line options"
msgstr ""

#. type: defvar
#: original_texis/os.texi:606
msgid "This variable is an alist of user-defined command-line options and associated handler functions.  By default it is empty, but you can add elements if you wish."
msgstr ""

#. type: defvar
#: original_texis/os.texi:609
msgid "A @dfn{command-line option} is an argument on the command line, which has the form:"
msgstr ""

#. type: example
#: original_texis/os.texi:612
#, no-wrap
msgid "-@var{option}\n"
msgstr ""

#. type: defvar
#: original_texis/os.texi:615
msgid "The elements of the @code{command-switch-alist} look like this:"
msgstr ""

#. type: example
#: original_texis/os.texi:618
#, no-wrap
msgid "(@var{option} . @var{handler-function})\n"
msgstr ""

#. type: defvar
#: original_texis/os.texi:624
msgid "The @sc{car}, @var{option}, is a string, the name of a command-line option (including the initial hyphen).  The @var{handler-function} is called to handle @var{option}, and receives the option name as its sole argument."
msgstr ""

#. type: defvar
#: original_texis/os.texi:630
msgid "In some cases, the option is followed in the command line by an argument.  In these cases, the @var{handler-function} can find all the remaining command-line arguments in the variable @code{command-line-args-left} (see below).  (The entire list of command-line arguments is in @code{command-line-args}.)"
msgstr ""

#. type: defvar
#: original_texis/os.texi:638
msgid "Note that the handling of @code{command-switch-alist} doesn't treat equals signs in @var{option} specially.  That is, if there's an option like @code{--name=value} on the command line, then only a @code{command-switch-alist} member whose @code{car} is literally @code{--name=value} will match this option.  If you want to parse such options, you need to use @code{command-line-functions} instead (see below)."
msgstr ""

#. type: defvar
#: original_texis/os.texi:643
msgid "The command-line arguments are parsed by the @code{command-line-1} function in the @file{startup.el} file.  See also @ref{Emacs Invocation, , Command Line Arguments for Emacs Invocation, emacs, The GNU Emacs Manual}."
msgstr ""

#. type: defvar
#: original_texis/os.texi:645
#, no-wrap
msgid "command-line-args"
msgstr ""

#. type: defvar
#: original_texis/os.texi:648
msgid "The value of this variable is the list of command-line arguments passed to Emacs."
msgstr ""

#. type: defvar
#: original_texis/os.texi:650
#, no-wrap
msgid "command-line-args-left"
msgstr ""

#. type: vindex
#: original_texis/os.texi:651
#, no-wrap
msgid "argv"
msgstr ""

#. type: defvar
#: original_texis/os.texi:656
msgid "The value of this variable is the list of command-line arguments that have not yet been processed."
msgstr ""

#. type: defvar
#: original_texis/os.texi:658
#, no-wrap
msgid "command-line-functions"
msgstr ""

#. type: defvar
#: original_texis/os.texi:664
msgid "This variable's value is a list of functions for handling an unrecognized command-line argument.  Each time the next argument to be processed has no special meaning, the functions in this list are called, in order of appearance, until one of them returns a non-@code{nil} value."
msgstr ""

#. type: defvar
#: original_texis/os.texi:670
msgid "These functions are called with no arguments.  They can access the command-line argument under consideration through the variable @code{argi}, which is bound temporarily at this point.  The remaining arguments (not including the current one) are in the variable @code{command-line-args-left}."
msgstr ""

#. type: defvar
#: original_texis/os.texi:675
msgid "When a function recognizes and processes the argument in @code{argi}, it should return a non-@code{nil} value to say it has dealt with that argument.  If it has also dealt with some of the following arguments, it can indicate that by deleting them from @code{command-line-args-left}."
msgstr ""

#. type: defvar
#: original_texis/os.texi:678
msgid "If all of these functions return @code{nil}, then the argument is treated as a file name to visit."
msgstr ""

#. type: section
#: original_texis/os.texi:681
#, no-wrap
msgid "Getting Out of Emacs"
msgstr ""

#. type: cindex
#: original_texis/os.texi:682
#, no-wrap
msgid "exiting Emacs"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:689
msgid "There are two ways to get out of Emacs: you can kill the Emacs job, which exits permanently, or you can suspend it, which permits you to reenter the Emacs process later.  (In a graphical environment, you can of course simply switch to another application without doing anything special to Emacs, then switch back to Emacs when you want.)"
msgstr ""

#. type: subsection
#: original_texis/os.texi:693 original_texis/os.texi:695
#: original_texis/os.texi:696
#, no-wrap
msgid "Killing Emacs"
msgstr ""

#. type: menuentry
#: original_texis/os.texi:693
msgid "Exiting Emacs irreversibly."
msgstr ""

#. type: subsection
#: original_texis/os.texi:693 original_texis/os.texi:772
#: original_texis/os.texi:773
#, no-wrap
msgid "Suspending Emacs"
msgstr ""

#. type: menuentry
#: original_texis/os.texi:693
msgid "Exiting Emacs reversibly."
msgstr ""

#. type: cindex
#: original_texis/os.texi:697
#, no-wrap
msgid "killing Emacs"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:703
msgid "Killing Emacs means ending the execution of the Emacs process.  If you started Emacs from a terminal, the parent process normally resumes control.  The low-level primitive for killing Emacs is @code{kill-emacs}."
msgstr ""

#. type: deffn
#: original_texis/os.texi:704
#, no-wrap
msgid "Command kill-emacs &optional exit-data restart"
msgstr ""

#. type: deffn
#: original_texis/os.texi:707
msgid "This command calls the hook @code{kill-emacs-hook}, then exits the Emacs process and kills it."
msgstr ""

#. type: deffn
#: original_texis/os.texi:711
msgid "If @var{exit-data} is an integer, that is used as the exit status of the Emacs process.  (This is useful primarily in batch operation; see @ref{Batch Mode}.)"
msgstr ""

#. type: deffn
#: original_texis/os.texi:715
msgid "If @var{exit-data} is a string, its contents are stuffed into the terminal input buffer so that the shell (or whatever program next reads input) can read them."
msgstr ""

#. type: deffn
#: original_texis/os.texi:719
msgid "If @var{exit-data} is neither an integer nor a string, or is omitted, that means to use the (system-specific) exit status which indicates successful program termination."
msgstr ""

#. type: deffn
#: original_texis/os.texi:723
msgid "If @var{restart} is non-@code{nil}, instead of just exiting at the end, start a new Emacs process, using the same command line arguments as the currently running Emacs process."
msgstr ""

#. type: cindex
#: original_texis/os.texi:725
#, no-wrap
msgid "SIGTERM"
msgstr ""

#. type: cindex
#: original_texis/os.texi:726
#, no-wrap
msgid "SIGHUP"
msgstr ""

#. type: cindex
#: original_texis/os.texi:727
#, no-wrap
msgid "SIGINT"
msgstr ""

#. type: cindex
#: original_texis/os.texi:728
#, no-wrap
msgid "operating system signal"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:736
msgid "The @code{kill-emacs} function is normally called via the higher-level command @kbd{C-x C-c} (@code{save-buffers-kill-terminal}).  @xref{Exiting,,, emacs, The GNU Emacs Manual}.  It is also called automatically if Emacs receives a @code{SIGTERM} or @code{SIGHUP} operating system signal (e.g., when the controlling terminal is disconnected), or if it receives a @code{SIGINT} signal while running in batch mode (@pxref{Batch Mode})."
msgstr ""

#. type: defvar
#: original_texis/os.texi:737
#, no-wrap
msgid "kill-emacs-hook"
msgstr ""

#. type: defvar
#: original_texis/os.texi:739
msgid "This normal hook is run by @code{kill-emacs}, before it kills Emacs."
msgstr ""

#. type: defvar
#: original_texis/os.texi:745
msgid "Because @code{kill-emacs} can be called in situations where user interaction is impossible (e.g., when the terminal is disconnected), functions on this hook should not attempt to interact with the user.  If you want to interact with the user when Emacs is shutting down, use @code{kill-emacs-query-functions}, described below."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:753
msgid "When Emacs is killed, all the information in the Emacs process, aside from files that have been saved, is lost.  Because killing Emacs inadvertently can lose a lot of work, the @code{save-buffers-kill-terminal} command queries for confirmation if you have buffers that need saving or subprocesses that are running.  It also runs the abnormal hook @code{kill-emacs-query-functions}:"
msgstr ""

#. type: defopt
#: original_texis/os.texi:754
#, no-wrap
msgid "kill-emacs-query-functions"
msgstr ""

#. type: defopt
#: original_texis/os.texi:763
msgid "When @code{save-buffers-kill-terminal} is killing Emacs, it calls the functions in this hook, after asking the standard questions and before calling @code{kill-emacs}.  The functions are called in order of appearance, with no arguments.  Each function can ask for additional confirmation from the user.  If any of them returns @code{nil}, @code{save-buffers-kill-emacs} does not kill Emacs, and does not run the remaining functions in this hook.  Calling @code{kill-emacs} directly does not run this hook."
msgstr ""

#. type: deffn
#: original_texis/os.texi:765
#, no-wrap
msgid "Command restart-emacs"
msgstr ""

#. type: deffn
#: original_texis/os.texi:770
msgid "This command does the same as @code{save-buffers-kill-emacs}, but instead of just killing the current Emacs process at the end, it'll restart a new Emacs process, using the same command line arguments as the currently running Emacs process."
msgstr ""

#. type: cindex
#: original_texis/os.texi:774
#, no-wrap
msgid "suspending Emacs"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:783
msgid "On text terminals, it is possible to @dfn{suspend Emacs}, which means stopping Emacs temporarily and returning control to its superior process, which is usually the shell.  This allows you to resume editing later in the same Emacs process, with the same buffers, the same kill ring, the same undo history, and so on.  To resume Emacs, use the appropriate command in the parent shell---most likely @code{fg}."
msgstr ""

#. type: cindex
#: original_texis/os.texi:784
#, no-wrap
msgid "controlling terminal"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:791
msgid "Suspending works only on a terminal device from which the Emacs session was started.  We call that device the @dfn{controlling terminal} of the session.  Suspending is not allowed if the controlling terminal is a graphical terminal.  Suspending is usually not relevant in graphical environments, since you can simply switch to another application without doing anything special to Emacs."
msgstr ""

#. type: cindex
#: original_texis/os.texi:794
#, no-wrap
msgid "SIGTSTP"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:799
msgid "Some operating systems (those without @code{SIGTSTP}, or MS-DOS) do not support suspension of jobs; on these systems, suspension actually creates a new shell temporarily as a subprocess of Emacs.  Then you would exit the shell to return to Emacs."
msgstr ""

#. type: deffn
#: original_texis/os.texi:800
#, no-wrap
msgid "Command suspend-emacs &optional string"
msgstr ""

#. type: deffn
#: original_texis/os.texi:804
msgid "This function stops Emacs and returns control to the superior process.  If and when the superior process resumes Emacs, @code{suspend-emacs} returns @code{nil} to its caller in Lisp."
msgstr ""

#. type: deffn
#: original_texis/os.texi:811
msgid "This function works only on the controlling terminal of the Emacs session; to relinquish control of other tty devices, use @code{suspend-tty} (see below).  If the Emacs session uses more than one terminal, you must delete the frames on all the other terminals before suspending Emacs, or this function signals an error.  @xref{Multiple Terminals}."
msgstr ""

#. type: deffn
#: original_texis/os.texi:814
msgid "If @var{string} is non-@code{nil}, its characters are sent to Emacs's superior shell, to be read as terminal input."
msgstr ""

#. type: deffn
#: original_texis/os.texi:819
msgid "Before suspending, @code{suspend-emacs} runs the normal hook @code{suspend-hook}.  After the user resumes Emacs, @code{suspend-emacs} runs the normal hook @code{suspend-resume-hook}.  @xref{Hooks}."
msgstr ""

#. type: deffn
#: original_texis/os.texi:823
msgid "The next redisplay after resumption will redraw the entire screen, unless the variable @code{no-redraw-on-reenter} is non-@code{nil}.  @xref{Refresh Screen}."
msgstr ""

#. type: deffn
#: original_texis/os.texi:825
msgid "Here is an example of how you could use these hooks:"
msgstr ""

#. type: group
#: original_texis/os.texi:831
#, no-wrap
msgid ""
"(add-hook 'suspend-hook\n"
"          (lambda () (or (y-or-n-p \"Really suspend?\")\n"
"                         (error \"Suspend canceled\"))))\n"
msgstr ""

#. type: smallexample
#: original_texis/os.texi:834
#, no-wrap
msgid ""
"(add-hook 'suspend-resume-hook (lambda () (message \"Resumed!\")\n"
"                                 (sit-for 2)))\n"
msgstr ""

#. type: deffn
#: original_texis/os.texi:839
msgid "Here is what you would see upon evaluating @code{(suspend-emacs \"pwd\")}:"
msgstr ""

#. type: group
#: original_texis/os.texi:845
#, no-wrap
msgid ""
"---------- Buffer: Minibuffer ----------\n"
"Really suspend? @kbd{y}\n"
"---------- Buffer: Minibuffer ----------\n"
msgstr ""

#. type: group
#: original_texis/os.texi:852
#, no-wrap
msgid ""
"---------- Parent Shell ----------\n"
"bash$ pwd\n"
"/home/username\n"
"bash$ fg\n"
msgstr ""

#. type: group
#: original_texis/os.texi:857
#, no-wrap
msgid ""
"---------- Echo Area ----------\n"
"Resumed!\n"
msgstr ""

#. type: deffn
#: original_texis/os.texi:867
msgid "Note that on some operating systems, sending @var{string} to the Emacs parent shell might require special privileges, in which case it might silently fail to send @var{string} to the shell for execution.  On other systems this is not supported, and Emacs will signal an error if you try.  Also, @var{string} might not be echoed, even if it is executed by the shell.  So we don't recommend relying on this feature in portable Lisp programs."
msgstr ""

#. type: defvar
#: original_texis/os.texi:869
#, no-wrap
msgid "suspend-hook"
msgstr ""

#. type: defvar
#: original_texis/os.texi:871
msgid "This variable is a normal hook that Emacs runs before suspending."
msgstr ""

#. type: defvar
#: original_texis/os.texi:873
#, no-wrap
msgid "suspend-resume-hook"
msgstr ""

#. type: defvar
#: original_texis/os.texi:876
msgid "This variable is a normal hook that Emacs runs on resuming after a suspension."
msgstr ""

#. type: defun
#: original_texis/os.texi:878
#, no-wrap
msgid "suspend-tty &optional tty"
msgstr ""

#. type: defun
#: original_texis/os.texi:885
msgid "If @var{tty} specifies a terminal device used by Emacs, this function relinquishes the device and restores it to its prior state.  Frames that used the device continue to exist, but are not updated and Emacs doesn't read input from them.  @var{tty} can be a terminal object, a frame (meaning the terminal for that frame), or @code{nil} (meaning the terminal for the selected frame).  @xref{Multiple Terminals}."
msgstr ""

#. type: defun
#: original_texis/os.texi:887
msgid "If @var{tty} is already suspended, this function does nothing."
msgstr ""

#. type: vindex
#: original_texis/os.texi:888
#, no-wrap
msgid "suspend-tty-functions"
msgstr ""

#. type: defun
#: original_texis/os.texi:891
msgid "This function runs the hook @code{suspend-tty-functions}, passing the terminal object as an argument to each function."
msgstr ""

#. type: defun
#: original_texis/os.texi:893
#, no-wrap
msgid "resume-tty &optional tty"
msgstr ""

#. type: defun
#: original_texis/os.texi:897
msgid "This function resumes the previously suspended terminal device @var{tty}; where @var{tty} has the same possible values as it does for @code{suspend-tty}."
msgstr ""

#. type: vindex
#: original_texis/os.texi:898
#, no-wrap
msgid "resume-tty-functions"
msgstr ""

#. type: defun
#: original_texis/os.texi:903
msgid "This function reopens the terminal device, re-initializes it, and redraws it with that terminal's selected frame.  It then runs the hook @code{resume-tty-functions}, passing the terminal object as an argument to each function."
msgstr ""

#. type: defun
#: original_texis/os.texi:907
msgid "If the same device is already used by another Emacs terminal, this function signals an error.  If @var{tty} is not suspended, this function does nothing."
msgstr ""

#. type: defun
#: original_texis/os.texi:909
#, no-wrap
msgid "controlling-tty-p &optional tty"
msgstr ""

#. type: defun
#: original_texis/os.texi:914
msgid "This function returns non-@code{nil} if @var{tty} is the controlling terminal of the Emacs session; @var{tty} can be a terminal object, a frame (meaning the terminal for that frame), or @code{nil} (meaning the terminal for the selected frame)."
msgstr ""

#. type: deffn
#: original_texis/os.texi:916
#, no-wrap
msgid "Command suspend-frame"
msgstr ""

#. type: deffn
#: original_texis/os.texi:922
msgid "This command @dfn{suspends} a frame.  For GUI frames, it calls @code{iconify-frame} (@pxref{Visibility of Frames}); for frames on text terminals, it calls either @code{suspend-emacs} or @code{suspend-tty}, depending on whether the frame is displayed on the controlling terminal device or not."
msgstr ""

#. type: section
#: original_texis/os.texi:925
#, no-wrap
msgid "Operating System Environment"
msgstr ""

#. type: cindex
#: original_texis/os.texi:926
#, no-wrap
msgid "operating system environment"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:931
msgid "Emacs provides access to variables in the operating system environment through various functions.  These variables include the name of the system, the user's @acronym{UID}, and so on."
msgstr ""

#. type: defvar
#: original_texis/os.texi:932
#, no-wrap
msgid "system-configuration"
msgstr ""

#. type: defvar
#: original_texis/os.texi:937
msgid "This variable holds the standard GNU configuration name for the hardware/software configuration of your system, as a string.  For example, a typical value for a 64-bit GNU/Linux system is @samp{\"x86_64-unknown-linux-gnu\"}."
msgstr ""

#. type: cindex
#: original_texis/os.texi:939
#, no-wrap
msgid "system type and name"
msgstr ""

#. type: defvar
#: original_texis/os.texi:940
#, no-wrap
msgid "system-type"
msgstr ""

#. type: defvar
#: original_texis/os.texi:943
msgid "The value of this variable is a symbol indicating the type of operating system Emacs is running on.  The possible values are:"
msgstr ""

#. type: item
#: original_texis/os.texi:945
#, no-wrap
msgid "aix"
msgstr ""

#. type: table
#: original_texis/os.texi:947
msgid "IBM's AIX."
msgstr ""

#. type: item
#: original_texis/os.texi:948
#, no-wrap
msgid "berkeley-unix"
msgstr ""

#. type: table
#: original_texis/os.texi:950
msgid "Berkeley BSD and its variants."
msgstr ""

#. type: item
#: original_texis/os.texi:951
#, no-wrap
msgid "cygwin"
msgstr ""

#. type: table
#: original_texis/os.texi:953
msgid "Cygwin, a POSIX layer on top of MS-Windows."
msgstr ""

#. type: item
#: original_texis/os.texi:954
#, no-wrap
msgid "darwin"
msgstr ""

#. type: table
#: original_texis/os.texi:956
msgid "Darwin (macOS)."
msgstr ""

#. type: item
#: original_texis/os.texi:957
#, no-wrap
msgid "gnu"
msgstr ""

#. type: table
#: original_texis/os.texi:959
msgid "The GNU system (using the GNU kernel, which consists of the HURD and Mach)."
msgstr ""

#. type: item
#: original_texis/os.texi:960
#, no-wrap
msgid "gnu/linux"
msgstr ""

#. type: table
#: original_texis/os.texi:964
msgid "A GNU/Linux system---that is, a variant GNU system, using the Linux kernel.  (These systems are the ones people often call ``Linux'', but actually Linux is just the kernel, not the whole system.)"
msgstr ""

#. type: item
#: original_texis/os.texi:965
#, no-wrap
msgid "gnu/kfreebsd"
msgstr ""

#. type: table
#: original_texis/os.texi:967
msgid "A GNU (glibc-based) system with a FreeBSD kernel."
msgstr ""

#. type: item
#: original_texis/os.texi:968
#, no-wrap
msgid "haiku"
msgstr ""

#. type: table
#: original_texis/os.texi:970
msgid "The Haiku operating system, a derivative of the Be Operating System."
msgstr ""

#. type: item
#: original_texis/os.texi:971
#, no-wrap
msgid "hpux"
msgstr ""

#. type: table
#: original_texis/os.texi:973
msgid "Hewlett-Packard HPUX operating system."
msgstr ""

#. type: item
#: original_texis/os.texi:974
#, no-wrap
msgid "nacl"
msgstr ""

#. type: table
#: original_texis/os.texi:976
msgid "Google Native Client (@acronym{NaCl}) sandboxing system."
msgstr ""

#. type: item
#: original_texis/os.texi:977
#, no-wrap
msgid "android"
msgstr ""

#. type: table
#: original_texis/os.texi:979
msgid "The Open Handset Alliance's Android operating system."
msgstr ""

#. type: item
#: original_texis/os.texi:980
#, no-wrap
msgid "ms-dos"
msgstr ""

#. type: table
#: original_texis/os.texi:983
msgid "Microsoft's DOS@.  Emacs compiled with DJGPP for MS-DOS binds @code{system-type} to @code{ms-dos} even when you run it on MS-Windows."
msgstr ""

#. type: item
#: original_texis/os.texi:984
#, no-wrap
msgid "usg-unix-v"
msgstr ""

#. type: table
#: original_texis/os.texi:986
msgid "AT&T Unix System V."
msgstr ""

#. type: item
#: original_texis/os.texi:987
#, no-wrap
msgid "windows-nt"
msgstr ""

#. type: table
#: original_texis/os.texi:990
msgid "Microsoft Windows NT, 9X and later.  The value of @code{system-type} is always @code{windows-nt}, e.g., even on Windows 10."
msgstr ""

#. type: defvar
#: original_texis/os.texi:998
msgid "We do not wish to add new symbols to make finer distinctions unless it is absolutely necessary! In fact, we hope to eliminate some of these alternatives in the future.  If you need to make a finer distinction than @code{system-type} allows for, you can test @code{system-configuration}, e.g., against a regexp."
msgstr ""

#. type: defun
#: original_texis/os.texi:1000
#, no-wrap
msgid "system-name"
msgstr ""

#. type: defun
#: original_texis/os.texi:1003
msgid "This function returns the name of the machine you are running on, as a string."
msgstr ""

#. type: defopt
#: original_texis/os.texi:1006
#, no-wrap
msgid "mail-host-address"
msgstr ""

#. type: defopt
#: original_texis/os.texi:1011
msgid "If this variable is non-@code{nil}, it is used instead of @code{system-name} for purposes of generating email addresses.  For example, it is used when constructing the default value of @code{user-mail-address}.  @xref{User Identification}."
msgstr ""

#. type: deffn
#: original_texis/os.texi:1013
#, no-wrap
msgid "Command getenv var &optional frame"
msgstr ""

#. type: cindex
#: original_texis/os.texi:1014
#, no-wrap
msgid "environment variable access"
msgstr ""

#. type: deffn
#: original_texis/os.texi:1020
msgid "This function returns the value of the environment variable @var{var}, as a string.  @var{var} should be a string.  If @var{var} is undefined in the environment, @code{getenv} returns @code{nil}.  It returns @samp{\"\"} if @var{var} is set but null.  Within Emacs, a list of environment variables and their values is kept in the variable @code{process-environment}."
msgstr ""

#. type: group
#: original_texis/os.texi:1025
#, no-wrap
msgid ""
"(getenv \"USER\")\n"
"     @result{} \"lewis\"\n"
msgstr ""

#. type: deffn
#: original_texis/os.texi:1029
msgid "The shell command @code{printenv} prints all or part of the environment:"
msgstr ""

#. type: group
#: original_texis/os.texi:1035
#, no-wrap
msgid ""
"bash$ printenv\n"
"PATH=/usr/local/bin:/usr/bin:/bin\n"
"USER=lewis\n"
msgstr ""

#. type: group
#: original_texis/os.texi:1040
#, no-wrap
msgid ""
"TERM=xterm\n"
"SHELL=/bin/bash\n"
"HOME=/home/lewis\n"
msgstr ""

#. type: example
#: original_texis/os.texi:1042
#, no-wrap
msgid "@dots{}\n"
msgstr ""

#. type: deffn
#: original_texis/os.texi:1045
#, no-wrap
msgid "Command setenv variable &optional value substitute"
msgstr ""

#. type: deffn
#: original_texis/os.texi:1056
msgid "This command sets the value of the environment variable named @var{variable} to @var{value}.  @var{variable} should be a string.  Internally, Emacs Lisp can handle any string.  However, normally @var{variable} should be a valid shell identifier, that is, a sequence of letters, digits and underscores, starting with a letter or underscore.  Otherwise, errors may occur if subprocesses of Emacs try to access the value of @var{variable}.  If @var{value} is omitted or @code{nil} (or, interactively, with a prefix argument), @code{setenv} removes @var{variable} from the environment.  Otherwise, @var{value} should be a string."
msgstr ""

#. type: deffn
#: original_texis/os.texi:1061
msgid "If the optional argument @var{substitute} is non-@code{nil}, Emacs calls the function @code{substitute-env-vars} to expand any environment variables in @var{value}."
msgstr ""

#. type: deffn
#: original_texis/os.texi:1064
msgid "@code{setenv} works by modifying @code{process-environment}; binding that variable with @code{let} is also reasonable practice."
msgstr ""

#. type: deffn
#: original_texis/os.texi:1067
msgid "@code{setenv} returns the new value of @var{variable}, or @code{nil} if it removed @var{variable} from the environment."
msgstr ""

#. type: defmac
#: original_texis/os.texi:1069
#, no-wrap
msgid "with-environment-variables variables body@dots{}"
msgstr ""

#. type: defmac
#: original_texis/os.texi:1076
msgid "This macro sets the environment variables according to @var{variables} temporarily when executing @var{body}.  The previous values are restored when the form finishes.  The argument @var{variables} should be a list of pairs of strings of the form @w{@code{(@var{var} @var{value})}}, where @var{var} is the name of the environment variable and @var{value} is that variable's value."
msgstr ""

#. type: lisp
#: original_texis/os.texi:1081
#, no-wrap
msgid ""
"(with-environment-variables ((\"LANG\" \"C\")\n"
"                             (\"LANGUAGE\" \"en_US:en\"))\n"
"  (call-process \"ls\" nil t))\n"
msgstr ""

#. type: defvar
#: original_texis/os.texi:1084
#, no-wrap
msgid "process-environment"
msgstr ""

#. type: defvar
#: original_texis/os.texi:1088
msgid "This variable is a list of strings, each describing one environment variable.  The functions @code{getenv} and @code{setenv} work by means of this variable."
msgstr ""

#. type: group
#: original_texis/os.texi:1094
#, no-wrap
msgid ""
"process-environment\n"
"@result{} (\"PATH=/usr/local/bin:/usr/bin:/bin\"\n"
"    \"USER=lewis\"\n"
msgstr ""

#. type: group
#: original_texis/os.texi:1100
#, no-wrap
msgid ""
"    \"TERM=xterm\"\n"
"    \"SHELL=/bin/bash\"\n"
"    \"HOME=/home/lewis\"\n"
"    @dots{})\n"
msgstr ""

#. type: defvar
#: original_texis/os.texi:1106
msgid "If @code{process-environment} contains multiple elements that specify the same environment variable, the first of these elements specifies the variable, and the others are ignored."
msgstr ""

#. type: defvar
#: original_texis/os.texi:1108
#, no-wrap
msgid "initial-environment"
msgstr ""

#. type: defvar
#: original_texis/os.texi:1111
msgid "This variable holds the list of environment variables Emacs inherited from its parent process when Emacs started."
msgstr ""

#. type: defun
#: original_texis/os.texi:1113 original_texis/os.texi:1119
#, no-wrap
msgid "path-separator"
msgstr ""

#. type: defvar
#: original_texis/os.texi:1117
msgid "This variable holds a string that says which character separates directories in a search path (as found in an environment variable).  Its value is @code{\":\"} for Unix and GNU systems, and @code{\";\"} for MS systems."
msgstr ""

#. type: defun
#: original_texis/os.texi:1124
msgid "This function returns the connection-local value of variable @code{path-separator}.  That is @code{\";\"} for MS systems and a local @code{default-directory}, and @code{\":\"} for Unix and GNU systems, or a remote @code{default-directory}."
msgstr ""

#. type: defun
#: original_texis/os.texi:1126
#, no-wrap
msgid "parse-colon-path path"
msgstr ""

#. type: defun
#: original_texis/os.texi:1132
msgid "This function takes a search path string such as the value of the @env{PATH} environment variable, and splits it at the separators, returning a list of directories.  @code{nil} in this list means the current directory.  Although the function's name says ``colon'', it actually uses the value of variable @code{path-separator}."
msgstr ""

#. type: example
#: original_texis/os.texi:1136
#, no-wrap
msgid ""
"(parse-colon-path \":/foo:/bar\")\n"
"     @result{} (nil \"/foo/\" \"/bar/\")\n"
msgstr ""

#. type: defvar
#: original_texis/os.texi:1139
#, no-wrap
msgid "invocation-name"
msgstr ""

#. type: defvar
#: original_texis/os.texi:1142
msgid "This variable holds the program name under which Emacs was invoked.  The value is a string, and does not include a directory name."
msgstr ""

#. type: defvar
#: original_texis/os.texi:1144
#, no-wrap
msgid "invocation-directory"
msgstr ""

#. type: defvar
#: original_texis/os.texi:1148
msgid "This variable holds the directory in which the Emacs executable was located when it was run, or @code{nil} if that directory cannot be determined."
msgstr ""

#. type: defvar
#: original_texis/os.texi:1150
#, no-wrap
msgid "installation-directory"
msgstr ""

#. type: defvar
#: original_texis/os.texi:1157
msgid "If non-@code{nil}, this is a directory within which to look for the @file{lib-src} and @file{etc} subdirectories.  In an installed Emacs, it is normally @code{nil}.  It is non-@code{nil} when Emacs can't find those directories in their standard installed locations, but can find them in a directory related somehow to the one containing the Emacs executable (i.e., @code{invocation-directory})."
msgstr ""

#. type: defun
#: original_texis/os.texi:1159
#, no-wrap
msgid "load-average &optional use-float"
msgstr ""

#. type: defun
#: original_texis/os.texi:1163
msgid "This function returns the current 1-minute, 5-minute, and 15-minute system load averages, in a list.  The load average indicates the number of processes trying to run on the system."
msgstr ""

#. type: defun
#: original_texis/os.texi:1167
msgid "By default, the values are integers that are 100 times the system load averages, but if @var{use-float} is non-@code{nil}, then they are returned as floating-point numbers without multiplying by 100."
msgstr ""

#. type: defun
#: original_texis/os.texi:1173
msgid "If it is impossible to obtain the load average, this function signals an error.  On some platforms, access to load averages requires installing Emacs as setuid or setgid so that it can read kernel information, and that usually isn't advisable."
msgstr ""

#. type: defun
#: original_texis/os.texi:1177
msgid "If the 1-minute load average is available, but the 5- or 15-minute averages are not, this function returns a shortened list containing the available averages."
msgstr ""

#. type: group
#: original_texis/os.texi:1182
#, no-wrap
msgid ""
"(load-average)\n"
"     @result{} (169 48 36)\n"
msgstr ""

#. type: group
#: original_texis/os.texi:1186
#, no-wrap
msgid ""
"(load-average t)\n"
"     @result{} (1.69 0.48 0.36)\n"
msgstr ""

#. type: defun
#: original_texis/os.texi:1190
msgid "The shell command @code{uptime} returns similar information."
msgstr ""

#. type: defun
#: original_texis/os.texi:1192
#, no-wrap
msgid "emacs-pid"
msgstr ""

#. type: defun
#: original_texis/os.texi:1195
msgid "This function returns the process @acronym{ID} of the Emacs process, as an integer."
msgstr ""

#. type: defvar
#: original_texis/os.texi:1197
#, no-wrap
msgid "tty-erase-char"
msgstr ""

#. type: defvar
#: original_texis/os.texi:1202
msgid "This variable holds the erase character that was selected in the system's terminal driver, before Emacs was started."
msgstr ""

#. type: defun
#: original_texis/os.texi:1204 original_texis/os.texi:1210
#, no-wrap
msgid "null-device"
msgstr ""

#. type: defvar
#: original_texis/os.texi:1208
msgid "This variable holds the system null device.  Its value is @code{\"/dev/null\"} for Unix and GNU systems, and @code{\"NUL\"} for MS systems."
msgstr ""

#. type: defun
#: original_texis/os.texi:1215
msgid "This function returns the connection-local value of variable @code{null-device}.  That is @code{\"NUL\"} for MS systems and a local @code{default-directory}, and @code{\"/dev/null\"} for Unix and GNU systems, or a remote @code{default-directory}."
msgstr ""

#. type: cindex
#: original_texis/os.texi:1219
#, no-wrap
msgid "user identification"
msgstr ""

#. type: defvar
#: original_texis/os.texi:1221
#, no-wrap
msgid "init-file-user"
msgstr ""

#. type: defvar
#: original_texis/os.texi:1226
msgid "This variable says which user's init files should be used by Emacs---or @code{nil} if none.  @code{\"\"} stands for the user who originally logged in.  The value reflects command-line options such as @samp{-q} or @samp{-u @var{user}}."
msgstr ""

#. type: defvar
#: original_texis/os.texi:1233
msgid "Lisp packages that load files of customizations, or any other sort of user profile, should obey this variable in deciding where to find it.  They should load the profile of the user name found in this variable.  If @code{init-file-user} is @code{nil}, meaning that the @samp{-q}, @samp{-Q}, or @samp{-batch} option was used, then Lisp packages should not load any customization files or user profile."
msgstr ""

#. type: defopt
#: original_texis/os.texi:1235
#, no-wrap
msgid "user-mail-address"
msgstr ""

#. type: defopt
#: original_texis/os.texi:1237
msgid "This holds the email address of the user who is using Emacs."
msgstr ""

#. type: defun
#: original_texis/os.texi:1239
#, no-wrap
msgid "user-login-name &optional uid"
msgstr ""

#. type: defun
#: original_texis/os.texi:1244
msgid "This function returns the name under which the user is logged in.  It uses the environment variables @env{LOGNAME} or @env{USER} if either is set.  Otherwise, the value is based on the effective @acronym{UID}, not the real @acronym{UID}."
msgstr ""

#. type: defun
#: original_texis/os.texi:1247
msgid "If you specify @var{uid} (a number), the result is the user name that corresponds to @var{uid}, or @code{nil} if there is no such user."
msgstr ""

#. type: vindex
#: original_texis/os.texi:1249 original_texis/os.texi:1269
#, no-wrap
msgid "user-real-login-name"
msgstr ""

#. type: defun
#: original_texis/os.texi:1253
msgid "This function returns the user name corresponding to Emacs's real @acronym{UID}.  This ignores the effective @acronym{UID}, and the environment variables @env{LOGNAME} and @env{USER}."
msgstr ""

#. type: defun
#: original_texis/os.texi:1255
#, no-wrap
msgid "user-full-name &optional uid"
msgstr ""

#. type: defun
#: original_texis/os.texi:1258
msgid "This function returns the full name of the logged-in user---or the value of the environment variable @env{NAME}, if that is set."
msgstr ""

#. type: defun
#: original_texis/os.texi:1261
msgid "If the Emacs process's user-id does not correspond to any known user (and provided @env{NAME} is not set), the result is @code{\"unknown\"}."
msgstr ""

#. type: defun
#: original_texis/os.texi:1266
msgid "If @var{uid} is non-@code{nil}, then it should be a number (a user-id)  or a string (a login name).  Then @code{user-full-name} returns the full name corresponding to that user-id or login name.  If you specify a user-id or login name that isn't defined, it returns @code{nil}."
msgstr ""

#. type: vindex
#: original_texis/os.texi:1268
#, no-wrap
msgid "user-full-name"
msgstr ""

#. type: vindex
#: original_texis/os.texi:1270
#, no-wrap
msgid "user-login-name"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:1277
msgid "The symbols @code{user-login-name}, @code{user-real-login-name} and @code{user-full-name} are variables as well as functions.  The functions return the same values that the variables hold.  These variables allow you to fake out Emacs by telling the functions what to return.  The variables are also useful for constructing frame titles (@pxref{Frame Titles})."
msgstr ""

#. type: cindex
#: original_texis/os.texi:1278
#, no-wrap
msgid "UID"
msgstr ""

#. type: defun
#: original_texis/os.texi:1279
#, no-wrap
msgid "user-real-uid"
msgstr ""

#. type: defun
#: original_texis/os.texi:1281
msgid "This function returns the real @acronym{UID} of the user."
msgstr ""

#. type: defun
#: original_texis/os.texi:1283
#, no-wrap
msgid "user-uid"
msgstr ""

#. type: defun
#: original_texis/os.texi:1285
msgid "This function returns the effective @acronym{UID} of the user."
msgstr ""

#. type: defun
#: original_texis/os.texi:1287
#, no-wrap
msgid "file-user-uid"
msgstr ""

#. type: defun
#: original_texis/os.texi:1295
msgid "This function returns the connection-local value for the user's effective @acronym{UID}.  If @code{default-directory} is local, this is equivalent to @code{user-uid}, but for remote files (@pxref{Remote Files, , , emacs, The GNU Emacs Manual}), it will return the @acronym{UID} for the user associated with that remote connection; if the remote connection has no associated user, it will instead return -1."
msgstr ""

#. type: cindex
#: original_texis/os.texi:1297
#, no-wrap
msgid "GID"
msgstr ""

#. type: defun
#: original_texis/os.texi:1298
#, no-wrap
msgid "group-real-gid"
msgstr ""

#. type: defun
#: original_texis/os.texi:1300
msgid "This function returns the real @acronym{GID} of the Emacs process."
msgstr ""

#. type: defun
#: original_texis/os.texi:1302
#, no-wrap
msgid "group-gid"
msgstr ""

#. type: defun
#: original_texis/os.texi:1304
msgid "This function returns the effective @acronym{GID} of the Emacs process."
msgstr ""

#. type: defun
#: original_texis/os.texi:1306
#, no-wrap
msgid "file-group-gid"
msgstr ""

#. type: defun
#: original_texis/os.texi:1314
msgid "This function returns the connection-local value for the user's effective @acronym{GID}.  Similar to @code{file-user-uid}, if @code{default-directory} is local, this is equivalent to @code{group-gid}, but for remote files (@pxref{Remote Files, , , emacs, The GNU Emacs Manual}), it will return the @acronym{GID} for the user associated with that remote connection; if the remote connection has no associated user, it will instead return -1."
msgstr ""

#. type: defun
#: original_texis/os.texi:1316
#, no-wrap
msgid "system-users"
msgstr ""

#. type: defun
#: original_texis/os.texi:1320
msgid "This function returns a list of strings, listing the user names on the system.  If Emacs cannot retrieve this information, the return value is a list containing just the value of @code{user-real-login-name}."
msgstr ""

#. type: cindex
#: original_texis/os.texi:1322
#, no-wrap
msgid "user groups"
msgstr ""

#. type: defun
#: original_texis/os.texi:1323
#, no-wrap
msgid "system-groups"
msgstr ""

#. type: defun
#: original_texis/os.texi:1327
msgid "This function returns a list of strings, listing the names of user groups on the system.  If Emacs cannot retrieve this information, the return value is @code{nil}."
msgstr ""

#. type: defun
#: original_texis/os.texi:1329
#, no-wrap
msgid "group-name gid"
msgstr ""

#. type: defun
#: original_texis/os.texi:1332
msgid "This function returns the group name that corresponds to the numeric group ID @var{gid}, or @code{nil} if there is no such group."
msgstr ""

#. type: cindex
#: original_texis/os.texi:1337
#, no-wrap
msgid "time of day"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:1341
msgid "This section explains how to determine the current time and time zone."
msgstr ""

#. type: cindex
#: original_texis/os.texi:1342
#, no-wrap
msgid "Lisp timestamp"
msgstr ""

#. type: cindex
#: original_texis/os.texi:1343
#, no-wrap
msgid "timestamp, Lisp"
msgstr ""

#. type: cindex
#: original_texis/os.texi:1344
#, no-wrap
msgid "Coordinated Universal Time"
msgstr ""

#. type: cindex
#: original_texis/os.texi:1345
#, no-wrap
msgid "Universal Time"
msgstr ""

#. type: cindex
#: original_texis/os.texi:1346
#, no-wrap
msgid "UTC"
msgstr ""

#. type: cindex
#: original_texis/os.texi:1347
#, no-wrap
msgid "leap seconds"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:1354
msgid "Many functions like @code{current-time} and @code{file-attributes} return @dfn{Lisp timestamp} values that count seconds, and that can represent absolute time by counting seconds since the @dfn{epoch} of 1970-01-01 00:00:00 UTC (Coordinated Universal Time).  Typically these counts ignore leap seconds; however, GNU and some other operating systems can be configured to count leap seconds."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:1360
msgid "Although traditionally Lisp timestamps were integer pairs, their form has evolved and programs ordinarily should not depend on the current default form.  If your program needs a particular timestamp form, you can use the @code{time-convert} function to convert it to the needed form.  @xref{Time Conversion}."
msgstr ""

#. type: cindex
#: original_texis/os.texi:1361
#, no-wrap
msgid "epoch"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:1364
msgid "There are currently three forms of Lisp timestamps, each of which represents a number of seconds:"
msgstr ""

#. type: itemize
#: original_texis/os.texi:1369
msgid "An integer.  Although this is the simplest form, it cannot represent subsecond timestamps."
msgstr ""

#. type: itemize
#: original_texis/os.texi:1376
msgid "A pair of integers @code{(@var{ticks} . @var{hz})}, where @var{hz} is positive.  This represents @var{ticks}/@var{hz} seconds, which is the same time as plain @var{ticks} if @var{hz} is 1.  A common value for @var{hz} is 1000000000, for a nanosecond-resolution clock."
msgstr ""

#. type: itemize
#: original_texis/os.texi:1382
msgid "A list of four integers @code{(@var{high} @var{low} @var{micro} @var{pico})}, where 0@leq{}@var{low}<65536, 0@leq{}@var{micro}<1000000, and 0@leq{}@var{pico}<1000000.  This represents the number of seconds using the formula:"
msgstr ""

#. type: ifnottex
#: original_texis/os.texi:1385
msgid "@var{high} * 2**16 + @var{low} + @var{micro} * 10**@minus{}6 + @var{pico} * 10**@minus{}12."
msgstr ""

#. type: tex
#: original_texis/os.texi:1388
#, no-wrap
msgid "$high \\times 2^{16} + low + micro \\times 10^{-6} + pico \\times 10^{-12}$.\n"
msgstr ""

#. type: itemize
#: original_texis/os.texi:1395
msgid "If @code{current-time-list} is @code{t}, some functions may default to returning two- or three-element lists, with omitted @var{micro} and @var{pico} components defaulting to zero.  On all current machines @var{pico} is a multiple of 1000, but this may change as higher-resolution clocks become available."
msgstr ""

#. type: cindex
#: original_texis/os.texi:1397
#, no-wrap
msgid "time value"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:1405
msgid "Function arguments, e.g., the @var{time} argument to @code{format-time-string}, accept a more-general @dfn{time value} format, which can be a Lisp timestamp, @code{nil} for the current time, a finite floating-point number for seconds, or a list @code{(@var{high} @var{low} @var{micro})} or @code{(@var{high} @var{low})} that is a truncated list timestamp with missing elements taken to be zero."
msgstr ""

#. type: cindex
#: original_texis/os.texi:1406
#, no-wrap
msgid "Specified time is not representable"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:1418
msgid "Time values can be converted to and from calendrical and other forms.  Some of these conversions rely on operating system functions that limit the range of possible time values, and signal an error such as @samp{\"Specified time is not representable\"} if the limits are exceeded.  For instance, a system might not support timestamps before the epoch, or years far in the future.  You can convert a time value into a human-readable string using @code{format-time-string}, into a Lisp timestamp using @code{time-convert}, and into other forms using @code{decode-time} and @code{float-time}.  These functions are described in the following sections."
msgstr ""

#. type: defun
#: original_texis/os.texi:1419
#, no-wrap
msgid "current-time-string &optional time zone"
msgstr ""

#. type: defun
#: original_texis/os.texi:1430
msgid "This function returns the current time and date as a human-readable string.  The format does not vary for the initial part of the string, which contains the day of week, month, day of month, and time of day in that order: the number of characters used for these fields is always the same, although (unless you require English weekday or month abbreviations regardless of locale) it is typically more convenient to use @code{format-time-string} than to extract fields from the output of @code{current-time-string}, as the year might not have exactly four digits, and additional information may some day be added at the end."
msgstr ""

#. type: defun
#: original_texis/os.texi:1435
msgid "The argument @var{time}, if given, specifies a time to format, instead of the current time.  The optional argument @var{zone} defaults to the current time zone rule.  @xref{Time Zone Rules}.  The operating system limits the range of time and zone values."
msgstr ""

#. type: group
#: original_texis/os.texi:1440
#, no-wrap
msgid ""
"(current-time-string)\n"
"     @result{} \"Fri Nov @ 1 15:59:49 2019\"\n"
msgstr ""

#. type: defvar
#: original_texis/os.texi:1444
#, no-wrap
msgid "current-time-list"
msgstr ""

#. type: defvar
#: original_texis/os.texi:1454
msgid "This boolean variable is a transition aid.  If @code{t}, @code{current-time} and related functions return timestamps in list form, typically @code{(@var{high} @var{low} @var{micro} @var{pico})}; otherwise, they use @code{(@var{ticks} . @var{hz})} form.  Currently this variable defaults to @code{t}, for behavior compatible with previous Emacs versions.  Developers are encouraged to test timestamp-related code with this variable set to @code{nil}, as it will default to @code{nil} in a future Emacs version, and will be removed in some version after that."
msgstr ""

#. type: defun
#: original_texis/os.texi:1456
#, no-wrap
msgid "current-time"
msgstr ""

#. type: defun
#: original_texis/os.texi:1466
msgid "This function returns the current time as a Lisp timestamp.  If @code{current-time-list} is @code{nil}, the timestamp has the form @code{(@var{ticks} . @var{hz})} where @var{ticks} counts clock ticks and @var{hz} is the clock ticks per second.  Otherwise, the timestamp has the list form @code{(@var{high} @var{low} @var{usec} @var{psec})}.  You can use @code{(time-convert nil t)} or @code{(time-convert nil 'list)} to obtain a particular form regardless of the value of @code{current-time-list}.  @xref{Time Conversion}."
msgstr ""

#. type: defun
#: original_texis/os.texi:1468
#, no-wrap
msgid "float-time &optional time"
msgstr ""

#. type: defun
#: original_texis/os.texi:1472
msgid "This function returns the current time as a floating-point number of seconds since the epoch.  The optional argument @var{time}, if given, specifies a time to convert instead of the current time."
msgstr ""

#. type: defun
#: original_texis/os.texi:1477
msgid "@emph{Warning}: Since the result is floating point, it may not be exact.  Do not use this function if precise time stamps are required.  For example, on typical systems @code{(float-time '(1 . 10))} displays as @samp{0.1} but is slightly greater than 1/10."
msgstr ""

#. type: defun
#: original_texis/os.texi:1479
msgid "@code{time-to-seconds} is an alias for this function."
msgstr ""

#. type: defun
#: original_texis/os.texi:1481
#, no-wrap
msgid "current-cpu-time"
msgstr ""

#. type: defun
#: original_texis/os.texi:1486
msgid "Return the current @acronym{CPU} time along with its resolution.  The return value is a pair @code{(CPU-TICKS . TICKS-PER-SEC)}.  The @var{CPU-TICKS} counter can wrap around, so values cannot be meaningfully compared if too much time has passed between them."
msgstr ""

#. type: cindex
#: original_texis/os.texi:1490
#, no-wrap
msgid "time zone rules"
msgstr ""

#. type: vindex
#: original_texis/os.texi:1492
#, no-wrap
msgid "TZ@r{, environment variable}"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:1498
msgid "The default time zone is determined by the @env{TZ} environment variable.  @xref{System Environment}.  For example, you can tell Emacs to default to Universal Time with @code{(setenv \"TZ\" \"UTC0\")}.  If @env{TZ} is not in the environment, Emacs uses system wall clock time, which is a platform-dependent default time zone."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:1507
msgid "The set of supported @env{TZ} strings is system-dependent.  GNU and many other systems support TZDB timezones, e.g., @samp{\"America/New_York\"} specifies the time zone and daylight saving time history for locations near New York City.  GNU and most other systems support POSIX-style @env{TZ} strings, e.g., @samp{\"EST5EDT,M4.1.0,M10.5.0\"} specifies the rules used in New York from 1987 through 2006.  All systems support the string @samp{\"UTC0\"} meaning Universal Time."
msgstr ""

#. type: cindex
#: original_texis/os.texi:1508
#, no-wrap
msgid "time zone rule"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:1523
msgid "Functions that convert to and from local time accept an optional @dfn{time zone rule} argument, which specifies the conversion's time zone and daylight saving time history.  If the time zone rule is omitted or @code{nil}, the conversion uses Emacs's default time zone.  If it is @code{t}, the conversion uses Universal Time.  If it is @code{wall}, the conversion uses the system wall clock time.  If it is a string, the conversion uses the time zone rule equivalent to setting @env{TZ} to that string.  If it is a list (@var{offset} @var{abbr}), where @var{offset} is an integer number of seconds east of Universal Time and @var{abbr} is a string, the conversion uses a fixed time zone with the given offset and abbreviation.  An integer @var{offset} is treated as if it were (@var{offset} @var{abbr}), where @var{abbr} is a numeric abbreviation on POSIX-compatible platforms and is unspecified on MS-Windows."
msgstr ""

#. type: defun
#: original_texis/os.texi:1524
#, no-wrap
msgid "current-time-zone &optional time zone"
msgstr ""

#. type: cindex
#: original_texis/os.texi:1525
#, no-wrap
msgid "time zone, current"
msgstr ""

#. type: defun
#: original_texis/os.texi:1528
msgid "This function returns a list describing the time zone that the user is in."
msgstr ""

#. type: defun
#: original_texis/os.texi:1538
msgid "The value has the form @code{(@var{offset} @var{abbr})}.  Here @var{offset} is an integer giving the number of seconds ahead of Universal Time (east of Greenwich).  A negative value means west of Greenwich.  The second element, @var{abbr}, is a string giving an abbreviation for the time zone, e.g., @samp{\"CST\"} for China Standard Time or for U.S. Central Standard Time.  Both elements can change when daylight saving time begins or ends; if the user has specified a time zone that does not use a seasonal time adjustment, then the value is constant through time."
msgstr ""

#. type: defun
#: original_texis/os.texi:1541
msgid "If the operating system doesn't supply all the information necessary to compute the value, the unknown elements of the list are @code{nil}."
msgstr ""

#. type: defun
#: original_texis/os.texi:1546
msgid "The argument @var{time}, if given, specifies a time value to analyze instead of the current time.  The optional argument @var{zone} defaults to the current time zone rule.  The operating system limits the range of time and zone values."
msgstr ""

#. type: cindex
#: original_texis/os.texi:1550
#, no-wrap
msgid "calendrical information"
msgstr ""

#. type: cindex
#: original_texis/os.texi:1551
#, no-wrap
msgid "time conversion"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:1555
msgid "These functions convert time values (@pxref{Time of Day}) to Lisp timestamps, or into calendrical information and vice versa."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:1561
msgid "Many operating systems use 64-bit signed integers to count seconds, and can represent times far in the past or future.  However, some are more limited.  For example, old-fashioned operating systems that use 32-bit signed integers typically handle only times from 1901-12-13 20:45:52 through 2038-01-19 03:14:07 Universal Time."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:1570
msgid "Calendrical conversion functions use the Gregorian calendar even for dates before the Gregorian calendar was introduced, and for dates in the far distant past or future for which the Gregorian calendar is wildly inaccurate and disagrees with common practice in scientific fields like astronomy and paleontology, which use Julian-calendar year lengths.  Year numbers count since the year 1 BCE, and do not skip zero as traditional Gregorian years do; for example, the year number @minus{}37 represents the Gregorian year 38 BCE@."
msgstr ""

#. type: defun
#: original_texis/os.texi:1571
#, no-wrap
msgid "time-convert time form"
msgstr ""

#. type: defun
#: original_texis/os.texi:1573
msgid "This function converts a time value into a Lisp timestamp."
msgstr ""

#. type: defun
#: original_texis/os.texi:1587
msgid "The @var{form} argument specifies the timestamp form to be returned.  If @var{form} is the symbol @code{integer}, this function returns an integer count of seconds.  If @var{form} is a positive integer, it specifies a clock frequency and this function returns an integer-pair timestamp @code{(@var{ticks} . @var{form})}.  If @var{form} is @code{t}, this function treats it as a positive integer suitable for representing the timestamp; for example, it is treated as 1000000000 if @var{time} is @code{nil} and the platform timestamp has nanosecond resolution.  If @var{form} is @code{list}, this function returns an integer list @code{(@var{high} @var{low} @var{micro} @var{pico})}.  Although a @code{nil} @var{form} currently acts like @code{list}, this is planned to change in a future Emacs version, so callers requiring list timestamps should pass @code{list} explicitly."
msgstr ""

#. type: defun
#: original_texis/os.texi:1596
msgid "If @var{time} is not a time value, this function signals an error.  Otherwise, if @var{time} cannot be represented exactly, conversion truncates it toward minus infinity.  When @var{form} is @code{t}, conversion is always exact so no truncation occurs, and the returned clock resolution is no less than that of @var{time}.  By way of contrast, although @code{float-time} can also convert any time value without signaling an error, the result might not be exact.  @xref{Time of Day}."
msgstr ""

#. type: defun
#: original_texis/os.texi:1599
msgid "For efficiency this function might return a value that is @code{eq} to @var{time}, or that otherwise shares structure with @var{time}."
msgstr ""

#. type: defun
#: original_texis/os.texi:1602
msgid "Although @code{(time-convert nil nil)} is equivalent to @code{(current-time)}, the latter may be a bit faster."
msgstr ""

#. type: group
#: original_texis/os.texi:1607
#, no-wrap
msgid ""
"(setq a (time-convert nil t))\n"
"@result{} (1564826753904873156 . 1000000000)\n"
msgstr ""

#. type: group
#: original_texis/os.texi:1611
#, no-wrap
msgid ""
"(time-convert a 100000)\n"
"@result{} (156482675390487 . 100000)\n"
msgstr ""

#. type: group
#: original_texis/os.texi:1615
#, no-wrap
msgid ""
"(time-convert a 'integer)\n"
"@result{} 1564826753\n"
msgstr ""

#. type: group
#: original_texis/os.texi:1619
#, no-wrap
msgid ""
"(time-convert a 'list)\n"
"@result{} (23877 23681 904873 156000)\n"
msgstr ""

#. type: defun
#: original_texis/os.texi:1623
#, no-wrap
msgid "decode-time &optional time zone form"
msgstr ""

#. type: defun
#: original_texis/os.texi:1628
msgid "This function converts a time value into calendrical information.  If you don't specify @var{time}, it decodes the current time, and similarly @var{zone} defaults to the current time zone rule.  @xref{Time Zone Rules}.  The operating system limits the range of time and zone values."
msgstr ""

#. type: defun
#: original_texis/os.texi:1632
msgid "The @var{form} argument controls the form of the returned @var{seconds} element, as described below.  The return value is a list of nine elements, as follows:"
msgstr ""

#. type: example
#: original_texis/os.texi:1635
#, no-wrap
msgid "(@var{seconds} @var{minutes} @var{hour} @var{day} @var{month} @var{year} @var{dow} @var{dst} @var{utcoff})\n"
msgstr ""

#. type: defun
#: original_texis/os.texi:1638
msgid "Here is what the elements mean:"
msgstr ""

#. type: item
#: original_texis/os.texi:1640
#, no-wrap
msgid "seconds"
msgstr ""

#. type: table
#: original_texis/os.texi:1642
msgid "The number of seconds past the minute, with form described below."
msgstr ""

#. type: item
#: original_texis/os.texi:1642
#, no-wrap
msgid "minutes"
msgstr ""

#. type: table
#: original_texis/os.texi:1644
msgid "The number of minutes past the hour, as an integer between 0 and 59."
msgstr ""

#. type: item
#: original_texis/os.texi:1644
#, no-wrap
msgid "hour"
msgstr ""

#. type: table
#: original_texis/os.texi:1646
msgid "The hour of the day, as an integer between 0 and 23."
msgstr ""

#. type: item
#: original_texis/os.texi:1646
#, no-wrap
msgid "day"
msgstr ""

#. type: table
#: original_texis/os.texi:1648
msgid "The day of the month, as an integer between 1 and 31."
msgstr ""

#. type: item
#: original_texis/os.texi:1648
#, no-wrap
msgid "month"
msgstr ""

#. type: table
#: original_texis/os.texi:1650
msgid "The month of the year, as an integer between 1 and 12."
msgstr ""

#. type: item
#: original_texis/os.texi:1650
#, no-wrap
msgid "year"
msgstr ""

#. type: table
#: original_texis/os.texi:1652
msgid "The year, an integer typically greater than 1900."
msgstr ""

#. type: item
#: original_texis/os.texi:1652
#, no-wrap
msgid "dow"
msgstr ""

#. type: table
#: original_texis/os.texi:1655
msgid "The day of week, as an integer between 0 and 6, where 0 stands for Sunday."
msgstr ""

#. type: item
#: original_texis/os.texi:1655
#, no-wrap
msgid "dst"
msgstr ""

#. type: table
#: original_texis/os.texi:1658
msgid "@code{t} if daylight saving time is effect, @code{nil} if it is not in effect, and @minus{}1 if this information is not available."
msgstr ""

#. type: item
#: original_texis/os.texi:1658
#, no-wrap
msgid "utcoff"
msgstr ""

#. type: table
#: original_texis/os.texi:1661
msgid "An integer indicating the Universal Time offset in seconds, i.e., the number of seconds east of Greenwich."
msgstr ""

#. type: defun
#: original_texis/os.texi:1677
msgid "The @var{seconds} element is a Lisp timestamp that is nonnegative and less than 61; it is less than 60 except during positive leap seconds (assuming the operating system supports leap seconds).  If the optional @var{form} argument is @code{t}, @var{seconds} uses the same precision as @var{time}; if @var{form} is @code{integer}, @var{seconds} is truncated to an integer.  For example, if @var{time} is the timestamp @code{(1566009571321 . 1000)}, which represents 2019-08-17 02:39:31.321 UTC on typical systems that lack leap seconds, then @code{(decode-time @var{time} t t)} returns @code{((31321 . 1000)  39 2 17 8 2019 6 nil 0)}, whereas @code{(decode-time @var{time} t 'integer)} returns @code{(31 39 2 17 8 2019 6 nil 0)}.  If @var{form} is omitted or @code{nil}, it currently defaults to @code{integer} but this default may change in future Emacs releases, so callers requiring a particular form should specify @var{form}."
msgstr ""

#. type: defun
#: original_texis/os.texi:1681
msgid "@strong{Common Lisp Note:} Common Lisp has different meanings for @var{dow}, @code{dst} and @var{utcoff}, and its @var{second} is an integer between 0 and 59 inclusive."
msgstr ""

#. type: defun
#: original_texis/os.texi:1688
msgid "To access (or alter) the elements in the calendrical information, the @code{decoded-time-second}, @code{decoded-time-minute}, @code{decoded-time-hour}, @code{decoded-time-day}, @code{decoded-time-month}, @code{decoded-time-year}, @code{decoded-time-weekday}, @code{decoded-time-dst} and @code{decoded-time-zone} accessors can be used."
msgstr ""

#. type: defun
#: original_texis/os.texi:1690
#, no-wrap
msgid "encode-time time &rest obsolescent-arguments"
msgstr ""

#. type: defun
#: original_texis/os.texi:1693
msgid "This function converts @var{time} to a Lisp timestamp.  It can act as the inverse of @code{decode-time}."
msgstr ""

#. type: defun
#: original_texis/os.texi:1712
msgid "Ordinarily the first argument is a list @code{(@var{second} @var{minute} @var{hour} @var{day} @var{month} @var{year} @var{ignored} @var{dst} @var{zone})} that specifies a decoded time in the style of @code{decode-time}.  For the meanings of these list elements, see the table under @code{decode-time}.  In particular, @var{dst} says how to interpret timestamps during a daylight saving fallback when timestamps are repeated.  If @var{dst} is @minus{}1, the DST value is guessed; if it is @code{t} or @code{nil} the timestamp with that DST value is returned, with an error signaled if no such timestamp exists.  Unfortunately a @var{dst} value of @code{t} or @code{nil} does not disambiguate timestamps duplicated when a TZDB-based timezone moves further west of Greenwich, such as disambiguating the two standard-time timestamps 2020-12-27 01:30 when @var{zone} is @samp{\"Europe/Volgograd\"}, which at 02:00 that day changed standard time from 4 to 3 hours east of Greenwich; if you need to handle situations like this you can use a numeric @var{zone} to disambiguate instead."
msgstr ""

#. type: defun
#: original_texis/os.texi:1717
msgid "The first argument can also be a list @code{(@var{second} @var{minute} @var{hour} @var{day} @var{month} @var{year})}, which is treated like the list @code{(@var{second} @var{minute} @var{hour} @var{day} @var{month} @var{year} nil -1 nil)}."
msgstr ""

#. type: defun
#: original_texis/os.texi:1730
msgid "As an obsolescent calling convention, this function can be given six or more arguments.  The first six arguments @var{second}, @var{minute}, @var{hour}, @var{day}, @var{month}, and @var{year} specify most of the components of a decoded time.  If there are more than six arguments the @emph{last} argument is used as @var{zone} and any other extra arguments are ignored, so that @code{(apply #'encode-time (decode-time ...))} works.  In this obsolescent convention, @var{dst} is @minus{}1 and @var{zone} defaults to the current time zone rule (@pxref{Time Zone Rules}).  When modernizing an obsolescent caller, ensure that the more-modern list equivalent contains 9 elements with a @code{dst} element that is @minus{}1, not @code{nil}."
msgstr ""

#. type: defun
#: original_texis/os.texi:1737
msgid "Year numbers less than 100 are not treated specially.  If you want them to stand for years above 1900, or years above 2000, you must alter them yourself before you call @code{encode-time}.  The operating system limits the range of time and zone values.  However, timestamps ranging from the epoch to the near future are always supported."
msgstr ""

#. type: defun
#: original_texis/os.texi:1741
msgid "The @code{encode-time} function acts as a rough inverse to @code{decode-time}.  For example, you can pass the output of the latter to the former as follows:"
msgstr ""

#. type: example
#: original_texis/os.texi:1744
#, no-wrap
msgid "(encode-time (decode-time @dots{}))\n"
msgstr ""

#. type: defun
#: original_texis/os.texi:1751
msgid "You can perform simple date arithmetic by using out-of-range values for @var{seconds}, @var{minutes}, @var{hour}, @var{day}, and @var{month}; for example, day 0 means the day preceding the given month.  Take care when doing so, as it is common for this to fail in some cases.  For example:"
msgstr ""

#. type: lisp
#: original_texis/os.texi:1759
#, no-wrap
msgid ""
";; Try to compute the time one month from now.\n"
";; Watch out; this might not work as expected.\n"
"(let ((time (decode-time)))\n"
"  (setf (decoded-time-month time)\n"
"        (+ (decoded-time-month time) 1))\n"
"  time)\n"
msgstr ""

#. type: defun
#: original_texis/os.texi:1776
msgid "Unfortunately, this code might not work as expected if the resulting time is invalid due to month length differences, daylight saving transitions, time zone changes, or missing leap days or leap seconds.  For example, if executed on January 30 this code yields a nonexistent date February 30, which @code{encode-time} would adjust to early March.  Similarly, adding four years to February 29, 2096 would yield the nonexistent date February 29, 2100; and adding one hour to 01:30 on March 13, 2022 in New York would yield a timestamp 02:30 that does not exist because clocks sprang forward from 02:00 to 03:00 that day.  To avoid some (though not all) of the problem, you can base calculations on the middle of the affected unit, e.g., start at the 15th of the month when adding months.  Alternatively, you can use the @file{calendar} and @file{time-date} libraries."
msgstr ""

#. type: section
#: original_texis/os.texi:1779
#, no-wrap
msgid "Parsing and Formatting Times"
msgstr ""

#. type: cindex
#: original_texis/os.texi:1780
#, no-wrap
msgid "time parsing"
msgstr ""

#. type: cindex
#: original_texis/os.texi:1781
#, no-wrap
msgid "time formatting"
msgstr ""

#. type: cindex
#: original_texis/os.texi:1782
#, no-wrap
msgid "formatting time values"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:1788
msgid "These functions convert time values to text in a string, and vice versa.  Time values are either represented as a Lisp timestamp (@pxref{Time of Day}) or a decoded time structure (@pxref{Time Conversion})."
msgstr ""

#. type: defun
#: original_texis/os.texi:1789
#, no-wrap
msgid "date-to-time string"
msgstr ""

#. type: defun
#: original_texis/os.texi:1797
msgid "This function parses the time-string @var{string} and returns the corresponding Lisp timestamp.  The argument @var{string} should represent a date-time, and should be in one of the forms recognized by @code{parse-time-string} (see below).  This function assumes Universal Time if @var{string} lacks explicit time zone information, and assumes earliest values if @var{string} lacks month, day, or time.  The operating system limits the range of time and zone values."
msgstr ""

#. type: defun
#: original_texis/os.texi:1799
#, no-wrap
msgid "parse-time-string string"
msgstr ""

#. type: defun
#: original_texis/os.texi:1805
msgid "This function parses the time-string @var{string} into a decoded time structure (@pxref{Time Conversion}).  The argument @var{string} should resemble an RFC 822 (or later) or ISO 8601 string, like ``Fri, 25 Mar 2016 16:24:56 +0100'' or ``1998-09-12T12:21:54-0200'', but this function will attempt to parse less well-formed time strings as well."
msgstr ""

#. type: defun
#: original_texis/os.texi:1817
msgid "Note that, unlike @code{decode-time} (@pxref{Time Conversion}), this function does not interpret the time string, and in particular the values of daylight-saving and timezone or UTC offset parts of the @var{string} argument do not affect the returned value of date and time, they only affect the last two members of the returned decoded time structure.  For example, if the time-zone information is present in @var{string}, the decoded time structure will include it; otherwise the time-zone member of the returned value will be @code{nil}.  In other words, this function simply parses the textual representation of date and time into separate numerical values, and doesn't care whether the input time is local or UTC."
msgstr ""

#. type: defun
#: original_texis/os.texi:1823
msgid "If a Lisp program passes the return value of this function to some other time-related API, it should make sure the @code{nil} members of the decoded time structure are interpreted correctly, and in particular the lack of time-zone information is interpreted as UTC or local time, according to the needs of the calling program."
msgstr ""

#. type: vindex
#: original_texis/os.texi:1825
#, no-wrap
msgid "ISO 8601 date/time strings"
msgstr ""

#. type: defun
#: original_texis/os.texi:1826
#, no-wrap
msgid "iso8601-parse string"
msgstr ""

#. type: defun
#: original_texis/os.texi:1836
msgid "For a more strict function (that will error out upon invalid input), Lisp programs can use this function instead.  It can parse all variants of the ISO 8601 standard, so in addition to the formats mentioned above, it also parses things like ``1998W45-3'' (week number) and ``1998-245'' (ordinal day number).  To parse durations, there's @code{iso8601-parse-duration}, and to parse intervals, there's @code{iso8601-parse-interval}.  All these functions return decoded time structures, except the final one, which returns three of them (the start, the end, and the duration)."
msgstr ""

#. type: defun
#: original_texis/os.texi:1850
msgid "Like @code{parse-time-string}, this function does not interpret the time string, and in particular the time-zone designator or UTC offset that is part of the @var{string} argument does not affect the returned value of date and time, it only affects the last two members of the returned decoded time structure.  The ISO 8601 standard specifies that date/time strings that do not include information about UTC relation are assumed to be in local time, but this function does not do that, because it doesn't interpret the time values.  For example, if the time-zone information is present in @var{string}, the decoded time structure will include it; otherwise the time-zone member of the returned value will be @code{nil}.  In other words, this function simply parses the textual representation of date and time into separate numerical values, and doesn't care whether the input time is local or UTC."
msgstr ""

#. type: defun
#: original_texis/os.texi:1852
#, no-wrap
msgid "format-time-string format-string &optional time zone"
msgstr ""

#. type: defun
#: original_texis/os.texi:1861
msgid "This function converts @var{time} (which should be a Lisp timestamp, and defaults to the current time if @var{time} is omitted or @code{nil}) to a string according to @var{format-string}.  The conversion uses the time zone rule @var{zone}, which defaults to the current time zone rule.  @xref{Time Zone Rules}.  The argument @var{format-string} may contain @samp{%}-sequences which say to substitute parts of the time.  Here is a table of what the @samp{%}-sequences mean:"
msgstr ""

#. type: item
#: original_texis/os.texi:1863
#, no-wrap
msgid "%a"
msgstr ""

#. type: table
#: original_texis/os.texi:1865
msgid "This stands for the abbreviated name of the day of week."
msgstr ""

#. type: item
#: original_texis/os.texi:1865
#, no-wrap
msgid "%A"
msgstr ""

#. type: table
#: original_texis/os.texi:1867
msgid "This stands for the full name of the day of week."
msgstr ""

#. type: item
#: original_texis/os.texi:1867
#, no-wrap
msgid "%b"
msgstr ""

#. type: table
#: original_texis/os.texi:1869
msgid "This stands for the abbreviated name of the month."
msgstr ""

#. type: item
#: original_texis/os.texi:1869
#, no-wrap
msgid "%B"
msgstr ""

#. type: table
#: original_texis/os.texi:1871
msgid "This stands for the full name of the month."
msgstr ""

#. type: item
#: original_texis/os.texi:1871
#, no-wrap
msgid "%c"
msgstr ""

#. type: table
#: original_texis/os.texi:1873
msgid "This is a synonym for @samp{%x %X}."
msgstr ""

#. type: item
#: original_texis/os.texi:1873
#, no-wrap
msgid "%C"
msgstr ""

#. type: table
#: original_texis/os.texi:1877
msgid "This stands for the century, that is, the year divided by 100, truncated toward zero.  The default field width is 2."
msgstr ""

#. type: item
#: original_texis/os.texi:1877 original_texis/os.texi:2027
#, no-wrap
msgid "%d"
msgstr ""

#. type: table
#: original_texis/os.texi:1879
msgid "This stands for the day of month, zero-padded."
msgstr ""

#. type: itemx
#: original_texis/os.texi:1879 original_texis/os.texi:2028
#, no-wrap
msgid "%D"
msgstr ""

#. type: table
#: original_texis/os.texi:1881
msgid "This is a synonym for @samp{%m/%d/%y}."
msgstr ""

#. type: item
#: original_texis/os.texi:1881
#, no-wrap
msgid "%e"
msgstr ""

#. type: table
#: original_texis/os.texi:1883
msgid "This stands for the day of month, blank-padded."
msgstr ""

#. type: item
#: original_texis/os.texi:1883
#, no-wrap
msgid "%F"
msgstr ""

#. type: table
#: original_texis/os.texi:1887
msgid "This stands for the ISO 8601 date format, which is like @samp{%+4Y-%m-%d} except that any flags or field width override the @samp{+} and (after subtracting 6) the @samp{4}."
msgstr ""

#. type: item
#: original_texis/os.texi:1887
#, no-wrap
msgid "%g"
msgstr ""

#. type: cindex
#: original_texis/os.texi:1888
#, no-wrap
msgid "ISO week, in time formatting"
msgstr ""

#. type: table
#: original_texis/os.texi:1895
msgid "This stands for the year without century (00--99) corresponding to the current @dfn{ISO week} number.  ISO weeks start on Monday and end on Sunday.  If an ISO week begins in one year and ends in another, the rules regarding which year @samp{%g} will produce are complex and will not be described here; however, in general, if most of the week's days are in the ending year, @samp{%g} will produce that year."
msgstr ""

#. type: item
#: original_texis/os.texi:1895
#, no-wrap
msgid "%G"
msgstr ""

#. type: table
#: original_texis/os.texi:1898
msgid "This stands for the year with century corresponding to the current ISO week number."
msgstr ""

#. type: item
#: original_texis/os.texi:1898 original_texis/os.texi:2030
#, no-wrap
msgid "%h"
msgstr ""

#. type: table
#: original_texis/os.texi:1900
msgid "This is a synonym for @samp{%b}."
msgstr ""

#. type: itemx
#: original_texis/os.texi:1900 original_texis/os.texi:2031
#, no-wrap
msgid "%H"
msgstr ""

#. type: table
#: original_texis/os.texi:1902
msgid "This stands for the hour (00--23)."
msgstr ""

#. type: item
#: original_texis/os.texi:1902
#, no-wrap
msgid "%I"
msgstr ""

#. type: table
#: original_texis/os.texi:1904
msgid "This stands for the hour (01--12)."
msgstr ""

#. type: item
#: original_texis/os.texi:1904
#, no-wrap
msgid "%j"
msgstr ""

#. type: table
#: original_texis/os.texi:1906
msgid "This stands for the day of the year (001--366)."
msgstr ""

#. type: item
#: original_texis/os.texi:1906
#, no-wrap
msgid "%k"
msgstr ""

#. type: table
#: original_texis/os.texi:1908
msgid "This stands for the hour (0--23), blank padded."
msgstr ""

#. type: item
#: original_texis/os.texi:1908
#, no-wrap
msgid "%l"
msgstr ""

#. type: table
#: original_texis/os.texi:1910
msgid "This stands for the hour (1--12), blank padded."
msgstr ""

#. type: item
#: original_texis/os.texi:1910 original_texis/os.texi:2033
#, no-wrap
msgid "%m"
msgstr ""

#. type: table
#: original_texis/os.texi:1912
msgid "This stands for the month (01--12)."
msgstr ""

#. type: itemx
#: original_texis/os.texi:1912 original_texis/os.texi:2034
#, no-wrap
msgid "%M"
msgstr ""

#. type: table
#: original_texis/os.texi:1914
msgid "This stands for the minute (00--59)."
msgstr ""

#. type: item
#: original_texis/os.texi:1914
#, no-wrap
msgid "%n"
msgstr ""

#. type: table
#: original_texis/os.texi:1916
msgid "This stands for a newline."
msgstr ""

#. type: item
#: original_texis/os.texi:1916
#, no-wrap
msgid "%N"
msgstr ""

#. type: table
#: original_texis/os.texi:1920
msgid "This stands for the nanoseconds (000000000--999999999).  To ask for fewer digits, use @samp{%3N} for milliseconds, @samp{%6N} for microseconds, etc.  Any excess digits are discarded, without rounding."
msgstr ""

#. type: item
#: original_texis/os.texi:1920
#, no-wrap
msgid "%p"
msgstr ""

#. type: table
#: original_texis/os.texi:1922
msgid "This stands for @samp{AM} or @samp{PM}, as appropriate."
msgstr ""

#. type: item
#: original_texis/os.texi:1922
#, no-wrap
msgid "%q"
msgstr ""

#. type: table
#: original_texis/os.texi:1924
msgid "This stands for the calendar quarter (1--4)."
msgstr ""

#. type: item
#: original_texis/os.texi:1924
#, no-wrap
msgid "%r"
msgstr ""

#. type: table
#: original_texis/os.texi:1926
msgid "This is a synonym for @samp{%I:%M:%S %p}."
msgstr ""

#. type: item
#: original_texis/os.texi:1926
#, no-wrap
msgid "%R"
msgstr ""

#. type: table
#: original_texis/os.texi:1928
msgid "This is a synonym for @samp{%H:%M}."
msgstr ""

#. type: item
#: original_texis/os.texi:1928 original_texis/os.texi:2036
#, no-wrap
msgid "%s"
msgstr ""

#. type: table
#: original_texis/os.texi:1930
msgid "This stands for the integer number of seconds since the epoch."
msgstr ""

#. type: itemx
#: original_texis/os.texi:1930 original_texis/os.texi:2037
#, no-wrap
msgid "%S"
msgstr ""

#. type: table
#: original_texis/os.texi:1933
msgid "This stands for the second (00--59, or 00--60 on platforms that support leap seconds)."
msgstr ""

#. type: item
#: original_texis/os.texi:1933
#, no-wrap
msgid "%t"
msgstr ""

#. type: table
#: original_texis/os.texi:1935
msgid "This stands for a tab character."
msgstr ""

#. type: item
#: original_texis/os.texi:1935
#, no-wrap
msgid "%T"
msgstr ""

#. type: table
#: original_texis/os.texi:1937
msgid "This is a synonym for @samp{%H:%M:%S}."
msgstr ""

#. type: item
#: original_texis/os.texi:1937
#, no-wrap
msgid "%u"
msgstr ""

#. type: table
#: original_texis/os.texi:1939
msgid "This stands for the numeric day of week (1--7).  Monday is day 1."
msgstr ""

#. type: item
#: original_texis/os.texi:1939
#, no-wrap
msgid "%U"
msgstr ""

#. type: table
#: original_texis/os.texi:1942
msgid "This stands for the week of the year (01--52), assuming that weeks start on Sunday."
msgstr ""

#. type: item
#: original_texis/os.texi:1942
#, no-wrap
msgid "%V"
msgstr ""

#. type: table
#: original_texis/os.texi:1944
msgid "This stands for the week of the year according to ISO 8601."
msgstr ""

#. type: item
#: original_texis/os.texi:1944
#, no-wrap
msgid "%w"
msgstr ""

#. type: table
#: original_texis/os.texi:1946
msgid "This stands for the numeric day of week (0--6).  Sunday is day 0."
msgstr ""

#. type: item
#: original_texis/os.texi:1946
#, no-wrap
msgid "%W"
msgstr ""

#. type: table
#: original_texis/os.texi:1949
msgid "This stands for the week of the year (01--52), assuming that weeks start on Monday."
msgstr ""

#. type: item
#: original_texis/os.texi:1949 original_texis/os.texi:2052
#, no-wrap
msgid "%x"
msgstr ""

#. type: table
#: original_texis/os.texi:1952
msgid "This has a locale-specific meaning.  In the default locale (named @samp{C}), it is equivalent to @samp{%D}."
msgstr ""

#. type: item
#: original_texis/os.texi:1952
#, no-wrap
msgid "%X"
msgstr ""

#. type: table
#: original_texis/os.texi:1955
msgid "This has a locale-specific meaning.  In the default locale (named @samp{C}), it is equivalent to @samp{%T}."
msgstr ""

#. type: item
#: original_texis/os.texi:1955 original_texis/os.texi:2024
#, no-wrap
msgid "%y"
msgstr ""

#. type: table
#: original_texis/os.texi:1957
msgid "This stands for the year without century (00--99)."
msgstr ""

#. type: itemx
#: original_texis/os.texi:1957 original_texis/os.texi:2025
#, no-wrap
msgid "%Y"
msgstr ""

#. type: table
#: original_texis/os.texi:1959
msgid "This stands for the year with century."
msgstr ""

#. type: item
#: original_texis/os.texi:1959
#, no-wrap
msgid "%Z"
msgstr ""

#. type: table
#: original_texis/os.texi:1961
msgid "This stands for the time zone abbreviation (e.g., @samp{EST})."
msgstr ""

#. type: item
#: original_texis/os.texi:1961 original_texis/os.texi:2042
#, no-wrap
msgid "%z"
msgstr ""

#. type: table
#: original_texis/os.texi:1968
msgid "This stands for the time zone numerical offset.  The @samp{z} can be preceded by one, two, or three colons; if plain @samp{%z} stands for @samp{-0500}, then @samp{%:z} stands for @samp{-05:00}, @samp{%::z} stands for @samp{-05:00:00}, and @samp{%:::z} is like @samp{%::z} except it suppresses trailing instances of @samp{:00} so it stands for @samp{-05} in the same example."
msgstr ""

#. type: item
#: original_texis/os.texi:1968 original_texis/os.texi:2056
#, no-wrap
msgid "%%"
msgstr ""

#. type: table
#: original_texis/os.texi:1970
msgid "This stands for a single @samp{%}."
msgstr ""

#. type: defun
#: original_texis/os.texi:1978
msgid "One or more flag characters can appear immediately after the @samp{%}.  @samp{0} pads with zeros, @samp{+} pads with zeros and also puts @samp{+} before nonnegative year numbers with more than four digits, @samp{_} pads with blanks, @samp{-} suppresses padding, @samp{^} upper-cases letters, and @samp{#} reverses the case of letters."
msgstr ""

#. type: defun
#: original_texis/os.texi:1986
msgid "You can also specify the field width and type of padding for any of these @samp{%}-sequences.  This works as in @code{printf}: you write the field width as digits in a @samp{%}-sequence, after any flags.  For example, @samp{%S} specifies the number of seconds since the minute; @samp{%03S} means to pad this with zeros to 3 positions, @samp{%_3S} to pad with spaces to 3 positions.  Plain @samp{%3S} pads with zeros, because that is how @samp{%S} normally pads to two positions."
msgstr ""

#. type: defun
#: original_texis/os.texi:1994
msgid "The characters @samp{E} and @samp{O} act as modifiers when used after any flags and field widths in a @samp{%}-sequence.  @samp{E} specifies using the current locale's alternative version of the date and time.  In a Japanese locale, for example, @code{%Ex} might yield a date format based on the Japanese Emperors' reigns.  @samp{E} is allowed in @samp{%Ec}, @samp{%EC}, @samp{%Ex}, @samp{%EX}, @samp{%Ey}, and @samp{%EY}."
msgstr ""

#. type: defun
#: original_texis/os.texi:1998
msgid "@samp{O} means to use the current locale's alternative representation of numbers, instead of the ordinary decimal digits.  This is allowed with most letters, all the ones that output numbers."
msgstr ""

#. type: defun
#: original_texis/os.texi:2003
msgid "To help debug programs, unrecognized @samp{%}-sequences stand for themselves and are output as-is.  Programs should not rely on this behavior, as future versions of Emacs may recognize new @samp{%}-sequences as extensions."
msgstr ""

#. type: defun
#: original_texis/os.texi:2014
msgid "This function uses the C library function @code{strftime} (@pxref{Formatting Calendar Time,,, libc, The GNU C Library Reference Manual}) to do most of the work.  In order to communicate with that function, it first converts @var{time} and @var{zone} to internal form; the operating system limits the range of time and zone values.  This function also encodes @var{format-string} using the coding system specified by @code{locale-coding-system} (@pxref{Locales}); after @code{strftime} returns the resulting string, this function decodes the string using that same coding system."
msgstr ""

#. type: defun
#: original_texis/os.texi:2016
#, no-wrap
msgid "format-seconds format-string seconds"
msgstr ""

#. type: defun
#: original_texis/os.texi:2022
msgid "This function converts its argument @var{seconds} into a string of years, days, hours, etc., according to @var{format-string}.  The argument @var{format-string} may contain @samp{%}-sequences which control the conversion.  Here is a table of what the @samp{%}-sequences mean:"
msgstr ""

#. type: table
#: original_texis/os.texi:2027
msgid "The integer number of 365-day years."
msgstr ""

#. type: table
#: original_texis/os.texi:2030
msgid "The integer number of days."
msgstr ""

#. type: table
#: original_texis/os.texi:2033
msgid "The integer number of hours."
msgstr ""

#. type: table
#: original_texis/os.texi:2036
msgid "The integer number of minutes."
msgstr ""

#. type: table
#: original_texis/os.texi:2042
msgid "The number of seconds.  If the optional @samp{,} parameter is used, it's a floating point number, and the number after the @samp{,} specifies how many decimals to be used.  @samp{%,2s} means ``use two decimals''."
msgstr ""

#. type: table
#: original_texis/os.texi:2052
msgid "Non-printing control flag.  When it is used, other specifiers must be given in the order of decreasing size, i.e., years before days, hours before minutes, etc.  Nothing will be produced in the result string to the left of @samp{%z} until the first non-zero conversion is encountered.  For example, the default format used by @code{emacs-uptime} (@pxref{Processor Run Time, emacs-uptime})  @w{@code{\"%Y, %D, %H, %M, %z%S\"}} means that the number of seconds will always be produced, but years, days, hours, and minutes will only be shown if they are non-zero."
msgstr ""

#. type: table
#: original_texis/os.texi:2056
msgid "Non-printing control flag that works along the same lines as @samp{%z}, but instead suppresses printing of trailing zero-value time elements."
msgstr ""

#. type: table
#: original_texis/os.texi:2058
msgid "Produces a literal @samp{%}."
msgstr ""

#. type: defun
#: original_texis/os.texi:2062
msgid "Upper-case format sequences produce the units in addition to the numbers, lower-case formats produce only the numbers."
msgstr ""

#. type: defun
#: original_texis/os.texi:2067
msgid "You can also specify the field width by following the @samp{%} with a number; shorter numbers will be padded with blanks.  An optional period before the width requests zero-padding instead.  For example, @code{\"%.3Y\"} might produce @code{\"004 years\"}."
msgstr ""

#. type: section
#: original_texis/os.texi:2070
#, no-wrap
msgid "Processor Run time"
msgstr ""

#. type: cindex
#: original_texis/os.texi:2071
#, no-wrap
msgid "processor run time"
msgstr ""

#. type: cindex
#: original_texis/os.texi:2072
#, no-wrap
msgid "Emacs process run time"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2076
msgid "Emacs provides several functions and primitives that return time, both elapsed and processor time, used by the Emacs process."
msgstr ""

#. type: deffn
#: original_texis/os.texi:2077
#, no-wrap
msgid "Command emacs-uptime &optional format"
msgstr ""

#. type: cindex
#: original_texis/os.texi:2078
#, no-wrap
msgid "uptime of Emacs"
msgstr ""

#. type: deffn
#: original_texis/os.texi:2086
msgid "This function returns a string representing the Emacs @dfn{uptime}---the elapsed wall-clock time this instance of Emacs is running.  The string is formatted by @code{format-seconds} according to the optional argument @var{format}.  For the available format descriptors, see @ref{Time Parsing, format-seconds}.  If @var{format} is @code{nil} or omitted, it defaults to @code{\"%Y, %D, %H, %M, %z%S\"}."
msgstr ""

#. type: deffn
#: original_texis/os.texi:2088
msgid "When called interactively, it prints the uptime in the echo area."
msgstr ""

#. type: defun
#: original_texis/os.texi:2090
#, no-wrap
msgid "get-internal-run-time"
msgstr ""

#. type: defun
#: original_texis/os.texi:2093
msgid "This function returns the processor run time used by Emacs, as a Lisp timestamp (@pxref{Time of Day})."
msgstr ""

#. type: defun
#: original_texis/os.texi:2098
msgid "Note that the time returned by this function excludes the time Emacs was not using the processor, and if the Emacs process has several threads, the returned value is the sum of the processor times used up by all Emacs threads."
msgstr ""

#. type: defun
#: original_texis/os.texi:2102
msgid "If the system doesn't provide a way to determine the processor run time, @code{get-internal-run-time} returns the same time as @code{current-time}."
msgstr ""

#. type: deffn
#: original_texis/os.texi:2104
#, no-wrap
msgid "Command emacs-init-time"
msgstr ""

#. type: deffn
#: original_texis/os.texi:2108
msgid "This function returns the duration of the Emacs initialization (@pxref{Startup Summary}) in seconds, as a string.  When called interactively, it prints the duration in the echo area."
msgstr ""

#. type: cindex
#: original_texis/os.texi:2112
#, no-wrap
msgid "time calculations"
msgstr ""

#. type: cindex
#: original_texis/os.texi:2113
#, no-wrap
msgid "comparing time values"
msgstr ""

#. type: cindex
#: original_texis/os.texi:2114
#, no-wrap
msgid "calendrical computations"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2121
msgid "These functions perform calendrical computations using time values (@pxref{Time of Day}).  As with any time value, a value of @code{nil} for any of their time-value arguments stands for the current system time, and a finite number stands for the number of seconds since the epoch."
msgstr ""

#. type: defun
#: original_texis/os.texi:2122
#, no-wrap
msgid "time-less-p t1 t2"
msgstr ""

#. type: defun
#: original_texis/os.texi:2125
msgid "This returns @code{t} if the time value @var{t1} is less than the time value @var{t2}."
msgstr ""

#. type: defun
#: original_texis/os.texi:2127
#, no-wrap
msgid "time-equal-p t1 t2"
msgstr ""

#. type: defun
#: original_texis/os.texi:2135
msgid "This returns @code{t} if the two time values @var{t1} and @var{t2} are equal.  The result is @code{nil} if either argument is a NaN.  For the purpose of comparison, a @code{nil} argument represents the current time with infinite resolution, so this function returns @code{nil} if one argument is @code{nil} and the other is not, and callers can therefore use @code{nil} to represent an unknown time value that does not equal any timestamp."
msgstr ""

#. type: defun
#: original_texis/os.texi:2137
#, no-wrap
msgid "time-subtract t1 t2"
msgstr ""

#. type: defun
#: original_texis/os.texi:2144
msgid "This returns the time difference @var{t1} @minus{} @var{t2} between two time values, as a Lisp timestamp.  The result is exact and its clock resolution is no worse than the worse of its two arguments' resolutions.  If you need the difference in units of elapsed seconds, you can convert it with @code{time-convert} or @code{float-time}.  @xref{Time Conversion}."
msgstr ""

#. type: defun
#: original_texis/os.texi:2146
#, no-wrap
msgid "time-add t1 t2"
msgstr ""

#. type: defun
#: original_texis/os.texi:2152
msgid "This returns the sum of two time values, using the same conversion rules as @code{time-subtract}.  One argument should represent a time difference rather than a point in time, as a time value that is often just a single number of elapsed seconds.  Here is how to add a number of seconds to a time value:"
msgstr ""

#. type: example
#: original_texis/os.texi:2155
#, no-wrap
msgid "(time-add @var{time} @var{seconds})\n"
msgstr ""

#. type: defun
#: original_texis/os.texi:2158
#, no-wrap
msgid "time-to-days time-value"
msgstr ""

#. type: defun
#: original_texis/os.texi:2162
msgid "This function returns the number of days between the beginning of year 1 and @var{time-value}, assuming the default time zone.  The operating system limits the range of time and zone values."
msgstr ""

#. type: defun
#: original_texis/os.texi:2164
#, no-wrap
msgid "days-to-time days"
msgstr ""

#. type: defun
#: original_texis/os.texi:2170
msgid "This is not quite the inverse of the @code{time-to-days} function, as it uses the Emacs epoch (instead of the year 1) for historical reasons.  To get the inverse, subtract @code{(time-to-days 0)} from @var{days}, in which case @code{days-to-time} may return @code{nil} if @var{days} is negative."
msgstr ""

#. type: defun
#: original_texis/os.texi:2172
#, no-wrap
msgid "time-to-day-in-year time-value"
msgstr ""

#. type: defun
#: original_texis/os.texi:2176
msgid "This returns the day number within the year corresponding to @var{time-value}, assuming the default time zone.  The operating system limits the range of time and zone values."
msgstr ""

#. type: defun
#: original_texis/os.texi:2178
#, no-wrap
msgid "date-leap-year-p year"
msgstr ""

#. type: defun
#: original_texis/os.texi:2180
msgid "This function returns @code{t} if @var{year} is a leap year."
msgstr ""

#. type: defun
#: original_texis/os.texi:2182
#, no-wrap
msgid "date-days-in-month year month"
msgstr ""

#. type: defun
#: original_texis/os.texi:2185
msgid "Return the number of days in @var{month} in @var{year}.  For instance, February 2020 has 29 days."
msgstr ""

#. type: defun
#: original_texis/os.texi:2187
#, no-wrap
msgid "date-ordinal-to-time year ordinal"
msgstr ""

#. type: defun
#: original_texis/os.texi:2190
msgid "Return the date of @var{ordinal} in @var{year} as a decoded time structure.  For instance, the 120th day in 2004 is April 29th."
msgstr ""

#. type: section
#: original_texis/os.texi:2193
#, no-wrap
msgid "Timers for Delayed Execution"
msgstr ""

#. type: cindex
#: original_texis/os.texi:2194
#, no-wrap
msgid "timers"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2200
msgid "You can set up a @dfn{timer} to call a function at a specified future time or after a certain length of idleness.  A timer is a special object that stores the information about the next invocation times and the function to invoke."
msgstr ""

#. type: defun
#: original_texis/os.texi:2201
#, no-wrap
msgid "timerp object"
msgstr ""

#. type: defun
#: original_texis/os.texi:2204
msgid "This predicate function returns non-@code{nil} if @code{object} is a timer."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2212
msgid "Emacs cannot run timers at any arbitrary point in a Lisp program; it can run them only when Emacs could accept output from a subprocess: namely, while waiting or inside certain primitive functions such as @code{sit-for} or @code{read-event} which @emph{can} wait.  Therefore, a timer's execution may be delayed if Emacs is busy.  However, the time of execution is very precise if Emacs is idle."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2224
msgid "Emacs binds @code{inhibit-quit} to @code{t} before calling the timer function, because quitting out of many timer functions can leave things in an inconsistent state.  This is normally unproblematical because most timer functions don't do a lot of work.  Indeed, for a timer to call a function that takes substantial time to run is likely to be annoying.  If a timer function needs to allow quitting, it should use @code{with-local-quit} (@pxref{Quitting}).  For example, if a timer function calls @code{accept-process-output} to receive output from an external process, that call should be wrapped inside @code{with-local-quit}, to ensure that @kbd{C-g} works if the external process hangs."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2230
msgid "It is usually a bad idea for timer functions to alter buffer contents.  When they do, they usually should call @code{undo-boundary} both before and after changing the buffer, to separate the timer's changes from user commands' changes and prevent a single undo entry from growing to be quite large."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2237
msgid "Timer functions should also avoid calling functions that cause Emacs to wait, such as @code{sit-for} (@pxref{Waiting}).  This can lead to unpredictable effects, since other timers (or even the same timer) can run while waiting.  If a timer function needs to perform an action after a certain time has elapsed, it can do this by scheduling a new timer."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2243
msgid "If a timer function performs a remote file operation, it can be in conflict with an already running remote file operation of the same connection.  Such conflicts are detected, and they result in a @code{remote-file-error} error (@pxref{Standard Errors}).  This should be protected by wrapping the timer function body with"
msgstr ""

#. type: group
#: original_texis/os.texi:2248
#, no-wrap
msgid ""
"(ignore-error 'remote-file-error\n"
"  @dots{})\n"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2253
msgid "If a timer function calls functions that can change the match data, it should save and restore the match data.  @xref{Saving Match Data}."
msgstr ""

#. type: deffn
#: original_texis/os.texi:2254
#, no-wrap
msgid "Command run-at-time time repeat function &rest args"
msgstr ""

#. type: deffn
#: original_texis/os.texi:2260
msgid "This sets up a timer that calls the function @var{function} with arguments @var{args} at time @var{time}.  If @var{repeat} is a number (integer or floating point), the timer is scheduled to run again every @var{repeat} seconds after @var{time}.  If @var{repeat} is @code{nil}, the timer runs only once."
msgstr ""

#. type: deffn
#: original_texis/os.texi:2262
msgid "@var{time} may specify an absolute or a relative time."
msgstr ""

#. type: deffn
#: original_texis/os.texi:2272
msgid "Absolute times may be specified using a string with a limited variety of formats, and are taken to be times @emph{today}, even if already in the past.  The recognized forms are @samp{@var{xxxx}}, @samp{@var{x}:@var{xx}}, or @samp{@var{xx}:@var{xx}} (military time), and @samp{@var{xx}am}, @samp{@var{xx}AM}, @samp{@var{xx}pm}, @samp{@var{xx}PM}, @samp{@var{xx}:@var{xx}am}, @samp{@var{xx}:@var{xx}AM}, @samp{@var{xx}:@var{xx}pm}, or @samp{@var{xx}:@var{xx}PM}.  A period can be used instead of a colon to separate the hour and minute parts."
msgstr ""

#. type: deffn
#: original_texis/os.texi:2275
msgid "To specify a relative time as a string, use numbers followed by units.  For example:"
msgstr ""

#. type: item
#: original_texis/os.texi:2277
#, no-wrap
msgid "1 min"
msgstr ""

#. type: table
#: original_texis/os.texi:2279
msgid "denotes 1 minute from now."
msgstr ""

#. type: item
#: original_texis/os.texi:2279
#, no-wrap
msgid "1 min 5 sec"
msgstr ""

#. type: table
#: original_texis/os.texi:2281
msgid "denotes 65 seconds from now."
msgstr ""

#. type: item
#: original_texis/os.texi:2281
#, no-wrap
msgid "1 min 2 sec 3 hour 4 day 5 week 6 fortnight 7 month 8 year"
msgstr ""

#. type: table
#: original_texis/os.texi:2283
msgid "denotes exactly 103 months, 123 days, and 10862 seconds from now."
msgstr ""

#. type: deffn
#: original_texis/os.texi:2287
msgid "For relative time values, Emacs considers a month to be exactly thirty days, and a year to be exactly 365.25 days."
msgstr ""

#. type: deffn
#: original_texis/os.texi:2292
msgid "Not all convenient formats are strings.  If @var{time} is a number (integer or floating point), that specifies a relative time measured in seconds.  The result of @code{encode-time} can also be used to specify an absolute value for @var{time}."
msgstr ""

#. type: deffn
#: original_texis/os.texi:2300
msgid "In most cases, @var{repeat} has no effect on when @emph{first} call takes place---@var{time} alone specifies that.  There is one exception: if @var{time} is @code{t}, then the timer runs whenever the time is a multiple of @var{repeat} seconds after the epoch.  This is useful for functions like @code{display-time}.  For instance, the following will make @var{function} run at every ``whole'' minute (e.g., @samp{11:03:00}, @samp{11:04:00}, etc):"
msgstr ""

#. type: example
#: original_texis/os.texi:2303
#, no-wrap
msgid "(run-at-time t 60 @var{function})\n"
msgstr ""

#. type: deffn
#: original_texis/os.texi:2309
msgid "If Emacs didn't get any CPU time when the timer would have run (for example if the system was busy running another process or if the computer was sleeping or in a suspended state), the timer will run as soon as Emacs resumes and is idle."
msgstr ""

#. type: deffn
#: original_texis/os.texi:2313
msgid "The function @code{run-at-time} returns a timer value that identifies the particular scheduled future action.  You can use this value to call @code{cancel-timer} (see below)."
msgstr ""

#. type: deffn
#: original_texis/os.texi:2315
#, no-wrap
msgid "Command run-with-timer secs repeat function &rest args"
msgstr ""

#. type: deffn
#: original_texis/os.texi:2320
msgid "This is exactly the same as @code{run-at-time} (so see that definition for an explanation of the parameters; @var{secs} is passed as @var{time} to that function), but is meant to be used when the delay is specified in seconds."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2332
msgid "A repeating timer nominally ought to run every @var{repeat} seconds, but remember that any invocation of a timer can be late.  Lateness of one repetition has no effect on the scheduled time of the next repetition.  For instance, if Emacs is busy computing for long enough to cover three scheduled repetitions of the timer, and then starts to wait, it will immediately call the timer function three times in immediate succession (presuming no other timers trigger before or between them).  If you want a timer to run again no less than @var{n} seconds after the last invocation, don't use the @var{repeat} argument.  Instead, the timer function should explicitly reschedule the timer."
msgstr ""

#. type: defopt
#: original_texis/os.texi:2333
#, no-wrap
msgid "timer-max-repeats"
msgstr ""

#. type: defopt
#: original_texis/os.texi:2337
msgid "This variable's value specifies the maximum number of times to repeat calling a timer function in a row, when many previously scheduled calls were unavoidably delayed."
msgstr ""

#. type: defmac
#: original_texis/os.texi:2339
#, no-wrap
msgid "with-timeout (seconds timeout-forms@dots{}) body@dots{}"
msgstr ""

#. type: defmac
#: original_texis/os.texi:2346
msgid "Execute @var{body}, but give up after @var{seconds} seconds.  If @var{body} finishes before the time is up, @code{with-timeout} returns the value of the last form in @var{body}.  If, however, the execution of @var{body} is cut short by the timeout, then @code{with-timeout} executes all the @var{timeout-forms} and returns the value of the last of them."
msgstr ""

#. type: defmac
#: original_texis/os.texi:2351
msgid "This macro works by setting a timer to run after @var{seconds} seconds.  If @var{body} finishes before that time, it cancels the timer.  If the timer actually runs, it terminates execution of @var{body}, then executes @var{timeout-forms}."
msgstr ""

#. type: defmac
#: original_texis/os.texi:2357
msgid "Since timers can run within a Lisp program only when the program calls a primitive that can wait, @code{with-timeout} cannot stop executing @var{body} while it is in the midst of a computation---only when it calls one of those primitives.  So use @code{with-timeout} only with a @var{body} that waits for input, not one that does a long computation."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2362
msgid "The function @code{y-or-n-p-with-timeout} provides a simple way to use a timer to avoid waiting too long for an answer.  @xref{Yes-or-No Queries}."
msgstr ""

#. type: defun
#: original_texis/os.texi:2363
#, no-wrap
msgid "cancel-timer timer"
msgstr ""

#. type: defun
#: original_texis/os.texi:2369
msgid "This cancels the requested action for @var{timer}, which should be a timer---usually, one previously returned by @code{run-at-time} or @code{run-with-idle-timer}.  This cancels the effect of that call to one of these functions; the arrival of the specified time will not cause anything special to happen."
msgstr ""

#. type: findex
#: original_texis/os.texi:2371
#, no-wrap
msgid "list-timers"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2376
msgid "The @code{list-timers} command lists all the currently active timers.  The command @kbd{c} (@code{timer-list-cancel}) will cancel the timer on the line under point.  You can sort the list by column using the command @kbd{S} (@code{tabulated-list-sort})."
msgstr ""

#. type: cindex
#: original_texis/os.texi:2379
#, no-wrap
msgid "idle timers"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2384
msgid "Here is how to set up a timer that runs when Emacs is idle for a certain length of time.  Aside from how to set them up, idle timers work just like ordinary timers."
msgstr ""

#. type: deffn
#: original_texis/os.texi:2385
#, no-wrap
msgid "Command run-with-idle-timer secs repeat function &rest args"
msgstr ""

#. type: deffn
#: original_texis/os.texi:2389
msgid "Set up a timer which runs the next time Emacs is idle for @var{secs} seconds.  The value of @var{secs} may be a number or a value of the type returned by @code{current-idle-time}."
msgstr ""

#. type: deffn
#: original_texis/os.texi:2394
msgid "If @var{repeat} is @code{nil}, the timer runs just once, the first time Emacs remains idle for a long enough time.  More often @var{repeat} is non-@code{nil}, which means to run the timer @emph{each time} Emacs remains idle for @var{secs} seconds."
msgstr ""

#. type: deffn
#: original_texis/os.texi:2397
msgid "The function @code{run-with-idle-timer} returns a timer value which you can use in calling @code{cancel-timer} (@pxref{Timers})."
msgstr ""

#. type: cindex
#: original_texis/os.texi:2399
#, no-wrap
msgid "idleness"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2408
msgid "Emacs becomes @dfn{idle} when it starts waiting for user input (unless it waits for input with a timeout, @pxref{Reading One Event}), and it remains idle until the user provides some input.  If a timer is set for five seconds of idleness, it runs approximately five seconds after Emacs first becomes idle.  Even if @var{repeat} is non-@code{nil}, this timer will not run again as long as Emacs remains idle, because the duration of idleness will continue to increase and will not go down to five seconds again."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2416
msgid "Emacs can do various things while idle: garbage collect, autosave or handle data from a subprocess.  But these interludes during idleness do not interfere with idle timers, because they do not reset the clock of idleness to zero.  An idle timer set for 600 seconds will run when ten minutes have elapsed since the last user command was finished, even if subprocess output has been accepted thousands of times within those ten minutes, and even if there have been garbage collections and autosaves."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2420
msgid "When the user supplies input, Emacs becomes non-idle while executing the input.  Then it becomes idle again, and all the idle timers that are set up to repeat will subsequently run another time, one by one."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2425
msgid "Do not write an idle timer function containing a loop which does a certain amount of processing each time around, and exits when @code{(input-pending-p)} is non-@code{nil}.  This approach seems very natural but has two problems:"
msgstr ""

#. type: itemize
#: original_texis/os.texi:2430
msgid "It blocks out all process output (since Emacs accepts process output only while waiting)."
msgstr ""

#. type: itemize
#: original_texis/os.texi:2433
msgid "It blocks out any idle timers that ought to run during that time."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2443
msgid "Similarly, do not write an idle timer function that sets up another idle timer (including the same idle timer) with @var{secs} argument less than or equal to the current idleness time.  Such a timer will run almost immediately, and continue running again and again, instead of waiting for the next time Emacs becomes idle.  The correct approach is to reschedule with an appropriate increment of the current value of the idleness time, as described below."
msgstr ""

#. type: defun
#: original_texis/os.texi:2444
#, no-wrap
msgid "current-idle-time"
msgstr ""

#. type: defun
#: original_texis/os.texi:2448
msgid "If Emacs is idle, this function returns the length of time Emacs has been idle, using the same format as @code{current-time} (@pxref{Time of Day})."
msgstr ""

#. type: defun
#: original_texis/os.texi:2451
msgid "When Emacs is not idle, @code{current-idle-time} returns @code{nil}.  This is a convenient way to test whether Emacs is idle."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2457
msgid "The main use of @code{current-idle-time} is when an idle timer function wants to ``take a break'' for a while.  It can set up another idle timer to call the same function again, after a few seconds more idleness.  Here's an example:"
msgstr ""

#. type: example
#: original_texis/os.texi:2461
#, no-wrap
msgid ""
"(defvar my-resume-timer nil\n"
"  \"Timer for `my-timer-function' to reschedule itself, or nil.\")\n"
"\n"
msgstr ""

#. type: example
#: original_texis/os.texi:2477
#, no-wrap
msgid ""
"(defun my-timer-function ()\n"
"  ;; @r{If the user types a command while @code{my-resume-timer}}\n"
"  ;; @r{is active, the next time this function is called from}\n"
"  ;; @r{its main idle timer, deactivate @code{my-resume-timer}.}\n"
"  (when my-resume-timer\n"
"    (cancel-timer my-resume-timer))\n"
"  ...@var{do the work for a while}...\n"
"  (when @var{taking-a-break}\n"
"    (setq my-resume-timer\n"
"          (run-with-idle-timer\n"
"            ;; Compute an idle time @var{break-length}\n"
"            ;; more than the current value.\n"
"            (time-add (current-idle-time) @var{break-length})\n"
"            nil\n"
"            'my-timer-function))))\n"
msgstr ""

#. type: cindex
#: original_texis/os.texi:2481
#, no-wrap
msgid "terminal input"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2486
msgid "This section describes functions and variables for recording or manipulating terminal input.  See @ref{Display}, for related functions."
msgstr ""

#. type: subsection
#: original_texis/os.texi:2490 original_texis/os.texi:2492
#: original_texis/os.texi:2493
#, no-wrap
msgid "Input Modes"
msgstr ""

#. type: menuentry
#: original_texis/os.texi:2490
msgid "Options for how input is processed."
msgstr ""

#. type: subsection
#: original_texis/os.texi:2490 original_texis/os.texi:2558
#: original_texis/os.texi:2559
#, no-wrap
msgid "Recording Input"
msgstr ""

#. type: menuentry
#: original_texis/os.texi:2490
msgid "Saving histories of recent or all input events."
msgstr ""

#. type: cindex
#: original_texis/os.texi:2494
#, no-wrap
msgid "input modes"
msgstr ""

#. type: cindex
#: original_texis/os.texi:2495
#, no-wrap
msgid "terminal input modes"
msgstr ""

#. type: defun
#: original_texis/os.texi:2497
#, no-wrap
msgid "set-input-mode interrupt flow meta &optional quit-char"
msgstr ""

#. type: defun
#: original_texis/os.texi:2503
msgid "This function sets the mode for reading keyboard input.  If @var{interrupt} is non-@code{nil}, then Emacs uses input interrupts.  If it is @code{nil}, then it uses @sc{cbreak} mode.  The default setting is system-dependent.  Some systems always use @sc{cbreak} mode regardless of what is specified."
msgstr ""

#. type: defun
#: original_texis/os.texi:2506
msgid "When Emacs communicates directly with X, it ignores this argument and uses interrupts if that is the way it knows how to communicate."
msgstr ""

#. type: defun
#: original_texis/os.texi:2510
msgid "If @var{flow} is non-@code{nil}, then Emacs uses @sc{xon/xoff} (@kbd{C-q}, @kbd{C-s}) flow control for output to the terminal.  This has no effect except in @sc{cbreak} mode."
msgstr ""

#. type: defun
#: original_texis/os.texi:2524
msgid "The argument @var{meta} controls support for input character codes above 127.  If @var{meta} is @code{t}, Emacs converts characters with the 8th bit set into Meta characters, before it decodes them as needed (@pxref{Terminal I/O Encoding}).  If @var{meta} is @code{nil}, Emacs disregards the 8th bit; this is necessary when the terminal uses it as a parity bit.  If @var{meta} is the symbol @code{encoded}, Emacs first decodes the characters using all the 8 bits of each byte, and then converts the decoded single-byte characters into Meta characters if they have their eighth bit set.  Finally, if @var{meta} is neither @code{t} nor @code{nil} nor @code{encoded}, Emacs uses all 8 bits of input unchanged, both before and after decoding them.  This is good for terminals that use 8-bit character sets and don't encode the Meta modifier as the eighth bit."
msgstr ""

#. type: defun
#: original_texis/os.texi:2528
msgid "If @var{quit-char} is non-@code{nil}, it specifies the character to use for quitting.  Normally this character is @kbd{C-g}.  @xref{Quitting}."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2532
msgid "The @code{current-input-mode} function returns the input mode settings Emacs is currently using."
msgstr ""

#. type: defun
#: original_texis/os.texi:2533
#, no-wrap
msgid "current-input-mode"
msgstr ""

#. type: defun
#: original_texis/os.texi:2538
msgid "This function returns the current mode for reading keyboard input.  It returns a list, corresponding to the arguments of @code{set-input-mode}, of the form @code{(@var{interrupt} @var{flow} @var{meta} @var{quit})} in which:"
msgstr ""

#. type: item
#: original_texis/os.texi:2539
#, no-wrap
msgid "interrupt"
msgstr ""

#. type: table
#: original_texis/os.texi:2542
msgid "is non-@code{nil} when Emacs is using interrupt-driven input.  If @code{nil}, Emacs is using @sc{cbreak} mode."
msgstr ""

#. type: item
#: original_texis/os.texi:2542
#, no-wrap
msgid "flow"
msgstr ""

#. type: table
#: original_texis/os.texi:2546
msgid "is non-@code{nil} if Emacs uses @sc{xon/xoff} (@kbd{C-q}, @kbd{C-s})  flow control for output to the terminal.  This value is meaningful only when @var{interrupt} is @code{nil}."
msgstr ""

#. type: item
#: original_texis/os.texi:2546
#, no-wrap
msgid "meta"
msgstr ""

#. type: table
#: original_texis/os.texi:2553
msgid "is @code{t} if Emacs treats the eighth bit of input characters as the Meta bit before decoding input; @code{encoded} if Emacs treats the eighth bit of the decoded single-byte characters as the Meta bit; @code{nil} if Emacs clears the eighth bit of every input character; any other value means Emacs uses all eight bits as the basic character code."
msgstr ""

#. type: item
#: original_texis/os.texi:2553
#, no-wrap
msgid "quit"
msgstr ""

#. type: table
#: original_texis/os.texi:2555
msgid "is the character Emacs currently uses for quitting, usually @kbd{C-g}."
msgstr ""

#. type: cindex
#: original_texis/os.texi:2560
#, no-wrap
msgid "recording input"
msgstr ""

#. type: defun
#: original_texis/os.texi:2562
#, no-wrap
msgid "recent-keys &optional include-cmds"
msgstr ""

#. type: defun
#: original_texis/os.texi:2569
msgid "This function returns a vector containing the last 300 input events from the keyboard or mouse.  All input events are included, whether or not they were used as parts of key sequences.  Thus, you always get the last 300 input events, not counting events generated by keyboard macros.  (These are excluded because they are less interesting for debugging; it should be enough to see the events that invoked the macros.)"
msgstr ""

#. type: defun
#: original_texis/os.texi:2574
msgid "If @var{include-cmds} is non-@code{nil}, complete key sequences in the result vector are interleaved with pseudo-events of the form @code{(nil . @var{COMMAND})}, where @var{COMMAND} is the binding of the key sequence (@pxref{Command Overview})."
msgstr ""

#. type: defun
#: original_texis/os.texi:2577
msgid "A call to @code{clear-this-command-keys} (@pxref{Command Loop Info})  causes this function to return an empty vector immediately afterward."
msgstr ""

#. type: deffn
#: original_texis/os.texi:2579
#, no-wrap
msgid "Command open-dribble-file filename"
msgstr ""

#. type: cindex
#: original_texis/os.texi:2580
#, no-wrap
msgid "dribble file"
msgstr ""

#. type: deffn
#: original_texis/os.texi:2587
msgid "This function opens a @dfn{dribble file} named @var{filename}.  When a dribble file is open, each input event from the keyboard or mouse (but not those from keyboard macros) is written in that file.  A non-character event is expressed using its printed representation surrounded by @samp{<@dots{}>}.  Be aware that sensitive information (such as passwords) may end up recorded in the dribble file."
msgstr ""

#. type: deffn
#: original_texis/os.texi:2590
msgid "You close the dribble file by calling this function with an argument of @code{nil}."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2593
msgid "See also the @code{open-termscript} function (@pxref{Terminal Output})."
msgstr ""

#. type: cindex
#: original_texis/os.texi:2596
#, no-wrap
msgid "terminal output"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2601
msgid "The terminal output functions send output to a text terminal, or keep track of output sent to the terminal.  The variable @code{baud-rate} tells you what Emacs thinks is the output speed of the terminal."
msgstr ""

#. type: defopt
#: original_texis/os.texi:2602
#, no-wrap
msgid "baud-rate"
msgstr ""

#. type: defopt
#: original_texis/os.texi:2607
msgid "This variable's value is the output speed of the terminal, as far as Emacs knows.  Setting this variable does not change the speed of actual data transmission, but the value is used for calculations such as padding."
msgstr ""

#. type: defopt
#: original_texis/os.texi:2611
msgid "It also affects decisions about whether to scroll part of the screen or repaint on text terminals.  @xref{Forcing Redisplay}, for the corresponding functionality on graphical terminals."
msgstr ""

#. type: defopt
#: original_texis/os.texi:2613
msgid "The value is measured in baud."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2622
msgid "If you are running across a network, and different parts of the network work at different baud rates, the value returned by Emacs may be different from the value used by your local terminal.  Some network protocols communicate the local terminal speed to the remote machine, so that Emacs and other programs can get the proper value, but others do not.  If Emacs has the wrong value, it makes decisions that are less than optimal.  To fix the problem, set @code{baud-rate}."
msgstr ""

#. type: defun
#: original_texis/os.texi:2623
#, no-wrap
msgid "send-string-to-terminal string &optional terminal"
msgstr ""

#. type: defun
#: original_texis/os.texi:2632
msgid "This function sends @var{string} to @var{terminal} without alteration.  Control characters in @var{string} have terminal-dependent effects.  (If you need to display non-ASCII text on the terminal, encode it using one of the functions described in @ref{Explicit Encoding}.)  This function operates only on text terminals.  @var{terminal} may be a terminal object, a frame, or @code{nil} for the selected frame's terminal.  In batch mode, @var{string} is sent to @code{stdout} when @var{terminal} is @code{nil}."
msgstr ""

#. type: defun
#: original_texis/os.texi:2638
msgid "One use of this function is to define function keys on terminals that have downloadable function key definitions.  For example, this is how (on certain terminals) to define function key 4 to move forward four characters (by transmitting the characters @kbd{C-u C-f} to the computer):"
msgstr ""

#. type: group
#: original_texis/os.texi:2643
#, no-wrap
msgid ""
"(send-string-to-terminal \"\\eF4\\^U\\^F\")\n"
"     @result{} nil\n"
msgstr ""

#. type: deffn
#: original_texis/os.texi:2647
#, no-wrap
msgid "Command open-termscript filename"
msgstr ""

#. type: cindex
#: original_texis/os.texi:2648
#, no-wrap
msgid "termscript file"
msgstr ""

#. type: deffn
#: original_texis/os.texi:2657
msgid "This function is used to open a @dfn{termscript file} that will record all the characters sent by Emacs to the terminal.  It returns @code{nil}.  Termscript files are useful for investigating problems where Emacs garbles the screen, problems that are due to incorrect Termcap entries or to undesirable settings of terminal options more often than to actual Emacs bugs.  Once you are certain which characters were actually output, you can determine reliably whether they correspond to the Termcap specifications in use."
msgstr ""

#. type: group
#: original_texis/os.texi:2662
#, no-wrap
msgid ""
"(open-termscript \"../junk/termscript\")\n"
"     @result{} nil\n"
msgstr ""

#. type: deffn
#: original_texis/os.texi:2667
msgid "You close the termscript file by calling this function with an argument of @code{nil}."
msgstr ""

#. type: deffn
#: original_texis/os.texi:2669
msgid "See also @code{open-dribble-file} in @ref{Recording Input}."
msgstr ""

#. type: cindex
#: original_texis/os.texi:2673
#, no-wrap
msgid "sound"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2678
msgid "To play sound using Emacs, use the function @code{play-sound}.  Only certain systems are supported; if you call @code{play-sound} on a system which cannot really do the job, it gives an error."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2682
msgid "The sound must be stored as a file in RIFF-WAVE format (@samp{.wav})  or Sun Audio format (@samp{.au})."
msgstr ""

#. type: defun
#: original_texis/os.texi:2683
#, no-wrap
msgid "play-sound sound"
msgstr ""

#. type: defun
#: original_texis/os.texi:2688
msgid "This function plays a specified sound.  The argument, @var{sound}, has the form @code{(sound @var{properties}...)}, where the @var{properties} consist of alternating keywords (particular symbols recognized specially) and values corresponding to them."
msgstr ""

#. type: defun
#: original_texis/os.texi:2691
msgid "Here is a table of the keywords that are currently meaningful in @var{sound}, and their meanings:"
msgstr ""

#. type: item
#: original_texis/os.texi:2693
#, no-wrap
msgid ":file @var{file}"
msgstr ""

#. type: table
#: original_texis/os.texi:2697
msgid "This specifies the file containing the sound to play.  If the file name is not absolute, it is expanded against the directory @code{data-directory}."
msgstr ""

#. type: item
#: original_texis/os.texi:2698
#, no-wrap
msgid ":data @var{data}"
msgstr ""

#. type: table
#: original_texis/os.texi:2702
msgid "This specifies the sound to play without need to refer to a file.  The value, @var{data}, should be a string containing the same bytes as a sound file.  We recommend using a unibyte string."
msgstr ""

#. type: item
#: original_texis/os.texi:2703
#, no-wrap
msgid ":volume @var{volume}"
msgstr ""

#. type: table
#: original_texis/os.texi:2707
msgid "This specifies how loud to play the sound.  It should be a number in the range of 0 to 1.  The default is to use whatever volume has been specified before."
msgstr ""

#. type: item
#: original_texis/os.texi:2708
#, no-wrap
msgid ":device @var{device}"
msgstr ""

#. type: table
#: original_texis/os.texi:2711
msgid "This specifies the system device on which to play the sound, as a string.  The default device is system-dependent."
msgstr ""

#. type: defun
#: original_texis/os.texi:2716
msgid "Before actually playing the sound, @code{play-sound} calls the functions in the list @code{play-sound-functions}.  Each function is called with one argument, @var{sound}."
msgstr ""

#. type: deffn
#: original_texis/os.texi:2718
#, no-wrap
msgid "Command play-sound-file file &optional volume device"
msgstr ""

#. type: deffn
#: original_texis/os.texi:2721
msgid "This function is an alternative interface to playing a sound @var{file} specifying an optional @var{volume} and @var{device}."
msgstr ""

#. type: defvar
#: original_texis/os.texi:2723
#, no-wrap
msgid "play-sound-functions"
msgstr ""

#. type: defvar
#: original_texis/os.texi:2726
msgid "A list of functions to be called before playing a sound.  Each function is called with one argument, a property list that describes the sound."
msgstr ""

#. type: section
#: original_texis/os.texi:2729
#, no-wrap
msgid "Operating on X11 Keysyms"
msgstr ""

#. type: cindex
#: original_texis/os.texi:2730
#, no-wrap
msgid "X11 keysyms"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2734
msgid "To define system-specific X11 keysyms, set the variable @code{system-key-alist}."
msgstr ""

#. type: defvar
#: original_texis/os.texi:2735
#, no-wrap
msgid "system-key-alist"
msgstr ""

#. type: defvar
#: original_texis/os.texi:2740
msgid "This variable's value should be an alist with one element for each system-specific keysym.  Each element has the form @code{(@var{code} . @var{symbol})}, where @var{code} is the numeric keysym code (not including the vendor-specific bit,"
msgstr ""

#. type: ifnottex
#: original_texis/os.texi:2742
msgid "@minus{}2**28),"
msgstr ""

#. type: tex
#: original_texis/os.texi:2745
#, no-wrap
msgid "$-2^{28}$),\n"
msgstr ""

#. type: defvar
#: original_texis/os.texi:2747
msgid "and @var{symbol} is the name for the function key."
msgstr ""

#. type: defvar
#: original_texis/os.texi:2750
msgid "For example @code{(168 . mute-acute)} defines a system-specific key (used by HP X servers) whose numeric code is"
msgstr ""

#. type: ifnottex
#: original_texis/os.texi:2752
msgid "@minus{}2**28"
msgstr ""

#. type: tex
#: original_texis/os.texi:2755
#, no-wrap
msgid "$-2^{28}$\n"
msgstr ""

#. type: defvar
#: original_texis/os.texi:2757
msgid "+ 168."
msgstr ""

#. type: defvar
#: original_texis/os.texi:2761
msgid "It is not crucial to exclude from the alist the keysyms of other X servers; those do no harm, as long as they don't conflict with the ones used by the X server actually in use."
msgstr ""

#. type: defvar
#: original_texis/os.texi:2764
msgid "The variable is always local to the current terminal, and cannot be buffer-local.  @xref{Multiple Terminals}."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2768
msgid "You can specify which keysyms Emacs should use for the Control, Meta, Alt, Hyper, and Super modifiers by setting these variables:"
msgstr ""

#. type: defvar
#: original_texis/os.texi:2769
#, no-wrap
msgid "x-ctrl-keysym"
msgstr ""

#. type: defvarx
#: original_texis/os.texi:2770
#, no-wrap
msgid "x-alt-keysym"
msgstr ""

#. type: defvarx
#: original_texis/os.texi:2771
#, no-wrap
msgid "x-meta-keysym"
msgstr ""

#. type: defvarx
#: original_texis/os.texi:2772
#, no-wrap
msgid "x-hyper-keysym"
msgstr ""

#. type: defvarx
#: original_texis/os.texi:2773
#, no-wrap
msgid "x-super-keysym"
msgstr ""

#. type: defvar
#: original_texis/os.texi:2777
msgid "The name of the keysym that should stand for the Control modifier (respectively, for Alt, Meta, Hyper, and Super).  For example, here is how to swap the Meta and Alt modifiers within Emacs:"
msgstr ""

#. type: lisp
#: original_texis/os.texi:2780
#, no-wrap
msgid ""
"(setq x-alt-keysym 'meta)\n"
"(setq x-meta-keysym 'alt)\n"
msgstr ""

#. type: cindex
#: original_texis/os.texi:2785
#, no-wrap
msgid "batch mode"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2795
msgid "The command-line option @samp{-batch} causes Emacs to run noninteractively.  In this mode, Emacs does not read commands from the terminal, it does not alter the terminal modes, and it does not expect to be outputting to an erasable screen.  The idea is that you specify Lisp programs to run; when they are finished, Emacs should exit.  The way to specify the programs to run is with @samp{-l @var{file}}, which loads the library named @var{file}, or @samp{-f @var{function}}, which calls @var{function} with no arguments, or @samp{--eval=@var{form}}."
msgstr ""

#. type: defvar
#: original_texis/os.texi:2796
#, no-wrap
msgid "noninteractive"
msgstr ""

#. type: defvar
#: original_texis/os.texi:2798
msgid "This variable is non-@code{nil} when Emacs is running in batch mode."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2804
msgid "If the specified Lisp program signals an unhandled error in batch mode, Emacs exits with a non-zero exit status after invoking the Lisp debugger which shows the Lisp backtrace (@pxref{Invoking the Debugger}) on the standard error stream:"
msgstr ""

#. type: example
#: original_texis/os.texi:2807
#, no-wrap
msgid ""
"$ emacs -Q --batch --eval '(error \"foo\")'; echo $?\n"
"\n"
msgstr ""

#. type: group
#: original_texis/os.texi:2820
#, no-wrap
msgid ""
"Error: error (\"foo\")\n"
"mapbacktrace(#f(compiled-function (evald func args flags) #<bytecode -0x4f85c5\n"
"7c45e2f81>))\n"
"debug-early-backtrace()\n"
"debug-early(error (error \"foo\"))\n"
"signal(error (\"foo\"))\n"
"error(\"foo\")\n"
"eval((error \"foo\") t)\n"
"command-line-1((\"--eval\" \"(error \\\"foo\\\")\"))\n"
"command-line()\n"
"normal-top-level()\n"
msgstr ""

#. type: example
#: original_texis/os.texi:2823
#, no-wrap
msgid ""
"foo\n"
"255\n"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2835
msgid "Any Lisp program output that would normally go to the echo area, either using @code{message}, or using @code{prin1}, etc., with @code{t} as the stream (@pxref{Output Streams}), goes instead to Emacs's standard descriptors when in batch mode: @code{message} writes to the standard error descriptor, while @code{prin1} and other print functions write to the standard output.  Similarly, input that would normally come from the minibuffer is read from the standard input descriptor.  Thus, Emacs behaves much like a noninteractive application program.  (The echo area output that Emacs itself normally generates, such as command echoing, is suppressed entirely.)"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2841
msgid "Non-ASCII text written to the standard output or error descriptors is by default encoded using @code{locale-coding-system} (@pxref{Locales})  if it is non-@code{nil}; this can be overridden by binding @code{coding-system-for-write} to a coding system of you choice (@pxref{Explicit Encoding})."
msgstr ""

#. type: vindex
#: original_texis/os.texi:2842
#, no-wrap
msgid "gc-cons-percentage@r{, in batch mode}"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2849
msgid "In batch mode, Emacs will enlarge the value of the @code{gc-cons-percentage} variable from the default of @samp{0.1} up to @samp{1.0}.  Batch jobs that are supposed to run for a long time should adjust the limit back down again, because this means that less garbage collection will be performed by default (and more memory consumed)."
msgstr ""

#. type: cindex
#: original_texis/os.texi:2852
#, no-wrap
msgid "session manager"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2861
msgid "Emacs supports the X Session Management Protocol, which is used to suspend and restart applications.  In the X Window System, a program called the @dfn{session manager} is responsible for keeping track of the applications that are running.  When the X server shuts down, the session manager asks applications to save their state, and delays the actual shutdown until they respond.  An application can also cancel the shutdown."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2867
msgid "When the session manager restarts a suspended session, it directs these applications to individually reload their saved state.  It does this by specifying a special command-line argument that says what saved session to restore.  For Emacs, this argument is @samp{--smid @var{session}}."
msgstr ""

#. type: defvar
#: original_texis/os.texi:2868
#, no-wrap
msgid "emacs-save-session-functions"
msgstr ""

#. type: cindex
#: original_texis/os.texi:2869
#, no-wrap
msgid "session file"
msgstr ""

#. type: defvar
#: original_texis/os.texi:2877
msgid "Emacs supports saving state via a hook called @code{emacs-save-session-functions}.  Emacs runs this hook when the session manager tells it that the window system is shutting down.  The functions are called with no arguments, and with the current buffer set to a temporary buffer.  Each function can use @code{insert} to add Lisp code to this buffer.  At the end, Emacs saves the buffer in a file, called the @dfn{session file}."
msgstr ""

#. type: findex
#: original_texis/os.texi:2878
#, no-wrap
msgid "emacs-session-restore"
msgstr ""

#. type: defvar
#: original_texis/os.texi:2883
msgid "Subsequently, when the session manager restarts Emacs, it loads the session file automatically (@pxref{Loading}).  This is performed by a function named @code{emacs-session-restore}, which is called during startup.  @xref{Startup Summary}."
msgstr ""

#. type: defvar
#: original_texis/os.texi:2887
msgid "If a function in @code{emacs-save-session-functions} returns non-@code{nil}, Emacs tells the session manager to cancel the shutdown."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2891
msgid "Here is an example that just inserts some text into @file{*scratch*} when Emacs is restarted by the session manager."
msgstr ""

#. type: group
#: original_texis/os.texi:2895
#, no-wrap
msgid "(add-hook 'emacs-save-session-functions 'save-yourself-test)\n"
msgstr ""

#. type: group
#: original_texis/os.texi:2903
#, no-wrap
msgid ""
"(defun save-yourself-test ()\n"
"  (insert\n"
"   (format \"%S\" '(with-current-buffer \"*scratch*\"\n"
"                   (insert \"I am restored\"))))\n"
"  nil)\n"
msgstr ""

#. type: cindex
#: original_texis/os.texi:2908
#, no-wrap
msgid "desktop notifications"
msgstr ""

#. type: cindex
#: original_texis/os.texi:2909
#, no-wrap
msgid "notifications, on desktop"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2914
msgid "Emacs is able to send @dfn{notifications} on systems that support the freedesktop.org Desktop Notifications Specification, MS-Windows, Haiku, and Android."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:2919
msgid "In order to use this functionality on POSIX hosts, Emacs must have been compiled with D-Bus support, and the @code{notifications} library must be loaded.  @xref{Top, , D-Bus,dbus,D-Bus integration in Emacs}.  The following function is supported when D-Bus support is available:"
msgstr ""

#. type: defun
#: original_texis/os.texi:2920
#, no-wrap
msgid "notifications-notify &rest params"
msgstr ""

#. type: defun
#: original_texis/os.texi:2925
msgid "This function sends a notification to the desktop via D-Bus, consisting of the parameters specified by the @var{params} arguments.  These arguments should consist of alternating keyword and value pairs.  The supported keywords and values are as follows:"
msgstr ""

#. type: item
#: original_texis/os.texi:2927
#, no-wrap
msgid ":bus @var{bus}"
msgstr ""

#. type: table
#: original_texis/os.texi:2930
msgid "The D-Bus bus.  This argument is needed only if a bus other than @code{:session} shall be used."
msgstr ""

#. type: item
#: original_texis/os.texi:2931 original_texis/os.texi:3201
#: original_texis/os.texi:3244 original_texis/os.texi:3275
#, no-wrap
msgid ":title @var{title}"
msgstr ""

#. type: table
#: original_texis/os.texi:2933
msgid "The notification title."
msgstr ""

#. type: item
#: original_texis/os.texi:2934
#, no-wrap
msgid ":body @var{text}"
msgstr ""

#. type: table
#: original_texis/os.texi:2940
msgid "The notification body text.  Depending on the implementation of the notification server, the text could contain HTML markups, like @samp{\"<b>bold text</b>\"}, hyperlinks, or images.  Special HTML characters must be encoded, as @samp{\"Contact &lt;postmaster@@localhost&gt;!\"}."
msgstr ""

#. type: item
#: original_texis/os.texi:2941
#, no-wrap
msgid ":app-name @var{name}"
msgstr ""

#. type: table
#: original_texis/os.texi:2944
msgid "The name of the application sending the notification.  The default is @code{notifications-application-name}."
msgstr ""

#. type: item
#: original_texis/os.texi:2945
#, no-wrap
msgid ":replaces-id @var{id}"
msgstr ""

#. type: table
#: original_texis/os.texi:2948
msgid "The notification @var{id} that this notification replaces.  @var{id} must be the result of a previous @code{notifications-notify} call."
msgstr ""

#. type: item
#: original_texis/os.texi:2949
#, no-wrap
msgid ":app-icon @var{icon-file}"
msgstr ""

#. type: table
#: original_texis/os.texi:2959
msgid "The file name of the notification icon.  If set to @code{nil}, no icon is displayed.  The default is @code{notifications-application-icon}.  If the value is a string, the function interprets it as a file name and converts to absolute by using @code{expand-file-name}; if it is a symbol, the function will use its name (which is useful when using the Icon Naming Specification @footnote{For more information about icon naming convention see @uref{https://specifications.freedesktop.org/icon-naming-spec/icon-naming-spec-latest.html, Icon Naming Specification}})."
msgstr ""

#. type: item
#: original_texis/os.texi:2960
#, no-wrap
msgid ":actions (@var{key} @var{title} @var{key} @var{title} ...)"
msgstr ""

#. type: table
#: original_texis/os.texi:2965
msgid "A list of actions to be applied.  @var{key} and @var{title} are both strings.  The default action (usually invoked by clicking the notification) should have a key named @samp{\"default\"}.  The title can be anything, though implementations are free not to display it."
msgstr ""

#. type: item
#: original_texis/os.texi:2966 original_texis/os.texi:3281
#, no-wrap
msgid ":timeout @var{timeout}"
msgstr ""

#. type: table
#: original_texis/os.texi:2972
msgid "The timeout time in milliseconds since the display of the notification at which the notification should automatically close.  If @minus{}1, the notification's expiration time is dependent on the notification server's settings, and may vary for the type of notification.  If 0, the notification never expires.  Default value is @minus{}1."
msgstr ""

#. type: item
#: original_texis/os.texi:2973 original_texis/os.texi:3247
#: original_texis/os.texi:3287
#, no-wrap
msgid ":urgency @var{urgency}"
msgstr ""

#. type: table
#: original_texis/os.texi:2975
msgid "The urgency level.  It can be @code{low}, @code{normal}, or @code{critical}."
msgstr ""

#. type: item
#: original_texis/os.texi:2976
#, no-wrap
msgid ":action-items"
msgstr ""

#. type: table
#: original_texis/os.texi:2979
msgid "When this keyword is given, the @var{title} string of the actions is interpreted as icon name."
msgstr ""

#. type: item
#: original_texis/os.texi:2980
#, no-wrap
msgid ":category @var{category}"
msgstr ""

#. type: table
#: original_texis/os.texi:2985
msgid "The type of notification this is, a string.  See the @url{https://specifications.freedesktop.org/notification-spec/notification-spec-latest.html#categories, Desktop Notifications Specification} for a list of standard categories."
msgstr ""

#. type: item
#: original_texis/os.texi:2986
#, no-wrap
msgid ":desktop-entry @var{filename}"
msgstr ""

#. type: table
#: original_texis/os.texi:2989
msgid "This specifies the name of the desktop filename representing the calling program, like @samp{\"emacs\"}."
msgstr ""

#. type: item
#: original_texis/os.texi:2990
#, no-wrap
msgid ":image-data (@var{width} @var{height} @var{rowstride} @var{has-alpha} @var{bits} @var{channels} @var{data})"
msgstr ""

#. type: table
#: original_texis/os.texi:2994
msgid "This is a raw data image format that describes the width, height, rowstride, whether there is an alpha channel, bits per sample, channels and image data, respectively."
msgstr ""

#. type: item
#: original_texis/os.texi:2995
#, no-wrap
msgid ":image-path @var{path}"
msgstr ""

#. type: table
#: original_texis/os.texi:2999
msgid "This is represented either as a URI (@samp{file://} is the only URI schema supported right now) or a name in a freedesktop.org-compliant icon theme from @samp{$XDG_DATA_DIRS/icons}."
msgstr ""

#. type: item
#: original_texis/os.texi:3000
#, no-wrap
msgid ":sound-file @var{filename}"
msgstr ""

#. type: table
#: original_texis/os.texi:3002
msgid "The path to a sound file to play when the notification pops up."
msgstr ""

#. type: item
#: original_texis/os.texi:3003
#, no-wrap
msgid ":sound-name @var{name}"
msgstr ""

#. type: table
#: original_texis/os.texi:3008
msgid "A themable named sound from the freedesktop.org sound naming specification from @samp{$XDG_DATA_DIRS/sounds}, to play when the notification pops up.  Similar to the icon name, only for sounds.  An example would be @samp{\"message-new-instant\"}."
msgstr ""

#. type: item
#: original_texis/os.texi:3009
#, no-wrap
msgid ":suppress-sound"
msgstr ""

#. type: table
#: original_texis/os.texi:3012
msgid "Causes the server to suppress playing any sounds, if it has that ability."
msgstr ""

#. type: item
#: original_texis/os.texi:3013
#, no-wrap
msgid ":resident"
msgstr ""

#. type: table
#: original_texis/os.texi:3019
msgid "When set the server will not automatically remove the notification when an action has been invoked.  The notification will remain resident in the server until it is explicitly removed by the user or by the sender.  This hint is likely only useful when the server has the @code{:persistence} capability."
msgstr ""

#. type: item
#: original_texis/os.texi:3020
#, no-wrap
msgid ":transient"
msgstr ""

#. type: table
#: original_texis/os.texi:3023
msgid "When set the server will treat the notification as transient and by-pass the server's persistence capability, if it should exist."
msgstr ""

#. type: item
#: original_texis/os.texi:3024
#, no-wrap
msgid ":x @var{position}"
msgstr ""

#. type: itemx
#: original_texis/os.texi:3025
#, no-wrap
msgid ":y @var{position}"
msgstr ""

#. type: table
#: original_texis/os.texi:3028
msgid "Specifies the X, Y location on the screen that the notification should point to.  Both arguments must be used together."
msgstr ""

#. type: item
#: original_texis/os.texi:3029
#, no-wrap
msgid ":on-action @var{function}"
msgstr ""

#. type: table
#: original_texis/os.texi:3033
msgid "Function to call when an action is invoked.  The notification @var{id} and the @var{key} of the action are passed as arguments to the function."
msgstr ""

#. type: item
#: original_texis/os.texi:3034
#, no-wrap
msgid ":on-close @var{function}"
msgstr ""

#. type: table
#: original_texis/os.texi:3038
msgid "Function to call when the notification has been closed by timeout or by the user.  The function receive the notification @var{id} and the closing @var{reason} as arguments:"
msgstr ""

#. type: item
#: original_texis/os.texi:3040
#, no-wrap
msgid "@code{expired} if the notification has expired"
msgstr ""

#. type: item
#: original_texis/os.texi:3041
#, no-wrap
msgid "@code{dismissed} if the notification was dismissed by the user"
msgstr ""

#. type: item
#: original_texis/os.texi:3042
#, no-wrap
msgid "@code{close-notification} if the notification was closed by a call to"
msgstr ""

#. type: code{#1}
#: original_texis/os.texi:3044
msgid "notifications-close-notification"
msgstr ""

#. type: item
#: original_texis/os.texi:3044
#, no-wrap
msgid "@code{undefined} if the notification server hasn't provided a reason"
msgstr ""

#. type: defun
#: original_texis/os.texi:3050
msgid "Which parameters are accepted by the notification server can be checked via @code{notifications-get-capabilities}."
msgstr ""

#. type: defun
#: original_texis/os.texi:3055
msgid "This function returns a notification id, an integer, which can be used to manipulate the notification item with @code{notifications-close-notification} or the @code{:replaces-id} argument of another @code{notifications-notify} call.  For example:"
msgstr ""

#. type: group
#: original_texis/os.texi:3061
#, no-wrap
msgid ""
"(defun my-on-action-function (id key)\n"
"  (message \"Message %d, key \\\"%s\\\" pressed\" id key))\n"
"     @result{} my-on-action-function\n"
msgstr ""

#. type: group
#: original_texis/os.texi:3067
#, no-wrap
msgid ""
"(defun my-on-close-function (id reason)\n"
"  (message \"Message %d, closed due to \\\"%s\\\"\" id reason))\n"
"     @result{} my-on-close-function\n"
msgstr ""

#. type: group
#: original_texis/os.texi:3077
#, no-wrap
msgid ""
"(notifications-notify\n"
" :title \"Title\"\n"
" :body \"This is <b>important</b>.\"\n"
" :actions '(\"Confirm\" \"I agree\" \"Refuse\" \"I disagree\")\n"
" :on-action 'my-on-action-function\n"
" :on-close 'my-on-close-function)\n"
"     @result{} 22\n"
msgstr ""

#. type: group
#: original_texis/os.texi:3083
#, no-wrap
msgid ""
"A message window opens on the desktop.  Press ``I agree''.\n"
"     @result{} Message 22, key \"Confirm\" pressed\n"
"        Message 22, closed due to \"dismissed\"\n"
msgstr ""

#. type: defun
#: original_texis/os.texi:3087
#, no-wrap
msgid "notifications-close-notification id &optional bus"
msgstr ""

#. type: defun
#: original_texis/os.texi:3091
msgid "This function closes a notification with identifier @var{id}.  @var{bus} can be a string denoting a D-Bus connection, the default is @code{:session}."
msgstr ""

#. type: defun
#: original_texis/os.texi:3093
#, no-wrap
msgid "notifications-get-capabilities &optional bus"
msgstr ""

#. type: defun
#: original_texis/os.texi:3098
msgid "Returns the capabilities of the notification server, a list of symbols.  @var{bus} can be a string denoting a D-Bus connection, the default is @code{:session}.  The following capabilities can be expected:"
msgstr ""

#. type: item
#: original_texis/os.texi:3100
#, no-wrap
msgid ":actions"
msgstr ""

#. type: table
#: original_texis/os.texi:3102
msgid "The server will provide the specified actions to the user."
msgstr ""

#. type: item
#: original_texis/os.texi:3103
#, no-wrap
msgid ":body"
msgstr ""

#. type: table
#: original_texis/os.texi:3105
msgid "Supports body text."
msgstr ""

#. type: item
#: original_texis/os.texi:3106
#, no-wrap
msgid ":body-hyperlinks"
msgstr ""

#. type: table
#: original_texis/os.texi:3108
msgid "The server supports hyperlinks in the notifications."
msgstr ""

#. type: item
#: original_texis/os.texi:3109
#, no-wrap
msgid ":body-images"
msgstr ""

#. type: table
#: original_texis/os.texi:3111
msgid "The server supports images in the notifications."
msgstr ""

#. type: item
#: original_texis/os.texi:3112
#, no-wrap
msgid ":body-markup"
msgstr ""

#. type: table
#: original_texis/os.texi:3114
msgid "Supports markup in the body text."
msgstr ""

#. type: item
#: original_texis/os.texi:3115
#, no-wrap
msgid ":icon-multi"
msgstr ""

#. type: table
#: original_texis/os.texi:3118
msgid "The server will render an animation of all the frames in a given image array."
msgstr ""

#. type: item
#: original_texis/os.texi:3119
#, no-wrap
msgid ":icon-static"
msgstr ""

#. type: table
#: original_texis/os.texi:3122
msgid "Supports display of exactly 1 frame of any given image array.  This value is mutually exclusive with @code{:icon-multi}."
msgstr ""

#. type: item
#: original_texis/os.texi:3123
#, no-wrap
msgid ":persistence"
msgstr ""

#. type: table
#: original_texis/os.texi:3125
msgid "The server supports persistence of notifications."
msgstr ""

#. type: item
#: original_texis/os.texi:3126
#, no-wrap
msgid ":sound"
msgstr ""

#. type: table
#: original_texis/os.texi:3128
msgid "The server supports sounds on notifications."
msgstr ""

#. type: defun
#: original_texis/os.texi:3132
msgid "Further vendor-specific caps start with @code{:x-vendor}, like @code{:x-gnome-foo-cap}."
msgstr ""

#. type: defun
#: original_texis/os.texi:3134
#, no-wrap
msgid "notifications-get-server-information &optional bus"
msgstr ""

#. type: defun
#: original_texis/os.texi:3139
msgid "Return information on the notification server, a list of strings.  @var{bus} can be a string denoting a D-Bus connection, the default is @code{:session}.  The returned list is @code{(@var{name} @var{vendor} @var{version} @var{spec-version})}."
msgstr ""

#. type: item
#: original_texis/os.texi:3141
#, no-wrap
msgid "name"
msgstr ""

#. type: table
#: original_texis/os.texi:3143
msgid "The product name of the server."
msgstr ""

#. type: item
#: original_texis/os.texi:3144
#, no-wrap
msgid "vendor"
msgstr ""

#. type: table
#: original_texis/os.texi:3146
msgid "The vendor name.  For example, @samp{\"KDE\"}, @samp{\"GNOME\"}."
msgstr ""

#. type: item
#: original_texis/os.texi:3147
#, no-wrap
msgid "version"
msgstr ""

#. type: table
#: original_texis/os.texi:3149
msgid "The server's version number."
msgstr ""

#. type: item
#: original_texis/os.texi:3150
#, no-wrap
msgid "spec-version"
msgstr ""

#. type: table
#: original_texis/os.texi:3152
msgid "The specification version the server is compliant with."
msgstr ""

#. type: defun
#: original_texis/os.texi:3156
msgid "If @var{spec_version} is @code{nil}, the server supports a specification prior to @samp{\"1.0\"}."
msgstr ""

#. type: cindex
#: original_texis/os.texi:3158
#, no-wrap
msgid "tray notifications, MS-Windows"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:3162
msgid "When Emacs runs on MS-Windows as a GUI session, it supports a small subset of the D-Bus notifications functionality via a native primitive:"
msgstr ""

#. type: defun
#: original_texis/os.texi:3163
#, no-wrap
msgid "w32-notification-notify &rest params"
msgstr ""

#. type: defun
#: original_texis/os.texi:3167
msgid "This function displays an MS-Windows tray notification as specified by @var{params}.  MS-Windows tray notifications are displayed in a balloon from an icon in the notification area of the taskbar."
msgstr ""

#. type: defun
#: original_texis/os.texi:3171
msgid "Value is the integer unique ID of the notification that can be used to remove the notification using @code{w32-notification-close}, described below.  If the function fails, the return value is @code{nil}."
msgstr ""

#. type: defun
#: original_texis/os.texi:3175
msgid "The arguments @var{params} are specified as keyword/value pairs.  All the parameters are optional, but if no parameters are specified, the function will do nothing and return @code{nil}."
msgstr ""

#. type: defun
#: original_texis/os.texi:3177
msgid "The following parameters are supported:"
msgstr ""

#. type: item
#: original_texis/os.texi:3179 original_texis/os.texi:3307
#, no-wrap
msgid ":icon @var{icon}"
msgstr ""

#. type: table
#: original_texis/os.texi:3185
msgid "Display @var{icon} in the system tray.  If @var{icon} is a string, it should specify a file name from which to load the icon; the specified file should be a @file{.ico} Windows icon file.  If @var{icon} is not a string, or if this parameter is not specified, the standard Emacs icon will be used."
msgstr ""

#. type: item
#: original_texis/os.texi:3186
#, no-wrap
msgid ":tip @var{tip}"
msgstr ""

#. type: table
#: original_texis/os.texi:3194
msgid "Use @var{tip} as the tooltip for the notification.  If @var{tip} is a string, this is the text of a tooltip that will be shown when the mouse pointer hovers over the tray icon added by the notification.  If @var{tip} is not a string, or if this parameter is not specified, the default tooltip text is @samp{Emacs notification}.  The tooltip text can be up to 127 characters long (63 on Windows versions before W2K).  Longer strings will be truncated."
msgstr ""

#. type: item
#: original_texis/os.texi:3195
#, no-wrap
msgid ":level @var{level}"
msgstr ""

#. type: table
#: original_texis/os.texi:3200
msgid "Notification severity level, one of @code{info}, @code{warning}, or @code{error}.  If given, the value determines the icon displayed to the left of the notification title, but only if the @code{:title} parameter (see below) is also specified and is a string."
msgstr ""

#. type: table
#: original_texis/os.texi:3205
msgid "The title of the notification.  If @var{title} is a string, it is displayed in a larger font immediately above the body text.  The title text can be up to 63 characters long; longer text will be truncated."
msgstr ""

#. type: item
#: original_texis/os.texi:3206 original_texis/os.texi:3245
#: original_texis/os.texi:3276
#, no-wrap
msgid ":body @var{body}"
msgstr ""

#. type: table
#: original_texis/os.texi:3212
msgid "The body of the notification.  If @var{body} is a string, it specifies the text of the notification message.  Use embedded newlines to control how the text is broken into lines.  The body text can be up to 255 characters long, and will be truncated if it's longer.  Unlike with D-Bus, the body text should be plain text, with no markup."
msgstr ""

#. type: defun
#: original_texis/os.texi:3217
msgid "Note that versions of Windows before W2K support only @code{:icon} and @code{:tip}.  The other parameters can be passed, but they will be ignored on those old systems."
msgstr ""

#. type: defun
#: original_texis/os.texi:3221
msgid "There can be at most one active notification at any given time.  An active notification must be removed by calling @code{w32-notification-close} before a new one can be shown."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:3225
msgid "To remove the notification and its icon from the taskbar, use the following function:"
msgstr ""

#. type: defun
#: original_texis/os.texi:3226
#, no-wrap
msgid "w32-notification-close id"
msgstr ""

#. type: defun
#: original_texis/os.texi:3229
msgid "This function removes the tray notification given by its unique @var{id}."
msgstr ""

#. type: cindex
#: original_texis/os.texi:3231
#, no-wrap
msgid "desktop notifications, Haiku"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:3237
msgid "When Emacs runs under Haiku as a GUI program, it is also provides a restricted pastiche of the D-Bus desktop notifications interface previously addressed.  The principle capabilities absent from the function detailed below are call-back functions such as @code{:actions}, @code{:on-action} and @code{:on-close}."
msgstr ""

#. type: defun
#: original_texis/os.texi:3238
#, no-wrap
msgid "haiku-notifications-notify &rest params"
msgstr ""

#. type: defun
#: original_texis/os.texi:3242
msgid "This function sends a notification to the desktop notification server, incorporating a number of parameters that are akin to some of those accepted by @code{notifications-notify}.  The parameters are:"
msgstr ""

#. type: item
#: original_texis/os.texi:3246 original_texis/os.texi:3277
#, no-wrap
msgid ":replaces-id @var{replaces-id}"
msgstr ""

#. type: table
#: original_texis/os.texi:3250
msgid "These have the same meaning as they do when used in calls to @code{notifications-notify}."
msgstr ""

#. type: item
#: original_texis/os.texi:3251
#, no-wrap
msgid ":app-icon @var{app-icon}"
msgstr ""

#. type: table
#: original_texis/os.texi:3255
msgid "This should be the file name designating an image file to use as the icon for the notification displayed.  If @code{nil}, the icon presented will instead be Emacs's app icon."
msgstr ""

#. type: defun
#: original_texis/os.texi:3260
msgid "Its return value is a number identifying the notification, which can be exploited as the @code{:replaces-id} parameter to a subsequent call to this function."
msgstr ""

#. type: cindex
#: original_texis/os.texi:3262
#, no-wrap
msgid "desktop notifications, Android"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:3268
msgid "When Emacs is built as an Android application package, displaying notifications is facilitated by the function @code{android-notifications-notify}.  This function does not feature call-backs, and has several idiosyncrasies, when compared to @code{notifications-notify}."
msgstr ""

#. type: defun
#: original_texis/os.texi:3269
#, no-wrap
msgid "android-notifications-notify &rest params"
msgstr ""

#. type: defun
#: original_texis/os.texi:3273
msgid "This function displays a desktop notification.  @var{params} is a list of parameters analogous to its namesake in @code{notifications-notify}.  The parameters are:"
msgstr ""

#. type: item
#: original_texis/os.texi:3278
#, no-wrap
msgid ":on-action @var{on-action}"
msgstr ""

#. type: item
#: original_texis/os.texi:3279
#, no-wrap
msgid ":on-cancel @var{on-close}"
msgstr ""

#. type: item
#: original_texis/os.texi:3280
#, no-wrap
msgid ":actions @var{actions}"
msgstr ""

#. type: item
#: original_texis/os.texi:3282
#, no-wrap
msgid ":resident @var{resident}"
msgstr ""

#. type: table
#: original_texis/os.texi:3286
msgid "These have the same meaning as they do when used in calls to @code{notifications-notify}, except that no more than three non-default actions will be displayed."
msgstr ""

#. type: table
#: original_texis/os.texi:3292
msgid "The set of accepted values for @var{urgency} is the same as with @code{notifications-notify}, but the urgency applies to all notifications displayed with the defined @var{group}, except under Android 7.1 and earlier."
msgstr ""

#. type: item
#: original_texis/os.texi:3293
#, no-wrap
msgid ":group @var{group}"
msgstr ""

#. type: table
#: original_texis/os.texi:3298
msgid "@var{group} is a string that designates a category to which the notification sent will belong.  This category is reproduced within the system's notification settings menus, but is ignored under Android 7.1 and earlier."
msgstr ""

#. type: table
#: original_texis/os.texi:3301
msgid "If @var{group} is nil or not present within @var{params}, it is replaced by the string @samp{\"Desktop Notifications\"}."
msgstr ""

#. type: table
#: original_texis/os.texi:3306
msgid "Callers should provide one stable combination of @var{urgency} and @var{group} for each kind of notification they send, given that the system may elect to disregard @var{urgency} if it does not match that of any notification previously delivered to @var{group}."
msgstr ""

#. type: table
#: original_texis/os.texi:3313
msgid "This parameter controls the symbolic icon the notification will be displayed with.  Its value is a string designating an icon within the @code{android.R.drawable} system package.  See @uref{https://developer.android.com/reference/android/R.drawable,R.drawable | Android Developers} for a list of such icons."
msgstr ""

#. type: table
#: original_texis/os.texi:3316
msgid "If it is not provided within @var{params} or @var{icon} does not exist, it defaults to @samp{\"ic_dialog_alert\"}."
msgstr ""

#. type: defun
#: original_texis/os.texi:3321
msgid "It returns a number identifying the notification, which may be supplied as the @code{:replaces-id} parameter to a later call to this function."
msgstr ""

#. type: defun
#: original_texis/os.texi:3326
msgid "If Emacs is not afforded the permission to display notifications (@pxref{Android Environment,,, emacs, The GNU Emacs Manual}) under Android 13 and later, any notifications sent will be silently disregarded."
msgstr ""

#. type: section
#: original_texis/os.texi:3329
#, no-wrap
msgid "Notifications on File Changes"
msgstr ""

#. type: cindex
#: original_texis/os.texi:3330
#, no-wrap
msgid "file notifications"
msgstr ""

#. type: cindex
#: original_texis/os.texi:3331
#, no-wrap
msgid "watch, for filesystem events"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:3338
msgid "Several operating systems support watching of filesystems for changes to files or their attributes.  If configured properly, Emacs links a respective library like @file{inotify}, @file{kqueue}, @file{gfilenotify}, or @file{w32notify} statically.  These libraries enable watching of filesystems on the local machine."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:3342
msgid "It is also possible to watch filesystems on remote machines, @pxref{Remote Files,, Remote Files, emacs, The GNU Emacs Manual}.  This does not depend on one of the libraries linked to Emacs."
msgstr ""

#. type: Plain text
#: original_texis/os.texi:3349
msgid "Since all these libraries emit different events upon notified file changes, Emacs provides a special library @code{filenotify} which presents a unified interface to applications.  Lisp programs that want to receive file notifications should always use this library in preference to the native ones.  This section documents the @code{filenotify} library functions and variables."
msgstr ""

#. type: defun
#: original_texis/os.texi:3350
#, no-wrap
msgid "file-notify-add-watch file flags callback"
msgstr ""

#. type: defun
#: original_texis/os.texi:3354
msgid "Add a watch for filesystem events pertaining to @var{file}.  This arranges for filesystem events pertaining to @var{file} to be reported to Emacs."
msgstr ""

#. type: defun
#: original_texis/os.texi:3359
msgid "The returned value is a descriptor for the added watch.  Its type depends on the underlying library, and in general cannot be assumed to be an integer as in the example below.  It should be used for comparison by @code{equal} only."
msgstr ""

#. type: defun
#: original_texis/os.texi:3362
msgid "If the @var{file} cannot be watched for some reason, this function signals a @code{file-notify-error} error."
msgstr ""

#. type: defun
#: original_texis/os.texi:3367
msgid "Sometimes, mounted filesystems cannot be watched for file changes.  This is not detected by this function, and so a non-@code{nil} return value does not guarantee that changes on @var{file} will be actually notified."
msgstr ""

#. type: defun
#: original_texis/os.texi:3370
msgid "If @var{file} is a symlink, it doesn't follow that link.  Just @var{file} itself will be watched."
msgstr ""

#. type: defun
#: original_texis/os.texi:3373
msgid "@var{flags} is a list of conditions to set what will be watched for.  It can include the following symbols:"
msgstr ""

#. type: item
#: original_texis/os.texi:3375
#, no-wrap
msgid "change"
msgstr ""

#. type: table
#: original_texis/os.texi:3377
msgid "watch for changes in file's contents"
msgstr ""

#. type: item
#: original_texis/os.texi:3377
#, no-wrap
msgid "attribute-change"
msgstr ""

#. type: table
#: original_texis/os.texi:3380
msgid "watch for changes in file attributes, like permissions or modification time"
msgstr ""

#. type: defun
#: original_texis/os.texi:3386
msgid "If @var{file} is a directory, @code{change} watches for file creation and deletion in that directory.  Some of the native file notification libraries also report file changes in that case.  This does not work recursively."
msgstr ""

#. type: defun
#: original_texis/os.texi:3389
msgid "When any event happens, Emacs will call the @var{callback} function passing it a single argument @var{event}, which is of the form"
msgstr ""

#. type: lisp
#: original_texis/os.texi:3392
#, no-wrap
msgid "(@var{descriptor} @var{action} @var{file} [@var{file1}])\n"
msgstr ""

#. type: defun
#: original_texis/os.texi:3397
msgid "@var{descriptor} is the same object as the one returned by this function.  @var{action} is the description of the event.  It could be any one of the following symbols:"
msgstr ""

#. type: item
#: original_texis/os.texi:3399
#, no-wrap
msgid "created"
msgstr ""

#. type: table
#: original_texis/os.texi:3401
msgid "@var{file} was created"
msgstr ""

#. type: item
#: original_texis/os.texi:3401
#, no-wrap
msgid "deleted"
msgstr ""

#. type: table
#: original_texis/os.texi:3403
msgid "@var{file} was deleted"
msgstr ""

#. type: item
#: original_texis/os.texi:3403
#, no-wrap
msgid "changed"
msgstr ""

#. type: table
#: original_texis/os.texi:3406
msgid "@var{file}'s contents has changed; with @file{w32notify} library, reports attribute changes as well"
msgstr ""

#. type: item
#: original_texis/os.texi:3406
#, no-wrap
msgid "renamed"
msgstr ""

#. type: table
#: original_texis/os.texi:3408
msgid "@var{file} has been renamed to @var{file1}"
msgstr ""

#. type: item
#: original_texis/os.texi:3408
#, no-wrap
msgid "attribute-changed"
msgstr ""

#. type: table
#: original_texis/os.texi:3410
msgid "a @var{file} attribute was changed"
msgstr ""

#. type: item
#: original_texis/os.texi:3410
#, no-wrap
msgid "stopped"
msgstr ""

#. type: table
#: original_texis/os.texi:3412
msgid "watching @var{file} has stopped"
msgstr ""

#. type: defun
#: original_texis/os.texi:3419
msgid "Note that the @file{w32notify} library does not report @code{attribute-changed} events.  When some file's attribute, like permissions or modification time, has changed, this library reports a @code{changed} event.  Likewise, the @file{kqueue} library does not reliably report file attribute changes when watching a directory."
msgstr ""

#. type: defun
#: original_texis/os.texi:3426
msgid "The @code{stopped} event means that watching the file has been discontinued.  This could be because @code{file-notify-rm-watch} was called (see below), or because the file being watched was deleted, or because the filesystem of the file being watched was unmounted, or due to another error reported from the underlying library which makes further watching impossible."
msgstr ""

#. type: defun
#: original_texis/os.texi:3429
msgid "@var{file} and @var{file1} are the name of the file(s) whose event is being reported.  For example:"
msgstr ""

#. type: group
#: original_texis/os.texi:3434
#, no-wrap
msgid ""
"(require 'filenotify)\n"
"     @result{} filenotify\n"
msgstr ""

#. type: group
#: original_texis/os.texi:3440
#, no-wrap
msgid ""
"(defun my-notify-callback (event)\n"
"  (message \"Event %S\" event))\n"
"     @result{} my-notify-callback\n"
msgstr ""

#. type: group
#: original_texis/os.texi:3446
#, no-wrap
msgid ""
"(file-notify-add-watch\n"
"  \"/tmp\" '(change attribute-change) 'my-notify-callback)\n"
"     @result{} 35025468\n"
msgstr ""

#. type: group
#: original_texis/os.texi:3454
#, no-wrap
msgid ""
"(write-region \"foo\" nil \"/tmp/foo\")\n"
"     @result{} Event (35025468 created \"/tmp/.#foo\")\n"
"        Event (35025468 created \"/tmp/foo\")\n"
"        Event (35025468 changed \"/tmp/foo\")\n"
"        Event (35025468 deleted \"/tmp/.#foo\")\n"
msgstr ""

#. type: group
#: original_texis/os.texi:3461
#, no-wrap
msgid ""
"(write-region \"bla\" nil \"/tmp/foo\")\n"
"     @result{} Event (35025468 created \"/tmp/.#foo\")\n"
"        Event (35025468 changed \"/tmp/foo\")\n"
"        Event (35025468 deleted \"/tmp/.#foo\")\n"
msgstr ""

#. type: group
#: original_texis/os.texi:3466
#, no-wrap
msgid ""
"(set-file-modes \"/tmp/foo\" (default-file-modes) 'nofollow)\n"
"     @result{} Event (35025468 attribute-changed \"/tmp/foo\")\n"
msgstr ""

#. type: defun
#: original_texis/os.texi:3472
msgid "Whether the action @code{renamed} is returned depends on the used watch library.  Otherwise, the actions @code{deleted} and @code{created} could be returned in a random order."
msgstr ""

#. type: group
#: original_texis/os.texi:3477
#, no-wrap
msgid ""
"(rename-file \"/tmp/foo\" \"/tmp/bla\")\n"
"     @result{} Event (35025468 renamed \"/tmp/foo\" \"/tmp/bla\")\n"
msgstr ""

#. type: group
#: original_texis/os.texi:3482
#, no-wrap
msgid ""
"(delete-file \"/tmp/bla\")\n"
"     @result{} Event (35025468 deleted \"/tmp/bla\")\n"
msgstr ""

#. type: defun
#: original_texis/os.texi:3486
#, no-wrap
msgid "file-notify-rm-watch descriptor"
msgstr ""

#. type: defun
#: original_texis/os.texi:3490
msgid "Removes an existing file watch specified by its @var{descriptor}.  @var{descriptor} should be an object returned by @code{file-notify-add-watch}."
msgstr ""

#. type: deffn
#: original_texis/os.texi:3492
#, no-wrap
msgid "Command file-notify-rm-all-watches"
msgstr ""

#. type: deffn
#: original_texis/os.texi:3494
msgid "Removes all existing file notification watches from Emacs."
msgstr ""

#. type: deffn
#: original_texis/os.texi:3498
msgid "Use this command with caution, because it could have unexpected side effects on packages relying on file watches.  It is intended mainly for debugging purposes, or when Emacs has been stalled."
msgstr ""

#. type: defun
#: original_texis/os.texi:3500
#, no-wrap
msgid "file-notify-valid-p descriptor"
msgstr ""

#. type: defun
#: original_texis/os.texi:3504
msgid "Checks a watch specified by its @var{descriptor} for validity.  @var{descriptor} should be an object returned by @code{file-notify-add-watch}."
msgstr ""

#. type: defun
#: original_texis/os.texi:3509
msgid "A watch can become invalid if the file or directory it watches is deleted, or if the watcher thread exits abnormally for any other reason.  Removing the watch by calling @code{file-notify-rm-watch} also makes it invalid."
msgstr ""

#. type: group
#: original_texis/os.texi:3514
#, no-wrap
msgid ""
"(make-directory \"/tmp/foo\")\n"
"     @result{} Event (35025468 created \"/tmp/foo\")\n"
msgstr ""

#. type: group
#: original_texis/os.texi:3521
#, no-wrap
msgid ""
"(setq desc\n"
"      (file-notify-add-watch\n"
"        \"/tmp/foo\" '(change) 'my-notify-callback))\n"
"     @result{} 11359632\n"
msgstr ""

#. type: group
#: original_texis/os.texi:3526
#, no-wrap
msgid ""
"(file-notify-valid-p desc)\n"
"     @result{} t\n"
msgstr ""

#. type: group
#: original_texis/os.texi:3534 original_texis/os.texi:3548
#, no-wrap
msgid ""
"(write-region \"bla\" nil \"/tmp/foo/bla\")\n"
"     @result{} Event (11359632 created \"/tmp/foo/.#bla\")\n"
"        Event (11359632 created \"/tmp/foo/bla\")\n"
"        Event (11359632 changed \"/tmp/foo/bla\")\n"
"        Event (11359632 deleted \"/tmp/foo/.#bla\")\n"
msgstr ""

#. type: group
#: original_texis/os.texi:3540
#, no-wrap
msgid ""
";; Deleting a file in the directory doesn't invalidate the watch.\n"
"(delete-file \"/tmp/foo/bla\")\n"
"     @result{} Event (11359632 deleted \"/tmp/foo/bla\")\n"
msgstr ""

#. type: group
#: original_texis/os.texi:3558
#, no-wrap
msgid ""
";; Deleting the directory invalidates the watch.\n"
";; Events arrive for different watch descriptors.\n"
"(delete-directory \"/tmp/foo\" 'recursive)\n"
"     @result{} Event (35025468 deleted \"/tmp/foo\")\n"
"        Event (11359632 deleted \"/tmp/foo/bla\")\n"
"        Event (11359632 deleted \"/tmp/foo\")\n"
"        Event (11359632 stopped \"/tmp/foo\")\n"
msgstr ""

#. type: group
#: original_texis/os.texi:3563
#, no-wrap
msgid ""
"(file-notify-valid-p desc)\n"
"     @result{} nil\n"
msgstr ""

#. type: section
#: original_texis/os.texi:3568
#, no-wrap
msgid "Dynamically Loaded Libraries"
msgstr ""

#. type: cindex
#: original_texis/os.texi:3569
#, no-wrap
msgid "dynamic libraries"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:3574
msgid "A @dfn{dynamically loaded library} is a library that is loaded on demand, when its facilities are first needed.  Emacs supports such on-demand loading of support libraries for some of its features."
msgstr ""

#. type: defvar
#: original_texis/os.texi:3575
#, no-wrap
msgid "dynamic-library-alist"
msgstr ""

#. type: defvar
#: original_texis/os.texi:3578
msgid "This is an alist of dynamic libraries and external library files implementing them."
msgstr ""

#. type: defvar
#: original_texis/os.texi:3583
msgid "Each element is a list of the form @w{@code{(@var{library} @var{files}@dots{})}}, where the @code{car} is a symbol representing a supported external library, and the rest are strings giving alternate filenames for that library."
msgstr ""

#. type: defvar
#: original_texis/os.texi:3588
msgid "Emacs tries to load the library from the files in the order they appear in the list; if none is found, the Emacs session won't have access to that library, and the features it provides will be unavailable."
msgstr ""

#. type: defvar
#: original_texis/os.texi:3591
msgid "Image support on some platforms uses this facility.  Here's an example of setting this variable for supporting images on MS-Windows:"
msgstr ""

#. type: example
#: original_texis/os.texi:3605
#, no-wrap
msgid ""
"(setq dynamic-library-alist\n"
"      '((xpm \"libxpm.dll\" \"xpm4.dll\" \"libXpm-nox4.dll\")\n"
"        (png \"libpng12d.dll\" \"libpng12.dll\" \"libpng.dll\"\n"
"             \"libpng13d.dll\" \"libpng13.dll\")\n"
"        (jpeg \"jpeg62.dll\" \"libjpeg.dll\" \"jpeg-62.dll\"\n"
"              \"jpeg.dll\")\n"
"        (tiff \"libtiff3.dll\" \"libtiff.dll\")\n"
"        (gif \"giflib4.dll\" \"libungif4.dll\" \"libungif.dll\")\n"
"        (svg \"librsvg-2-2.dll\")\n"
"        (gdk-pixbuf \"libgdk_pixbuf-2.0-0.dll\")\n"
"        (glib \"libglib-2.0-0.dll\")\n"
"        (gobject \"libgobject-2.0-0.dll\")))\n"
msgstr ""

#. type: defvar
#: original_texis/os.texi:3610
msgid "Note that image types @code{pbm} and @code{xbm} do not need entries in this variable because they do not depend on external libraries and are always available in Emacs."
msgstr ""

#. type: defvar
#: original_texis/os.texi:3614
msgid "Also note that this variable is not meant to be a generic facility for accessing external libraries; only those already known by Emacs can be loaded through it."
msgstr ""

#. type: defvar
#: original_texis/os.texi:3617
msgid "This variable is ignored if the given @var{library} is statically linked into Emacs."
msgstr ""

#. type: cindex
#: original_texis/os.texi:3621
#, no-wrap
msgid "security"
msgstr ""

#. type: cindex
#: original_texis/os.texi:3622
#, no-wrap
msgid "hardening"
msgstr ""

#. type: Plain text
#: original_texis/os.texi:3634
msgid "Like any application, Emacs can be run in a secure environment, where the operating system enforces rules about access and the like.  With some care, Emacs-based applications can also be part of a security perimeter that checks such rules.  Although the default settings for Emacs work well for a typical software development environment, they may require adjustment in environments containing untrusted users that may include attackers.  Here is a compendium of security issues that may be helpful if you are developing such applications.  It is by no means complete; it is intended to give you an idea of the security issues involved, rather than to be a security checklist."
msgstr ""

#. type: item
#: original_texis/os.texi:3636
#, no-wrap
msgid "File local variables"
msgstr ""

#. type: cindex
#: original_texis/os.texi:3637
#, no-wrap
msgid "file local variables"
msgstr ""

#. type: table
#: original_texis/os.texi:3647
msgid "A file that Emacs visits can contain variable settings that affect the buffer visiting that file; @xref{File Local Variables}.  Similarly, a directory can specify local variable values common to all files in that directory; see @ref{Directory Local Variables}.  Although Emacs takes some effort to protect against misuse of these variables, a security hole can be created merely by a package setting @code{safe-local-variable} too optimistically, a problem that is all too common.  To disable this feature for both files and directories, set @code{enable-local-variables} to @code{nil}."
msgstr ""

#. type: item
#: original_texis/os.texi:3648
#, no-wrap
msgid "Access control"
msgstr ""

#. type: table
#: original_texis/os.texi:3657
msgid "Although Emacs normally respects access permissions of the underlying operating system, in some cases it handles accesses specially.  For example, file names can have handlers that treat the files specially, with their own access checking.  @xref{Magic File Names}.  Also, a buffer can be read-only even if the corresponding file is writable, and vice versa, which can result in messages such as @samp{File passwd is write-protected; try to save anyway? (yes or no)}.  @xref{Read Only Buffers}."
msgstr ""

#. type: item
#: original_texis/os.texi:3658
#, no-wrap
msgid "Authentication"
msgstr ""

#. type: table
#: original_texis/os.texi:3667
msgid "Emacs has several functions that deal with passwords, e.g., @code{read-passwd}.  @xref{Reading a Password}.  Although these functions do not attempt to broadcast passwords to the world, their implementations are not proof against determined attackers with access to Emacs internals.  For example, even if Elisp code uses @code{clear-string} to scrub a password from its memory after using it, remnants of the password may still reside in the garbage-collected free list.  @xref{Modifying Strings}."
msgstr ""

#. type: item
#: original_texis/os.texi:3668
#, no-wrap
msgid "Code injection"
msgstr ""

#. type: table
#: original_texis/os.texi:3685
msgid "Emacs can send commands to many other applications, and applications should take care that strings sent as operands of these commands are not misinterpreted as directives.  For example, when using a shell command to rename a file @var{a} to @var{b}, do not simply use the string @code{mv @var{a} @var{b}}, because either file name might start with @samp{-}, or might contain shell metacharacters like @samp{;}.  Although functions like @code{shell-quote-argument} can help avoid this sort of problem, they are not panaceas; for example, on a POSIX platform @code{shell-quote-argument} quotes shell metacharacters but not leading @samp{-}.  On MS-Windows, quoting for @samp{%} assumes none of the environment variables have @samp{^} in their name.  @xref{Shell Arguments}.  Typically it is safer to use @code{call-process} than a subshell.  @xref{Synchronous Processes}.  And it is safer yet to use builtin Emacs functions; for example, use @code{(rename-file \"@var{a}\" \"@var{b}\" t)} instead of invoking @command{mv}.  @xref{Changing Files}."
msgstr ""

#. type: item
#: original_texis/os.texi:3686
#, no-wrap
msgid "Coding systems"
msgstr ""

#. type: table
#: original_texis/os.texi:3696
msgid "Emacs attempts to infer the coding systems of the files and network connections it accesses.  @xref{Coding Systems}.  If Emacs infers incorrectly, or if the other parties to the network connection disagree with Emacs's inferences, the resulting system could be unreliable.  Also, even when it infers correctly, Emacs often can use bytes that other programs cannot.  For example, although to Emacs the null byte is just a character like any other, many other applications treat it as a string terminator and mishandle strings or files containing null bytes."
msgstr ""

#. type: item
#: original_texis/os.texi:3697
#, no-wrap
msgid "Environment and configuration variables"
msgstr ""

#. type: table
#: original_texis/os.texi:3708
msgid "POSIX specifies several environment variables that can affect how Emacs behaves.  Any environment variable whose name consists entirely of uppercase ASCII letters, digits, and the underscore may affect the internal behavior of Emacs.  Emacs uses several such variables, e.g., @env{EMACSLOADPATH}.  @xref{Library Search}.  On some platforms some environment variables (e.g., @env{PATH}, @env{POSIXLY_CORRECT}, @env{SHELL}, @env{TMPDIR}) need to have properly-configured values in order to get standard behavior for any utility Emacs might invoke.  Even seemingly-benign variables like @env{TZ} may have security implications.  @xref{System Environment}."
msgstr ""

#. type: table
#: original_texis/os.texi:3713
msgid "Emacs has customization and other variables with similar considerations.  For example, if the variable @code{shell-file-name} specifies a shell with nonstandard behavior, an Emacs-based application may misbehave."
msgstr ""

#. type: item
#: original_texis/os.texi:3714
#, no-wrap
msgid "Installation"
msgstr ""

#. type: table
#: original_texis/os.texi:3719
msgid "When Emacs is installed, if the installation directory hierarchy can be modified by untrusted users, the application cannot be trusted.  This applies also to the directory hierarchies of the programs that Emacs uses, and of the files that Emacs reads and writes."
msgstr ""

#. type: item
#: original_texis/os.texi:3720
#, no-wrap
msgid "Network access"
msgstr ""

#. type: table
#: original_texis/os.texi:3727
msgid "Emacs often accesses the network, and you may want to configure it to avoid network accesses that it would normally do.  For example, unless you set @code{tramp-mode} to @code{nil}, file names using a certain syntax are interpreted as being network files, and are retrieved across the network.  @xref{Top, The Tramp Manual,, tramp, The Tramp Manual}."
msgstr ""

#. type: item
#: original_texis/os.texi:3728
#, no-wrap
msgid "Race conditions"
msgstr ""

#. type: table
#: original_texis/os.texi:3735
msgid "Emacs applications have the same sort of race-condition issues that other applications do.  For example, even when @code{(file-readable-p \"foo.txt\")} returns @code{t}, it could be that @file{foo.txt} is unreadable because some other program changed the file's permissions between the call to @code{file-readable-p} and now.  @xref{Testing Accessibility}."
msgstr ""

#. type: item
#: original_texis/os.texi:3736
#, no-wrap
msgid "Resource limits"
msgstr ""

#. type: table
#: original_texis/os.texi:3741
msgid "When Emacs exhausts memory or other operating system resources, its behavior can be less reliable, in that computations that ordinarily run to completion may abort back to the top level.  This may cause Emacs to neglect operations that it normally would have done."
msgstr ""
