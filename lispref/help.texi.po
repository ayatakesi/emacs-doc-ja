# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2019-10-14 22:48+0900\n"
"PO-Revision-Date: 2019-12-06 19:48+0900\n"
"Last-Translator: Ayanokoji Takesi <ayanokoji.takesi@gmail.com>\n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: chapter
#: original_texis/help.texi:6 original_texis/help.texi:7
#, no-wrap
msgid "Documentation"
msgstr "Documentation"

#. type: cindex
#: original_texis/help.texi:8
#, no-wrap
msgid "documentation strings"
msgstr "documentation strings"

#. type: Plain text
#: original_texis/help.texi:14
msgid "GNU Emacs has convenient built-in help facilities, most of which derive their information from documentation strings associated with functions and variables.  This chapter describes how to access documentation strings in Lisp programs."
msgstr "GNU Emacsには便利なビルトインのヘルプ機能があり、それらのほとんどは関数や変数のドキュメント文字列に付属するドキュメント文字列の情報が由来のものです。このチャプターではLispプログラムからドキュメント文字列にアクセスする方法について説明します。"

#. type: Plain text
#: original_texis/help.texi:20
msgid "The contents of a documentation string should follow certain conventions.  In particular, its first line should be a complete sentence (or two complete sentences) that briefly describes what the function or variable does.  @xref{Documentation Tips}, for how to write good documentation strings."
msgstr "ドキュメント文字列のコンテンツはある種の慣習にしたがう必要があります。特に最初の行はその関数や変数を簡単に説明する1つか2つの完全なセンテンスであるべきです。よいドキュメント文字列を記述する方法については@ref{Documentation Tips}を参照してください。"

#. type: Plain text
#: original_texis/help.texi:28
msgid "Note that the documentation strings for Emacs are not the same thing as the Emacs manual.  Manuals have their own source files, written in the Texinfo language; documentation strings are specified in the definitions of the functions and variables they apply to.  A collection of documentation strings is not sufficient as a manual because a good manual is not organized in that fashion; it is organized in terms of topics of discussion."
msgstr "Emacs向けのドキュメント文字列はEmacsマニュアルと同じものではないことに注意してください。マニュアルはTexinfo言語で記述された独自のソースファイルをもちます。それにたいしドキュメント文字列はそれが適用される関数と変数の定義内で指定されたものです。ドキュメント文字列を収集してもそれはマニュアルとしては不十分です。なぜならよいマニュアルはそのやり方でまとめられたものではなく、議論にたいするトピックという観点でまとめられたものだからです。"

#. type: Plain text
#: original_texis/help.texi:31
msgid "For commands to display documentation strings, see @ref{Help, , Help, emacs, The GNU Emacs Manual}."
msgstr "ドキュメント文字列を表示するコマンドについては、@ref{Help, , Help, emacs, The GNU Emacs Manual}を参照してください。"

#. type: section
#: original_texis/help.texi:39 original_texis/help.texi:41
#: original_texis/help.texi:42
#, no-wrap
msgid "Documentation Basics"
msgstr "Documentation Basics"

#. type: menuentry
#: original_texis/help.texi:39
msgid "Where doc strings are defined and stored."
msgstr "ドキュメント文字列が定義、格納される場所。"

#. type: node
#: original_texis/help.texi:39 original_texis/help.texi:91
#, no-wrap
msgid "Accessing Documentation"
msgstr "Accessing Documentation"

#. type: menuentry
#: original_texis/help.texi:39
msgid "How Lisp programs can access doc strings."
msgstr "Lispプログラムがドキュメント文字列にアクセスする方法。"

#. type: node
#: original_texis/help.texi:39 original_texis/help.texi:305
#, no-wrap
msgid "Keys in Documentation"
msgstr "Keys in Documentation"

#. type: menuentry
#: original_texis/help.texi:39
msgid "Substituting current key bindings."
msgstr "カレントキーバインディングの置き換え。"

#. type: node
#: original_texis/help.texi:39 original_texis/help.texi:433
#, no-wrap
msgid "Describing Characters"
msgstr "Describing Characters"

#. type: menuentry
#: original_texis/help.texi:39
msgid "Making printable descriptions of non-printing characters and key sequences."
msgstr "非プリント文字やキーシーケンスをプリント可能な記述にする。"

#. type: section
#: original_texis/help.texi:39 original_texis/help.texi:554
#: original_texis/help.texi:555
#, no-wrap
msgid "Help Functions"
msgstr "Help Functions"

#. type: menuentry
#: original_texis/help.texi:39
msgid "Subroutines used by Emacs help facilities."
msgstr "Emacsヘルプ機能により使用されるサブルーチン。"

#. type: cindex
#: original_texis/help.texi:43
#, no-wrap
msgid "documentation conventions"
msgstr "documentation conventions"

#. type: cindex
#: original_texis/help.texi:44
#, no-wrap
msgid "writing a documentation string"
msgstr "writing a documentation string"

#. type: cindex
#: original_texis/help.texi:45
#, no-wrap
msgid "string, writing a doc string"
msgstr "string, writing a doc string"

#. type: Plain text
#: original_texis/help.texi:52
msgid "A documentation string is written using the Lisp syntax for strings, with double-quote characters surrounding the text.  It is, in fact, an actual Lisp string.  When the string appears in the proper place in a function or variable definition, it serves as the function's or variable's documentation."
msgstr "ドキュメント文字列はテキストをダブルクォート文字で囲んだ文字列にたいするLisp構文を使用して記述されます。実はこれは実際のLisp文字列です。関数または変数の定義内の適切な箇所に文字列があると、それは関数や変数のドキュメントの役割を果たします。"

#. type: cindex
#: original_texis/help.texi:53
#, no-wrap
msgid "@code{function-documentation} property"
msgstr "@code{function-documentation} property"

#. type: Plain text
#: original_texis/help.texi:60
msgid "In a function definition (a @code{lambda} or @code{defun} form), the documentation string is specified after the argument list, and is normally stored directly in the function object.  @xref{Function Documentation}.  You can also put function documentation in the @code{function-documentation} property of a function name (@pxref{Accessing Documentation})."
msgstr "関数定義(@code{lambda}や@code{defun}フォーム)の中では、ドキュメント文字列は引数リストの後に指定され、通常は関数オブジェクト内に直接格納されます。@ref{Function Documentation}を参照してください。関数名の@code{function-documentation}プロパティに関数ドキュメントをputすることもできます(@ref{Accessing Documentation}を参照)。"

#. type: cindex
#: original_texis/help.texi:61
#, no-wrap
msgid "@code{variable-documentation} property"
msgstr "@code{variable-documentation} property"

#. type: Plain text
#: original_texis/help.texi:66
msgid "In a variable definition (a @code{defvar} form), the documentation string is specified after the initial value.  @xref{Defining Variables}.  The string is stored in the variable's @code{variable-documentation} property."
msgstr "変数定義(@code{defvar}フォーム)の中では、ドキュメント文字列は初期値の後に指定されます。@ref{Defining Variables}を参照してください。この文字列はその変数の@code{variable-documentation}プロパティに格納されます。"

#. type: cindex
#: original_texis/help.texi:67
#, no-wrap
msgid "@file{DOC} (documentation) file"
msgstr "@file{DOC} (documentation) file"

#. type: Plain text
#: original_texis/help.texi:78
msgid "Sometimes, Emacs does not keep documentation strings in memory.  There are two such circumstances.  Firstly, to save memory, the documentation for preloaded functions and variables (including primitives) is kept in a file named @file{DOC}, in the directory specified by @code{doc-directory} (@pxref{Accessing Documentation}).  Secondly, when a function or variable is loaded from a byte-compiled file, Emacs avoids loading its documentation string (@pxref{Docs and Compilation}).  In both cases, Emacs looks up the documentation string from the file only when needed, such as when the user calls @kbd{C-h f} (@code{describe-function}) for a function."
msgstr "Emacsがメモリー内にドキュメント文字列を保持しないときがあります。それには、これには2つの状況があります。1つ目はメモリーを節約するためで、事前ロードされた関数と変数(プリミティブを含む)のドキュメントは、@code{doc-directory}で指定されたディレクトリー内の@file{DOC}という名前のファイルに保持されます(@ref{Accessing Documentation}を参照)。2つ目は関数や変数がバイトコンパイルされたファイルからロードされたときで、Emacsはそれらのドキュメント文字列のロードを無効にします(@ref{Docs and Compilation}を参照)。どちらの場合も、ある関数にたいしてユーザーが@kbd{C-h f}(@code{describe-function})を呼び出したとき等の必要なときだけEmacsはファイルのドキュメント文字列を照会します。"

#. type: Plain text
#: original_texis/help.texi:84
msgid "Documentation strings can contain special @dfn{key substitution sequences}, referring to key bindings which are looked up only when the user views the documentation.  This allows the help commands to display the correct keys even if a user rearranges the default key bindings.  @xref{Keys in Documentation}."
msgstr "ドキュメント文字列にはユーザーがドキュメントを閲覧するときのみルックアップされるキーバインディングを参照する、特別な@dfn{キー置換シーケンス(key substitution sequences)}を含めることができます。これにより、たとえユーザーがデフォルトのキーバインディングを変更していてもヘルプコマンドが正しいキーを表示できるようになります。"

#. type: Plain text
#: original_texis/help.texi:90
msgid "In the documentation string of an autoloaded command (@pxref{Autoload}), these key-substitution sequences have an additional special effect: they cause @kbd{C-h f} on the command to trigger autoloading.  (This is needed for correctly setting up the hyperlinks in the @file{*Help*} buffer.)"
msgstr "オートロードされたコマンド(@ref{Autoload}を参照)のドキュメント文字列ではこれらのキー置換シーケンスは特別な効果をもち、そのコマンドにたいする@kbd{C-h f}によってオートロードをトリガーします(これは@file{*Help*}バッファー内のハイパーリンクを正しくセットアップするために必要となる)。"

#. type: section
#: original_texis/help.texi:92
#, no-wrap
msgid "Access to Documentation Strings"
msgstr "Access to Documentation Strings"

#. type: cindex
#: original_texis/help.texi:93
#, no-wrap
msgid "accessing documentation strings"
msgstr "accessing documentation strings"

#. type: defun
#: original_texis/help.texi:95
#, no-wrap
msgid "documentation-property symbol property &optional verbatim"
msgstr "documentation-property symbol property &optional verbatim"

#. type: defun
#: original_texis/help.texi:103
msgid "This function returns the documentation string recorded in @var{symbol}'s property list under property @var{property}.  It is most often used to look up the documentation strings of variables, for which @var{property} is @code{variable-documentation}.  However, it can also be used to look up other kinds of documentation, such as for customization groups (but for function documentation, use the @code{documentation} function, below)."
msgstr "この関数はプロパティ@var{property}配下の@var{symbol}のプロパティリスト内に記録されたドキュメント文字列をリターンする。これはほとんどの場合@var{property}を@code{variable-documentation}にして、変数のドキュメント文字列の照会に使用される。しかしカスタマイゼーショングループのような他の種類のドキュメント照会にも使用できる(が関数のドキュメントには以下の@code{documentation}関数を使用する)。"

#. type: defun
#: original_texis/help.texi:107
msgid "If the property value refers to a documentation string stored in the @file{DOC} file or a byte-compiled file, this function looks up that string and returns it."
msgstr "そのプロパティの値が@file{DOC}ファイルやバイトコンパイル済みファイルに格納されたドキュメント文字列を参照する場合、この関数はその文字列を照会してそれをリターンする。"

#. type: defun
#: original_texis/help.texi:111
msgid "If the property value isn't @code{nil}, isn't a string, and doesn't refer to text in a file, then it is evaluated as a Lisp expression to obtain a string."
msgstr "プロパティの値が@code{nil}や文字列以外でファイル内のテキストも参照しなければ、文字列を取得するLisp式として評価される。"

#. type: defun
#: original_texis/help.texi:116
msgid "Finally, this function passes the string through @code{substitute-command-keys} to substitute key bindings (@pxref{Keys in Documentation}).  It skips this step if @var{verbatim} is non-@code{nil}."
msgstr "最終的にこの関数はキーバインディングを置換するために、文字列を@code{substitute-command-keys}に引き渡す(@ref{Keys in Documentation}を参照)。@var{verbatim}が非@code{nil}ならこのステップはスキップされる。"

#. type: group
#: original_texis/help.texi:122
#, no-wrap
msgid ""
"(documentation-property 'command-line-processed\n"
"   'variable-documentation)\n"
"     @result{} \"Non-nil once command line has been processed\"\n"
msgstr ""
"(documentation-property 'command-line-processed\n"
"   'variable-documentation)\n"
"     @result{} \"Non-nil once command line has been processed\"\n"

#. type: group
#: original_texis/help.texi:126
#, no-wrap
msgid ""
"(symbol-plist 'command-line-processed)\n"
"     @result{} (variable-documentation 188902)\n"
msgstr ""
"(symbol-plist 'command-line-processed)\n"
"     @result{} (variable-documentation 188902)\n"

#. type: group
#: original_texis/help.texi:130
#, no-wrap
msgid ""
"(documentation-property 'emacs 'group-documentation)\n"
"     @result{} \"Customization of the One True Editor.\"\n"
msgstr ""
"(documentation-property 'emacs 'group-documentation)\n"
"     @result{} \"Customization of the One True Editor.\"\n"

#. type: defun
#: original_texis/help.texi:134
#, no-wrap
msgid "documentation function &optional verbatim"
msgstr "documentation function &optional verbatim"

#. type: defun
#: original_texis/help.texi:138
msgid "This function returns the documentation string of @var{function}.  It handles macros, named keyboard macros, and special forms, as well as ordinary functions."
msgstr "この関数は@var{function}のドキュメント文字列をリターンする。この関数はマクロ、名前付きキーボードマクロ、およびスペシャルフォームも通常の関数と同様に処理する。"

#. type: defun
#: original_texis/help.texi:143
msgid "If @var{function} is a symbol, this function first looks for the @code{function-documentation} property of that symbol; if that has a non-@code{nil} value, the documentation comes from that value (if the value is not a string, it is evaluated)."
msgstr "@var{function}がシンボルならそのシンボルの@code{function-documentation}プロパティを最初に調べる。それが非@code{nil}値をもつなら、その値(プロパティの値が文字列以外ならそれを評価した値)がドキュメントとなる。"

#. type: defun
#: original_texis/help.texi:148
msgid "If @var{function} is not a symbol, or if it has no @code{function-documentation} property, then @code{documentation} extracts the documentation string from the actual function definition, reading it from a file if called for."
msgstr "@var{function}がシンボル以外、あるいは@code{function-documentation}プロパティをもたなければ、@code{documentation}は必要ならファイルを読み込んで実際の関数定義のドキュメント文字列を抽出する。"

#. type: defun
#: original_texis/help.texi:152
msgid "Finally, unless @var{verbatim} is non-@code{nil}, this function calls @code{substitute-command-keys}.  The result is the documentation string to return."
msgstr "最後に@var{verbatim}が@code{nil}なら、この関数は@code{substitute-command-keys}を呼び出す。結果はリターンするための文字列。"

#. type: defun
#: original_texis/help.texi:157
msgid "The @code{documentation} function signals a @code{void-function} error if @var{function} has no function definition.  However, it is OK if the function definition has no documentation string.  In that case, @code{documentation} returns @code{nil}."
msgstr "@code{documentation}関数は@var{function}が関数定義をもたなければ@code{void-function}エラーをシグナルする。しかし関数定義がドキュメントをもたない場合は問題ない。その場合は@code{documentation}は@code{nil}をリターンする。"

#. type: defun
#: original_texis/help.texi:159
#, no-wrap
msgid "face-documentation face"
msgstr "face-documentation face"

#. type: defun
#: original_texis/help.texi:162
msgid "This function returns the documentation string of @var{face} as a face."
msgstr "この関数は@var{face}のドキュメント文字列をフェイスとしてリターンする。"

#. type: Plain text
#: original_texis/help.texi:167
msgid "Here is an example of using the two functions, @code{documentation} and @code{documentation-property}, to display the documentation strings for several symbols in a @file{*Help*} buffer."
msgstr "以下は@code{documentation}と@code{documentation-property}を使用した例で、いくつかのシンボルのドキュメント文字列を@file{*Help*}バッファー内に表示します。"

#. type: anchor{#1}
#: original_texis/help.texi:169
msgid "describe-symbols example"
msgstr "describe-symbols example"

#. type: group
#: original_texis/help.texi:179
#, no-wrap
msgid ""
"(defun describe-symbols (pattern)\n"
"  \"Describe the Emacs Lisp symbols matching PATTERN.\n"
"All symbols that have PATTERN in their name are described\n"
"in the *Help* buffer.\"\n"
"  (interactive \"sDescribe symbols matching: \")\n"
"  (let ((describe-func\n"
"         (function\n"
"          (lambda (s)\n"
msgstr ""
"(defun describe-symbols (pattern)\n"
"  \"Describe the Emacs Lisp symbols matching PATTERN.\n"
"All symbols that have PATTERN in their name are described\n"
"in the *Help* buffer.\"\n"
"  (interactive \"sDescribe symbols matching: \")\n"
"  (let ((describe-func\n"
"         (function\n"
"          (lambda (s)\n"

#. type: group
#: original_texis/help.texi:194
#, no-wrap
msgid ""
"            ;; @r{Print description of symbol.}\n"
"            (if (fboundp s)             ; @r{It is a function.}\n"
"                (princ\n"
"                 (format \"%s\\t%s\\n%s\\n\\n\" s\n"
"                   (if (commandp s)\n"
"                       (let ((keys (where-is-internal s)))\n"
"                         (if keys\n"
"                             (concat\n"
"                              \"Keys: \"\n"
"                              (mapconcat 'key-description\n"
"                                         keys \" \"))\n"
"                           \"Keys: none\"))\n"
"                     \"Function\")\n"
msgstr ""
"            ;; @r{シンボルの説明をプリントする}\n"
"            (if (fboundp s)             ; @r{これは関数}\n"
"                (princ\n"
"                 (format \"%s\\t%s\\n%s\\n\\n\" s\n"
"                   (if (commandp s)\n"
"                       (let ((keys (where-is-internal s)))\n"
"                         (if keys\n"
"                             (concat\n"
"                              \"Keys: \"\n"
"                              (mapconcat 'key-description\n"
"                                         keys \" \"))\n"
"                           \"Keys: none\"))\n"
"                     \"Function\")\n"

#. type: group
#: original_texis/help.texi:198
#, no-wrap
msgid ""
"                   (or (documentation s)\n"
"                       \"not documented\"))))\n"
"\n"
msgstr ""
"                   (or (documentation s)\n"
"                       \"not documented\"))))\n"
"\n"

#. type: group
#: original_texis/help.texi:200
#, no-wrap
msgid "            (if (boundp s)              ; @r{It is a variable.}\n"
msgstr "            (if (boundp s)              ; @r{これは変数}\n"

#. type: group
#: original_texis/help.texi:206
#, no-wrap
msgid ""
"                (princ\n"
"                 (format \"%s\\t%s\\n%s\\n\\n\" s\n"
"                   (if (custom-variable-p s)\n"
"                       \"Option \" \"Variable\")\n"
msgstr ""
"                (princ\n"
"                 (format \"%s\\t%s\\n%s\\n\\n\" s\n"
"                   (if (custom-variable-p s)\n"
"                       \"Option \" \"Variable\")\n"

#. type: group
#: original_texis/help.texi:212
#, no-wrap
msgid ""
"                   (or (documentation-property\n"
"                         s 'variable-documentation)\n"
"                       \"not documented\")))))))\n"
"        sym-list)\n"
msgstr ""
"                   (or (documentation-property\n"
"                         s 'variable-documentation)\n"
"                       \"not documented\")))))))\n"
"        sym-list)\n"

#. type: group
#: original_texis/help.texi:220
#, no-wrap
msgid ""
"    ;; @r{Build a list of symbols that match pattern.}\n"
"    (mapatoms (function\n"
"               (lambda (sym)\n"
"                 (if (string-match pattern (symbol-name sym))\n"
"                     (setq sym-list (cons sym sym-list))))))\n"
msgstr ""
"    ;; @r{PATTERNにマッチするシンボルのリストを構築}\n"
"    (mapatoms (function\n"
"               (lambda (sym)\n"
"                 (if (string-match pattern (symbol-name sym))\n"
"                     (setq sym-list (cons sym sym-list))))))\n"

#. type: group
#: original_texis/help.texi:227
#, no-wrap
msgid ""
"    ;; @r{Display the data.}\n"
"    (help-setup-xref (list 'describe-symbols pattern) (interactive-p))\n"
"    (with-help-window (help-buffer)\n"
"      (mapcar describe-func (sort sym-list 'string<)))))\n"
msgstr ""
"    ;; @r{データを表示}\n"
"    (help-setup-xref (list 'describe-symbols pattern) (interactive-p))\n"
"    (with-help-window (help-buffer)\n"
"      (mapcar describe-func (sort sym-list 'string<)))))\n"

#. type: Plain text
#: original_texis/help.texi:232
msgid "The @code{describe-symbols} function works like @code{apropos}, but provides more information."
msgstr "@code{describe-symbols}関数は@code{apropos}のように機能しますが、より多くの情報を提供します。"

#. type: group
#: original_texis/help.texi:236
#, no-wrap
msgid ""
"(describe-symbols \"goal\")\n"
"\n"
msgstr ""
"(describe-symbols \"goal\")\n"
"\n"

#. type: group
#: original_texis/help.texi:240
#, no-wrap
msgid ""
"---------- Buffer: *Help* ----------\n"
"goal-column     Option\n"
"Semipermanent goal column for vertical motion, as set by @dots{}\n"
msgstr ""
"---------- Buffer: *Help* ----------\n"
"goal-column     Option\n"
"Semipermanent goal column for vertical motion, as set by @dots{}\n"

#. type: group
#: original_texis/help.texi:247
#, no-wrap
msgid ""
"minibuffer-temporary-goal-position      Variable\n"
"not documented\n"
msgstr ""
"minibuffer-temporary-goal-position      Variable\n"
"not documented\n"

#. type: group
#: original_texis/help.texi:252
#, no-wrap
msgid ""
"set-goal-column Keys: C-x C-n\n"
"Set the current horizontal position as a goal for C-n and C-p.\n"
msgstr ""
"set-goal-column Keys: C-x C-n\n"
"Set the current horizontal position as a goal for C-n and C-p.\n"

#. type: group
#: original_texis/help.texi:260
#, no-wrap
msgid ""
"Those commands will move to this position in the line moved to\n"
"rather than trying to keep the same horizontal position.\n"
"With a non-nil argument ARG, clears out the goal column\n"
"so that C-n and C-p resume vertical motion.\n"
"The goal column is stored in the variable ‘goal-column’.\n"
"\n"
msgstr ""
"Those commands will move to this position in the line moved to\n"
"rather than trying to keep the same horizontal position.\n"
"With a non-nil argument ARG, clears out the goal column\n"
"so that C-n and C-p resume vertical motion.\n"
"The goal column is stored in the variable ‘goal-column’.\n"
"\n"

#. type: group
#: original_texis/help.texi:262
#, no-wrap
msgid "(fn ARG)\n"
msgstr ""
"msgid \"\"\n"
"\"(defun describe-symbols (pattern)\\n\"\n"
"\"  \\\"Describe the Emacs Lisp symbols matching PATTERN.\\n\"\n"
"\"All symbols that have PATTERN in their name are described\\n\"\n"
"\"in the `*Help*' buffer.\\\"\\n\"\n"
"\"  (interactive \\\"sDescribe symbols matching: \\\")\\n\"\n"
"\"  (let ((describe-func\\n\"\n"
"\"         (function\\n\"\n"
"\"          (lambda (s)\\n\"\n"

#. type: group
#: original_texis/help.texi:269
#, no-wrap
msgid ""
"temporary-goal-column   Variable\n"
"Current goal column for vertical motion.\n"
"It is the column where point was at the start of the current run\n"
"of vertical motion commands.\n"
"\n"
msgstr ""
"temporary-goal-column   Variable\n"
"Current goal column for vertical motion.\n"
"It is the column where point was at the start of the current run\n"
"of vertical motion commands.\n"
"\n"

#. type: group
#: original_texis/help.texi:274
#, no-wrap
msgid ""
"When moving by visual lines via the function ‘line-move-visual’, it is a cons\n"
"cell (COL . HSCROLL), where COL is the x-position, in pixels,\n"
"divided by the default column width, and HSCROLL is the number of\n"
"columns by which window is scrolled from left margin.\n"
"\n"
msgstr ""
"When moving by visual lines via the function ‘line-move-visual’, it is a cons\n"
"cell (COL . HSCROLL), where COL is the x-position, in pixels,\n"
"divided by the default column width, and HSCROLL is the number of\n"
"columns by which window is scrolled from left margin.\n"
"\n"

#. type: group
#: original_texis/help.texi:278
#, no-wrap
msgid ""
"When the ‘track-eol’ feature is doing its job, the value is\n"
"‘most-positive-fixnum’.\n"
"---------- Buffer: *Help* ----------\n"
msgstr ""
"When the ‘track-eol’ feature is doing its job, the value is\n"
"‘most-positive-fixnum’.\n"
"---------- Buffer: *Help* ----------\n"

#. type: anchor{#1}
#: original_texis/help.texi:282
msgid "Definition of Snarf-documentation"
msgstr "Definition of Snarf-documentation"

#. type: defun
#: original_texis/help.texi:282
#, no-wrap
msgid "Snarf-documentation filename"
msgstr "Snarf-documentation filename"

#. type: defun
#: original_texis/help.texi:288
msgid "This function is used when building Emacs, just before the runnable Emacs is dumped.  It finds the positions of the documentation strings stored in the file @var{filename}, and records those positions into memory in the function definitions and variable property lists.  @xref{Building Emacs}."
msgstr "この関数はEmacsビルド時の実行可能なEmacsダンプ直前に使用される。これはファイル@var{filename}内に格納されたドキュメント文字列の位置を探して、メモリー上の関数定義および変数のプロパティリスト内にそれらの位置を記録する。@ref{Building Emacs}を参照のこと。"

#. type: defun
#: original_texis/help.texi:293
msgid "Emacs reads the file @var{filename} from the @file{emacs/etc} directory.  When the dumped Emacs is later executed, the same file will be looked for in the directory @code{doc-directory}.  Usually @var{filename} is @code{\"DOC\"}."
msgstr "Emacsは@file{emacs/etc}ディレクトリーからファイル@var{filename}を読み込む。その後ダンプされたEmacs実行時に、ディレクトリー@code{doc-directory}内の同じファイルを照会する。@var{filename}は通常は@code{\"DOC\"}。"

#. type: defvar
#: original_texis/help.texi:295
#, no-wrap
msgid "doc-directory"
msgstr "doc-directory"

#. type: defvar
#: original_texis/help.texi:299
msgid "This variable holds the name of the directory which should contain the file @code{\"DOC\"} that contains documentation strings for built-in and preloaded functions and variables."
msgstr "この変数はビルトインおよび事前ロードされた関数と変数のドキュメント文字列を含んだファイル@code{\"DOC\"}があるべきディレクトリーの名前を保持する。"

#. type: defvar
#: original_texis/help.texi:303
msgid "In most cases, this is the same as @code{data-directory}.  They may be different when you run Emacs from the directory where you built it, without actually installing it.  @xref{Definition of data-directory}."
msgstr "これはほとんどの場合は@code{data-directory}と同一。実際にインストールしたEmacsではなくEmacsをビルドしたディレクトリーからEmacsを実行したときは異なるかもしれない。@ref{Definition of data-directory}を参照のこと。"

#. type: section
#: original_texis/help.texi:306
#, no-wrap
msgid "Substituting Key Bindings in Documentation"
msgstr "Substituting Key Bindings in Documentation"

#. type: cindex
#: original_texis/help.texi:307
#, no-wrap
msgid "documentation, keys in"
msgstr "documentation, keys in"

#. type: cindex
#: original_texis/help.texi:308
#, no-wrap
msgid "keys in documentation strings"
msgstr "keys in documentation strings"

#. type: cindex
#: original_texis/help.texi:309
#, no-wrap
msgid "substituting keys in documentation"
msgstr "substituting keys in documentation"

#. type: cindex
#: original_texis/help.texi:310
#, no-wrap
msgid "key substitution sequence"
msgstr "key substitution sequence"

#. type: Plain text
#: original_texis/help.texi:318
msgid "When documentation strings refer to key sequences, they should use the current, actual key bindings.  They can do so using certain special text sequences described below.  Accessing documentation strings in the usual way substitutes current key binding information for these special sequences.  This works by calling @code{substitute-command-keys}.  You can also call that function yourself."
msgstr "ドキュメント文字列がキーシーケンスを参照する際、それらはカレントである実際のキーバインディングを使用するべきです。これらは以下で説明する特別なキーシーケンスを使用して行うことができます。通常の方法によるドキュメント文字列へのアクセスは、これらの特別なキーシーケンスをカレントキーバインディングに置き換えます。これは@code{substitute-command-keys}を呼び出すことにより行われます。あなた自身がこの関数を呼び出すこともできます。"

#. type: Plain text
#: original_texis/help.texi:320
msgid "Here is a list of the special sequences and what they mean:"
msgstr "以下はそれら特別なシーケンスと、その意味についてのリストです:"

#. type: item
#: original_texis/help.texi:322
#, no-wrap
msgid "\\[@var{command}]"
msgstr "\\[@var{command}]"

#. type: table
#: original_texis/help.texi:325
msgid "stands for a key sequence that will invoke @var{command}, or @samp{M-x @var{command}} if @var{command} has no key bindings."
msgstr "これは@var{command}を呼び出すキーシーケンス、または@var{command}がキーバインディングをもたなければ@samp{M-x @var{command}}。"

#. type: item
#: original_texis/help.texi:326
#, no-wrap
msgid "\\@{@var{mapvar}@}"
msgstr "\\@{@var{mapvar}@}"

#. type: table
#: original_texis/help.texi:329
msgid "stands for a summary of the keymap which is the value of the variable @var{mapvar}.  The summary is made using @code{describe-bindings}."
msgstr "これは変数@var{mapvar}の値であるようなキーマップの要約(summary)を意味する。この要約は@code{describe-bindings}を用いて作成される。"

#. type: item
#: original_texis/help.texi:330
#, no-wrap
msgid "\\<@var{mapvar}>"
msgstr "\\<@var{mapvar}>"

#. type: table
#: original_texis/help.texi:334
msgid "stands for no text itself.  It is used only for a side effect: it specifies @var{mapvar}'s value as the keymap for any following @samp{\\[@var{command}]} sequences in this documentation string."
msgstr "これ自体は何のテキストも意味せず副作用のためだけに使用される。これはこのドキュメント文字列内にある、後続のすべての@samp{\\[@var{command}]}にたいするキーマップとして@var{mapvar}の値を指定する。"

#. type: item
#: original_texis/help.texi:335
#, no-wrap
msgid "‘"
msgstr "‘"

#. type: itemx
#: original_texis/help.texi:336
#, no-wrap
msgid "`"
msgstr "`"

#. type: table
#: original_texis/help.texi:340
msgid "(left single quotation mark and grave accent) both stand for a left quote.  This generates a left single quotation mark, an apostrophe, or a grave accent depending on the value of @code{text-quoting-style}."
msgstr "この両者(左シングルクォーテーションマークとグレーブアクセント)は左クォートを意味する。これは@code{text-quoting-style}の値に応じて左シングルクォーテーションマーク、アポストロフィー、グレーブアクセントのいずれかを生成する。"

#. type: item
#: original_texis/help.texi:341
#, no-wrap
msgid "’"
msgstr "’"

#. type: itemx
#: original_texis/help.texi:342
#, no-wrap
msgid "'"
msgstr "'"

#. type: table
#: original_texis/help.texi:346
msgid "(right single quotation mark and apostrophe) both stand for a right quote.  This generates a right single quotation mark or an apostrophe depending on the value of @code{text-quoting-style}."
msgstr "この両者(右シングルクォーテーションマークとアポストロフィー)は右クォートを意味する。これは@code{text-quoting-style}の値に応じてアポストロフィー)はシングルクォーテーションマークかアポストロフィーのいずれかを生成する。"

#. type: item
#: original_texis/help.texi:347
#, no-wrap
msgid "\\="
msgstr "\\="

#. type: table
#: original_texis/help.texi:351
msgid "quotes the following character and is discarded; thus, @samp{\\=`} puts @samp{`} into the output, @samp{\\=\\[} puts @samp{\\[} into the output, and @samp{\\=\\=} puts @samp{\\=} into the output."
msgstr "これは後続の文字をクォートして無効にする。したがって@samp{\\=\\[}は@samp{\\[}、@samp{\\=\\=}は@samp{\\=}を出力する。"

#. type: Plain text
#: original_texis/help.texi:355
msgid "@strong{Please note:} Each @samp{\\} must be doubled when written in a string in Emacs Lisp."
msgstr "@strong{注意してください:} Emacs Lisp内の文字列として記述する際は@samp{\\}を2つ記述しなければなりません。"

#. type: defvar
#: original_texis/help.texi:356
#, no-wrap
msgid "text-quoting-style"
msgstr "text-quoting-style"

#. type: cindex
#: original_texis/help.texi:357
#, no-wrap
msgid "curved quotes"
msgstr "curved quotes"

#. type: cindex
#: original_texis/help.texi:358
#, no-wrap
msgid "curly quotes"
msgstr "curly quotes"

#. type: defvar
#: original_texis/help.texi:369
msgid "The value of this variable is a symbol that specifies the style Emacs should use for single quotes in the wording of help and messages.  If the variable's value is @code{curve}, the style is @t{‘like this’} with curved single quotes.  If the value is @code{straight}, the style is @t{'like this'} with straight apostrophes.  If the value is @code{grave}, the style is @t{`like this'} with grave accent and apostrophe, the standard style before Emacs version 25.  The default value @code{nil} acts like @code{curve} if curved single quotes are displayable, and like @code{grave} otherwise."
msgstr "この変数の値はEmacsがヘルプとメッセージの文言でシングルクォートに使用するべきスタイルを指定するシンボルである。この変数の値が@code{curve}なら@t{‘like this’}のようなcurved single quotesスタイル。値が@code{straight}なら@t{'like this'}のようなstraight apostrophesスタイル。値が@code{grave}なら@t{`like this'}のようなEmacsのバージョン25以前の標準であるgrave accentとapostropheのスタイル。デフォルト値の@code{nil}はcurved single quotesが表示可能なら@code{curve}、それ以外なら@code{grave}と同様に振る舞う。"

#. type: defvar
#: original_texis/help.texi:373
msgid "This variable can be used by experts on platforms that have problems with curved quotes.  As it is not intended for casual use, it is not a user option."
msgstr "この変数はcurved quotesに問題のあるプラットフォームでエキスパートが使用可能。通常の使用を意図していないのでユーザーオプションではない。"

#. type: defun
#: original_texis/help.texi:375
#, no-wrap
msgid "substitute-command-keys string"
msgstr "substitute-command-keys string"

#. type: defun
#: original_texis/help.texi:380
msgid "This function scans @var{string} for the above special sequences and replaces them by what they stand for, returning the result as a string.  This permits display of documentation that refers accurately to the user's own customized key bindings."
msgstr "この関数は上述の特別なシーケンスを@var{string}からスキャンして、それらが意味するもので置き換えてその結果を文字列としてリターンする。これによりそのユーザー自身がカスタマイズした実際のキーシーケンスを参照するドキュメントが表示できる。"

#. type: cindex
#: original_texis/help.texi:381
#, no-wrap
msgid "advertised binding"
msgstr "advertised binding"

#. type: defun
#: original_texis/help.texi:386
msgid "If a command has multiple bindings, this function normally uses the first one it finds.  You can specify one particular key binding by assigning an @code{:advertised-binding} symbol property to the command, like this:"
msgstr "あるコマンドが複数のバインディングをもつ場合、通常この関数は最初に見つかったバインディングを使用する。以下のようにしてコマンドのシンボルプロパティ@code{:advertised-binding}に割り当てることにより、特定のキーバインディングを指定できる:"

#. type: smallexample
#: original_texis/help.texi:389
#, no-wrap
msgid "(put 'undo :advertised-binding [?\\C-/])\n"
msgstr "(put 'undo :advertised-binding [?\\C-/])\n"

#. type: defun
#: original_texis/help.texi:395
msgid "The @code{:advertised-binding} property also affects the binding shown in menu items (@pxref{Menu Bar}).  The property is ignored if it specifies a key binding that the command does not actually have."
msgstr "@code{:advertised-binding}プロパティはメニューアイテム(@ref{Menu Bar}を参照)に表示されるバインディングにも影響する。コマンドが実際にもたないキーバインディングを指定するとこのプロパティは無視される。"

#. type: Plain text
#: original_texis/help.texi:398
msgid "Here are examples of the special sequences:"
msgstr "以下は特別なキーシーケンスの例:"

#. type: group
#: original_texis/help.texi:404
#, no-wrap
msgid ""
"(substitute-command-keys\n"
"   \"To abort recursive edit, type `\\\\[abort-recursive-edit]'.\")\n"
"@result{} \"To abort recursive edit, type ‘C-]’.\"\n"
msgstr ""
"(substitute-command-keys\n"
"   \"To abort recursive edit, type `\\\\[abort-recursive-edit]'.\")\n"
"@result{} \"To abort recursive edit, type ‘C-]’.\"\n"

#. type: group
#: original_texis/help.texi:411
#, no-wrap
msgid ""
"(substitute-command-keys\n"
"   \"The keys that are defined for the minibuffer here are:\n"
"  \\\\@{minibuffer-local-must-match-map@}\")\n"
"@result{} \"The keys that are defined for the minibuffer here are:\n"
msgstr ""
"(substitute-command-keys\n"
"   \"The keys that are defined for the minibuffer here are:\n"
"  \\\\@{minibuffer-local-must-match-map@}\")\n"
"@result{} \"The keys that are defined for the minibuffer here are:\n"

#. type: smallexample
#: original_texis/help.texi:420
#, no-wrap
msgid ""
"?               minibuffer-completion-help\n"
"SPC             minibuffer-complete-word\n"
"TAB             minibuffer-complete\n"
"C-j             minibuffer-complete-and-exit\n"
"RET             minibuffer-complete-and-exit\n"
"C-g             abort-recursive-edit\n"
"\"\n"
"\n"
msgstr ""
"?               minibuffer-completion-help\n"
"SPC             minibuffer-complete-word\n"
"TAB             minibuffer-complete\n"
"C-j             minibuffer-complete-and-exit\n"
"RET             minibuffer-complete-and-exit\n"
"C-g             abort-recursive-edit\n"
"\"\n"
"\n"

#. type: group
#: original_texis/help.texi:426
#, no-wrap
msgid ""
"(substitute-command-keys\n"
"   \"To abort a recursive edit from the minibuffer, type \\\n"
"`\\\\<minibuffer-local-must-match-map>\\\\[abort-recursive-edit]'.\")\n"
"@result{} \"To abort a recursive edit from the minibuffer, type ‘C-g’.\"\n"
msgstr ""
"(substitute-command-keys\n"
"   \"To abort a recursive edit from the minibuffer, type \\\n"
"`\\\\<minibuffer-local-must-match-map>\\\\[abort-recursive-edit]'.\")\n"
"@result{} \"To abort a recursive edit from the minibuffer, type ‘C-g’.\"\n"

#. type: Plain text
#: original_texis/help.texi:432
msgid "There are other special conventions for the text in documentation strings---for instance, you can refer to functions, variables, and sections of this manual.  @xref{Documentation Tips}, for details."
msgstr "ドキュメント文字列内のテキストにたいしては他にも特別な慣習があります。それらはたとえばこのマニュアルの関数、変数、およびセクションで参照できます。詳細は@ref{Documentation Tips}を参照してください。"

#. type: section
#: original_texis/help.texi:434
#, no-wrap
msgid "Describing Characters for Help Messages"
msgstr "Describing Characters for Help Messages"

#. type: cindex
#: original_texis/help.texi:435
#, no-wrap
msgid "describe characters and events"
msgstr "describe characters and events"

#. type: Plain text
#: original_texis/help.texi:443
msgid "These functions convert events, key sequences, or characters to textual descriptions.  These descriptions are useful for including arbitrary text characters or key sequences in messages, because they convert non-printing and whitespace characters to sequences of printing characters.  The description of a non-whitespace printing character is the character itself."
msgstr "以下の関数はイベント、キーシーケンス、文字をテキスト表記(textual descriptions)に変換します。これらの変換された表記は、メッセージ内に任意のテキスト文字やキーシーケンスを含める場合に有用です。なぜなら非プリント文字や空白文字はプリント文字シーケンスに変換されるからです。空白文字以外のプリント文字はその文字自身が表記になります。"

#. type: defun
#: original_texis/help.texi:444
#, no-wrap
msgid "key-description sequence &optional prefix"
msgstr "key-description sequence &optional prefix"

#. type: cindex
#: original_texis/help.texi:445
#, no-wrap
msgid "Emacs event standard notation"
msgstr "Emacs event standard notation"

#. type: defun
#: original_texis/help.texi:452
msgid "This function returns a string containing the Emacs standard notation for the input events in @var{sequence}.  If @var{prefix} is non-@code{nil}, it is a sequence of input events leading up to @var{sequence} and is included in the return value.  Both arguments may be strings, vectors or lists.  @xref{Input Events}, for more information about valid events."
msgstr "この関数は@var{sequence}内の入力イベントにたいしてEmacsの標準表記を含んだ文字列をリターンする。@var{prefix}が非@code{nil}なら、それは@var{sequence}に前置される入力イベントシーケンスであり、リターン値にも含まれる。引数には文字列、ベクター、またはリストを指定できる。有効なイベントに関する詳細は@ref{Input Events}を参照のこと。"

#. type: group
#: original_texis/help.texi:457
#, no-wrap
msgid ""
"(key-description [?\\M-3 delete])\n"
"     @result{} \"M-3 <delete>\"\n"
msgstr ""
"(key-description [?\\M-3 delete])\n"
"     @result{} \"M-3 <delete>\"\n"

#. type: group
#: original_texis/help.texi:461
#, no-wrap
msgid ""
"(key-description [delete] \"\\M-3\")\n"
"     @result{} \"M-3 <delete>\"\n"
msgstr ""
"(key-description [delete] \"\\M-3\")\n"
"     @result{} \"M-3 <delete>\"\n"

#. type: defun
#: original_texis/help.texi:465
msgid "See also the examples for @code{single-key-description}, below."
msgstr "以下の@code{single-key-description}の例も参照のこと。"

#. type: defun
#: original_texis/help.texi:467
#, no-wrap
msgid "single-key-description event &optional no-angles"
msgstr "single-key-description event &optional no-angles"

#. type: cindex
#: original_texis/help.texi:468
#, no-wrap
msgid "event printing"
msgstr "event printing"

#. type: cindex
#: original_texis/help.texi:469
#, no-wrap
msgid "character printing"
msgstr "character printing"

#. type: cindex
#: original_texis/help.texi:470
#, no-wrap
msgid "control character printing"
msgstr "control character printing"

#. type: cindex
#: original_texis/help.texi:471
#, no-wrap
msgid "meta character printing"
msgstr "meta character printing"

#. type: defun
#: original_texis/help.texi:480
msgid "This function returns a string describing @var{event} in the standard Emacs notation for keyboard input.  A normal printing character appears as itself, but a control character turns into a string starting with @samp{C-}, a meta character turns into a string starting with @samp{M-}, and space, tab, etc., appear as @samp{SPC}, @samp{TAB}, etc.  A function key symbol appears inside angle brackets @samp{<@dots{}>}.  An event that is a list appears as the name of the symbol in the @sc{car} of the list, inside angle brackets."
msgstr "この関数はキーボード入力にたいするEmacsの標準表記として@var{event}を表記する文字列をリターンする。通常のプリント文字はその文字自身で表れるが、コントロール文字は@samp{C-}で始まる文字列、メタ文字は@samp{M-}で始まる文字列、スペースやタブ等は@samp{SPC}や@samp{TAB}のように変換される。ファンクションキーのシンボルは@samp{<@dots{}>}のように角カッコ(angle brackets)の内側に表れる。リストであるようなイベントは、そのリストの@sc{car}内のシンボル名が角カッコの内側に表れる。"

#. type: defun
#: original_texis/help.texi:485
msgid "If the optional argument @var{no-angles} is non-@code{nil}, the angle brackets around function keys and event symbols are omitted; this is for compatibility with old versions of Emacs which didn't use the brackets."
msgstr "オプション引数@var{no-angles}が非@code{nil}なら、ファンクションキーやイベントシンボルを括る角カッコは省略される。これは角カッコを使用しない古いバージョンのEmacsとの互換性のため。"

#. type: group
#: original_texis/help.texi:490
#, no-wrap
msgid ""
"(single-key-description ?\\C-x)\n"
"     @result{} \"C-x\"\n"
msgstr ""
"(single-key-description ?\\C-x)\n"
"     @result{} \"C-x\"\n"

#. type: group
#: original_texis/help.texi:494
#, no-wrap
msgid ""
"(key-description \"\\C-x \\M-y \\n \\t \\r \\f123\")\n"
"     @result{} \"C-x SPC M-y SPC C-j SPC TAB SPC RET SPC C-l 1 2 3\"\n"
msgstr ""
"(key-description \"\\C-x \\M-y \\n \\t \\r \\f123\")\n"
"     @result{} \"C-x SPC M-y SPC C-j SPC TAB SPC RET SPC C-l 1 2 3\"\n"

#. type: group
#: original_texis/help.texi:498
#, no-wrap
msgid ""
"(single-key-description 'delete)\n"
"     @result{} \"<delete>\"\n"
msgstr ""
"(single-key-description 'delete)\n"
"     @result{} \"<delete>\"\n"

#. type: group
#: original_texis/help.texi:502
#, no-wrap
msgid ""
"(single-key-description 'C-mouse-1)\n"
"     @result{} \"<C-mouse-1>\"\n"
msgstr ""
"(single-key-description 'C-mouse-1)\n"
"     @result{} \"<C-mouse-1>\"\n"

#. type: group
#: original_texis/help.texi:506
#, no-wrap
msgid ""
"(single-key-description 'C-mouse-1 t)\n"
"     @result{} \"C-mouse-1\"\n"
msgstr ""
"(single-key-description 'C-mouse-1 t)\n"
"     @result{} \"C-mouse-1\"\n"

#. type: defun
#: original_texis/help.texi:510
#, no-wrap
msgid "text-char-description character"
msgstr "text-char-description character"

#. type: defun
#: original_texis/help.texi:519
msgid "This function returns a string describing @var{character} in the standard Emacs notation for characters that appear in text---like @code{single-key-description}, except that control characters are represented with a leading caret (which is how control characters in Emacs buffers are usually displayed).  Another difference is that @code{text-char-description} recognizes the 2**7 bit as the Meta character, whereas @code{single-key-description} uses the 2**27 bit for Meta."
msgstr "この関数はテキスト内に出現する文字にたいするEmacsの標準表記として@var{character}を表記する文字列をリターンする。これは@code{single-key-description}と似ているが、コントロール文字にカレットが前置されて表される点が異なる(これはEmacsバッファー内でコントロール文字を表示する通常の方法である)。他にも@code{single-key-description}が2**27ビットをメタ文字とするのにたいし、@code{text-char-description}は2**7ビットをメタ文字とする点が異なる。"

#. type: group
#: original_texis/help.texi:524
#, no-wrap
msgid ""
"(text-char-description ?\\C-c)\n"
"     @result{} \"^C\"\n"
msgstr ""
"(text-char-description ?\\C-c)\n"
"     @result{} \"^C\"\n"

#. type: group
#: original_texis/help.texi:528
#, no-wrap
msgid ""
"(text-char-description ?\\M-m)\n"
"     @result{} \"\\xed\"\n"
msgstr ""
"(text-char-description ?\\M-m)\n"
"     @result{} \"\\xed\"\n"

#. type: group
#: original_texis/help.texi:532
#, no-wrap
msgid ""
"(text-char-description ?\\C-\\M-m)\n"
"     @result{} \"\\x8d\"\n"
msgstr ""
"(text-char-description ?\\C-\\M-m)\n"
"     @result{} \"\\x8d\"\n"

#. type: group
#: original_texis/help.texi:536
#, no-wrap
msgid ""
"(text-char-description (+ 128 ?m))\n"
"     @result{} \"M-m\"\n"
msgstr ""
"(text-char-description (+ 128 ?m))\n"
"     @result{} \"M-m\"\n"

#. type: group
#: original_texis/help.texi:540
#, no-wrap
msgid ""
"(text-char-description (+ 128 ?\\C-m))\n"
"     @result{} \"M-^M\"\n"
msgstr ""
"(text-char-description (+ 128 ?\\C-m))\n"
"     @result{} \"M-^M\"\n"

#. type: deffn
#: original_texis/help.texi:544
#, no-wrap
msgid "Command read-kbd-macro string &optional need-vector"
msgstr "Command read-kbd-macro string &optional need-vector"

#. type: deffn
#: original_texis/help.texi:552
msgid "This function is used mainly for operating on keyboard macros, but it can also be used as a rough inverse for @code{key-description}.  You call it with a string containing key descriptions, separated by spaces; it returns a string or vector containing the corresponding events.  (This may or may not be a single valid key sequence, depending on what events you use; @pxref{Key Sequences}.)  If @var{need-vector} is non-@code{nil}, the return value is always a vector."
msgstr "この関数は主にキーボードマクロを操作するために使用されるが、大雑把な意味で@code{key-description}の逆の処理にも使用できる。キー表記を含むスペース区切りの文字列でこれを呼び出すと、それに対応するイベントを含む文字列かベクターをリターンする(これは単一の有効なキーシーケンスであるか否かは問わず何のイベントを使用するかに依存する。@ref{Key Sequences}を参照のこと)。@var{need-vector}が非@code{nil}ならリターン値は常にベクター。"

#. type: cindex
#: original_texis/help.texi:556
#, no-wrap
msgid "help functions"
msgstr "help functions"

#. type: Plain text
#: original_texis/help.texi:562
msgid "Emacs provides a variety of built-in help functions, all accessible to the user as subcommands of the prefix @kbd{C-h}.  For more information about them, see @ref{Help, , Help, emacs, The GNU Emacs Manual}.  Here we describe some program-level interfaces to the same information."
msgstr "Emacsはさまざまなビルトインのヘルプ関数を提供しており、それらはすべてプレフィックス@kbd{C-h}のサブコマンドとしてユーザーがアクセスできます。それらについての詳細は@ref{Help, , Help, emacs, The GNU Emacs Manual}を参照してください。ここでは同様な情報に関するプログラムレベルのインターフェイスを説明します。"

#. type: deffn
#: original_texis/help.texi:563
#, no-wrap
msgid "Command apropos pattern &optional do-all"
msgstr "Command apropos pattern &optional do-all"

#. type: deffn
#: original_texis/help.texi:570
msgid "This function finds all meaningful symbols whose names contain a match for the apropos pattern @var{pattern}.  An apropos pattern is either a word to match, a space-separated list of words of which at least two must match, or a regular expression (if any special regular expression characters occur).  A symbol is meaningful if it has a definition as a function, variable, or face, or has properties."
msgstr "この関数は名前にaproposパターン(apropos pattern: 適切なパターン) @var{pattern}を含む重要なすべてのシンボルを探す。マッチに使用されるaproposパターンは単語、最低2つはマッチしなければならないスペース区切りの単語、または(特別な正規表現文字があれば)正規表現のいずれか。あるシンボルが関数、変数、フェイスとしての定義、あるいはプロパティをもつならそのシンボルは重要とみなされる。"

#. type: deffn
#: original_texis/help.texi:572
msgid "The function returns a list of elements that look like this:"
msgstr "この関数は以下のような要素のリストをリターンする:"

#. type: example
#: original_texis/help.texi:576
#, no-wrap
msgid ""
"(@var{symbol} @var{score} @var{function-doc} @var{variable-doc}\n"
" @var{plist-doc} @var{widget-doc} @var{face-doc} @var{group-doc})\n"
msgstr ""
"(@var{symbol} @var{score} @var{function-doc} @var{variable-doc}\n"
" @var{plist-doc} @var{widget-doc} @var{face-doc} @var{group-doc})\n"

#. type: deffn
#: original_texis/help.texi:582
msgid "Here, @var{score} is an integer measure of how important the symbol seems to be as a match.  Each of the remaining elements is a documentation string, or @code{nil}, for @var{symbol} as a function, variable, etc."
msgstr "ここで@var{score}はマッチの面からそのシンボルがどれだけ重要に見えるかを比較する整数である。残りの各要素は@var{symbol}にたいする関数、変数、...等のドキュメント文字列(または@code{nil})。"

#. type: deffn
#: original_texis/help.texi:586
msgid "It also displays the symbols in a buffer named @file{*Apropos*}, each with a one-line description taken from the beginning of its documentation string."
msgstr "これは@file{*Apropos*}という名前のバッファーにもシンボルを表示する。その際、各行にはドキュメント文字列の先頭から取得した1行説明とともに表示される。"

#. type: deffn
#: original_texis/help.texi:592
msgid "If @var{do-all} is non-@code{nil}, or if the user option @code{apropos-do-all} is non-@code{nil}, then @code{apropos} also shows key bindings for the functions that are found; it also shows @emph{all} interned symbols, not just meaningful ones (and it lists them in the return value as well)."
msgstr "@var{do-all}が非@code{nil}、またはユーザーオプション@code{apropos-do-all}が非@code{nil}なら、@code{apropos}は見つかった関数のキーバインディングも表示する。これは重要なものだけでなく、internされた@emph{すべて}のシンボルも表示する(同様にリターン値としてもそれらをリストする)。"

#. type: defvar
#: original_texis/help.texi:594
#, no-wrap
msgid "help-map"
msgstr "help-map"

#. type: defvar
#: original_texis/help.texi:597
msgid "The value of this variable is a local keymap for characters following the Help key, @kbd{C-h}."
msgstr "この変数の値はHelpキー@kbd{C-h}に続く文字にたいするローカルキーマップである。"

#. type: deffn
#: original_texis/help.texi:599
#, no-wrap
msgid "{Prefix Command} help-command"
msgstr "{Prefix Command} help-command"

#. type: deffn
#: original_texis/help.texi:603
msgid "This symbol is not a function; its function definition cell holds the keymap known as @code{help-map}.  It is defined in @file{help.el} as follows:"
msgstr "このシンボルは関数ではなく関数定義セルには@code{help-map}としてキーマップを保持する。これは@file{help.el}内で以下のように定義されている:"

#. type: group
#: original_texis/help.texi:608
#, no-wrap
msgid ""
"(define-key global-map (string help-char) 'help-command)\n"
"(fset 'help-command help-map)\n"
msgstr ""
"(define-key global-map (string help-char) 'help-command)\n"
"(fset 'help-command help-map)\n"

#. type: defopt
#: original_texis/help.texi:612
#, no-wrap
msgid "help-char"
msgstr "help-char"

#. type: defopt
#: original_texis/help.texi:618
msgid "The value of this variable is the help character---the character that Emacs recognizes as meaning Help.  By default, its value is 8, which stands for @kbd{C-h}.  When Emacs reads this character, if @code{help-form} is a non-@code{nil} Lisp expression, it evaluates that expression, and displays the result in a window if it is a string."
msgstr "この変数の値はヘルプ文字(help character: Helpを意味する文字としてEmacsが認識する文字)。デフォルトの値は@kbd{C-h}を意味する8。この文字を読み取った際に@code{help-form}が非@code{nil}のLisp式なら、Emacsはその式を評価して結果が文字列の場合はウィンドウ内にそれを表示する。"

#. type: defopt
#: original_texis/help.texi:624
msgid "Usually the value of @code{help-form} is @code{nil}.  Then the help character has no special meaning at the level of command input, and it becomes part of a key sequence in the normal way.  The standard key binding of @kbd{C-h} is a prefix key for several general-purpose help features."
msgstr "@code{help-form}の値は通常は@code{nil}。その場合にはヘルプ文字はコマンド入力のレベルにおいて特別な意味を有さず、通常の方法におけるキーシーケンスの一部となる。@kbd{C-h}の標準的なキーバインディングは、複数の汎用目的をもつヘルプ機能のプレフィックスキー。"

#. type: defopt
#: original_texis/help.texi:629
msgid "The help character is special after prefix keys, too.  If it has no binding as a subcommand of the prefix key, it runs @code{describe-prefix-bindings}, which displays a list of all the subcommands of the prefix key."
msgstr "ヘルプ文字はプレフィックスキーの後でも特別な意味をもつ。ヘルプ文字がプレフィックスキーのサブコマンドとしてバインディングをもたなければ、そのプレフィックスキーのすべてのサブコマンドのリストを表示する@code{describe-prefix-bindings}を実行する。"

#. type: defopt
#: original_texis/help.texi:631
#, no-wrap
msgid "help-event-list"
msgstr "help-event-list"

#. type: defopt
#: original_texis/help.texi:635
msgid "The value of this variable is a list of event types that serve as alternative help characters.  These events are handled just like the event specified by @code{help-char}."
msgstr "この変数の値はヘルプ文字の選択肢の役割を果たすイベント型のリスト。これらのイベントは@code{help-char}で指定されるイベントと同様に処理される。"

#. type: defvar
#: original_texis/help.texi:637
#, no-wrap
msgid "help-form"
msgstr "help-form"

#. type: defvar
#: original_texis/help.texi:641
msgid "If this variable is non-@code{nil}, its value is a form to evaluate whenever the character @code{help-char} is read.  If evaluating the form produces a string, that string is displayed."
msgstr "この変数が非@code{nil}なら、その値は文字@code{help-char}が読み取られるたびに評価されるフォームであること。そのフォームの評価によって文字列が生成されたらその文字列が表示される。"

#. type: defvar
#: original_texis/help.texi:648
msgid "A command that calls @code{read-event}, @code{read-char-choice}, or @code{read-char} probably should bind @code{help-form} to a non-@code{nil} expression while it does input.  (The time when you should not do this is when @kbd{C-h} has some other meaning.)  Evaluating this expression should result in a string that explains what the input is for and how to enter it properly."
msgstr "@code{read-event}、@code{read-char-choice}、@code{read-char}を呼び出すコマンドは、それが入力を行う間は恐らく@code{help-form}を非@code{nil}にバインドするべきだろう(@kbd{C-h}が他の意味をもつなら行わないこと)。この式を評価した結果は、それが何にたいする入力なのかと、それを正しくエンターする方法を説明する文字列であること。"

#. type: defvar
#: original_texis/help.texi:651
msgid "Entry to the minibuffer binds this variable to the value of @code{minibuffer-help-form} (@pxref{Definition of minibuffer-help-form})."
msgstr "ミニバッファーへのエントリーにより、この変数は@code{minibuffer-help-form}の値にバインドされる(@ref{Definition of minibuffer-help-form}を参照)。"

#. type: defvar
#: original_texis/help.texi:653
#, no-wrap
msgid "prefix-help-command"
msgstr "prefix-help-command"

#. type: defvar
#: original_texis/help.texi:658
msgid "This variable holds a function to print help for a prefix key.  The function is called when the user types a prefix key followed by the help character, and the help character has no binding after that prefix.  The variable's default value is @code{describe-prefix-bindings}."
msgstr "この変数はプレフィックスキーにたいするヘルプをプリントする関数を保持する。その関数はユーザーが後にヘルプ文字を伴うプレフィックスキーをタイプして、そのヘルプ文字がプレフィックスの後のバインディングをもたないたときに呼び出される。この変数のデフォルト値は@code{describe-prefix-bindings}。"

#. type: deffn
#: original_texis/help.texi:660
#, no-wrap
msgid "Command describe-prefix-bindings"
msgstr "Command describe-prefix-bindings"

#. type: deffn
#: original_texis/help.texi:665
msgid "This function calls @code{describe-bindings} to display a list of all the subcommands of the prefix key of the most recent key sequence.  The prefix described consists of all but the last event of that key sequence.  (The last event is, presumably, the help character.)"
msgstr "この関数はもっとも最近のプレフィックスキーのサブコマンドすべてにたいするリストを表示する@code{describe-bindings}を呼び出す。記述されるプレフィックスは、そのキーシーケンスの最後のイベントを除くすべてから構成される(最後のイベントは恐らくヘルプ文字)。"

#. type: Plain text
#: original_texis/help.texi:671
msgid "The following two functions are meant for modes that want to provide help without relinquishing control, such as the electric modes.  Their names begin with @samp{Helper} to distinguish them from the ordinary help functions."
msgstr "以下の2つの関数はelectricモードのように制御を放棄せずにヘルプを提供したいモードを意図しています。これらは通常のヘルプ関数と区別するために名前が@samp{Helper}で始まります。"

#. type: deffn
#: original_texis/help.texi:672
#, no-wrap
msgid "Command Helper-describe-bindings"
msgstr "Command Helper-describe-bindings"

#. type: deffn
#: original_texis/help.texi:676
msgid "This command pops up a window displaying a help buffer containing a listing of all of the key bindings from both the local and global keymaps.  It works by calling @code{describe-bindings}."
msgstr "このコマンドはローカルキーマップとグローバルキーマップの両方のキーバインディングすべてのリストを含むヘルプバッファーを表示するウィンドウをポップアップする。これは@code{describe-bindings}を呼び出すことによって機能する。"

#. type: deffn
#: original_texis/help.texi:678
#, no-wrap
msgid "Command Helper-help"
msgstr "Command Helper-help"

#. type: deffn
#: original_texis/help.texi:683
msgid "This command provides help for the current mode.  It prompts the user in the minibuffer with the message @samp{Help (Type ? for further options)}, and then provides assistance in finding out what the key bindings are, and what the mode is intended for.  It returns @code{nil}."
msgstr "このコマンドはカレントモードにたいするヘルプを提供する。これはミニバッファー内でメッセージ@samp{Help (Type ? for further options)}とともにユーザーに入力を求めて、その後キーバインディングが何か、何を意図するモードなのかを探すための助けを提供する。これは@code{nil}をリターンする。"

#. type: vindex
#: original_texis/help.texi:684
#, no-wrap
msgid "Helper-help-map"
msgstr "Helper-help-map"

#. type: deffn
#: original_texis/help.texi:686
msgid "This can be customized by changing the map @code{Helper-help-map}."
msgstr "これはマップ@code{Helper-help-map}を変更することによってカスタマイズできる。"

#. type: defvar
#: original_texis/help.texi:688
#, no-wrap
msgid "data-directory"
msgstr "data-directory"

#. type: anchor{#1}
#: original_texis/help.texi:692
msgid "Definition of data-directory"
msgstr "Definition of data-directory"

#. type: defvar
#: original_texis/help.texi:692
msgid "This variable holds the name of the directory in which Emacs finds certain documentation and text files that come with Emacs."
msgstr "この変数はEmacsに付随する特定のドキュメントおよびテキストファイルを探すディレクトリーの名前を保持する。"

#. type: defun
#: original_texis/help.texi:694
#, no-wrap
msgid "help-buffer"
msgstr "help-buffer"

#. type: defun
#: original_texis/help.texi:697
msgid "This function returns the name of the help buffer, which is normally @file{*Help*}; if such a buffer does not exist, it is first created."
msgstr "この関数はヘルプバッファーの名前(通常は@file{*Help*})をリターンする。そのようなバッファーが存在しなければ最初にそれを作成する。"

#. type: vindex
#: original_texis/help.texi:699
#, no-wrap
msgid "help-window-select"
msgstr "help-window-select"

#. type: defmac
#: original_texis/help.texi:700
#, no-wrap
msgid "with-help-window buffer-name body@dots{}"
msgstr "with-help-window buffer-name body@dots{}"

#. type: defmac
#: original_texis/help.texi:710
msgid "This macro evaluates @var{body} like @code{with-output-to-temp-buffer} (@pxref{Temporary Displays}), inserting any output produced by its forms into a buffer named @var{buffer-name}.  (Usually, @var{buffer-name} should be the value returned by the function @code{help-buffer}.)  It also puts the specified buffer into Help mode and displays a message telling the user how to quit and scroll the help window.  It selects the help window if the current value of the user option @code{help-window-select} has been set accordingly.  It returns the last value in @var{body}."
msgstr "このマクロは@code{with-output-to-temp-buffer} (@ref{Temporary Displays}を参照)のように@var{body}を評価して、そのフォームが生成したすべての出力を@var{buffer-name}という名前のバッファーに挿入する(@var{buffer-name}は通常は関数@code{help-buffer}によりリターンされる値であること)。これは指定されたバッファーをHelpモードにして、ヘルプウィンドウのquitやスクロールする方法を告げるメッセージを表示する。これはユーザーオプション@code{help-window-select}のカレント値が適切にセットされていればヘルプウィンドウの選択も行う。これは@var{body}内の最後の値をリターンする。"

#. type: defun
#: original_texis/help.texi:712
#, no-wrap
msgid "help-setup-xref item interactive-p"
msgstr "help-setup-xref item interactive-p"

#. type: defun
#: original_texis/help.texi:723
msgid "This function updates the cross reference data in the @file{*Help*} buffer, which is used to regenerate the help information when the user clicks on the @samp{Back} or @samp{Forward} buttons.  Most commands that use the @file{*Help*} buffer should invoke this function before clearing the buffer.  The @var{item} argument should have the form @code{(@var{function} . @var{args})}, where @var{function} is a function to call, with argument list @var{args}, to regenerate the help buffer.  The @var{interactive-p} argument is non-@code{nil} if the calling command was invoked interactively; in that case, the stack of items for the @file{*Help*} buffer's @samp{Back} buttons is cleared."
msgstr "この関数は@file{*Help*}バッファー内のクロスリファレンスデータを更新する。このクロスリファレンスはユーザーが@samp{Back}ボタンか@samp{Forward}ボタン上でクリックした際のヘルプ情報の再生成に使用される。@file{*Help*}バッファーを使用するほとんどのコマンドは、バッファーをクリアーする前にこの関数を呼び出すべきである。@var{item}引数は@code{(@var{function} . @var{args})}という形式であること。ここで@var{function}は引数リスト@var{args}で呼び出されるヘルプバッファーを再生成する関数。コマンド呼び出しがinteractiveに行われた場合、@var{interactive-p}引数は非@code{nil}。この場合には@file{*Help*}バッファーの@samp{Back}ボタンにたいするitemのスタックはクリアーされる。"

#. type: Plain text
#: original_texis/help.texi:728
msgid "@xref{describe-symbols example}, for an example of using @code{help-buffer}, @code{with-help-window}, and @code{help-setup-xref}."
msgstr "@code{help-buffer}、@code{with-help-window}、@code{help-setup-xref}の使用例は@ref{describe-symbols example}を参照してください。"

#. type: defmac
#: original_texis/help.texi:729
#, no-wrap
msgid "make-help-screen fname help-line help-text help-map"
msgstr "make-help-screen fname help-line help-text help-map"

#. type: defmac
#: original_texis/help.texi:732
msgid "This macro defines a help command named @var{fname} that acts like a prefix key that shows a list of the subcommands it offers."
msgstr "このマクロは提供するサブコマンドのリストを表示するプレフィックスキーのように振る舞う、@var{fname}という名前のヘルプコマンドを定義する。"

#. type: defmac
#: original_texis/help.texi:737
msgid "When invoked, @var{fname} displays @var{help-text} in a window, then reads and executes a key sequence according to @var{help-map}.  The string @var{help-text} should describe the bindings available in @var{help-map}."
msgstr "呼び出された際、@var{fname}はウィンドウ内に@var{help-text}を表示してから@var{help-map}に応じてキーシーケンスの読み取りと実行を行う。文字列@var{help-text}は@var{help-map}内で利用可能なバインディングを説明すること。"

#. type: defmac
#: original_texis/help.texi:744
msgid "The command @var{fname} is defined to handle a few events itself, by scrolling the display of @var{help-text}.  When @var{fname} reads one of those special events, it does the scrolling and then reads another event.  When it reads an event that is not one of those few, and which has a binding in @var{help-map}, it executes that key's binding and then returns."
msgstr "コマンド@var{fname}は@var{help-text}の表示をスクロールすることによる、自身のいくつかのイベントを処理するために定義される。@var{fname}がこれらのスペシャルイベントのいずれかを読み取った際には、スクロールを行った後で他のイベントを読み取る。自身が処理する以外のイベントを読み取りそのイベントが@var{help-map}内にバインディングを有す際は、そのキーのバインディングを実行した後にリターンする。"

#. type: defmac
#: original_texis/help.texi:749
msgid "The argument @var{help-line} should be a single-line summary of the alternatives in @var{help-map}.  In the current version of Emacs, this argument is used only if you set the option @code{three-step-help} to @code{t}."
msgstr "引数@var{help-line}は@var{help-map}内の候補の1行要約であること。Emacsのカレントバージョンでは、オプション@code{three-step-help}を@code{t}にセットした場合のみこの引数が使用される。"

#. type: defmac
#: original_texis/help.texi:752
msgid "This macro is used in the command @code{help-for-help} which is the binding of @kbd{C-h C-h}."
msgstr "このマクロは@kbd{C-h C-h}にバインドされるコマンド@code{help-for-help}内で使用される。"

#. type: defopt
#: original_texis/help.texi:754
#, no-wrap
msgid "three-step-help"
msgstr "three-step-help"

#. type: defopt
#: original_texis/help.texi:759
msgid "If this variable is non-@code{nil}, commands defined with @code{make-help-screen} display their @var{help-line} strings in the echo area at first, and display the longer @var{help-text} strings only if the user types the help character again."
msgstr "この変数が非@code{nil}なら、@code{make-help-screen}で定義されたコマンドは最初にエコーエリア内に自身の@var{help-line}文字列を表示して、ユーザーが再度ヘルプ文字をタイプした場合のみ長い@var{help-text}文字列を表示する。"
