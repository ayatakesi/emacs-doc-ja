# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: emacs-lispref 25.1\n"
"POT-Creation-Date: 2019-10-14 22:49+0900\n"
"PO-Revision-Date: 2020-01-25 04:42+0900\n"
"Last-Translator: Ayanokoji Takesi <ayanokoji.takesi@gmail.com>\n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: chapter
#: original_texis/text.texi:5 original_texis/text.texi:6
#, no-wrap
msgid "Text"
msgstr "Text"

#. type: cindex
#: original_texis/text.texi:7
#, no-wrap
msgid "text"
msgstr "text"

#. type: Plain text
#: original_texis/text.texi:14
msgid "This chapter describes the functions that deal with the text in a buffer.  Most examine, insert, or delete text in the current buffer, often operating at point or on text adjacent to point.  Many are interactive.  All the functions that change the text provide for undoing the changes (@pxref{Undo})."
msgstr "このチャプターではバッファー内のテキストを扱う関数を説明します。ほとんどはカレントバッファー内のテキストにたいして検査、挿入、削除を行ってポイント位置やポイントに隣接するテキストを操作することが多々あります。その多くはインタラクティブ(interactive: 対話的)です。テキストを変更するすべての関数は、その変更にたいするundo(アンドゥ、取り消し)を提供します(@ref{Undo}を参照)。"

#. type: Plain text
#: original_texis/text.texi:25
msgid "Many text-related functions operate on a region of text defined by two buffer positions passed in arguments named @var{start} and @var{end}.  These arguments should be either markers (@pxref{Markers}) or numeric character positions (@pxref{Positions}).  The order of these arguments does not matter; it is all right for @var{start} to be the end of the region and @var{end} the beginning.  For example, @code{(delete-region 1 10)} and @code{(delete-region 10 1)} are equivalent.  An @code{args-out-of-range} error is signaled if either @var{start} or @var{end} is outside the accessible portion of the buffer.  In an interactive call, point and the mark are used for these arguments."
msgstr "テキストに関連する関数の多くが、@var{start}と@var{end}という名前の引数として渡された2つのバッファー位置により定義されるテキストのリージョンを操作します。これらの引数はマーカー(@ref{Markers}を参照)か数値的な文字位置(@ref{Positions}を参照)のいずれかであるべきです。これらの引数の順序は関係ありません。@var{start}がリージョンの終端で@var{end}がリージョンの先頭であっても問題はありません。たとえば@code{(delete-region 1 10)}と@code{(delete-region 10 1)}は等価です。@var{start}と@var{end}のいずれかがバッファーのアクセス可能範囲の外部なら@code{args-out-of-range}エラーがシグナルされます。インタラクティブな呼び出しでは、これらの引数にポイントとマークが使用されます。"

#. type: cindex
#: original_texis/text.texi:26
#, no-wrap
msgid "buffer contents"
msgstr "buffer contents"

#. type: Plain text
#: original_texis/text.texi:31
msgid "Throughout this chapter, ``text'' refers to the characters in the buffer, together with their properties (when relevant).  Keep in mind that point is always between two characters, and the cursor appears on the character after point."
msgstr "このチャプターを通じて、``テキスト(text)''とは(関係あるときは)そのプロパティも含めたバッファー内の文字を意味します。ポイントは常に2つの文字の間にあり、カーソルはポイントの後の文字上に表示されることを覚えておいてください。"

#. type: node
#: original_texis/text.texi:63 original_texis/text.texi:65
#, no-wrap
msgid "Near Point"
msgstr "Near Point"

#. type: menuentry
#: original_texis/text.texi:63
msgid "Examining text in the vicinity of point."
msgstr "ポイント付近のテキストを調べる。"

#. type: node
#: original_texis/text.texi:63 original_texis/text.texi:163
#, no-wrap
msgid "Buffer Contents"
msgstr "Buffer Contents"

#. type: menuentry
#: original_texis/text.texi:63
msgid "Examining text in a general fashion."
msgstr "一般的な方法によってテキストを調べる。"

#. type: section
#: original_texis/text.texi:63 original_texis/text.texi:332
#: original_texis/text.texi:333
#, no-wrap
msgid "Comparing Text"
msgstr "Comparing Text"

#. type: menuentry
#: original_texis/text.texi:63
msgid "Comparing substrings of buffers."
msgstr "バッファーの部分文字列を比較する。"

#. type: node
#: original_texis/text.texi:63 original_texis/text.texi:367
#, no-wrap
msgid "Insertion"
msgstr "Insertion"

#. type: menuentry
#: original_texis/text.texi:63
msgid "Adding new text to a buffer."
msgstr "バッファーへの新たなテキストの追加。"

#. type: node
#: original_texis/text.texi:63 original_texis/text.texi:482
#, no-wrap
msgid "Commands for Insertion"
msgstr "Commands for Insertion"

#. type: menuentry
#: original_texis/text.texi:63
msgid "User-level commands to insert text."
msgstr "テキスト挿入のためのユーザーレベルコマンド。"

#. type: node
#: original_texis/text.texi:63 original_texis/text.texi:562
#, no-wrap
msgid "Deletion"
msgstr "Deletion"

#. type: menuentry
#: original_texis/text.texi:63
msgid "Removing text from a buffer."
msgstr "バッファーからテキストを削除する。"

#. type: node
#: original_texis/text.texi:63 original_texis/text.texi:668
#, no-wrap
msgid "User-Level Deletion"
msgstr "User-Level Deletion"

#. type: menuentry
#: original_texis/text.texi:63
msgid "User-level commands to delete text."
msgstr "テキスト削除のためのユーザーレベルコマンド。"

#. type: section
#: original_texis/text.texi:63 original_texis/text.texi:823
#: original_texis/text.texi:824
#, no-wrap
msgid "The Kill Ring"
msgstr "The Kill Ring"

#. type: menuentry
#: original_texis/text.texi:63
msgid "Where removed text sometimes is saved for later use."
msgstr "テキスト削除時にユーザーのためにそれを保存する場所。"

#. type: section
#: original_texis/text.texi:63 original_texis/text.texi:1269
#: original_texis/text.texi:1270
#, no-wrap
msgid "Undo"
msgstr "Undo"

#. type: menuentry
#: original_texis/text.texi:63
msgid "Undoing changes to the text of a buffer."
msgstr "バッファーのテキストにたいする変更の取り消し。"

#. type: node
#: original_texis/text.texi:63 original_texis/text.texi:1417
#, no-wrap
msgid "Maintaining Undo"
msgstr "Maintaining Undo"

#. type: menuentry
#: original_texis/text.texi:63
msgid "How to enable and disable undo information.  How to control how much information is kept."
msgstr "undo情報の有効と無効。情報をどれだけ保持するか制御する方法。"

#. type: section
#: original_texis/text.texi:63 original_texis/text.texi:1492
#: original_texis/text.texi:1493
#, no-wrap
msgid "Filling"
msgstr "Filling"

#. type: menuentry
#: original_texis/text.texi:63
msgid "Functions for explicit filling."
msgstr "明示的にフィルを行う関数。"

#. type: node
#: original_texis/text.texi:63 original_texis/text.texi:1685
#, no-wrap
msgid "Margins"
msgstr "Margins"

#. type: menuentry
#: original_texis/text.texi:63
msgid "How to specify margins for filling commands."
msgstr "フィルコマンドにたいしてマージンを指定する方法。"

#. type: node
#: original_texis/text.texi:63 original_texis/text.texi:1782
#, no-wrap
msgid "Adaptive Fill"
msgstr "Adaptive Fill"

#. type: menuentry
#: original_texis/text.texi:63
msgid "Adaptive Fill mode chooses a fill prefix from context."
msgstr "コンテキストからフィルプレフィクスを選択するAdaptive Fillモード。"

#. type: section
#: original_texis/text.texi:63 original_texis/text.texi:1872
#: original_texis/text.texi:1873
#, no-wrap
msgid "Auto Filling"
msgstr "Auto Filling"

#. type: menuentry
#: original_texis/text.texi:63
msgid "How auto-fill mode is implemented to break lines."
msgstr "行ブレークにたいするauto-fillの実装方法。"

#. type: node
#: original_texis/text.texi:63 original_texis/text.texi:1910
#, no-wrap
msgid "Sorting"
msgstr "Sorting"

#. type: menuentry
#: original_texis/text.texi:63
msgid "Functions for sorting parts of the buffer."
msgstr "バッファーの一部をソートする関数。"

#. type: node
#: original_texis/text.texi:63 original_texis/text.texi:2167
#, no-wrap
msgid "Columns"
msgstr "Columns"

#. type: menuentry
#: original_texis/text.texi:63
msgid "Computing horizontal positions, and using them."
msgstr "水平位置の計算とその使用方法。"

#. type: section
#: original_texis/text.texi:63 original_texis/text.texi:2227
#: original_texis/text.texi:2228
#, no-wrap
msgid "Indentation"
msgstr "Indentation"

#. type: menuentry
#: original_texis/text.texi:63
msgid "Functions to insert or adjust indentation."
msgstr "インデントの挿入や調整のための関数。"

#. type: section
#: original_texis/text.texi:63 original_texis/text.texi:2568
#: original_texis/text.texi:2569
#, no-wrap
msgid "Case Changes"
msgstr "Case Changes"

#. type: menuentry
#: original_texis/text.texi:63
msgid "Case conversion of parts of the buffer."
msgstr "バッファーの一部にたいする大文字小文字変換。"

#. type: section
#: original_texis/text.texi:63 original_texis/text.texi:2660
#: original_texis/text.texi:2661
#, no-wrap
msgid "Text Properties"
msgstr "Text Properties"

#. type: menuentry
#: original_texis/text.texi:63
msgid "Assigning Lisp property lists to text characters."
msgstr "テキスト文字にたいするLispプロパティリストの追加。"

#. type: node
#: original_texis/text.texi:63 original_texis/text.texi:4061
#, no-wrap
msgid "Substitution"
msgstr "Substitution"

#. type: menuentry
#: original_texis/text.texi:63
msgid "Replacing a given character wherever it appears."
msgstr "与ええられた文字の出現箇所を置換する。"

#. type: section
#: original_texis/text.texi:63 original_texis/text.texi:4118
#: original_texis/text.texi:4119
#, no-wrap
msgid "Registers"
msgstr "Registers"

#. type: menuentry
#: original_texis/text.texi:63
msgid "How registers are implemented.  Accessing the text or position stored in a register."
msgstr "レジスターの実装方法。レジスターに格納されたテキストや位置にアクセスする。"

#. type: node
#: original_texis/text.texi:63 original_texis/text.texi:4224
#, no-wrap
msgid "Transposition"
msgstr "Transposition"

#. type: menuentry
#: original_texis/text.texi:63
msgid "Swapping two portions of a buffer."
msgstr "バッファーの2つの部分を交換する。"

#. type: node
#: original_texis/text.texi:63 original_texis/text.texi:4243
#, no-wrap
msgid "Decompression"
msgstr "Decompression"

#. type: menuentry
#: original_texis/text.texi:63
msgid "Dealing with compressed data."
msgstr "圧縮データの扱い。"

#. type: node
#: original_texis/text.texi:63 original_texis/text.texi:4272
#, no-wrap
msgid "Base 64"
msgstr "Base 64"

#. type: menuentry
#: original_texis/text.texi:63
msgid "Conversion to or from base 64 encoding."
msgstr "Base64エンコーディングとの変換。"

#. type: section
#: original_texis/text.texi:63 original_texis/text.texi:4329
#: original_texis/text.texi:4330
#, no-wrap
msgid "Checksum/Hash"
msgstr "Checksum/Hash"

#. type: menuentry
#: original_texis/text.texi:63
msgid "Computing cryptographic hashes."
msgstr "暗号ハッシュの計算。"

#. type: node
#: original_texis/text.texi:63 original_texis/text.texi:4397
#, no-wrap
msgid "Parsing HTML/XML"
msgstr "Parsing HTML/XML"

#. type: menuentry
#: original_texis/text.texi:63
msgid "Parsing HTML and XML."
msgstr "HTMLおよびXMLの解析。"

#. type: node
#: original_texis/text.texi:63 original_texis/text.texi:4586
#, no-wrap
msgid "Atomic Changes"
msgstr "Atomic Changes"

#. type: menuentry
#: original_texis/text.texi:63
msgid "Installing several buffer changes atomically."
msgstr "複数バッファーへの変更をアトミックにインストールする。"

#. type: section
#: original_texis/text.texi:63 original_texis/text.texi:4676
#: original_texis/text.texi:4677
#, no-wrap
msgid "Change Hooks"
msgstr "Change Hooks"

#. type: menuentry
#: original_texis/text.texi:63
msgid "Supplying functions to be run when text is changed."
msgstr "テキスト変更時に実行する関数の指定。"

#. type: section
#: original_texis/text.texi:66
#, no-wrap
msgid "Examining Text Near Point"
msgstr "Examining Text Near Point"

#. type: cindex
#: original_texis/text.texi:67
#, no-wrap
msgid "text near point"
msgstr "text near point"

#. type: Plain text
#: original_texis/text.texi:72
msgid "Many functions are provided to look at the characters around point.  Several simple functions are described here.  See also @code{looking-at} in @ref{Regexp Search}."
msgstr "ポイント付近にある文字を調べるための関数が数多く提供されています。簡単な関数のいくつかはここで説明します。@ref{Regexp Search}の@code{looking-at}も参照してください。"

#. type: Plain text
#: original_texis/text.texi:75
msgid "In the following four functions, ``beginning'' or ``end'' of buffer refers to the beginning or end of the accessible portion."
msgstr "以下の4つの関数でのバッファーの``先頭(beginning)''と``終端(end)''はそれぞれ、アクセス可能範囲の先頭と終端を意味します。"

#. type: defun
#: original_texis/text.texi:76
#, no-wrap
msgid "char-after &optional position"
msgstr "char-after &optional position"

#. type: defun
#: original_texis/text.texi:82
msgid "This function returns the character in the current buffer at (i.e., immediately after) position @var{position}.  If @var{position} is out of range for this purpose, either before the beginning of the buffer, or at or beyond the end, then the value is @code{nil}.  The default for @var{position} is point."
msgstr "この関数はカレントバッファーの位置@var{position} (つまり直後)の文字をリターンする。@var{position}がこの目的にたいする範囲の外にある場合、すなわちバッファーの先頭より前、またはバッファーの終端以降にあるなら値は@code{nil}。@var{position}のデフォルトはポイント。"

#. type: defun
#: original_texis/text.texi:85
msgid "In the following example, assume that the first character in the buffer is @samp{@@}:"
msgstr "以下の例ではバッファーの最初の文字が@samp{@@}であると仮定する:"

#. type: group
#: original_texis/text.texi:90
#, no-wrap
msgid ""
"(string (char-after 1))\n"
"     @result{} \"@@\"\n"
msgstr ""
"(string (char-after 1))\n"
"     @result{} \"@@\"\n"

#. type: defun
#: original_texis/text.texi:94
#, no-wrap
msgid "char-before &optional position"
msgstr "char-before &optional position"

#. type: defun
#: original_texis/text.texi:100
msgid "This function returns the character in the current buffer immediately before position @var{position}.  If @var{position} is out of range for this purpose, either at or before the beginning of the buffer, or beyond the end, then the value is @code{nil}.  The default for @var{position} is point."
msgstr "この関数はカレントバッファーの位置@var{position}の直前の文字をリターンする。@var{position}がこの目的にたいする範囲の外にある場合、すなわちバッファーの先頭より前、またはバッファーの終端より後にあるなら値は@code{nil}。@var{position}のデフォルトはポイント。"

#. type: defun
#: original_texis/text.texi:102
#, no-wrap
msgid "following-char"
msgstr "following-char"

#. type: defun
#: original_texis/text.texi:106
msgid "This function returns the character following point in the current buffer.  This is similar to @code{(char-after (point))}.  However, if point is at the end of the buffer, then @code{following-char} returns 0."
msgstr "この関数はカレントバッファーのポイントの後にある文字をリターンする。これは@code{(char-after (point))}と同様。ただしポイントがバッファー終端にある場合には、@code{following-char}は0をリターンする。"

#. type: defun
#: original_texis/text.texi:111
msgid "Remember that point is always between characters, and the cursor normally appears over the character following point.  Therefore, the character returned by @code{following-char} is the character the cursor is over."
msgstr "ポイントが常に2つの文字の間にあり、カーソルは通常はポイント後の文字上に表示されることを思い出してほしい。したがって@code{following-char}がリターンする文字はカーソル上の文字となる。"

#. type: defun
#: original_texis/text.texi:113
msgid "In this example, point is between the @samp{a} and the @samp{c}."
msgstr "以下の例では@samp{a}と@samp{c}の間にポイントがある。"

#. type: group
#: original_texis/text.texi:120
#, no-wrap
msgid ""
"---------- Buffer: foo ----------\n"
"Gentlemen may cry ``Pea@point{}ce! Peace!,''\n"
"but there is no peace.\n"
"---------- Buffer: foo ----------\n"
msgstr ""
"---------- Buffer: foo ----------\n"
"Gentlemen may cry ``Pea@point{}ce! Peace!,''\n"
"but there is no peace.\n"
"---------- Buffer: foo ----------\n"

#. type: group
#: original_texis/text.texi:127
#, no-wrap
msgid ""
"(string (preceding-char))\n"
"     @result{} \"a\"\n"
"(string (following-char))\n"
"     @result{} \"c\"\n"
msgstr ""
"(string (preceding-char))\n"
"     @result{} \"a\"\n"
"(string (following-char))\n"
"     @result{} \"c\"\n"

#. type: defun
#: original_texis/text.texi:131
#, no-wrap
msgid "preceding-char"
msgstr "preceding-char"

#. type: defun
#: original_texis/text.texi:136
msgid "This function returns the character preceding point in the current buffer.  See above, under @code{following-char}, for an example.  If point is at the beginning of the buffer, @code{preceding-char} returns 0."
msgstr "この関数はカレントバッファーのポイントの前の文字をリターンする。上記@code{following-char}の下の例を参照のこと。ポイントがバッファー先頭にあれば、@code{preceding-char}は0をリターンする。"

#. type: defun
#: original_texis/text.texi:138
#, no-wrap
msgid "bobp"
msgstr "bobp"

#. type: defun
#: original_texis/text.texi:143
msgid "This function returns @code{t} if point is at the beginning of the buffer.  If narrowing is in effect, this means the beginning of the accessible portion of the text.  See also @code{point-min} in @ref{Point}."
msgstr "この関数はポイントがバッファー先頭にあれば@code{t}をリターンする。ナローイングが効力をもつなら、これはテキストのアクセス可能範囲の先頭を意味する。@ref{Point}の@code{point-min}も参照のこと。"

#. type: defun
#: original_texis/text.texi:145
#, no-wrap
msgid "eobp"
msgstr "eobp"

#. type: defun
#: original_texis/text.texi:149
msgid "This function returns @code{t} if point is at the end of the buffer.  If narrowing is in effect, this means the end of accessible portion of the text.  See also @code{point-max} in @xref{Point}."
msgstr "この関数はポイントがバッファー終端にあれば@code{t}をリターンする。ナローイングが効力をもつなら、これはテキストのアクセス可能範囲の終端を意味する。@ref{Point}の@code{point-max}も参照のこと。"

#. type: defun
#: original_texis/text.texi:151
#, no-wrap
msgid "bolp"
msgstr "bolp"

#. type: defun
#: original_texis/text.texi:155
msgid "This function returns @code{t} if point is at the beginning of a line.  @xref{Text Lines}.  The beginning of the buffer (or of its accessible portion) always counts as the beginning of a line."
msgstr "この関数はポイントが行の先頭にあれば@code{t}をリターンする。@ref{Text Lines}を参照のこと。バッファー(またはアクセス可能範囲)の先頭は、常に行の先頭とみなされる。"

#. type: defun
#: original_texis/text.texi:157
#, no-wrap
msgid "eolp"
msgstr "eolp"

#. type: defun
#: original_texis/text.texi:161
msgid "This function returns @code{t} if point is at the end of a line.  The end of the buffer (or of its accessible portion) is always considered the end of a line."
msgstr "この関数はポイントが行の終端にあれば@code{t}をリターンする。@ref{Text Lines}を参照のこと。バッファー(またはアクセス可能範囲)の終端は常に行の先頭とみなされる。"

#. type: section
#: original_texis/text.texi:164
#, no-wrap
msgid "Examining Buffer Contents"
msgstr "Examining Buffer Contents"

#. type: cindex
#: original_texis/text.texi:165
#, no-wrap
msgid "buffer portion as string"
msgstr "buffer portion as string"

#. type: Plain text
#: original_texis/text.texi:169
msgid "This section describes functions that allow a Lisp program to convert any portion of the text in the buffer into a string."
msgstr "このセクションではLispプログラムがバッファー内の任意の範囲にあるテキストを文字列に変換するための関数を説明します。"

#. type: defun
#: original_texis/text.texi:170
#, no-wrap
msgid "buffer-substring start end"
msgstr "buffer-substring start end"

#. type: defun
#: original_texis/text.texi:176
msgid "This function returns a string containing a copy of the text of the region defined by positions @var{start} and @var{end} in the current buffer.  If the arguments are not positions in the accessible portion of the buffer, @code{buffer-substring} signals an @code{args-out-of-range} error."
msgstr "この関数はカレントバッファー内の位置@var{start}と@var{end}で定義されるリージョンのテキストのコピーを含む文字列をリターンする。引数がバッファーのアクセス可能範囲内の位置でなければ、@code{buffer-substring}は@code{args-out-of-range}エラーをリターンする。"

#. type: defun
#: original_texis/text.texi:178
msgid "Here's an example which assumes Font-Lock mode is not enabled:"
msgstr "以下の例ではFont-Lockモードが有効でないものとする:"

#. type: group
#: original_texis/text.texi:183
#, no-wrap
msgid ""
"---------- Buffer: foo ----------\n"
"This is the contents of buffer foo\n"
"\n"
msgstr ""
"---------- Buffer: foo ----------\n"
"This is the contents of buffer foo\n"
"\n"

#. type: group
#: original_texis/text.texi:185
#, no-wrap
msgid "---------- Buffer: foo ----------\n"
msgstr "---------- Buffer: foo ----------\n"

#. type: group
#: original_texis/text.texi:190
#, no-wrap
msgid ""
"(buffer-substring 1 10)\n"
"     @result{} \"This is t\"\n"
msgstr ""
"(buffer-substring 1 10)\n"
"     @result{} \"This is t\"\n"

#. type: group
#: original_texis/text.texi:194
#, no-wrap
msgid ""
"(buffer-substring (point-max) 10)\n"
"     @result{} \"he contents of buffer foo\\n\"\n"
msgstr ""
"(buffer-substring (point-max) 10)\n"
"     @result{} \"he contents of buffer foo\\n\"\n"

#. type: defun
#: original_texis/text.texi:201
msgid "If the text being copied has any text properties, these are copied into the string along with the characters they belong to.  @xref{Text Properties}.  However, overlays (@pxref{Overlays}) in the buffer and their properties are ignored, not copied."
msgstr "コピーされるテキストが何らかのテキストプロパティをもっていたら、それらのプロパティが属する文字とともに文字列にコピーされる。しかしバッファー内のオーバーレイ(@ref{Overlays}を参照)、およびそれらのプロパティは無視されるためコピーされない。"

#. type: defun
#: original_texis/text.texi:204
msgid "For example, if Font-Lock mode is enabled, you might get results like these:"
msgstr "たとえばFont-Lockモードが有効なら以下のような結果を得るだろう:"

#. type: group
#: original_texis/text.texi:209
#, no-wrap
msgid ""
"(buffer-substring 1 10)\n"
"     @result{} #(\"This is t\" 0 1 (fontified t) 1 9 (fontified t))\n"
msgstr ""
"(buffer-substring 1 10)\n"
"     @result{} #(\"This is t\" 0 1 (fontified t) 1 9 (fontified t))\n"

#. type: defun
#: original_texis/text.texi:213
#, no-wrap
msgid "buffer-substring-no-properties start end"
msgstr "buffer-substring-no-properties start end"

#. type: defun
#: original_texis/text.texi:216
msgid "This is like @code{buffer-substring}, except that it does not copy text properties, just the characters themselves.  @xref{Text Properties}."
msgstr "これは@code{buffer-substring}と同様だが、テキストプロパティはコピーせずに文字自体だけをコピーする点が異なる。@ref{Text Properties}を参照のこと。"

#. type: defun
#: original_texis/text.texi:218
#, no-wrap
msgid "buffer-string"
msgstr "buffer-string"

#. type: defun
#: original_texis/text.texi:221
msgid "This function returns the contents of the entire accessible portion of the current buffer, as a string."
msgstr "この関数はカレントバッファーのアクセス可能範囲全体のコンテンツを文字列としてリターンする。"

#. type: Plain text
#: original_texis/text.texi:228
msgid "If you need to make sure the resulting string, when copied to a different location, will not change its visual appearance due to reordering of bidirectional text, use the @code{buffer-substring-with-bidi-context} function (@pxref{Bidirectional Display, buffer-substring-with-bidi-context})."
msgstr "異なる場所からのコピー時に双方向テキストの再配置によって結果の文字列の視覚的外見が変更されないように保証する必要があるなら、@code{buffer-substring-with-bidi-context}関数を使用すること(@ref{Bidirectional Display, buffer-substring-with-bidi-context}を参照)。"

#. type: defun
#: original_texis/text.texi:229
#, no-wrap
msgid "filter-buffer-substring start end &optional delete"
msgstr "filter-buffer-substring start end &optional delete"

#. type: defun
#: original_texis/text.texi:233
msgid "This function filters the buffer text between @var{start} and @var{end} using a function specified by the variable @code{filter-buffer-substring-function}, and returns the result."
msgstr "この関数は変数@code{filter-buffer-substring-function}により指定された関数を使用して、@var{start}と@var{end}の間のバッファーテキストをフィルターしてその結果をリターンする。"

#. type: defun
#: original_texis/text.texi:239
msgid "The default filter function consults the obsolete wrapper hook @code{filter-buffer-substring-functions}, and the obsolete variable @code{buffer-substring-filters}.  If both of these are @code{nil}, it returns the unaltered text from the buffer, i.e., what @code{buffer-substring} would return."
msgstr "デフォルトのフィルター関数は時代遅れとなったラッパーフック@code{filter-buffer-substring-functions}、および同様に時代遅れとなった変数@code{buffer-substring-filters}を参照する。これらがいずれも@code{nil}ならバッファーから未変更のテキスト、すなわち@code{buffer-substring}がリターンするであろうテキストをリターンする。"

#. type: defun
#: original_texis/text.texi:243
msgid "If @var{delete} is non-@code{nil}, the function deletes the text between @var{start} and @var{end} after copying it, like @code{delete-and-extract-region}."
msgstr "@var{delete}が非@code{nil}なら、この関数は@code{delete-and-extract-region}と同じように、コピー後に@var{start}と@var{end}の間のテキストを削除する。"

#. type: defun
#: original_texis/text.texi:250
msgid "Lisp code should use this function instead of @code{buffer-substring}, @code{buffer-substring-no-properties}, or @code{delete-and-extract-region} when copying into user-accessible data structures such as the kill-ring, X clipboard, and registers.  Major and minor modes can modify @code{filter-buffer-substring-function} to alter such text as it is copied out of the buffer."
msgstr "Lispコードはkillリング、Xクリップボード、レジスターのようなユーザーがアクセス可能なデータ構造内にコピーする際には@code{buffer-substring}、@code{buffer-substring-no-properties}、@code{delete-and-extract-region}のかわりにこの関数を使用すること。メジャーモードとマイナーモードはバッファー外部にコピーするテキストを変更するために@code{filter-buffer-substring-function}を変更することができる。"

#. type: defvar
#: original_texis/text.texi:252
#, no-wrap
msgid "filter-buffer-substring-function"
msgstr "filter-buffer-substring-function"

#. type: defvar
#: original_texis/text.texi:258
msgid "The value of this variable is a function that @code{filter-buffer-substring} will call to do the actual work.  The function receives three arguments, the same as those of @code{filter-buffer-substring}, which it should treat as per the documentation of that function.  It should return the filtered text (and optionally delete the source text)."
msgstr "この変数の値は実際の処理を行うために@code{filter-buffer-substring}が呼び出す関数。その関数は@code{filter-buffer-substring}と同じように3つの引数を受けとり、それらは@code{filter-buffer-substring}にドキュメントされているように扱うこと。関数はフィルターされたテキストをリターン(およびオプションでソーステキストを削除)すること。"

#. type: Plain text
#: original_texis/text.texi:263
msgid "@code{filter-buffer-substring-function}, but are still supported for backward compatibility."
msgstr "以下の2つの変数は@code{filter-buffer-substring-function}により時代遅れになりましたが、後方互換のために依然としてサポートされます。"

#. type: defvar
#: original_texis/text.texi:264
#, no-wrap
msgid "filter-buffer-substring-functions"
msgstr "filter-buffer-substring-functions"

#. type: defvar
#: original_texis/text.texi:271
msgid "This obsolete variable is a wrapper hook, whose members should be functions that accept four arguments: @var{fun}, @var{start}, @var{end}, and @var{delete}.  @var{fun} is a function that takes three arguments (@var{start}, @var{end}, and @var{delete}), and returns a string.  In both cases, the @var{start}, @var{end}, and @var{delete} arguments are the same as those of @code{filter-buffer-substring}."
msgstr "これは時代遅れとなったラッパーフックであり、このフックのメンバーは@var{fun}、@var{start}、@var{end}、@var{delete}の4つの引数を受け取る関数であること。@var{fun}は3つの引数(@var{start}、@var{end}、@var{delete})を受け取り、文字列をリターンする関数。いずれも引数@var{start}、@var{end}、@var{delete}は@code{filter-buffer-substring}のときと同様の意味をもつ。"

#. type: defvar
#: original_texis/text.texi:281
msgid "The first hook function is passed a @var{fun} that is equivalent to the default operation of @code{filter-buffer-substring}, i.e., it returns the buffer-substring between @var{start} and @var{end} (processed by any @code{buffer-substring-filters}) and optionally deletes the original text from the buffer.  In most cases, the hook function will call @var{fun} once, and then do its own processing of the result.  The next hook function receives a @var{fun} equivalent to this, and so on.  The actual return value is the result of all the hook functions acting in sequence."
msgstr "1つ目のフック関数は@code{filter-buffer-substring}のデフォルトの処理と同じく@var{start}と@var{end}の間の(任意の@code{buffer-substring-filters}により処理された)バッファー部分文字列をリターン、オプションでバッファーから元テキストを削除する関数であり、それが@var{fun}に渡される。ほとんどの場合にはフック関数は@var{fun}を1回だけ呼び出してから、その結果にたいして自身の処理を行う。次のフック関数はこれと等しい@var{fun}を受け取って、それが順次繰り返されていく。実際のリターン値はすべてのフック関数が順次処理した結果。"

#. type: defvar
#: original_texis/text.texi:283
#, no-wrap
msgid "buffer-substring-filters"
msgstr "buffer-substring-filters"

#. type: defvar
#: original_texis/text.texi:290
msgid "The value of this obsolete variable should be a list of functions that accept a single string argument and return another string.  The default @code{filter-buffer-substring} function passes the buffer substring to the first function in this list, and the return value of each function is passed to the next function.  The return value of the last function is passed to @code{filter-buffer-substring-functions}."
msgstr "時代遅れとなったこの変数の値は、文字列を唯一の引数ちして別の文字列をリターンする関数のリストであること。デフォルトの@code{filter-buffer-substring}関数は、バッファー部分文字列をこのリストの1つ目の関数に渡して、そのリターン値を次の関数に渡して、これがそれぞれの関数にたいして順次繰り返される。最後の関数のリターン値は@code{filter-buffer-substring-functions}に渡される。"

#. type: defun
#: original_texis/text.texi:292
#, no-wrap
msgid "current-word &optional strict really-word"
msgstr "current-word &optional strict really-word"

#. type: defun
#: original_texis/text.texi:295
msgid "This function returns the symbol (or word) at or near point, as a string.  The return value includes no text properties."
msgstr "この関数はポイント位置またはその付近のシンボル(または単語)を文字列としてリターンする。リターン値にテキストプロパティは含まれない。"

#. type: defun
#: original_texis/text.texi:299
msgid "If the optional argument @var{really-word} is non-@code{nil}, it finds a word; otherwise, it finds a symbol (which includes both word characters and symbol constituent characters)."
msgstr "オプション引数@var{really-word}が非@code{nil}なら単語、それ以外はシンボル(単語文字とシンボル構成文字の両方を含む)を探す。"

#. type: defun
#: original_texis/text.texi:304
msgid "If the optional argument @var{strict} is non-@code{nil}, then point must be in or next to the symbol or word---if no symbol or word is there, the function returns @code{nil}.  Otherwise, a nearby symbol or word on the same line is acceptable."
msgstr "オプション引数@var{strict}が非@code{nil}のならポイントは単語(またはシンボル)の内部にあるか隣接しなければならない。そこに単語(またはシンボル)がなければ、この関数は@code{nil}をリターンする。@var{strict}が@code{nil}ならポイントと同一行にある近接する単語(またはシンボル)を許容する。"

#. type: defun
#: original_texis/text.texi:306
#, no-wrap
msgid "thing-at-point thing &optional no-properties"
msgstr "thing-at-point thing &optional no-properties"

#. type: defun
#: original_texis/text.texi:308
msgid "Return the @var{thing} around or next to point, as a string."
msgstr "ポイントに隣接または周辺にある@var{thing}を文字列としてリターンする。"

#. type: defun
#: original_texis/text.texi:313
msgid "The argument @var{thing} is a symbol which specifies a kind of syntactic entity.  Possibilities include @code{symbol}, @code{list}, @code{sexp}, @code{defun}, @code{filename}, @code{url}, @code{word}, @code{sentence}, @code{whitespace}, @code{line}, @code{page}, and others."
msgstr "引数@var{thing}は構文エンティティの種別を指定するシンボルである。可能なシンボルとしては@code{symbol}、@code{list}、@code{sexp}、@code{defun}、@code{filename}、@code{url}、@code{word}、@code{sentence}、@code{whitespace}、@code{line}、@code{page}、および他が含まれる。"

#. type: defun
#: original_texis/text.texi:316
msgid "When the optional argument @var{no-properties} is non-@code{nil}, this function strips text properties from the return value."
msgstr "オプション引数@var{no-properties}は非@code{nil}なら、この関数はリターン値からテキストプロパティを取り除く。"

#. type: example
#: original_texis/text.texi:322
#, no-wrap
msgid ""
"---------- Buffer: foo ----------\n"
"Gentlemen may cry ``Pea@point{}ce! Peace!,''\n"
"but there is no peace.\n"
"---------- Buffer: foo ----------\n"
"\n"
msgstr ""
"---------- Buffer: foo ----------\n"
"Gentlemen may cry ``Pea@point{}ce! Peace!,''\n"
"but there is no peace.\n"
"---------- Buffer: foo ----------\n"
"\n"

#. type: example
#: original_texis/text.texi:329
#, no-wrap
msgid ""
"(thing-at-point 'word)\n"
"     @result{} \"Peace\"\n"
"(thing-at-point 'line)\n"
"     @result{} \"Gentlemen may cry ``Peace! Peace!,''\\n\"\n"
"(thing-at-point 'whitespace)\n"
"     @result{} nil\n"
msgstr ""
"(thing-at-point 'word)\n"
"     @result{} \"Peace\"\n"
"(thing-at-point 'line)\n"
"     @result{} \"Gentlemen may cry ``Peace! Peace!,''\\n\"\n"
"(thing-at-point 'whitespace)\n"
"     @result{} nil\n"

#. type: cindex
#: original_texis/text.texi:334
#, no-wrap
msgid "comparing buffer text"
msgstr "comparing buffer text"

#. type: Plain text
#: original_texis/text.texi:338
msgid "This function lets you compare portions of the text in a buffer, without copying them into strings first."
msgstr "以下の関数により最初にバッファー内のテキストを文字列内にコピーすることなく、バッファー内のテキスト断片を比較することが可能になります。"

#. type: defun
#: original_texis/text.texi:339
#, no-wrap
msgid "compare-buffer-substrings buffer1 start1 end1 buffer2 start2 end2"
msgstr "compare-buffer-substrings buffer1 start1 end1 buffer2 start2 end2"

#. type: defun
#: original_texis/text.texi:346
msgid "This function lets you compare two substrings of the same buffer or two different buffers.  The first three arguments specify one substring, giving a buffer (or a buffer name) and two positions within the buffer.  The last three arguments specify the other substring in the same way.  You can use @code{nil} for @var{buffer1}, @var{buffer2}, or both to stand for the current buffer."
msgstr "この関数により1つのバッファー、または2つの異なるバッファーの2つの部分文字列(substrings)を比較できる。最初の3つの引数はバッファーとそのバッファー内の2つの位置を与えることにより、1つの部分文字列を指定する。最後の3つの引数は、同様の方法によりもう一方の部分文字列を指定する。@var{buffer1}と@var{buffer2}のいずれか、または両方にたいしてカレントバッファーを意味する@code{nil}を使用できる。"

#. type: defun
#: original_texis/text.texi:351
msgid "The value is negative if the first substring is less, positive if the first is greater, and zero if they are equal.  The absolute value of the result is one plus the index of the first differing characters within the substrings."
msgstr "1つ目の部分文字列が2つ目の部分文字列より小なら負、大なら正、等しければ値は0となる。結果の絶対値は部分文字列内で最初に異なる文字のインデックスに1を和した値。"

#. type: defun
#: original_texis/text.texi:355
msgid "This function ignores case when comparing characters if @code{case-fold-search} is non-@code{nil}.  It always ignores text properties."
msgstr "@code{case-fold-search}が非@code{nil}なら、この関数はcase(大文字小文字)の違いを無視する。テキストプロパティは常に無視される。"

#. type: defun
#: original_texis/text.texi:360
msgid "Suppose you have the text @w{@samp{foobarbar haha!rara!}} in the current buffer; then in this example the two substrings are @samp{rbar } and @samp{rara!}.  The value is 2 because the first substring is greater at the second character."
msgstr "カレントバッファー内にテキスト@w{@samp{foobarbar haha!rara!}}がある。そしてこの例では2つの部分文字列が@samp{rbar }と@samp{rara!}だとする。1つ目の文字列の2つ目の文字が大きいので値は2となる。"

#. type: example
#: original_texis/text.texi:364
#, no-wrap
msgid ""
"(compare-buffer-substrings nil 6 11 nil 16 21)\n"
"     @result{} 2\n"
msgstr ""
"(compare-buffer-substrings nil 6 11 nil 16 21)\n"
"     @result{} 2\n"

#. type: section
#: original_texis/text.texi:368
#, no-wrap
msgid "Inserting Text"
msgstr "Inserting Text"

#. type: cindex
#: original_texis/text.texi:369
#, no-wrap
msgid "insertion of text"
msgstr "insertion of text"

#. type: cindex
#: original_texis/text.texi:370
#, no-wrap
msgid "text insertion"
msgstr "text insertion"

#. type: cindex
#: original_texis/text.texi:372
#, no-wrap
msgid "insertion before point"
msgstr "insertion before point"

#. type: cindex
#: original_texis/text.texi:373
#, no-wrap
msgid "before point, insertion"
msgstr "before point, insertion"

#. type: Plain text
#: original_texis/text.texi:379
msgid "@dfn{Insertion} means adding new text to a buffer.  The inserted text goes at point---between the character before point and the character after point.  Some insertion functions leave point before the inserted text, while other functions leave it after.  We call the former insertion @dfn{after point} and the latter insertion @dfn{before point}."
msgstr "@dfn{挿入(insertion)}とはバッファーへの新たなテキストの追加を意味します。テキストはポイント位置、すなわちポイント前の文字とポイント後の文字の間に追加されます。挿入関数は挿入されたテキストの後にポイントを残しますが、前にポイントを残す関数もいくつかあります。前者の挿入を@dfn{ポイント後挿入(after point)}、後者を@dfn{ポイント前挿入(before point)}と呼びます。"

#. type: Plain text
#: original_texis/text.texi:387
msgid "Insertion moves markers located at positions after the insertion point, so that they stay with the surrounding text (@pxref{Markers}).  When a marker points at the place of insertion, insertion may or may not relocate the marker, depending on the marker's insertion type (@pxref{Marker Insertion Types}).  Certain special functions such as @code{insert-before-markers} relocate all such markers to point after the inserted text, regardless of the markers' insertion type."
msgstr "挿入により挿入位置の後にあったマーカーは、テキストを取り囲むように移動されます(@ref{Markers}を参照)。マーカーが挿入箇所をさしている際には、挿入によるマーカーの再配置の有無はそのマーカーの挿入タイプに依存します(@ref{Marker Insertion Types}を参照)。@code{insert-before-markers}のような特定のスペシャル関数は、マーカーの挿入タイプとは関係なく挿入されたテキストの後にそのようなすべてのマーカーを再配置します。"

#. type: Plain text
#: original_texis/text.texi:391
msgid "Insertion functions signal an error if the current buffer is read-only (@pxref{Read Only Buffers}) or if they insert within read-only text (@pxref{Special Properties})."
msgstr "カレントバッファーが読み取り専用(@ref{Read Only Buffers}を参照)、または読み取り専用テキスト(@ref{Special Properties}を参照)を挿入しようとすると、挿入関数はエラーをシグナルします。"

#. type: Plain text
#: original_texis/text.texi:397
msgid "These functions copy text characters from strings and buffers along with their properties.  The inserted characters have exactly the same properties as the characters they were copied from.  By contrast, characters specified as separate arguments, not part of a string or buffer, inherit their text properties from the neighboring text."
msgstr "以下の関数は文字列やバッファーからプロパティとともにテキスト文字をコピーします。挿入される文字はコピー元の文字と完全に同一のプロパティをもちます。それとは対照的に文字列やバッファーの一部ではない個別の引数として指定された文字は、隣接するテキストからテキストプロパティを継承します。"

#. type: Plain text
#: original_texis/text.texi:404
msgid "The insertion functions convert text from unibyte to multibyte in order to insert in a multibyte buffer, and vice versa---if the text comes from a string or from a buffer.  However, they do not convert unibyte character codes 128 through 255 to multibyte characters, not even if the current buffer is a multibyte buffer.  @xref{Converting Representations}."
msgstr "テキストが文字列かバッファー由来なら、マルチバイトバッファーに挿入するために挿入関数はユニバイトからマルチバイトへの変換、およびその逆も行います。しかしたとえカレントバッファーがマルチバイトバッファーであったとしても、コード128から255までのユニバイトはマルチバイトに変換しません。@ref{Converting Representations}を参照してください。"

#. type: defun
#: original_texis/text.texi:405
#, no-wrap
msgid "insert &rest args"
msgstr "insert &rest args"

#. type: defun
#: original_texis/text.texi:410
msgid "This function inserts the strings and/or characters @var{args} into the current buffer, at point, moving point forward.  In other words, it inserts the text before point.  An error is signaled unless all @var{args} are either strings or characters.  The value is @code{nil}."
msgstr "この関数は文字列および/または1つ以上の文字@var{args}をカレントバッファーのポイント位置に挿入して、ポイントを前方に移動する。言い換えるとポイントの前にテキストを挿入する。すべての@var{args}が文字列が文字列と文字のいずれでもなければエラーをシグナルする。値は@code{nil}。"

#. type: defun
#: original_texis/text.texi:412
#, no-wrap
msgid "insert-before-markers &rest args"
msgstr "insert-before-markers &rest args"

#. type: defun
#: original_texis/text.texi:417
msgid "This function inserts the strings and/or characters @var{args} into the current buffer, at point, moving point forward.  An error is signaled unless all @var{args} are either strings or characters.  The value is @code{nil}."
msgstr "この関数は文字列および/または1つ以上の文字@var{args}をカレントバッファーのポイント位置に挿入して、ポイントを前方に移動する。すべての@var{args}が文字列が文字列と文字のいずれでもなければエラーをシグナルする。値は@code{nil}。"

#. type: defun
#: original_texis/text.texi:424
msgid "This function is unlike the other insertion functions in that it relocates markers initially pointing at the insertion point, to point after the inserted text.  If an overlay begins at the insertion point, the inserted text falls outside the overlay; if a nonempty overlay ends at the insertion point, the inserted text falls inside that overlay."
msgstr "この関数は他の挿入関数と異なり、挿入されたテキストの後を指すように、まずマーカーが挿入位置を指すよう再配置する。挿入位置からオーバーレイが開始される場合には、挿入されたテキストはそのオーバーレイの外側に出される。空でないオーバーレイが挿入位置で終わる場合には、挿入されたテキストはそのオーバーレイの内側に入れられる。"

#. type: deffn
#: original_texis/text.texi:426
#, no-wrap
msgid "Command insert-char character &optional count inherit"
msgstr "Command insert-char character &optional count inherit"

#. type: deffn
#: original_texis/text.texi:430
msgid "This command inserts @var{count} instances of @var{character} into the current buffer before point.  The argument @var{count} must be an integer, and @var{character} must be a character."
msgstr "このコマンドはカレントバッファーのポイントの前に、@var{character}のインスタンスを@var{count}個挿入する。引数@var{count}は整数、@var{character}は文字でなければならない。"

#. type: deffn
#: original_texis/text.texi:434
msgid "If called interactively, this command prompts for @var{character} using its Unicode name or its code point.  @xref{Inserting Text,,, emacs, The GNU Emacs Manual}."
msgstr "インタラクティブに呼び出された際には、このコマンドは@var{character}にたいしてコードポイントかUnicode名による入力を求める。@ref{Inserting Text,,, emacs, The GNU Emacs Manual}を参照のこと。"

#. type: deffn
#: original_texis/text.texi:438
msgid "This function does not convert unibyte character codes 128 through 255 to multibyte characters, not even if the current buffer is a multibyte buffer.  @xref{Converting Representations}."
msgstr "この関数はたとえカレントバッファーがマルチバイトバッファーであっても、コード128から255のユニバイト文字をマルチバイト文字に変換しない。@ref{Converting Representations}を参照のこと。"

#. type: deffn
#: original_texis/text.texi:442
msgid "If @var{inherit} is non-@code{nil}, the inserted characters inherit sticky text properties from the two characters before and after the insertion point.  @xref{Sticky Properties}."
msgstr "@var{inherit}が非@code{nil}なら、挿入された文字は挿入位置前後の2文字からステッキーテキストプロパティ(sticky text properties)を継承する。@ref{Sticky Properties}を参照のこと。"

#. type: defun
#: original_texis/text.texi:444
#, no-wrap
msgid "insert-buffer-substring from-buffer-or-name &optional start end"
msgstr "insert-buffer-substring from-buffer-or-name &optional start end"

#. type: defun
#: original_texis/text.texi:450
msgid "This function inserts a portion of buffer @var{from-buffer-or-name} into the current buffer before point.  The text inserted is the region between @var{start} (inclusive) and @var{end} (exclusive).  (These arguments default to the beginning and end of the accessible portion of that buffer.)  This function returns @code{nil}."
msgstr "この関数はカレントバッファーのポイント前に、バッファー@var{from-buffer-or-name}の一部を挿入する。挿入されるテキストは@var{start} (を含む)から@var{end} (を含まない)の間のリージョン(これらの引数のデフォルトは、そのバッファーのアクセス可能範囲の先頭と終端)。この関数は@code{nil}をリターンする。"

#. type: defun
#: original_texis/text.texi:453
msgid "In this example, the form is executed with buffer @samp{bar} as the current buffer.  We assume that buffer @samp{bar} is initially empty."
msgstr "以下の例ではバッファー@samp{bar}をカレントバッファーとしてフォームを実行する。バッファー@samp{bar}は最初は空であるものとする。"

#. type: group
#: original_texis/text.texi:459
#, no-wrap
msgid ""
"---------- Buffer: foo ----------\n"
"We hold these truths to be self-evident, that all\n"
"---------- Buffer: foo ----------\n"
msgstr ""
"---------- Buffer: foo ----------\n"
"We hold these truths to be self-evident, that all\n"
"---------- Buffer: foo ----------\n"

#. type: group
#: original_texis/text.texi:464
#, no-wrap
msgid ""
"(insert-buffer-substring \"foo\" 1 20)\n"
"     @result{} nil\n"
"\n"
msgstr ""
"(insert-buffer-substring \"foo\" 1 20)\n"
"     @result{} nil\n"
"\n"

#. type: group
#: original_texis/text.texi:468
#, no-wrap
msgid ""
"---------- Buffer: bar ----------\n"
"We hold these truth@point{}\n"
"---------- Buffer: bar ----------\n"
msgstr ""
"---------- Buffer: bar ----------\n"
"We hold these truth@point{}\n"
"---------- Buffer: bar ----------\n"

#. type: defun
#: original_texis/text.texi:472
#, no-wrap
msgid "insert-buffer-substring-no-properties from-buffer-or-name &optional start end"
msgstr "insert-buffer-substring-no-properties from-buffer-or-name &optional start end"

#. type: defun
#: original_texis/text.texi:475
msgid "This is like @code{insert-buffer-substring} except that it does not copy any text properties."
msgstr "これは@code{insert-buffer-substring}と似ているが、テキストプロパティをコピーしない点が異なる。"

#. type: Plain text
#: original_texis/text.texi:481
msgid "@xref{Sticky Properties}, for other insertion functions that inherit text properties from the nearby text in addition to inserting it.  Whitespace inserted by indentation functions also inherits text properties."
msgstr "テキスト挿入に加えて、隣接するテキストからテキストプロパティを継承する他の関数については@ref{Sticky Properties}を参照のこと。インデント関数により挿入された空白文字もテキストプロパティを継承する。"

#. type: section
#: original_texis/text.texi:483
#, no-wrap
msgid "User-Level Insertion Commands"
msgstr "User-Level Insertion Commands"

#. type: Plain text
#: original_texis/text.texi:488
msgid "This section describes higher-level commands for inserting text, commands intended primarily for the user but useful also in Lisp programs."
msgstr "このセクションではテキスト挿入のための高レベルコマンド、ユーザーによる使用を意図しているがLispプログラムでも有用なコマンドについて説明します。"

#. type: deffn
#: original_texis/text.texi:489
#, no-wrap
msgid "Command insert-buffer from-buffer-or-name"
msgstr "Command insert-buffer from-buffer-or-name"

#. type: deffn
#: original_texis/text.texi:494
msgid "This command inserts the entire accessible contents of @var{from-buffer-or-name} (which must exist) into the current buffer after point.  It leaves the mark after the inserted text.  The value is @code{nil}."
msgstr "このコマンドは@var{from-buffer-or-name} (存在しなければならない)のアクセス可能範囲全体をカレントバッファーのポイントの後に挿入する。マークは挿入されたテキストの後に残される。値は@code{nil}。"

#. type: deffn
#: original_texis/text.texi:496
#, no-wrap
msgid "Command self-insert-command count"
msgstr "Command self-insert-command count"

#. type: cindex
#: original_texis/text.texi:497
#, no-wrap
msgid "character insertion"
msgstr "character insertion"

#. type: cindex
#: original_texis/text.texi:498
#, no-wrap
msgid "self-insertion"
msgstr "self-insertion"

#. type: deffn
#: original_texis/text.texi:504
msgid "This command inserts the last character typed; it does so @var{count} times, before point, and returns @code{nil}.  Most printing characters are bound to this command.  In routine use, @code{self-insert-command} is the most frequently called function in Emacs, but programs rarely use it except to install it on a keymap."
msgstr "このコマンドはタイプされた最後の文字を挿入する。これをポイント前で@var{count}回繰り返して@code{nil}をリターンする。ほとんどのプリント文字はこのコマンドにバインドされる。通常の使用では@code{self-insert-command}はEmacsでもっとも頻繁に呼び出される関数だが、Lispプログラムではそれをキーマップにインストールする場合を除いて使用されるのは稀。"

#. type: deffn
#: original_texis/text.texi:506
msgid "In an interactive call, @var{count} is the numeric prefix argument."
msgstr "インタラクティブな呼び出しでは@var{count}は数プレフィクス引数。"

#. type: deffn
#: original_texis/text.texi:510
msgid "Self-insertion translates the input character through @code{translation-table-for-input}.  @xref{Translation of Characters}."
msgstr "自己挿入では入力文字は@code{translation-table-for-input}を通じて変換される。@ref{Translation of Characters}を参照のこと。"

#. type: deffn
#: original_texis/text.texi:514
msgid "This command calls @code{auto-fill-function} whenever that is non-@code{nil} and the character inserted is in the table @code{auto-fill-chars} (@pxref{Auto Filling})."
msgstr "これは、入力文字がテーブル@code{auto-fill-chars}内にあり、@code{auto-fill-function}が非@code{nil}なら常にそれを呼び出す(@ref{Auto Filling}を参照)。"

#. type: deffn
#: original_texis/text.texi:521
msgid "This command performs abbrev expansion if Abbrev mode is enabled and the inserted character does not have word-constituent syntax.  (@xref{Abbrevs}, and @ref{Syntax Class Table}.)  It is also responsible for calling @code{blink-paren-function} when the inserted character has close parenthesis syntax (@pxref{Blinking})."
msgstr "このコマンドはAbbrevモードが有効で、かつ入力文字が単語構成構文をもたなければabbrev展開を行う(@ref{Abbrevs}と@ref{Syntax Class Table}を参照)。さらに入力文字が閉カッコ構文(close parenthesis syntax)をもつ場合には@code{blink-paren-function}を呼び出す責任もある(@ref{Blinking}を参照)。"

#. type: vindex
#: original_texis/text.texi:522
#, no-wrap
msgid "post-self-insert-hook"
msgstr "post-self-insert-hook"

#. type: deffn
#: original_texis/text.texi:526
msgid "The final thing this command does is to run the hook @code{post-self-insert-hook}.  You could use this to automatically reindent text as it is typed, for example."
msgstr "このコマンドは最後にフック@code{post-self-insert-hook}を実行する。たとえばタイプされたテキストにしたがい自動インデントするためにこれを使用できる。"

#. type: deffn
#: original_texis/text.texi:530
msgid "Do not try substituting your own definition of @code{self-insert-command} for the standard one.  The editor command loop handles this function specially."
msgstr "@code{self-insert-command}の標準的な定義にたいして、独自の定義による置き換えを試みてはならない。エディターコマンドループはこのコマンドを特別に扱うからだ。"

#. type: deffn
#: original_texis/text.texi:532
#, no-wrap
msgid "Command newline &optional number-of-newlines"
msgstr "Command newline &optional number-of-newlines"

#. type: deffn
#: original_texis/text.texi:536
msgid "This command inserts newlines into the current buffer before point.  If @var{number-of-newlines} is supplied, that many newline characters are inserted."
msgstr "このコマンドはカレントバッファーのポイントの前に改行を挿入する。@var{number-of-newlines}が与えられたら、その個数の改行文字が挿入される。"

#. type: cindex
#: original_texis/text.texi:537
#, no-wrap
msgid "newline and Auto Fill mode"
msgstr "newline and Auto Fill mode"

#. type: deffn
#: original_texis/text.texi:545
msgid "This function calls @code{auto-fill-function} if the current column number is greater than the value of @code{fill-column} and @var{number-of-newlines} is @code{nil}.  Typically what @code{auto-fill-function} does is insert a newline; thus, the overall result in this case is to insert two newlines at different places: one at point, and another earlier in the line.  @code{newline} does not auto-fill if @var{number-of-newlines} is non-@code{nil}."
msgstr "この関数はカレント列数が@code{fill-column}より大、かつ@var{number-of-newlines}が@code{nil}なら@code{auto-fill-function}を呼び出す。@code{auto-fill-function}が通常行うのは改行の挿入であり、最終的な結果としてはポイント位置と、その行のより前方の位置という2つの異なる箇所に改行を挿入する。@var{number-of-newlines}が非@code{nil}なら@code{newline}はauto-fillを行わない。"

#. type: deffn
#: original_texis/text.texi:548
msgid "This command indents to the left margin if that is not zero.  @xref{Margins}."
msgstr "このコマンドは左マージンが0でなければ、左マージンにインデントする。@ref{Margins}を参照のこと。"

#. type: deffn
#: original_texis/text.texi:551
msgid "The value returned is @code{nil}.  In an interactive call, @var{count} is the numeric prefix argument."
msgstr "リターン値は@code{nil}。インタラクティブな呼び出しでは@var{count}は数プレフィクス引数。"

#. type: defvar
#: original_texis/text.texi:553
#, no-wrap
msgid "overwrite-mode"
msgstr "overwrite-mode"

#. type: defvar
#: original_texis/text.texi:560
msgid "This variable controls whether overwrite mode is in effect.  The value should be @code{overwrite-mode-textual}, @code{overwrite-mode-binary}, or @code{nil}.  @code{overwrite-mode-textual} specifies textual overwrite mode (treats newlines and tabs specially), and @code{overwrite-mode-binary} specifies binary overwrite mode (treats newlines and tabs like any other characters)."
msgstr "この変数はoverwriteモードが効力をもつかどうかを制御する。値は@code{overwrite-mode-textual}、@code{overwrite-mode-binary}、または@code{nil}。@code{overwrite-mode-textual}はテキスト的なoverwriteモード(改行とタブを特別に扱う)、@code{overwrite-mode-binary}はバイナリーoverwriteモード(改行とタブを普通の文字と同様に扱う)を指定する。"

#. type: section
#: original_texis/text.texi:563
#, no-wrap
msgid "Deleting Text"
msgstr "Deleting Text"

#. type: cindex
#: original_texis/text.texi:564
#, no-wrap
msgid "text deletion"
msgstr "text deletion"

#. type: cindex
#: original_texis/text.texi:566
#, no-wrap
msgid "deleting text vs killing"
msgstr "deleting text vs killing"

#. type: Plain text
#: original_texis/text.texi:572
msgid "Deletion means removing part of the text in a buffer, without saving it in the kill ring (@pxref{The Kill Ring}).  Deleted text can't be yanked, but can be reinserted using the undo mechanism (@pxref{Undo}).  Some deletion functions do save text in the kill ring in some special cases."
msgstr "削除とはバッファー内のテキストの一部をkillリングに保存せずに取り除くことを意味します(@ref{The Kill Ring}を参照)。削除されたテキストをyankすることはできませんが、undoメカニズム(@ref{Undo}を参照)を使用すれば再挿入が可能です。特別なケースにおいてはkillリングにテキストの保存を行う削除関数がいくつかあります。"

#. type: Plain text
#: original_texis/text.texi:574
msgid "All of the deletion functions operate on the current buffer."
msgstr "削除関数はすべてカレントバッファーにたいして処理を行います。"

#. type: deffn
#: original_texis/text.texi:575
#, no-wrap
msgid "Command erase-buffer"
msgstr "Command erase-buffer"

#. type: deffn
#: original_texis/text.texi:582
msgid "This function deletes the entire text of the current buffer (@emph{not} just the accessible portion), leaving it empty.  If the buffer is read-only, it signals a @code{buffer-read-only} error; if some of the text in it is read-only, it signals a @code{text-read-only} error.  Otherwise, it deletes the text without asking for any confirmation.  It returns @code{nil}."
msgstr "この関数はカレントバッファーのテキスト全体(アクセス可能範囲だけでは@emph{ない})を削除してバッファーが読み取り専用なら@code{buffer-read-only}、バッファー内の一部テキストが読み取り専用なら@code{text-read-only}をシグナルする。それ以外では確認なしでテキストを削除する。リターン値は@code{nil}。"

#. type: deffn
#: original_texis/text.texi:588
msgid "Normally, deleting a large amount of text from a buffer inhibits further auto-saving of that buffer because it has shrunk.  However, @code{erase-buffer} does not do this, the idea being that the future text is not really related to the former text, and its size should not be compared with that of the former text."
msgstr "バッファーからの大量テキストの削除では、バッファーが大幅に縮小されたという理由により、通常はさらなる自動保存が抑制される。しかし@code{erase-buffer}は将来のテキストが以前のテキストと関連があるのは稀であり、以前のテキストのサイズと比較されるべきではないというアイデアにもとづいてこれを行わない。"

#. type: deffn
#: original_texis/text.texi:590
#, no-wrap
msgid "Command delete-region start end"
msgstr "Command delete-region start end"

#. type: deffn
#: original_texis/text.texi:595
msgid "This command deletes the text between positions @var{start} and @var{end} in the current buffer, and returns @code{nil}.  If point was inside the deleted region, its value afterward is @var{start}.  Otherwise, point relocates with the surrounding text, as markers do."
msgstr "このコマンドはカレントバッファー内の位置@var{start}から@var{end}までの間のテキストを削除して@code{nil}をリターンする。削除されるリージョン内にポイントがあれば、リージョン削除後のポイントの値は@var{start}。それ以外の場合は、マーカーが行うようにポイントはテキストを取り囲むように再配置される。"

#. type: defun
#: original_texis/text.texi:597
#, no-wrap
msgid "delete-and-extract-region start end"
msgstr "delete-and-extract-region start end"

#. type: defun
#: original_texis/text.texi:601
msgid "This function deletes the text between positions @var{start} and @var{end} in the current buffer, and returns a string containing the text just deleted."
msgstr "この関数はカレントバッファー内の位置@var{start}から@var{end}までの間のテキストを削除して、削除されたテキストを含む文字列をリターンする。"

#. type: defun
#: original_texis/text.texi:605
msgid "If point was inside the deleted region, its value afterward is @var{start}.  Otherwise, point relocates with the surrounding text, as markers do."
msgstr "削除されるリージョン内にポイントがあれば、リージョン削除後のポイントの値は@var{start}。それ以外ならマーカーが行うようにポイントはテキストを取り囲むように再配置される。"

#. type: deffn
#: original_texis/text.texi:607
#, no-wrap
msgid "Command delete-char count &optional killp"
msgstr "Command delete-char count &optional killp"

#. type: deffn
#: original_texis/text.texi:611
msgid "This command deletes @var{count} characters directly after point, or before point if @var{count} is negative.  If @var{killp} is non-@code{nil}, then it saves the deleted characters in the kill ring."
msgstr "このコマンドはポイント直後の@var{count}文字、@var{count}が負なら直前の@var{count}文字を削除する。@var{killp}が非@code{nil}なら削除した文字をkillリングに保存する。"

#. type: deffn
#: original_texis/text.texi:617 original_texis/text.texi:632
#: original_texis/text.texi:654
msgid "In an interactive call, @var{count} is the numeric prefix argument, and @var{killp} is the unprocessed prefix argument.  Therefore, if a prefix argument is supplied, the text is saved in the kill ring.  If no prefix argument is supplied, then one character is deleted, but not saved in the kill ring."
msgstr "インタラクティブな呼び出しでは、@var{count}は数プレフィクス引数、@var{killp}は未処理プレフィクス引数(unprocessed prefix argument)。すなわちプレフィクス引数が与えられたらそのテキストはkillリングに保存され、与えられなければ1文字が削除されて、それはkillリングに保存されない。"

#. type: deffn
#: original_texis/text.texi:619 original_texis/text.texi:634
#: original_texis/text.texi:656
msgid "The value returned is always @code{nil}."
msgstr "リターン値は常に@code{nil}。"

#. type: deffn
#: original_texis/text.texi:621
#, no-wrap
msgid "Command delete-backward-char count &optional killp"
msgstr "Command delete-backward-char count &optional killp"

#. type: cindex
#: original_texis/text.texi:622
#, no-wrap
msgid "deleting previous char"
msgstr "deleting previous char"

#. type: deffn
#: original_texis/text.texi:626
msgid "This command deletes @var{count} characters directly before point, or after point if @var{count} is negative.  If @var{killp} is non-@code{nil}, then it saves the deleted characters in the kill ring."
msgstr "このコマンドはポイント直前の@var{count}文字、@var{count}が負なら直後の@var{count}文字を削除する。@var{killp}が非@code{nil}なら、削除した文字をkillリングに保存する。"

#. type: deffn
#: original_texis/text.texi:636
#, no-wrap
msgid "Command backward-delete-char-untabify count &optional killp"
msgstr "Command backward-delete-char-untabify count &optional killp"

#. type: cindex
#: original_texis/text.texi:637
#, no-wrap
msgid "tab deletion"
msgstr "tab deletion"

#. type: deffn
#: original_texis/text.texi:644
msgid "This command deletes @var{count} characters backward, changing tabs into spaces.  When the next character to be deleted is a tab, it is first replaced with the proper number of spaces to preserve alignment and then one of those spaces is deleted instead of the tab.  If @var{killp} is non-@code{nil}, then the command saves the deleted characters in the kill ring."
msgstr "このコマンドはタブをスペースに変換しながら、後方に@var{count}文字を削除する。次に削除する文字がタブなら、まず適正な位置を保つような数のスペースに変換してから、それらのうちのスペース1つをタブのかわりに削除する。@var{killp}が非@code{nil}なら、このコマンドは削除した文字をkillリングに保存する。"

#. type: deffn
#: original_texis/text.texi:648
msgid "Conversion of tabs to spaces happens only if @var{count} is positive.  If it is negative, exactly @minus{}@var{count} characters after point are deleted."
msgstr "タブからスペースへの変換は@var{count}が正の場合のみ発生する。負の場合はポイント後の正確に@minus{}@var{count}文字が削除される。"

#. type: defopt
#: original_texis/text.texi:658
#, no-wrap
msgid "backward-delete-char-untabify-method"
msgstr "backward-delete-char-untabify-method"

#. type: defopt
#: original_texis/text.texi:666
msgid "This option specifies how @code{backward-delete-char-untabify} should deal with whitespace.  Possible values include @code{untabify}, the default, meaning convert a tab to many spaces and delete one; @code{hungry}, meaning delete all tabs and spaces before point with one command; @code{all} meaning delete all tabs, spaces and newlines before point, and @code{nil}, meaning do nothing special for whitespace characters."
msgstr "このオプションは@code{backward-delete-char-untabify}が空白文字を扱う方法を指定する。可能な値には@code{untabify} (タブを個数分のスペースに変換してスペースを1つ削除。これがデフォルト)、@code{hungry} (1コマンドでポイント前のタブとスペースすべてを削除する)、@code{all} (ポイント前のタブとスペース、および改行すべてを削除する)、@code{nil} (空白文字にたいして特に何もしない)。"

#. type: section
#: original_texis/text.texi:669
#, no-wrap
msgid "User-Level Deletion Commands"
msgstr "User-Level Deletion Commands"

#. type: Plain text
#: original_texis/text.texi:674
msgid "This section describes higher-level commands for deleting text, commands intended primarily for the user but useful also in Lisp programs."
msgstr "このセクションでは、主にユーザーにたいして有用ですがLispプログラムでも有用なテキストを削除するための高レベルのコマンドを説明します。"

#. type: deffn
#: original_texis/text.texi:675
#, no-wrap
msgid "Command delete-horizontal-space &optional backward-only"
msgstr "Command delete-horizontal-space &optional backward-only"

#. type: cindex
#: original_texis/text.texi:676
#, no-wrap
msgid "deleting whitespace"
msgstr "deleting whitespace"

#. type: deffn
#: original_texis/text.texi:679
msgid "This function deletes all spaces and tabs around point.  It returns @code{nil}."
msgstr "この関数はポイント近辺のすべてのスペースとタブを削除する。リターン値は@code{nil}。"

#. type: deffn
#: original_texis/text.texi:682
msgid "If @var{backward-only} is non-@code{nil}, the function deletes spaces and tabs before point, but not after point."
msgstr "@var{backward-only}が非@code{nil}なら、この関数はポイント前のスペースとタブを削除するがポイント後のスペースとタブは削除しない。"

#. type: deffn
#: original_texis/text.texi:686
msgid "In the following examples, we call @code{delete-horizontal-space} four times, once on each line, with point between the second and third characters on the line each time."
msgstr "以下の例では、各行ごとに2番目と3番目の間にポイントを置いて、@code{delete-horizontal-space}を4回呼び出している。"

#. type: group
#: original_texis/text.texi:695
#, no-wrap
msgid ""
"---------- Buffer: foo ----------\n"
"I @point{}thought\n"
"I @point{}     thought\n"
"We@point{} thought\n"
"Yo@point{}u thought\n"
"---------- Buffer: foo ----------\n"
msgstr ""
"---------- Buffer: foo ----------\n"
"I @point{}thought\n"
"I @point{}     thought\n"
"We@point{} thought\n"
"Yo@point{}u thought\n"
"---------- Buffer: foo ----------\n"

#. type: group
#: original_texis/text.texi:700
#, no-wrap
msgid ""
"(delete-horizontal-space)   ; @r{Four times.}\n"
"     @result{} nil\n"
"\n"
msgstr ""
"(delete-horizontal-space)   ; @r{Four times.}\n"
"     @result{} nil\n"
"\n"

#. type: group
#: original_texis/text.texi:707
#, no-wrap
msgid ""
"---------- Buffer: foo ----------\n"
"Ithought\n"
"Ithought\n"
"Wethought\n"
"You thought\n"
"---------- Buffer: foo ----------\n"
msgstr ""
"---------- Buffer: foo ----------\n"
"Ithought\n"
"Ithought\n"
"Wethought\n"
"You thought\n"
"---------- Buffer: foo ----------\n"

#. type: deffn
#: original_texis/text.texi:711
#, no-wrap
msgid "Command delete-indentation &optional join-following-p"
msgstr "Command delete-indentation &optional join-following-p"

#. type: deffn
#: original_texis/text.texi:717
msgid "This function joins the line point is on to the previous line, deleting any whitespace at the join and in some cases replacing it with one space.  If @var{join-following-p} is non-@code{nil}, @code{delete-indentation} joins this line to the following line instead.  The function returns @code{nil}."
msgstr "この関数はポイントのある行をその前の行に結合(join)する。結合においてはすべての空白文字を削除、特定のケースにおいてはそれらを1つのスペースに置き換える。@var{join-following-p}が非@code{nil}なら、@code{delete-indentation}はかわりに後続行と結合を行う。この関数は@code{nil}をリターンする。"

#. type: deffn
#: original_texis/text.texi:721
msgid "If there is a fill prefix, and the second of the lines being joined starts with the prefix, then @code{delete-indentation} deletes the fill prefix before joining the lines.  @xref{Margins}."
msgstr "fillプレフィクスがあり、結合される2つ目の行もそのプレフィクスで始まる場合には、行の結合前に@code{delete-indentation}はそのfillプレフィクスを削除する。@ref{Margins}を参照のこと。"

#. type: deffn
#: original_texis/text.texi:725
msgid "In the example below, point is located on the line starting @samp{events}, and it makes no difference if there are trailing spaces in the preceding line."
msgstr "以下の例では@samp{events}で始まる行にポイントがあり、前の行の末尾に1つ以上のスペースが存在しても違いは生じない。"

#. type: group
#: original_texis/text.texi:732
#, no-wrap
msgid ""
"---------- Buffer: foo ----------\n"
"When in the course of human\n"
"@point{}    events, it becomes necessary\n"
"---------- Buffer: foo ----------\n"
msgstr ""
"---------- Buffer: foo ----------\n"
"When in the course of human\n"
"@point{}    events, it becomes necessary\n"
"---------- Buffer: foo ----------\n"

#. type: smallexample
#: original_texis/text.texi:736
#, no-wrap
msgid ""
"(delete-indentation)\n"
"     @result{} nil\n"
"\n"
msgstr ""
"(delete-indentation)\n"
"     @result{} nil\n"
"\n"

#. type: group
#: original_texis/text.texi:741
#, no-wrap
msgid ""
"---------- Buffer: foo ----------\n"
"When in the course of human@point{} events, it becomes necessary\n"
"---------- Buffer: foo ----------\n"
msgstr ""
"---------- Buffer: foo ----------\n"
"When in the course of human@point{} events, it becomes necessary\n"
"---------- Buffer: foo ----------\n"

#. type: deffn
#: original_texis/text.texi:746
msgid "After the lines are joined, the function @code{fixup-whitespace} is responsible for deciding whether to leave a space at the junction."
msgstr "行の結合後に結合点に単一のスペースを残すか否かを決定するのは、関数@code{fixup-whitespace}の責任である。"

#. type: deffn
#: original_texis/text.texi:748
#, no-wrap
msgid "Command fixup-whitespace"
msgstr "Command fixup-whitespace"

#. type: deffn
#: original_texis/text.texi:752
msgid "This function replaces all the horizontal whitespace surrounding point with either one space or no space, according to the context.  It returns @code{nil}."
msgstr "この関数はポイントを取り囲むすべての水平スペースを、コンテキストに応じて1つのスペースまたはスペースなしに置き換える。リターン値は@code{nil}。"

#. type: deffn
#: original_texis/text.texi:758
msgid "At the beginning or end of a line, the appropriate amount of space is none.  Before a character with close parenthesis syntax, or after a character with open parenthesis or expression-prefix syntax, no space is also appropriate.  Otherwise, one space is appropriate.  @xref{Syntax Class Table}."
msgstr "行の先頭や末尾において、スペースの適正な数は0。閉カッコ構文(close parenthesis syntax)の前の文字、開カッコの後の文字、式プレフィクス構文(expression-prefix syntax)においても、スペースの適正な数は0。それ以外ではスペースの適正な数は1。@ref{Syntax Class Table}を参照のこと。"

#. type: deffn
#: original_texis/text.texi:762
msgid "In the example below, @code{fixup-whitespace} is called the first time with point before the word @samp{spaces} in the first line.  For the second invocation, point is directly after the @samp{(}."
msgstr "以下の例では最初に1行目の単語@samp{spaces}の前にポイントがある状態で、@code{fixup-whitespace}を呼び出している。2回目の呼び出しでは@samp{(}の直後にポイントがある。"

#. type: group
#: original_texis/text.texi:769
#, no-wrap
msgid ""
"---------- Buffer: foo ----------\n"
"This has too many     @point{}spaces\n"
"This has too many spaces at the start of (@point{}   this list)\n"
"---------- Buffer: foo ----------\n"
msgstr ""
"---------- Buffer: foo ----------\n"
"This has too many     @point{}spaces\n"
"This has too many spaces at the start of (@point{}   this list)\n"
"---------- Buffer: foo ----------\n"

#. type: group
#: original_texis/text.texi:776
#, no-wrap
msgid ""
"(fixup-whitespace)\n"
"     @result{} nil\n"
"(fixup-whitespace)\n"
"     @result{} nil\n"
msgstr ""
"(fixup-whitespace)\n"
"     @result{} nil\n"
"(fixup-whitespace)\n"
"     @result{} nil\n"

#. type: group
#: original_texis/text.texi:783
#, no-wrap
msgid ""
"---------- Buffer: foo ----------\n"
"This has too many spaces\n"
"This has too many spaces at the start of (this list)\n"
"---------- Buffer: foo ----------\n"
msgstr ""
"---------- Buffer: foo ----------\n"
"This has too many spaces\n"
"This has too many spaces at the start of (this list)\n"
"---------- Buffer: foo ----------\n"

#. type: deffn
#: original_texis/text.texi:787
#, no-wrap
msgid "Command just-one-space &optional n"
msgstr "Command just-one-space &optional n"

#. type: deffn
#: original_texis/text.texi:792
msgid "This command replaces any spaces and tabs around point with a single space, or @var{n} spaces if @var{n} is specified.  It returns @code{nil}."
msgstr "このコマンドはポイントを取り囲むすべてのスペースを1つのスペース、@var{n}が指定された場合は@var{n}個のスペースで置き換える。リターン値は@code{nil}。"

#. type: deffn
#: original_texis/text.texi:797
#, no-wrap
msgid "Command delete-blank-lines"
msgstr "Command delete-blank-lines"

#. type: deffn
#: original_texis/text.texi:803
msgid "This function deletes blank lines surrounding point.  If point is on a blank line with one or more blank lines before or after it, then all but one of them are deleted.  If point is on an isolated blank line, then it is deleted.  If point is on a nonblank line, the command deletes all blank lines immediately following it."
msgstr "この関数はポイントを取り囲む空行を削除する。ポイントが前後に1行以上の空行がある空の行にある場合には、1行を除いてそれらすべてを削除する。ポイントが孤立した空行にあればその行を削除する。ポイントが空でない行にあれば、その直後にあるすべての空白を削除する。"

#. type: deffn
#: original_texis/text.texi:806
msgid "A blank line is defined as a line containing only tabs and spaces."
msgstr "空行とはタブまたはスペースのみを含む行として定義される。"

#. type: deffn
#: original_texis/text.texi:808
msgid "@code{delete-blank-lines} returns @code{nil}."
msgstr "@code{delete-blank-lines}は@code{nil}をリターンする。"

#. type: deffn
#: original_texis/text.texi:810
#, no-wrap
msgid "Command delete-trailing-whitespace &optional start end"
msgstr "Command delete-trailing-whitespace &optional start end"

#. type: deffn
#: original_texis/text.texi:813
msgid "Delete trailing whitespace in the region defined by @var{start} and @var{end}."
msgstr "@var{start}と@var{end}で定義されるリージョン内から末尾の空白文字を削除する。"

#. type: deffn
#: original_texis/text.texi:816
msgid "This command deletes whitespace characters after the last non-whitespace character in each line in the region."
msgstr "このコマンドはリージョン内の各行の最後の非空白文字後にある空白文字を削除する。"

#. type: deffn
#: original_texis/text.texi:821
msgid "If this command acts on the entire buffer (i.e., if called interactively with the mark inactive, or called from Lisp with @var{end} @code{nil}), it also deletes all trailing lines at the end of the buffer if the variable @code{delete-trailing-lines} is non-@code{nil}."
msgstr "このコマンドがバッファー全体(マークが非アクティブな状態で呼び出された場合やLispから@var{end}と@code{nil}で呼び出された場合)にたいして動作する場合には、変数@code{delete-trailing-lines}が非@code{nil}ならバッファーの終端行の末尾の行も削除する。"

#. type: cindex
#: original_texis/text.texi:825
#, no-wrap
msgid "kill ring"
msgstr "kill ring"

#. type: Plain text
#: original_texis/text.texi:833
msgid "@dfn{Kill functions} delete text like the deletion functions, but save it so that the user can reinsert it by @dfn{yanking}.  Most of these functions have @samp{kill-} in their name.  By contrast, the functions whose names start with @samp{delete-} normally do not save text for yanking (though they can still be undone); these are deletion functions."
msgstr "@dfn{kill関数(kill functions)}は削除関数のようにテキストを削除しますが、ユーザーが@dfn{yank}により再挿入できるようにそれらを保存する点が異なります。これらの関数のほとんどは@samp{kill-}という名前をもちます。対照的に名前が@samp{delete-}で始まる関数は、(たとえ削除をundoできるとしても)通常はyank用にテキストを保存しません。それらは削除(deletion)関数です。"

#. type: Plain text
#: original_texis/text.texi:841
msgid "Most of the kill commands are primarily for interactive use, and are not described here.  What we do describe are the functions provided for use in writing such commands.  You can use these functions to write commands for killing text.  When you need to delete text for internal purposes within a Lisp function, you should normally use deletion functions, so as not to disturb the kill ring contents.  @xref{Deletion}."
msgstr "ほとんどのkillコマンドは主にインタラクティブな使用を意図しており、ここでは説明しません。ここで説明するのは、そのようなコマンドの記述に使用されるために提供される関数です。テキストをkillするために、これらの関数を使用できます。Lisp関数の内部的な目的のためにテキストの削除を要するときは、killリング内のコンテンツに影響を与えないように通常は削除関数を使用するべきでしょう。@ref{Deletion}を参照してください。"

#. type: Plain text
#: original_texis/text.texi:849
msgid "Killed text is saved for later yanking in the @dfn{kill ring}.  This is a list that holds a number of recent kills, not just the last text kill.  We call this a ``ring'' because yanking treats it as having elements in a cyclic order.  The list is kept in the variable @code{kill-ring}, and can be operated on with the usual functions for lists; there are also specialized functions, described in this section, that treat it as a ring."
msgstr "killされたテキストは後のyank用に@dfn{killリング(kill ring)}内に保存されます。これは直前のkillだけでなく直近のkillのいくつかを保持するリストです。yankがそれをサイクル順に要素をもつリストとして扱うので、これを``リング(ring)''と称しています。このリストは変数@code{kill-ring}に保持されており、リスト用の通常関数で操作可能です。このセクションで説明する、これをリングとして扱うために特化された関数も存在します。"

#. type: Plain text
#: original_texis/text.texi:858
msgid "Some people think this use of the word ``kill'' is unfortunate, since it refers to operations that specifically @emph{do not} destroy the entities killed.  This is in sharp contrast to ordinary life, in which death is permanent and killed entities do not come back to life.  Therefore, other metaphors have been proposed.  For example, the term ``cut ring'' makes sense to people who, in pre-computer days, used scissors and paste to cut up and rearrange manuscripts.  However, it would be difficult to change the terminology now."
msgstr "特にkillされた実体が@emph{破壊}されてしまわないような操作を参照するという理由から、``kill''という単語の使用が不適切だと考える人もいます。これは通常の生活において死は永遠であり、killされた実体は生活に戻ることはないことと対照的です。したがって他の比喩表現も提案されてきました。たとえば、``cutリング(cut ring)''という用語は、コンピューター誕生前に原稿を再配置するためにハサミで切り取って貼り付けていたような人に意味があるでしょう。しかし今となってはこの用語を変更するのは困難です。"

#. type: subsection
#: original_texis/text.texi:866 original_texis/text.texi:868
#: original_texis/text.texi:869
#, no-wrap
msgid "Kill Ring Concepts"
msgstr "Kill Ring Concepts"

#. type: menuentry
#: original_texis/text.texi:866
msgid "What text looks like in the kill ring."
msgstr "killリング内のテキストがどのように見えるか。"

#. type: node
#: original_texis/text.texi:866 original_texis/text.texi:894
#, no-wrap
msgid "Kill Functions"
msgstr "Kill Functions"

#. type: menuentry
#: original_texis/text.texi:866
msgid "Functions that kill text."
msgstr "テキストをkillする関数。"

#. type: subsection
#: original_texis/text.texi:866 original_texis/text.texi:953
#: original_texis/text.texi:954
#, no-wrap
msgid "Yanking"
msgstr "Yanking"

#. type: menuentry
#: original_texis/text.texi:866
msgid "How yanking is done."
msgstr "yankが行われる方法。"

#. type: node
#: original_texis/text.texi:866 original_texis/text.texi:1042
#, no-wrap
msgid "Yank Commands"
msgstr "Yank Commands"

#. type: menuentry
#: original_texis/text.texi:866
msgid "Commands that access the kill ring."
msgstr "killリングにアクセスするコマンド。"

#. type: subsection
#: original_texis/text.texi:866 original_texis/text.texi:1111
#: original_texis/text.texi:1112
#, no-wrap
msgid "Low-Level Kill Ring"
msgstr "Low-Level Kill Ring"

#. type: menuentry
#: original_texis/text.texi:866
msgid "Functions and variables for kill ring access."
msgstr "killリングアクセス用の関数と変数。"

#. type: node
#: original_texis/text.texi:866 original_texis/text.texi:1197
#, no-wrap
msgid "Internals of Kill Ring"
msgstr "Internals of Kill Ring"

#. type: menuentry
#: original_texis/text.texi:866
msgid "Variables that hold kill ring data."
msgstr "killリングのデータを保持する変数。"

#. type: Plain text
#: original_texis/text.texi:873
msgid "The kill ring records killed text as strings in a list, most recent first.  A short kill ring, for example, might look like this:"
msgstr "killリングはリスト内でもっとも最近にkillされたテキストが先頭になるように、killされたテキストを記録します。たとえば短いkillリングは以下のようになるでしょう:"

#. type: example
#: original_texis/text.texi:876
#, no-wrap
msgid "(\"some text\" \"a different piece of text\" \"even older text\")\n"
msgstr "(\"some text\" \"a different piece of text\" \"even older text\")\n"

#. type: Plain text
#: original_texis/text.texi:881
msgid "When the list reaches @code{kill-ring-max} entries in length, adding a new entry automatically deletes the last entry."
msgstr "このリストのエントリー長が@code{kill-ring-max}に達すると、新たなエントリー追加により最後のエントリーが自動的に削除されます。"

#. type: Plain text
#: original_texis/text.texi:887
msgid "When kill commands are interwoven with other commands, each kill command makes a new entry in the kill ring.  Multiple kill commands in succession build up a single kill ring entry, which would be yanked as a unit; the second and subsequent consecutive kill commands add text to the entry made by the first one."
msgstr "killコマンドが他のコマンドと混ざり合っているときは、各killコマンドはkillリング内に新たなエントリーを作成します。連続する複数のkillコマンドは単一のkillリングエントリーを構成します。これは1つの単位としてyankされます。2つ目以降の連続するkillコマンドは、最初のkillにより作成されたエントリーにテキストを追加します。"

#. type: Plain text
#: original_texis/text.texi:893
msgid "For yanking, one entry in the kill ring is designated the front of the ring.  Some yank commands rotate the ring by designating a different element as the front.  But this virtual rotation doesn't change the list itself---the most recent entry always comes first in the list."
msgstr "yankにたいしては、killリング内のただ1つのエントリーが、そのリングの先頭のエントリーとなります。いくつかのyankコマンドは、異なる要素を先頭に指定することにより、リングを回転(rotate)させます。しかしこの仮想的回転はリスト自身を変更しません。もっとも最近のエントリーが、常にリスト内の最初に配置されます。"

#. type: subsection
#: original_texis/text.texi:895
#, no-wrap
msgid "Functions for Killing"
msgstr "Functions for Killing"

#. type: Plain text
#: original_texis/text.texi:904
msgid "@code{kill-region} is the usual subroutine for killing text.  Any command that calls this function is a kill command (and should probably have @samp{kill} in its name).  @code{kill-region} puts the newly killed text in a new element at the beginning of the kill ring or adds it to the most recent element.  It determines automatically (using @code{last-command}) whether the previous command was a kill command, and if so appends the killed text to the most recent entry."
msgstr "@code{kill-region}はテキストkill用の通常サブルーチンです。この関数を呼び出すすべてのコマンドはkillコマンドです(そして恐らくは名前に@samp{kill}が含まれる)。@code{kill-region}は新たにkillされたテキストをkillリング内の最初の要素内に置くか、それをもっとも最近の要素に追加します。これは前のコマンドがkillコマンドか否かを、(@code{last-command}を使用して)自動的に判別して、もしkillコマンドならkillされたテキストをもっとも最近のエントリーに追加します。"

#. type: cindex
#: original_texis/text.texi:905
#, no-wrap
msgid "filtering killed text"
msgstr "filtering killed text"

#. type: Plain text
#: original_texis/text.texi:912
msgid "The commands described below can filter the killed text before they save it in the kill ring.  They call @code{filter-buffer-substring} (@pxref{Buffer Contents}) to perform the filtering.  By default, there's no filtering, but major and minor modes and hook functions can set up filtering, so that text saved in the kill ring is different from what was in the buffer."
msgstr "以下で説明するコマンドはkillされるテキストがkillリングに保存される前に、それらをフィルターできます。これらの関数は、このフィルタリングを行うために@code{filter-buffer-substring}を呼び出します(@ref{Buffer Contents}を参照)。デフォルトではこれらはフィルタリングを行いませんが、バッファーにあったときと異なるようにテキストをkillリングに保存するために、マイナーモードとフック関数はフィルタリングをセットアップできます。"

#. type: deffn
#: original_texis/text.texi:913
#, no-wrap
msgid "Command kill-region start end &optional region"
msgstr "Command kill-region start end &optional region"

#. type: deffn
#: original_texis/text.texi:920
msgid "This function kills the stretch of text between @var{start} and @var{end}; but if the optional argument @var{region} is non-@code{nil}, it ignores @var{start} and @var{end}, and kills the text in the current region instead.  The text is deleted but saved in the kill ring, along with its text properties.  The value is always @code{nil}."
msgstr "この関数は@var{start}と@var{end}の間のテキスト範囲をkillするが、オプション引数@var{region}が非@code{nil}なら、かわりにカレントリージョンのテキストをkillする。そのテキストは削除されるが、そのテキストプロパティと共にkillリングに保存される。値は常に@code{nil}。"

#. type: deffn
#: original_texis/text.texi:924
msgid "In an interactive call, @var{start} and @var{end} are point and the mark, and @var{region} is always non-@code{nil}, so the command always kills the text in the current region."
msgstr "インタラクティブな呼び出しでは@var{start}と@var{end}はポイントとマークで@var{region}は常に非@code{nil}なので、このコマンドは常にカレントリージョン内のテキストをkillする。"

#. type: deffn
#: original_texis/text.texi:929
msgid "If the buffer or text is read-only, @code{kill-region} modifies the kill ring just the same, then signals an error without modifying the buffer.  This is convenient because it lets the user use a series of kill commands to copy text from a read-only buffer into the kill ring."
msgstr "バッファーまたはテキストが読み取り専用なら、@code{kill-region}は同じようにkillリングを変更後に、バッファーを変更せずにエラーをシグナルする。これはユーザーが一連のkillコマンドで、読み取り専用バッファーからkillリングにテキストをコピーするのに有用。"

#. type: defopt
#: original_texis/text.texi:931
#, no-wrap
msgid "kill-read-only-ok"
msgstr "kill-read-only-ok"

#. type: defopt
#: original_texis/text.texi:935
msgid "If this option is non-@code{nil}, @code{kill-region} does not signal an error if the buffer or text is read-only.  Instead, it simply returns, updating the kill ring but not changing the buffer."
msgstr "このオプションが非@code{nil}なら、バッファーやテキストが読み取り専用でも@code{kill-region}はエラーをシグナルしない。かわりにバッファーを変更せずにkillリングを更新して単にリターンする。"

#. type: deffn
#: original_texis/text.texi:937
#, no-wrap
msgid "Command copy-region-as-kill start end &optional region"
msgstr "Command copy-region-as-kill start end &optional region"

#. type: deffn
#: original_texis/text.texi:944
msgid "This function saves the stretch of text between @var{start} and @var{end} on the kill ring (including text properties), but does not delete the text from the buffer.  However, if the optional argument @var{region} is non-@code{nil}, the function ignores @var{start} and @var{end}, and saves the current region instead.  It always returns @code{nil}."
msgstr "この関数は@var{start}と@var{end}の間のテキスト範囲(テキストプロパティを含む)をkillリングに保存するが、バッファーからそのテキストを削除しない。しかしオプション引数@var{region}が非@code{nil}なら、この関数は@var{start}と@var{end}を無視して、かわりにカレントリージョンを保存する。この関数は常に@code{nil}をリターンする。"

#. type: deffn
#: original_texis/text.texi:948
msgid "In an interactive call, @var{start} and @var{end} are point and the mark, and @var{region} is always non-@code{nil}, so the command always saves the text in the current region."
msgstr "インタラクティブな呼び出しでは@var{start}と@var{end}はポイントとマークで@var{region}は常に非@code{nil}なので、このコマンドは常にカレントリージョン内のテキストをkillする。"

#. type: deffn
#: original_texis/text.texi:951
msgid "The command does not set @code{this-command} to @code{kill-region}, so a subsequent kill command does not append to the same kill ring entry."
msgstr "このコマンドは後続のkillコマンドが同一のkillリングエントリーに追加しないように、@code{this-command}に@code{kill-region}をセットしない。"

#. type: Plain text
#: original_texis/text.texi:960
msgid "Yanking means inserting text from the kill ring, but it does not insert the text blindly.  The @code{yank} command, and related commands, use @code{insert-for-yank} to perform special processing on the text before it is inserted."
msgstr "yankとはkillリングからテキストを挿入しますが、それが単なる挿入ではないことを意味します。@code{yank}とそれに関連するコマンドは、テキスト挿入前に特別な処理を施すために@code{insert-for-yank}を使用します。"

#. type: defun
#: original_texis/text.texi:961
#, no-wrap
msgid "insert-for-yank string"
msgstr "insert-for-yank string"

#. type: defun
#: original_texis/text.texi:967
msgid "This function works like @code{insert}, except that it processes the text in @var{string} according to the @code{yank-handler} text property, as well as the variables @code{yank-handled-properties} and @code{yank-excluded-properties} (see below), before inserting the result into the current buffer."
msgstr "この関数は@code{insert}と同様に機能するが、結果をカレントバッファーに挿入する前にテキストプロパティ@code{yank-handler}、同様に変数@code{yank-handled-properties}と@code{yank-excluded-properties}に応じて@var{string}内のテキストを処理する点が異なる。"

#. type: defun
#: original_texis/text.texi:969
#, no-wrap
msgid "insert-buffer-substring-as-yank buf &optional start end"
msgstr "insert-buffer-substring-as-yank buf &optional start end"

#. type: defun
#: original_texis/text.texi:975
msgid "This function resembles @code{insert-buffer-substring}, except that it processes the text according to @code{yank-handled-properties} and @code{yank-excluded-properties}.  (It does not handle the @code{yank-handler} property, which does not normally occur in buffer text anyway.)"
msgstr "この関数は@code{insert-buffer-substring}と似ているが、@code{yank-handled-properties}と@code{yank-excluded-properties}に応じてテキストを処理する点が異なる(これは@code{yank-handler}プロパティを処理しないが、いずれにせよバッファー内のテキストでは通常は発生しない)。"

#. type: Plain text
#: original_texis/text.texi:985
msgid "If you put a @code{yank-handler} text property on all or part of a string, that alters how @code{insert-for-yank} inserts the string.  If different parts of the string have different @code{yank-handler} values (comparison being done with @code{eq}), each substring is handled separately.  The property value must be a list of one to four elements, with the following format (where elements after the first may be omitted):"
msgstr "文字列の一部またはすべてにテキストプロパティ@code{yank-handler}をputすると、@code{insert-for-yank}が文字列を挿入する方法が変更されます。文字列の別の箇所が異なる@code{yank-handler}の値をもつ場合(比較は@code{eq})、部分文字列はそれぞれ個別に処理されます。プロパティ値は以下の形式からなる1から4要素のリストでなければなりません(2番目以降の要素は省略可):"

#. type: example
#: original_texis/text.texi:988
#, no-wrap
msgid "(@var{function} @var{param} @var{noexclude} @var{undo})\n"
msgstr "(@var{function} @var{param} @var{noexclude} @var{undo})\n"

#. type: Plain text
#: original_texis/text.texi:991
msgid "Here is what the elements do:"
msgstr "これらの要素が何を行うかを以下に示します:"

#. type: item
#: original_texis/text.texi:993
#, no-wrap
msgid "function"
msgstr "function"

#. type: table
#: original_texis/text.texi:997
msgid "When @var{function} is non-@code{nil}, it is called instead of @code{insert} to insert the string, with one argument---the string to insert."
msgstr "@var{function}が非@code{nil}なら、@code{insert}のかわりに文字列を挿入するために、挿入する文字列を単一の引数として、その関数が呼び出される。"

#. type: item
#: original_texis/text.texi:998
#, no-wrap
msgid "param"
msgstr "param"

#. type: table
#: original_texis/text.texi:1004
msgid "If @var{param} is present and non-@code{nil}, it replaces @var{string} (or the substring of @var{string} being processed) as the object passed to @var{function} (or @code{insert}).  For example, if @var{function} is @code{yank-rectangle}, @var{param} should be a list of strings to insert as a rectangle."
msgstr "非@code{nil}の@var{param}が与えられた場合には、それは@var{string} (または処理される@var{string}の部分文字列)を置き換えるオブジェクトとして@var{function} (または@code{insert})に渡される。たとえば@var{function}が@code{yank-rectangle}なら、@var{param}は矩形(rectangle)として挿入されるべき文字列のリスト。"

#. type: item
#: original_texis/text.texi:1005
#, no-wrap
msgid "noexclude"
msgstr "noexclude"

#. type: table
#: original_texis/text.texi:1009
msgid "If @var{noexclude} is present and non-@code{nil}, that disables the normal action of @code{yank-handled-properties} and @code{yank-excluded-properties} on the inserted string."
msgstr "非@code{nil}の@var{noexclude}が与えられたら、挿入される文字列にたいする@code{yank-handled-properties}と@code{yank-excluded-properties}の通常の動作を無効にする。"

#. type: item
#: original_texis/text.texi:1010
#, no-wrap
msgid "undo"
msgstr "undo"

#. type: table
#: original_texis/text.texi:1016
msgid "If @var{undo} is present and non-@code{nil}, it is a function that will be called by @code{yank-pop} to undo the insertion of the current object.  It is called with two arguments, the start and end of the current region.  @var{function} can set @code{yank-undo-function} to override the @var{undo} value."
msgstr "非@code{nil}の@var{undo}が与えられたら、それはカレントオブジェクトの挿入をundoするために@code{yank-pop}が呼び出す関数。この関数はカレントリージョンのstartとendという2つの引数で呼び出される。@var{function}は@code{yank-undo-function}をセットすることにより@var{undo}の値をオーバーライドできる。"

#. type: cindex
#: original_texis/text.texi:1018
#, no-wrap
msgid "yanking and text properties"
msgstr "yanking and text properties"

#. type: defopt
#: original_texis/text.texi:1019
#, no-wrap
msgid "yank-handled-properties"
msgstr "yank-handled-properties"

#. type: defopt
#: original_texis/text.texi:1024
msgid "This variable specifies special text property handling conditions for yanked text.  It takes effect after the text has been inserted (either normally, or via the @code{yank-handler} property), and prior to @code{yank-excluded-properties} taking effect."
msgstr "この変数はyankされるテキストの状態を処理するスペシャルテキストプロパティを指定する。これは(通常の方法、または@code{yank-handler}を通じた)テキストの挿入後、@code{yank-excluded-properties}が効力をもつ前に効果を発揮する。"

#. type: defopt
#: original_texis/text.texi:1031
msgid "The value should be an alist of elements @code{(@var{prop} . @var{fun})}.  Each alist element is handled in order.  The inserted text is scanned for stretches of text having text properties @code{eq} to @var{prop}; for each such stretch, @var{fun} is called with three arguments: the value of the property, and the start and end positions of the text."
msgstr "値は要素が@code{(@var{prop} . @var{fun})}であるようなalistであること。alistの各要素は順番に処理される。挿入されるテキストはテキスト範囲にたいして、テキストプロパティが@var{prop}と@code{eq}なものがスキャンされる。そのような範囲にたいしてプロパティの値、そのテキストの開始と終了の位置という3つの引数により@var{fun}が呼び出される。"

#. type: defopt
#: original_texis/text.texi:1033
#, no-wrap
msgid "yank-excluded-properties"
msgstr "yank-excluded-properties"

#. type: defopt
#: original_texis/text.texi:1039
msgid "The value of this variable is the list of properties to remove from inserted text.  Its default value contains properties that might lead to annoying results, such as causing the text to respond to the mouse or specifying key bindings.  It takes effect after @code{yank-handled-properties}."
msgstr "この変数の値は挿入されるテキストから削除するためのプロパティのリスト。デフォルト値にはマウスに応答したりキーバインディングの指定を引き起こすテキストのような、煩わしい結果をもたらすかもしれないプロパティが含まれる。これは@code{yank-handled-properties}の後に効果を発揮する。"

#. type: subsection
#: original_texis/text.texi:1043
#, no-wrap
msgid "Functions for Yanking"
msgstr "Functions for Yanking"

#. type: Plain text
#: original_texis/text.texi:1050
msgid "This section describes higher-level commands for yanking, which are intended primarily for the user but useful also in Lisp programs.  Both @code{yank} and @code{yank-pop} honor the @code{yank-excluded-properties} variable and @code{yank-handler} text property (@pxref{Yanking})."
msgstr "このセクションではyank用の高レベルなコマンドを説明します。これらのコマンドは主にユーザー用に意図されたものですが、Lispプログラム内での使用にたいしても有用です。@code{yank}と@code{yank-pop}はいずれも、変数@code{yank-excluded-properties}とテキストプロパティ@code{yank-handler}にしたがいます(@ref{Yanking}を参照)。"

#. type: deffn
#: original_texis/text.texi:1051
#, no-wrap
msgid "Command yank &optional arg"
msgstr "Command yank &optional arg"

#. type: cindex
#: original_texis/text.texi:1052
#, no-wrap
msgid "inserting killed text"
msgstr "inserting killed text"

#. type: deffn
#: original_texis/text.texi:1056
msgid "This command inserts before point the text at the front of the kill ring.  It sets the mark at the beginning of that text, using @code{push-mark} (@pxref{The Mark}), and puts point at the end."
msgstr "このコマンドはkillリングの先頭にあるテキストをポイントの前に挿入する。これは@code{push-mark}(@ref{The Mark}を参照)を使用して、そのテキストの先頭にマークをセットする。"

#. type: deffn
#: original_texis/text.texi:1061
msgid "If @var{arg} is a non-@code{nil} list (which occurs interactively when the user types @kbd{C-u} with no digits), then @code{yank} inserts the text as described above, but puts point before the yanked text and sets the mark after it."
msgstr "@var{arg}が非@code{nil}のリスト(これはユーザーがインタラクティブに数字を指定せずに@kbd{C-u}タイプ時に発生する)なら、@code{yank}は上述のようにテキストを挿入するがポイントはyankされたテキストの前、マークはyankされたテキストの後に置かれる。"

#. type: deffn
#: original_texis/text.texi:1066
msgid "If @var{arg} is a number, then @code{yank} inserts the @var{arg}th most recently killed text---the @var{arg}th element of the kill ring list, counted cyclically from the front, which is considered the first element for this purpose."
msgstr "@var{arg}が数字なら@code{yank}は@var{arg}番目に最近killされたテキスト、すなわちkillリングリストの@var{arg}番目の要素を挿入する。この順番はコマンドの目的にたいして1番目の要素としてみなされるリスト先頭の要素から巡回的に数えられる。"

#. type: deffn
#: original_texis/text.texi:1071
msgid "@code{yank} does not alter the contents of the kill ring, unless it used text provided by another program, in which case it pushes that text onto the kill ring.  However if @var{arg} is an integer different from one, it rotates the kill ring to place the yanked string at the front."
msgstr "@code{yank}は、それが他のプログラムから提供されるテキストを使用しないかぎり(使用する場合はそのテキストをkillリングにpushする)、killリングのコンテンツを変更しない。しかし@var{arg}が非1の整数なら、killリングを転回(rotate)してyankされるテキストをリング先頭に置く。"

#. type: deffn
#: original_texis/text.texi:1073
msgid "@code{yank} returns @code{nil}."
msgstr "@code{yank}は@code{nil}をリターンする。"

#. type: deffn
#: original_texis/text.texi:1075
#, no-wrap
msgid "Command yank-pop &optional arg"
msgstr "Command yank-pop &optional arg"

#. type: deffn
#: original_texis/text.texi:1078
msgid "This command replaces the just-yanked entry from the kill ring with a different entry from the kill ring."
msgstr "このコマンドはkillリング上の正にyankされたばかりのエントリーをkillリングの別エントリーで置き換える。"

#. type: deffn
#: original_texis/text.texi:1086
msgid "This is allowed only immediately after a @code{yank} or another @code{yank-pop}.  At such a time, the region contains text that was just inserted by yanking.  @code{yank-pop} deletes that text and inserts in its place a different piece of killed text.  It does not add the deleted text to the kill ring, since it is already in the kill ring somewhere.  It does however rotate the kill ring to place the newly yanked string at the front."
msgstr "このコマンドは@code{yank}か別の@code{yank-pop}の直後のみ許される。そのような際にそのリージョンには、yankにより正に挿入されたテキストが含まれる。@code{yank-pop}はそのテキストを削除して、killされた別のテキスト片をその位置に挿入する。そのテキスト片はすでにkillリング内のどこか別の箇所にあるので、これは削除されたテキストをkillリングに追加しない。しかし新たにyankされたテキストが先頭になるように、killリングの転回は行う。"

#. type: deffn
#: original_texis/text.texi:1091
msgid "If @var{arg} is @code{nil}, then the replacement text is the previous element of the kill ring.  If @var{arg} is numeric, the replacement is the @var{arg}th previous kill.  If @var{arg} is negative, a more recent kill is the replacement."
msgstr "@var{arg}が@code{nil}なら置換テキストはkillリングの1つ前の要素。@var{arg}が数字なら置換テキストはkillリングの@var{arg}個前の要素である。@var{arg}が負なら、より最近のkillが置換される。"

#. type: deffn
#: original_texis/text.texi:1095
msgid "The sequence of kills in the kill ring wraps around, so that after the oldest one comes the newest one, and before the newest one goes the oldest."
msgstr "killリング内のkillされたエントリーの順序はラップする。すなわちもっとも古いkillの次にもっとも新しいkill、もっとも新しいkillの前はもっとも古いkillとなる。"

#. type: deffn
#: original_texis/text.texi:1097
msgid "The return value is always @code{nil}."
msgstr "リターン値は常に@code{nil}である。"

#. type: defvar
#: original_texis/text.texi:1099
#, no-wrap
msgid "yank-undo-function"
msgstr "yank-undo-function"

#. type: defvar
#: original_texis/text.texi:1105
msgid "If this variable is non-@code{nil}, the function @code{yank-pop} uses its value instead of @code{delete-region} to delete the text inserted by the previous @code{yank} or @code{yank-pop} command.  The value must be a function of two arguments, the start and end of the current region."
msgstr "この変数が非@code{nil}なら、関数@code{yank-pop}は前の@code{yank}や@code{yank-pop}により挿入されたテキストを削除するために、@code{delete-region}のかわりにこの変数の値を使用する。値はカレントリージョンの開始と終了という2つの引数をとる関数でなければならない。"

#. type: defvar
#: original_texis/text.texi:1109
msgid "The function @code{insert-for-yank} automatically sets this variable according to the @var{undo} element of the @code{yank-handler} text property, if there is one."
msgstr "関数@code{insert-for-yank}はテキストプロパティ@code{yank-handler}の要素@var{undo}に対応して、この変数を自動的にセットする。"

#. type: Plain text
#: original_texis/text.texi:1118
msgid "These functions and variables provide access to the kill ring at a lower level, but are still convenient for use in Lisp programs, because they take care of interaction with window system selections (@pxref{Window System Selections})."
msgstr "以下の関数と変数はkillリングにたいして低レベルなアクセスを提供しますが、それらはウィンドウシステムの選択(@ref{Window System Selections}を参照)との相互作用にも留意するので、Lispプログラム内での使用に関しても依然として有用です。"

#. type: defun
#: original_texis/text.texi:1119
#, no-wrap
msgid "current-kill n &optional do-not-move"
msgstr "current-kill n &optional do-not-move"

#. type: defun
#: original_texis/text.texi:1123
msgid "The function @code{current-kill} rotates the yanking pointer, which designates the front of the kill ring, by @var{n} places (from newer kills to older ones), and returns the text at that place in the ring."
msgstr "関数@code{current-kill}はkillリングの先頭を指すyankポインターを、(新しいkillから古いkillに) @var{n}個転回して、リング内のその箇所のテキストをリターンする。"

#. type: defun
#: original_texis/text.texi:1127
msgid "If the optional second argument @var{do-not-move} is non-@code{nil}, then @code{current-kill} doesn't alter the yanking pointer; it just returns the @var{n}th kill, counting from the current yanking pointer."
msgstr "オプションの第2引数@var{do-not-move}が非@code{nil}なら、@code{current-kill}はyankポインターを変更しない。カレントyankポインターから@var{n}個目のkillを単にリターンする。"

#. type: defun
#: original_texis/text.texi:1140
msgid "If @var{n} is zero, indicating a request for the latest kill, @code{current-kill} calls the value of @code{interprogram-paste-function} (documented below) before consulting the kill ring.  If that value is a function and calling it returns a string or a list of several string, @code{current-kill} pushes the strings onto the kill ring and returns the first string.  It also sets the yanking pointer to point to the kill-ring entry of the first string returned by @code{interprogram-paste-function}, regardless of the value of @var{do-not-move}.  Otherwise, @code{current-kill} does not treat a zero value for @var{n} specially: it returns the entry pointed at by the yanking pointer and does not move the yanking pointer."
msgstr "@var{n}が0ならそれは最新のkillの要求を意味しており、@code{current-kill}はkillリング照会前に@code{interprogram-paste-function} (以下参照)の値を呼び出す。その値が関数であり、かつそれが文字列か複数の文字列からなるリストをリターンすると、@code{current-kill}はその文字列をkillリング上にpushして最初の文字列をリターンする。これは@var{do-not-move}の値に関わらず、@code{interprogram-paste-function}がリターンする最初の文字列のkillリングエントリーを指すようにyankポインターのセットも行う。それ以外では@code{current-kill}は@var{n}にたいする0値を特別に扱うことはなく、yankポインターが指すエントリーをリターンしてyankポインターの移動は行わない。"

#. type: defun
#: original_texis/text.texi:1142
#, no-wrap
msgid "kill-new string &optional replace"
msgstr "kill-new string &optional replace"

#. type: defun
#: original_texis/text.texi:1147
msgid "This function pushes the text @var{string} onto the kill ring and makes the yanking pointer point to it.  It discards the oldest entry if appropriate.  It also invokes the value of @code{interprogram-cut-function} (see below)."
msgstr "この関数はテキスト@var{string}をkillリング上にpushして、yankポインターがそれを指すようにセットする。それが適切ならもっとも古いエントリーを破棄する。@code{interprogram-cut-function} (以下参照)の呼び出しも行う。"

#. type: defun
#: original_texis/text.texi:1151
msgid "If @var{replace} is non-@code{nil}, then @code{kill-new} replaces the first element of the kill ring with @var{string}, rather than pushing @var{string} onto the kill ring."
msgstr "@var{replace}が非@code{nil}なら@code{kill-new}はkillリング上に@var{string}をpushせずに、killリングの1つ目の要素を@var{string}に置き換える。"

#. type: defun
#: original_texis/text.texi:1153
#, no-wrap
msgid "kill-append string before-p"
msgstr "kill-append string before-p"

#. type: defun
#: original_texis/text.texi:1160
msgid "This function appends the text @var{string} to the first entry in the kill ring and makes the yanking pointer point to the combined entry.  Normally @var{string} goes at the end of the entry, but if @var{before-p} is non-@code{nil}, it goes at the beginning.  This function also invokes the value of @code{interprogram-cut-function} (see below)."
msgstr "この関数はkillリング内の最初のエントリーにテキスト@var{string}を追加して、その結合されたエントリーを指すようにyankポインターをセットする。通常はそのエントリーの終端に@var{string}が追加されるが、@var{before-p}が非@code{nil}ならエントリーの先頭に追加される。この関数は@code{interprogram-cut-function} (以下参照)の呼び出しも行う。"

#. type: defvar
#: original_texis/text.texi:1162
#, no-wrap
msgid "interprogram-paste-function"
msgstr "interprogram-paste-function"

#. type: defvar
#: original_texis/text.texi:1166
msgid "This variable provides a way of transferring killed text from other programs, when you are using a window system.  Its value should be @code{nil} or a function of no arguments."
msgstr "この変数は他のプログラムからkillリングへkillされたテキストを転送する方法を提供する。値は@code{nil}、または引数のない関数であること。"

#. type: defvar
#: original_texis/text.texi:1171
msgid "If the value is a function, @code{current-kill} calls it to get the most recent kill.  If the function returns a non-@code{nil} value, then that value is used as the most recent kill.  If it returns @code{nil}, then the front of the kill ring is used."
msgstr "値が関数なら、もっとも最近のkillを取得するために@code{current-kill}はそれを呼び出す。その関数が非@code{nil}値をリターンすると、その値がもっとも最近のkillとして使用される。@code{nil}をリターンしたらkillリングの先頭が使用される。"

#. type: defvar
#: original_texis/text.texi:1177
msgid "To facilitate support for window systems that support multiple selections, this function may also return a list of strings.  In that case, the first string is used as the most recent kill, and all the other strings are pushed onto the kill ring, for easy access by @code{yank-pop}."
msgstr "複数選択をサポートするウィンドウシステムのサポートを容易にするために、この関数は文字列のリストをリターンすることもある。その場合には1つ目の文字列がもっとも最近のkillとして使用され、その他の文字列はすべて@code{yank-pop}によるアクセスを容易にするためにkillリング上にpushされる。"

#. type: defvar
#: original_texis/text.texi:1183
msgid "The normal use of this function is to get the window system's clipboard as the most recent kill, even if the selection belongs to another application.  @xref{Window System Selections}.  However, if the clipboard contents come from the current Emacs session, this function should return @code{nil}."
msgstr "この関数の通常の用途は、たとえそれが他アプリケーションに属する選択であっても、もっとも最近のkillとしてウィンドウシステムのクリップボードからそれを取得することである。しかしクリップボードのコンテンツがカレントEmacsセッションに由来するなら、この関数は@code{nil}をリターンする筈である。"

#. type: defvar
#: original_texis/text.texi:1185
#, no-wrap
msgid "interprogram-cut-function"
msgstr "interprogram-cut-function"

#. type: defvar
#: original_texis/text.texi:1189
msgid "This variable provides a way of communicating killed text to other programs, when you are using a window system.  Its value should be @code{nil} or a function of one required argument."
msgstr "この変数はウィンドウシステム使用時に、他のプログラムにkillされたテキストを転送する方法を提供する。値は@code{nil}、または1つの引数を要求する関数であること。"

#. type: defvar
#: original_texis/text.texi:1192
msgid "If the value is a function, @code{kill-new} and @code{kill-append} call it with the new first element of the kill ring as the argument."
msgstr "値が関数なら@code{kill-new}と@code{kill-append}はkillリングの新たな1つ目要素を引数としてそれを呼び出す。"

#. type: defvar
#: original_texis/text.texi:1195
msgid "The normal use of this function is to put newly killed text in the window system's clipboard.  @xref{Window System Selections}."
msgstr "この関数の通常の用途は、新たにkillされたテキストをウィンドウシステムのクリップボードに配置することである。@ref{Window System Selections}を参照のこと。"

#. type: subsection
#: original_texis/text.texi:1198
#, no-wrap
msgid "Internals of the Kill Ring"
msgstr "Internals of the Kill Ring"

#. type: Plain text
#: original_texis/text.texi:1203
msgid "The variable @code{kill-ring} holds the kill ring contents, in the form of a list of strings.  The most recent kill is always at the front of the list."
msgstr "変数@code{kill-ring}は、文字列リスト形式でkillリングのコンテンツを保持します。もっとも最近のkillが常にこのリストの先頭になります。"

#. type: Plain text
#: original_texis/text.texi:1212
msgid "The @code{kill-ring-yank-pointer} variable points to a link in the kill ring list, whose @sc{car} is the text to yank next.  We say it identifies the front of the ring.  Moving @code{kill-ring-yank-pointer} to a different link is called @dfn{rotating the kill ring}.  We call the kill ring a ``ring'' because the functions that move the yank pointer wrap around from the end of the list to the beginning, or vice-versa.  Rotation of the kill ring is virtual; it does not change the value of @code{kill-ring}."
msgstr "変数@code{kill-ring-yank-pointer}は、@sc{car}が次のyankのテキストであるような、killリングリスト内のリンクをpointします。これをリングの先頭を識別すると言います。そして、@code{kill-ring-yank-pointer}を異なるリンクに移動することを@dfn{killリングの転回(rotating the kill ring)}と呼びます。yankポインターを移動する関数はyankポインターをリスト終端から先頭、またはその逆へラップするのでkillリングを``ring''と呼びます。killリングの転回は仮想的なものであって@code{kill-ring}の値は変更しません。"

#. type: Plain text
#: original_texis/text.texi:1218
msgid "Both @code{kill-ring} and @code{kill-ring-yank-pointer} are Lisp variables whose values are normally lists.  The word ``pointer'' in the name of the @code{kill-ring-yank-pointer} indicates that the variable's purpose is to identify one element of the list for use by the next yank command."
msgstr "@code{kill-ring}と@code{kill-ring-yank-pointer}はいずれも、通常は値がリストであるようなLisp変数です。@code{kill-ring-yank-pointer}の名前にある単語``pointer''は、その変数の目的が次回yankコマンドにより使用されるリストの最初の要素を指すことであることを示します。"

#. type: Plain text
#: original_texis/text.texi:1224
msgid "The value of @code{kill-ring-yank-pointer} is always @code{eq} to one of the links in the kill ring list.  The element it identifies is the @sc{car} of that link.  Kill commands, which change the kill ring, also set this variable to the value of @code{kill-ring}.  The effect is to rotate the ring so that the newly killed text is at the front."
msgstr "@code{kill-ring-yank-pointer}の値は常にkillリングリスト内の1つのリンクと@code{eq}です。それが指す要素は、そのリンクの@sc{car}です。killリングを変更するkillコマンドも、この変数に@code{kill-ring}の値をセットします。その効果は新たにkillされた先頭になるように、リングを転回することです。"

#. type: Plain text
#: original_texis/text.texi:1228
msgid "Here is a diagram that shows the variable @code{kill-ring-yank-pointer} pointing to the second entry in the kill ring @code{(\"some text\" \"a different piece of text\" \"yet older text\")}."
msgstr "以下は変数@code{kill-ring-yank-pointer}が、killリング@code{(\"some text\" \"a different piece of text\" \"yet older text\")}内の2番目のエントリーを指すことを表すダイアグラムです。"

#. type: group
#: original_texis/text.texi:1244
#, no-wrap
msgid ""
"kill-ring                  ---- kill-ring-yank-pointer\n"
"  |                       |\n"
"  |                       v\n"
"  |     --- ---          --- ---      --- ---\n"
"   --> |   |   |------> |   |   |--> |   |   |--> nil\n"
"        --- ---          --- ---      --- ---\n"
"         |                |            |\n"
"         |                |            |\n"
"         |                |             -->\"yet older text\"\n"
"         |                |\n"
"         |                 --> \"a different piece of text\"\n"
"         |\n"
"          --> \"some text\"\n"
msgstr ""
"kill-ring                  ---- kill-ring-yank-pointer\n"
"  |                       |\n"
"  |                       v\n"
"  |     --- ---          --- ---      --- ---\n"
"   --> |   |   |------> |   |   |--> |   |   |--> nil\n"
"        --- ---          --- ---      --- ---\n"
"         |                |            |\n"
"         |                |            |\n"
"         |                |             -->\"yet older text\"\n"
"         |                |\n"
"         |                 --> \"a different piece of text\"\n"
"         |\n"
"          --> \"some text\"\n"

#. type: Plain text
#: original_texis/text.texi:1250
msgid "This state of affairs might occur after @kbd{C-y} (@code{yank})  immediately followed by @kbd{M-y} (@code{yank-pop})."
msgstr "この状態は@kbd{C-y} (@code{yank})の直後に@kbd{M-y} (@code{yank-pop})を行うことにより発生し得ます。"

#. type: defvar
#: original_texis/text.texi:1251
#, no-wrap
msgid "kill-ring"
msgstr "kill-ring"

#. type: defvar
#: original_texis/text.texi:1254
msgid "This variable holds the list of killed text sequences, most recently killed first."
msgstr "この変数はもっとも最近にkillされたテキストが先頭になるように、killされたテキストのシーケンスのリストを保持する。"

#. type: defvar
#: original_texis/text.texi:1256
#, no-wrap
msgid "kill-ring-yank-pointer"
msgstr "kill-ring-yank-pointer"

#. type: defvar
#: original_texis/text.texi:1261
msgid "This variable's value indicates which element of the kill ring is at the front of the ring for yanking.  More precisely, the value is a tail of the value of @code{kill-ring}, and its @sc{car} is the kill string that @kbd{C-y} should yank."
msgstr "この変数の値は、yankにたいして使用されるkillリングの先頭にある要素を示す。より正確には値は@code{kill-ring}の値のtail値であり、その@sc{car}が@kbd{C-y}によりyankされるはずのkill文字列。"

#. type: defopt
#: original_texis/text.texi:1263
#, no-wrap
msgid "kill-ring-max"
msgstr "kill-ring-max"

#. type: defopt
#: original_texis/text.texi:1267
msgid "The value of this variable is the maximum length to which the kill ring can grow, before elements are thrown away at the end.  The default value for @code{kill-ring-max} is 60."
msgstr "この変数の値は、リング終端の要素を破棄する前にkillリングが成長し得る最大長。@code{kill-ring-max}のデフォルト値は60。"

#. type: cindex
#: original_texis/text.texi:1271
#, no-wrap
msgid "redo"
msgstr "redo"

#. type: Plain text
#: original_texis/text.texi:1281
msgid "Most buffers have an @dfn{undo list}, which records all changes made to the buffer's text so that they can be undone.  (The buffers that don't have one are usually special-purpose buffers for which Emacs assumes that undoing is not useful.  In particular, any buffer whose name begins with a space has its undo recording off by default; see @ref{Buffer Names}.)  All the primitives that modify the text in the buffer automatically add elements to the front of the undo list, which is in the variable @code{buffer-undo-list}."
msgstr "ほとんどのバッファーは、バッファーのテキストにたいして行われた変更をundoできるように、すべての変更を記録する@dfn{undoリスト(undo list)}をもっています(undoリストをもたないバッファーとは通常はEmacsがundoを有用とみなさない特殊用途のバッファーである。特に名前がスペースで始まるバッファーはすべてundoの記録がデフォルトでオフになっている。@ref{Buffer Names}を参照)。バッファー内でテキストを変更するすべてのプリミティブはundoリストの先頭に自動的に要素を追加して、それは変数@code{buffer-undo-list}に格納されます。"

#. type: defvar
#: original_texis/text.texi:1282
#, no-wrap
msgid "buffer-undo-list"
msgstr "buffer-undo-list"

#. type: defvar
#: original_texis/text.texi:1285
msgid "This buffer-local variable's value is the undo list of the current buffer.  A value of @code{t} disables the recording of undo information."
msgstr "このバッファーローカル変数の値は、カレントバッファーのundoリスト。値が@code{t}ならundo情報の記録を無効にする。"

#. type: Plain text
#: original_texis/text.texi:1288
msgid "Here are the kinds of elements an undo list can have:"
msgstr "以下はundoリストが保有可能な要素の種類です:"

#. type: var{#1}
#: original_texis/text.texi:1290
#, no-wrap
msgid "position"
msgstr "position"

#. type: table
#: original_texis/text.texi:1295
msgid "This kind of element records a previous value of point; undoing this element moves point to @var{position}.  Ordinary cursor motion does not make any sort of undo record, but deletion operations use these entries to record where point was before the command."
msgstr "この種の要素は前のポイント値を記録する。この要素をundoすることによりポイントは@var{position}に移動する。通常のカーソル移動はどのような類のundo記録も作成しないが、削除操作はそのコマンド以前にポイントがあった場所を記録するためにこのエントリーを使用する。"

#. type: item
#: original_texis/text.texi:1296
#, no-wrap
msgid "(@var{beg} . @var{end})"
msgstr "(@var{beg} . @var{end})"

#. type: table
#: original_texis/text.texi:1300
msgid "This kind of element indicates how to delete text that was inserted.  Upon insertion, the text occupied the range @var{beg}--@var{end} in the buffer."
msgstr "この種の要素は挿入されたテキストを削除する方法を示す。挿入においてそのテキストはバッファー内の範囲@var{beg}から@var{end}を占める。"

#. type: item
#: original_texis/text.texi:1301
#, no-wrap
msgid "(@var{text} . @var{position})"
msgstr "(@var{text} . @var{position})"

#. type: table
#: original_texis/text.texi:1308
msgid "This kind of element indicates how to reinsert text that was deleted.  The deleted text itself is the string @var{text}.  The place to reinsert it is @code{(abs @var{position})}.  If @var{position} is positive, point was at the beginning of the deleted text, otherwise it was at the end.  Zero or more (@var{marker} . @var{adjustment})  elements follow immediately after this element."
msgstr "この種の要素は削除されたテキストを再度挿入する方法を示す。文字列@var{text}は削除されたテキストそのもの。削除されたテキストを再挿入する位置は@code{(abs @var{position})}。@var{position}が正ならポイントがあったのは削除されたテキストの先頭、それ以外では末尾。この要素の直後に0個以上の(@var{marker} . @var{adjustment})要素が続く。"

#. type: item
#: original_texis/text.texi:1309
#, no-wrap
msgid "(t . @var{time-flag})"
msgstr "(t . @var{time-flag})"

#. type: table
#: original_texis/text.texi:1321
msgid "This kind of element indicates that an unmodified buffer became modified.  A @var{time-flag} of the form @code{(@var{sec-high} @var{sec-low} @var{microsec} @var{picosec})} represents the visited file's modification time as of when it was previously visited or saved, using the same format as @code{current-time}; see @ref{Time of Day}.  A @var{time-flag} of 0 means the buffer does not correspond to any file; @minus{}1 means the visited file previously did not exist.  @code{primitive-undo} uses these values to determine whether to mark the buffer as unmodified once again; it does so only if the file's status matches that of @var{time-flag}."
msgstr "この種の要素は未変更のバッファーが変更されたことを示す。@code{(@var{sec-high} @var{sec-low} @var{microsec} @var{picosec})}という形式の@var{time-flag}は、visitされたファイルにたいしてそれが以前にvisitや保存されたときの更新時刻(modification time)を、@code{current-time}と同じ形式を用いて表す。@ref{Time of Day}を参照のこと。@var{time-flag}が0ならそのバッファーに対応するファイルがないことを、@minus{}1ならvisitされたファイルは以前は存在しなかったことを意味する。@code{primitive-undo}はバッファーを再度未変更とマークするかどうかを判断するために、これらの値を使用する(ファイルの状態が@var{time-flag}のそれとマッチする場合のみ未変更とマーク)。"

#. type: item
#: original_texis/text.texi:1322
#, no-wrap
msgid "(nil @var{property} @var{value} @var{beg} . @var{end})"
msgstr "(nil @var{property} @var{value} @var{beg} . @var{end})"

#. type: table
#: original_texis/text.texi:1325
msgid "This kind of element records a change in a text property.  Here's how you might undo the change:"
msgstr "この種の要素はテキストプロパティの変更を記録する。変更をundoする方法は以下のようになる:"

#. type: example
#: original_texis/text.texi:1328
#, no-wrap
msgid "(put-text-property @var{beg} @var{end} @var{property} @var{value})\n"
msgstr "(put-text-property @var{beg} @var{end} @var{property} @var{value})\n"

#. type: item
#: original_texis/text.texi:1330
#, no-wrap
msgid "(@var{marker} . @var{adjustment})"
msgstr "(@var{marker} . @var{adjustment})"

#. type: table
#: original_texis/text.texi:1337
msgid "This kind of element records the fact that the marker @var{marker} was relocated due to deletion of surrounding text, and that it moved @var{adjustment} character positions.  If the marker's location is consistent with the (@var{text} . @var{position}) element preceding it in the undo list, then undoing this element moves @var{marker} @minus{} @var{adjustment} characters."
msgstr "この種の要素はマーカー@var{marker}がそれを取り囲むテキストの削除により再配置されて、@var{adjustment}文字位置を移動したということを記録する。undoリスト内の前にある要素(@var{text} . @var{position})とマーカーの位置が一致する場合には、この要素をundoすることにより@var{marker} @minus{} @var{adjustment}文字移動する。"

#. type: item
#: original_texis/text.texi:1338
#, no-wrap
msgid "(apply @var{funname} . @var{args})"
msgstr "(apply @var{funname} . @var{args})"

#. type: table
#: original_texis/text.texi:1341
msgid "This is an extensible undo item, which is undone by calling @var{funname} with arguments @var{args}."
msgstr "これは拡張可能なundoアイテムであり、引数@var{args}とともに@var{funname}を呼び出すことによりundoが行われる。"

#. type: item
#: original_texis/text.texi:1342
#, no-wrap
msgid "(apply @var{delta} @var{beg} @var{end} @var{funname} . @var{args})"
msgstr "(apply @var{delta} @var{beg} @var{end} @var{funname} . @var{args})"

#. type: table
#: original_texis/text.texi:1347
msgid "This is an extensible undo item, which records a change limited to the range @var{beg} to @var{end}, which increased the size of the buffer by @var{delta} characters.  It is undone by calling @var{funname} with arguments @var{args}."
msgstr "これは拡張可能なundoアイテムであり、@var{beg}から@var{end}までに限定された範囲にたいして、そのバッファーのサイズを@var{delta}文字増加させる変更を記録する。これは引数@var{args}とともに@var{funname}を呼び出すことによりundoが行われる。"

#. type: table
#: original_texis/text.texi:1350
msgid "This kind of element enables undo limited to a region to determine whether the element pertains to that region."
msgstr "この種の要素は、それがリージョンと関係するか否かを判断することによりリージョンに限定されたundoを有効にする。"

#. type: item
#: original_texis/text.texi:1351
#, no-wrap
msgid "nil"
msgstr "nil"

#. type: table
#: original_texis/text.texi:1356
msgid "This element is a boundary.  The elements between two boundaries are called a @dfn{change group}; normally, each change group corresponds to one keyboard command, and undo commands normally undo an entire group as a unit."
msgstr "この要素は境界(boundary)である。2つの境界の間にある要素を@dfn{変更グループ(change group)}と呼び、それぞれの変更グループは通常1つのキーボードコマンドに対応するとともに、undoコマンドは通常はグループを1つの単位として全体をundoを行う。"

#. type: defun
#: original_texis/text.texi:1358
#, no-wrap
msgid "undo-boundary"
msgstr "undo-boundary"

#. type: defun
#: original_texis/text.texi:1362
msgid "This function places a boundary element in the undo list.  The undo command stops at such a boundary, and successive undo commands undo to earlier and earlier boundaries.  This function returns @code{nil}."
msgstr "この関数はundoリスト内に境界を配置する。このような境界ごとにundoコマンドは停止して、連続するundoコマンドは、より以前の境界へとundoを行っていく。この関数は@code{nil}をリターンする。"

#. type: defun
#: original_texis/text.texi:1367
msgid "Calling this function explicitly is useful for splitting the effects of a command into more than one unit.  For example, @code{query-replace} calls @code{undo-boundary} after each replacement, so that the user can undo individual replacements one by one."
msgstr "この関数を明示的に呼び出すことは、あるコマンドの効果を複数単位に分割するために有用である。たとえば@code{query-replace}はユーザーが個別に置換をundoできるように、それぞれの置換後に@code{undo-boundary}を呼び出している。"

#. type: defun
#: original_texis/text.texi:1370
msgid "Mostly, however, this function is called automatically at an appropriate time."
msgstr "しかしほとんどの場合には、この関数は適切なタイミングで自動的に呼び出される。"

#. type: defun
#: original_texis/text.texi:1372
#, no-wrap
msgid "undo-auto-amalgamate"
msgstr "undo-auto-amalgamate"

#. type: cindex
#: original_texis/text.texi:1373
#, no-wrap
msgid "amalgamating commands, and undo"
msgstr "amalgamating commands, and undo"

#. type: defun
#: original_texis/text.texi:1387
msgid "The editor command loop automatically calls @code{undo-boundary} just before executing each key sequence, so that each undo normally undoes the effects of one command.  A few exceptional commands are @dfn{amalgamating}: these commands generally cause small changes to buffers, so with these a boundary is inserted only every 20th command, allowing the changes to be undone as a group.  By default, the commands @code{self-insert-command}, which produces self-inserting input characters (@pxref{Commands for Insertion}), and @code{delete-char}, which deletes characters (@pxref{Deletion}), are amalgamating.  Where a command affects the contents of several buffers, as may happen, for example, when a function on the @code{post-command-hook} affects a buffer other than the @code{current-buffer}, then @code{undo-boundary} will be called in each of the affected buffers."
msgstr "エディターコマンドループは各アンドゥがが通常はそれぞれ1つのコマンドの効果をアンドゥするように、各キーシーケンスを実行する直前に@code{undo-boundary}を呼び出す。少数の例外は@dfn{融合(amalgamating)}コマンドである。これらのコマンドは一般的にバッファーにたいして小さい変更を発生させるので、変更をグループとしてアンドゥできるように、20回目のコマンドごとに境界が挿入される。デフォルトでは自己挿入入力文字を生成するコマンド@code{self-insert-command} (@ref{Commands for Insertion}を参照)、文字を削除するコマンド@code{delete-char} (@ref{Deletion}を参照)は融合コマンドである。複数バッファーのコンテンツに影響するコマンド、たとえば発生し得るとすれば@code{post-command-hook}上の関数が@code{current-buffer}以外のバッファーに影響を及ぼす場合には、影響を受ける各バッファーごとに@code{undo-boundary}が呼び出されるだろう。"

#. type: defvar
#: original_texis/text.texi:1389
#, no-wrap
msgid "undo-auto-current-boundary-timer"
msgstr "undo-auto-current-boundary-timer"

#. type: defvar
#: original_texis/text.texi:1394
msgid "Some buffers, such as process buffers, can change even when no commands are executing.  In these cases, @code{undo-boundary} is normally called periodically by the timer in this variable.  Setting this variable to non-@code{nil} prevents this behavior."
msgstr "プロセスバッファーのようないくつかのバッファーでは、何もコマンドを実行していなくても変更が発生し得る。このような場合には、通常は@code{undo-boundary}この変数内のタイマーにより定期的に呼び出される。この挙動を抑制するには、この変数を非@code{nil}にセットすること。"

#. type: defvar
#: original_texis/text.texi:1396
#, no-wrap
msgid "undo-in-progress"
msgstr "undo-in-progress"

#. type: defvar
#: original_texis/text.texi:1400
msgid "This variable is normally @code{nil}, but the undo commands bind it to @code{t}.  This is so that various kinds of change hooks can tell when they're being called for the sake of undoing."
msgstr "この変数は通常は@code{nil}だが、undoコマンドはこれを@code{t}にバインドする。これによりさまざまな種類の変更フックがundoにより呼び出された際に、それを告げることが可能になる。"

#. type: defun
#: original_texis/text.texi:1402
#, no-wrap
msgid "primitive-undo count list"
msgstr "primitive-undo count list"

#. type: defun
#: original_texis/text.texi:1406
msgid "This is the basic function for undoing elements of an undo list.  It undoes the first @var{count} elements of @var{list}, returning the rest of @var{list}."
msgstr "これはundoリストの要素のundoにたいする基本的な関数。これは@var{list}の最初の@var{count}要素をundoして@var{list}の残りをリターンする。"

#. type: defun
#: original_texis/text.texi:1413
msgid "@code{primitive-undo} adds elements to the buffer's undo list when it changes the buffer.  Undo commands avoid confusion by saving the undo list value at the beginning of a sequence of undo operations.  Then the undo operations use and update the saved value.  The new elements added by undoing are not part of this saved value, so they don't interfere with continuing to undo."
msgstr "@code{primitive-undo}はバッファー変更時に、そのバッファーのundoリストに要素を追加する。undoコマンドは混乱を避けるためにundo操作シーケンス冒頭にundoリストの値を保存する。その後でundo操作は保存された値の使用と更新を行う。undoにより追加された新たな要素はこの保存値の一部でないので継続するundoと干渉しない。"

#. type: defun
#: original_texis/text.texi:1415
msgid "This function does not bind @code{undo-in-progress}."
msgstr "この関数は@code{undo-in-progress}をバインドしない。"

#. type: section
#: original_texis/text.texi:1418
#, no-wrap
msgid "Maintaining Undo Lists"
msgstr "Maintaining Undo Lists"

#. type: Plain text
#: original_texis/text.texi:1423
msgid "This section describes how to enable and disable undo information for a given buffer.  It also explains how the undo list is truncated automatically so it doesn't get too big."
msgstr "このセクションでは与えられたバッファーにたいしてundo情報を有効や無効にする方法を説明します。undoリストが巨大化しないようにundoリストを切り詰める方法も説明します。"

#. type: Plain text
#: original_texis/text.texi:1429
msgid "Recording of undo information in a newly created buffer is normally enabled to start with; but if the buffer name starts with a space, the undo recording is initially disabled.  You can explicitly enable or disable undo recording with the following two functions, or by setting @code{buffer-undo-list} yourself."
msgstr "新たに作成されたバッファー内のundo情報記録は、通常は開始とともに有効になります。しかしバッファー名がスペースで始まる場合には、undoの記録は初期状態では無効になっています。以下の2つの関数、または自身で@code{buffer-undo-list}をセットすることにより、undo記録の有効化や無効化を明示的に行うことができます。"

#. type: deffn
#: original_texis/text.texi:1430
#, no-wrap
msgid "Command buffer-enable-undo &optional buffer-or-name"
msgstr "Command buffer-enable-undo &optional buffer-or-name"

#. type: deffn
#: original_texis/text.texi:1436
msgid "This command enables recording undo information for buffer @var{buffer-or-name}, so that subsequent changes can be undone.  If no argument is supplied, then the current buffer is used.  This function does nothing if undo recording is already enabled in the buffer.  It returns @code{nil}."
msgstr "このコマンドは以降の変更をundo可能にするように、バッファー@var{buffer-or-name}のundo情報記録を有効にする。引数が与えられなければカレントバッファーを使用する。そのバッファー内のundo記録がすでに有効ならこの関数は何も行わない。リターン値は@code{nil}。"

#. type: deffn
#: original_texis/text.texi:1439
msgid "In an interactive call, @var{buffer-or-name} is the current buffer.  You cannot specify any other buffer."
msgstr "インタラクティブな呼び出しでは@var{buffer-or-name}はカレントバッファーであり、他のバッファーを指定することはできない。"

#. type: deffn
#: original_texis/text.texi:1441
#, no-wrap
msgid "Command buffer-disable-undo &optional buffer-or-name"
msgstr "Command buffer-disable-undo &optional buffer-or-name"

#. type: cindex
#: original_texis/text.texi:1442
#, no-wrap
msgid "disabling undo"
msgstr "disabling undo"

#. type: deffn
#: original_texis/text.texi:1448
msgid "This function discards the undo list of @var{buffer-or-name}, and disables further recording of undo information.  As a result, it is no longer possible to undo either previous changes or any subsequent changes.  If the undo list of @var{buffer-or-name} is already disabled, this function has no effect."
msgstr "この関数は@var{buffer-or-name}のundoリストを破棄して、それ以上のundo情報記録を無効にする。結果として以前の変更と以後のすべての変更にたいするそれ以上のundoは不可能になる。@var{buffer-or-name}のundoリストがすでに無効ならこの関数に効果はない。"

#. type: deffn
#: original_texis/text.texi:1451
msgid "In an interactive call, BUFFER-OR-NAME is the current buffer.  You cannot specify any other buffer.  This function returns @code{nil}."
msgstr "インタラクティブな呼び出しではBUFFER-OR-NAMEはカレントバッファー。他のバッファーを指定することはできない。リターン値は@code{nil}。"

#. type: Plain text
#: original_texis/text.texi:1462
msgid "As editing continues, undo lists get longer and longer.  To prevent them from using up all available memory space, garbage collection trims them back to size limits you can set.  (For this purpose, the size of an undo list measures the cons cells that make up the list, plus the strings of deleted text.)  Three variables control the range of acceptable sizes: @code{undo-limit}, @code{undo-strong-limit} and @code{undo-outer-limit}.  In these variables, size is counted as the number of bytes occupied, which includes both saved text and other data."
msgstr "編集が継続されるにつれてundoリストは次第に長くなっていきます。利用可能なメモリー空間すべてを使い尽くすのを防ぐために、ガベージコレクションがundoリストを設定可能な制限サイズに切り詰めて戻します(この目的のためにundoリストのサイズはリストを構成するコンスセルに加えて削除された文字列により算出される)。@code{undo-limit}、@code{undo-strong-limit}、@code{undo-outer-limit}の3つの変数は、許容できるサイズの範囲を制御します。これらの変数においてサイズは専有するバイト数で計数され、それには保存されたテキストとその他データが含まれます。"

#. type: defopt
#: original_texis/text.texi:1463
#, no-wrap
msgid "undo-limit"
msgstr "undo-limit"

#. type: defopt
#: original_texis/text.texi:1466
msgid "This is the soft limit for the acceptable size of an undo list.  The change group at which this size is exceeded is the last one kept."
msgstr "これは許容できるundoリストサイズのソフトリミット。このサイズを超過した箇所の変更グループは最新の変更グループ1つが保持される。"

#. type: defopt
#: original_texis/text.texi:1468
#, no-wrap
msgid "undo-strong-limit"
msgstr "undo-strong-limit"

#. type: defopt
#: original_texis/text.texi:1473
msgid "This is the upper limit for the acceptable size of an undo list.  The change group at which this size is exceeded is discarded itself (along with all older change groups).  There is one exception: the very latest change group is only discarded if it exceeds @code{undo-outer-limit}."
msgstr "これはundoリストの許容できるサイズの上限。このサイズを超過する箇所の変更グループは(その他すべてのより古い変更グループとともに)自身を破棄する。1つ例外があり@code{undo-outer-limit}を超過すると最新の変更グループだけが破棄される。"

#. type: defopt
#: original_texis/text.texi:1475
#, no-wrap
msgid "undo-outer-limit"
msgstr "undo-outer-limit"

#. type: defopt
#: original_texis/text.texi:1479
msgid "If at garbage collection time the undo info for the current command exceeds this limit, Emacs discards the info and displays a warning.  This is a last ditch limit to prevent memory overflow."
msgstr "ガベージコレクション時にカレントコマンドのundo情報がこの制限を超過したら、Emacsはその情報を破棄して警告を表示する。これはメモリーオーバーフローを防ぐための最後の回避用リミットである。"

#. type: defopt
#: original_texis/text.texi:1481
#, no-wrap
msgid "undo-ask-before-discard"
msgstr "undo-ask-before-discard"

#. type: defopt
#: original_texis/text.texi:1486
msgid "If this variable is non-@code{nil}, when the undo info exceeds @code{undo-outer-limit}, Emacs asks in the echo area whether to discard the info.  The default value is @code{nil}, which means to discard it automatically."
msgstr "この変数が非@code{nil}ならundo情報の@code{undo-outer-limit}超過時に、Emacsはその情報を破棄するかどうかをエコーエリアで尋ねる。デフォルト値は@code{nil}でこれは自動的な破棄を意味する。"

#. type: defopt
#: original_texis/text.texi:1490
msgid "This option is mainly intended for debugging.  Garbage collection is inhibited while the question is asked, which means that Emacs might leak memory if the user waits too long before answering the question."
msgstr "このオプションは主にデバッグを意図している。これを尋ねる際にはガベージコレクションは抑制されており、もしユーザーがその問にたいして答えるのをあまりに長くかかるなら、Emacsがメモリーリークを起こすかもしれないことを意味する。"

#. type: cindex
#: original_texis/text.texi:1494
#, no-wrap
msgid "filling text"
msgstr "filling text"

#. type: Plain text
#: original_texis/text.texi:1502
msgid "@dfn{Filling} means adjusting the lengths of lines (by moving the line breaks) so that they are nearly (but no greater than) a specified maximum width.  Additionally, lines can be @dfn{justified}, which means inserting spaces to make the left and/or right margins line up precisely.  The width is controlled by the variable @code{fill-column}.  For ease of reading, lines should be no longer than 70 or so columns."
msgstr "@dfn{フィル(fill: 充填)}とは、指定された最大幅付近(ただし超過せず)に、(行ブレークを移動することにより)行の長さを調整することを意味します。加えて複数行を@dfn{位置揃え(justify)}することもできます。位置揃えとはスペースを挿入して左および/または右マージンを正確に整列させることを意味します。その幅は変数@code{fill-column}により制御されます。読みやすくするために行の長さは70列程度を超えないようにするべきです。"

#. type: Plain text
#: original_texis/text.texi:1506
msgid "You can use Auto Fill mode (@pxref{Auto Filling}) to fill text automatically as you insert it, but changes to existing text may leave it improperly filled.  Then you must fill the text explicitly."
msgstr "テキストの挿入とともに自動的にテキストをフィルするAuto Fillモードを使用できますが、既存テキストの変更では不適切にフィルされたままになるかもしれません。その場合にはテキストを明示的にフィルしなければなりません。"

#. type: Plain text
#: original_texis/text.texi:1512
msgid "Most of the commands in this section return values that are not meaningful.  All the functions that do filling take note of the current left margin, current right margin, and current justification style (@pxref{Margins}).  If the current justification style is @code{none}, the filling functions don't actually do anything."
msgstr "このセクションのコマンドのほとんどは有意な値をリターンしません。フィルを行うすべての関数はカレント左マージン、カレント右マージン、カレント位置揃えスタイルに留意します(@ref{Margins}を参照)。カレント位置揃えスタイルが@code{none}なら、フィル関数は実際には何も行いません。"

#. type: Plain text
#: original_texis/text.texi:1520
msgid "Several of the filling functions have an argument @var{justify}.  If it is non-@code{nil}, that requests some kind of justification.  It can be @code{left}, @code{right}, @code{full}, or @code{center}, to request a specific style of justification.  If it is @code{t}, that means to use the current justification style for this part of the text (see @code{current-justification}, below).  Any other value is treated as @code{full}."
msgstr "フィル関数のいくつかは引数@var{justify}を受け取ります。これが非@code{nil}なら、それは何らかの類の位置揃えを要求します。特定の位置揃えスタイルを要求するために@code{left}、@code{right}、@code{full}、@code{center}を指定できます。これが@code{t}なら、それはそのテキスト部分にたいしてカレント位置揃えスタイルを使用することを意味します(以下の@code{current-justification}を参照)。その他すべての値は@code{full}として扱われます。"

#. type: Plain text
#: original_texis/text.texi:1523
msgid "When you call the filling functions interactively, using a prefix argument implies the value @code{full} for @var{justify}."
msgstr "インタラクティブにフィル関数を呼び出すには際、プレフィクス引数の使用は@var{justify}にたいして暗に値@code{full}を指定します。"

#. type: deffn
#: original_texis/text.texi:1524
#, no-wrap
msgid "Command fill-paragraph &optional justify region"
msgstr "Command fill-paragraph &optional justify region"

#. type: deffn
#: original_texis/text.texi:1529
msgid "This command fills the paragraph at or after point.  If @var{justify} is non-@code{nil}, each line is justified as well.  It uses the ordinary paragraph motion commands to find paragraph boundaries.  @xref{Paragraphs,,, emacs, The GNU Emacs Manual}."
msgstr "このコマンドはポイント位置、またはその後のパラグラフ(paragraph: 段落)をフィルする。@var{justify}が非@code{nil}なら、同様に各行が位置揃えされる。これはパラグラフ境界を探すために、通常のパラグラフ移動コマンドを使用する。@ref{Paragraphs,,, emacs, The GNU Emacs Manual}を参照のこと。"

#. type: deffn
#: original_texis/text.texi:1535
msgid "When @var{region} is non-@code{nil}, then if Transient Mark mode is enabled and the mark is active, this command calls @code{fill-region} to fill all the paragraphs in the region, instead of filling only the current paragraph.  When this command is called interactively, @var{region} is @code{t}."
msgstr "もし@var{region}が非@code{nil}で、Transient Markモードが有効かつマークがアクティブなら、このコマンドはカレントパラグラフのみフィルするかわりに、リージョン内すべてのパラグラフをフィルするためにコマンド@code{fill-region}を呼び出す。このコマンドがインタラクティブに呼び出された際は、@var{region}は@code{t}。"

#. type: deffn
#: original_texis/text.texi:1537
#, no-wrap
msgid "Command fill-region start end &optional justify nosqueeze to-eop"
msgstr "Command fill-region start end &optional justify nosqueeze to-eop"

#. type: deffn
#: original_texis/text.texi:1541
msgid "This command fills each of the paragraphs in the region from @var{start} to @var{end}.  It justifies as well if @var{justify} is non-@code{nil}."
msgstr "このコマンドは@var{start}から@var{end}のリージョン内のすべてのパラグラフをフィルする。@var{justify}が非@code{nil}なら同様に位置揃えも行う。"

#. type: deffn
#: original_texis/text.texi:1546
msgid "If @var{nosqueeze} is non-@code{nil}, that means to leave whitespace other than line breaks untouched.  If @var{to-eop} is non-@code{nil}, that means to keep filling to the end of the paragraph---or the next hard newline, if @code{use-hard-newlines} is enabled (see below)."
msgstr "@var{nosqueeze}が非@code{nil}なら、それは行ブレーク以外の空白文字を残すことを意味する。@var{to-eop}が非@code{nil}なら、それはパラグラフ終端(以下の@code{use-hard-newlines}が有効なら次のhard改行)までのフィルを維持することを意味する。"

#. type: deffn
#: original_texis/text.texi:1549
msgid "The variable @code{paragraph-separate} controls how to distinguish paragraphs.  @xref{Standard Regexps}."
msgstr "変数@code{paragraph-separate}はパラグラフを分割する方法を制御する。@ref{Standard Regexps}を参照のこと。"

#. type: deffn
#: original_texis/text.texi:1551
#, no-wrap
msgid "Command fill-individual-paragraphs start end &optional justify citation-regexp"
msgstr "Command fill-individual-paragraphs start end &optional justify citation-regexp"

#. type: deffn
#: original_texis/text.texi:1556
msgid "This command fills each paragraph in the region according to its individual fill prefix.  Thus, if the lines of a paragraph were indented with spaces, the filled paragraph will remain indented in the same fashion."
msgstr "このコマンドはリージョン内の各パラグラフを、それの固有なフィルプレフィクスに応じてフィルする。したがってパラグラフの行がスペースでインデントされていれば、フィルされたパラグラフは同じ様式でインデントされた状態に保たれるだろう。"

#. type: deffn
#: original_texis/text.texi:1566
msgid "The first two arguments, @var{start} and @var{end}, are the beginning and end of the region to be filled.  The third and fourth arguments, @var{justify} and @var{citation-regexp}, are optional.  If @var{justify} is non-@code{nil}, the paragraphs are justified as well as filled.  If @var{citation-regexp} is non-@code{nil}, it means the function is operating on a mail message and therefore should not fill the header lines.  If @var{citation-regexp} is a string, it is used as a regular expression; if it matches the beginning of a line, that line is treated as a citation marker."
msgstr "最初の2つの引数@var{start}と@var{end}はフィルするリージョンの先頭と終端。3つ目の引数@var{justify}、4つ目の引数@var{citation-regexp}はオプション。@var{justify}が非@code{nil}なら、そのパラグラフはフィルと同様に位置揃えも行われる。@var{citation-regexp}が非@code{nil}なら、それはこの関数がメールメッセージを処理しているのでヘッダーラインをフィルするべきではないことを意味する。@var{citation-regexp}が文字列なら、それは正規表現として扱われる。それが行の先頭にマッチすれば、その行は引用マーカー(citation marker)として扱われる。"

#. type: deffn
#: original_texis/text.texi:1573
msgid "Ordinarily, @code{fill-individual-paragraphs} regards each change in indentation as starting a new paragraph.  If @code{fill-individual-varying-indent} is non-@code{nil}, then only separator lines separate paragraphs.  That mode can handle indented paragraphs with additional indentation on the first line."
msgstr "@code{fill-individual-paragraphs}は通常はインデントの変更を新たなパラグラフの開始とみなす。@code{fill-individual-varying-indent}が非@code{nil}ならセパレーターラインだけがパラグラフを分割する。その場合には、最初の行からさらにインデントが追加されたパラグラフを処理することが可能になる。"

#. type: defopt
#: original_texis/text.texi:1575
#, no-wrap
msgid "fill-individual-varying-indent"
msgstr "fill-individual-varying-indent"

#. type: defopt
#: original_texis/text.texi:1578
msgid "This variable alters the action of @code{fill-individual-paragraphs} as described above."
msgstr "この変数は上述のように@code{fill-individual-paragraphs}の動作を変更する。"

#. type: deffn
#: original_texis/text.texi:1580
#, no-wrap
msgid "Command fill-region-as-paragraph start end &optional justify nosqueeze squeeze-after"
msgstr "Command fill-region-as-paragraph start end &optional justify nosqueeze squeeze-after"

#. type: deffn
#: original_texis/text.texi:1585
msgid "This command considers a region of text as a single paragraph and fills it.  If the region was made up of many paragraphs, the blank lines between paragraphs are removed.  This function justifies as well as filling when @var{justify} is non-@code{nil}."
msgstr "このコマンドはテキストのリージョンを1つのパラグラフとみなしてそれをフィルする。そのリージョンが多数のパラグラフから構成されていたらパラグラフ間の空行は削除される。@var{justify}が非@code{nil}ならフィルとともに位置揃えも行う。"

#. type: deffn
#: original_texis/text.texi:1590
msgid "If @var{nosqueeze} is non-@code{nil}, that means to leave whitespace other than line breaks untouched.  If @var{squeeze-after} is non-@code{nil}, it specifies a position in the region, and means don't canonicalize spaces before that position."
msgstr "@var{nosqueeze}が非@code{nil}なら、それは改行以外の空白に手を加えずに残すことを意味する。@var{squeeze-after}が非@code{nil}なら、それはリージョン内の位置を指定して、その位置より前にあるスペースについては標準化を行わないことを意味する。"

#. type: deffn
#: original_texis/text.texi:1593
msgid "In Adaptive Fill mode, this command calls @code{fill-context-prefix} to choose a fill prefix by default.  @xref{Adaptive Fill}."
msgstr "Adaptive Fillモードでは、このコマンドはフィルプレフィクスを選択するためにデフォルトで@code{fill-context-prefix}を呼び出す。@ref{Adaptive Fill}を参照のこと。"

#. type: deffn
#: original_texis/text.texi:1595
#, no-wrap
msgid "Command justify-current-line &optional how eop nosqueeze"
msgstr "Command justify-current-line &optional how eop nosqueeze"

#. type: deffn
#: original_texis/text.texi:1599
msgid "This command inserts spaces between the words of the current line so that the line ends exactly at @code{fill-column}.  It returns @code{nil}."
msgstr "このコマンドはその行が正確に@code{fill-column}で終わるように単語間にスペースを挿入する。リターン値は@code{nil}。"

#. type: deffn
#: original_texis/text.texi:1605
msgid "The argument @var{how}, if non-@code{nil} specifies explicitly the style of justification.  It can be @code{left}, @code{right}, @code{full}, @code{center}, or @code{none}.  If it is @code{t}, that means to do follow specified justification style (see @code{current-justification}, below).  @code{nil} means to do full justification."
msgstr "引数@var{how}が非@code{nil}なら、それは位置揃えスタイルを明示的に指定する。指定できる値は@code{left}、@code{right}、@code{full}、@code{center}、または@code{none}。値が@code{t}なら、それは指定済みの位置揃えスタイル(以下の@code{current-justification}を参照)にしたがうことを意味する。@code{nil}は位置揃え@code{full}と同じ。"

#. type: deffn
#: original_texis/text.texi:1610
msgid "If @var{eop} is non-@code{nil}, that means do only left-justification if @code{current-justification} specifies full justification.  This is used for the last line of a paragraph; even if the paragraph as a whole is fully justified, the last line should not be."
msgstr "@var{eop}が非@code{nil}なら、それは@code{current-justification}がfull位置揃えを指定する場合にleft位置揃えだけを行うことを意味する。これはパラグラフ最終行にたいして使用される。パラグラフ全体がfull位置揃えだったとしても最終行はfull位置揃えであるべきではない。"

#. type: deffn
#: original_texis/text.texi:1613
msgid "If @var{nosqueeze} is non-@code{nil}, that means do not change interior whitespace."
msgstr "@var{nosqueeze}が非@code{nil}なら、それは内部のスペースを変更しないことを意味する。"

#. type: defopt
#: original_texis/text.texi:1615
#, no-wrap
msgid "default-justification"
msgstr "default-justification"

#. type: defopt
#: original_texis/text.texi:1620
msgid "This variable's value specifies the style of justification to use for text that doesn't specify a style with a text property.  The possible values are @code{left}, @code{right}, @code{full}, @code{center}, or @code{none}.  The default value is @code{left}."
msgstr "この変数の値は位置揃えに使用するスタイルをテキストプロパティで指定しないテキストにたいするスタイルを指定する。可能な値は@code{left}、@code{right}、@code{full}、@code{center}、または@code{none}。デフォルト値は@code{left}。"

#. type: defun
#: original_texis/text.texi:1622
#, no-wrap
msgid "current-justification"
msgstr "current-justification"

#. type: defun
#: original_texis/text.texi:1625
msgid "This function returns the proper justification style to use for filling the text around point."
msgstr "この関数はポイント周辺のフィルに使用するための適正な位置揃えスタイルをリターンする。"

#. type: defun
#: original_texis/text.texi:1630
msgid "This returns the value of the @code{justification} text property at point, or the variable @var{default-justification} if there is no such text property.  However, it returns @code{nil} rather than @code{none} to mean ``don't justify''."
msgstr "これはポイント位置のテキストプロパティ@code{justification}の値、そのようなテキストプロパティが存在しなければ変数@var{default-justification}の値をリターンする。しかし、``位置揃えなし''の場合には、@code{none}ではなく@code{nil}をリターンする。"

#. type: defopt
#: original_texis/text.texi:1632
#, no-wrap
msgid "sentence-end-double-space"
msgstr "sentence-end-double-space"

#. type: anchor{#1}
#: original_texis/text.texi:1637
msgid "Definition of sentence-end-double-space"
msgstr "Definition of sentence-end-double-space"

#. type: defopt
#: original_texis/text.texi:1637
msgid "If this variable is non-@code{nil}, a period followed by just one space does not count as the end of a sentence, and the filling functions avoid breaking the line at such a place."
msgstr "この変数が非@code{nil}ならピリオドの後の単一のスペースをセンテンスの終わりとみなさず、フィル関数はそのような箇所でのラインブレークを行わない。"

#. type: defopt
#: original_texis/text.texi:1639
#, no-wrap
msgid "sentence-end-without-period"
msgstr "sentence-end-without-period"

#. type: defopt
#: original_texis/text.texi:1643
msgid "If this variable is non-@code{nil}, a sentence can end without a period.  This is used for languages like Thai, where sentences end with a double space but without a period."
msgstr "この変数が非@code{nil}なら、ピリオドなしでセンテンスは終了できる。これはたとえばピリオドなしの2連スペースでセンテンスが終わるタイ語などに使用される。"

#. type: defopt
#: original_texis/text.texi:1645
#, no-wrap
msgid "sentence-end-without-space"
msgstr "sentence-end-without-space"

#. type: defopt
#: original_texis/text.texi:1648
msgid "If this variable is non-@code{nil}, it should be a string of characters that can end a sentence without following spaces."
msgstr "この変数が非@code{nil}なら、それは後にスペースをともなうことなくセンテンスを終了させ得る文字列であること。"

#. type: defvar
#: original_texis/text.texi:1650
#, no-wrap
msgid "fill-paragraph-function"
msgstr "fill-paragraph-function"

#. type: defvar
#: original_texis/text.texi:1656
msgid "This variable provides a way to override the filling of paragraphs.  If its value is non-@code{nil}, @code{fill-paragraph} calls this function to do the work.  If the function returns a non-@code{nil} value, @code{fill-paragraph} assumes the job is done, and immediately returns that value."
msgstr "この変数はパラグラフのフィルをオーバーライドする手段を提供する。この値が非@code{nil}なら、@code{fill-paragraph}はその処理を行うためにその関数を呼び出す。その関数が非@code{nil}値をリターンすると、@code{fill-paragraph}は処理が終了したとみなして即座にその値をリターンする。"

#. type: defvar
#: original_texis/text.texi:1660
msgid "The usual use of this feature is to fill comments in programming language modes.  If the function needs to fill a paragraph in the usual way, it can do so as follows:"
msgstr "この機能の通常の用途はプログラミング言語のモードにおいてコメントをフィルすることである。通常の方法でその関数がパラグラフをフィルする必要があるなら、以下のようにそれを行うことができる:"

#. type: example
#: original_texis/text.texi:1664
#, no-wrap
msgid ""
"(let ((fill-paragraph-function nil))\n"
"  (fill-paragraph arg))\n"
msgstr ""
"(let ((fill-paragraph-function nil))\n"
"  (fill-paragraph arg))\n"

#. type: defvar
#: original_texis/text.texi:1667
#, no-wrap
msgid "fill-forward-paragraph-function"
msgstr "fill-forward-paragraph-function"

#. type: defvar
#: original_texis/text.texi:1676
msgid "This variable provides a way to override how the filling functions, such as @code{fill-region} and @code{fill-paragraph}, move forward to the next paragraph.  Its value should be a function, which is called with a single argument @var{n}, the number of paragraphs to move, and should return the difference between @var{n} and the number of paragraphs actually moved.  The default value of this variable is @code{forward-paragraph}.  @xref{Paragraphs,,, emacs, The GNU Emacs Manual}."
msgstr "この変数は@code{fill-region}や@code{fill-paragraph}のようなフィル関数が次のパラグラフへ前方に移動する方法をオーバーライドするための手段を提供する。値は移動するパラグラフの数@var{n}を唯一の引数として呼び出される関数であり、@var{n}と実際に移動したパラグラフ数の差をリターンすること。この変数のデフォルト値は@code{forward-paragraph}。@ref{Paragraphs,,, emacs, The GNU Emacs Manual}を参照のこと。"

#. type: defvar
#: original_texis/text.texi:1678
#, no-wrap
msgid "use-hard-newlines"
msgstr "use-hard-newlines"

#. type: defvar
#: original_texis/text.texi:1683
msgid "If this variable is non-@code{nil}, the filling functions do not delete newlines that have the @code{hard} text property.  These hard newlines act as paragraph separators.  @xref{Hard and Soft Newlines,, Hard and Soft Newlines, emacs, The GNU Emacs Manual}."
msgstr "この変数が非@code{nil}なら、フィル関数はテキストプロパティ@code{hard}をもつ改行を削除しない。これらのhard改行、パラグラフのセパレーターとして機能する。@ref{Hard and Soft Newlines,, Hard and Soft Newlines, emacs, The GNU Emacs Manual}を参照のこと。"

#. type: section
#: original_texis/text.texi:1686
#, no-wrap
msgid "Margins for Filling"
msgstr "Margins for Filling"

#. type: cindex
#: original_texis/text.texi:1687
#, no-wrap
msgid "margins, filling"
msgstr "margins, filling"

#. type: defopt
#: original_texis/text.texi:1689
#, no-wrap
msgid "fill-prefix"
msgstr "fill-prefix"

#. type: defopt
#: original_texis/text.texi:1698
msgid "This buffer-local variable, if non-@code{nil}, specifies a string of text that appears at the beginning of normal text lines and should be disregarded when filling them.  Any line that fails to start with the fill prefix is considered the start of a paragraph; so is any line that starts with the fill prefix followed by additional whitespace.  Lines that start with the fill prefix but no additional whitespace are ordinary text lines that can be filled together.  The resulting filled lines also start with the fill prefix."
msgstr "このバッファーローカル変数が非@code{nil}なら、それは通常のテキスト行の先頭に出現して、それらのテキスト行をフィルする際には無視されるべきテキスト文字列を指定する。そのフィルプレフィクスで始まらない行はパラグラフの開始とみなされ、フィルプレフィクスで始まる行はその後にスペースが追加される。フィルプレフィクスで始まりその後に追加のスペースがない行はフィル可能な通常のテキスト行。結果となるフィル済みの行もフィルプレフィクスで開始される。"

#. type: defopt
#: original_texis/text.texi:1700
msgid "The fill prefix follows the left margin whitespace, if any."
msgstr "もしあればフィルプレフィクスは左マージンのスペースの後になる。"

#. type: defopt
#: original_texis/text.texi:1702
#, no-wrap
msgid "fill-column"
msgstr "fill-column"

#. type: defopt
#: original_texis/text.texi:1707
msgid "This buffer-local variable specifies the maximum width of filled lines.  Its value should be an integer, which is a number of columns.  All the filling, justification, and centering commands are affected by this variable, including Auto Fill mode (@pxref{Auto Filling})."
msgstr "このバッファーローカル変数はフィルされる行の最大幅を指定する。値は列数を表す整数であること。Auto Fillモード(@ref{Auto Filling}を参照)を含むフィル、位置揃え、センタリングを行うすべてのコマンドがこの変数の影響を受ける。"

#. type: defopt
#: original_texis/text.texi:1712
msgid "As a practical matter, if you are writing text for other people to read, you should set @code{fill-column} to no more than 70.  Otherwise the line will be too long for people to read comfortably, and this can make the text seem clumsy."
msgstr "実際の問題として他の人が読むためのテキストを記述する場合には、@code{fill-column}を70より大きくするべきではない。これにしたがわないと人が快適に読むには行が長くなり過ぎてしまい、下手に記述されたテキストに見えてしまうだろう。"

#. type: defopt
#: original_texis/text.texi:1714
msgid "The default value for @code{fill-column} is 70."
msgstr "@code{fill-column}のデフォルト値は70。"

#. type: deffn
#: original_texis/text.texi:1716
#, no-wrap
msgid "Command set-left-margin from to margin"
msgstr "Command set-left-margin from to margin"

#. type: deffn
#: original_texis/text.texi:1720
msgid "This sets the @code{left-margin} property on the text from @var{from} to @var{to} to the value @var{margin}.  If Auto Fill mode is enabled, this command also refills the region to fit the new margin."
msgstr "これは@var{from}から@var{to}のテキストの@code{left-margin}プロパティに値@var{margin}をセットする。Auto Fillモードが有効なら、このコマンドは新たなマージンにフィットするようにリージョンの再フィルも行う。"

#. type: deffn
#: original_texis/text.texi:1722
#, no-wrap
msgid "Command set-right-margin from to margin"
msgstr "Command set-right-margin from to margin"

#. type: deffn
#: original_texis/text.texi:1726
msgid "This sets the @code{right-margin} property on the text from @var{from} to @var{to} to the value @var{margin}.  If Auto Fill mode is enabled, this command also refills the region to fit the new margin."
msgstr "これは@var{from}から@var{to}のテキストの@code{right-margin}プロパティに値@var{margin}をセットする。Auto Fillモードが有効なら、このコマンドは新たなマージンにフィットするようにリージョンの再フィルも行う。"

#. type: defun
#: original_texis/text.texi:1728
#, no-wrap
msgid "current-left-margin"
msgstr "current-left-margin"

#. type: defun
#: original_texis/text.texi:1733
msgid "This function returns the proper left margin value to use for filling the text around point.  The value is the sum of the @code{left-margin} property of the character at the start of the current line (or zero if none), and the value of the variable @code{left-margin}."
msgstr "この関数はポイント周辺をフィルするために使用する、適切な左マージン値をリターンする。値はカレント行開始文字の@code{left-margin}プロパティの値(なければ0)と変数@code{left-margin}の値の合計。"

#. type: defun
#: original_texis/text.texi:1735
#, no-wrap
msgid "current-fill-column"
msgstr "current-fill-column"

#. type: defun
#: original_texis/text.texi:1740
msgid "This function returns the proper fill column value to use for filling the text around point.  The value is the value of the @code{fill-column} variable, minus the value of the @code{right-margin} property of the character after point."
msgstr "この関数はポイント周辺のテキストをフィルするために使用する、適切なフィル列値をリターンする。値は変数@code{fill-column}からポイント後の文字の@code{right-margin}プロパティの値を減じた値。"

#. type: deffn
#: original_texis/text.texi:1742
#, no-wrap
msgid "Command move-to-left-margin &optional n force"
msgstr "Command move-to-left-margin &optional n force"

#. type: deffn
#: original_texis/text.texi:1747
msgid "This function moves point to the left margin of the current line.  The column moved to is determined by calling the function @code{current-left-margin}.  If the argument @var{n} is non-@code{nil}, @code{move-to-left-margin} moves forward @var{n}@minus{}1 lines first."
msgstr "この関数はカレント行の左マージンにポイントを移動する。移動先の列は関数@code{current-left-margin}により決定される。引数@var{n}が非@code{nil}なら、まず@code{move-to-left-margin}は@var{n}行前方に移動する。"

#. type: deffn
#: original_texis/text.texi:1750
msgid "If @var{force} is non-@code{nil}, that says to fix the line's indentation if that doesn't match the left margin value."
msgstr "@var{force}が非@code{nil}なら、それは行のインデントが左マージン値とマッチしなければインデントを修正するように指定する。"

#. type: defun
#: original_texis/text.texi:1752
#, no-wrap
msgid "delete-to-left-margin &optional from to"
msgstr "delete-to-left-margin &optional from to"

#. type: defun
#: original_texis/text.texi:1758
msgid "This function removes left margin indentation from the text between @var{from} and @var{to}.  The amount of indentation to delete is determined by calling @code{current-left-margin}.  In no case does this function delete non-whitespace.  If @var{from} and @var{to} are omitted, they default to the whole buffer."
msgstr "この関数は@var{from}から@var{to}の間のテキストから左マージンのインデントを取り除く。削除するインデントの量は@code{current-left-margin}を呼び出すことにより決定される。この関数が非空白文字を削除することはない。@var{from}と@var{to}が省略された場合のデフォルトはそのバッファー全体。"

#. type: defun
#: original_texis/text.texi:1760
#, no-wrap
msgid "indent-to-left-margin"
msgstr "indent-to-left-margin"

#. type: defun
#: original_texis/text.texi:1765
msgid "This function adjusts the indentation at the beginning of the current line to the value specified by the variable @code{left-margin}.  (That may involve either inserting or deleting whitespace.)  This function is value of @code{indent-line-function} in Paragraph-Indent Text mode."
msgstr "この関数はカレント行の先頭のインデントを変数@code{left-margin}に指定された値に調整する(これにより空白文字の挿入や削除が起こるかもしれない)。Paragraph-Indent Textモード内の変数@code{indent-line-function}の値はこの関数。"

#. type: item
#: original_texis/text.texi:1767 original_texis/text.texi:3557
#, no-wrap
msgid "left-margin"
msgstr "left-margin"

#. type: defopt
#: original_texis/text.texi:1771
msgid "This variable specifies the base left margin column.  In Fundamental mode, @key{RET} indents to this column.  This variable automatically becomes buffer-local when set in any fashion."
msgstr "この変数は左マージンの基本列を指定する。Fundamentalモードでは、@key{RET}はこの列にインデントする。この変数は手段の如何を問わずセットされると自動的にバッファーローカルになる。"

#. type: defopt
#: original_texis/text.texi:1773
#, no-wrap
msgid "fill-nobreak-predicate"
msgstr "fill-nobreak-predicate"

#. type: defopt
#: original_texis/text.texi:1780
msgid "This variable gives major modes a way to specify not to break a line at certain places.  Its value should be a list of functions.  Whenever filling considers breaking the line at a certain place in the buffer, it calls each of these functions with no arguments and with point located at that place.  If any of the functions returns non-@code{nil}, then the line won't be broken there."
msgstr "この変数はメジャーモードにたいして、特定の箇所で行ブレークしないように指定する手段を提供する。値は関数のリストであること。フィルがバッファー内の特定箇所で行ブレークすると判断されるときは、常にその箇所にポイントを置いた状態でこれらの関数を引数なしで呼び出す。これらの関数のいずれかが非@code{nil}をリターンすると、その行のその箇所では行ブレークしない。"

#. type: section
#: original_texis/text.texi:1783
#, no-wrap
msgid "Adaptive Fill Mode"
msgstr "Adaptive Fill Mode"

#. type: Plain text
#: original_texis/text.texi:1792
msgid "When @dfn{Adaptive Fill Mode} is enabled, Emacs determines the fill prefix automatically from the text in each paragraph being filled rather than using a predetermined value.  During filling, this fill prefix gets inserted at the start of the second and subsequent lines of the paragraph as described in @ref{Filling}, and in @ref{Auto Filling}."
msgstr "@dfn{Adaptive Fillモード}が有効なとき、Emacsは事前定義された値を使用するのではなく、フィルされる各パラグラフのテキストから自動的にフィルプレフィクスを決定します。@ref{Filling}と@ref{Auto Filling}で説明されているように、このフィルプレフィクスはフィルの間にそのパラグラフの2行目以降の行頭に挿入されます。"

#. type: defopt
#: original_texis/text.texi:1793
#, no-wrap
msgid "adaptive-fill-mode"
msgstr "adaptive-fill-mode"

#. type: defopt
#: original_texis/text.texi:1796
msgid "Adaptive Fill mode is enabled when this variable is non-@code{nil}.  It is @code{t} by default."
msgstr "この変数が非@code{nil}ならAdaptive Fillモードは有効。デフォルトは@code{t}。"

#. type: defun
#: original_texis/text.texi:1798
#, no-wrap
msgid "fill-context-prefix from to"
msgstr "fill-context-prefix from to"

#. type: defun
#: original_texis/text.texi:1807
msgid "This function implements the heart of Adaptive Fill mode; it chooses a fill prefix based on the text between @var{from} and @var{to}, typically the start and end of a paragraph.  It does this by looking at the first two lines of the paragraph, based on the variables described below."
msgstr "この関数はAdaptive Fillモード実装の肝である。これは@var{from}から@var{to}、通常はパラグラフの開始から終了にあるテキストにもとづいてフィルプレフィクスを選択する。これは以下で説明する変数にもとづき、そのパラグラフの最初の2行を調べることによりこれを行う。"

#. type: defun
#: original_texis/text.texi:1813
msgid "Usually, this function returns the fill prefix, a string.  However, before doing this, the function makes a final check (not specially mentioned in the following) that a line starting with this prefix wouldn't look like the start of a paragraph.  Should this happen, the function signals the anomaly by returning @code{nil} instead."
msgstr "この関数は通常は文字列としてフィルプレフィクスをリターンする。しかしこれを行う前に、この関数はそのプレフィクスで始まる行がパラグラフの開始とは見えないだろうか、最終チェックを行う(以降では特に明記しない)。これが発生した場合には、この関数はかわりに@code{nil}をリターンすることにより異常を通知する。"

#. type: defun
#: original_texis/text.texi:1815
msgid "In detail, @code{fill-context-prefix} does this:"
msgstr "以下は@code{fill-context-prefix}が行う詳細:"

#. type: enumerate
#: original_texis/text.texi:1823
msgid "It takes a candidate for the fill prefix from the first line---it tries first the function in @code{adaptive-fill-function} (if any), then the regular expression @code{adaptive-fill-regexp} (see below).  The first non-@code{nil} result of these, or the empty string if they're both @code{nil}, becomes the first line's candidate."
msgstr "1行目からフィルプレフィクス候補を取得するために、(もしあれば)まず@code{adaptive-fill-function}内の関数、次に@code{adaptive-fill-regexp} (以下参照)の正規表現を試みる。これらの非@code{nil}の最初の結果、いずれも@code{nil}なら空文字列が1行目の候補となる。"

#. type: enumerate
#: original_texis/text.texi:1828
msgid "If the paragraph has as yet only one line, the function tests the validity of the prefix candidate just found.  The function then returns the candidate if it's valid, or a string of spaces otherwise.  (see the description of @code{adaptive-fill-first-line-regexp} below)."
msgstr "そのパラグラフが1行だけなら、関数は見つかったプレフィクス候補の妥当性をテストする。その後でこの関数はそれが妥当ならその候補を、それ以外はスペース文字列をリターンする(以下の@code{adaptive-fill-first-line-regexp}の説明を参照)。"

#. type: enumerate
#: original_texis/text.texi:1832
msgid "When the paragraph already has two lines, the function next looks for a prefix candidate on the second line, in just the same way it did for the first line.  If it doesn't find one, it returns @code{nil}."
msgstr "すでにそのパラグラフが2行以上なら、この関数は次に1行目にたいして行なったのとまったく同じ方法で2行目でプレフィクス候補を探す。見つからなければ@code{nil}をリターンする。"

#. type: enumerate
#: original_texis/text.texi:1838
msgid "The function now compares the two candidate prefixes heuristically: if the non-whitespace characters in the line 2 candidate occur in the same order in the line 1 candidate, the function returns the line 2 candidate.  Otherwise, it returns the largest initial substring which is common to both candidates (which might be the empty string)."
msgstr "ここでこの関数は発見的手法により2つのプレフィクス候補を比較する。2行目の候補の非空白文字の並びが1行目の候補と同じなら、この関数は2行目の候補をリターンする。それ以外では2つの候補に共通するもっとも長い先頭の部分文字列(これは空文字列かもしれない)をリターンする。"

#. type: defopt
#: original_texis/text.texi:1841
#, no-wrap
msgid "adaptive-fill-regexp"
msgstr "adaptive-fill-regexp"

#. type: defopt
#: original_texis/text.texi:1845
msgid "Adaptive Fill mode matches this regular expression against the text starting after the left margin whitespace (if any) on a line; the characters it matches are that line's candidate for the fill prefix."
msgstr "Adaptive Fillモードは、(もしあれば)行の左マージン空白文字の後から開始されるテキストにたいしてこの正規表現をマッチする。マッチする文字列がその行のフィルプレフィクス候補。"

#. type: defopt
#: original_texis/text.texi:1848
msgid "The default value matches whitespace with certain punctuation characters intermingled."
msgstr "デフォルト値は空白文字と特定の句読点文字が混在した文字列にマッチする。"

#. type: defopt
#: original_texis/text.texi:1850
#, no-wrap
msgid "adaptive-fill-first-line-regexp"
msgstr "adaptive-fill-first-line-regexp"

#. type: defopt
#: original_texis/text.texi:1857
msgid "Used only in one-line paragraphs, this regular expression acts as an additional check of the validity of the one available candidate fill prefix: the candidate must match this regular expression, or match @code{comment-start-skip}.  If it doesn't, @code{fill-context-prefix} replaces the candidate with a string of spaces of the same width as it."
msgstr "この正規表現は1行だけのパラグラフに使用され、1つの可能なフィルプレフィクス候補の追加の妥当性評価として機能する。その候補はこの正規表現にマッチするか、@code{comment-start-skip}にマッチしなければならない。マッチしなければ@code{fill-context-prefix}はその候補を同じ幅のスペース文字列に置き換える。"

#. type: defopt
#: original_texis/text.texi:1862
msgid "The default value of this variable is @w{@code{\"\\\\`[ \\t]*\\\\'\"}}, which matches only a string of whitespace.  The effect of this default is to force the fill prefixes found in one-line paragraphs always to be pure whitespace."
msgstr "この変数のデフォルト値は @w{@code{\"\\\\`[ \\t]*\\\\'\"}}であり、これは空白文字列だけにマッチする。このデフォルトの効果は1行パラグラフで見つかったフィルプレフィクスが、常に純粋な空白文字となるよう強制することである。"

#. type: defopt
#: original_texis/text.texi:1864
#, no-wrap
msgid "adaptive-fill-function"
msgstr "adaptive-fill-function"

#. type: defopt
#: original_texis/text.texi:1870
msgid "You can specify more complex ways of choosing a fill prefix automatically by setting this variable to a function.  The function is called with point after the left margin (if any) of a line, and it must preserve point.  It should return either that line's fill prefix or @code{nil}, meaning it has failed to determine a prefix."
msgstr "この変数に関数をセットすることにより、自動的なフィルプレフィクス選択にたいしてより複雑な方法を指定することが可能になる。その関数は、(もしあれば)行の左マージンの後のポイントで呼び出され、かつポイントを保たなければならない。その関数はその行のフィルプレフィクス、またはプレフィクスの判断に失敗したことを意味する@code{nil}のいずれかをリターンすること。"

#. type: cindex
#: original_texis/text.texi:1874
#, no-wrap
msgid "filling, automatic"
msgstr "filling, automatic"

#. type: cindex
#: original_texis/text.texi:1875
#, no-wrap
msgid "Auto Fill mode"
msgstr "Auto Fill mode"

#. type: Plain text
#: original_texis/text.texi:1882
msgid "Auto Fill mode is a minor mode that fills lines automatically as text is inserted.  This section describes the hook used by Auto Fill mode.  For a description of functions that you can call explicitly to fill and justify existing text, see @ref{Filling}."
msgstr "Auto Fillモードはテキスト挿入とともに自動的に行をフィルするマイナーモードです。このセクションではAuto Fillモードにより使用されるフックを説明します。既存テキストを明示的にフィルしたり位置揃えすることができる関数の説明は@ref{Filling}を参照してください。"

#. type: Plain text
#: original_texis/text.texi:1885
msgid "Auto Fill mode also enables the functions that change the margins and justification style to refill portions of the text.  @xref{Margins}."
msgstr "Auto Fillモードではテキスの一部を再フィルするためにマージンや位置揃えを変更する関数も利用できます。@ref{Margins}を参照してください。"

#. type: defvar
#: original_texis/text.texi:1886
#, no-wrap
msgid "auto-fill-function"
msgstr "auto-fill-function"

#. type: defvar
#: original_texis/text.texi:1891
msgid "The value of this buffer-local variable should be a function (of no arguments) to be called after self-inserting a character from the table @code{auto-fill-chars}.  It may be @code{nil}, in which case nothing special is done in that case."
msgstr "このバッファーローカル変数の値は、テーブル@code{auto-fill-chars}の文字の自己挿入後に呼び出される関数(引数なし)であること。@code{nil}も可であり、その場合は特に何もしない。"

#. type: defvar
#: original_texis/text.texi:1895
msgid "The value of @code{auto-fill-function} is @code{do-auto-fill} when Auto-Fill mode is enabled.  That is a function whose sole purpose is to implement the usual strategy for breaking a line."
msgstr "Auto-Fillモードが有効なら@code{auto-fill-function}の値は@code{do-auto-fill}。これは行ブレークにたいする通常の戦略を実装することを唯一の目的とする関数。"

#. type: defvar
#: original_texis/text.texi:1897
#, no-wrap
msgid "normal-auto-fill-function"
msgstr "normal-auto-fill-function"

#. type: defvar
#: original_texis/text.texi:1902
msgid "This variable specifies the function to use for @code{auto-fill-function}, if and when Auto Fill is turned on.  Major modes can set buffer-local values for this variable to alter how Auto Fill works."
msgstr "この変数はAuto Fillがオンのときは@code{auto-fill-function}にたいして使用する関数を指定する。Auto Fillの動作方法を変更するためにメジャーモードはこの変数にバッファーローカル値をセットできる。"

#. type: defvar
#: original_texis/text.texi:1904
#, no-wrap
msgid "auto-fill-chars"
msgstr "auto-fill-chars"

#. type: defvar
#: original_texis/text.texi:1908
msgid "A char table of characters which invoke @code{auto-fill-function} when self-inserted---space and newline in most language environments.  They have an entry @code{t} in the table."
msgstr "文字が自己挿入された際に@code{auto-fill-function}を呼び出す文字からなる文字テーブル(ほとんどの言語環境においてはスペースと改行)。"

#. type: section
#: original_texis/text.texi:1911
#, no-wrap
msgid "Sorting Text"
msgstr "Sorting Text"

#. type: cindex
#: original_texis/text.texi:1912
#, no-wrap
msgid "sorting text"
msgstr "sorting text"

#. type: Plain text
#: original_texis/text.texi:1918
msgid "The sorting functions described in this section all rearrange text in a buffer.  This is in contrast to the function @code{sort}, which rearranges the order of the elements of a list (@pxref{Rearrangement}).  The values returned by these functions are not meaningful."
msgstr "このセクションで説明するソート関数は、すべてバッファー内のテキストを再配置します。これはリスト要素を再配置する@code{sort}関数とは対照的です(@pxref{Rearrangement})。これらの関数がリターンする値に意味はありません。"

#. type: defun
#: original_texis/text.texi:1919
#, no-wrap
msgid "sort-subr reverse nextrecfun endrecfun &optional startkeyfun endkeyfun predicate"
msgstr "sort-subr reverse nextrecfun endrecfun &optional startkeyfun endkeyfun predicate"

#. type: defun
#: original_texis/text.texi:1923
msgid "This function is the general text-sorting routine that subdivides a buffer into records and then sorts them.  Most of the commands in this section use this function."
msgstr "この関数はバッファーをレコードに細分してそれらをソートする一般的なテキストソートルーチン。このセクションのコマンドのほとんどは、この関数を使用する。"

#. type: defun
#: original_texis/text.texi:1930
msgid "To understand how @code{sort-subr} works, consider the whole accessible portion of the buffer as being divided into disjoint pieces called @dfn{sort records}.  The records may or may not be contiguous, but they must not overlap.  A portion of each sort record (perhaps all of it) is designated as the sort key.  Sorting rearranges the records in order by their sort keys."
msgstr "@code{sort-subr}が機能する方法を理解するためには、バッファーのアクセス可能範囲を@dfn{ソートレコード(sort records)}と呼ばれる分離された断片に分割すると考えればよい。レコードは連続、あるいは非連続かもしれないがオーバーラップしてはならない。各ソートレコードの一部(全体かもしれない)はソートキーとして指定される。これらソートキーによるソートによりレコードは再配置される。"

#. type: defun
#: original_texis/text.texi:1935
msgid "Usually, the records are rearranged in order of ascending sort key.  If the first argument to the @code{sort-subr} function, @var{reverse}, is non-@code{nil}, the sort records are rearranged in order of descending sort key."
msgstr "レコードは通常はソートキー昇順で再配置される。@code{sort-subr}の1つ目の引数@var{reverse}が非@code{nil}ならレコードはソートキー降順にソートされて再配置される。"

#. type: defun
#: original_texis/text.texi:1939
msgid "The next four arguments to @code{sort-subr} are functions that are called to move point across a sort record.  They are called many times from within @code{sort-subr}."
msgstr "@code{sort-subr}にたいする以下の4つの引数は、ソートレコード間でポイントを移動するために呼び出される。これらは@code{sort-subr}内で頻繁に呼び出される。"

#. type: enumerate
#: original_texis/text.texi:1947
msgid "@var{nextrecfun} is called with point at the end of a record.  This function moves point to the start of the next record.  The first record is assumed to start at the position of point when @code{sort-subr} is called.  Therefore, you should usually move point to the beginning of the buffer before calling @code{sort-subr}."
msgstr "@var{nextrecfun}はレコード終端のポイントで呼び出される。この関数は次のレコードの先頭にポイントを移動する。@code{sort-subr}が呼び出された際には、ポイント位置が1つ目のレコードの開始とみなされる。したがって@code{sort-subr}を呼び出す前は、通常はそのバッファーの先頭にポイントを移動すること。"

#. type: enumerate
#: original_texis/text.texi:1950
msgid "This function can indicate there are no more sort records by leaving point at the end of the buffer."
msgstr "この関数はバッファー終端にポイントを残すことにより、それ以上のソートレコードがないことを示すことができるできる。"

#. type: enumerate
#: original_texis/text.texi:1954
msgid "@var{endrecfun} is called with point within a record.  It moves point to the end of the record."
msgstr "@var{endrecfun}はレコード内にあるポイントで呼び出される。これはレコード終端にポイントを移動する。"

#. type: enumerate
#: original_texis/text.texi:1963
msgid "@var{startkeyfun} is called to move point from the start of a record to the start of the sort key.  This argument is optional; if it is omitted, the whole record is the sort key.  If supplied, the function should either return a non-@code{nil} value to be used as the sort key, or return @code{nil} to indicate that the sort key is in the buffer starting at point.  In the latter case, @var{endkeyfun} is called to find the end of the sort key."
msgstr "@var{startkeyfun}はポイントをレコード先頭からソートキー先頭に移動する。この引数はオプションで、省略された場合はレコード全体がソートキーとなる。もし与えられた場合には、その関数はソートキーとして使用する非@code{nil}値、または@code{nil} (ソートキーはそのバッファー内のポイント位置から始まることを示す)のいずれかをリターンすること。後者の場合にはソートキー終端を見るけるために@var{endkeyfun}が呼び出される。"

#. type: enumerate
#: original_texis/text.texi:1971
msgid "@var{endkeyfun} is called to move point from the start of the sort key to the end of the sort key.  This argument is optional.  If @var{startkeyfun} returns @code{nil} and this argument is omitted (or @code{nil}), then the sort key extends to the end of the record.  There is no need for @var{endkeyfun} if @var{startkeyfun} returns a non-@code{nil} value."
msgstr "@var{endkeyfun}はソートキー先頭からソートキー終端にポイントを移動するために呼び出される。引数はオプション。@var{startkeyfun}が@code{nil}をリターンし、かつこの引数が省略(または@code{nil})の場合には、そのソートキーはレコード終端まで拡張される。@var{startkeyfun}が非@code{nil}値をリターンした場合には@var{endkeyfun}は不要。"

#. type: defun
#: original_texis/text.texi:1976
msgid "The argument @var{predicate} is the function to use to compare keys.  If keys are numbers, it defaults to @code{<}; otherwise it defaults to @code{string<}."
msgstr "引数@var{predicate}はキーを比較するために使用される関数。キーが数字の場合のデフォルトは@code{<}、それ以外では@code{string<}がデフォルト。"

#. type: defun
#: original_texis/text.texi:1979
msgid "As an example of @code{sort-subr}, here is the complete function definition for @code{sort-lines}:"
msgstr "@code{sort-subr}の例として以下は@code{sort-lines}関数の完全な定義である:"

#. type: group
#: original_texis/text.texi:1988
#, no-wrap
msgid ""
";; @r{Note that the first two lines of doc string}\n"
";; @r{are effectively one line when viewed by a user.}\n"
"(defun sort-lines (reverse beg end)\n"
"  \"Sort lines in region alphabetically;\\\n"
" argument means descending order.\n"
"Called from a program, there are three arguments:\n"
msgstr ""
";; @r{ドキュメント文字列の冒頭2行は}\n"
";; @r{ユーザー閲覧時には1行となることに注意}\n"
"(defun sort-lines (reverse beg end)\n"
"  \"リージョン内の行をアルファベット順にソート;\\\n"
" 引数は降順を意味する\n"
"プログラムから呼び出す場合は、以下の3つの引数がある:\n"

#. type: group
#: original_texis/text.texi:1995
#, no-wrap
msgid ""
"REVERSE (non-nil means reverse order),\\\n"
" BEG and END (region to sort).\n"
"The variable `sort-fold-case' determines\\\n"
" whether alphabetic case affects\n"
"the sort order.\"\n"
msgstr ""
"REVERSE(非nilは逆順の意)、\\\n"
"およびBEGとEND(ソートするリージョン)\n"
"変数`sort-fold-case'は英字\\\n"
"大文字小文字の違いが\n"
"ソート順に影響するかどうかを決定する\"\n"

#. type: group
#: original_texis/text.texi:2004
#, no-wrap
msgid ""
"  (interactive \"P\\nr\")\n"
"  (save-excursion\n"
"    (save-restriction\n"
"      (narrow-to-region beg end)\n"
"      (goto-char (point-min))\n"
"      (let ((inhibit-field-text-motion t))\n"
"        (sort-subr reverse 'forward-line 'end-of-line)))))\n"
msgstr ""
"  (interactive \"P\\nr\")\n"
"  (save-excursion\n"
"    (save-restriction\n"
"      (narrow-to-region beg end)\n"
"      (goto-char (point-min))\n"
"      (let ((inhibit-field-text-motion t))\n"
"        (sort-subr reverse 'forward-line 'end-of-line)))))\n"

#. type: defun
#: original_texis/text.texi:2011
msgid "Here @code{forward-line} moves point to the start of the next record, and @code{end-of-line} moves point to the end of record.  We do not pass the arguments @var{startkeyfun} and @var{endkeyfun}, because the entire record is used as the sort key."
msgstr "ここで@code{forward-line}は次のレコードの先頭にポイントを移動して、@code{end-of-line}はレコードの終端にポイントを移動する。レコード全体をソートキーとするので引数@var{startkeyfun}と@var{endkeyfun}は渡していない。"

#. type: defun
#: original_texis/text.texi:2014
msgid "The @code{sort-paragraphs} function is very much the same, except that its @code{sort-subr} call looks like this:"
msgstr "@code{sort-paragraphs}はほとんど同じだが、@code{sort-subr}の呼び出しが以下のようになる:"

#. type: group
#: original_texis/text.texi:2024
#, no-wrap
msgid ""
"(sort-subr reverse\n"
"           (function\n"
"            (lambda ()\n"
"              (while (and (not (eobp))\n"
"                          (looking-at paragraph-separate))\n"
"                (forward-line 1))))\n"
"           'forward-paragraph)\n"
msgstr ""
"(sort-subr reverse\n"
"           (function\n"
"            (lambda ()\n"
"              (while (and (not (eobp))\n"
"                          (looking-at paragraph-separate))\n"
"                (forward-line 1))))\n"
"           'forward-paragraph)\n"

#. type: defun
#: original_texis/text.texi:2029
msgid "Markers pointing into any sort records are left with no useful position after @code{sort-subr} returns."
msgstr "ソートレコード内を指す任意のマーカーは、@code{sort-subr}リターン後は無意味なマーカー位置のまま取り残される。"

#. type: defopt
#: original_texis/text.texi:2031
#, no-wrap
msgid "sort-fold-case"
msgstr "sort-fold-case"

#. type: defopt
#: original_texis/text.texi:2034
msgid "If this variable is non-@code{nil}, @code{sort-subr} and the other buffer sorting functions ignore case when comparing strings."
msgstr "この変数が非@code{nil}なら、@code{sort-subr}とその他のバッファーソート関数は文字列比較時にcase(大文字小文字)の違いを無視する。"

#. type: deffn
#: original_texis/text.texi:2036
#, no-wrap
msgid "Command sort-regexp-fields reverse record-regexp key-regexp start end"
msgstr "Command sort-regexp-fields reverse record-regexp key-regexp start end"

#. type: deffn
#: original_texis/text.texi:2041
msgid "This command sorts the region between @var{start} and @var{end} alphabetically as specified by @var{record-regexp} and @var{key-regexp}.  If @var{reverse} is a negative integer, then sorting is in reverse order."
msgstr "このコマンドは@var{start}から@var{end}の間のリージョンを、@var{record-regexp}と@var{key-regexp}で指定されたようにアルファベット順にソートする。@var{reverse}が負の整数なら逆順にソートする。"

#. type: deffn
#: original_texis/text.texi:2048
msgid "Alphabetical sorting means that two sort keys are compared by comparing the first characters of each, the second characters of each, and so on.  If a mismatch is found, it means that the sort keys are unequal; the sort key whose character is less at the point of first mismatch is the lesser sort key.  The individual characters are compared according to their numerical character codes in the Emacs character set."
msgstr "アルファベット順のソートとは2つのソートキーにたいして、それぞれの1つ目の文字同士、2つ目の文字同士、...のように比較することにより、キーを比較することを意味する。文字が一致しなければ、それはソートキーが不等なことを意味する。最初の不一致箇所で文字が小さいソートキーが小さいソートキーとなる。個別の文字はEmacs文字セット内の文字コードの数値に応じて比較される。"

#. type: deffn
#: original_texis/text.texi:2056
msgid "The value of the @var{record-regexp} argument specifies how to divide the buffer into sort records.  At the end of each record, a search is done for this regular expression, and the text that matches it is taken as the next record.  For example, the regular expression @samp{^.+$}, which matches lines with at least one character besides a newline, would make each such line into a sort record.  @xref{Regular Expressions}, for a description of the syntax and meaning of regular expressions."
msgstr "引数@var{record-regexp}の値はバッファーをソートレコードに分割する方法を指定する。各レコードの終端で、この正規表現にたいする検索は完了して、これにマッチするテキストが次のレコードとして採用される。たとえば改行の前に少なくとも1つの文字がある行にマッチする正規表現@samp{^.+$}は、そのような行をソートレコードとするだろう。正規表現の構文と意味については@ref{Regular Expressions}を参照のこと。"

#. type: deffn
#: original_texis/text.texi:2062
msgid "The value of the @var{key-regexp} argument specifies what part of each record is the sort key.  The @var{key-regexp} could match the whole record, or only a part.  In the latter case, the rest of the record has no effect on the sorted order of records, but it is carried along when the record moves to its new position."
msgstr "引数@var{key-regexp}の値は各レコードのどの部分がソートキーかを指定する。@var{key-regexp}はレコード全体、またはその一部にマッチすることができる。後者の場合にはレコードの残りの部分はソート順に影響しないが、レコードが新たな位置に移動される際はともに移動される。"

#. type: deffn
#: original_texis/text.texi:2066
msgid "The @var{key-regexp} argument can refer to the text matched by a subexpression of @var{record-regexp}, or it can be a regular expression on its own."
msgstr "引数@var{key-regexp}は@var{record-regexp}の部分式(subexpression)、またはその正規表現自体にマッチしたテキストを参照できる。"

#. type: deffn
#: original_texis/text.texi:2068
msgid "If @var{key-regexp} is:"
msgstr "@var{key-regexp}には以下を指定できる:"

#. type: samp{#1}
#: original_texis/text.texi:2070
#, no-wrap
msgid "\\@var{digit}"
msgstr "\\@var{digit}"

#. type: table
#: original_texis/text.texi:2073
msgid "then the text matched by the @var{digit}th @samp{\\(...\\)} parenthesis grouping in @var{record-regexp} is the sort key."
msgstr "@var{record-regexp}内で@var{digit}番目のカッコ@samp{\\(...\\)}でグループ化によりマッチしたテキストがソートキーになる。"

#. type: samp{#1}
#: original_texis/text.texi:2074
#, no-wrap
msgid "\\&"
msgstr "\\&"

#. type: table
#: original_texis/text.texi:2076
msgid "then the whole record is the sort key."
msgstr "レコード全体がソートキーとなる。"

#. type: item
#: original_texis/text.texi:2077
#, no-wrap
msgid "a regular expression"
msgstr "正規表現"

#. type: table
#: original_texis/text.texi:2083
msgid "then @code{sort-regexp-fields} searches for a match for the regular expression within the record.  If such a match is found, it is the sort key.  If there is no match for @var{key-regexp} within a record then that record is ignored, which means its position in the buffer is not changed.  (The other records may move around it.)"
msgstr "@code{sort-regexp-fields}は、そのレコード内で正規表現にたいするマッチを検索する。そのようなマッチがあればそれがソートキー。レコード内に@var{key-regexp}にたいするマッチがなければそのレコードは無視されて、そのバッファー内でのレコードの位置は変更されないことを意味する(他のレコードがそのレコードを移動するかもしれない)。"

#. type: deffn
#: original_texis/text.texi:2089
msgid "For example, if you plan to sort all the lines in the region by the first word on each line starting with the letter @samp{f}, you should set @var{record-regexp} to @samp{^.*$} and set @var{key-regexp} to @samp{\\<f\\w*\\>}.  The resulting expression looks like this:"
msgstr "たとえばリージョン内のすべての行にたいして、最初の単語が文字@samp{f}で始まる行をソートすることを目論むなら、@var{record-regexp}を@samp{^.*$}、@var{key-regexp}を@samp{\\<f\\w*\\>}にセットすること。結果は以下のような式になる"

#. type: group
#: original_texis/text.texi:2095
#, no-wrap
msgid ""
"(sort-regexp-fields nil \"^.*$\" \"\\\\<f\\\\w*\\\\>\"\n"
"                    (region-beginning)\n"
"                    (region-end))\n"
msgstr ""
"(sort-regexp-fields nil \"^.*$\" \"\\\\<f\\\\w*\\\\>\"\n"
"                    (region-beginning)\n"
"                    (region-end))\n"

#. type: deffn
#: original_texis/text.texi:2100
msgid "If you call @code{sort-regexp-fields} interactively, it prompts for @var{record-regexp} and @var{key-regexp} in the minibuffer."
msgstr "@code{sort-regexp-fields}をインタラクティブに呼び出した場合にはミニバッファー内で@var{record-regexp}と@var{key-regexp}の入力を求める。"

#. type: deffn
#: original_texis/text.texi:2102
#, no-wrap
msgid "Command sort-lines reverse start end"
msgstr "Command sort-lines reverse start end"

#. type: deffn
#: original_texis/text.texi:2106
msgid "This command alphabetically sorts lines in the region between @var{start} and @var{end}.  If @var{reverse} is non-@code{nil}, the sort is in reverse order."
msgstr "このコマンドは@var{start}と@var{end}の間のリージョン内の行をアルファベット順にソートする。@var{reverse}が非@code{nil}なら逆順にソートする。"

#. type: deffn
#: original_texis/text.texi:2108
#, no-wrap
msgid "Command sort-paragraphs reverse start end"
msgstr "Command sort-paragraphs reverse start end"

#. type: deffn
#: original_texis/text.texi:2112
msgid "This command alphabetically sorts paragraphs in the region between @var{start} and @var{end}.  If @var{reverse} is non-@code{nil}, the sort is in reverse order."
msgstr "このコマンドは@var{start}と@var{end}の間のリージョン内のパラグラフをアルファベット順にソートする。@var{reverse}が非@code{nil}なら逆順にソートする。"

#. type: deffn
#: original_texis/text.texi:2114
#, no-wrap
msgid "Command sort-pages reverse start end"
msgstr "Command sort-pages reverse start end"

#. type: deffn
#: original_texis/text.texi:2118
msgid "This command alphabetically sorts pages in the region between @var{start} and @var{end}.  If @var{reverse} is non-@code{nil}, the sort is in reverse order."
msgstr "このコマンドは@var{start}と@var{end}の間のリージョン内のページをアルファベット順にソートする。@var{reverse}が非@code{nil}なら逆順にソートする。"

#. type: deffn
#: original_texis/text.texi:2120
#, no-wrap
msgid "Command sort-fields field start end"
msgstr "Command sort-fields field start end"

#. type: deffn
#: original_texis/text.texi:2127
msgid "This command sorts lines in the region between @var{start} and @var{end}, comparing them alphabetically by the @var{field}th field of each line.  Fields are separated by whitespace and numbered starting from 1.  If @var{field} is negative, sorting is by the @w{@minus{}@var{field}th} field from the end of the line.  This command is useful for sorting tables."
msgstr "このコマンドは@var{start}と@var{end}の間のリージョン内の行にたいして、各行の@var{field}番目のフィールドをアルファベット順に比較することに行をソートする。@var{field}は空白文字により区切られて、1から数えられる。@var{field}が負なら行の終端から@w{@minus{}@var{field}}番目のフィールドでソートする。このコマンドはテーブルのソートに有用。"

#. type: deffn
#: original_texis/text.texi:2129
#, no-wrap
msgid "Command sort-numeric-fields field start end"
msgstr "Command sort-numeric-fields field start end"

#. type: deffn
#: original_texis/text.texi:2136
msgid "This command sorts lines in the region between @var{start} and @var{end}, comparing them numerically by the @var{field}th field of each line.  Fields are separated by whitespace and numbered starting from 1.  The specified field must contain a number in each line of the region.  Numbers starting with 0 are treated as octal, and numbers starting with @samp{0x} are treated as hexadecimal."
msgstr "このコマンドは@var{start}と@var{end}の間のリージョン内の行にたいして、各行の@var{field}番目のフィールドを数値的に比較することにより行をソートする。@var{field}は空白文字により区切られて、1から数えられる。リージョン内の各行の指定されたフィールドは数字を含んでいなければならない。0で始まる数字は8進数、@samp{0x}で始まる数字は16進数として扱われる。"

#. type: deffn
#: original_texis/text.texi:2140
msgid "If @var{field} is negative, sorting is by the @w{@minus{}@var{field}th} field from the end of the line.  This command is useful for sorting tables."
msgstr "@var{field}が負なら行の終端から@w{@minus{}@var{field}}番目のフィールドでソートする。このコマンドはテーブルのソートに有用。"

#. type: defopt
#: original_texis/text.texi:2142
#, no-wrap
msgid "sort-numeric-base"
msgstr "sort-numeric-base"

#. type: defopt
#: original_texis/text.texi:2145
msgid "This variable specifies the default radix for @code{sort-numeric-fields} to parse numbers."
msgstr "この変数は@code{sort-numeric-fields}にたいして数字を解析するための基本基数を指定する。"

#. type: deffn
#: original_texis/text.texi:2147
#, no-wrap
msgid "Command sort-columns reverse &optional beg end"
msgstr "Command sort-columns reverse &optional beg end"

#. type: deffn
#: original_texis/text.texi:2152
msgid "This command sorts the lines in the region between @var{beg} and @var{end}, comparing them alphabetically by a certain range of columns.  The column positions of @var{beg} and @var{end} bound the range of columns to sort on."
msgstr "このコマンドは@var{beg}と@var{end}の間にある行にたいして特定の列範囲をアルファベット順に比較することによりソートする。@var{beg}と@var{end}の列位置はソートが行われる列範囲にバインドされる。"

#. type: deffn
#: original_texis/text.texi:2154
msgid "If @var{reverse} is non-@code{nil}, the sort is in reverse order."
msgstr "@var{reverse}が非@code{nil}なら逆順にソートする。"

#. type: deffn
#: original_texis/text.texi:2158
msgid "One unusual thing about this command is that the entire line containing position @var{beg}, and the entire line containing position @var{end}, are included in the region sorted."
msgstr "このコマンドが通常と異なるのは、位置@var{beg}を含む行全体と位置@var{end}を含む行全体がソートされるリージョンに含まれることである。"

#. type: deffn
#: original_texis/text.texi:2162
msgid "Note that @code{sort-columns} rejects text that contains tabs, because tabs could be split across the specified columns.  Use @kbd{M-x untabify} to convert tabs to spaces before sorting."
msgstr "タブは指定された列に分割される可能性があるので、@code{sort-columns}はタブを含むテキストを受け付けないことに注意。ソート前に@kbd{M-x untabify}を使用してタブをスペースに変換すること。"

#. type: deffn
#: original_texis/text.texi:2165
msgid "When possible, this command actually works by calling the @code{sort} utility program."
msgstr "可能ならユーティリティプログラム@code{sort}を呼び出すことにより、このコマンドは実際に機能する。"

#. type: section
#: original_texis/text.texi:2168
#, no-wrap
msgid "Counting Columns"
msgstr "Counting Columns"

#. type: cindex
#: original_texis/text.texi:2169
#, no-wrap
msgid "columns"
msgstr "columns"

#. type: cindex
#: original_texis/text.texi:2170
#, no-wrap
msgid "counting columns"
msgstr "counting columns"

#. type: cindex
#: original_texis/text.texi:2171
#, no-wrap
msgid "horizontal position"
msgstr "horizontal position"

#. type: Plain text
#: original_texis/text.texi:2176
msgid "The column functions convert between a character position (counting characters from the beginning of the buffer) and a column position (counting screen characters from the beginning of a line)."
msgstr "列関数は文字位置(バッファー先頭から数えた文字数)と列位置(行先頭から数えたスクリーン文字数)を変換する関数です。"

#. type: Plain text
#: original_texis/text.texi:2183
msgid "These functions count each character according to the number of columns it occupies on the screen.  This means control characters count as occupying 2 or 4 columns, depending upon the value of @code{ctl-arrow}, and tabs count as occupying a number of columns that depends on the value of @code{tab-width} and on the column where the tab begins.  @xref{Usual Display}."
msgstr "これら列関数はスクリーン上占める列数に応じて各文字を数えます。これはコントロール文字は@code{ctl-arrow}の値に応じて2列または4列を、タブは@code{tab-width}の値と、タブが始まる列の位置に依存する列数を占めるものとして数えられることを意味します。@ref{Usual Display}を参照してください。"

#. type: Plain text
#: original_texis/text.texi:2188
msgid "Column number computations ignore the width of the window and the amount of horizontal scrolling.  Consequently, a column value can be arbitrarily high.  The first (or leftmost) column is numbered 0.  They also ignore overlays and text properties, aside from invisibility."
msgstr "列数計算はウィンドウ幅と水平スクロール量を無視します。結果として列値は任意に大きくなる可能性があります。最初(または左端)の列は0と数えられます。列値は不可視性を別としてオーバーレイとテキストプロパティを無視します。"

#. type: defun
#: original_texis/text.texi:2189
#, no-wrap
msgid "current-column"
msgstr "current-column"

#. type: defun
#: original_texis/text.texi:2194
msgid "This function returns the horizontal position of point, measured in columns, counting from 0 at the left margin.  The column position is the sum of the widths of all the displayed representations of the characters between the start of the current line and point."
msgstr "この関数は左マージンを0として列単位で数えたポイントの水平位置をリターンする。列の位置はカレント行の開始からポイントまでの間の文字の表示上の表現すべての幅の和。"

#. type: deffn
#: original_texis/text.texi:2196
#, no-wrap
msgid "Command move-to-column column &optional force"
msgstr "Command move-to-column column &optional force"

#. type: deffn
#: original_texis/text.texi:2201
msgid "This function moves point to @var{column} in the current line.  The calculation of @var{column} takes into account the widths of the displayed representations of the characters between the start of the line and point."
msgstr "この関数はカレント行の@var{column}にポイントを移動する。@var{column}の計算には行の開始からポイントまでの文字の表示上の表現の幅が考慮される。"

#. type: deffn
#: original_texis/text.texi:2204
msgid "When called interactively, @var{column} is the value of prefix numeric argument.  If @var{column} is not an integer, an error is signaled."
msgstr "インタラクティブに呼び出された際には、@var{column}はプレフィクス数引数の値。@var{column}が整数でなければエラーがシグナルされる。"

#. type: deffn
#: original_texis/text.texi:2219
msgid "If it is impossible to move to column @var{column} because that is in the middle of a multicolumn character such as a tab, point moves to the end of that character.  However, if @var{force} is non-@code{nil}, and @var{column} is in the middle of a tab, then @code{move-to-column} converts the tab into spaces so that it can move precisely to column @var{column}.  Other multicolumn characters can cause anomalies despite @var{force}, since there is no way to split them."
msgstr "列@var{column}がタブのような複数列を占める文字の中間にあるために列を移動することが不可能なら、ポイントはその文字の終端に移動される。しかし@var{force}が非@code{nil}、かつ@var{column}がタブの中間にあるなら、@code{move-to-column}はタブをスペースに変換して正確に列@var{column}に移動することができる。それ以外の複数列文字については、それらを分割する手段がないので@var{force}指定に関わらず異常を引き起こす恐れがある。"

#. type: deffn
#: original_texis/text.texi:2223
msgid "The argument @var{force} also has an effect if the line isn't long enough to reach column @var{column}; if it is @code{t}, that means to add whitespace at the end of the line to reach that column."
msgstr "その行が列@var{column}に達するほど長くない場合にも引数@var{force}は効果をもつ。@var{column}が@code{t}ならその列に達するよう行端に空白を追加することを意味する。"

#. type: deffn
#: original_texis/text.texi:2225
msgid "The return value is the column number actually moved to."
msgstr "リターン値は実際に移動した列番号。"

#. type: cindex
#: original_texis/text.texi:2229
#, no-wrap
msgid "indentation"
msgstr "indentation"

#. type: Plain text
#: original_texis/text.texi:2235
msgid "The indentation functions are used to examine, move to, and change whitespace that is at the beginning of a line.  Some of the functions can also change whitespace elsewhere on a line.  Columns and indentation count from zero at the left margin."
msgstr "インデント関数は行の先頭にある空白文字の調査、移動、変更に使用されます。行の他の箇所にある空白文字を変更できる関数もいくつかあります。列とインデントは左マージンを0として数えられます。"

#. type: node
#: original_texis/text.texi:2243 original_texis/text.texi:2245
#, no-wrap
msgid "Primitive Indent"
msgstr "Primitive Indent"

#. type: menuentry
#: original_texis/text.texi:2243
msgid "Functions used to count and insert indentation."
msgstr "インデントのカウントと挿入に使用される関数。"

#. type: node
#: original_texis/text.texi:2243 original_texis/text.texi:2283
#, no-wrap
msgid "Mode-Specific Indent"
msgstr "Mode-Specific Indent"

#. type: menuentry
#: original_texis/text.texi:2243
msgid "Customize indentation for different modes."
msgstr "異なるモード用にインデントをカスタマイズする。"

#. type: node
#: original_texis/text.texi:2243 original_texis/text.texi:2366
#, no-wrap
msgid "Region Indent"
msgstr "Region Indent"

#. type: menuentry
#: original_texis/text.texi:2243
msgid "Indent all the lines in a region."
msgstr "リージョン内すべての行のインデント。"

#. type: node
#: original_texis/text.texi:2243 original_texis/text.texi:2433
#, no-wrap
msgid "Relative Indent"
msgstr "Relative Indent"

#. type: menuentry
#: original_texis/text.texi:2243
msgid "Indent the current line based on previous lines."
msgstr "前の行にもとづきカレント行をインデントする。"

#. type: node
#: original_texis/text.texi:2243 original_texis/text.texi:2510
#, no-wrap
msgid "Indent Tabs"
msgstr "Indent Tabs"

#. type: menuentry
#: original_texis/text.texi:2243
msgid "Adjustable, typewriter-like tab stops."
msgstr "調整可能なタイプライター形式のタブストップ。"

#. type: node
#: original_texis/text.texi:2243 original_texis/text.texi:2541
#, no-wrap
msgid "Motion by Indent"
msgstr "Motion by Indent"

#. type: menuentry
#: original_texis/text.texi:2243
msgid "Move to first non-blank character."
msgstr "最初の非ブランク文字への移動。"

#. type: subsection
#: original_texis/text.texi:2246
#, no-wrap
msgid "Indentation Primitives"
msgstr "Indentation Primitives"

#. type: Plain text
#: original_texis/text.texi:2251
msgid "This section describes the primitive functions used to count and insert indentation.  The functions in the following sections use these primitives.  @xref{Size of Displayed Text}, for related functions."
msgstr "このセクションではインデントのカウントと挿入に使用されるプリミティブ関数について説明します。以降のセクションの関数はこれらのプリミティブを使用します。関連する関数については@ref{Size of Displayed Text}を参照してください。"

#. type: defun
#: original_texis/text.texi:2252
#, no-wrap
msgid "current-indentation"
msgstr "current-indentation"

#. type: defun
#: original_texis/text.texi:2259
msgid "This function returns the indentation of the current line, which is the horizontal position of the first nonblank character.  If the contents are entirely blank, then this is the horizontal position of the end of the line."
msgstr "この関数はカレント行のインデント、すなわち最初の非ブランク文字の水平位置をリターンする。行のコンテンツ全体がブランクなら、それは行終端の水平位置である。"

#. type: deffn
#: original_texis/text.texi:2261
#, no-wrap
msgid "Command indent-to column &optional minimum"
msgstr "Command indent-to column &optional minimum"

#. type: deffn
#: original_texis/text.texi:2270
msgid "This function indents from point with tabs and spaces until @var{column} is reached.  If @var{minimum} is specified and non-@code{nil}, then at least that many spaces are inserted even if this requires going beyond @var{column}.  Otherwise the function does nothing if point is already beyond @var{column}.  The value is the column at which the inserted indentation ends."
msgstr "この関数はポイントから@var{column}に達するまでタブとスペースでインデントを行う。@var{minimum}が指定されて、かつそれが非@code{nil}なら、たとえ@var{column}を超えることが要求される場合であっても、少なくともその個数のスペースが挿入される。それ以外ではポイントがすでに@var{column}を超える場合には、この関数は何も行わない。値は挿入されたインデントの終端列。"

#. type: deffn
#: original_texis/text.texi:2274
msgid "The inserted whitespace characters inherit text properties from the surrounding text (usually, from the preceding text only).  @xref{Sticky Properties}."
msgstr "挿入される空白文字は周囲のテキスト(通常は先行するテキストのみ)のテキストプロパティを継承する。@ref{Sticky Properties}を参照のこと。"

#. type: defopt
#: original_texis/text.texi:2276
#, no-wrap
msgid "indent-tabs-mode"
msgstr "indent-tabs-mode"

#. type: defopt
#: original_texis/text.texi:2281
msgid "If this variable is non-@code{nil}, indentation functions can insert tabs as well as spaces.  Otherwise, they insert only spaces.  Setting this variable automatically makes it buffer-local in the current buffer."
msgstr "この変数が非@code{nil}なら、インデント関数はスペースと同じようにタブを挿入でき、それ以外ではスペースだけを挿入できる。この変数はセットすることにより自動的にカレントバッファー内でバッファーローカルになる。"

#. type: subsection
#: original_texis/text.texi:2284
#, no-wrap
msgid "Indentation Controlled by Major Mode"
msgstr "Indentation Controlled by Major Mode"

#. type: Plain text
#: original_texis/text.texi:2290
msgid "An important function of each major mode is to customize the @key{TAB} key to indent properly for the language being edited.  This section describes the mechanism of the @key{TAB} key and how to control it.  The functions in this section return unpredictable values."
msgstr "すべてのメジャーモードにとって重要な関数は、編集対象の言語にたいして正しくインデントを行うように@key{TAB}キーをカスタマイズします。このセクションでは@key{TAB}キーのメカニズムと、それを制御する方法について説明します。このセクションの関数は予期せぬ値をリターンします。"

#. type: deffn
#: original_texis/text.texi:2291
#, no-wrap
msgid "Command indent-for-tab-command &optional rigid"
msgstr "Command indent-for-tab-command &optional rigid"

#. type: deffn
#: original_texis/text.texi:2295
msgid "This is the command bound to @key{TAB} in most editing modes.  Its usual action is to indent the current line, but it can alternatively insert a tab character or indent a region."
msgstr "これはほとんどの編集用モードで@key{TAB}にバインドされるコマンド。これの通常の動作はカレント行のインデントだが、かわりにタブ文字の挿入やリージョンのインデントを行うこともできる。"

#. type: deffn
#: original_texis/text.texi:2297
msgid "Here is what it does:"
msgstr "これは以下のことを行う:"

#. type: itemize
#: original_texis/text.texi:2303
msgid "First, it checks whether Transient Mark mode is enabled and the region is active.  If so, it called @code{indent-region} to indent all the text in the region (@pxref{Region Indent})."
msgstr "まずTransient Markモードが有効か、そしてリージョンがアクティブかどうかをチェックする。もしそうならリージョン内のテキストすべてをインデントするために@code{indent-region}を呼び出す(@ref{Region Indent}を参照)。"

#. type: itemize
#: original_texis/text.texi:2310
msgid "Otherwise, if the indentation function in @code{indent-line-function} is @code{indent-to-left-margin} (a trivial command that inserts a tab character), or if the variable @code{tab-always-indent} specifies that a tab character ought to be inserted (see below), then it inserts a tab character."
msgstr "それ以外なら@code{indent-line-function}内のインデント関数が@code{indent-to-left-margin}の場合、または変数@code{tab-always-indent}が挿入する文字としてタブ文字を指定する場合(以下参照)にはタブ文字を挿入する。"

#. type: itemize
#: original_texis/text.texi:2316
msgid "Otherwise, it indents the current line; this is done by calling the function in @code{indent-line-function}.  If the line is already indented, and the value of @code{tab-always-indent} is @code{complete} (see below), it tries completing the text at point."
msgstr "それ以外ならカレント行をインデントする。これは@code{indent-line-function}内の関数を呼び出すことにより行われる。その行がすでにインデント済みで、かつ@code{tab-always-indent}の値が@code{complete}(以下参照)ならポイント位置のテキストの補完を試みる。"

#. type: deffn
#: original_texis/text.texi:2324
msgid "If @var{rigid} is non-@code{nil} (interactively, with a prefix argument), then after this command indents a line or inserts a tab, it also rigidly indents the entire balanced expression which starts at the beginning of the current line, in order to reflect the new indentation.  This argument is ignored if the command indents the region."
msgstr "@var{rigid}が非@code{nil} (インタラクティブな場合はプレフィクス引数)なら、このコマンドが行をインデントした後、あるいはタブを挿入後に新たなインデントを反映するために、このコマンドはカレント行先頭にあるバランスされた式全体も厳正にインデントする。この引数はコマンドがリージョンをインデントする場合は無視される。"

#. type: defvar
#: original_texis/text.texi:2326
#, no-wrap
msgid "indent-line-function"
msgstr "indent-line-function"

#. type: defvar
#: original_texis/text.texi:2333
msgid "This variable's value is the function to be used by @code{indent-for-tab-command}, and various other indentation commands, to indent the current line.  It is usually assigned by the major mode; for instance, Lisp mode sets it to @code{lisp-indent-line}, C mode sets it to @code{c-indent-line}, and so on.  The default value is @code{indent-relative}.  @xref{Auto-Indentation}."
msgstr "この変数の値はカレント行をインデントするために@code{indent-for-tab-command}、およびその他種々のインデントコマンドにより使用される関数。これは通常はメジャーモードにより割り当てられ、たとえばLispモードはこれを@code{lisp-indent-line}、Cモードは@code{c-indent-line}のようにセットする。デフォルト値は@code{indent-relative}。@ref{Auto-Indentation}を参照のこと。"

#. type: deffn
#: original_texis/text.texi:2335
#, no-wrap
msgid "Command indent-according-to-mode"
msgstr "Command indent-according-to-mode"

#. type: deffn
#: original_texis/text.texi:2338
msgid "This command calls the function in @code{indent-line-function} to indent the current line in a way appropriate for the current major mode."
msgstr "このコマンドはカレントのメジャーモードに適した方法でカレント行をインデントするために@code{indent-line-function}内の関数を呼び出す。"

#. type: deffn
#: original_texis/text.texi:2340
#, no-wrap
msgid "Command newline-and-indent"
msgstr "Command newline-and-indent"

#. type: deffn
#: original_texis/text.texi:2344
msgid "This function inserts a newline, then indents the new line (the one following the newline just inserted) according to the major mode.  It does indentation by calling @code{indent-according-to-mode}."
msgstr "この関数は改行を挿入後に、メジャーモードに応じて新たな行(挿入した改行の次の行)をインデントする。これは@code{indent-according-to-mode}を呼び出すことによりインデントを行う。"

#. type: deffn
#: original_texis/text.texi:2346
#, no-wrap
msgid "Command reindent-then-newline-and-indent"
msgstr "Command reindent-then-newline-and-indent"

#. type: deffn
#: original_texis/text.texi:2351
msgid "This command reindents the current line, inserts a newline at point, and then indents the new line (the one following the newline just inserted).  It does indentation on both lines by calling @code{indent-according-to-mode}."
msgstr "このコマンドはカレント行の再インデント、ポイント位置への改行の挿入、その後に新たな行(挿入した改行の次の行)のインデントを行う。これは@code{indent-according-to-mode}を呼び出すことにより両方の行をインデントする。"

#. type: defopt
#: original_texis/text.texi:2353
#, no-wrap
msgid "tab-always-indent"
msgstr "tab-always-indent"

#. type: defopt
#: original_texis/text.texi:2363
msgid "This variable can be used to customize the behavior of the @key{TAB} (@code{indent-for-tab-command}) command.  If the value is @code{t} (the default), the command normally just indents the current line.  If the value is @code{nil}, the command indents the current line only if point is at the left margin or in the line's indentation; otherwise, it inserts a tab character.  If the value is @code{complete}, the command first tries to indent the current line, and if the line was already indented, it calls @code{completion-at-point} to complete the text at point (@pxref{Completion in Buffers})."
msgstr "この変数は@key{TAB} (@code{indent-for-tab-command})コマンドの挙動のカスタマイズに使用できる。値が@code{t}(デフォルト)ならコマンドは通常はカレント行だけをインデントする。値が@code{nil}ならコマンドはポイントが左マージン、またはその行のインデント内ににあるときのみカレント行をインデントして、それ以外はタブ文字を挿入する。値が@code{complete}ならコマンドはまずカレント行のインデントを試みて、その行がすでにインデント済みならポイント位置のテキストを補完するために@code{completion-at-point}を呼び出す(@ref{Completion in Buffers}を参照)。"

#. type: subsection
#: original_texis/text.texi:2367
#, no-wrap
msgid "Indenting an Entire Region"
msgstr "Indenting an Entire Region"

#. type: Plain text
#: original_texis/text.texi:2371
msgid "This section describes commands that indent all the lines in the region.  They return unpredictable values."
msgstr "このセクションではリージョン内すべての行をインデントするコマンドを説明します。これらは予期せぬ値をリターンします。"

#. type: deffn
#: original_texis/text.texi:2372
#, no-wrap
msgid "Command indent-region start end &optional to-column"
msgstr "Command indent-region start end &optional to-column"

#. type: deffn
#: original_texis/text.texi:2378
msgid "This command indents each nonblank line starting between @var{start} (inclusive) and @var{end} (exclusive).  If @var{to-column} is @code{nil}, @code{indent-region} indents each nonblank line by calling the current mode's indentation function, the value of @code{indent-line-function}."
msgstr "このコマンドは@var{start} (含む)から@var{end} (含まず)で始まる非ブランク行すべてをインデントする。@var{to-column}が@code{nil}なら@code{indent-region}はカレントモードのインデント関数、すなわち@code{indent-line-function}の値を呼び出すことにより非ブランク行すべてをインデントする。"

#. type: deffn
#: original_texis/text.texi:2383
msgid "If @var{to-column} is non-@code{nil}, it should be an integer specifying the number of columns of indentation; then this function gives each line exactly that much indentation, by either adding or deleting whitespace."
msgstr "@var{to-column}が非@code{nil}なら、それはインデントの列数を指定する整数であること。その場合には、この関数は空白文字を追加か削除することにより正確にその量のインデントを各行に与える。"

#. type: deffn
#: original_texis/text.texi:2386
msgid "If there is a fill prefix, @code{indent-region} indents each line by making it start with the fill prefix."
msgstr "フィルプレフィクスがある場合には、@code{indent-region}はそのフィルプレフィクスで開始されるように各行をインデントする。"

#. type: defvar
#: original_texis/text.texi:2388
#, no-wrap
msgid "indent-region-function"
msgstr "indent-region-function"

#. type: defvar
#: original_texis/text.texi:2394
msgid "The value of this variable is a function that can be used by @code{indent-region} as a short cut.  It should take two arguments, the start and end of the region.  You should design the function so that it will produce the same results as indenting the lines of the region one by one, but presumably faster."
msgstr "この変数の値はショートカットとして@code{indent-region}により使用されるかもしれない関数。その関数はリージョンの開始と終了という2つの引数を受け取ること。その関数はリージョンの行を1行ずつインデントするときと同じような結果を生成するようにデザインするべきだが、おそらくより高速になるであろう。"

#. type: defvar
#: original_texis/text.texi:2397
msgid "If the value is @code{nil}, there is no short cut, and @code{indent-region} actually works line by line."
msgstr "値が@code{nil}ならショートカットは存在せず@code{indent-region}は実際に1行ずつ機能する。"

#. type: defvar
#: original_texis/text.texi:2404
msgid "A short-cut function is useful in modes such as C mode and Lisp mode, where the @code{indent-line-function} must scan from the beginning of the function definition: applying it to each line would be quadratic in time.  The short cut can update the scan information as it moves through the lines indenting them; this takes linear time.  In a mode where indenting a line individually is fast, there is no need for a short cut."
msgstr "ショートカット関数は@code{indent-line-function}が関数定義先頭をスキャンしなければならないCモードやLispモードのようなモードにたいして有用であり、それを各行に適用するためには行数の2乗に比例する時間を要するだろう。ショートカットは各行のインデントとともに移動してスキャン情報を更新でき、それは線形時間である。行を個別にインデントするのが高速なモードではショートカットの必要性はない。"

#. type: defvar
#: original_texis/text.texi:2407
msgid "@code{indent-region} with a non-@code{nil} argument @var{to-column} has a different meaning and does not use this variable."
msgstr "引数@var{to-column}が非@code{nil}の@code{indent-region}では意味は異なり、この変数は使用しない。"

#. type: deffn
#: original_texis/text.texi:2409
#, no-wrap
msgid "Command indent-rigidly start end count"
msgstr "Command indent-rigidly start end count"

#. type: deffn
#: original_texis/text.texi:2414
msgid "This function indents all lines starting between @var{start} (inclusive) and @var{end} (exclusive) sideways by @var{count} columns.  This preserves the shape of the affected region, moving it as a rigid unit."
msgstr "この関数は@var{start} (含む)から@var{end} (含まず)までのすべての行を横に@var{count}列インデントする。これは影響を受けるリージョンの外観を保ち、それを厳密な単位として移動する。"

#. type: deffn
#: original_texis/text.texi:2419
msgid "This is useful not only for indenting regions of unindented text, but also for indenting regions of formatted code.  For example, if @var{count} is 3, this command adds 3 columns of indentation to every line that begins in the specified region."
msgstr "これはインデントされていないテキストリージョンのインデントだけでなく、フォーマット済みコードのリージョンにたいするインデントにも有用。たとえば@var{count}が3なら、このコマンドは指定されたリージョン内で始まるすべての行のインデントに3を追加する。"

#. type: deffn
#: original_texis/text.texi:2423
msgid "If called interactively with no prefix argument, this command invokes a transient mode for adjusting indentation rigidly.  @xref{Indentation Commands,,, emacs, The GNU Emacs Manual}."
msgstr "プレフィクス引数なしでインタラクティブに呼び出された場合には、このコマンドはインデントを厳密に調整するためにTransient Markモードを呼び出す。@ref{Indentation Commands,,, emacs, The GNU Emacs Manual}を参照のこと。"

#. type: deffn
#: original_texis/text.texi:2425
#, no-wrap
msgid "Command indent-code-rigidly start end columns &optional nochange-regexp"
msgstr "Command indent-code-rigidly start end columns &optional nochange-regexp"

#. type: deffn
#: original_texis/text.texi:2428
msgid "This is like @code{indent-rigidly}, except that it doesn't alter lines that start within strings or comments."
msgstr "これは@code{indent-rigidly}と似ているが文字列やコメントで始まる行を変更しない点が異なる。"

#. type: deffn
#: original_texis/text.texi:2431
msgid "In addition, it doesn't alter a line if @var{nochange-regexp} matches at the beginning of the line (if @var{nochange-regexp} is non-@code{nil})."
msgstr "加えて( @var{nochange-regexp}が非@code{nil}なら) @var{nochange-regexp}が行先頭にマッチする場合にはその行を変更しない。"

#. type: subsection
#: original_texis/text.texi:2434
#, no-wrap
msgid "Indentation Relative to Previous Lines"
msgstr "Indentation Relative to Previous Lines"

#. type: Plain text
#: original_texis/text.texi:2438
msgid "This section describes two commands that indent the current line based on the contents of previous lines."
msgstr "このセクションでは前の行のコンテンツにもとづいてカレント行をインデントするコマンドを2つ説明します。"

#. type: deffn
#: original_texis/text.texi:2439
#, no-wrap
msgid "Command indent-relative &optional unindented-ok"
msgstr "Command indent-relative &optional unindented-ok"

#. type: deffn
#: original_texis/text.texi:2447
msgid "This command inserts whitespace at point, extending to the same column as the next @dfn{indent point} of the previous nonblank line.  An indent point is a non-whitespace character following whitespace.  The next indent point is the first one at a column greater than the current column of point.  For example, if point is underneath and to the left of the first non-blank character of a line of text, it moves to that column by inserting whitespace."
msgstr "このコマンドは前の非ブランク行の次の@dfn{インデントポイント(indent point)}と同じ列に拡張されるように、ポイント位置に空白文字を挿入する。インデントポイントとは後に空白文字をともなった非空白文字。次のインデントポイントはポイントのカレント列より大きい、最初のインデントポイントになる。たとえばポイントがテキスト行の最初の非ブランク文字の下と左にある場合には、空白文字を挿入してその列に移動する。"

#. type: deffn
#: original_texis/text.texi:2454
msgid "If the previous nonblank line has no next indent point (i.e., none at a great enough column position), @code{indent-relative} either does nothing (if @var{unindented-ok} is non-@code{nil}) or calls @code{tab-to-tab-stop}.  Thus, if point is underneath and to the right of the last column of a short line of text, this command ordinarily moves point to the next tab stop by inserting whitespace."
msgstr "前の非ブランク行に次のインデントポイントがない(列の位置が十分大きくない)場合には、( @var{unindented-ok}が非@code{nil}なら)何もしないか、あるいは@code{tab-to-tab-stop}を呼び出す。したがってポイントが短いテキスト行の最後の列の下と右にある場合には、このコマンドは通常は空白文字を挿入することにより次のタブストップにポイントを移動する。"

#. type: deffn
#: original_texis/text.texi:2456
msgid "The return value of @code{indent-relative} is unpredictable."
msgstr "@code{indent-relative}のリターン値は予測できない。"

#. type: deffn
#: original_texis/text.texi:2459
msgid "In the following example, point is at the beginning of the second line:"
msgstr "以下の例ではポイントは2行目の先頭にある:"

#. type: group
#: original_texis/text.texi:2464
#, no-wrap
msgid ""
"            This line is indented twelve spaces.\n"
"@point{}The quick brown fox jumped.\n"
msgstr ""
"            This line is indented twelve spaces.\n"
"@point{}The quick brown fox jumped.\n"

#. type: deffn
#: original_texis/text.texi:2470 original_texis/text.texi:2491
msgid "Evaluation of the expression @code{(indent-relative nil)} produces the following:"
msgstr "式@code{(indent-relative nil)}の評価により以下が生成される:"

#. type: group
#: original_texis/text.texi:2475
#, no-wrap
msgid ""
"            This line is indented twelve spaces.\n"
"            @point{}The quick brown fox jumped.\n"
msgstr ""
"            This line is indented twelve spaces.\n"
"            @point{}The quick brown fox jumped.\n"

#. type: deffn
#: original_texis/text.texi:2480
msgid "In this next example, point is between the @samp{m} and @samp{p} of @samp{jumped}:"
msgstr "次の例ではポイントは@samp{jumped}の@samp{m}と@samp{p}の間にある:"

#. type: group
#: original_texis/text.texi:2485
#, no-wrap
msgid ""
"            This line is indented twelve spaces.\n"
"The quick brown fox jum@point{}ped.\n"
msgstr ""
"            This line is indented twelve spaces.\n"
"The quick brown fox jum@point{}ped.\n"

#. type: group
#: original_texis/text.texi:2496
#, no-wrap
msgid ""
"            This line is indented twelve spaces.\n"
"The quick brown fox jum  @point{}ped.\n"
msgstr ""
"            This line is indented twelve spaces.\n"
"The quick brown fox jum  @point{}ped.\n"

#. type: deffn
#: original_texis/text.texi:2500
#, no-wrap
msgid "Command indent-relative-maybe"
msgstr "Command indent-relative-maybe"

#. type: deffn
#: original_texis/text.texi:2505
msgid "This command indents the current line like the previous nonblank line, by calling @code{indent-relative} with @code{t} as the @var{unindented-ok} argument.  The return value is unpredictable."
msgstr "このコマンドは引数@var{unindented-ok}に@code{t}を指定して@code{indent-relative}を呼び出すことにより、前の非ブランク行に倣ってカレント行をインデントする。リターン値は予測できない。"

#. type: deffn
#: original_texis/text.texi:2508
msgid "If the previous nonblank line has no indent points beyond the current column, this command does nothing."
msgstr "カレント列より先のインデントポイントが前の非ブランク行に存在しなければこのコマンドは何もしない。"

#. type: subsection
#: original_texis/text.texi:2511
#, no-wrap
msgid "Adjustable Tab Stops"
msgstr "Adjustable Tab Stops"

#. type: cindex
#: original_texis/text.texi:2512
#, no-wrap
msgid "tabs stops for indentation"
msgstr "tabs stops for indentation"

#. type: Plain text
#: original_texis/text.texi:2523
msgid "This section explains the mechanism for user-specified tab stops and the mechanisms that use and set them.  The name ``tab stops'' is used because the feature is similar to that of the tab stops on a typewriter.  The feature works by inserting an appropriate number of spaces and tab characters to reach the next tab stop column; it does not affect the display of tab characters in the buffer (@pxref{Usual Display}).  Note that the @key{TAB} character as input uses this tab stop feature only in a few major modes, such as Text mode.  @xref{Tab Stops,,, emacs, The GNU Emacs Manual}."
msgstr "このセクションではユーザー指定のタブストップ(tab stops)と、それらの使用やセットするメカニズムについて説明します。``タブストップ''という名前はタイプライターのタブストップと機能が類似しているため使用されています。この機能は次のタブストップ列に到達するために、適切な数のスペースとタブを挿入することにより機能します。これはバッファー内のタブ文字の表示に影響を与えません(@ref{Usual Display}を参照)。Textモードのような少数のメジャーモードだけが、@key{TAB}文字を入力としてこのタブストップ機能を使用することに注意してください。@ref{Tab Stops,,, emacs, The GNU Emacs Manual}を参照してください。"

#. type: deffn
#: original_texis/text.texi:2524
#, no-wrap
msgid "Command tab-to-tab-stop"
msgstr "Command tab-to-tab-stop"

#. type: deffn
#: original_texis/text.texi:2527
msgid "This command inserts spaces or tabs before point, up to the next tab stop column defined by @code{tab-stop-list}."
msgstr "このコマンドは@code{tab-stop-list}により定義される次のタブストップ列までポイント前にスペースかタブを挿入する。"

#. type: defopt
#: original_texis/text.texi:2529
#, no-wrap
msgid "tab-stop-list"
msgstr "tab-stop-list"

#. type: defopt
#: original_texis/text.texi:2537
msgid "This variable defines the tab stop columns used by @code{tab-to-tab-stop}.  It should be either @code{nil}, or a list of increasing integers, which need not be evenly spaced.  The list is implicitly extended to infinity through repetition of the interval between the last and penultimate elements (or @code{tab-width} if the list has fewer than two elements).  A value of @code{nil} means a tab stop every @code{tab-width} columns."
msgstr "この変数は@code{tab-to-tab-stop}により使用されるタブストップ列を定義する。これは@code{nil}、もしくは増加(均等に増加する必要はない)していく整数のリストであること。このリストは暗黙に、最後の要素と最後から2番目の要素の間隔(またはリストの要素が2未満なら@code{tab-width})を繰り返すことにより無限に拡張される。値@code{nil}は列@code{tab-width}ごとにタブストップすることを意味する。"

#. type: defopt
#: original_texis/text.texi:2539
msgid "Use @kbd{M-x edit-tab-stops} to edit the location of tab stops interactively."
msgstr "インタラクティブにタブストップの位置を編集するには@kbd{M-x edit-tab-stops}を使用すればよい。"

#. type: subsection
#: original_texis/text.texi:2542
#, no-wrap
msgid "Indentation-Based Motion Commands"
msgstr "Indentation-Based Motion Commands"

#. type: Plain text
#: original_texis/text.texi:2546
msgid "These commands, primarily for interactive use, act based on the indentation in the text."
msgstr "以下は主にインタラクティブに使用されるコマンドであり、テキスト内のインデントにもとづいて動作します。"

#. type: deffn
#: original_texis/text.texi:2547
#, no-wrap
msgid "Command back-to-indentation"
msgstr "Command back-to-indentation"

#. type: deffn
#: original_texis/text.texi:2552
msgid "This command moves point to the first non-whitespace character in the current line (which is the line in which point is located).  It returns @code{nil}."
msgstr "このコマンドはカレント行(ポイントのある行のこと)の最初の非空白文字にポイントを移動する。リターン値は@code{nil}。"

#. type: deffn
#: original_texis/text.texi:2554
#, no-wrap
msgid "Command backward-to-indentation &optional arg"
msgstr "Command backward-to-indentation &optional arg"

#. type: deffn
#: original_texis/text.texi:2559
msgid "This command moves point backward @var{arg} lines and then to the first nonblank character on that line.  It returns @code{nil}.  If @var{arg} is omitted or @code{nil}, it defaults to 1."
msgstr "このコマンドは後方へ@var{arg}行ポイントを移動した後に、その行の最初の非ブランク文字にポイントを移動する。リターン値は@code{nil}。@var{arg}が省略または@code{nil}のときのデフォルトは1。"

#. type: deffn
#: original_texis/text.texi:2561
#, no-wrap
msgid "Command forward-to-indentation &optional arg"
msgstr "Command forward-to-indentation &optional arg"

#. type: deffn
#: original_texis/text.texi:2566
msgid "This command moves point forward @var{arg} lines and then to the first nonblank character on that line.  It returns @code{nil}.  If @var{arg} is omitted or @code{nil}, it defaults to 1."
msgstr "このコマンドは前方へ@var{arg}行ポイントを移動した後に、その行の最初の非ブランク文字にポイントを移動する。リターン値は@code{nil}。@var{arg}が省略または@code{nil}のときのデフォルトは1。"

#. type: cindex
#: original_texis/text.texi:2570
#, no-wrap
msgid "case conversion in buffers"
msgstr "case conversion in buffers"

#. type: Plain text
#: original_texis/text.texi:2576
msgid "The case change commands described here work on text in the current buffer.  @xref{Case Conversion}, for case conversion functions that work on strings and characters.  @xref{Case Tables}, for how to customize which characters are upper or lower case and how to convert them."
msgstr "ここで説明するcase(大文字小文字)変換コマンドはカレントバッファー内のテキストに作用します。文字列と文字のcase変換コマンドは@ref{Case Conversion}、大文字や小文字に変換する文字やその変換方法のカスタマイズは@ref{Case Tables}を参照してください。"

#. type: deffn
#: original_texis/text.texi:2577
#, no-wrap
msgid "Command capitalize-region start end"
msgstr "Command capitalize-region start end"

#. type: deffn
#: original_texis/text.texi:2582
msgid "This function capitalizes all words in the region defined by @var{start} and @var{end}.  To capitalize means to convert each word's first character to upper case and convert the rest of each word to lower case.  The function returns @code{nil}."
msgstr "この関数は@var{start}と@var{end}で定義されるリージョン内のすべての単語をcapitalizeする。capitalizeとは各単語の最初の文字を大文字、残りの文字を小文字に変換することを意味する。この関数は@code{nil}をリターンする。"

#. type: deffn
#: original_texis/text.texi:2585
msgid "If one end of the region is in the middle of a word, the part of the word within the region is treated as an entire word."
msgstr "リージョンのいずれかの端が単語の中間にある場合には、リージョン内にある部分を単語全体として扱う。"

#. type: deffn
#: original_texis/text.texi:2588
msgid "When @code{capitalize-region} is called interactively, @var{start} and @var{end} are point and the mark, with the smallest first."
msgstr "インタラクティブに@code{capitalize-region}が呼び出された際には、@var{start}と@var{end}はポイントとマークになり小さいほうが先になる。"

#. type: group
#: original_texis/text.texi:2594
#, no-wrap
msgid ""
"---------- Buffer: foo ----------\n"
"This is the contents of the 5th foo.\n"
"---------- Buffer: foo ----------\n"
msgstr ""
"---------- Buffer: foo ----------\n"
"This is the contents of the 5th foo.\n"
"---------- Buffer: foo ----------\n"

#. type: group
#: original_texis/text.texi:2599
#, no-wrap
msgid ""
"(capitalize-region 1 37)\n"
"@result{} nil\n"
"\n"
msgstr ""
"(capitalize-region 1 37)\n"
"@result{} nil\n"
"\n"

#. type: group
#: original_texis/text.texi:2603
#, no-wrap
msgid ""
"---------- Buffer: foo ----------\n"
"This Is The Contents Of The 5th Foo.\n"
"---------- Buffer: foo ----------\n"
msgstr ""
"---------- Buffer: foo ----------\n"
"This Is The Contents Of The 5th Foo.\n"
"---------- Buffer: foo ----------\n"

#. type: deffn
#: original_texis/text.texi:2607
#, no-wrap
msgid "Command downcase-region start end"
msgstr "Command downcase-region start end"

#. type: deffn
#: original_texis/text.texi:2611
msgid "This function converts all of the letters in the region defined by @var{start} and @var{end} to lower case.  The function returns @code{nil}."
msgstr "この関数は@var{start}と@var{end}で定義されるリージョン内のすべての英文字を小文字に変換する。この関数は@code{nil}をリターンする。"

#. type: deffn
#: original_texis/text.texi:2614
msgid "When @code{downcase-region} is called interactively, @var{start} and @var{end} are point and the mark, with the smallest first."
msgstr "インタラクティブに@code{downcase-region}が呼び出された際には、@var{start}と@var{end}はポイントとマークになり小さいほうが先になる。"

#. type: deffn
#: original_texis/text.texi:2616
#, no-wrap
msgid "Command upcase-region start end"
msgstr "Command upcase-region start end"

#. type: deffn
#: original_texis/text.texi:2620
msgid "This function converts all of the letters in the region defined by @var{start} and @var{end} to upper case.  The function returns @code{nil}."
msgstr "この関数は@var{start}と@var{end}で定義されるリージョン内のすべての英文字を大文字に変換する。この関数は@code{nil}をリターンする。"

#. type: deffn
#: original_texis/text.texi:2623
msgid "When @code{upcase-region} is called interactively, @var{start} and @var{end} are point and the mark, with the smallest first."
msgstr "インタラクティブに@code{upcase-region}が呼び出された際には、@var{start}と@var{end}はポイントとマークになり小さいほうが先になる。"

#. type: deffn
#: original_texis/text.texi:2625
#, no-wrap
msgid "Command capitalize-word count"
msgstr "Command capitalize-word count"

#. type: deffn
#: original_texis/text.texi:2632
msgid "This function capitalizes @var{count} words after point, moving point over as it does.  To capitalize means to convert each word's first character to upper case and convert the rest of each word to lower case.  If @var{count} is negative, the function capitalizes the @minus{}@var{count} previous words but does not move point.  The value is @code{nil}."
msgstr "この関数はポイントの後の@var{count}単語をcapitalizeして、変換後その後にポイントを移動する。capitalizeとは各単語の先頭を大文字、残りを小文字に変換することを意味する。@var{count}が負なら、この関数は前の@minus{}@var{count}単語をcapitalizeするがポイントは移動しない。値は@code{nil}。"

#. type: deffn
#: original_texis/text.texi:2635
msgid "If point is in the middle of a word, the part of the word before point is ignored when moving forward.  The rest is treated as an entire word."
msgstr "ポイントが単語の中間にある場合には、ポイントの前にある単語部分は前方に移動する際は無視される。そして残りの部分が単語全体として扱われる。"

#. type: deffn
#: original_texis/text.texi:2638
msgid "When @code{capitalize-word} is called interactively, @var{count} is set to the numeric prefix argument."
msgstr "インタラクティブに@code{capitalize-word}が呼び出された際には、@var{count}に数プレフィクス引数がセットされる。"

#. type: deffn
#: original_texis/text.texi:2640
#, no-wrap
msgid "Command downcase-word count"
msgstr "Command downcase-word count"

#. type: deffn
#: original_texis/text.texi:2645
msgid "This function converts the @var{count} words after point to all lower case, moving point over as it does.  If @var{count} is negative, it converts the @minus{}@var{count} previous words but does not move point.  The value is @code{nil}."
msgstr "この関数はポイントの後の@var{count}単語を小文字に変換して、変換後その後にポイントを移動する。@var{count}が負なら、この関数は前の@minus{}@var{count}単語を小文字に変換するがポイントは移動しない。値は@code{nil}。"

#. type: deffn
#: original_texis/text.texi:2648
msgid "When @code{downcase-word} is called interactively, @var{count} is set to the numeric prefix argument."
msgstr "インタラクティブに@code{downcase-word}が呼び出された際には、@var{count}に数プレフィクス引数がセットされる。"

#. type: deffn
#: original_texis/text.texi:2650
#, no-wrap
msgid "Command upcase-word count"
msgstr "Command upcase-word count"

#. type: deffn
#: original_texis/text.texi:2655
msgid "This function converts the @var{count} words after point to all upper case, moving point over as it does.  If @var{count} is negative, it converts the @minus{}@var{count} previous words but does not move point.  The value is @code{nil}."
msgstr "この関数はポイントの後の@var{count}単語を大文字に変換して、変換後その後にポイントを移動する。@var{count}が負なら、この関数は前の@minus{}@var{count}単語を小文字に変換するがポイントは移動しない。値は@code{nil}。"

#. type: deffn
#: original_texis/text.texi:2658
msgid "When @code{upcase-word} is called interactively, @var{count} is set to the numeric prefix argument."
msgstr "インタラクティブに@code{upcase-word}が呼び出された際には、@var{count}に数プレフィクス引数がセットされる。"

#. type: cindex
#: original_texis/text.texi:2662
#, no-wrap
msgid "text properties"
msgstr "text properties"

#. type: cindex
#: original_texis/text.texi:2663
#, no-wrap
msgid "attributes of text"
msgstr "attributes of text"

#. type: cindex
#: original_texis/text.texi:2664
#, no-wrap
msgid "properties of text"
msgstr "properties of text"

#. type: Plain text
#: original_texis/text.texi:2673
msgid "Each character position in a buffer or a string can have a @dfn{text property list}, much like the property list of a symbol (@pxref{Property Lists}).  The properties belong to a particular character at a particular place, such as, the letter @samp{T} at the beginning of this sentence or the first @samp{o} in @samp{foo}---if the same character occurs in two different places, the two occurrences in general have different properties."
msgstr "バッファーや文字列内の各文字位置は、シンボルにおけるプロパティリスト(@ref{Property Lists}を参照)のように@dfn{テキストプロパティリスト(text property list)}をもつことができます。特定の位置の特定の文字に属するプロパティ、たとえばこのセンテンス先頭の文字@samp{T} (訳注: 翻訳前のセンテンスは\"The properties belong to a ...\"で始まる)、または@samp{foo}の最初の@samp{o}など、もし同じ文字が異なる2箇所に存在する場合には、2つの文字は一般的に異なるプロパティをもちます。"

#. type: Plain text
#: original_texis/text.texi:2680
msgid "Each property has a name and a value.  Both of these can be any Lisp object, but the name is normally a symbol.  Typically each property name symbol is used for a particular purpose; for instance, the text property @code{face} specifies the faces for displaying the character (@pxref{Special Properties}).  The usual way to access the property list is to specify a name and ask what value corresponds to it."
msgstr "それぞれのプロパティには名前と値があります。どちらも任意のLispオブジェクトをもつことができますが、名前は通常はシンボルです。典型的にはそれぞれのプロパティ名シンボルは特定の目的のために使用されます。たとえばテキストプロパティ@code{face}は、文字を表示するためのフェイスを指定します(@ref{Special Properties}を参照)。名前を指定してそれに対応する値を尋ねるのが、このプロパティリストにアクセスするための通常の方法です。"

#. type: Plain text
#: original_texis/text.texi:2685
msgid "If a character has a @code{category} property, we call it the @dfn{property category} of the character.  It should be a symbol.  The properties of the symbol serve as defaults for the properties of the character."
msgstr "ある文字が@code{category}プロパティをもつ場合は、それをその文字の@dfn{プロパティカテゴリー(property category)}と呼びます。これはシンボルであるべきです。そのシンボルのプロパティはその文字のプロパティにたいしてデフォルトとしての役割をもちます。"

#. type: Plain text
#: original_texis/text.texi:2689
msgid "Copying text between strings and buffers preserves the properties along with the characters; this includes such diverse functions as @code{substring}, @code{insert}, and @code{buffer-substring}."
msgstr "文字列とバッファーの間でのテキストのコピーでは、文字とともにそのプロパティが保持されます。これには@code{substring}、@code{insert}、@code{buffer-substring}のようなさまざまな関数が含まれます。"

#. type: node
#: original_texis/text.texi:2706 original_texis/text.texi:2708
#, no-wrap
msgid "Examining Properties"
msgstr "Examining Properties"

#. type: menuentry
#: original_texis/text.texi:2706
msgid "Looking at the properties of one character."
msgstr "単一の文字のプロパティを調べる。"

#. type: node
#: original_texis/text.texi:2706 original_texis/text.texi:2801
#, no-wrap
msgid "Changing Properties"
msgstr "Changing Properties"

#. type: menuentry
#: original_texis/text.texi:2706
msgid "Setting the properties of a range of text."
msgstr "テキスト範囲のプロパティをセットする。"

#. type: node
#: original_texis/text.texi:2706 original_texis/text.texi:2971
#, no-wrap
msgid "Property Search"
msgstr "Property Search"

#. type: menuentry
#: original_texis/text.texi:2706
msgid "Searching for where a property changes value."
msgstr "プロパティが値を変更する場所の検索。"

#. type: node
#: original_texis/text.texi:2706 original_texis/text.texi:3113
#, no-wrap
msgid "Special Properties"
msgstr "Special Properties"

#. type: menuentry
#: original_texis/text.texi:2706
msgid "Particular properties with special meanings."
msgstr "特別な意味をもつ特定のプロパティ。"

#. type: node
#: original_texis/text.texi:2706 original_texis/text.texi:3538
#, no-wrap
msgid "Format Properties"
msgstr "Format Properties"

#. type: menuentry
#: original_texis/text.texi:2706
msgid "Properties for representing formatting of text."
msgstr "テキストのフォーマットを表すプロパティ。"

#. type: node
#: original_texis/text.texi:2706 original_texis/text.texi:3566
#, no-wrap
msgid "Sticky Properties"
msgstr "Sticky Properties"

#. type: menuentry
#: original_texis/text.texi:2706
msgid "How inserted text gets properties from neighboring text."
msgstr "挿入されたテキストが隣接するテキストからプロパティを取得する方法。"

#. type: node
#: original_texis/text.texi:2706 original_texis/text.texi:3653
#, no-wrap
msgid "Lazy Properties"
msgstr "Lazy Properties"

#. type: menuentry
#: original_texis/text.texi:2706
msgid "Computing text properties in a lazy fashion only when text is examined."
msgstr "テキストが調べられる際のみ、ものぐさな方法でテキストプロパティを計算する。"

#. type: node
#: original_texis/text.texi:2706 original_texis/text.texi:3698
#, no-wrap
msgid "Clickable Text"
msgstr "Clickable Text"

#. type: menuentry
#: original_texis/text.texi:2706
msgid "Using text properties to make regions of text do something when you click on them."
msgstr "テキストプロパティを使用して、テキストリージョンがクリック時に何か行うようにする。"

#. type: node
#: original_texis/text.texi:2706 original_texis/text.texi:3895
#, no-wrap
msgid "Fields"
msgstr "Fields"

#. type: menuentry
#: original_texis/text.texi:2706
msgid "The @code{field} property defines fields within the buffer."
msgstr "バッファー内にフィールドを定義する@code{field}プロパティ。"

#. type: node
#: original_texis/text.texi:2706 original_texis/text.texi:4012
#, no-wrap
msgid "Not Intervals"
msgstr "Not Intervals"

#. type: menuentry
#: original_texis/text.texi:2706
msgid "Why text properties do not use Lisp-visible text intervals."
msgstr "テキストプロパティがLispから可視なテキスト間隔をもたない理由。"

#. type: subsection
#: original_texis/text.texi:2709
#, no-wrap
msgid "Examining Text Properties"
msgstr "Examining Text Properties"

#. type: cindex
#: original_texis/text.texi:2710
#, no-wrap
msgid "examining text properties"
msgstr "examining text properties"

#. type: cindex
#: original_texis/text.texi:2711
#, no-wrap
msgid "text properties, examining"
msgstr "text properties, examining"

#. type: Plain text
#: original_texis/text.texi:2718
msgid "The simplest way to examine text properties is to ask for the value of a particular property of a particular character.  For that, use @code{get-text-property}.  Use @code{text-properties-at} to get the entire property list of a character.  @xref{Property Search}, for functions to examine the properties of a number of characters at once."
msgstr "テキストプロパティを調べるもっともシンプルな方法は、特定の文字の特定のプロパティの値を尋ねる方法です。これを行うには@code{get-text-property}を使用します。ある文字のプロパティリスト全体を取得するには@code{text-properties-at}を使用します。複数の文字のプロパティを一度に調べる関数については@ref{Property Search}を参照してください。"

#. type: Plain text
#: original_texis/text.texi:2722
msgid "These functions handle both strings and buffers.  Keep in mind that positions in a string start from 0, whereas positions in a buffer start from 1."
msgstr "以下の関数は文字列とバッファーの両方を処理します。バッファー内の位置は1から始まりますが、文字列内の位置は0から始まることに留意してください。"

#. type: defun
#: original_texis/text.texi:2723
#, no-wrap
msgid "get-text-property pos prop &optional object"
msgstr "get-text-property pos prop &optional object"

#. type: defun
#: original_texis/text.texi:2728
msgid "This function returns the value of the @var{prop} property of the character after position @var{pos} in @var{object} (a buffer or string).  The argument @var{object} is optional and defaults to the current buffer."
msgstr "この関数は@var{object} (バッファーか文字列)内の位置@var{pos}の後にある文字のプロパティ@var{prop}の値をリターンする。引数@var{object}はオプションでありデフォルトはカレントバッファー。"

#. type: defun
#: original_texis/text.texi:2732
msgid "If there is no @var{prop} property strictly speaking, but the character has a property category that is a symbol, then @code{get-text-property} returns the @var{prop} property of that symbol."
msgstr "厳密な意味で@var{prop}プロパティは存在しないが、その文字がシンボルのプロパティカテゴリーをもつなら、@code{get-text-property}はそのシンボルの@var{prop}プロパティをリターンする。"

#. type: defun
#: original_texis/text.texi:2734
#, no-wrap
msgid "get-char-property position prop &optional object"
msgstr "get-char-property position prop &optional object"

#. type: defun
#: original_texis/text.texi:2737
msgid "This function is like @code{get-text-property}, except that it checks overlays first and then text properties.  @xref{Overlays}."
msgstr "この関数は@code{get-text-property}と似ているが、まずオーバーレイをチェックして次にテキストプロパティをチェックする点が異なる。@ref{Overlays}を参照のこと。"

#. type: defun
#: original_texis/text.texi:2745
msgid "The argument @var{object} may be a string, a buffer, or a window.  If it is a window, then the buffer displayed in that window is used for text properties and overlays, but only the overlays active for that window are considered.  If @var{object} is a buffer, then overlays in that buffer are considered first, in order of decreasing priority, followed by the text properties.  If @var{object} is a string, only text properties are considered, since strings never have overlays."
msgstr "引数@var{object}は文字列、バッファー、あるいはウィンドウかもしれない。ウィンドウならそのウィンドウ内に表示されているバッファーのテキストプロパティとオーバーレイが使用されるが、そのウィンドウにたいしてアクティブなオーバーレイだけが考慮される。@var{object}がバッファーなら、そのバッファー内のオーバーレイがまず優先的に考慮されて、その後にテキストプロパティが考慮される。@var{object}が文字列なら文字列がオーバーレイをもつことは決してないのでテキストプロパティだけが考慮される。"

#. type: defun
#: original_texis/text.texi:2747
#, no-wrap
msgid "get-pos-property position prop &optional object"
msgstr "get-pos-property position prop &optional object"

#. type: defun
#: original_texis/text.texi:2752
msgid "This function is like @code{get-char-property}, except that it pays attention to properties' stickiness and overlays' advancement settings instead of the property of the character at (i.e., right after)  @var{position}."
msgstr "この関数は@code{get-char-property}と似ているが、@var{position} (すぐ右)にある文字のプロパティのかわりにプロパティのstickiness(粘着性)とオーバーレイのadvancement(前向的)のセッティングに注意を払う点が異なる。"

#. type: defun
#: original_texis/text.texi:2754
#, no-wrap
msgid "get-char-property-and-overlay position prop &optional object"
msgstr "get-char-property-and-overlay position prop &optional object"

#. type: defun
#: original_texis/text.texi:2757
msgid "This is like @code{get-char-property}, but gives extra information about the overlay that the property value comes from."
msgstr "これは@code{get-char-property}と似ているが、そのプロパティ値が由来するオーバーレイについて追加情報を与える点が異なる。"

#. type: defun
#: original_texis/text.texi:2763
msgid "Its value is a cons cell whose @sc{car} is the property value, the same value @code{get-char-property} would return with the same arguments.  Its @sc{cdr} is the overlay in which the property was found, or @code{nil}, if it was found as a text property or not found at all."
msgstr "値は@sc{car}がプロパティ値であるようなコンスセルであり、これは同じ引数により@code{get-char-property}がリターンするであろう値と同じ。@sc{cdr}はそのプロパティが見つかった箇所のオーバーレイ、テキストプロパティとして見つかった場合や見つからなかった場合には@code{nil}。"

#. type: defun
#: original_texis/text.texi:2766
msgid "If @var{position} is at the end of @var{object}, both the @sc{car} and the @sc{cdr} of the value are @code{nil}."
msgstr "@var{position}が@var{object}の終端なら@sc{car}と@sc{cdr}の値はどちらも@code{nil}。"

#. type: defvar
#: original_texis/text.texi:2768
#, no-wrap
msgid "char-property-alias-alist"
msgstr "char-property-alias-alist"

#. type: defvar
#: original_texis/text.texi:2775
msgid "This variable holds an alist which maps property names to a list of alternative property names.  If a character does not specify a direct value for a property, the alternative property names are consulted in order; the first non-@code{nil} value is used.  This variable takes precedence over @code{default-text-properties}, and @code{category} properties take precedence over this variable."
msgstr "この変数はプロパティ名と代替となるプロパティ名リストをマップするalistを保持する。文字があるプロパティにたいして直接値を指定しなければ、順に代替プロパティ名が調べられて最初の非@code{nil}値が使用される。この変数は@code{default-text-properties}より優先されて、この変数より@code{category}プロパティが優先される。"

#. type: defun
#: original_texis/text.texi:2777
#, no-wrap
msgid "text-properties-at position &optional object"
msgstr "text-properties-at position &optional object"

#. type: defun
#: original_texis/text.texi:2781
msgid "This function returns the entire property list of the character at @var{position} in the string or buffer @var{object}.  If @var{object} is @code{nil}, it defaults to the current buffer."
msgstr "この関数は文字列かバッファー@var{object}内の位置@var{position}にある文字のプロパティリスト全体をリターンする。@var{object}が@code{nil}ならデフォルトはカレントバッファー。"

#. type: defvar
#: original_texis/text.texi:2783
#, no-wrap
msgid "default-text-properties"
msgstr "default-text-properties"

#. type: defvar
#: original_texis/text.texi:2789
msgid "This variable holds a property list giving default values for text properties.  Whenever a character does not specify a value for a property, neither directly, through a category symbol, or through @code{char-property-alias-alist}, the value stored in this list is used instead.  Here is an example:"
msgstr "この変数はテキストプロパティにたいしてデフォルト値を与えるプロパティリストを保持する。あるプロパティにたいして文字が直接、あるいはカテゴリーシンボルや@code{char-property-alias-alist}を通じて値を指定しないときは、常にこのリストに格納された値がかわりに使用される。以下は例:"

#. type: example
#: original_texis/text.texi:2798
#, no-wrap
msgid ""
"(setq default-text-properties '(foo 69)\n"
"      char-property-alias-alist nil)\n"
";; @r{Make sure character 1 has no properties of its own.}\n"
"(set-text-properties 1 2 nil)\n"
";; @r{What we get, when we ask, is the default value.}\n"
"(get-text-property 1 'foo)\n"
"     @result{} 69\n"
msgstr ""
"(setq default-text-properties '(foo 69)\n"
"      char-property-alias-alist nil)\n"
";; @r{文字1は自身のプロパティをもたない}\n"
"(set-text-properties 1 2 nil)\n"
";; @r{取得される値はデフォルト値}\n"
"(get-text-property 1 'foo)\n"
"     @result{} 69\n"

#. type: subsection
#: original_texis/text.texi:2802
#, no-wrap
msgid "Changing Text Properties"
msgstr "Changing Text Properties"

#. type: cindex
#: original_texis/text.texi:2803
#, no-wrap
msgid "changing text properties"
msgstr "changing text properties"

#. type: cindex
#: original_texis/text.texi:2804
#, no-wrap
msgid "text properties, changing"
msgstr "text properties, changing"

#. type: Plain text
#: original_texis/text.texi:2811
msgid "The primitives for changing properties apply to a specified range of text in a buffer or string.  The function @code{set-text-properties} (see end of section) sets the entire property list of the text in that range; more often, it is useful to add, change, or delete just certain properties specified by name."
msgstr "プロパティを変更するプリミティブは、バッファーや文字列内の指定されたテキスト範囲に適用されます。関数@code{set-text-properties} (セクションの最後を参照)は、その範囲内のテキストのプロパティリスト全体をセットします。名前を指定することにより特定のプロパティだけを追加、変更、削除するためにも有用です。"

#. type: Plain text
#: original_texis/text.texi:2818
msgid "Since text properties are considered part of the contents of the buffer (or string), and can affect how a buffer looks on the screen, any change in buffer text properties marks the buffer as modified.  Buffer text property changes are undoable also (@pxref{Undo}).  Positions in a string start from 0, whereas positions in a buffer start from 1."
msgstr "テキストプロパティはバッファー(か文字列)のコンテンツの一部とみなされ、かつスクリーン上でのバッファーの見栄えに影響を与えることができるので、バッファー内のテキストプロパティの変更はすべてバッファーを変更済みとマークします。バッファーテキストプロパティの変更もアンドゥできます(@ref{Undo}を参照)。バッファー内の位置は1から始まりますが、文字列内の位置は0から始まります。"

#. type: defun
#: original_texis/text.texi:2819
#, no-wrap
msgid "put-text-property start end prop value &optional object"
msgstr "put-text-property start end prop value &optional object"

#. type: defun
#: original_texis/text.texi:2823
msgid "This function sets the @var{prop} property to @var{value} for the text between @var{start} and @var{end} in the string or buffer @var{object}.  If @var{object} is @code{nil}, it defaults to the current buffer."
msgstr "この関数は文字列かバッファー@var{object}内の@var{start}と@var{end}の間のテキストにたいして、プロパティ@var{prop}に@var{value}をセットする。@var{object}が@code{nil}ならデフォルトはカレントバッファー。"

#. type: defun
#: original_texis/text.texi:2825
#, no-wrap
msgid "add-text-properties start end props &optional object"
msgstr "add-text-properties start end props &optional object"

#. type: defun
#: original_texis/text.texi:2829
msgid "This function adds or overrides text properties for the text between @var{start} and @var{end} in the string or buffer @var{object}.  If @var{object} is @code{nil}, it defaults to the current buffer."
msgstr "この関数は文字列かバッファー@var{object}内の@var{start}と@var{end}の間のテキストにたいして、テキストプロパティを追加またはオーバーライドする。@var{object}が@code{nil}ならデフォルトはカレントバッファー。"

#. type: defun
#: original_texis/text.texi:2834
msgid "The argument @var{props} specifies which properties to add.  It should have the form of a property list (@pxref{Property Lists}): a list whose elements include the property names followed alternately by the corresponding values."
msgstr "引数@var{props}には追加するプロパティを指定する。これはプロパティリストの形式(@ref{Property Lists}を参照)、つまりプロパティ名と対応する値が交互に出現するような要素を含むリストであること。"

#. type: defun
#: original_texis/text.texi:2838
msgid "The return value is @code{t} if the function actually changed some property's value; @code{nil} otherwise (if @var{props} is @code{nil} or its values agree with those in the text)."
msgstr "関数が実際に何らかのプロパティの値を変更したら@code{t}、それ以外( @var{props}が@code{nil}、またはプロパティの値がテキスト内のプロパティの値と一致している場合)は@code{nil}がリターン値となる。"

#. type: defun
#: original_texis/text.texi:2841
msgid "For example, here is how to set the @code{comment} and @code{face} properties of a range of text:"
msgstr "たとえば以下はテキストの範囲に@code{comment}と@code{face}のプロパティをセットする例:"

#. type: example
#: original_texis/text.texi:2845
#, no-wrap
msgid ""
"(add-text-properties @var{start} @var{end}\n"
"                     '(comment t face highlight))\n"
msgstr ""
"(add-text-properties @var{start} @var{end}\n"
"                     '(comment t face highlight))\n"

#. type: defun
#: original_texis/text.texi:2848
#, no-wrap
msgid "remove-text-properties start end props &optional object"
msgstr "remove-text-properties start end props &optional object"

#. type: defun
#: original_texis/text.texi:2852
msgid "This function deletes specified text properties from the text between @var{start} and @var{end} in the string or buffer @var{object}.  If @var{object} is @code{nil}, it defaults to the current buffer."
msgstr "この関数は文字列かバッファー@var{object}内の@var{start}と@var{end}の間のテキストから、指定されたテキストプロパティを削除する。@var{object}が@code{nil}ならデフォルトはカレントバッファー。"

#. type: defun
#: original_texis/text.texi:2858
msgid "The argument @var{props} specifies which properties to delete.  It should have the form of a property list (@pxref{Property Lists}): a list whose elements are property names alternating with corresponding values.  But only the names matter---the values that accompany them are ignored.  For example, here's how to remove the @code{face} property."
msgstr "引数@var{props}は削除するプロパティを指定する。これはプロパティリストの形式(@ref{Property Lists}を参照)、つまりプロパティ名と対応する値が交互に出現するような要素を含むリストであること。しかし問題となるのは名前であって付随する値は無視される。たとえば@code{face}プロパティを削除するには以下のようにすればよい。"

#. type: example
#: original_texis/text.texi:2861
#, no-wrap
msgid "(remove-text-properties @var{start} @var{end} '(face nil))\n"
msgstr "(remove-text-properties @var{start} @var{end} '(face nil))\n"

#. type: defun
#: original_texis/text.texi:2866
msgid "The return value is @code{t} if the function actually changed some property's value; @code{nil} otherwise (if @var{props} is @code{nil} or if no character in the specified text had any of those properties)."
msgstr "関数が実際に何らかのプロパティの値を変更したら@code{t}、それ以外( @var{props}が@code{nil}、または指定されたテキスト内にそれらのプロパティをもつ文字がない場合)は@code{nil}がリターン値となる。"

#. type: defun
#: original_texis/text.texi:2870
msgid "To remove all text properties from certain text, use @code{set-text-properties} and specify @code{nil} for the new property list."
msgstr "特定のテキストからすべてのテキストプロパティを削除するには、新たなプロパティリストに@code{nil}を指定して@code{set-text-properties}を使用すればよい。"

#. type: defun
#: original_texis/text.texi:2872
#, no-wrap
msgid "remove-list-of-text-properties start end list-of-properties &optional object"
msgstr "remove-list-of-text-properties start end list-of-properties &optional object"

#. type: defun
#: original_texis/text.texi:2876
msgid "Like @code{remove-text-properties} except that @var{list-of-properties} is a list of property names only, not an alternating list of property names and values."
msgstr "@code{remove-text-properties}と同様だが、@var{list-of-properties}がプロパティ名と値が交互になったリストではなくプロパティ名だけのリストである点が異なる。"

#. type: defun
#: original_texis/text.texi:2878
#, no-wrap
msgid "set-text-properties start end props &optional object"
msgstr "set-text-properties start end props &optional object"

#. type: defun
#: original_texis/text.texi:2882
msgid "This function completely replaces the text property list for the text between @var{start} and @var{end} in the string or buffer @var{object}.  If @var{object} is @code{nil}, it defaults to the current buffer."
msgstr "この関数は文字列かバッファー@var{object}内の@var{start}から@var{end}の間のテキストにたいするテキストプロパティリストを完全に置き換える。@var{object}が@code{nil}ならデフォルトはカレントバッファー。"

#. type: defun
#: original_texis/text.texi:2885
msgid "The argument @var{props} is the new property list.  It should be a list whose elements are property names alternating with corresponding values."
msgstr "引数@var{props}は新たなプロパティリスト。これはプロパティ名と対応する値が交互となるような要素のリストであること。"

#. type: defun
#: original_texis/text.texi:2888
msgid "After @code{set-text-properties} returns, all the characters in the specified range have identical properties."
msgstr "@code{set-text-properties}のリターン後には、指定された範囲内のすべての文字は等しいプロパティをもつ。"

#. type: defun
#: original_texis/text.texi:2891
msgid "If @var{props} is @code{nil}, the effect is to get rid of all properties from the specified range of text.  Here's an example:"
msgstr "@var{props}が@code{nil}なら、指定されたテキスト範囲からすべてのプロパティを取り除く効果がある。以下は例:"

#. type: example
#: original_texis/text.texi:2894
#, no-wrap
msgid "(set-text-properties @var{start} @var{end} nil)\n"
msgstr "(set-text-properties @var{start} @var{end} nil)\n"

#. type: defun
#: original_texis/text.texi:2897
msgid "Do not rely on the return value of this function."
msgstr "この関数のリターン値を信用してはならない。"

#. type: defun
#: original_texis/text.texi:2899
#, no-wrap
msgid "add-face-text-property start end face &optional appendp object"
msgstr "add-face-text-property start end face &optional appendp object"

#. type: defun
#: original_texis/text.texi:2905
msgid "This function acts on the text between @var{start} and @var{end}, adding the face @var{face} to the @code{face} text property.  @var{face} should be a valid value for the @code{face} property (@pxref{Special Properties}), such as a face name or an anonymous face (@pxref{Faces})."
msgstr "この関数は@var{start}と@var{end}の間のテキストのテキストプロパティ@code{face}にフェイス@var{face}を追加するように動作する。@var{face}はフェイス名、もしくはanonymousフェイス(anonymous face: 無名フェイス)のような@code{face}プロパティ(@ref{Special Properties}を参照)にたいして有効な値であること(@ref{Faces}を参照)。"

#. type: defun
#: original_texis/text.texi:2913
msgid "If any text in the region already has a non-@code{nil} @code{face} property, those face(s) are retained.  This function sets the @code{face} property to a list of faces, with @var{face} as the first element (by default) and the pre-existing faces as the remaining elements.  If the optional argument @var{append} is non-@code{nil}, @var{face} is appended to the end of the list instead.  Note that in a face list, the first occurring value for each attribute takes precedence."
msgstr "リージョン内の任意のテキストがすでに非@code{nil}の@code{face}プロパティをもつなら、それらのフェイスは保たれる。この関数は@code{face}プロパティに、最初の要素(デフォルト)が@var{face}、以前に存在していたフェイスが残りの要素であるようなフェイスのリストをセットする。オプション引数@var{append}が非@code{nil}なら、@var{face}はかわりにリストの最後に追加される。フェイスリスト内では各属性にたいして最初に出現する値が優先されることに注意。"

#. type: defun
#: original_texis/text.texi:2916
msgid "For example, the following code would assign a italicized green face to the text between @var{start} and @var{end}:"
msgstr "たとえば以下のコードでは@var{start}と@var{end}の間のテキストにグリーン斜体のフェイスを割り当てるだろう:"

#. type: example
#: original_texis/text.texi:2921
#, no-wrap
msgid ""
"(add-face-text-property @var{start} @var{end} 'italic)\n"
"(add-face-text-property @var{start} @var{end} '(:foreground \"red\"))\n"
"(add-face-text-property @var{start} @var{end} '(:foreground \"green\"))\n"
msgstr ""
"(add-face-text-property @var{start} @var{end} 'italic)\n"
"(add-face-text-property @var{start} @var{end} '(:foreground \"red\"))\n"
"(add-face-text-property @var{start} @var{end} '(:foreground \"green\"))\n"

#. type: defun
#: original_texis/text.texi:2927
msgid "The optional argument @var{object}, if non-@code{nil}, specifies a buffer or string to act on, rather than the current buffer.  If @var{object} is a string, then @var{start} and @var{end} are zero-based indices into the string."
msgstr "オプション引数@var{object}が非@code{nil}なら、それはカレントバッファーではなく動作するバッファーか文字列を指定する。@var{object}が文字列なら@var{start}と@var{end}は0基準で文字列内をインデックス付けする。"

#. type: Plain text
#: original_texis/text.texi:2931
msgid "The easiest way to make a string with text properties is with @code{propertize}:"
msgstr "文字列にテキストプロパティを付するもっとも簡単な方法は@code{propertize}です:"

#. type: defun
#: original_texis/text.texi:2932
#, no-wrap
msgid "propertize string &rest properties"
msgstr "propertize string &rest properties"

#. type: defun
#: original_texis/text.texi:2937
msgid "This function returns a copy of @var{string} with the text properties @var{properties} added.  These properties apply to all the characters in the string that is returned.  Here is an example that constructs a string with a @code{face} property and a @code{mouse-face} property:"
msgstr "この関数はテキストプロパティ@var{properties}を追加した@var{string}のコピーをリターンする。これらのプロパティはリターンされる文字列内のすべての文字に適用される。以下は@code{face}プロパティと@code{mouse-face}プロパティとともに文字列を構築する例:"

#. type: smallexample
#: original_texis/text.texi:2942
#, no-wrap
msgid ""
"(propertize \"foo\" 'face 'italic\n"
"            'mouse-face 'bold-italic)\n"
"     @result{} #(\"foo\" 0 3 (mouse-face bold-italic face italic))\n"
msgstr ""
"(propertize \"foo\" 'face 'italic\n"
"            'mouse-face 'bold-italic)\n"
"     @result{} #(\"foo\" 0 3 (mouse-face bold-italic face italic))\n"

#. type: defun
#: original_texis/text.texi:2947
msgid "To put different properties on various parts of a string, you can construct each part with @code{propertize} and then combine them with @code{concat}:"
msgstr "文字列のさまざまな部分に異なるプロパティをputするには、それぞれの部分を@code{propertize}で構築して、それらを@code{concat}で結合すればよい:"

#. type: smallexample
#: original_texis/text.texi:2959
#, no-wrap
msgid ""
"(concat\n"
" (propertize \"foo\" 'face 'italic\n"
"             'mouse-face 'bold-italic)\n"
" \" and \"\n"
" (propertize \"bar\" 'face 'italic\n"
"             'mouse-face 'bold-italic))\n"
"     @result{} #(\"foo and bar\"\n"
"                 0 3 (face italic mouse-face bold-italic)\n"
"                 3 8 nil\n"
"                 8 11 (face italic mouse-face bold-italic))\n"
msgstr ""
"(concat\n"
" (propertize \"foo\" 'face 'italic\n"
"             'mouse-face 'bold-italic)\n"
" \" and \"\n"
" (propertize \"bar\" 'face 'italic\n"
"             'mouse-face 'bold-italic))\n"
"     @result{} #(\"foo and bar\"\n"
"                 0 3 (face italic mouse-face bold-italic)\n"
"                 3 8 nil\n"
"                 8 11 (face italic mouse-face bold-italic))\n"

#. type: Plain text
#: original_texis/text.texi:2965
msgid "@xref{Buffer Contents}, for the function @code{buffer-substring-no-properties}, which copies text from the buffer but does not copy its properties."
msgstr "プロパティではなくバッファーからテキストをコピーする関数@code{buffer-substring-no-properties}については@ref{Buffer Contents}を参照してください。"

#. type: findex
#: original_texis/text.texi:2966
#, no-wrap
msgid "with-silent-modifications"
msgstr "with-silent-modifications"

#. type: Plain text
#: original_texis/text.texi:2970
msgid "If you wish to add or remove text properties to a buffer without marking the buffer as modified, you can wrap the calls above in the @code{with-silent-modifications} macro."
msgstr "バッファーを未変更のままバッファーにテキストプロパティの追加や削除を行いたければ、上記の呼出を@code{with-silent-modifications}で囲むことができます。"

#. type: subsection
#: original_texis/text.texi:2972
#, no-wrap
msgid "Text Property Search Functions"
msgstr "Text Property Search Functions"

#. type: cindex
#: original_texis/text.texi:2973
#, no-wrap
msgid "searching text properties"
msgstr "searching text properties"

#. type: cindex
#: original_texis/text.texi:2974
#, no-wrap
msgid "text properties, searching"
msgstr "text properties, searching"

#. type: Plain text
#: original_texis/text.texi:2980
msgid "In typical use of text properties, most of the time several or many consecutive characters have the same value for a property.  Rather than writing your programs to examine characters one by one, it is much faster to process chunks of text that have the same property value."
msgstr "テキストプロパティの通常の使用では、ほとんどの場合は複数または多くの連続する文字が同じ値のプロパティをもちます。文字を1つずつ調べるプログラムを記述するよりも、同じプロパティ値をもつテキスト塊(chunks of text)を処理するほうがより高速です。"

#. type: Plain text
#: original_texis/text.texi:2984
msgid "Here are functions you can use to do this.  They use @code{eq} for comparing property values.  In all cases, @var{object} defaults to the current buffer."
msgstr "以下はこれを行うことに使用できる関数です。これらはプロパティ値の比較に@code{eq}を使用します。すべての関数において@var{object}のデフォルトはカレントバッファーです。"

#. type: Plain text
#: original_texis/text.texi:2989
msgid "For good performance, it's very important to use the @var{limit} argument to these functions, especially the ones that search for a single property---otherwise, they may spend a long time scanning to the end of the buffer, if the property you are interested in does not change."
msgstr "より良いパフォーマンスのためには、特に単一のプロパティを検索する関数における@var{limit}引数の使用が重要です。さもないと興味のあるプロパティが変化しない場合に、バッファー終端までのスキャンで長い時間を要するでしょう。"

#. type: Plain text
#: original_texis/text.texi:2994
msgid "These functions do not move point; instead, they return a position (or @code{nil}).  Remember that a position is always between two characters; the position returned by these functions is between two characters with different properties."
msgstr "これらの関数はポイントを移動しません。そのかわりに位置(または@code{nil} )をリターンします。ポイントは常に文字と文字の間にあることを思い出してください。これらの関数によりリターンされる位置は、異なるプロパティをもつ2つの文字の間にあります。"

#. type: defun
#: original_texis/text.texi:2995
#, no-wrap
msgid "next-property-change pos &optional object limit"
msgstr "next-property-change pos &optional object limit"

#. type: defun
#: original_texis/text.texi:3002
msgid "The function scans the text forward from position @var{pos} in the string or buffer @var{object} until it finds a change in some text property, then returns the position of the change.  In other words, it returns the position of the first character beyond @var{pos} whose properties are not identical to those of the character just after @var{pos}."
msgstr "この関数は文字列かバッファー@var{object}内の位置@var{pos}から、何らかのテキストプロパティの変化が見つかるまでテキストを前方にスキャンして、変化のあった位置をリターンする。言い換えると@var{pos}の直後の文字とプロパティが等しくない、@var{pos}の先にある最初の文字の位置をリターンする。"

#. type: defun
#: original_texis/text.texi:3006
msgid "If @var{limit} is non-@code{nil}, then the scan ends at position @var{limit}.  If there is no property change before that point, this function returns @var{limit}."
msgstr "@var{limit}が非@code{nil}ならスキャンは位置@var{limit}で停止する。そのポイントより前にプロパティが変化しなければ、この関数は@var{limit}をリターンする。"

#. type: defun
#: original_texis/text.texi:3011
msgid "The value is @code{nil} if the properties remain unchanged all the way to the end of @var{object} and @var{limit} is @code{nil}.  If the value is non-@code{nil}, it is a position greater than or equal to @var{pos}.  The value equals @var{pos} only when @var{limit} equals @var{pos}."
msgstr "プロパティが@var{object}終端まで変化せず、かつ@var{limit}が@code{nil}なら値は@code{nil}。値が非@code{nil}なら、それは@var{pos}以上の位置。@var{limit}が@var{pos}と等しいときのみ値は@var{pos}になる。"

#. type: defun
#: original_texis/text.texi:3014
msgid "Here is an example of how to scan the buffer by chunks of text within which all properties are constant:"
msgstr "以下はすべてのプロパティが定数であるようなテキスト塊によりバッファーをスキャンする方法の例:"

#. type: smallexample
#: original_texis/text.texi:3023
#, no-wrap
msgid ""
"(while (not (eobp))\n"
"  (let ((plist (text-properties-at (point)))\n"
"        (next-change\n"
"         (or (next-property-change (point) (current-buffer))\n"
"             (point-max))))\n"
"    @r{Process text from point to @var{next-change}@dots{}}\n"
"    (goto-char next-change)))\n"
msgstr ""
"(while (not (eobp))\n"
"  (let ((plist (text-properties-at (point)))\n"
"        (next-change\n"
"         (or (next-property-change (point) (current-buffer))\n"
"             (point-max))))\n"
"    @r{ポイントから@var{next-change}へテキストを処理@dots{}}\n"
"    (goto-char next-change)))\n"

#. type: defun
#: original_texis/text.texi:3026
#, no-wrap
msgid "previous-property-change pos &optional object limit"
msgstr "previous-property-change pos &optional object limit"

#. type: defun
#: original_texis/text.texi:3031
msgid "This is like @code{next-property-change}, but scans back from @var{pos} instead of forward.  If the value is non-@code{nil}, it is a position less than or equal to @var{pos}; it equals @var{pos} only if @var{limit} equals @var{pos}."
msgstr "これは@code{next-property-change}と似ているが、@var{pos}から前方ではなく後方にスキャンする点が異なる。値が非@code{nil}なら、それは@var{pos}以下の位置。@var{limit}と@var{pos}が等しい場合のみ@var{pos}をリターンする。"

#. type: defun
#: original_texis/text.texi:3033
#, no-wrap
msgid "next-single-property-change pos prop &optional object limit"
msgstr "next-single-property-change pos prop &optional object limit"

#. type: defun
#: original_texis/text.texi:3040
msgid "The function scans text for a change in the @var{prop} property, then returns the position of the change.  The scan goes forward from position @var{pos} in the string or buffer @var{object}.  In other words, this function returns the position of the first character beyond @var{pos} whose @var{prop} property differs from that of the character just after @var{pos}."
msgstr "この関数はプロパティ@var{prop}内の変化にたいしてテキストをスキャンして、変化があった位置をリターンする。このスキャンは文字列かバッファー@var{object}内の位置@var{pos}から前方に行われる。言い換えると@var{pos}の直後の文字とプロパティ@var{prop}が等しくない、@var{pos}の先にある最初の文字の位置をリターンする。"

#. type: defun
#: original_texis/text.texi:3044
msgid "If @var{limit} is non-@code{nil}, then the scan ends at position @var{limit}.  If there is no property change before that point, @code{next-single-property-change} returns @var{limit}."
msgstr "@var{limit}が非@code{nil}ならスキャンは位置@var{limit}で終了する。そのポイントより前にプロパティの変化がなければ、@code{next-single-property-change}は@var{limit}をリターンする。"

#. type: defun
#: original_texis/text.texi:3049
msgid "The value is @code{nil} if the property remains unchanged all the way to the end of @var{object} and @var{limit} is @code{nil}.  If the value is non-@code{nil}, it is a position greater than or equal to @var{pos}; it equals @var{pos} only if @var{limit} equals @var{pos}."
msgstr "プロパティが@var{object}終端まで変化せず、かつ@var{limit}が@code{nil}なら値は@code{nil}。値が非@code{nil}なら、それは@var{pos}以上の位置。@var{limit}が@var{pos}と等しいときのみ値は@var{pos}になる。"

#. type: defun
#: original_texis/text.texi:3051
#, no-wrap
msgid "previous-single-property-change pos prop &optional object limit"
msgstr "previous-single-property-change pos prop &optional object limit"

#. type: defun
#: original_texis/text.texi:3056
msgid "This is like @code{next-single-property-change}, but scans back from @var{pos} instead of forward.  If the value is non-@code{nil}, it is a position less than or equal to @var{pos}; it equals @var{pos} only if @var{limit} equals @var{pos}."
msgstr "これは@code{next-single-property-change}と似ているが、@var{pos}から前方ではなく後方にスキャンする点が異なる。値が非@code{nil}なら、それは@var{pos}以下の位置。@var{limit}と@var{pos}が等しい場合のみ@var{pos}をリターンする。"

#. type: defun
#: original_texis/text.texi:3058
#, no-wrap
msgid "next-char-property-change pos &optional limit"
msgstr "next-char-property-change pos &optional limit"

#. type: defun
#: original_texis/text.texi:3067
msgid "This is like @code{next-property-change} except that it considers overlay properties as well as text properties, and if no change is found before the end of the buffer, it returns the maximum buffer position rather than @code{nil} (in this sense, it resembles the corresponding overlay function @code{next-overlay-change}, rather than @code{next-property-change}).  There is no @var{object} operand because this function operates only on the current buffer.  It returns the next address at which either kind of property changes."
msgstr "@code{next-property-change}と似ているが、これはテキストプロパティと同様にオーバーレイも考慮して、バッファー終端より前に変化が見つからなければ、@code{nil}ではなくバッファー位置の最大をリターンする点が異なる(この点では@code{next-property-change}よりも対応するオーバーレイ関数@code{next-overlay-change}と似ている)。この関数はカレントバッファーだけを処理するので@var{object}オペランドは存在しない。これはいずれかの種類のプロパティが変化した、次のアドレスをリターンする。"

#. type: defun
#: original_texis/text.texi:3069
#, no-wrap
msgid "previous-char-property-change pos &optional limit"
msgstr "previous-char-property-change pos &optional limit"

#. type: defun
#: original_texis/text.texi:3073
msgid "This is like @code{next-char-property-change}, but scans back from @var{pos} instead of forward, and returns the minimum buffer position if no change is found."
msgstr "これは@code{next-char-property-change}と似ているが、@var{pos}から前方ではなく後方へスキャンすること、および変化が見つからなければバッファー位置の最小をリターンする点が異なる。"

#. type: defun
#: original_texis/text.texi:3075
#, no-wrap
msgid "next-single-char-property-change pos prop &optional object limit"
msgstr "next-single-char-property-change pos prop &optional object limit"

#. type: defun
#: original_texis/text.texi:3083
msgid "This is like @code{next-single-property-change} except that it considers overlay properties as well as text properties, and if no change is found before the end of the @var{object}, it returns the maximum valid position in @var{object} rather than @code{nil}.  Unlike @code{next-char-property-change}, this function @emph{does} have an @var{object} operand; if @var{object} is not a buffer, only text-properties are considered."
msgstr "@code{next-single-property-change}と似ているが、これはテキストプロパティと同様にオーバーレイも考慮して、@var{object}終端より前に変化が見つからなければ、@code{nil}ではなく@var{object}内の有効な位置の最大をリターンする点が異なる。@code{next-char-property-change}と異なり、この関数は@var{object}オペランドを@emph{もつ}。@var{object}が非バッファーならテキストプロパティだけが考慮される。"

#. type: defun
#: original_texis/text.texi:3085
#, no-wrap
msgid "previous-single-char-property-change pos prop &optional object limit"
msgstr "previous-single-char-property-change pos prop &optional object limit"

#. type: defun
#: original_texis/text.texi:3089
msgid "This is like @code{next-single-char-property-change}, but scans back from @var{pos} instead of forward, and returns the minimum valid position in @var{object} if no change is found."
msgstr "これは@code{next-single-char-property-change}と似ているが、@var{pos}から前方ではなく後方へスキャンすること、および変化が見つからなければ@var{object}内の有効な位置の最小をリターンする点が異なる。"

#. type: defun
#: original_texis/text.texi:3091
#, no-wrap
msgid "text-property-any start end prop value &optional object"
msgstr "text-property-any start end prop value &optional object"

#. type: defun
#: original_texis/text.texi:3096
msgid "This function returns non-@code{nil} if at least one character between @var{start} and @var{end} has a property @var{prop} whose value is @var{value}.  More precisely, it returns the position of the first such character.  Otherwise, it returns @code{nil}."
msgstr "この関数は@var{start}と@var{end}の間に少なくともプロパティ@var{prop}に値@var{value}をもつ文字が1つあれば非@code{nil}をリターンする。より正確には、これはそのような最初の文字の位置、それ以外は@code{nil}をリターンする。"

#. type: defun
#: original_texis/text.texi:3100 original_texis/text.texi:3111
msgid "The optional fifth argument, @var{object}, specifies the string or buffer to scan.  Positions are relative to @var{object}.  The default for @var{object} is the current buffer."
msgstr "5つ目のオプション引数@var{object}はスキャンする文字列かバッファーを指定する。位置は@var{object}にたいして相対的。@var{object}のデフォルトはカレントバッファー。"

#. type: defun
#: original_texis/text.texi:3102
#, no-wrap
msgid "text-property-not-all start end prop value &optional object"
msgstr "text-property-not-all start end prop value &optional object"

#. type: defun
#: original_texis/text.texi:3107
msgid "This function returns non-@code{nil} if at least one character between @var{start} and @var{end} does not have a property @var{prop} with value @var{value}.  More precisely, it returns the position of the first such character.  Otherwise, it returns @code{nil}."
msgstr "この関数は@var{start}と@var{end}の間に少なくともプロパティ@var{prop}に値@var{value}をもたない文字が1つあれば非@code{nil}をリターンする。より正確には、これはそのような最初の文字の位置、それ以外は@code{nil}をリターンする。"

#. type: subsection
#: original_texis/text.texi:3114
#, no-wrap
msgid "Properties with Special Meanings"
msgstr "Properties with Special Meanings"

#. type: Plain text
#: original_texis/text.texi:3120
msgid "Here is a table of text property names that have special built-in meanings.  The following sections list a few additional special property names that control filling and property inheritance.  All other names have no standard meaning, and you can use them as you like."
msgstr "以下はビルトインで特別な意味をもつテキストプロパティ名のテーブルです。以降のセクションではフィルとプロパティ継承を制御する特別なプロパティ名をいくつか追加でリストしています。これ以外のすべての名前は特別な意味をもたず自由に使用できます。"

#. type: Plain text
#: original_texis/text.texi:3125
msgid "Note: the properties @code{composition}, @code{display}, @code{invisible} and @code{intangible} can also cause point to move to an acceptable place, after each Emacs command.  @xref{Adjusting Point}."
msgstr "注意: プロパティ@code{composition}、@code{display}、@code{invisible}、@code{intangible}はすべてのEmacsコマンドの後に好ましい箇所にポイントを移動させることもできます。@ref{Adjusting Point}を参照してください。"

#. type: cindex
#: original_texis/text.texi:3127
#, no-wrap
msgid "property category of text character"
msgstr "property category of text character"

#. type: kindex
#: original_texis/text.texi:3129
#, no-wrap
msgid "category @r{(text property)}"
msgstr "category @r{(text property)}"

#. type: item
#: original_texis/text.texi:3130
#, no-wrap
msgid "category"
msgstr "category"

#. type: table
#: original_texis/text.texi:3135
msgid "If a character has a @code{category} property, we call it the @dfn{property category} of the character.  It should be a symbol.  The properties of this symbol serve as defaults for the properties of the character."
msgstr "ある文字が@code{category}プロパティをもつ場合には、それをその文字の@dfn{プロパティカテゴリー(property category)}と呼ぶ。これはシンボルであること。このシンボルのプロパティはその文字のプロパティのデフォルトとしての役割をもつ。"

#. type: item
#: original_texis/text.texi:3136
#, no-wrap
msgid "face"
msgstr "face"

#. type: cindex
#: original_texis/text.texi:3137
#, no-wrap
msgid "face codes of text"
msgstr "face codes of text"

#. type: kindex
#: original_texis/text.texi:3138
#, no-wrap
msgid "face @r{(text property)}"
msgstr "face @r{(text property)}"

#. type: table
#: original_texis/text.texi:3141
msgid "The @code{face} property controls the appearance of the character (@pxref{Faces}).  The value of the property can be the following:"
msgstr "@code{face}プロパティはその文字の外観を制御する(@ref{Faces}を参照)。このプロパティの値は以下が可能:"

#. type: itemize
#: original_texis/text.texi:3145
msgid "A face name (a symbol or string)."
msgstr "フェイス名(シンボルか文字列)。"

#. type: itemize
#: original_texis/text.texi:3150
msgid "An anonymous face: a property list of the form @code{(@var{keyword} @var{value} @dots{})}, where each @var{keyword} is a face attribute name and @var{value} is a value for that attribute."
msgstr "anonymousフェイス: @code{(@var{keyword} @var{value} @dots{})}形式のプロパティリスト。@var{keyword}はそれぞれフェイス属性名、@var{value}はその属性の値。"

#. type: itemize
#: original_texis/text.texi:3156
msgid "A list of faces.  Each list element should be either a face name or an anonymous face.  This specifies a face which is an aggregate of the attributes of each of the listed faces.  Faces occurring earlier in the list have higher priority."
msgstr "フェイスのリスト。各リスト要素はフェイス名かanonymousフェイスであること。これはリストされた各フェイス属性を集計したフェイスを指定する。このリスト内で最初にあるフェイスがより高い優先度をもつ。"

#. type: itemize
#: original_texis/text.texi:3164
msgid "A cons cell of the form @code{(foreground-color . @var{color-name})} or @code{(background-color . @var{color-name})}.  This specifies the foreground or background color, similar to @code{(:foreground @var{color-name})} or @code{(:background @var{color-name})}.  This form is supported for backward compatibility only, and should be avoided."
msgstr "@code{(foreground-color . @var{color-name})}または@code{(background-color . @var{color-name})}形式のコンスセル。これは@code{(:foreground @var{color-name})}や@code{(:background @var{color-name})}と同じようにフォアグラウンドやバックグラウンドを指定する。この形式は後方互換のためだけにサポートされており無視すること。"

#. type: table
#: original_texis/text.texi:3169
msgid "Font Lock mode (@pxref{Font Lock Mode}) works in most buffers by dynamically updating the @code{face} property of characters based on the context."
msgstr "Font Lockモード(@ref{Font Lock Mode}を参照)はほとんどのバッファーにおいて、コンテキストにもとづき文字の@code{face}プロパティを動的に更新することにより機能する。"

#. type: table
#: original_texis/text.texi:3172
msgid "The @code{add-face-text-property} function provides a convenient way to set this text property.  @xref{Changing Properties}."
msgstr "@code{add-face-text-property}関数は、このプロパティをセットする便利な手段を提供する。@ref{Changing Properties}を参照のこと。"

#. type: item
#: original_texis/text.texi:3173
#, no-wrap
msgid "font-lock-face"
msgstr "font-lock-face"

#. type: kindex
#: original_texis/text.texi:3174
#, no-wrap
msgid "font-lock-face @r{(text property)}"
msgstr "font-lock-face @r{(text property)}"

#. type: table
#: original_texis/text.texi:3181
msgid "This property specifies a value for the @code{face} property that Font Lock mode should apply to the underlying text.  It is one of the fontification methods used by Font Lock mode, and is useful for special modes that implement their own highlighting.  @xref{Precalculated Fontification}.  When Font Lock mode is disabled, @code{font-lock-face} has no effect."
msgstr "このプロパティはFont Lockモードが配下にあるテキストに適用すべき@code{face}プロパティにたいして値を指定する。これはFont Lockモードに使用されるフォント表示手法の1つであり、独自のハイライトを実装する特別なモードにたいして有用。@ref{Precalculated Fontification}を参照のこと。Font Lockモードが無効なら@code{font-lock-face}に効果はない。"

#. type: code{#1}
#: original_texis/text.texi:3182 original_texis/text.texi:3810
#, no-wrap
msgid "mouse-face"
msgstr "mouse-face"

#. type: kindex
#: original_texis/text.texi:3183
#, no-wrap
msgid "mouse-face @r{(text property)}"
msgstr "mouse-face @r{(text property)}"

#. type: table
#: original_texis/text.texi:3188
msgid "This property is used instead of @code{face} when the mouse is on or near the character.  For this purpose, ``near'' means that all text between the character and where the mouse is have the same @code{mouse-face} property value."
msgstr "このプロパティは文字上または近傍にマウスがあるとき、@code{face}のかわりに使用される。この目的にたいして``近傍''とは文字とマウス位置の間のすべてのテキストが同じ@code{mouse-face}プロパティの値をもつことを意味する。"

#. type: table
#: original_texis/text.texi:3193
msgid "Emacs ignores all face attributes from the @code{mouse-face} property that alter the text size (e.g., @code{:height}, @code{:weight}, and @code{:slant}).  Those attributes are always the same as for the unhighlighted text."
msgstr "Emacsはテキストサイズ(@code{:height}、@code{:weight}、@code{:slant})を変更する@code{mouse-face}プロパティ由来の属性すべてを無視する。これらの属性はハイライトされていないテキストと常に等しい。"

#. type: item
#: original_texis/text.texi:3194
#, no-wrap
msgid "fontified"
msgstr "fontified"

#. type: kindex
#: original_texis/text.texi:3195
#, no-wrap
msgid "fontified @r{(text property)}"
msgstr "fontified @r{(text property)}"

#. type: table
#: original_texis/text.texi:3201
msgid "This property says whether the text is ready for display.  If @code{nil}, Emacs's redisplay routine calls the functions in @code{fontification-functions} (@pxref{Auto Faces}) to prepare this part of the buffer before it is displayed.  It is used internally by the just-in-time font locking code."
msgstr "このプロパティはそのテキストの表示準備が整っているかどうかを告げる。@code{nil}ならEmacsの再表示ルーチンはバッファーの該当部分を表示する前に、準備のために@code{fontification-functions} (@ref{Auto Faces}を参照)の中の関数を呼び出す。これはフォントロックのコードのjust-in-timeにより内部的に使用される。"

#. type: item
#: original_texis/text.texi:3202
#, no-wrap
msgid "display"
msgstr "display"

#. type: table
#: original_texis/text.texi:3207
msgid "This property activates various features that change the way text is displayed.  For example, it can make text appear taller or shorter, higher or lower, wider or narrow, or replaced with an image.  @xref{Display Property}."
msgstr "このプロパティはテキストが表示される方法を変更するさまざまな機能をアクティブ化する。たとえばこれによりテキスト外観を縦長(taller)または縦短(short)したり、高く(higher)または低く(lower)、太く(wider)または細く(narrower)したり、あるいはイメージに置き換えることができる。@ref{Display Property}を参照のこと。"

#. type: item
#: original_texis/text.texi:3208
#, no-wrap
msgid "help-echo"
msgstr "help-echo"

#. type: kindex
#: original_texis/text.texi:3209
#, no-wrap
msgid "help-echo @r{(text property)}"
msgstr "help-echo @r{(text property)}"

#. type: cindex
#: original_texis/text.texi:3210
#, no-wrap
msgid "tooltip for help strings"
msgstr "tooltip for help strings"

#. type: anchor{#1}
#: original_texis/text.texi:3215
msgid "Text help-echo"
msgstr "Text help-echo"

#. type: table
#: original_texis/text.texi:3215
msgid "If text has a string as its @code{help-echo} property, then when you move the mouse onto that text, Emacs displays that string in the echo area, or in the tooltip window (@pxref{Tooltips})."
msgstr "テキストが@code{help-echo}プロパティに文字列をもつ場合には、そのテキスト上にマウスを移動した際にEmacsはエコーエリアかツールチップウィンドウ(@ref{Tooltips}を参照)にその文字列を表示する。"

#. type: table
#: original_texis/text.texi:3223
msgid "If the value of the @code{help-echo} property is a function, that function is called with three arguments, @var{window}, @var{object} and @var{pos} and should return a help string or @code{nil} for none.  The first argument, @var{window} is the window in which the help was found.  The second, @var{object}, is the buffer, overlay or string which had the @code{help-echo} property.  The @var{pos} argument is as follows:"
msgstr "@code{help-echo}プロパティの値が関数なら、その関数は@var{window}、@var{object}、@var{pos}の3つの引数で呼び出されてヘルプ文字列、ヘルプ文字列が存在しなければ@code{nil}をリターンすること。1つ目の引数@var{window}はそのヘルプが見つかったウィンドウ。2つ目の引数@var{object}は@code{help-echo}プロパティをもつバッファー、オーバーレイ、または文字列。@var{pos}引数は以下のとおり:"

#. type: itemize
#: original_texis/text.texi:3227
msgid "If @var{object} is a buffer, @var{pos} is the position in the buffer."
msgstr "@var{object}がバッファーなら@var{pos}はそのバッファー内の位置。"

#. type: itemize
#: original_texis/text.texi:3230
msgid "If @var{object} is an overlay, that overlay has a @code{help-echo} property, and @var{pos} is the position in the overlay's buffer."
msgstr "@var{object}がオーバーレイなら、そのオーバーレイは@code{help-echo}プロパティをもち@var{pos}はそのオーバーレイのバッファー内の位置。"

#. type: itemize
#: original_texis/text.texi:3234
msgid "If @var{object} is a string (an overlay string or a string displayed with the @code{display} property), @var{pos} is the position in that string."
msgstr "@var{object}が文字列(オーバーレイ文字列、または@code{display}プロパティにより表示された文字列)なら@var{pos}はその文字列内の位置。"

#. type: table
#: original_texis/text.texi:3238
msgid "If the value of the @code{help-echo} property is neither a function nor a string, it is evaluated to obtain a help string."
msgstr "@code{help-echo}プロパティの値が関数と文字列のいずれでもなければ、それはヘルプ文字列を得るために評価される。"

#. type: table
#: original_texis/text.texi:3241
msgid "You can alter the way help text is displayed by setting the variable @code{show-help-function} (@pxref{Help display})."
msgstr "変数@code{show-help-function}をセットすることにより、ヘルプテキストが表示される方法を変更できる(@ref{Help display}を参照)。"

#. type: table
#: original_texis/text.texi:3243
msgid "This feature is used in the mode line and for other active text."
msgstr "この機能はモードライン内、およびその他のアクティブテキストにたいして使用される。"

#. type: item
#: original_texis/text.texi:3244
#, no-wrap
msgid "keymap"
msgstr "keymap"

#. type: cindex
#: original_texis/text.texi:3245
#, no-wrap
msgid "keymap of character"
msgstr "keymap of character"

#. type: kindex
#: original_texis/text.texi:3246
#, no-wrap
msgid "keymap @r{(text property)}"
msgstr "keymap @r{(text property)}"

#. type: table
#: original_texis/text.texi:3252
msgid "The @code{keymap} property specifies an additional keymap for commands.  When this keymap applies, it is used for key lookup before the minor mode keymaps and before the buffer's local map.  @xref{Active Keymaps}.  If the property value is a symbol, the symbol's function definition is used as the keymap."
msgstr "@code{keymap}プロパティはコマンドにたいして追加のキーマップを指定する。このキーマップを適用する際には、マイナーモードキーマップとバッファーのローカルマップの前に、このマップがキー照合のために使用される。@ref{Active Keymaps}を参照のこと。プロパティ値がシンボルなら、そのシンボルの関数定義がキーマップとして使用される。"

#. type: table
#: original_texis/text.texi:3258
msgid "The property's value for the character before point applies if it is non-@code{nil} and rear-sticky, and the property's value for the character after point applies if it is non-@code{nil} and front-sticky.  (For mouse clicks, the position of the click is used instead of the position of point.)"
msgstr "ポイントの前の文字のプロパティの値は、それが非@code{nil}でrear-stickyであり、かつポイントの後の文字のプロパティ値が非@code{nil}でfront-stickyなら適用される(マウスクリックではポイント位置のかわりにクリック位置が使用される)。"

#. type: item
#: original_texis/text.texi:3259
#, no-wrap
msgid "local-map"
msgstr "local-map"

#. type: kindex
#: original_texis/text.texi:3260
#, no-wrap
msgid "local-map @r{(text property)}"
msgstr "local-map @r{(text property)}"

#. type: table
#: original_texis/text.texi:3265
msgid "This property works like @code{keymap} except that it specifies a keymap to use @emph{instead of} the buffer's local map.  For most purposes (perhaps all purposes), it is better to use the @code{keymap} property."
msgstr "このプロパティは@code{keymap}と同じように機能するが、これはそのバッファーのローカルマップの@emph{かわりに}使用するキーマップを指定する点が異なる。ほとんど(もしかするとすべて)の目的にたいしては@code{keymap}を使用するほうが良いだろう。"

#. type: item
#: original_texis/text.texi:3266
#, no-wrap
msgid "syntax-table"
msgstr "syntax-table"

#. type: table
#: original_texis/text.texi:3269
msgid "The @code{syntax-table} property overrides what the syntax table says about this particular character.  @xref{Syntax Properties}."
msgstr "@code{syntax-table}プロパティは特定の文字にたいしてどのシンタックステーブルがオーバーライドするかを告げる。@ref{Syntax Properties}を参照のこと。"

#. type: item
#: original_texis/text.texi:3270
#, no-wrap
msgid "read-only"
msgstr "read-only"

#. type: cindex
#: original_texis/text.texi:3271
#, no-wrap
msgid "read-only character"
msgstr "read-only character"

#. type: kindex
#: original_texis/text.texi:3272
#, no-wrap
msgid "read-only @r{(text property)}"
msgstr "read-only @r{(text property)}"

#. type: table
#: original_texis/text.texi:3277
msgid "If a character has the property @code{read-only}, then modifying that character is not allowed.  Any command that would do so gets an error, @code{text-read-only}.  If the property value is a string, that string is used as the error message."
msgstr "ある文字がプロパティ@code{read-only}をもつなら、その文字の変更は許可されない。これを行おうとするすべてのコマンドは@code{text-read-only}エラーを受け取る。プロパティの値が文字列ならその文字列がエラーメッセージとして使用される。"

#. type: table
#: original_texis/text.texi:3282
msgid "Insertion next to a read-only character is an error if inserting ordinary text there would inherit the @code{read-only} property due to stickiness.  Thus, you can control permission to insert next to read-only text by controlling the stickiness.  @xref{Sticky Properties}."
msgstr "read-only文字に隣接する箇所への挿入は、そこに通常のテキストの行うことがstickinessによる@code{read-only}プロパティを継承するならエラーとなる。つまりstickinessを制御することによりread-onlyテキストに隣接する挿入の権限を制御することができる。@ref{Sticky Properties}を参照のこと。"

#. type: table
#: original_texis/text.texi:3287
msgid "Since changing properties counts as modifying the buffer, it is not possible to remove a @code{read-only} property unless you know the special trick: bind @code{inhibit-read-only} to a non-@code{nil} value and then remove the property.  @xref{Read Only Buffers}."
msgstr "プロパティ変更はバッファー変更とみなされるので、特別なトリック(@code{inhibit-read-only}を非@code{nil}にバインドしてからプロパティを削除する)を知らないかぎり、@code{read-only}プロパティを取り除くことは不可能。@ref{Read Only Buffers}を参照のこと。"

#. type: item
#: original_texis/text.texi:3288
#, no-wrap
msgid "inhibit-read-only"
msgstr "inhibit-read-only"

#. type: kindex
#: original_texis/text.texi:3289
#, no-wrap
msgid "inhibit-read-only @r{(text property)}"
msgstr "inhibit-read-only @r{(text property)}"

#. type: table
#: original_texis/text.texi:3292
msgid "Characters that have the property @code{inhibit-read-only} can be edited even in read-only buffers.  @xref{Read Only Buffers}."
msgstr "プロパティ@code{inhibit-read-only}をもつ文字はたとえ読み取り専用バッファーでも編集できる。@ref{Read Only Buffers}を参照のこと。"

#. type: item
#: original_texis/text.texi:3293
#, no-wrap
msgid "invisible"
msgstr "invisible"

#. type: kindex
#: original_texis/text.texi:3294
#, no-wrap
msgid "invisible @r{(text property)}"
msgstr "invisible @r{(text property)}"

#. type: table
#: original_texis/text.texi:3297
msgid "A non-@code{nil} @code{invisible} property can make a character invisible on the screen.  @xref{Invisible Text}, for details."
msgstr "非@code{nil}の@code{invisible}プロパティにより、スクリーン上で文字を不可視にできる。詳細は@ref{Invisible Text}を参照のこと。"

#. type: item
#: original_texis/text.texi:3298
#, no-wrap
msgid "intangible"
msgstr "intangible"

#. type: kindex
#: original_texis/text.texi:3299
#, no-wrap
msgid "intangible @r{(text property)}"
msgstr "intangible @r{(text property)}"

#. type: table
#: original_texis/text.texi:3305
msgid "If a group of consecutive characters have equal and non-@code{nil} @code{intangible} properties, then you cannot place point between them.  If you try to move point forward into the group, point actually moves to the end of the group.  If you try to move point backward into the group, point actually moves to the start of the group."
msgstr "連続する文字のグループが非@code{nil}の等しい@code{intangible}プロパティをもつなら、それらの文字の間にポイントを置くことは不可能。そのグループ内に前方へポイントの移動を試みると、ポイントは実際にはそのグループの終端に移動する。そのグループ内に後方へポイントの移動を試みると、ポイントは実際にはそのグループの先頭に移動する。"

#. type: table
#: original_texis/text.texi:3309
msgid "If consecutive characters have unequal non-@code{nil} @code{intangible} properties, they belong to separate groups; each group is separately treated as described above."
msgstr "連続する文字のグループが非@code{nil}の等しくない@code{intangible}プロパティをもつなら、それらの文字は個別のグループに属して、各グループは上述のように別のグループとして扱われる。"

#. type: table
#: original_texis/text.texi:3312
msgid "When the variable @code{inhibit-point-motion-hooks} is non-@code{nil} (as it is by default), the @code{intangible} property is ignored."
msgstr "変数@code{inhibit-point-motion-hooks}が非@code{nil} (デフォルト)なら@code{intangible}プロパティは無視される。"

#. type: table
#: original_texis/text.texi:3319
msgid "Beware: this property operates at a very low level, and affects a lot of code in unexpected ways.  So use it with extreme caution.  A common misuse is to put an intangible property on invisible text, which is actually unnecessary since the command loop will move point outside of the invisible text at the end of each command anyway.  @xref{Adjusting Point}.  For these reasons, this property is obsolete; use the @code{cursor-intangible} property instead."
msgstr "注意せよ: このプロパティは非常に低レベルで処理されて、予想外の方法により多くのコードに影響する。そのため使用に際しては特別な注意を要する。誤った使用方法としては不可視のテキストにintangibleプロパティをputするのが一般的な誤りであり、コマンドループは各コマンドの終わりに不可視テキストの外部へポイントを移動するだろうから、これは実際には必要ない。@ref{Adjusting Point}を参照のこと。これらの理由によりこのプロパティは時代遅れであり、かわりに@code{cursor-intangible}プロパティを使用すること。"

#. type: item
#: original_texis/text.texi:3320
#, no-wrap
msgid "cursor-intangible"
msgstr "cursor-intangible"

#. type: kindex
#: original_texis/text.texi:3321
#, no-wrap
msgid "cursor-intangible @r{(text property)}"
msgstr "cursor-intangible @r{(text property)}"

#. type: findex
#: original_texis/text.texi:3322
#, no-wrap
msgid "cursor-intangible-mode"
msgstr "cursor-intangible-mode"

#. type: table
#: original_texis/text.texi:3326
msgid "When the minor mode @code{cursor-intangible-mode} is turned on, point is moved away of any position that has a non-@code{nil} @code{cursor-intangible} property, just before redisplay happens."
msgstr "マイナーモード@code{cursor-intangible-mode}がオンの際には、非@code{nil}の@code{cursor-intangible}プロパティをもつすべての位置から、再表示の発生直前にポイントが移動させられる。"

#. type: item
#: original_texis/text.texi:3327
#, no-wrap
msgid "field"
msgstr "field"

#. type: kindex
#: original_texis/text.texi:3328
#, no-wrap
msgid "field @r{(text property)}"
msgstr "field @r{(text property)}"

#. type: table
#: original_texis/text.texi:3333
msgid "Consecutive characters with the same @code{field} property constitute a @dfn{field}.  Some motion functions including @code{forward-word} and @code{beginning-of-line} stop moving at a field boundary.  @xref{Fields}."
msgstr "同じ@code{field}プロパティをもつ連続する文字は@dfn{フィールド}を構成する。@code{forward-word}や@code{beginning-of-line}を含むいくつかの移動関数はフィールド境界で移動を停止する。@ref{Fields}を参照のこと。"

#. type: item
#: original_texis/text.texi:3334
#, no-wrap
msgid "cursor"
msgstr "cursor"

#. type: kindex
#: original_texis/text.texi:3335
#, no-wrap
msgid "cursor @r{(text property)}"
msgstr "cursor @r{(text property)}"

#. type: table
#: original_texis/text.texi:3351
msgid "Normally, the cursor is displayed at the beginning or the end of any overlay and text property strings present at the current buffer position.  You can place the cursor on any desired character of these strings by giving that character a non-@code{nil} @code{cursor} text property.  In addition, if the value of the @code{cursor} property is an integer, it specifies the number of buffer's character positions, starting with the position where the overlay or the @code{display} property begins, for which the cursor should be displayed on that character.  Specifically, if the value of the @code{cursor} property of a character is the number @var{n}, the cursor will be displayed on this character for any buffer position in the range @code{[@var{ovpos}..@var{ovpos}+@var{n})}, where @var{ovpos} is the overlay's starting position given by @code{overlay-start} (@pxref{Managing Overlays}), or the position where the @code{display} text property begins in the buffer."
msgstr "カーソルは通常はカレントバッファー位置にあるオーバーレイ、およびテキストプロパティ文字列の先頭か終端に表示される。文字に非@code{nil}の@code{cursor}テキストプロパティを与えることにより、それら文字列内の任意の望む文字にカーソルを置くことができる。加えて@code{cursor}プロパティの値が整数なら、それはカーソルがその文字上に表示されるようにオーバーレイまたは@code{display}プロパティが始まる位置から数えたバッファーの文字位置の数字を指定する。特にある文字の@code{cursor}プロパティの値が数字@var{n}なら、カーソルは範囲@code{[@var{ovpos}..@var{ovpos}+@var{n})}内の任意のバッファー位置にあるその文字上に表示されるだろう。ここで@var{ovpos}は@code{overlay-start} (@ref{Managing Overlays}を参照)により与えられるオーバーレイ開始位置、またはそのバッファー内で@code{display}プロパティが始まる位置である。"

#. type: table
#: original_texis/text.texi:3362
msgid "In other words, the string character with the @code{cursor} property of any non-@code{nil} value is the character where to display the cursor.  The value of the property says for which buffer positions to display the cursor there.  If the value is an integer @var{n}, the cursor is displayed there when point is anywhere between the beginning of the overlay or @code{display} property and @var{n} positions after that.  If the value is anything else and non-@code{nil}, the cursor is displayed there only when point is at the beginning of the @code{display} property or at @code{overlay-start}."
msgstr "言い換えると文字列の非@code{nil}値の@code{cursor}プロパティをもつ文字はカーソルが表示される文字である。このプロパティの値はカーソルを表示するバッファーの位置を告げる。値が整数ならオーバーレイまたは@code{display}プロパティの始まりから@var{n}後ろの位置までの間にポイントがあるとき、カーソルはそこに表示される。値がそれ以外の非@code{nil}ならポイントが@code{display}プロパティの先頭、または@code{overlay-start}の位置だけに表示される。"

#. type: cindex
#: original_texis/text.texi:3363
#, no-wrap
msgid "cursor position for @code{display} properties and overlays"
msgstr "cursor position for @code{display} properties and overlays"

#. type: table
#: original_texis/text.texi:3373
msgid "When the buffer has many overlay strings (e.g., @pxref{Overlay Properties, before-string}) that conceal some of the buffer text or @code{display} properties that are strings, it is a good idea to use the @code{cursor} property on these strings to cue the Emacs display about the places where to put the cursor while traversing these strings.  This directly communicates to the display engine where the Lisp program wants to put the cursor, or where the user would expect the cursor, when point is located on some buffer position that is ``covered'' by the display or overlay string."
msgstr "バッファーのテキストを網羅するオーバーレイ文字列(@ref{Overlay Properties, before-string}を参照)や文字列であるような@code{display}プロパティがバッファーに多くある場合には、それらの文字列を走査する間にカーソルを置く箇所をEmacsに合図するために、@code{cursor}プロパティを使用するのはよいアイデアである。これはdisplayやオーバーレイ文字列に``カバー''された何らかのバッファー位置にポイントがある際に、Lispプログラムやユーザーがカーソルを配置したい箇所でディスプレイエンジンと直接通信する。"

#. type: item
#: original_texis/text.texi:3374
#, no-wrap
msgid "pointer"
msgstr "pointer"

#. type: kindex
#: original_texis/text.texi:3375
#, no-wrap
msgid "pointer @r{(text property)}"
msgstr "pointer @r{(text property)}"

#. type: table
#: original_texis/text.texi:3379
msgid "This specifies a specific pointer shape when the mouse pointer is over this text or image.  @xref{Pointer Shape}, for possible pointer shapes."
msgstr "これはそのテキストやイメージ上にマウスポインターがあるときの特定のマウスシェイプを指定する。利用できるポインターシェイプについては@ref{Pointer Shape}を参照のこと。"

#. type: item
#: original_texis/text.texi:3380
#, no-wrap
msgid "line-spacing"
msgstr "line-spacing"

#. type: kindex
#: original_texis/text.texi:3381
#, no-wrap
msgid "line-spacing @r{(text property)}"
msgstr "line-spacing @r{(text property)}"

#. type: table
#: original_texis/text.texi:3386
msgid "A newline can have a @code{line-spacing} text or overlay property that controls the height of the display line ending with that newline.  The property value overrides the default frame line spacing and the buffer local @code{line-spacing} variable.  @xref{Line Height}."
msgstr "改行は改行で終わるディスプレイ行の高さを制御するテキストプロパティやオーバーレイプロパティ@code{line-spacing}をもつことができる。このプロパティ値はデフォルトのフレーム行スペーシングと、バッファーローカル変数@code{line-spacing}をオーバーライドする。@ref{Line Height}を参照のこと。"

#. type: item
#: original_texis/text.texi:3387
#, no-wrap
msgid "line-height"
msgstr "line-height"

#. type: kindex
#: original_texis/text.texi:3388
#, no-wrap
msgid "line-height @r{(text property)}"
msgstr "line-height @r{(text property)}"

#. type: table
#: original_texis/text.texi:3392
msgid "A newline can have a @code{line-height} text or overlay property that controls the total height of the display line ending in that newline.  @xref{Line Height}."
msgstr "改行は改行で終わるディスプレイ行のトータル高さを制御するテキストプロパティ、またはオーバーレイプロパティ@code{line-height}をもつことができる。@ref{Line Height}を参照のこと。"

#. type: item
#: original_texis/text.texi:3393
#, no-wrap
msgid "wrap-prefix"
msgstr "wrap-prefix"

#. type: table
#: original_texis/text.texi:3401
msgid "If text has a @code{wrap-prefix} property, the prefix it defines will be added at display time to the beginning of every continuation line due to text wrapping (so if lines are truncated, the wrap-prefix is never used).  It may be a string or an image (@pxref{Other Display Specs}), or a stretch of whitespace such as specified by the @code{:width} or @code{:align-to} display properties (@pxref{Specified Space})."
msgstr "テキストが@code{wrap-prefix}プロパティをもつなら、それが定義するプレフィクスはテキストラッピング(text wrapping: テキスト折り返し)に由来するすべての継続行の先頭に表示時に追加されるだろう(行が切り詰められた場合にはwrap-prefixが使用されることはない)。これは文字列、イメージ(@ref{Other Display Specs}を参照)、あるいはディスプレイプロパティ@code{:width}や@code{:align-to} (@ref{Specified Space}を参照)により指定された空白文字範囲かもしれない。"

#. type: table
#: original_texis/text.texi:3406
msgid "A wrap-prefix may also be specified for an entire buffer using the @code{wrap-prefix} buffer-local variable (however, a @code{wrap-prefix} text-property takes precedence over the value of the @code{wrap-prefix} variable).  @xref{Truncation}."
msgstr "wrap-prefixはバッファーローカル変数@code{wrap-prefix}を使用して、バッファー全体にも指定され得る(が@code{wrap-prefix}テキストプロパティは@code{wrap-prefix}変数の値より優先される)。@ref{Truncation}を参照のこと。"

#. type: item
#: original_texis/text.texi:3407
#, no-wrap
msgid "line-prefix"
msgstr "line-prefix"

#. type: table
#: original_texis/text.texi:3414
msgid "If text has a @code{line-prefix} property, the prefix it defines will be added at display time to the beginning of every non-continuation line.  It may be a string or an image (@pxref{Other Display Specs}), or a stretch of whitespace such as specified by the @code{:width} or @code{:align-to} display properties (@pxref{Specified Space})."
msgstr "テキストが@code{line-prefix}プロパティをもつなら、それが定義するプレフィクスは表示時にすべての非継続行の先頭に追加されるだろう。これは文字列、イメージ(@ref{Other Display Specs}を参照)、あるいはディスプレイプロパティ@code{:width}や@code{:align-to} (@ref{Specified Space}を参照)により指定された空白文字範囲かもしれない。"

#. type: table
#: original_texis/text.texi:3419
msgid "A line-prefix may also be specified for an entire buffer using the @code{line-prefix} buffer-local variable (however, a @code{line-prefix} text-property takes precedence over the value of the @code{line-prefix} variable).  @xref{Truncation}."
msgstr "line-prefixはバッファーローカル変数@code{line-prefix}を使用して、バッファー全体にも指定され得る(が@code{line-prefix}テキストプロパティは@code{line-prefix}変数の値より優先される)。@ref{Truncation}を参照のこと。"

#. type: item
#: original_texis/text.texi:3420
#, no-wrap
msgid "modification-hooks"
msgstr "modification-hooks"

#. type: cindex
#: original_texis/text.texi:3421
#, no-wrap
msgid "change hooks for a character"
msgstr "change hooks for a character"

#. type: cindex
#: original_texis/text.texi:3422
#, no-wrap
msgid "hooks for changing a character"
msgstr "hooks for changing a character"

#. type: kindex
#: original_texis/text.texi:3423
#, no-wrap
msgid "modification-hooks @r{(text property)}"
msgstr "modification-hooks @r{(text property)}"

#. type: table
#: original_texis/text.texi:3435
msgid "If a character has the property @code{modification-hooks}, then its value should be a list of functions; modifying that character calls all of those functions before the actual modification.  Each function receives two arguments: the beginning and end of the part of the buffer being modified.  Note that if a particular modification hook function appears on several characters being modified by a single primitive, you can't predict how many times the function will be called.  Furthermore, insertion will not modify any existing character, so this hook will only be run when removing some characters, replacing them with others, or changing their text-properties."
msgstr "ある文字がプロパティ@code{modification-hooks}をもつなら、その値は関数のリストであること。その文字の変更により、実際の変更前にそれらの関数すべてが呼び出される。それぞれの関数は、変更されようとするバッファー部分の先頭と終端という2つの引数を受け取る。特定のmodificationフック関数が単一のプリミティブにより変更されつつある複数の文字に出現する場合は、その関数が呼び出される回数を予測することはできない。さらに挿入は既存の文字を変更しないので、このフックは文字の削除、他の文字への置換、またはそれらのテキストプロパティ変更時のみ実行されるだろう。"

#. type: table
#: original_texis/text.texi:3439
msgid "If these functions modify the buffer, they should bind @code{inhibit-modification-hooks} to @code{t} around doing so, to avoid confusing the internal mechanism that calls these hooks."
msgstr "これらの関数がバッファーを変更する場合には、これらのフックを呼び出す内部的メカニズムの混乱を避けるために、それらの関数はそれを行う前後に@code{inhibit-modification-hooks}を@code{t}にバインドすること。"

#. type: table
#: original_texis/text.texi:3442
msgid "Overlays also support the @code{modification-hooks} property, but the details are somewhat different (@pxref{Overlay Properties})."
msgstr "オーバーレイも@code{modification-hooks}プロパティをサポートするが詳細は若干異なる(@ref{Overlay Properties}を参照)。"

#. type: item
#: original_texis/text.texi:3443
#, no-wrap
msgid "insert-in-front-hooks"
msgstr "insert-in-front-hooks"

#. type: itemx
#: original_texis/text.texi:3444
#, no-wrap
msgid "insert-behind-hooks"
msgstr "insert-behind-hooks"

#. type: kindex
#: original_texis/text.texi:3445
#, no-wrap
msgid "insert-in-front-hooks @r{(text property)}"
msgstr "insert-in-front-hooks @r{(text property)}"

#. type: kindex
#: original_texis/text.texi:3446
#, no-wrap
msgid "insert-behind-hooks @r{(text property)}"
msgstr "insert-behind-hooks @r{(text property)}"

#. type: table
#: original_texis/text.texi:3453
msgid "The operation of inserting text in a buffer also calls the functions listed in the @code{insert-in-front-hooks} property of the following character and in the @code{insert-behind-hooks} property of the preceding character.  These functions receive two arguments, the beginning and end of the inserted text.  The functions are called @emph{after} the actual insertion takes place."
msgstr "あるバッファーへの挿入操作は後続文字の@code{insert-in-front-hooks}プロパティ、および先行文字の@code{insert-behind-hooks}プロパティにリストされる関数の呼び出しも行う。これらの関数は挿入されるテキストの先頭と終端という2つの引数を受け取る。関数は優先される実際の挿入が行われた@emph{後に}呼び出される。"

#. type: table
#: original_texis/text.texi:3456
msgid "See also @ref{Change Hooks}, for other hooks that are called when you change text in a buffer."
msgstr "バッファー内のテキスト変更時にに呼び出される他のフックについては@ref{Change Hooks}も参照のこと。"

#. type: item
#: original_texis/text.texi:3457
#, no-wrap
msgid "point-entered"
msgstr "point-entered"

#. type: itemx
#: original_texis/text.texi:3458
#, no-wrap
msgid "point-left"
msgstr "point-left"

#. type: cindex
#: original_texis/text.texi:3459
#, no-wrap
msgid "hooks for motion of point"
msgstr "hooks for motion of point"

#. type: kindex
#: original_texis/text.texi:3460
#, no-wrap
msgid "point-entered @r{(text property)}"
msgstr "point-entered @r{(text property)}"

#. type: kindex
#: original_texis/text.texi:3461
#, no-wrap
msgid "point-left @r{(text property)}"
msgstr "point-left @r{(text property)}"

#. type: table
#: original_texis/text.texi:3465
msgid "The special properties @code{point-entered} and @code{point-left} record hook functions that report motion of point.  Each time point moves, Emacs compares these two property values:"
msgstr "スペシャルプロパティ@code{point-entered}と@code{point-left}はポイント移動をリポートするフック関数を記録する。ポイントを移動するたびにEmacsは以下の2つのプロパティ値を比較する:"

#. type: itemize
#: original_texis/text.texi:3470
msgid "the @code{point-left} property of the character after the old location, and"
msgstr "古い位置の後の文字の@code{point-left}プロパティ。"

#. type: itemize
#: original_texis/text.texi:3473
msgid "the @code{point-entered} property of the character after the new location."
msgstr "新しい位置の後の文字の@code{point-entered}プロパティ。"

#. type: table
#: original_texis/text.texi:3478
msgid "If these two values differ, each of them is called (if not @code{nil})  with two arguments: the old value of point, and the new one."
msgstr "これらの2つの値が異なる場合には、(@code{nil}でなければ)古いポイント値と新しいポイント値という2つの引数とともにそれらそれぞれ呼び出される。"

#. type: table
#: original_texis/text.texi:3485
msgid "The same comparison is made for the characters before the old and new locations.  The result may be to execute two @code{point-left} functions (which may be the same function) and/or two @code{point-entered} functions (which may be the same function).  In any case, all the @code{point-left} functions are called first, followed by all the @code{point-entered} functions."
msgstr "同じ比較は古い位置と新しい位置の前の文字にたいしても行われる。この結果として2つの@code{point-left}関数(同じ関数かもしれない)、および/または2つの@code{point-entered}関数(同じ関数かもしれない)が実行される可能性がある。ある場合においては、まずすべての@code{point-left}関数が呼び出されて、その後にすべての@code{point-entered}関数が呼び出される。"

#. type: table
#: original_texis/text.texi:3489
msgid "It is possible to use @code{char-after} to examine characters at various buffer positions without moving point to those positions.  Only an actual change in the value of point runs these hook functions."
msgstr "さまざまなバッファー位置にたいして、そこにポイントを移動することなく文字を調べるために@code{char-after}を使用することができる。実際のポイント値変更だけがこれらのフック関数を呼び出す。"

#. type: table
#: original_texis/text.texi:3493
msgid "The variable @code{inhibit-point-motion-hooks} by default inhibits running the @code{point-left} and @code{point-entered} hooks, see @ref{Inhibit point motion hooks}."
msgstr "変数@code{inhibit-point-motion-hooks}はデフォルトでは@code{point-left}と@code{point-entered}のフック実行を抑制する。@ref{Inhibit point motion hooks}を参照のこと。"

#. type: table
#: original_texis/text.texi:3496
msgid "These properties are obsolete; please use @code{cursor-sensor-functions} instead."
msgstr "これらのプロパティは時代遅れであり、かわりに@code{cursor-sensor-functions}を使用してほしい。"

#. type: item
#: original_texis/text.texi:3497
#, no-wrap
msgid "cursor-sensor-functions"
msgstr "cursor-sensor-functions"

#. type: kindex
#: original_texis/text.texi:3498
#, no-wrap
msgid "cursor-sensor-functions @r{(text property)}"
msgstr "cursor-sensor-functions @r{(text property)}"

#. type: findex
#: original_texis/text.texi:3499
#, no-wrap
msgid "cursor-sensor-mode"
msgstr "cursor-sensor-mode"

#. type: table
#: original_texis/text.texi:3507
msgid "This special property records a list of functions that react to cursor motion.  Each function in the list is called, just before redisplay, with 3 arguments: the affected window, the previous known position of the cursor, and one of the symbols @code{entered} or @code{left}, depending on whether the cursor is entering the text that has this property or leaving it.  The functions are called only when the minor mode @code{cursor-sensor-mode} is turned on."
msgstr "このスペシャルプロパティはカーソル移動に反応する関数リストを記録する。このリスト内の各関数は影響を受けるウィンドウ、既知のカーソルの以前の位置、このプロパティをもつテキストにカーソルが入ったか離れたかに依存するシンボル@code{entered}か@code{left}という3つの受け取って再表示の直前に呼び出される。関数はマイナーモード@code{cursor-sensor-mode}がオンのときのみ呼び出される。"

#. type: item
#: original_texis/text.texi:3508
#, no-wrap
msgid "composition"
msgstr "composition"

#. type: kindex
#: original_texis/text.texi:3509
#, no-wrap
msgid "composition @r{(text property)}"
msgstr "composition @r{(text property)}"

#. type: table
#: original_texis/text.texi:3514
msgid "This text property is used to display a sequence of characters as a single glyph composed from components.  But the value of the property itself is completely internal to Emacs and should not be manipulated directly by, for instance, @code{put-text-property}."
msgstr "このテキストプロパティは文字シーケンスをコンポーネントから構成される単一グリフ(single glyph)として表示するために使用される。しかしこのプロパティの値自身は完全にEmacsの内部的なものであり、たとえば@code{put-text-property}などで直接操作しないこと。"

#. type: defvar
#: original_texis/text.texi:3517
#, no-wrap
msgid "inhibit-point-motion-hooks"
msgstr "inhibit-point-motion-hooks"

#. type: anchor{#1}
#: original_texis/text.texi:3524
msgid "Inhibit point motion hooks"
msgstr "Inhibit point motion hooks"

#. type: defvar
#: original_texis/text.texi:3524
msgid "When this obsolete variable is non-@code{nil}, @code{point-left} and @code{point-entered} hooks are not run, and the @code{intangible} property has no effect.  Do not set this variable globally; bind it with @code{let}.  Since the affected properties are obsolete, this variable's default value is @code{t}, to effectively disable them."
msgstr "この時代遅れの変数が非@code{nil}のときは、@code{point-left}と@code{point-entered}のフックは実行されず@code{intangible}プロパティは効果をもたない。この変数はグローバルにセットせず@code{let}でバインドすること。この変数の影響を受けるプロパティは時代遅れなので、それらを効果的に無効にするためにデフォルト値は@code{t}。"

#. type: defvar
#: original_texis/text.texi:3526
#, no-wrap
msgid "show-help-function"
msgstr "show-help-function"

#. type: anchor{#1}
#: original_texis/text.texi:3536
msgid "Help display"
msgstr "Help display"

#. type: defvar
#: original_texis/text.texi:3536
msgid "If this variable is non-@code{nil}, it specifies a function called to display help strings.  These may be @code{help-echo} properties, menu help strings (@pxref{Simple Menu Items}, @pxref{Extended Menu Items}), or tool bar help strings (@pxref{Tool Bar}).  The specified function is called with one argument, the help string to display, which is passed through @code{substitute-command-keys} before being given to the function; see @ref{Keys in Documentation}.  Tooltip mode (@pxref{Tooltips,,, emacs, The GNU Emacs Manual}) provides an example."
msgstr "この変数が非@code{nil}なら、それはヘルプ文字列を表示するために呼び出される関数を指定する。これらは@code{help-echo}プロパティ、メニューヘルプ文字列(@ref{Simple Menu Items}と@ref{Extended Menu Items}を参照)、ツールバーヘルプ文字列(@ref{Tool Bar}を参照)かもしれない。指定された関数は表示するためのヘルプ文字列(この関数に与えられる前に@code{substitute-command-keys}に渡される。@ref{Keys in Documentation}を参照)という単一の引数とともに呼び出される。Tooltipモード(@ref{Tooltips,,, emacs, The GNU Emacs Manual}を参照)が例を提供している。"

#. type: subsection
#: original_texis/text.texi:3539
#, no-wrap
msgid "Formatted Text Properties"
msgstr "Formatted Text Properties"

#. type: Plain text
#: original_texis/text.texi:3544
msgid "These text properties affect the behavior of the fill commands.  They are used for representing formatted text.  @xref{Filling}, and @ref{Margins}."
msgstr "以下のテキストプロパティはフィルコマンドの挙動に影響を与えます。これらはフォーマットされたテキストを表すために使用されます。@ref{Filling}と@ref{Margins}を参照してください。"

#. type: item
#: original_texis/text.texi:3546
#, no-wrap
msgid "hard"
msgstr "hard"

#. type: table
#: original_texis/text.texi:3552
msgid "If a newline character has this property, it is a ``hard'' newline.  The fill commands do not alter hard newlines and do not move words across them.  However, this property takes effect only if the @code{use-hard-newlines} minor mode is enabled.  @xref{Hard and Soft Newlines,, Hard and Soft Newlines, emacs, The GNU Emacs Manual}."
msgstr "改行文字がこのプロパティをもつならそれは``hard''改行。フィルコマンドはhard改行を変更せずそれらを横断して単語を移動しない。しかしこのプロパティはマイナーモード@code{use-hard-newlines}が有効な場合のみ影響を与える。@ref{Hard and Soft Newlines,, Hard and Soft Newlines, emacs, The GNU Emacs Manual}を参照のこと。"

#. type: item
#: original_texis/text.texi:3553
#, no-wrap
msgid "right-margin"
msgstr "right-margin"

#. type: table
#: original_texis/text.texi:3556
msgid "This property specifies an extra right margin for filling this part of the text."
msgstr "このプロパティはその部分のテキストのフィルにたいして余分な右マージンを指定する。"

#. type: table
#: original_texis/text.texi:3560
msgid "This property specifies an extra left margin for filling this part of the text."
msgstr "このプロパティはその部分のテキストのフィルにたいして余分な左マージンを指定する。"

#. type: item
#: original_texis/text.texi:3561
#, no-wrap
msgid "justification"
msgstr "justification"

#. type: table
#: original_texis/text.texi:3564
msgid "This property specifies the style of justification for filling this part of the text."
msgstr "このプロパティはその部分のテキストのフィルにたいして位置揃え(justification)のスタイルを指定する。"

#. type: subsection
#: original_texis/text.texi:3567
#, no-wrap
msgid "Stickiness of Text Properties"
msgstr "Stickiness of Text Properties"

#. type: cindex
#: original_texis/text.texi:3568
#, no-wrap
msgid "sticky text properties"
msgstr "sticky text properties"

#. type: cindex
#: original_texis/text.texi:3569
#, no-wrap
msgid "inheritance, text property"
msgstr "inheritance, text property"

#. type: Plain text
#: original_texis/text.texi:3575
msgid "Self-inserting characters, the ones that get inserted into a buffer when the user types them (@pxref{Commands for Insertion}), normally take on the same properties as the preceding character.  This is called @dfn{inheritance} of properties."
msgstr "ユーザーがそれらをタイプした際にはバッファーに挿入される自己挿入文字(@ref{Commands for Insertion}を参照)は、通常は先行する文字と同じプロパティをもちます。これはプロパティの@dfn{継承(inheritance)}と呼ばれます。"

#. type: Plain text
#: original_texis/text.texi:3585
msgid "By contrast, a Lisp program can do insertion with inheritance or without, depending on the choice of insertion primitive.  The ordinary text insertion functions, such as @code{insert}, do not inherit any properties.  They insert text with precisely the properties of the string being inserted, and no others.  This is correct for programs that copy text from one context to another---for example, into or out of the kill ring.  To insert with inheritance, use the special primitives described in this section.  Self-inserting characters inherit properties because they work using these primitives."
msgstr "対照的にLispプログラムは継承の有無に関わらず挿入を行うことができ、それは挿入プリミティブの選択に依存します。@code{insert}のような通常のテキスト挿入関数は何もプロパティを継承しません。これらは挿入される文字列と正確に同じプロパティをもち、それ以外のプロパティはもちません。これはたとえばkillリング外部にたいしてのように、あるコンテキストから他のコンテキストにテキストをコピーするプログラムにたいして適正です。継承つきで挿入を行うためには、このセクションで説明するスペシャルプリミティブを使用します。自己挿入文字はこれらのプリミティブを使用するのでプロパティを継承します。"

#. type: Plain text
#: original_texis/text.texi:3593
msgid "When you do insertion with inheritance, @emph{which} properties are inherited, and from where, depends on which properties are @dfn{sticky}.  Insertion after a character inherits those of its properties that are @dfn{rear-sticky}.  Insertion before a character inherits those of its properties that are @dfn{front-sticky}.  When both sides offer different sticky values for the same property, the previous character's value takes precedence."
msgstr "継承つきで挿入を行う際に、@emph{何の}プロパティがどこから継承されるかは@dfn{sticky(スティッキー、粘着する)}に依存します。ある文字の後への挿入における、それらの文字のプロパティ継承は@dfn{rear-sticky(後方スティッキー)}です。ある文字の前への挿入における、それらの文字ノプロパティ継承は@dfn{front-sticky(前方スティッキー)}です。これら両側のstickyが同じプロパティにたいして異なるsticky値をもつ場合には、前の文字の値が優先します。"

#. type: Plain text
#: original_texis/text.texi:3597
msgid "By default, a text property is rear-sticky but not front-sticky; thus, the default is to inherit all the properties of the preceding character, and nothing from the following character."
msgstr "デフォルトではテキストプロパティはfront-stickyではなくrear-stickyです。したがってデフォルトでは、すべてのプロパティは前の文字から継承して、後の文字からは何も継承しません。"

#. type: Plain text
#: original_texis/text.texi:3604
msgid "You can control the stickiness of various text properties with two specific text properties, @code{front-sticky} and @code{rear-nonsticky}, and with the variable @code{text-property-default-nonsticky}.  You can use the variable to specify a different default for a given property.  You can use those two text properties to make any specific properties sticky or nonsticky in any particular part of the text."
msgstr "さまざまなテキストプロパティのstickiness(スティッキネス、スティッキー性、粘着性、粘着度)は、2つのテキストプロパティ@code{front-sticky}と@code{rear-nonsticky}、および変数@code{text-property-default-nonsticky}で制御できます。与えられたプロパティにたいして異なるデフォルトを指定するためにこの変数を使用できます。テキストの任意の特定部分に特定のstickyや非stickyプロパティを指定するために、これら2つのテキストプロパティを使用できます。"

#. type: Plain text
#: original_texis/text.texi:3612
msgid "If a character's @code{front-sticky} property is @code{t}, then all its properties are front-sticky.  If the @code{front-sticky} property is a list, then the sticky properties of the character are those whose names are in the list.  For example, if a character has a @code{front-sticky} property whose value is @code{(face read-only)}, then insertion before the character can inherit its @code{face} property and its @code{read-only} property, but no others."
msgstr "ある文字の@code{front-sticky}プロパティが@code{t}なら、その文字のすべてのプロパティはfront-stickyです。@code{front-sticky}プロパティがリストなら、その文字のstickyなプロパティは名前がそのリスト内にあるプロパティです。たとえばある文字が値が@code{(face read-only)}であるような@code{front-sticky}プロパティをもつなら、その文字の前への挿入ではその文字の@code{face}プロパティと@code{read-only}プロパティは継承できますが他のプロパティは継承できません。"

#. type: Plain text
#: original_texis/text.texi:3620
msgid "The @code{rear-nonsticky} property works the opposite way.  Most properties are rear-sticky by default, so the @code{rear-nonsticky} property says which properties are @emph{not} rear-sticky.  If a character's @code{rear-nonsticky} property is @code{t}, then none of its properties are rear-sticky.  If the @code{rear-nonsticky} property is a list, properties are rear-sticky @emph{unless} their names are in the list."
msgstr "@code{rear-nonsticky}は逆の方法で機能します。ほとんどのプロパティはデフォルトでrear-stickyであり、@code{rear-nonsticky}プロパティはどのプロパティが@emph{rear-stickyではない}かを告げます。ある文字の@code{rear-nosticky}プロパティが@code{t}なら、その文字のすべてのプロパティはrear-stickyではありません。@code{rear-nosticky}プロパティがリストなら、その文字のstickyなプロパティは名前がそのリスト内に@emph{ない}プロパティです。"

#. type: defvar
#: original_texis/text.texi:3621
#, no-wrap
msgid "text-property-default-nonsticky"
msgstr "text-property-default-nonsticky"

#. type: defvar
#: original_texis/text.texi:3626
msgid "This variable holds an alist which defines the default rear-stickiness of various text properties.  Each element has the form @code{(@var{property} . @var{nonstickiness})}, and it defines the stickiness of a particular text property, @var{property}."
msgstr "この変数はさまざまなテキストプロパティのデフォルトのrear-stickinessを定義するalist。各要素は@code{(@var{property} . @var{nonstickiness})}という形式をもち、これは特定のテキストプロパティ@var{property}のstickinessを定義する。"

#. type: defvar
#: original_texis/text.texi:3631
msgid "If @var{nonstickiness} is non-@code{nil}, this means that the property @var{property} is rear-nonsticky by default.  Since all properties are front-nonsticky by default, this makes @var{property} nonsticky in both directions by default."
msgstr "@var{nonstickiness}が非@code{nil}なら、それはプロパティ@var{property}がデフォルトでrear-nonstickyであることを意味する。すべてのプロパティはデフォルトではfront-nonstickyなので、これにより@var{property}は両方向にたいしてデフォルトでnonstickyになる。"

#. type: defvar
#: original_texis/text.texi:3635
msgid "The text properties @code{front-sticky} and @code{rear-nonsticky}, when used, take precedence over the default @var{nonstickiness} specified in @code{text-property-default-nonsticky}."
msgstr "テキストプロパティ@code{front-sticky}と@code{rear-nonsticky}が使用された際には、@code{text-property-default-nonsticky}内で指定されたデフォルトの@var{nonstickiness}より優先される。"

#. type: Plain text
#: original_texis/text.texi:3638
msgid "Here are the functions that insert text with inheritance of properties:"
msgstr "以下はプロパティ継承つきでテキストを挿入する関数です:"

#. type: defun
#: original_texis/text.texi:3639
#, no-wrap
msgid "insert-and-inherit &rest strings"
msgstr "insert-and-inherit &rest strings"

#. type: defun
#: original_texis/text.texi:3642
msgid "Insert the strings @var{strings}, just like the function @code{insert}, but inherit any sticky properties from the adjoining text."
msgstr "関数@code{insert}と同じように文字列@var{strings}を挿入するが、隣接するテキストからすべてのstickyなプロパティを継承する。"

#. type: defun
#: original_texis/text.texi:3644
#, no-wrap
msgid "insert-before-markers-and-inherit &rest strings"
msgstr "insert-before-markers-and-inherit &rest strings"

#. type: defun
#: original_texis/text.texi:3648
msgid "Insert the strings @var{strings}, just like the function @code{insert-before-markers}, but inherit any sticky properties from the adjoining text."
msgstr "関数@code{insert-before-markers}と同じように文字列@var{strings}を挿入するが、隣接するテキストからすべてのstickyなプロパティを継承する。"

#. type: Plain text
#: original_texis/text.texi:3652
msgid "@xref{Insertion}, for the ordinary insertion functions which do not inherit."
msgstr "継承を行わない通常の挿入関数については@ref{Insertion}を参照してください。"

#. type: subsection
#: original_texis/text.texi:3654
#, no-wrap
msgid "Lazy Computation of Text Properties"
msgstr "Lazy Computation of Text Properties"

#. type: Plain text
#: original_texis/text.texi:3659
msgid "Instead of computing text properties for all the text in the buffer, you can arrange to compute the text properties for parts of the text when and if something depends on them."
msgstr "バッファー内のすべてのテキストにたいしてテキストプロパティを計算するかわりに、何かがテキスト範囲に依存している場合にはテキストプロパティを計算するようにアレンジできます。"

#. type: Plain text
#: original_texis/text.texi:3663
msgid "The primitive that extracts text from the buffer along with its properties is @code{buffer-substring}.  Before examining the properties, this function runs the abnormal hook @code{buffer-access-fontify-functions}."
msgstr "プロパティとともにバッファーからテキストを抽出するプリミティブは@code{buffer-substring}です。この関数はプロパティを調べる前にアブノーマルフック@code{buffer-access-fontify-functions}を実行します。"

#. type: defvar
#: original_texis/text.texi:3664
#, no-wrap
msgid "buffer-access-fontify-functions"
msgstr "buffer-access-fontify-functions"

#. type: defvar
#: original_texis/text.texi:3671
msgid "This variable holds a list of functions for computing text properties.  Before @code{buffer-substring} copies the text and text properties for a portion of the buffer, it calls all the functions in this list.  Each of the functions receives two arguments that specify the range of the buffer being accessed.  (The buffer itself is always the current buffer.)"
msgstr "この変数はテキストプロパティ計算用の関数のリストを保持する。@code{buffer-substring}がバッファーの一部のテキストとテキストプロパティをコピーする前にこのリスト内の関数すべてを呼び出す。各関数はアクセスされるバッファー範囲を指定する2つの引数を受け取る(バッファーは常にカレントバッファー)。"

#. type: Plain text
#: original_texis/text.texi:3675
msgid "The function @code{buffer-substring-no-properties} does not call these functions, since it ignores text properties anyway."
msgstr "関数@code{buffer-substring-no-properties}はいずれにせよテキストプロパティを無視するので、これらの関数を呼び出さない。"

#. type: Plain text
#: original_texis/text.texi:3679
msgid "In order to prevent the hook functions from being called more than once for the same part of the buffer, you can use the variable @code{buffer-access-fontified-property}."
msgstr "同じバッファー部分にたいして複数回フック関数が呼び出されるのを防ぐために変数@code{buffer-access-fontified-property}を使用できる。"

#. type: defvar
#: original_texis/text.texi:3680
#, no-wrap
msgid "buffer-access-fontified-property"
msgstr "buffer-access-fontified-property"

#. type: defvar
#: original_texis/text.texi:3685
msgid "If this variable's value is non-@code{nil}, it is a symbol which is used as a text property name.  A non-@code{nil} value for that text property means the other text properties for this character have already been computed."
msgstr "この変数の値が非@code{nil}なら、それはテキストプロパティ名として使用されるシンボル。そのテキストプロパティにたいする非@code{nil}値は、その文字にたいする他のテキストプロパティはすでに計算済みであることを意味する。"

#. type: defvar
#: original_texis/text.texi:3691
msgid "If all the characters in the range specified for @code{buffer-substring} have a non-@code{nil} value for this property, @code{buffer-substring} does not call the @code{buffer-access-fontify-functions} functions.  It assumes these characters already have the right text properties, and just copies the properties they already have."
msgstr "@code{buffer-substring}にたいして指定された範囲内のすべての文字、このプロパティにたいする値として非@code{nil}をもつなら、@code{buffer-substring}は@code{buffer-access-fontify-functions}の関数を呼び出さない。それらの文字がすでに正しいテキストプロパティをもつとみなして、それらがすでに所有するプロパティを単にコピーする。"

#. type: defvar
#: original_texis/text.texi:3696
msgid "The normal way to use this feature is that the @code{buffer-access-fontify-functions} functions add this property, as well as others, to the characters they operate on.  That way, they avoid being called over and over for the same text."
msgstr "@code{buffer-access-fontify-functions}の関数にこのプロパティ、同様に他のプロパティを処理対象の文字に追加させることがこの機能の通常の用途である。この方法では同じテキストにたいして、それらの関数が何度も呼び出されるのを防ぐことができる。"

#. type: subsection
#: original_texis/text.texi:3699
#, no-wrap
msgid "Defining Clickable Text"
msgstr "Defining Clickable Text"

#. type: cindex
#: original_texis/text.texi:3700
#, no-wrap
msgid "clickable text"
msgstr "clickable text"

#. type: cindex
#: original_texis/text.texi:3701
#, no-wrap
msgid "follow links"
msgstr "follow links"

#. type: cindex
#: original_texis/text.texi:3702
#, no-wrap
msgid "mouse-1"
msgstr "mouse-1"

#. type: Plain text
#: original_texis/text.texi:3708
msgid "@dfn{Clickable text} is text that can be clicked, with either the mouse or via a keyboard command, to produce some result.  Many major modes use clickable text to implement textual hyper-links, or @dfn{links} for short."
msgstr "@dfn{クリック可能テキスト(clickable text)}とは何らかの結果を生成するためにマウスやキーボードコマンドを通じてクリックできるテキストです。多くのメジャーモードがテキスト的なハイパーリンク、略して@dfn{リンク(link)}を実装するためにクリック可能テキストを使用しています。"

#. type: Plain text
#: original_texis/text.texi:3714
msgid "The easiest way to insert and manipulate links is to use the @code{button} package.  @xref{Buttons}.  In this section, we will explain how to manually set up clickable text in a buffer, using text properties.  For simplicity, we will refer to the clickable text as a @dfn{link}."
msgstr "リンクの挿入や操作を行うもっとも簡単な方法は@code{button}パッケージの使用です。@ref{Buttons}を参照してください。このセクションではテキストプロパティを使用してバッファー内に手作業でクリック可能テキストをセットアップする方法を説明します。簡略にするためにクリック可能テキストを@dfn{リンク}と呼ぶことにします。"

#. type: Plain text
#: original_texis/text.texi:3720
msgid "Implementing a link involves three separate steps: (1) indicating clickability when the mouse moves over the link; (2) making @key{RET} or @kbd{mouse-2} on that link do something; and (3) setting up a @code{follow-link} condition so that the link obeys @code{mouse-1-click-follows-link}."
msgstr "リンクの実装には、(1)リンク上にマウスが移動した際にクリック可能であることを示し、(2)そのリンク上の@key{RET}か@kbd{mouse-2}で何かを行うようにして、(3)そのリンクが@code{mouse-1-click-follows-link}にしたがうよう@code{follow-link}をセットアップする、という3つのステップが含まれます。"

#. type: Plain text
#: original_texis/text.texi:3727
msgid "To indicate clickability, add the @code{mouse-face} text property to the text of the link; then Emacs will highlight the link when the mouse moves over it.  In addition, you should define a tooltip or echo area message, using the @code{help-echo} text property.  @xref{Special Properties}.  For instance, here is how Dired indicates that file names are clickable:"
msgstr "クリック可能なことを示すためには、そのリンクのテキストに@code{mouse-face}プロパティを追加します。するとEmacsはそれ以降マウスがその上に移動した際にリンクをハイライトするでしょう。加えて@code{help-echo}テキストプロパティを使用してツールチップかエコーエリアメッセージを定義するべきです。@ref{Special Properties}を参照してください。たとえば以下はDiredがファイル名がクリック可能なことを示す方法です:"

#. type: smallexample
#: original_texis/text.texi:3737
#, no-wrap
msgid ""
" (if (dired-move-to-filename)\n"
"     (add-text-properties\n"
"       (point)\n"
"       (save-excursion\n"
"         (dired-move-to-end-of-filename)\n"
"         (point))\n"
"       '(mouse-face highlight\n"
"         help-echo \"mouse-2: visit this file in other window\")))\n"
msgstr ""
" (if (dired-move-to-filename)\n"
"     (add-text-properties\n"
"       (point)\n"
"       (save-excursion\n"
"         (dired-move-to-end-of-filename)\n"
"         (point))\n"
"       '(mouse-face highlight\n"
"         help-echo \"mouse-2: visit this file in other window\")))\n"

#. type: Plain text
#: original_texis/text.texi:3744
msgid "To make the link clickable, bind @key{RET} and @kbd{mouse-2} to commands that perform the desired action.  Each command should check to see whether it was called on a link, and act accordingly.  For instance, Dired's major mode keymap binds @kbd{mouse-2} to the following command:"
msgstr "リンクをクリック可能にするためには、 @key{RET}と@kbd{mouse-2}を望むアクションを行うコマンドにバインドします。各コマンドはリンク上から呼び出されたかチェックして、それに応じて動作するべきです。たとえばDiredメジャーモードのキーマップは@kbd{mouse-2}を以下のコマンドにバインドします:"

#. type: smallexample
#: original_texis/text.texi:3765
#, no-wrap
msgid ""
"(defun dired-mouse-find-file-other-window (event)\n"
"  \"In Dired, visit the file or directory name you click on.\"\n"
"  (interactive \"e\")\n"
"  (let ((window (posn-window (event-end event)))\n"
"        (pos (posn-point (event-end event)))\n"
"        file)\n"
"    (if (not (windowp window))\n"
"        (error \"No file chosen\"))\n"
"    (with-current-buffer (window-buffer window)\n"
"      (goto-char pos)\n"
"      (setq file (dired-get-file-for-visit)))\n"
"    (if (file-directory-p file)\n"
"        (or (and (cdr dired-subdir-alist)\n"
"                 (dired-goto-subdir file))\n"
"            (progn\n"
"              (select-window window)\n"
"              (dired-other-window file)))\n"
"      (select-window window)\n"
"      (find-file-other-window (file-name-sans-versions file t)))))\n"
msgstr ""
"(defun dired-mouse-find-file-other-window (event)\n"
"  \"In Dired, visit the file or directory name you click on.\"\n"
"  (interactive \"e\")\n"
"  (let ((window (posn-window (event-end event)))\n"
"        (pos (posn-point (event-end event)))\n"
"        file)\n"
"    (if (not (windowp window))\n"
"        (error \"No file chosen\"))\n"
"    (with-current-buffer (window-buffer window)\n"
"      (goto-char pos)\n"
"      (setq file (dired-get-file-for-visit)))\n"
"    (if (file-directory-p file)\n"
"        (or (and (cdr dired-subdir-alist)\n"
"                 (dired-goto-subdir file))\n"
"            (progn\n"
"              (select-window window)\n"
"              (dired-other-window file)))\n"
"      (select-window window)\n"
"      (find-file-other-window (file-name-sans-versions file t)))))\n"

#. type: Plain text
#: original_texis/text.texi:3771
msgid "This command uses the functions @code{posn-window} and @code{posn-point} to determine where the click occurred, and @code{dired-get-file-for-visit} to determine which file to visit."
msgstr "このコマンドはクリックがどこで発生したかを判断するために関数@code{posn-window}と@code{posn-point}、visitするファイルの判断に関数@code{dired-get-file-for-visit}を使用します。"

#. type: Plain text
#: original_texis/text.texi:3775
msgid "Instead of binding the mouse command in a major mode keymap, you can bind it within the link text, using the @code{keymap} text property (@pxref{Special Properties}).  For instance:"
msgstr "マウスコマンドをメジャーモードキーマップ内でバインドするかわりに、@code{keymap}プロパティ(@ref{Special Properties}を参照)を使用してリンクテキスト内でバインドできます。たとえば:"

#. type: example
#: original_texis/text.texi:3780
#, no-wrap
msgid ""
"(let ((map (make-sparse-keymap)))\n"
"  (define-key map [mouse-2] 'operate-this-button)\n"
"  (put-text-property link-start link-end 'keymap map))\n"
msgstr ""
"(let ((map (make-sparse-keymap)))\n"
"  (define-key map [mouse-2] 'operate-this-button)\n"
"  (put-text-property link-start link-end 'keymap map))\n"

#. type: Plain text
#: original_texis/text.texi:3786
msgid "With this method, you can easily define different commands for different links.  Furthermore, the global definition of @key{RET} and @kbd{mouse-2} remain available for the rest of the text in the buffer."
msgstr "この手法により異なるリンクに異なるコマンドを簡単に定義できます。さらにそのバッファー内の残りのテキストにたいしては、@key{RET}と@kbd{mouse-2}のグローバル定義を利用可能なまま残すことができます。"

#. type: vindex
#: original_texis/text.texi:3787
#, no-wrap
msgid "mouse-1-click-follows-link"
msgstr "mouse-1-click-follows-link"

#. type: Plain text
#: original_texis/text.texi:3794
msgid "The basic Emacs command for clicking on links is @kbd{mouse-2}.  However, for compatibility with other graphical applications, Emacs also recognizes @kbd{mouse-1} clicks on links, provided the user clicks on the link quickly without moving the mouse.  This behavior is controlled by the user option @code{mouse-1-click-follows-link}.  @xref{Mouse References,,, emacs, The GNU Emacs Manual}."
msgstr "リンク上でのクリックにたいするEmacsの基本コマンドは@kbd{mouse-2}です。しかし他のグラフィカルなアプリケーションとの互換性のために、ユーザーがマウスを動かさずに素早くリンクをクリックするという条件の下で、Emacsはリンク上での@kbd{mouse-1}クリックも認識します。この振る舞いはユーザーオプション@code{mouse-1-click-follows-link}により制御されます。@ref{Mouse References,,, emacs, The GNU Emacs Manual}を参照してください。"

#. type: cindex
#: original_texis/text.texi:3795
#, no-wrap
msgid "follow-link (text or overlay property)"
msgstr "follow-link (text or overlay property)"

#. type: Plain text
#: original_texis/text.texi:3808
msgid "To set up the link so that it obeys @code{mouse-1-click-follows-link}, you must either (1) apply a @code{follow-link} text or overlay property to the link text, or (2)  bind the @code{follow-link} event to a keymap (which can be a major mode keymap or a local keymap specified via the @code{keymap} text property).  The value of the @code{follow-link} property, or the binding for the @code{follow-link} event, acts as a condition for the link action.  This condition tells Emacs two things: the circumstances under which a @kbd{mouse-1} click should be regarded as occurring inside the link, and how to compute an action code that says what to translate the @kbd{mouse-1} click into.  The link action condition can be one of the following:"
msgstr "@code{mouse-1-click-follows-link}にしたがうようにリンクをセットアップするには、(1)そのテキストに@code{follow-link}テキストプロパティまたはオーバーレイプロパティを適用する、または(2)@code{follow-link}イベントをキーマップ(@code{keymap}テキストプロパティを通じたメジャーモードキーマップまたはローカルキーマップ)にバインドするかの、いずれかを行わなければなりません。@code{follow-link}プロパティの値、または@code{follow-link}イベントにたいするバインディングはリンクアクションにたいするコンディション(condition)として機能します。この条件はEmacsにたいして2つのことを告げます。それは@kbd{mouse-1}のクリックがそのリンクの内側で発生したとみなすべき状況、そして@kbd{mouse-1}のクリックを何に変換するかを告げるアクションコード(action code)を計算する方法です。そのリンクのアクション条件は以下のうちの1つです:"

#. type: table
#: original_texis/text.texi:3814
msgid "If the condition is the symbol @code{mouse-face}, a position is inside a link if there is a non-@code{nil} @code{mouse-face} property at that position.  The action code is always @code{t}."
msgstr "コンディションがシンボル@code{mouse-face}の場合には、その位置に非@code{nil}の@code{mouse-face}プロパティがあればそれはリンク内側の位置。アクションコードは常に@code{t}。"

#. type: table
#: original_texis/text.texi:3816
msgid "For example, here is how Info mode handles @key{mouse-1}:"
msgstr "以下はInfoモードが@key{mouse-1}を処理する例:"

#. type: smallexample
#: original_texis/text.texi:3819
#, no-wrap
msgid "(define-key Info-mode-map [follow-link] 'mouse-face)\n"
msgstr "(define-key Info-mode-map [follow-link] 'mouse-face)\n"

#. type: item
#: original_texis/text.texi:3821
#, no-wrap
msgid "a function"
msgstr "関数"

#. type: table
#: original_texis/text.texi:3826
msgid "If the condition is a function, @var{func}, then a position @var{pos} is inside a link if @code{(@var{func} @var{pos})} evaluates to non-@code{nil}.  The value returned by @var{func} serves as the action code."
msgstr "コンディションが関数@var{func}の場合には、@code{(@var{func} @var{pos})}が非@code{nil}に評価されれば、位置@var{pos}はリンクの内側。@var{func}がリターンする値はアクションコードとして機能する。"

#. type: table
#: original_texis/text.texi:3829
msgid "For example, here is how pcvs enables @kbd{mouse-1} to follow links on file names only:"
msgstr "以下はpcvsがファイル名の上でのみ@kbd{mouse-1}によるリンクのフォローを有効にする方法の例:"

#. type: smallexample
#: original_texis/text.texi:3834
#, no-wrap
msgid ""
"(define-key map [follow-link]\n"
"  (lambda (pos)\n"
"    (eq (get-char-property pos 'face) 'cvs-filename-face)))\n"
msgstr ""
"(define-key map [follow-link]\n"
"  (lambda (pos)\n"
"    (eq (get-char-property pos 'face) 'cvs-filename-face)))\n"

#. type: item
#: original_texis/text.texi:3836 original_texis/text.texi:3856
#, no-wrap
msgid "anything else"
msgstr "その他"

#. type: table
#: original_texis/text.texi:3842
msgid "If the condition value is anything else, then the position is inside a link and the condition itself is the action code.  Clearly, you should specify this kind of condition only when applying the condition via a text or property overlay on the link text (so that it does not apply to the entire buffer)."
msgstr "コンディション値がそれ以外の場合には、その位置はリンク内側であり、そのコンディション自体がアクションコード。(バッファー全体に適用されないように)リンクテキストのテキストプロパティかオーバーレイプロパティを通じてコンディションを適用するときのみ、この類のコンディションを指定すべきなのは明確である。"

#. type: Plain text
#: original_texis/text.texi:3846
msgid "The action code tells @kbd{mouse-1} how to follow the link:"
msgstr "アクションコードは@kbd{mouse-1}がリンクをフォローする方法を告げます:"

#. type: item
#: original_texis/text.texi:3848
#, no-wrap
msgid "a string or vector"
msgstr "文字列かベクター"

#. type: table
#: original_texis/text.texi:3855
msgid "If the action code is a string or vector, the @kbd{mouse-1} event is translated into the first element of the string or vector; i.e., the action of the @kbd{mouse-1} click is the local or global binding of that character or symbol.  Thus, if the action code is @code{\"foo\"}, @kbd{mouse-1} translates into @kbd{f}.  If it is @code{[foo]}, @kbd{mouse-1} translates into @key{foo}."
msgstr "アクションコードが文字列かベクターなら、@kbd{mouse-1}イベントは文字列かベクターの最初の要素に変換される。つまり@kbd{mouse-1}クリックのアクションはその文字、またはシンボルのローカルかグローバルのバインディング。したがってアクションコードが@code{\"foo\"}なら、@kbd{mouse-1}は@kbd{f}、@code{[foo]}なら@kbd{mouse-1}は@key{foo}に変換される。"

#. type: table
#: original_texis/text.texi:3859
msgid "For any other non-@code{nil} action code, the @kbd{mouse-1} event is translated into a @kbd{mouse-2} event at the same position."
msgstr "その他の非@code{nil}のアクションコードでは、@kbd{mouse-1}イベントは同じ位置の@kbd{mouse-2}イベントに変換される。"

#. type: Plain text
#: original_texis/text.texi:3866
msgid "To define @kbd{mouse-1} to activate a button defined with @code{define-button-type}, give the button a @code{follow-link} property.  The property value should be a link action condition, as described above.  @xref{Buttons}.  For example, here is how Help mode handles @kbd{mouse-1}:"
msgstr "@code{define-button-type}で定義されるボタンをアクティブにするように@kbd{mouse-1}を定義するには、そのボタンに@code{follow-link}プロパティを与えます。このプロパティの値は上述したリンクのアクションコンディションであるべきです。@ref{Buttons}を参照のこと。たとえば以下はHelpモードが@kbd{Mouse-1}を処理する例です。"

#. type: smallexample
#: original_texis/text.texi:3871
#, no-wrap
msgid ""
"(define-button-type 'help-xref\n"
"  'follow-link t\n"
"  'action #'help-button-action)\n"
msgstr ""
"(define-button-type 'help-xref\n"
"  'follow-link t\n"
"  'action #'help-button-action)\n"

#. type: Plain text
#: original_texis/text.texi:3878
msgid "To define @kbd{mouse-1} on a widget defined with @code{define-widget}, give the widget a @code{:follow-link} property.  The property value should be a link action condition, as described above.  For example, here is how the @code{link} widget specifies that a @key{mouse-1} click shall be translated to @key{RET}:"
msgstr "@code{define-widget}で定義されたウィジェットに@kbd{mouse-1}を定義するには、そのウィジェットに@code{:follow-link}プロパティを与えます。このプロパティの値は、上述したようなリンクのアクションコンディションであるべきです。たとえば以下は@key{mouse-1}クリックが@key{RET}に変換されるように@code{link}ウィジェットを指定する方法の例です:"

#. type: smallexample
#: original_texis/text.texi:3887
#, no-wrap
msgid ""
"(define-widget 'link 'item\n"
"  \"An embedded link.\"\n"
"  :button-prefix 'widget-link-prefix\n"
"  :button-suffix 'widget-link-suffix\n"
"  :follow-link \"\\C-m\"\n"
"  :help-echo \"Follow the link.\"\n"
"  :format \"%[%t%]\")\n"
msgstr ""
"(define-widget 'link 'item\n"
"  \"An embedded link.\"\n"
"  :button-prefix 'widget-link-prefix\n"
"  :button-suffix 'widget-link-suffix\n"
"  :follow-link \"\\C-m\"\n"
"  :help-echo \"Follow the link.\"\n"
"  :format \"%[%t%]\")\n"

#. type: defun
#: original_texis/text.texi:3889
#, no-wrap
msgid "mouse-on-link-p pos"
msgstr "mouse-on-link-p pos"

#. type: defun
#: original_texis/text.texi:3893
msgid "This function returns non-@code{nil} if position @var{pos} in the current buffer is on a link.  @var{pos} can also be a mouse event location, as returned by @code{event-start} (@pxref{Accessing Mouse})."
msgstr "この関数はカレントバッファー内の位置@var{pos}がリンク上なら非@code{nil}をリターンする。@var{pos}は@code{event-start}がリターンするようなマウスイベント位置でもよい(@ref{Accessing Mouse}を参照)。"

#. type: subsection
#: original_texis/text.texi:3896
#, no-wrap
msgid "Defining and Using Fields"
msgstr "Defining and Using Fields"

#. type: cindex
#: original_texis/text.texi:3897
#, no-wrap
msgid "fields"
msgstr "fields"

#. type: Plain text
#: original_texis/text.texi:3904
msgid "A field is a range of consecutive characters in the buffer that are identified by having the same value (comparing with @code{eq}) of the @code{field} property (either a text-property or an overlay property).  This section describes special functions that are available for operating on fields."
msgstr "フィールドとはバッファー内にある連続する文字範囲であり、@code{field}プロパティ(テキストプロパティかオーバーレイプロパティ)に同じ値(@code{eq}で比較)をもつことにより識別されます。このセクションではフィールドの操作に利用できるスペシャル関数を説明します。"

#. type: Plain text
#: original_texis/text.texi:3908
msgid "You specify a field with a buffer position, @var{pos}.  We think of each field as containing a range of buffer positions, so the position you specify stands for the field containing that position."
msgstr "フィールドはバッファー位置@var{pos}で指定します。各フィールドはバッファー位置の範囲を含むと考えて、指定した位置はその位置を含むフィールドを表します。"

#. type: Plain text
#: original_texis/text.texi:3916
msgid "When the characters before and after @var{pos} are part of the same field, there is no doubt which field contains @var{pos}: the one those characters both belong to.  When @var{pos} is at a boundary between fields, which field it belongs to depends on the stickiness of the @code{field} properties of the two surrounding characters (@pxref{Sticky Properties}).  The field whose property would be inherited by text inserted at @var{pos} is the field that contains @var{pos}."
msgstr "@var{pos}の前後の文字は同じフィールドに属し、どのフィールドが@var{pos}を含むかという疑問はありません。それらの文字が属するフィールドがそのフィールドです。@var{pos}がフィールド境界のときは、それがどのフィールドに属すかは、取り囲む2つの文字の@code{field}プロパティのstickinessに依存します(@ref{Sticky Properties}を参照)。@var{pos}に挿入されたテキストからプロパティが継承されたフィールドが@var{pos}を含むフィールドです。"

#. type: Plain text
#: original_texis/text.texi:3924
msgid "There is an anomalous case where newly inserted text at @var{pos} would not inherit the @code{field} property from either side.  This happens if the previous character's @code{field} property is not rear-sticky, and the following character's @code{field} property is not front-sticky.  In this case, @var{pos} belongs to neither the preceding field nor the following field; the field functions treat it as belonging to an empty field whose beginning and end are both at @var{pos}."
msgstr "@var{pos}に新たに挿入されたテキストが、いずれの側からも@code{field}プロパティを継承しない異常なケースがあります。これは前の文字の@code{field}プロパティがrear-stickyでなく、後の文字の@code{field}プロパティがfront-stickyでもない場合に発生します。このケースでは@var{pos}は前後のフィールドいずれにも属しません。フィールド関数はそれを、開始と終了が@var{pos}であるような空フィールドに属するものとして扱います。"

#. type: Plain text
#: original_texis/text.texi:3928
msgid "In all of these functions, if @var{pos} is omitted or @code{nil}, the value of point is used by default.  If narrowing is in effect, then @var{pos} should fall within the accessible portion.  @xref{Narrowing}."
msgstr "以下のすべての関数では、@var{pos}が省略か@code{nil}ならポイントの値がデフォルトとして使用されます。ナローイング(narrowing)が効力をもつ場合には、@var{pos}はアクセス可能部分にあるはずです。@ref{Narrowing}を参照してください。"

#. type: defun
#: original_texis/text.texi:3929
#, no-wrap
msgid "field-beginning &optional pos escape-from-edge limit"
msgstr "field-beginning &optional pos escape-from-edge limit"

#. type: defun
#: original_texis/text.texi:3931
msgid "This function returns the beginning of the field specified by @var{pos}."
msgstr "この関数は@var{pos}で指定されたフィールドの先頭をリターンする。"

#. type: defun
#: original_texis/text.texi:3937
msgid "If @var{pos} is at the beginning of its field, and @var{escape-from-edge} is non-@code{nil}, then the return value is always the beginning of the preceding field that @emph{ends} at @var{pos}, regardless of the stickiness of the @code{field} properties around @var{pos}."
msgstr "@var{pos}が自身のフィールド先頭にあり、かつ@var{escape-from-edge}が非@code{nil}なら、@var{pos}周辺の@code{field}プロパティのstickinessに関わらず、リターン値は常に@var{pos}が終端であるような、前にあるフィールドの先頭になる。"

#. type: defun
#: original_texis/text.texi:3941
msgid "If @var{limit} is non-@code{nil}, it is a buffer position; if the beginning of the field is before @var{limit}, then @var{limit} will be returned instead."
msgstr "@var{limit}が非@code{nil}なら、それはバッファーの位置。そのフィールドの先頭が@var{limit}より前なら、かわりに@var{limit}がリターンされるだろう。"

#. type: defun
#: original_texis/text.texi:3943
#, no-wrap
msgid "field-end &optional pos escape-from-edge limit"
msgstr "field-end &optional pos escape-from-edge limit"

#. type: defun
#: original_texis/text.texi:3945
msgid "This function returns the end of the field specified by @var{pos}."
msgstr "この関数は@var{pos}で指定されるフィールドの終端をリターンする。"

#. type: defun
#: original_texis/text.texi:3950
msgid "If @var{pos} is at the end of its field, and @var{escape-from-edge} is non-@code{nil}, then the return value is always the end of the following field that @emph{begins} at @var{pos}, regardless of the stickiness of the @code{field} properties around @var{pos}."
msgstr "@var{pos}が自身のフィールド終端にあり、かつ@var{escape-from-edge}が非@code{nil}なら、@var{pos}周辺の@code{field}プロパティのstickinessに関わらず、リターン値は常に@var{pos}が@emph{先頭}であるような後のフィールドの終端になる。"

#. type: defun
#: original_texis/text.texi:3954
msgid "If @var{limit} is non-@code{nil}, it is a buffer position; if the end of the field is after @var{limit}, then @var{limit} will be returned instead."
msgstr "@var{limit}が非@code{nil}なら、それはバッファーの位置である。そのフィールドの終端が@var{limit}より後なら、かわりに@var{limit}がリターンされるだろう。"

#. type: defun
#: original_texis/text.texi:3956
#, no-wrap
msgid "field-string &optional pos"
msgstr "field-string &optional pos"

#. type: defun
#: original_texis/text.texi:3959
msgid "This function returns the contents of the field specified by @var{pos}, as a string."
msgstr "この関数は@var{pos}で指定されるフィールドのコンテンツを文字列としてリターンする。"

#. type: defun
#: original_texis/text.texi:3961
#, no-wrap
msgid "field-string-no-properties &optional pos"
msgstr "field-string-no-properties &optional pos"

#. type: defun
#: original_texis/text.texi:3964
msgid "This function returns the contents of the field specified by @var{pos}, as a string, discarding text properties."
msgstr "この関数は@var{pos}で指定されるフィールドのコンテンツを、テキストプロパティを無視して文字列としてリターンする。"

#. type: defun
#: original_texis/text.texi:3966
#, no-wrap
msgid "delete-field &optional pos"
msgstr "delete-field &optional pos"

#. type: defun
#: original_texis/text.texi:3968
msgid "This function deletes the text of the field specified by @var{pos}."
msgstr "この関数は@var{pos}で指定されるフィールドのテキストを削除する。"

#. type: defun
#: original_texis/text.texi:3970
#, no-wrap
msgid "constrain-to-field new-pos old-pos &optional escape-from-edge only-in-line inhibit-capture-property"
msgstr "constrain-to-field new-pos old-pos &optional escape-from-edge only-in-line inhibit-capture-property"

#. type: defun
#: original_texis/text.texi:3974
msgid "This function constrains @var{new-pos} to the field that @var{old-pos} belongs to---in other words, it returns the position closest to @var{new-pos} that is in the same field as @var{old-pos}."
msgstr "この関数は@var{new-pos}を@var{old-pos}が属するフィールドに``拘束(constrain)''する。言い換えると、これは @var{old-pos}と同じフィールド内で@var{new-pos}にもっとも近い位置をリターンする。"

#. type: defun
#: original_texis/text.texi:3978
msgid "If @var{new-pos} is @code{nil}, then @code{constrain-to-field} uses the value of point instead, and moves point to the resulting position in addition to returning that position."
msgstr "@var{new-pos}が@code{nil}なら、@code{constrain-to-field}はかわりにポイントの値を使用してポイントをリターンすることに加えて、その位置にポイントを移動する。"

#. type: defun
#: original_texis/text.texi:3990
msgid "If @var{old-pos} is at the boundary of two fields, then the acceptable final positions depend on the argument @var{escape-from-edge}.  If @var{escape-from-edge} is @code{nil}, then @var{new-pos} must be in the field whose @code{field} property equals what new characters inserted at @var{old-pos} would inherit.  (This depends on the stickiness of the @code{field} property for the characters before and after @var{old-pos}.)  If @var{escape-from-edge} is non-@code{nil}, @var{new-pos} can be anywhere in the two adjacent fields.  Additionally, if two fields are separated by another field with the special value @code{boundary}, then any point within this special field is also considered to be on the boundary."
msgstr "@var{old-pos}が2つのフィールドの境界なら、許容できる最後の位置は引数@var{escape-from-edge}に依存する。@var{escape-from-edge}が@code{nil}なら、@var{new-pos}は新たに文字が@var{old-pos}が挿入されたときに継承するであろう値と、@code{field}プロパティが等しいフィールドでなければならない。@var{escape-from-edge}が非@code{nil}なら@var{new-pos}は隣接する2つのフィールド内のどこでも構わない。さらに2つのフィールドが特別な値@code{boundary}により他のフィールドで分割されている場合には、このスペシャルフィールド内のすべてのポイントも境界上とみなされる。"

#. type: defun
#: original_texis/text.texi:3995
msgid "Commands like @kbd{C-a} with no argument, that normally move backward to a specific kind of location and stay there once there, probably should specify @code{nil} for @var{escape-from-edge}.  Other motion commands that check fields should probably pass @code{t}."
msgstr "引数なしの@kbd{C-a}コマンドのように、特別な種類の位置に後方へ移動して一度そこに留まるには、おそらく@var{escape-from-edge}にたいして@code{nil}を指定するべきであろう。フィールドをチェックする他の移動コマンドにたいしては、おそらく@code{t}を渡すべきである。"

#. type: defun
#: original_texis/text.texi:4002
msgid "If the optional argument @var{only-in-line} is non-@code{nil}, and constraining @var{new-pos} in the usual way would move it to a different line, @var{new-pos} is returned unconstrained.  This used in commands that move by line, such as @code{next-line} and @code{beginning-of-line}, so that they respect field boundaries only in the case where they can still move to the right line."
msgstr "オプション引数@var{only-in-line}が非@code{nil}、かつ@var{new-pos}を通常の方法により拘束することにより異なる行へ移動するような場合には、@var{new-pos}は非拘束でリターンされる。これは@code{next-line}や@code{beginning-of-line}のような行単位の移動コマンドで、それらのコマンドが正しい行へ移動できる場合のみフィールド境界を尊重するようにするために用いられる。"

#. type: defun
#: original_texis/text.texi:4006
msgid "If the optional argument @var{inhibit-capture-property} is non-@code{nil}, and @var{old-pos} has a non-@code{nil} property of that name, then any field boundaries are ignored."
msgstr "オプション引数@var{inhibit-capture-property}が非@code{nil}、かつ@var{old-pos}がその名前の非@code{nil}のプロパティをもつ場合には、すべてのフィールド境界は無視される。"

#. type: defun
#: original_texis/text.texi:4010
msgid "You can cause @code{constrain-to-field} to ignore all field boundaries (and so never constrain anything) by binding the variable @code{inhibit-field-text-motion} to a non-@code{nil} value."
msgstr "変数@code{inhibit-field-text-motion}を非@code{nil}値にバインドすることにより、@code{constrain-to-field}にすべてのフィールド境界を無視(何者にも拘束されることがない)させることができる。"

#. type: subsection
#: original_texis/text.texi:4013
#, no-wrap
msgid "Why Text Properties are not Intervals"
msgstr "Why Text Properties are not Intervals"

#. type: cindex
#: original_texis/text.texi:4014
#, no-wrap
msgid "intervals"
msgstr "intervals"

#. type: Plain text
#: original_texis/text.texi:4022
msgid "Some editors that support adding attributes to text in the buffer do so by letting the user specify intervals within the text, and adding the properties to the intervals.  Those editors permit the user or the programmer to determine where individual intervals start and end.  We deliberately provided a different sort of interface in Emacs Lisp to avoid certain paradoxical behavior associated with text modification."
msgstr "ユーザーにテキスト内のインターバル(訳注: 原文のインターバルはIT用語としては時間や距離などの間隔を示す用語として用いれることが多いと思いますが、ここでは『範囲』を示す言葉として用いられているようです。他の箇所で『範囲』と訳したrange等と異なる機能なので、ここではそのまま『インターバル』としました)を指定させて、そのインターバルにプロパティを追加するために、バッファー内のテキストへの属性の追加をサポートするエディターがいくつかあります。それらのエディターはユーザーやプログラマーが個別にインターバルの開始と終了を決定することを許可します。わたしたちはテキスト変更に関連する特定の逆説的振る舞いを避けるために、故意に異なる種類のインターフェイスをEmacs Lisp内に提供しました。"

#. type: Plain text
#: original_texis/text.texi:4027
msgid "If the actual subdivision into intervals is meaningful, that means you can distinguish between a buffer that is just one interval with a certain property, and a buffer containing the same text subdivided into two intervals, both of which have that property."
msgstr "複数のインターバルに細分化することが実際に意味をもつなら、それは特定のプロパティをもつ単一のインターバルのバッファーと、同じテキストをもち両方が同じプロパティをもつ2つのインターバルに分割されたバッファーを区別できることを意味します。"

#. type: Plain text
#: original_texis/text.texi:4034
msgid "Suppose you take the buffer with just one interval and kill part of the text.  The text remaining in the buffer is one interval, and the copy in the kill ring (and the undo list) becomes a separate interval.  Then if you yank back the killed text, you get two intervals with the same properties.  Thus, editing does not preserve the distinction between one interval and two."
msgstr "インターバルを1つだけもつバッファーがあり、その一部をkillすることを考えてみてください。そのそのバッファーに残されるのは1つのインターバルであり、killリング(とundoリスト)内のコピーは別個のインターバルになります。そのkillされたテキストをyankで戻すと、同じプロパティをもつ2つのインターバルを得ることになります。したがって編集では1つのインターバルと2つのインターバルの違いは保たれません。"

#. type: Plain text
#: original_texis/text.texi:4043
msgid "Suppose we attempt to fix this problem by coalescing the two intervals when the text is inserted.  That works fine if the buffer originally was a single interval.  But suppose instead that we have two adjacent intervals with the same properties, and we kill the text of one interval and yank it back.  The same interval-coalescence feature that rescues the other case causes trouble in this one: after yanking, we have just one interval.  Once again, editing does not preserve the distinction between one interval and two."
msgstr "テキスト挿入時に2つのインターバルを結合することにより、この問題に``対応''したとします。これはそのバッファーが元々単一のインターバルだったなら上手く機能します。 しかしかわりに同じプロパティをもつ隣接する2つのインターバルがあり、そのうちの1つのインターバルからテキストをkillしてyankで戻すことを考えてみてください。あるケースを解決する同じインターバル結合機能が、他のケースにおいては問題を引き起こすのです。このyank後にインターバルはただ1つとなります。繰り返します、編集では1つのインターバルと2つのインターバルの違いは保たれないのです。"

#. type: Plain text
#: original_texis/text.texi:4046
msgid "Insertion of text at the border between intervals also raises questions that have no satisfactory answer."
msgstr "インターバルの間の境界上へのテキスト挿入においても満足できる回答が存在しないような問題が発生します。"

#. type: Plain text
#: original_texis/text.texi:4052
msgid "However, it is easy to arrange for editing to behave consistently for questions of the form, ``What are the properties of text at this buffer or string position?'' So we have decided these are the only questions that make sense; we have not implemented asking questions about where intervals start or end."
msgstr "しかし``バッファーにあるテキスト位置または文字列位置のプロパティは何か?''という形式の問にたいして、編集が一貫した振る舞いをするようアレンジするのは簡単です。そこでわたしたちはこれらが合理的な唯一の問いであると判断したのです。わたしたちはインターバルの開始と終了の場所を問うような実装をしませんでした。"

#. type: Plain text
#: original_texis/text.texi:4057
msgid "In practice, you can usually use the text property search functions in place of explicit interval boundaries.  You can think of them as finding the boundaries of intervals, assuming that intervals are always coalesced whenever possible.  @xref{Property Search}."
msgstr "実際には明白にインターバル境界であるような箇所では、通常はテキストプロパティ検索関数を使用できます。可能であるならインターバルは常に結合されるとみなすことにより、それらがインターバル境界を探すと考えることができます。@ref{Property Search}を参照してください。"

#. type: Plain text
#: original_texis/text.texi:4060
msgid "Emacs also provides explicit intervals as a presentation feature; see @ref{Overlays}."
msgstr "Emacsはプレゼンテーション機能として明示的なインターバルも提供します。@ref{Overlays}を参照してください。"

#. type: section
#: original_texis/text.texi:4062
#, no-wrap
msgid "Substituting for a Character Code"
msgstr "Substituting for a Character Code"

#. type: cindex
#: original_texis/text.texi:4063
#, no-wrap
msgid "replace characters in region"
msgstr "replace characters in region"

#. type: cindex
#: original_texis/text.texi:4064
#, no-wrap
msgid "substitute characters"
msgstr "substitute characters"

#. type: Plain text
#: original_texis/text.texi:4068
msgid "The following functions replace characters within a specified region based on their character codes."
msgstr "以下の関数は文字コードにもとづいて指定されたリージョン内の文字を置き換えます。"

#. type: defun
#: original_texis/text.texi:4069
#, no-wrap
msgid "subst-char-in-region start end old-char new-char &optional noundo"
msgstr "subst-char-in-region start end old-char new-char &optional noundo"

#. type: cindex
#: original_texis/text.texi:4070
#, no-wrap
msgid "replace characters"
msgstr "replace characters"

#. type: defun
#: original_texis/text.texi:4074
msgid "This function replaces all occurrences of the character @var{old-char} with the character @var{new-char} in the region of the current buffer defined by @var{start} and @var{end}."
msgstr "この関数は@var{start}と@var{end}で定義されるカレントバッファーのリージョン内に出現する文字@var{old-char}を@var{new-char}に置き換える。"

#. type: cindex
#: original_texis/text.texi:4075
#, no-wrap
msgid "undo avoidance"
msgstr "undo avoidance"

#. type: defun
#: original_texis/text.texi:4080
msgid "If @var{noundo} is non-@code{nil}, then @code{subst-char-in-region} does not record the change for undo and does not mark the buffer as modified.  This was useful for controlling the old selective display feature (@pxref{Selective Display})."
msgstr "@var{noundo}が非@code{nil}なら@code{subst-char-in-region}はundo用に変更を記録せず、バッファーを変更済みとマークしない。これは古い機能である選択的ディスプレイ(@ref{Selective Display}を参照)にとって有用だった。"

#. type: defun
#: original_texis/text.texi:4083
msgid "@code{subst-char-in-region} does not move point and returns @code{nil}."
msgstr "@code{subst-char-in-region}はポイントを移動せず@code{nil}をリターンする。"

#. type: group
#: original_texis/text.texi:4089
#, no-wrap
msgid ""
"---------- Buffer: foo ----------\n"
"This is the contents of the buffer before.\n"
"---------- Buffer: foo ----------\n"
msgstr ""
"---------- Buffer: foo ----------\n"
"This is the contents of the buffer before.\n"
"---------- Buffer: foo ----------\n"

#. type: group
#: original_texis/text.texi:4094
#, no-wrap
msgid ""
"(subst-char-in-region 1 20 ?i ?X)\n"
"     @result{} nil\n"
"\n"
msgstr ""
"(subst-char-in-region 1 20 ?i ?X)\n"
"     @result{} nil\n"
"\n"

#. type: group
#: original_texis/text.texi:4098
#, no-wrap
msgid ""
"---------- Buffer: foo ----------\n"
"ThXs Xs the contents of the buffer before.\n"
"---------- Buffer: foo ----------\n"
msgstr ""
"---------- Buffer: foo ----------\n"
"ThXs Xs the contents of the buffer before.\n"
"---------- Buffer: foo ----------\n"

#. type: deffn
#: original_texis/text.texi:4102
#, no-wrap
msgid "Command translate-region start end table"
msgstr "Command translate-region start end table"

#. type: deffn
#: original_texis/text.texi:4105
msgid "This function applies a translation table to the characters in the buffer between positions @var{start} and @var{end}."
msgstr "この関数はバッファー内の位置@var{start}と@var{end}の間の文字にたいして、変換テーブル(translation table)を適用する。"

#. type: deffn
#: original_texis/text.texi:4111
msgid "The translation table @var{table} is a string or a char-table; @code{(aref @var{table} @var{ochar})} gives the translated character corresponding to @var{ochar}.  If @var{table} is a string, any characters with codes larger than the length of @var{table} are not altered by the translation."
msgstr "変換テーブル@var{table}は文字列か文字テーブル。@code{(aref @var{table} @var{ochar})}は@var{ochar}に対応した変換後の文字を与える。@var{table}が文字列なら、@var{table}の長さより大きいコードの文字はこの変更により変更されない。"

#. type: deffn
#: original_texis/text.texi:4116
msgid "The return value of @code{translate-region} is the number of characters that were actually changed by the translation.  This does not count characters that were mapped into themselves in the translation table."
msgstr "@code{translate-region}のリターン値は、その変換により実際に変更された文字数。変換テーブル内でその文字自身にマップされる文字は勘定に入らない。"

#. type: cindex
#: original_texis/text.texi:4120
#, no-wrap
msgid "registers"
msgstr "registers"

#. type: Plain text
#: original_texis/text.texi:4128
msgid "A register is a sort of variable used in Emacs editing that can hold a variety of different kinds of values.  Each register is named by a single character.  All @acronym{ASCII} characters and their meta variants (but with the exception of @kbd{C-g}) can be used to name registers.  Thus, there are 255 possible registers.  A register is designated in Emacs Lisp by the character that is its name."
msgstr "レジスター(register)とは、Emacs内の編集においてさまざまな異なる種類の値を保持できる一種の変数です。レジスターはそれぞれ1文字で命名されます。すべての@acronym{ASCII}文字、およびそれらのメタ修飾された変種(ただし@kbd{C-g}は例外)をレジスターの命名に使用できます。したがって利用可能なレジスター数は255になります。Emacs Lispではレジスターは自身の名前となるその文字により指定されます。"

#. type: defvar
#: original_texis/text.texi:4129
#, no-wrap
msgid "register-alist"
msgstr "register-alist"

#. type: defvar
#: original_texis/text.texi:4133
msgid "This variable is an alist of elements of the form @code{(@var{name} .  @var{contents})}.  Normally, there is one element for each Emacs register that has been used."
msgstr "この変数は要素が@code{(@var{name} .@var{contents})}という形式のalist。使用中のEmacsレジスターごとに通常は1つの要素が存在する。"

#. type: defvar
#: original_texis/text.texi:4136
msgid "The object @var{name} is a character (an integer) identifying the register."
msgstr "オブジェクト@var{name}はレジスターを識別する文字(整数)。"

#. type: Plain text
#: original_texis/text.texi:4139
msgid "The @var{contents} of a register can have several possible types:"
msgstr "レジスターの@var{contents}には、いくつかのタイプがある:"

#. type: item
#: original_texis/text.texi:4141
#, no-wrap
msgid "a number"
msgstr "数字"

#. type: table
#: original_texis/text.texi:4144
msgid "A number stands for itself.  If @code{insert-register} finds a number in the register, it converts the number to decimal."
msgstr "数字はそれ自身を意味する。@code{insert-register}はレジスター内の数字を探して10進数に変換する。"

#. type: item
#: original_texis/text.texi:4145
#, no-wrap
msgid "a marker"
msgstr "マーカー"

#. type: table
#: original_texis/text.texi:4147
msgid "A marker represents a buffer position to jump to."
msgstr "マーカーはジャンプ先のバッファー位置を表す。"

#. type: item
#: original_texis/text.texi:4148
#, no-wrap
msgid "a string"
msgstr "文字列"

#. type: table
#: original_texis/text.texi:4150
msgid "A string is text saved in the register."
msgstr "文字列の場合はレジスター内に保存されたテキスト。"

#. type: item
#: original_texis/text.texi:4151
#, no-wrap
msgid "a rectangle"
msgstr "矩形(rectangle)"

#. type: table
#: original_texis/text.texi:4153
msgid "A rectangle is represented by a list of strings."
msgstr "矩形は文字列のリストを表す。"

#. type: code{#1}
#: original_texis/text.texi:4154
#, no-wrap
msgid "(@var{window-configuration} @var{position})"
msgstr "(@var{window-configuration} @var{position})"

#. type: table
#: original_texis/text.texi:4157
msgid "This represents a window configuration to restore in one frame, and a position to jump to in the current buffer."
msgstr "これは1つのフレームにリストアされるウィンドウ構成、およびカレントバッファー内のジャンプ先の位置を表す。"

#. type: code{#1}
#: original_texis/text.texi:4159
#, no-wrap
msgid "(@var{frame-configuration} @var{position})"
msgstr "(@var{frame-configuration} @var{position})"

#. type: table
#: original_texis/text.texi:4162
msgid "This represents a frame configuration to restore, and a position to jump to in the current buffer."
msgstr "これはリストア用のフレーム構成とカレントバッファー内のジャンプ先の位置。"

#. type: item
#: original_texis/text.texi:4163
#, no-wrap
msgid "(file @var{filename})"
msgstr "(file @var{filename})"

#. type: table
#: original_texis/text.texi:4166
msgid "This represents a file to visit; jumping to this value visits file @var{filename}."
msgstr "これはvisitするファイルを表し、この値にジャンプすることによりファイル@var{filename}をvisitする。"

#. type: item
#: original_texis/text.texi:4167
#, no-wrap
msgid "(file-query @var{filename} @var{position})"
msgstr "(file-query @var{filename} @var{position})"

#. type: table
#: original_texis/text.texi:4172
msgid "This represents a file to visit and a position in it; jumping to this value visits file @var{filename} and goes to buffer position @var{position}.  Restoring this type of position asks the user for confirmation first."
msgstr "これはvisitするファイルとファイル内の位置を表す。この値にジャンプすることによりファイル@var{filename}をvisitしてバッファー位置@var{position}に移動する。このタイプの位置をリストアすると、まずユーザーにたいして確認を求める。"

#. type: Plain text
#: original_texis/text.texi:4176
msgid "The functions in this section return unpredictable values unless otherwise stated."
msgstr "このセクションの関数は特に明記しない限り予期せぬ値をリターンします。"

#. type: defun
#: original_texis/text.texi:4177
#, no-wrap
msgid "get-register reg"
msgstr "get-register reg"

#. type: defun
#: original_texis/text.texi:4180
msgid "This function returns the contents of the register @var{reg}, or @code{nil} if it has no contents."
msgstr "この関数はレジスター@var{reg}のコンテンツ、コンテンツがなければ@code{nil}をリターンする。"

#. type: defun
#: original_texis/text.texi:4182
#, no-wrap
msgid "set-register reg value"
msgstr "set-register reg value"

#. type: defun
#: original_texis/text.texi:4186
msgid "This function sets the contents of register @var{reg} to @var{value}.  A register can be set to any value, but the other register functions expect only certain data types.  The return value is @var{value}."
msgstr "この関数はレジスター@var{reg}のコンテンツに@var{value}をセットする。レジスターには任意の値をセットできるが、その他のレジスター関数は特定のデータ型を期待する。リターン値は@var{value}。"

#. type: deffn
#: original_texis/text.texi:4188
#, no-wrap
msgid "Command view-register reg"
msgstr "Command view-register reg"

#. type: deffn
#: original_texis/text.texi:4190
msgid "This command displays what is contained in register @var{reg}."
msgstr "このコマンドはレジスター@var{reg}に何が含まれているかを表示する。"

#. type: deffn
#: original_texis/text.texi:4192
#, no-wrap
msgid "Command insert-register reg &optional beforep"
msgstr "Command insert-register reg &optional beforep"

#. type: deffn
#: original_texis/text.texi:4195
msgid "This command inserts contents of register @var{reg} into the current buffer."
msgstr "このコマンドはカレントバッファーにレジスター@var{reg}のコンテンツを挿入する。"

#. type: deffn
#: original_texis/text.texi:4199
msgid "Normally, this command puts point before the inserted text, and the mark after it.  However, if the optional second argument @var{beforep} is non-@code{nil}, it puts the mark before and point after."
msgstr "このコマンドは通常は挿入したテキストの前にポイント、後にマークを配置する。しかしオプションの第2引数@var{beforep}が非@code{nil}ならマークを前、ポイントを後に配置する。インタラクティブな呼び出しでは、プレフィクス引数を与えることにより2つ目の引数@var{beforep}に@code{nil}を渡すことができる。"

#. type: deffn
#: original_texis/text.texi:4202
msgid "When called interactively, the command defaults to putting point after text, and a prefix argument inverts this behavior."
msgstr "このコマンドはインタラクティブに呼び出された際には、デフォルトではテキストの後にポイントを配置して、プレフィクス引数を与えるとこの反対の振る舞いを行う。"

#. type: deffn
#: original_texis/text.texi:4206
msgid "If the register contains a rectangle, then the rectangle is inserted with its upper left corner at point.  This means that text is inserted in the current line and underneath it on successive lines."
msgstr "レジスターに矩形が含まれる場合には、その矩形はポイントの左上隅に挿入される。これはそのテキストがカレント行と、その下に続く行に挿入されることを意味する。"

#. type: deffn
#: original_texis/text.texi:4210
msgid "If the register contains something other than saved text (a string) or a rectangle (a list), currently useless things happen.  This may be changed in the future."
msgstr "レジスターが保存されたテキスト(文字列)または矩形(リスク)以外の何かを含む場合には、現在のところは役に立つようなことは起きない。これは将来変更されるかもしれない。"

#. type: defun
#: original_texis/text.texi:4212
#, no-wrap
msgid "register-read-with-preview prompt"
msgstr "register-read-with-preview prompt"

#. type: cindex
#: original_texis/text.texi:4213
#, no-wrap
msgid "register preview"
msgstr "register preview"

#. type: defun
#: original_texis/text.texi:4222
msgid "This function reads and returns a register name, prompting with @var{prompt} and possibly showing a preview of the existing registers and their contents.  The preview is shown in a temporary window, after the delay specified by the user option @code{register-preview-delay}, if its value and @code{register-alist} are both non-@code{nil}.  The preview is also shown if the user requests help (e.g., by typing the help character).  We recommend that all interactive commands which read register names use this function."
msgstr "この関数は@var{prompt}、およびもしかしたら既存レジスターとそのコンテンツをプレビューしてレジスターの名前を読み取ってレジスター名をリターンする。このプレビューはユーザーオプション@code{register-preview-delay}と@code{register-alist}がいずれも非@code{nil}なら、@code{register-preview-delay}で指定された遅延の後に一時ウィンドウ内に表示される。このプレビューはユーザーが(たとえばヘルプ文字のタイプにより)ヘルプを要求した場合にも表示される。レジスター名を読み取るンタラクティブな関数には、この関数の使用を推奨する。"

#. type: section
#: original_texis/text.texi:4225
#, no-wrap
msgid "Transposition of Text"
msgstr "Transposition of Text"

#. type: Plain text
#: original_texis/text.texi:4228
msgid "This function can be used to transpose stretches of text:"
msgstr "以下の関数はテキストの一部を置き換えるために使用できます:"

#. type: defun
#: original_texis/text.texi:4229
#, no-wrap
msgid "transpose-regions start1 end1 start2 end2 &optional leave-markers"
msgstr "transpose-regions start1 end1 start2 end2 &optional leave-markers"

#. type: defun
#: original_texis/text.texi:4234
msgid "This function exchanges two nonoverlapping portions of the buffer.  Arguments @var{start1} and @var{end1} specify the bounds of one portion and arguments @var{start2} and @var{end2} specify the bounds of the other portion."
msgstr "この関数はバッファーの重複しない2つの部分を交換する。引数@var{start1}と@var{end1}は一方の部分の両端、引数@var{start2}と@var{end2}はもう一方の部分の両端を指定する。"

#. type: defun
#: original_texis/text.texi:4241
msgid "Normally, @code{transpose-regions} relocates markers with the transposed text; a marker previously positioned within one of the two transposed portions moves along with that portion, thus remaining between the same two characters in their new position.  However, if @var{leave-markers} is non-@code{nil}, @code{transpose-regions} does not do this---it leaves all markers unrelocated."
msgstr "@code{transpose-regions}は通常は置き換えたテキストにともないマーカーを再配置する。以前は2つの置き換えたテキストのうちの一方の部分に位置していたマーカーは、その部分とともに移動されるので、それを挟む2つの文字の新たな位置の間に留まることになる。しかし@var{leave-markers}が非@code{nil}なら、@code{transpose-regions}はこれを行わず、すべてのマーカーを再配置せずに残す。"

#. type: section
#: original_texis/text.texi:4244
#, no-wrap
msgid "Dealing With Compressed Data"
msgstr "Dealing With Compressed Data"

#. type: Plain text
#: original_texis/text.texi:4250
msgid "When @code{auto-compression-mode} is enabled, Emacs automatically uncompresses compressed files when you visit them, and automatically recompresses them if you alter and save them.  @xref{Compressed Files,,, emacs, The GNU Emacs Manual}."
msgstr "@code{auto-compression-mode}が有効なときは、Emacsは圧縮されたファイルをvisitする際に自動的に解凍して、それを変更して保存する際は自動的に再圧縮します。@ref{Compressed Files,,, emacs, The GNU Emacs Manual}を参照してください。"

#. type: Plain text
#: original_texis/text.texi:4255
msgid "The above feature works by calling an external executable (e.g., @command{gzip}).  Emacs can also be compiled with support for built-in decompression using the zlib library, which is faster than calling an external program."
msgstr "上記の機能は外部の実行可能ファイル(例: @command{gzip})を呼び出すことにより機能します。zlibライブラリーを使用したビルトインの解凍サポートつきでEmacsをコンパイルすることもでき、これは外部プログラムの実行に比べて高速です。"

#. type: defun
#: original_texis/text.texi:4256
#, no-wrap
msgid "zlib-available-p"
msgstr "zlib-available-p"

#. type: defun
#: original_texis/text.texi:4259
msgid "This function returns non-@code{nil} if built-in zlib decompression is available."
msgstr "この関数はビルトインzlib解凍が利用可能なら非@code{nil}をリターンする。"

#. type: defun
#: original_texis/text.texi:4261
#, no-wrap
msgid "zlib-decompress-region start end"
msgstr "zlib-decompress-region start end"

#. type: defun
#: original_texis/text.texi:4269
msgid "This function decompresses the region between @var{start} and @var{end}, using built-in zlib decompression.  The region should contain data that were compressed with gzip or zlib.  On success, the function replaces the contents of the region with the decompressed data.  On failure, the function leaves the region unchanged and returns @code{nil}.  This function can be called only in unibyte buffers."
msgstr "この関数はビルトインのzlib解凍を使用して@var{start}と@var{end}の間のリージョンを解凍する。このリージョンにはgzipかzlibで圧縮されたデータが含まれていなければならない。成功したら、この関数はリージョンのコンテンツを解凍されたデータに置き換える。失敗すると関数はリージョンを未変更のまま@code{nil}をリターンする。この関数はユニバイトバッファーでのみ呼び出すことができる。"

#. type: section
#: original_texis/text.texi:4273
#, no-wrap
msgid "Base 64 Encoding"
msgstr "Base 64 Encoding"

#. type: cindex
#: original_texis/text.texi:4274
#, no-wrap
msgid "base 64 encoding"
msgstr "base 64 encoding"

#. type: Plain text
#: original_texis/text.texi:4286
msgid "Base 64 code is used in email to encode a sequence of 8-bit bytes as a longer sequence of @acronym{ASCII} graphic characters.  It is defined in Internet RFC@footnote{ An RFC, an acronym for @dfn{Request for Comments}, is a numbered Internet informational document describing a standard.  RFCs are usually written by technical experts acting on their own initiative, and are traditionally written in a pragmatic, experience-driven manner.  }2045.  This section describes the functions for converting to and from this code."
msgstr "Base64コードは8ビットシーケンスをより長い@acronym{ASCII}グラフィック文字シーケンスにエンコードするためにemail内で使用されます。これはインターネットRFC2045で定義されます@footnote{RFC(@dfn{Request for Comments}の略)とは標準を記述するナンバーが付与されたインターネット情報提供ドキュメントです。RFCは通常は自身が先駆的に活動する技術エキスパートによって記述され、伝統として現実的で経験主導で記述されます。}。このセクションでは、このコードへの変換および逆変換を行う関数について説明します。"

#. type: deffn
#: original_texis/text.texi:4287
#, no-wrap
msgid "Command base64-encode-region beg end &optional no-line-break"
msgstr "Command base64-encode-region beg end &optional no-line-break"

#. type: deffn
#: original_texis/text.texi:4294
msgid "This function converts the region from @var{beg} to @var{end} into base 64 code.  It returns the length of the encoded text.  An error is signaled if a character in the region is multibyte, i.e., in a multibyte buffer the region must contain only characters from the charsets @code{ascii}, @code{eight-bit-control} and @code{eight-bit-graphic}."
msgstr "この関数は@var{beg}から@var{end}のリージョンをBase64コードに変換する。これはエンコードされたテキストの長さをリターンする。リージョン内の文字がマルチバイトならエラーをシグナルする(マルチバイトバッファーではリージョンには@code{ascii}、@code{eight-bit-control}、@code{eight-bit-graphic}の文字以外は含まれてはならない)。"

#. type: deffn
#: original_texis/text.texi:4299
msgid "Normally, this function inserts newline characters into the encoded text, to avoid overlong lines.  However, if the optional argument @var{no-line-break} is non-@code{nil}, these newlines are not added, so the output is just one long line."
msgstr "この関数は通常は行が長くなりすぎるのを防ぐために、エンコードされたテキストに改行を挿入する。しかしオプション引数@var{no-line-break}が非@code{nil}なら、これらの改行は追加されず出力は長い単一の行となる。"

#. type: defun
#: original_texis/text.texi:4301
#, no-wrap
msgid "base64-encode-string string &optional no-line-break"
msgstr "base64-encode-string string &optional no-line-break"

#. type: defun
#: original_texis/text.texi:4306
msgid "This function converts the string @var{string} into base 64 code.  It returns a string containing the encoded text.  As for @code{base64-encode-region}, an error is signaled if a character in the string is multibyte."
msgstr "この関数は文字列@var{string}をBase64コードに変換する。これはエンコードされたテキストを含む文字列をリターンする。@code{base64-encode-region}と同じように文字列内の文字がマルチバイトならエラーをシグナルする。"

#. type: defun
#: original_texis/text.texi:4311
msgid "Normally, this function inserts newline characters into the encoded text, to avoid overlong lines.  However, if the optional argument @var{no-line-break} is non-@code{nil}, these newlines are not added, so the result string is just one long line."
msgstr "この関数は通常は行が長くなりすぎるのを防ぐためにエンコードされたテキストに改行を挿入する。しかしオプション引数@var{no-line-break}が非@code{nil}なら、これらの改行は追加されず結果となる文字列は長い単一の行となる。"

#. type: deffn
#: original_texis/text.texi:4313
#, no-wrap
msgid "Command base64-decode-region beg end"
msgstr "Command base64-decode-region beg end"

#. type: deffn
#: original_texis/text.texi:4317
msgid "This function converts the region from @var{beg} to @var{end} from base 64 code into the corresponding decoded text.  It returns the length of the decoded text."
msgstr "この関数は@var{beg}から@var{end}のリージョンのBase64コードを対応するデコードされたテキストに変換する。これはデコードされたテキストの長さをリターンする。"

#. type: defun
#: original_texis/text.texi:4319 original_texis/text.texi:4327
msgid "The decoding functions ignore newline characters in the encoded text."
msgstr "デコード関数はエンコード済みテキスト内の改行文字を無視する。"

#. type: defun
#: original_texis/text.texi:4321
#, no-wrap
msgid "base64-decode-string string"
msgstr "base64-decode-string string"

#. type: defun
#: original_texis/text.texi:4325
msgid "This function converts the string @var{string} from base 64 code into the corresponding decoded text.  It returns a unibyte string containing the decoded text."
msgstr "この関数は文字列@var{string}を、Base64コードから対応するデコード済みテキストに変換する。これはデコード済みテキストを含むユニバイトをリターンする。"

#. type: cindex
#: original_texis/text.texi:4331
#, no-wrap
msgid "MD5 checksum"
msgstr "MD5 checksum"

#. type: cindex
#: original_texis/text.texi:4332
#, no-wrap
msgid "SHA hash"
msgstr "SHA hash"

#. type: cindex
#: original_texis/text.texi:4333
#, no-wrap
msgid "hash, cryptographic"
msgstr "hash, cryptographic"

#. type: cindex
#: original_texis/text.texi:4334
#, no-wrap
msgid "cryptographic hash"
msgstr "cryptographic hash"

#. type: Plain text
#: original_texis/text.texi:4340
msgid "Emacs has built-in support for computing @dfn{cryptographic hashes}.  A cryptographic hash, or @dfn{checksum}, is a digital fingerprint of a piece of data (e.g., a block of text) which can be used to check that you have an unaltered copy of that data."
msgstr "Emacsには@dfn{暗号化ハッシュ(cryptographic hashes)}計算用のビルトインのサポートがあります。暗号化ハッシュ、または@dfn{チェックサム(checksum)}とはデータ断片にたいするデジタルな指紋(fingerprint)であり、そのデータが変更されていないかチェックするために使用できます。"

#. type: cindex
#: original_texis/text.texi:4341
#, no-wrap
msgid "message digest"
msgstr "message digest"

#. type: Plain text
#: original_texis/text.texi:4352
msgid "Emacs supports several common cryptographic hash algorithms: MD5, SHA-1, SHA-2, SHA-224, SHA-256, SHA-384 and SHA-512.  MD5 is the oldest of these algorithms, and is commonly used in @dfn{message digests} to check the integrity of messages transmitted over a network.  MD5 is not collision resistant (i.e., it is possible to deliberately design different pieces of data which have the same MD5 hash), so you should not used it for anything security-related.  A similar theoretical weakness also exists in SHA-1.  Therefore, for security-related applications you should use the other hash types, such as SHA-2."
msgstr "EmacsはMD5、SHA-1、SHA-2、SHA-224、SHA-256、SHA-384、SHA-512のような一般的な暗号化ハッシュアルゴリズムをサポートします。これらのアルゴリズムのうちMD5はもっとも古く、ネットワーク越しに転送されたメッセージの整合性をチェックするために一般的には@dfn{メッセージダイジェスト(message digests)}内で使用されています。MD5は`衝突耐性(collision resistant)をもたない(同じMD5ハッシュをもつ異なるデータ片を故意にデザインすることが可能)ので、セキュリティに関連することに使用するべきではありません。同様な理論上の欠点はSHA-1にも存在します。したがってセキュリティに関連するアプリケーションにたいしては、SHA-2のような他のハッシュタイプを使用するべきです。"

#. type: defun
#: original_texis/text.texi:4353
#, no-wrap
msgid "secure-hash algorithm object &optional start end binary"
msgstr "secure-hash algorithm object &optional start end binary"

#. type: defun
#: original_texis/text.texi:4359
msgid "This function returns a hash for @var{object}.  The argument @var{algorithm} is a symbol stating which hash to compute: one of @code{md5}, @code{sha1}, @code{sha224}, @code{sha256}, @code{sha384} or @code{sha512}.  The argument @var{object} should be a buffer or a string."
msgstr "この関数は@var{object}にたいするハッシュをリターンする。引数@var{algorithm}はどのハッシュを計算するかを示すシンボルで@code{md5}、@code{sha1}、@code{sha224}、@code{sha256}、@code{sha384}、@code{sha512}のいずれか。引数@var{object}はバッファーまたは文字列であること。"

#. type: defun
#: original_texis/text.texi:4364
msgid "The optional arguments @var{start} and @var{end} are character positions specifying the portion of @var{object} to compute the message digest for.  If they are @code{nil} or omitted, the hash is computed for the whole of @var{object}."
msgstr "オプション引数@var{start}と@var{end}は、メッセージダイジェストを計算する@var{object}部分を指定する文字位置。これらが@code{nil}か省略なら、@var{object}全体にたいしてハッシュを計算する。"

#. type: defun
#: original_texis/text.texi:4369
msgid "If the argument @var{binary} is omitted or @code{nil}, the function returns the @dfn{text form} of the hash, as an ordinary Lisp string.  If @var{binary} is non-@code{nil}, it returns the hash in @dfn{binary form}, as a sequence of bytes stored in a unibyte string."
msgstr "引数@var{binary}が省略か@code{nil}なら、通常のLisp文字列としてハッシュの@dfn{テキスト形式(text form)}をリターンする。@var{binary}が非@code{nil}なら、ユニバイト文字列に格納されたバイトシーケンスとしてハッシュの@dfn{バイナリー形式(binary form)}をリターンする。"

#. type: defun
#: original_texis/text.texi:4378
msgid "This function does not compute the hash directly from the internal representation of @var{object}'s text (@pxref{Text Representations}).  Instead, it encodes the text using a coding system (@pxref{Coding Systems}), and computes the hash from that encoded text.  If @var{object} is a buffer, the coding system used is the one which would be chosen by default for writing the text into a file.  If @var{object} is a string, the user's preferred coding system is used (@pxref{Recognize Coding,,, emacs, GNU Emacs Manual})."
msgstr "この関数は@var{object}のテキストの内部表現(@ref{Text Representations}を参照)からハッシュを直接計算しない。かわりにコーディングシステム(@ref{Coding Systems}を参照)を使用してテキストをエンコードして、そのエンコード済みテキストからハッシュを計算する。@var{object}がバッファーなら使用されているコーディングが、そのテキストをファイルに書き込むためのデフォルトとして選択される。@var{object}が文字列ならユーザーの好むコーディングシステムが使用される(@ref{Recognize Coding,,, emacs, GNU Emacs Manual}を参照)。"

#. type: defun
#: original_texis/text.texi:4380
#, no-wrap
msgid "md5 object &optional start end coding-system noerror"
msgstr "md5 object &optional start end coding-system noerror"

#. type: defun
#: original_texis/text.texi:4386
msgid "This function returns an MD5 hash.  It is semi-obsolete, since for most purposes it is equivalent to calling @code{secure-hash} with @code{md5} as the @var{algorithm} argument.  The @var{object}, @var{start} and @var{end} arguments have the same meanings as in @code{secure-hash}."
msgstr "この関数はMD5ハッシュをリターンする。これはほとんどの目的において、@var{algorithm}引数に@code{md5}を指定して@code{secure-hash}を呼び出すのと等価であり半ば時代遅れである。引数の@var{object}、@var{start}、@var{end}は@code{secure-hash}のときと同じ意味をもつ。"

#. type: defun
#: original_texis/text.texi:4390
msgid "If @var{coding-system} is non-@code{nil}, it specifies a coding system to use to encode the text; if omitted or @code{nil}, the default coding system is used, like in @code{secure-hash}."
msgstr "@var{coding-system}が非@code{nil}なら、それはテキストをエンコードするために使用するコーディングシステムを指定する。省略または@code{nil}なら、@code{secure-hash}と同様にデフォルトコーディングシステムが使用される。"

#. type: defun
#: original_texis/text.texi:4395
msgid "Normally, @code{md5} signals an error if the text can't be encoded using the specified or chosen coding system.  However, if @var{noerror} is non-@code{nil}, it silently uses @code{raw-text} coding instead."
msgstr "@code{md5}は通常は指定や選択されたコーディングシステムを使用してテキストをエンコードできなければエラーをシグナルする。しかし@var{noerror}が非@code{nil}なら、かわりに黙って@code{raw-text}コーディングシステムを使用する。"

#. type: section
#: original_texis/text.texi:4398
#, no-wrap
msgid "Parsing HTML and XML"
msgstr "Parsing HTML and XML"

#. type: cindex
#: original_texis/text.texi:4399
#, no-wrap
msgid "parsing html"
msgstr "parsing html"

#. type: Plain text
#: original_texis/text.texi:4403
msgid "When Emacs is compiled with libxml2 support, the following functions are available to parse HTML or XML text into Lisp object trees."
msgstr "Emacsがlibxml2サポートつきでコンパイルされたときは、HTMLやXMLのテキストをLispオブジェクトツリーにパースするために以下の関数が利用可能です。"

#. type: defun
#: original_texis/text.texi:4404
#, no-wrap
msgid "libxml-parse-html-region start end &optional base-url discard-comments"
msgstr "libxml-parse-html-region start end &optional base-url discard-comments"

#. type: defun
#: original_texis/text.texi:4409
msgid "This function parses the text between @var{start} and @var{end} as HTML, and returns a list representing the HTML @dfn{parse tree}.  It attempts to handle real-world HTML by robustly coping with syntax mistakes."
msgstr "この関数は@var{start}と@var{end}の間のテキストをHTMLとしてパースして、HTML@dfn{パースツリー(parse tree)}を表すリストをリターンする。これは構文誤りにたいして強力に対処することにより、現実世界のHTMLの処理を試みる。"

#. type: defun
#: original_texis/text.texi:4412
msgid "The optional argument @var{base-url}, if non-@code{nil}, should be a string specifying the base URL for relative URLs occurring in links."
msgstr "オプション引数@var{base-url}が非@code{nil}なら、それはリンク内に出現する相対URLにたいするベースURLを指定する文字列であること。"

#. type: defun
#: original_texis/text.texi:4415
msgid "If the optional argument @var{discard-comments} is non-@code{nil}, then the parse tree is created without any comments."
msgstr "オプション引数@var{discard-comments}が非@code{nil}なら、パースツリーはコメントなしで作成される。"

#. type: defun
#: original_texis/text.texi:4420
msgid "In the parse tree, each HTML node is represented by a list in which the first element is a symbol representing the node name, the second element is an alist of node attributes, and the remaining elements are the subnodes."
msgstr "パースツリー内では各HTMLノードは1つ目の要素がノード名を表すシンボル、2つ目の要素がノード属性のalist、残りの要素はサブノードであるようなリストにより表される。"

#. type: defun
#: original_texis/text.texi:4423
msgid "The following example demonstrates this.  Given this (malformed) HTML document:"
msgstr "以下の例でこれを示す。以下の(不正な)HTMLドキュメントを与えると:"

#. type: example
#: original_texis/text.texi:4426
#, no-wrap
msgid "<html><head></head><body width=101><div class=thing>Foo<div>Yes\n"
msgstr "<html><head></head><body width=101><div class=thing>Foo<div>Yes\n"

#. type: defun
#: original_texis/text.texi:4431
msgid "A call to @code{libxml-parse-html-region} returns this @acronym{DOM} (document object model):"
msgstr "@code{libxml-parse-html-region}呼び出しにより以下の@acronym{DOM} (document object model)がリターンされる:"

#. type: example
#: original_texis/text.texi:4440
#, no-wrap
msgid ""
"(html nil\n"
" (head nil)\n"
" (body ((width . \"101\"))\n"
"  (div ((class . \"thing\"))\n"
"   \"Foo\"\n"
"   (div nil\n"
"    \"Yes\"))))\n"
msgstr ""
"(html nil\n"
" (head nil)\n"
" (body ((width . \"101\"))\n"
"  (div ((class . \"thing\"))\n"
"   \"Foo\"\n"
"   (div nil\n"
"    \"Yes\"))))\n"

#. type: cindex
#: original_texis/text.texi:4443
#, no-wrap
msgid "rendering html"
msgstr "rendering html"

#. type: defun
#: original_texis/text.texi:4444
#, no-wrap
msgid "shr-insert-document dom"
msgstr "shr-insert-document dom"

#. type: defun
#: original_texis/text.texi:4449
msgid "This function renders the parsed HTML in @var{dom} into the current buffer.  The argument @var{dom} should be a list as generated by @code{libxml-parse-html-region}.  This function is, e.g., used by @ref{Top, EWW,, eww, The Emacs Web Wowser Manual}."
msgstr "この関数は@var{dom}内のパース済みHTMLをカレントバッファー内に描画する。引数@var{dom}は@code{libxml-parse-html-region}で生成されるようなリストであること。この関数はたとえば@ref{Top, EWW,, eww, The Emacs Web Wowser Manual}により使用される。"

#. type: cindex
#: original_texis/text.texi:4451
#, no-wrap
msgid "parsing xml"
msgstr "parsing xml"

#. type: defun
#: original_texis/text.texi:4452
#, no-wrap
msgid "libxml-parse-xml-region start end &optional base-url discard-comments"
msgstr "libxml-parse-xml-region start end &optional base-url discard-comments"

#. type: defun
#: original_texis/text.texi:4456
msgid "This function is the same as @code{libxml-parse-html-region}, except that it parses the text as XML rather than HTML (so it is stricter about syntax)."
msgstr "この関数は@code{libxml-parse-html-region}と同様だが、HTMLではなくXML(構文についてより厳格)としてテキストをパースする点が異なる。"

#. type: cindex
#: original_texis/text.texi:4460 original_texis/text.texi:4462
#: original_texis/text.texi:4463 original_texis/text.texi:4467
#, no-wrap
msgid "Document Object Model"
msgstr "Document Object Model"

#. type: menuentry
#: original_texis/text.texi:4460
msgid "Access, manipulate and search the @acronym{DOM}."
msgstr "@acronym{DOM}にたいするアクセス、操作、検索。"

#. type: cindex
#: original_texis/text.texi:4464
#, no-wrap
msgid "HTML DOM"
msgstr "HTML DOM"

#. type: cindex
#: original_texis/text.texi:4465
#, no-wrap
msgid "XML DOM"
msgstr "XML DOM"

#. type: cindex
#: original_texis/text.texi:4466
#, no-wrap
msgid "DOM"
msgstr "DOM"

#. type: Plain text
#: original_texis/text.texi:4474
msgid "The @acronym{DOM} returned by @code{libxml-parse-html-region} (and the other @acronym{XML} parsing functions) is a tree structure where each node has a node name (called a @dfn{tag}), and optional key/value @dfn{attribute} list, and then a list of @dfn{child nodes}.  The child nodes are either strings or @acronym{DOM} objects."
msgstr "@code{libxml-parse-html-region} (およびその他の@acronym{XML}パース関数)がリターンする@acronym{DOM}はツリー構造です。このツリー構造ではそれぞれのノードがノード名(@dfn{タグ(tag)}と呼ばれる)をもち、オプションでkey/value値からなる@dfn{属性(attribute)}リスト、その後に@dfn{子ノード(child nodes)}が続きます。子ノードは文字列か@acronym{DOM}オブジェクトのいずれかです。"

#. type: example
#: original_texis/text.texi:4481
#, no-wrap
msgid ""
"(body ((width . \"101\"))\n"
" (div ((class . \"thing\"))\n"
"  \"Foo\"\n"
"  (div nil\n"
"   \"Yes\")))\n"
msgstr ""
"(body ((width . \"101\"))\n"
" (div ((class . \"thing\"))\n"
"  \"Foo\"\n"
"  (div nil\n"
"   \"Yes\")))\n"

#. type: defun
#: original_texis/text.texi:4483
#, no-wrap
msgid "dom-node tag &optional attributes &rest children"
msgstr "dom-node tag &optional attributes &rest children"

#. type: defun
#: original_texis/text.texi:4487
msgid "This function creates a @acronym{DOM} node of type @var{tag}.  If given, @var{attributes} should be a key/value pair list.  If given, @var{children} should be @acronym{DOM} nodes."
msgstr "この関数はタイプ@var{tag}の@acronym{DOM}ノードを作成する。もし@var{attributes}が与えられたら、それはkey/valueペアのリストであること。もし@var{children}が与えられたら、それは@acronym{DOM}ノードであること。"

#. type: Plain text
#: original_texis/text.texi:4492
msgid "The following functions can be used to work with this structure.  Each function takes a @acronym{DOM} node, or a list of nodes.  In the latter case, only the first node in the list is used."
msgstr "この構造を処理するために以下の関数を使用できます。それぞれの関数は@acronym{DOM}ノードかノードのリストを受け取ります。後者の場合には、そのリストの最初のノードだけが使用されます。"

#. type: Plain text
#: original_texis/text.texi:4494
msgid "Simple accessors:"
msgstr "シンプルなアクセサー"

#. type: item
#: original_texis/text.texi:4496
#, no-wrap
msgid "dom-tag @var{node}"
msgstr "dom-tag @var{node}"

#. type: table
#: original_texis/text.texi:4498
msgid "Return the @dfn{tag} (also called ``node name'') of the node."
msgstr "ノードの@dfn{タグ} (``ノード名''とも呼ばれる)をリターンする。"

#. type: item
#: original_texis/text.texi:4499
#, no-wrap
msgid "dom-attr @var{node} @var{attribute}"
msgstr "dom-attr @var{node} @var{attribute}"

#. type: table
#: original_texis/text.texi:4502
msgid "Return the value of @var{attribute} in the node.  A common usage would be:"
msgstr "ノードの@var{属性}の値をリターンする。以下は一般的な使用例："

#. type: lisp
#: original_texis/text.texi:4506
#, no-wrap
msgid ""
"(dom-attr img 'href)\n"
"=> \"http://fsf.org/logo.png\"\n"
msgstr ""
"(dom-attr img 'href)\n"
"=> \"http://fsf.org/logo.png\"\n"

#. type: item
#: original_texis/text.texi:4508
#, no-wrap
msgid "dom-children @var{node}"
msgstr "dom-children @var{node}"

#. type: table
#: original_texis/text.texi:4510
msgid "Return all the children of the node."
msgstr "ノードのすべての子をリターンする。"

#. type: item
#: original_texis/text.texi:4511
#, no-wrap
msgid "dom-non-text-children @var{node}"
msgstr "dom-non-text-children @var{node}"

#. type: table
#: original_texis/text.texi:4513
msgid "Return all the non-string children of the node."
msgstr "ノードのすべての非文字列の子をリターンする。"

#. type: item
#: original_texis/text.texi:4514
#, no-wrap
msgid "dom-attributes @var{node}"
msgstr "dom-attributes @var{node}"

#. type: table
#: original_texis/text.texi:4516
msgid "Return the key/value pair list of attributes of the node."
msgstr "ノードの属性のkey/valueペアのリストをリターンする。"

#. type: item
#: original_texis/text.texi:4517
#, no-wrap
msgid "dom-text @var{node}"
msgstr "dom-text @var{node}"

#. type: table
#: original_texis/text.texi:4519
msgid "Return all the textual elements of the node as a concatenated string."
msgstr "ノードのすべてのテキスト的な要素を連結された文字列としてリターンする。"

#. type: item
#: original_texis/text.texi:4520
#, no-wrap
msgid "dom-texts @var{node}"
msgstr "dom-texts @var{node}"

#. type: table
#: original_texis/text.texi:4525
msgid "Return all the textual elements of the node, as well as the textual elements of all the children of the node, recursively, as a concatenated string.  This function also takes an optional separator to be inserted between the textual elements."
msgstr "ノードのすべてのテキスト的な要素、およびノードのすべての子のテキスト的な要素を、連結された文字列として再帰的にリターンする。この関数はテキスト的な要素の間に挿入するオプションのセパレーターも受け取る。"

#. type: item
#: original_texis/text.texi:4526
#, no-wrap
msgid "dom-parent @var{dom} @var{node}"
msgstr "dom-parent @var{dom} @var{node}"

#. type: table
#: original_texis/text.texi:4528
msgid "Return the parent of @var{node} in @var{dom}."
msgstr "@var{dom}内での@var{node}の親をリターンする。"

#. type: Plain text
#: original_texis/text.texi:4531
msgid "The following are functions for altering the @acronym{DOM}."
msgstr "以下は@acronym{DOM}を変更するための関数です。"

#. type: item
#: original_texis/text.texi:4533
#, no-wrap
msgid "dom-set-attribute @var{node} @var{attribute} @var{value}"
msgstr "dom-set-attribute @var{node} @var{attribute} @var{value}"

#. type: table
#: original_texis/text.texi:4535
msgid "Set the @var{attribute} of the node to @var{value}."
msgstr "ノードの@var{attribute}に@var{value}をセットする。"

#. type: item
#: original_texis/text.texi:4536
#, no-wrap
msgid "dom-append-child @var{node} @var{child}"
msgstr "dom-append-child @var{node} @var{child}"

#. type: table
#: original_texis/text.texi:4538
msgid "Append @var{child} as the last child of @var{node}."
msgstr "@var{node}の最後の子として@var{child}を追加する。"

#. type: item
#: original_texis/text.texi:4539
#, no-wrap
msgid "dom-add-child-before @var{node} @var{child} @var{before}"
msgstr "dom-add-child-before @var{node} @var{child} @var{before}"

#. type: table
#: original_texis/text.texi:4542
msgid "Add @var{child} to @var{node}'s child list before the @var{before} node.  If @var{before} is @code{nil}, make @var{child} the first child."
msgstr "@var{node}の子リストのノード@var{before}の前に@var{child}を追加する。@var{before}が@code{nil}なら、@var{child}が最初の子になる。"

#. type: item
#: original_texis/text.texi:4543
#, no-wrap
msgid "dom-set-attributes @var{node} @var{attributes}"
msgstr "dom-set-attributes @var{node} @var{attributes}"

#. type: table
#: original_texis/text.texi:4545
msgid "Replace all the attributes of the node with a new key/value list."
msgstr "ノードのすべての属性を新たなkey/valueリストに置き換える。"

#. type: Plain text
#: original_texis/text.texi:4549
msgid "The following are functions for searching for elements in the @acronym{DOM}.  They all return lists of matching nodes."
msgstr "以下は@acronym{DOM}内の要素を検索する関数です。これらはマッチしたノードのリストをリターンします。"

#. type: item
#: original_texis/text.texi:4551
#, no-wrap
msgid "dom-by-tag @var{dom} @var{tag}"
msgstr "dom-by-tag @var{dom} @var{tag}"

#. type: table
#: original_texis/text.texi:4554
msgid "Return all nodes in @var{dom} that are of type @var{tag}.  A typical use would be:"
msgstr "@var{dom}内のタイプが@var{tag}のすべてのノードをリターンする。典型的な使用例は:"

#. type: lisp
#: original_texis/text.texi:4558
#, no-wrap
msgid ""
"(dom-by-tag dom 'td)\n"
"=> '((td ...) (td ...) (td ...))\n"
msgstr ""
"(dom-by-tag dom 'td)\n"
"=> '((td ...) (td ...) (td ...))\n"

#. type: item
#: original_texis/text.texi:4560
#, no-wrap
msgid "dom-by-class @var{dom} @var{match}"
msgstr "dom-by-class @var{dom} @var{match}"

#. type: table
#: original_texis/text.texi:4563
msgid "Return all nodes in @var{dom} that have class names that match @var{match}, which is a regular expression."
msgstr "@var{dom}内のクラス名が正規表現@var{match}にマッチするすべてのノードをリターンする。"

#. type: item
#: original_texis/text.texi:4564
#, no-wrap
msgid "dom-by-style @var{dom} @var{style}"
msgstr "dom-by-style @var{dom} @var{style}"

#. type: table
#: original_texis/text.texi:4567
msgid "Return all nodes in @var{dom} that have styles that match @var{match}, which is a regular expression."
msgstr "@var{dom}内のスタイルが正規表現@var{match}にマッチするすべてのノードをリターンする。"

#. type: item
#: original_texis/text.texi:4568
#, no-wrap
msgid "dom-by-id @var{dom} @var{style}"
msgstr "dom-by-id @var{dom} @var{style}"

#. type: table
#: original_texis/text.texi:4571
msgid "Return all nodes in @var{dom} that have IDs that match @var{match}, which is a regular expression."
msgstr "@var{dom}内のIDが正規表現@var{match}にマッチするすべてのノードをリターンする。"

#. type: item
#: original_texis/text.texi:4572
#, no-wrap
msgid "dom-strings @var{dom}"
msgstr "dom-strings @var{dom}"

#. type: table
#: original_texis/text.texi:4574
msgid "Return all strings in @var{DOM}."
msgstr "@var{DOM}内のすべての文字列をリターンする。"

#. type: Plain text
#: original_texis/text.texi:4578
msgid "Utility functions:"
msgstr "ユーティリティ関数:"

#. type: item
#: original_texis/text.texi:4580
#, no-wrap
msgid "dom-pp @var{dom} &optional @var{remove-empty}"
msgstr "dom-pp @var{dom} &optional @var{remove-empty}"

#. type: table
#: original_texis/text.texi:4583
msgid "Pretty-print @var{dom} at point.  If @var{remove-empty}, don't print textual nodes that just contain white-space."
msgstr "ポイント位置の@var{dom}にたいしてプリティプリント(pp: 優雅なプリント)を行う。@var{remove-empty}なら空白文字だけを含むテキスト的ノードはプリントしない。"

#. type: section
#: original_texis/text.texi:4587
#, no-wrap
msgid "Atomic Change Groups"
msgstr "Atomic Change Groups"

#. type: cindex
#: original_texis/text.texi:4588
#, no-wrap
msgid "atomic changes"
msgstr "atomic changes"

#. type: Plain text
#: original_texis/text.texi:4596
msgid "In database terminology, an @dfn{atomic} change is an indivisible change---it can succeed entirely or it can fail entirely, but it cannot partly succeed.  A Lisp program can make a series of changes to one or several buffers as an @dfn{atomic change group}, meaning that either the entire series of changes will be installed in their buffers or, in case of an error, none of them will be."
msgstr "データベース用語においての@dfn{アトミック(atomic: 原子的、不可分)}な変更とは、全体として成功か失敗をすることはできるが、部分的にはできない個別の変更のことです。Lispプログラムは単一もしくは複数のバッファーにたいする一連の変更を@dfn{アトミック変更グループ(atomic change group)}にすることができます。これはその一連の変更全体がそれらのバッファーに適用されるか、またはエラーの場合は何も適用されないかの、いずれかであることを意味します。"

#. type: Plain text
#: original_texis/text.texi:4600
msgid "To do this for one buffer, the one already current, simply write a call to @code{atomic-change-group} around the code that makes the changes, like this:"
msgstr "すでにカレントであるような単一のバッファーにたいしてこれを行うには、以下のように単に変更を行うコードの周囲に@code{atomic-change-group}の呼び出しを記述します:"

#. type: example
#: original_texis/text.texi:4605
#, no-wrap
msgid ""
"(atomic-change-group\n"
"  (insert foo)\n"
"  (delete-region x y))\n"
msgstr ""
"(atomic-change-group\n"
"  (insert foo)\n"
"  (delete-region x y))\n"

#. type: Plain text
#: original_texis/text.texi:4612
msgid "If an error (or other nonlocal exit) occurs inside the body of @code{atomic-change-group}, it unmakes all the changes in that buffer that were during the execution of the body.  This kind of change group has no effect on any other buffers---any such changes remain."
msgstr "@code{atomic-change-group}のbody内部でエラー(またはその他の非ローカルexit)が発生した場合には、そのbodyの実行の間にそのバッファーでのすべての変更が行われなかったことになります。この類の変更グループは他のバッファーには影響を与えず、それらのバッファーにたいする変更はそのまま残されます。"

#. type: Plain text
#: original_texis/text.texi:4616
msgid "If you need something more sophisticated, such as to make changes in various buffers constitute one atomic group, you must directly call lower-level functions that @code{atomic-change-group} uses."
msgstr "さまざまなバッファー内で行った変更から1つのアトミックグループを構成する等、より複雑な何かを必要とする場合には、@code{atomic-change-group}が使用する、より低レベルな関数を直接呼び出さなければなりません。"

#. type: defun
#: original_texis/text.texi:4617
#, no-wrap
msgid "prepare-change-group &optional buffer"
msgstr "prepare-change-group &optional buffer"

#. type: defun
#: original_texis/text.texi:4622
msgid "This function sets up a change group for buffer @var{buffer}, which defaults to the current buffer.  It returns a handle that represents the change group.  You must use this handle to activate the change group and subsequently to finish it."
msgstr "この関数は@var{buffer} (デフォルトはカレントバッファー)にたいする変更グループをセットアップする。これはその変更グループを表すhandleをリターンする。変更グループをactivateしたり、その後でそれを完了するためにはこのhandleを使用しなければならない。"

#. type: Plain text
#: original_texis/text.texi:4626
msgid "To use the change group, you must @dfn{activate} it.  You must do this before making any changes in the text of @var{buffer}."
msgstr "変更グループを使用するためには、それを@dfn{activate(アクティブ化)}しなければなりません。これは@var{buffer}のテキストを変更する前に行わなければなりません。"

#. type: defun
#: original_texis/text.texi:4627
#, no-wrap
msgid "activate-change-group handle"
msgstr "activate-change-group handle"

#. type: defun
#: original_texis/text.texi:4629
msgid "This function activates the change group that @var{handle} designates."
msgstr "これは@var{handle}が指定する変更グループをactiveにする。"

#. type: Plain text
#: original_texis/text.texi:4636
msgid "After you activate the change group, any changes you make in that buffer become part of it.  Once you have made all the desired changes in the buffer, you must @dfn{finish} the change group.  There are two ways to do this: you can either accept (and finalize) all the changes, or cancel them all."
msgstr "変更グループをactivateした後には、そのバッファー内で行ったすべての変更は変更グループの一部となります。そのバッファー内で目論んでいたすべての変更を行ったら、変更グループを@dfn{finish(完了)}しなければなりません。すべての変更を受け入れる(確定する)か、すべてをキャンセルするという2つの方法により、これを行うことができます。"

#. type: defun
#: original_texis/text.texi:4637
#, no-wrap
msgid "accept-change-group handle"
msgstr "accept-change-group handle"

#. type: defun
#: original_texis/text.texi:4640
msgid "This function accepts all the changes in the change group specified by @var{handle}, making them final."
msgstr "この関数は@var{handle}により指定される変更グループ内のすべての変更にたいして、finalizeすることにより変更を受け入れる。"

#. type: defun
#: original_texis/text.texi:4642
#, no-wrap
msgid "cancel-change-group handle"
msgstr "cancel-change-group handle"

#. type: defun
#: original_texis/text.texi:4645
msgid "This function cancels and undoes all the changes in the change group specified by @var{handle}."
msgstr "この関数は@var{handle}により指定される変更グループ内のすべての変更をキャンセルしてundoする。"

#. type: Plain text
#: original_texis/text.texi:4657
msgid "Your code should use @code{unwind-protect} to make sure the group is always finished.  The call to @code{activate-change-group} should be inside the @code{unwind-protect}, in case the user types @kbd{C-g} just after it runs.  (This is one reason why @code{prepare-change-group} and @code{activate-change-group} are separate functions, because normally you would call @code{prepare-change-group} before the start of that @code{unwind-protect}.)  Once you finish the group, don't use the handle again---in particular, don't try to finish the same group twice."
msgstr "グループが常に確実にfinishされるようにするために、コードでは@code{unwind-protect}を使用するべきです。@code{activate-change-group}の呼び出しは、実行直後にユーザーが@kbd{C-g}をタイプする場合に備えて@code{unwind-protect}内部にあるべきです(これが@code{prepare-change-group}と@code{activate-change-group}が別関数となっている1つの理由。なぜなら通常は@code{unwind-protect}開始前に@code{prepare-change-group}を呼び出すであろうから)。グループを一度finishしたら、そのhandleを再度使用してはなりません。特に同じ変更グループを2回finishしないでください。"

#. type: Plain text
#: original_texis/text.texi:4661
msgid "To make a multibuffer change group, call @code{prepare-change-group} once for each buffer you want to cover, then use @code{nconc} to combine the returned values, like this:"
msgstr "複数バッファー変更グループ(multibuffer change group)を作成するためには、カバーしたいバッファーそれぞれで@code{prepare-change-group}を一度呼び出してから、以下のようにリターン値を結合するために@code{nconc}を使用してください:"

#. type: example
#: original_texis/text.texi:4665
#, no-wrap
msgid ""
"(nconc (prepare-change-group buffer-1)\n"
"       (prepare-change-group buffer-2))\n"
msgstr ""
"(nconc (prepare-change-group buffer-1)\n"
"       (prepare-change-group buffer-2))\n"

#. type: Plain text
#: original_texis/text.texi:4670
msgid "You can then activate the multibuffer change group with a single call to @code{activate-change-group}, and finish it with a single call to @code{accept-change-group} or @code{cancel-change-group}."
msgstr "その後は1回の@code{activate-change-group}呼び出しで複数変更グループをアクティブにして、1回の@code{accept-change-group}か@code{cancel-change-group}呼び出しでそれをfinishしてください。"

#. type: Plain text
#: original_texis/text.texi:4675
msgid "Nested use of several change groups for the same buffer works as you would expect.  Non-nested use of change groups for the same buffer will get Emacs confused, so don't let it happen; the first change group you start for any given buffer should be the last one finished."
msgstr "同一バッファーにたいするネストされた複数の変更グループ使用は、あなたが期待するであろう通りに機能します。同一バッファーにたいするネストされていない変更グループの使用によりEmacsが混乱した状態になるので、これが発生しないようにしてください。与えられた何らかのバッファーにたいして最初に開始した変更グループは最後にfinishする変更グループです。"

#. type: cindex
#: original_texis/text.texi:4678
#, no-wrap
msgid "change hooks"
msgstr "change hooks"

#. type: cindex
#: original_texis/text.texi:4679
#, no-wrap
msgid "hooks for text changes"
msgstr "hooks for text changes"

#. type: Plain text
#: original_texis/text.texi:4685
msgid "These hook variables let you arrange to take notice of changes in buffers (or in a particular buffer, if you make them buffer-local).  See also @ref{Special Properties}, for how to detect changes to specific parts of the text."
msgstr "以下のフック変数によりバッファー(これらをバッファーローカルにした場合には特定のバッファー)での変更にたいして、通知を受け取るようにアレンジすることができます。テキストの特定部分にたいする変更の検出方法については@ref{Special Properties}も参照してください。"

#. type: Plain text
#: original_texis/text.texi:4690
msgid "The functions you use in these hooks should save and restore the match data if they do anything that uses regular expressions; otherwise, they will interfere in bizarre ways with the editing operations that call them."
msgstr "これらのフック内で使用する関数は、もしそれらが正規表現を使用して何かを行う場合にはマッチしたデータの保存とリストアを行うべきです。さもないとそれらが呼び出す編集処理に奇妙な方法で干渉するでしょう。"

#. type: defvar
#: original_texis/text.texi:4691
#, no-wrap
msgid "before-change-functions"
msgstr "before-change-functions"

#. type: defvar
#: original_texis/text.texi:4697
msgid "This variable holds a list of functions to call when Emacs is about to modify a buffer.  Each function gets two arguments, the beginning and end of the region that is about to change, represented as integers.  The buffer that is about to change is always the current buffer when the function is called."
msgstr "この変数はEmacsがバッファー変更を行おうとする際に呼び出す関数のリストを保持する。各関数は変更されようとするリージョンの先頭と終端を整数で表す2つの引数を受け取る。変更されようとするバッファーは関数の呼び出しの際には常にカレントバッファーである。"

#. type: defvar
#: original_texis/text.texi:4699
#, no-wrap
msgid "after-change-functions"
msgstr "after-change-functions"

#. type: defvar
#: original_texis/text.texi:4706
msgid "This variable holds a list of functions to call after Emacs modifies a buffer.  Each function receives three arguments: the beginning and end of the region just changed, and the length of the text that existed before the change.  All three arguments are integers.  The buffer that has been changed is always the current buffer when the function is called."
msgstr "この変数はEmacsがバッファー変更を行った後に呼び出す関数のリストを保持する。各関数は正に変更されたリージョンの先頭と終端、およびその変更前に存在したテキストの長さという3つの引数を受け取る。これら3つの変数は、すべて整数。変更されたバッファーは関数の呼び出しの際には常にカレントバッファーである。"

#. type: defvar
#: original_texis/text.texi:4711
msgid "The length of the old text is the difference between the buffer positions before and after that text as it was before the change.  As for the changed text, its length is simply the difference between the first two arguments."
msgstr "古いテキストの長さは、変更される前のテキストでのテキストの前後のバッファー位置の差で与えられる。変更されたテキストでは、その長さは単に最初の2つの引数の差で与えられる。"

#. type: Plain text
#: original_texis/text.texi:4717
msgid "Output of messages into the @file{*Messages*} buffer does not call these functions, and neither do certain internal buffer changes, such as changes in buffers created by Emacs internally for certain jobs, that should not be visible to Lisp programs."
msgstr "これらの関数は@file{*Messages*}バッファーへのメッセージの出力では呼び出されず、特定の処理用にEmacsが作成する内部的なバッファーのようなLispプログラムからは可視であるべきではないバッファーへの変更でも呼び出されません。"

#. type: Plain text
#: original_texis/text.texi:4726
msgid "Do @emph{not} expect the before-change hooks and the after-change hooks be called in balanced pairs around each buffer change.  Also don't expect the before-change hooks to be called for every chunk of text Emacs is about to delete.  These hooks are provided on the assumption that Lisp programs will use either before- or the after-change hooks, but not both, and the boundaries of the region where the changes happen might include more than just the actual changed text, or even lump together several changes done piecemeal."
msgstr "バッファーへのそれぞれの変更の周辺で、before-changeフックとafter-changeフックが釣り合いの取れたペアであることを@emph{期待しないでください}。またEmacsが削除しようとするテキスト塊(chunk of text)ごとにbefore-changeフックが呼び出されることも期待してはなりません。これらのフックはLispプログラムがbefore-changeかafter-changeの両方ではなく、いずれかを使用するという想定で提供されており、その変更が発生したリージョン境界には実際に変更があったテキストだけではなく、少量にたいして行われた変更を複数集めて一塊とした変更さえ含まれるかもしれません。"

#. type: defmac
#: original_texis/text.texi:4727
#, no-wrap
msgid "combine-after-change-calls body@dots{}"
msgstr "combine-after-change-calls body@dots{}"

#. type: defmac
#: original_texis/text.texi:4731
msgid "The macro executes @var{body} normally, but arranges to call the after-change functions just once for a series of several changes---if that seems safe."
msgstr "このマクロは普通に@var{body}を実行するが、もしそれが安全なように見えるなら一連の複数の変更にたいして正に一度、after-change関数を呼び出すようにアレンジする。"

#. type: defmac
#: original_texis/text.texi:4738
msgid "If a program makes several text changes in the same area of the buffer, using the macro @code{combine-after-change-calls} around that part of the program can make it run considerably faster when after-change hooks are in use.  When the after-change hooks are ultimately called, the arguments specify a portion of the buffer including all of the changes made within the @code{combine-after-change-calls} body."
msgstr "そのバッファーの同じ領域内でプログラムが複数のテキスト変更を行う場合には、その部分のプログラムの周囲でマクロ@code{combine-after-change-calls}を使用することにより、after-changeフック使用中の実行がかなり高速になり得る。after-changeフックが最終的に呼び出される際には、その引数は@code{combine-after-change-calls}のbody内で行われたすべての変更にたいして含むバッファーの範囲を指定する。"

#. type: defmac
#: original_texis/text.texi:4742
msgid "@strong{Warning:} You must not alter the values of @code{after-change-functions} within the body of a @code{combine-after-change-calls} form."
msgstr "@strong{警告:} フォーム@code{combine-after-change-calls}のbody内で@code{after-change-functions}の値を変更してはならない。"

#. type: defmac
#: original_texis/text.texi:4747
msgid "@strong{Warning:} if the changes you combine occur in widely scattered parts of the buffer, this will still work, but it is not advisable, because it may lead to inefficient behavior for some change hook functions."
msgstr "@strong{警告:} 組み合わされた変更がバッファーの広い範囲に点在してに出現する場合でも、これは依然として機能するが推奨できない。なぜならこれは、ある変更フック関数を非効率的な挙動へと導くかもしれないからである。"

#. type: defvar
#: original_texis/text.texi:4749
#, no-wrap
msgid "first-change-hook"
msgstr "first-change-hook"

#. type: defvar
#: original_texis/text.texi:4752
msgid "This variable is a normal hook that is run whenever a buffer is changed that was previously in the unmodified state."
msgstr "この変数は以前は未変更の状態だったバッファーが変更された際は常に実行されるノーマルフック。"

#. type: defvar
#: original_texis/text.texi:4754
#, no-wrap
msgid "inhibit-modification-hooks"
msgstr "inhibit-modification-hooks"

#. type: defvar
#: original_texis/text.texi:4760
msgid "If this variable is non-@code{nil}, all of the change hooks are disabled; none of them run.  This affects all the hook variables described above in this section, as well as the hooks attached to certain special text properties (@pxref{Special Properties}) and overlay properties (@pxref{Overlay Properties})."
msgstr "この変数が非@code{nil}ならすべての変更フックは無効。それらは何も実行されない。これはこのセクションで説明したすべてのフック変数、同様に特定のスペシャルテキストプロパティ(@ref{Special Properties}を参照)とオーバーレイプロパティ(@ref{Overlay Properties}を参照)にアタッチされたフックに影響を与える。"

#. type: defvar
#: original_texis/text.texi:4767
msgid "Also, this variable is bound to non-@code{nil} while running those same hook variables, so that by default modifying the buffer from a modification hook does not cause other modification hooks to be run.  If you do want modification hooks to be run in a particular piece of code that is itself run from a modification hook, then rebind locally @code{inhibit-modification-hooks} to @code{nil}."
msgstr "これらの同一フック変数上の関数の実行の間、バッファー変更によるデフォルトの変更フックが他の変更フック実行中に実行されないように、この変数は非@code{nil}にバインドされる。それ自体が変更フックから実行される特定のコード断片内で変更フックを実行したければ、@code{inhibit-modification-hooks}を@code{nil}にローカルに再バインドすること。"
