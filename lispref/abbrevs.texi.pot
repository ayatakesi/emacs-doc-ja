# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2024-06-27 03:50+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: node
#: original_texis/abbrevs.texi:6
#, no-wrap
msgid "Abbrevs"
msgstr ""

#. type: chapter
#: original_texis/abbrevs.texi:7
#, no-wrap
msgid "Abbrevs and Abbrev Expansion"
msgstr ""

#. type: cindex
#: original_texis/abbrevs.texi:8
#, no-wrap
msgid "abbrev"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:15
msgid ""
"An abbreviation or @dfn{abbrev} is a string of characters that may be "
"expanded to a longer string.  The user can insert the abbrev string and find "
"it replaced automatically with the expansion of the abbrev.  This saves "
"typing."
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:20
msgid ""
"The set of abbrevs currently in effect is recorded in an @dfn{abbrev "
"table}.  Each buffer has a local abbrev table, but normally all buffers in "
"the same major mode share one abbrev table.  There is also a global abbrev "
"table.  Normally both are used."
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:29
msgid ""
"An abbrev table is represented as an obarray.  @xref{Creating Symbols}, for "
"information about obarrays.  Each abbreviation is represented by a symbol in "
"the obarray.  The symbol's name is the abbreviation; its value is the "
"expansion; its function definition is the hook function for performing the "
"expansion (@pxref{Defining Abbrevs}); and its property list cell contains "
"various additional properties, including the use count and the number of "
"times the abbreviation has been expanded (@pxref{Abbrev Properties})."
msgstr ""

#. type: cindex
#: original_texis/abbrevs.texi:30
#, no-wrap
msgid "system abbrev"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:36
msgid ""
"Certain abbrevs, called @dfn{system abbrevs}, are defined by a major mode "
"instead of the user.  A system abbrev is identified by its non-@code{nil} "
"@code{:system} property (@pxref{Abbrev Properties}).  When abbrevs are saved "
"to an abbrev file, system abbrevs are omitted.  @xref{Abbrev Files}."
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:42
msgid ""
"Because the symbols used for abbrevs are not interned in the usual obarray, "
"they will never appear as the result of reading a Lisp expression; in fact, "
"normally they are never used except by the code that handles abbrevs.  "
"Therefore, it is safe to use them in a nonstandard way."
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:47
msgid ""
"If the minor mode Abbrev mode is enabled, the buffer-local variable "
"@code{abbrev-mode} is non-@code{nil}, and abbrevs are automatically expanded "
"in the buffer.  For the user-level commands for abbrevs, see @ref{Abbrevs,, "
"Abbrev Mode, emacs, The GNU Emacs Manual}."
msgstr ""

#. type: menuentry
#: original_texis/abbrevs.texi:58
msgid "Tables: Abbrev Tables"
msgstr ""

#. type: menuentry
#: original_texis/abbrevs.texi:58
msgid "Creating and working with abbrev tables."
msgstr ""

#. type: section
#: original_texis/abbrevs.texi:58 original_texis/abbrevs.texi:128
#: original_texis/abbrevs.texi:129
#, no-wrap
msgid "Defining Abbrevs"
msgstr ""

#. type: menuentry
#: original_texis/abbrevs.texi:58
msgid "Specifying abbreviations and their expansions."
msgstr ""

#. type: menuentry
#: original_texis/abbrevs.texi:58
msgid "Files: Abbrev Files"
msgstr ""

#. type: menuentry
#: original_texis/abbrevs.texi:58
msgid "Saving abbrevs in files."
msgstr ""

#. type: menuentry
#: original_texis/abbrevs.texi:58
msgid "Expansion: Abbrev Expansion"
msgstr ""

#. type: menuentry
#: original_texis/abbrevs.texi:58
msgid "Controlling expansion; expansion subroutines."
msgstr ""

#. type: section
#: original_texis/abbrevs.texi:58 original_texis/abbrevs.texi:378
#: original_texis/abbrevs.texi:379
#, no-wrap
msgid "Standard Abbrev Tables"
msgstr ""

#. type: menuentry
#: original_texis/abbrevs.texi:58
msgid "Abbrev tables used by various major modes."
msgstr ""

#. type: section
#: original_texis/abbrevs.texi:58 original_texis/abbrevs.texi:421
#: original_texis/abbrevs.texi:422
#, no-wrap
msgid "Abbrev Properties"
msgstr ""

#. type: menuentry
#: original_texis/abbrevs.texi:58
msgid "How to read and set abbrev properties.  Which properties have which effect."
msgstr ""

#. type: section
#: original_texis/abbrevs.texi:58 original_texis/abbrevs.texi:462
#: original_texis/abbrevs.texi:463
#, no-wrap
msgid "Abbrev Table Properties"
msgstr ""

#. type: menuentry
#: original_texis/abbrevs.texi:58
msgid ""
"How to read and set abbrev table properties.  Which properties have which "
"effect."
msgstr ""

#. type: section
#: original_texis/abbrevs.texi:60 original_texis/abbrevs.texi:61
#, no-wrap
msgid "Abbrev Tables"
msgstr ""

#. type: cindex
#: original_texis/abbrevs.texi:62
#, no-wrap
msgid "abbrev tables"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:65
msgid "This section describes how to create and manipulate abbrev tables."
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:66
#, no-wrap
msgid "make-abbrev-table &optional props"
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:71
msgid ""
"This function creates and returns a new, empty abbrev table---an obarray "
"containing no symbols.  It is a vector filled with zeros.  @var{props} is a "
"property list that is applied to the new table (@pxref{Abbrev Table "
"Properties})."
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:73
#, no-wrap
msgid "abbrev-table-p object"
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:76
msgid ""
"This function returns a non-@code{nil} value if @var{object} is an abbrev "
"table."
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:78
#, no-wrap
msgid "clear-abbrev-table abbrev-table"
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:83
msgid ""
"This function undefines all the abbrevs in @var{abbrev-table}, leaving it "
"empty."
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:85
#, no-wrap
msgid "copy-abbrev-table abbrev-table"
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:89
msgid ""
"This function returns a copy of @var{abbrev-table}---a new abbrev table "
"containing the same abbrev definitions.  It does @emph{not} copy any "
"property lists; only the names, values, and functions."
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:91
#, no-wrap
msgid "define-abbrev-table tabname definitions &optional docstring &rest props"
msgstr ""

#.  The return value is always @code{nil}.
#. type: defun
#: original_texis/abbrevs.texi:98
msgid ""
"This function defines @var{tabname} (a symbol) as an abbrev table name, "
"i.e., as a variable whose value is an abbrev table.  It defines abbrevs in "
"the table according to @var{definitions}, a list of elements of the form "
"@code{(@var{abbrevname} @var{expansion} [@var{hook}] [@var{props}...])}.  "
"These elements are passed as arguments to @code{define-abbrev}."
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:102
msgid ""
"The optional string @var{docstring} is the documentation string of the "
"variable @var{tabname}.  The property list @var{props} is applied to the "
"abbrev table (@pxref{Abbrev Table Properties})."
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:108
msgid ""
"If this function is called more than once for the same @var{tabname}, "
"subsequent calls add the definitions in @var{definitions} to @var{tabname}, "
"rather than overwriting the entire original contents.  (A subsequent call "
"only overrides abbrevs explicitly redefined or undefined in "
"@var{definitions}.)"
msgstr ""

#. type: defvar
#: original_texis/abbrevs.texi:110
#, no-wrap
msgid "abbrev-table-name-list"
msgstr ""

#. type: defvar
#: original_texis/abbrevs.texi:113
msgid ""
"This is a list of symbols whose values are abbrev tables.  "
"@code{define-abbrev-table} adds the new abbrev table name to this list."
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:115
#, no-wrap
msgid "insert-abbrev-table-description name &optional human"
msgstr ""

#.  The return value is always @code{nil}.
#. type: defun
#: original_texis/abbrevs.texi:119
msgid ""
"This function inserts before point a description of the abbrev table named "
"@var{name}.  The argument @var{name} is a symbol whose value is an abbrev "
"table."
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:126
msgid ""
"If @var{human} is non-@code{nil}, the description is human-oriented.  System "
"abbrevs are listed and identified as such.  Otherwise the description is a "
"Lisp expression---a call to @code{define-abbrev-table} that would define "
"@var{name} as it is currently defined, but without the system abbrevs.  (The "
"mode or package using @var{name} is supposed to add these to @var{name} "
"separately.)"
msgstr ""

#. type: cindex
#: original_texis/abbrevs.texi:130
#, no-wrap
msgid "defining abbrevs"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:134
msgid ""
"@code{define-abbrev} is the low-level basic function for defining an abbrev "
"in an abbrev table."
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:141
msgid ""
"When a major mode defines a system abbrev, it should call "
"@code{define-abbrev} and specify @code{t} for the @code{:system} property.  "
"Be aware that any saved non-system abbrevs are restored at startup, i.e., "
"before some major modes are loaded.  Therefore, major modes should not "
"assume that their abbrev tables are empty when they are first loaded."
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:142
#, no-wrap
msgid "define-abbrev abbrev-table name expansion &optional hook &rest props"
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:150
msgid ""
"This function defines an abbrev named @var{name}, in @var{abbrev-table}, to "
"expand to @var{expansion} and call @var{hook}, with properties @var{props} "
"(@pxref{Abbrev Properties}).  The return value is @var{name}.  The "
"@code{:system} property in @var{props} is treated specially here: if it has "
"the value @code{force}, then it will overwrite an existing definition even "
"for a non-system abbrev of the same name."
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:155
msgid ""
"@var{name} should be a string.  The argument @var{expansion} is normally the "
"desired expansion (a string), or @code{nil} to undefine the abbrev.  If it "
"is anything but a string or @code{nil}, then the abbreviation expands solely "
"by running @var{hook}."
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:160
msgid ""
"The argument @var{hook} is a function or @code{nil}.  If @var{hook} is "
"non-@code{nil}, then it is called with no arguments after the abbrev is "
"replaced with @var{expansion}; point is located at the end of "
"@var{expansion} when @var{hook} is called."
msgstr ""

#. type: cindex
#: original_texis/abbrevs.texi:161
#, no-wrap
msgid "@code{no-self-insert} property"
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:169
msgid ""
"If @var{hook} is a non-@code{nil} symbol whose @code{no-self-insert} "
"property is non-@code{nil}, @var{hook} can explicitly control whether to "
"insert the self-inserting input character that triggered the expansion.  If "
"@var{hook} returns non-@code{nil} in this case, that inhibits insertion of "
"the character.  By contrast, if @var{hook} returns @code{nil}, "
"@code{expand-abbrev} (or @code{abbrev-insert})  also returns @code{nil}, as "
"if expansion had not really occurred."
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:174
msgid ""
"Normally, @code{define-abbrev} sets the variable @code{abbrevs-changed} to "
"@code{t}, if it actually changes the abbrev.  This is so that some commands "
"will offer to save the abbrevs.  It does not do this for a system abbrev, "
"since those aren't saved anyway."
msgstr ""

#. type: defopt
#: original_texis/abbrevs.texi:176
#, no-wrap
msgid "only-global-abbrevs"
msgstr ""

#. type: defopt
#: original_texis/abbrevs.texi:182
msgid ""
"If this variable is non-@code{nil}, it means that the user plans to use "
"global abbrevs only.  This tells the commands that define mode-specific "
"abbrevs to define global ones instead.  This variable does not alter the "
"behavior of the functions in this section; it is examined by their callers."
msgstr ""

#. type: node
#: original_texis/abbrevs.texi:184
#, no-wrap
msgid "Abbrev Files"
msgstr ""

#. type: section
#: original_texis/abbrevs.texi:185
#, no-wrap
msgid "Saving Abbrevs in Files"
msgstr ""

#. type: cindex
#: original_texis/abbrevs.texi:186
#, no-wrap
msgid "save abbrevs in files"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:195
msgid ""
"A file of saved abbrev definitions is actually a file of Lisp code.  The "
"abbrevs are saved in the form of a Lisp program to define the same abbrev "
"tables with the same contents.  Therefore, you can load the file with "
"@code{load} (@pxref{How Programs Do Loading}).  However, the function "
"@code{quietly-read-abbrev-file} is provided as a more convenient interface.  "
"Emacs automatically calls this function at startup."
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:199
msgid ""
"User-level facilities such as @code{save-some-buffers} can save abbrevs in a "
"file automatically, under the control of variables described here."
msgstr ""

#. type: defopt
#: original_texis/abbrevs.texi:200
#, no-wrap
msgid "abbrev-file-name"
msgstr ""

#. type: defopt
#: original_texis/abbrevs.texi:205
msgid ""
"This is the default file name for reading and saving abbrevs.  By default, "
"Emacs will look for @file{~/.emacs.d/abbrev_defs}, and, if not found, for "
"@file{~/.abbrev_defs}; if neither file exists, Emacs will create "
"@file{~/.emacs.d/abbrev_defs}."
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:207
#, no-wrap
msgid "quietly-read-abbrev-file &optional filename"
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:212
msgid ""
"This function reads abbrev definitions from a file named @var{filename}, "
"previously written with @code{write-abbrev-file}.  If @var{filename} is "
"omitted or @code{nil}, the file specified in @code{abbrev-file-name} is "
"used."
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:215
msgid "As the name implies, this function does not display any messages."
msgstr ""

#. type: defopt
#: original_texis/abbrevs.texi:217
#, no-wrap
msgid "save-abbrevs"
msgstr ""

#. type: defopt
#: original_texis/abbrevs.texi:223
msgid ""
"A non-@code{nil} value for @code{save-abbrevs} means that Emacs should offer "
"to save abbrevs (if any have changed) when files are saved.  If the value is "
"@code{silently}, Emacs saves the abbrevs without asking the user.  "
"@code{abbrev-file-name} specifies the file to save the abbrevs in.  The "
"default value is @code{t}."
msgstr ""

#. type: defvar
#: original_texis/abbrevs.texi:225
#, no-wrap
msgid "abbrevs-changed"
msgstr ""

#. type: defvar
#: original_texis/abbrevs.texi:229
msgid ""
"This variable is set non-@code{nil} by defining or altering any abbrevs "
"(except system abbrevs).  This serves as a flag for various Emacs commands "
"to offer to save your abbrevs."
msgstr ""

#. type: deffn
#: original_texis/abbrevs.texi:231
#, no-wrap
msgid "Command write-abbrev-file &optional filename"
msgstr ""

#. type: deffn
#: original_texis/abbrevs.texi:238
msgid ""
"Save all abbrev definitions (except system abbrevs), for all abbrev tables "
"listed in @code{abbrev-table-name-list}, in the file @var{filename}, in the "
"form of a Lisp program that when loaded will define the same abbrevs.  "
"Tables that do not have any abbrevs to save are omitted.  If @var{filename} "
"is @code{nil} or omitted, @code{abbrev-file-name} is used.  This function "
"returns @code{nil}."
msgstr ""

#. type: node
#: original_texis/abbrevs.texi:240
#, no-wrap
msgid "Abbrev Expansion"
msgstr ""

#. type: section
#: original_texis/abbrevs.texi:241
#, no-wrap
msgid "Looking Up and Expanding Abbreviations"
msgstr ""

#. type: cindex
#: original_texis/abbrevs.texi:242
#, no-wrap
msgid "looking up abbrevs"
msgstr ""

#. type: cindex
#: original_texis/abbrevs.texi:243
#, no-wrap
msgid "expanding abbrevs"
msgstr ""

#. type: cindex
#: original_texis/abbrevs.texi:244
#, no-wrap
msgid "abbrevs, looking up and expanding"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:250
msgid ""
"Abbrevs are usually expanded by certain interactive commands, including "
"@code{self-insert-command}.  This section describes the subroutines used in "
"writing such commands, as well as the variables they use for communication."
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:251
#, no-wrap
msgid "abbrev-symbol abbrev &optional table"
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:258
msgid ""
"This function returns the symbol representing the abbrev named "
"@var{abbrev}.  It returns @code{nil} if that abbrev is not defined.  The "
"optional second argument @var{table} is the abbrev table in which to look it "
"up.  If @var{table} is @code{nil}, this function tries first the current "
"buffer's local abbrev table, and second the global abbrev table."
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:260
#, no-wrap
msgid "abbrev-expansion abbrev &optional table"
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:266
msgid ""
"This function returns the string that @var{abbrev} would expand into (as "
"defined by the abbrev tables used for the current buffer).  It returns "
"@code{nil} if @var{abbrev} is not a valid abbrev.  The optional argument "
"@var{table} specifies the abbrev table to use, as in @code{abbrev-symbol}."
msgstr ""

#. type: deffn
#: original_texis/abbrevs.texi:268
#, no-wrap
msgid "Command expand-abbrev"
msgstr ""

#. type: deffn
#: original_texis/abbrevs.texi:273
msgid ""
"This command expands the abbrev before point, if any.  If point does not "
"follow an abbrev, this command does nothing.  To do the expansion, it calls "
"the function that is the value of the @code{abbrev-expand-function} "
"variable, with no arguments, and returns whatever that function does."
msgstr ""

#. type: deffn
#: original_texis/abbrevs.texi:280
msgid ""
"The default expansion function returns the abbrev symbol if it did "
"expansion, and @code{nil} otherwise.  If the abbrev symbol has a hook "
"function that is a symbol whose @code{no-self-insert} property is "
"non-@code{nil}, and if the hook function returns @code{nil} as its value, "
"then the default expansion function returns @code{nil}, even though "
"expansion did occur."
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:282
#, no-wrap
msgid "abbrev-insert abbrev &optional name start end"
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:290
msgid ""
"This function inserts the abbrev expansion of @code{abbrev}, replacing the "
"text between @code{start} and @code{end}.  If @code{start} is omitted, it "
"defaults to point.  @code{name}, if non-@code{nil}, should be the name by "
"which this abbrev was found (a string); it is used to figure out whether to "
"adjust the capitalization of the expansion.  The function returns "
"@code{abbrev} if the abbrev was successfully inserted, otherwise it returns "
"@code{nil}."
msgstr ""

#. type: deffn
#: original_texis/abbrevs.texi:292
#, no-wrap
msgid "Command abbrev-prefix-mark &optional arg"
msgstr ""

#. type: deffn
#: original_texis/abbrevs.texi:297
msgid ""
"This command marks the current location of point as the beginning of an "
"abbrev.  The next call to @code{expand-abbrev} will use the text from here "
"to point (where it is then) as the abbrev to expand, rather than using the "
"previous word as usual."
msgstr ""

#. type: deffn
#: original_texis/abbrevs.texi:302
msgid ""
"First, this command expands any abbrev before point, unless @var{arg} is "
"non-@code{nil}.  (Interactively, @var{arg} is the prefix argument.)  Then it "
"inserts a hyphen before point, to indicate the start of the next abbrev to "
"be expanded.  The actual expansion removes the hyphen."
msgstr ""

#. type: defopt
#: original_texis/abbrevs.texi:304
#, no-wrap
msgid "abbrev-all-caps"
msgstr ""

#. type: defopt
#: original_texis/abbrevs.texi:309
msgid ""
"When this is set non-@code{nil}, an abbrev entered entirely in upper case is "
"expanded using all upper case.  Otherwise, an abbrev entered entirely in "
"upper case is expanded by capitalizing each word of the expansion."
msgstr ""

#. type: defvar
#: original_texis/abbrevs.texi:311
#, no-wrap
msgid "abbrev-start-location"
msgstr ""

#. type: defvar
#: original_texis/abbrevs.texi:318
msgid ""
"The value of this variable is a buffer position (an integer or a marker)  "
"for @code{expand-abbrev} to use as the start of the next abbrev to be "
"expanded.  The value can also be @code{nil}, which means to use the word "
"before point instead.  @code{abbrev-start-location} is set to @code{nil} "
"each time @code{expand-abbrev} is called.  This variable is also set by "
"@code{abbrev-prefix-mark}."
msgstr ""

#. type: defvar
#: original_texis/abbrevs.texi:320
#, no-wrap
msgid "abbrev-start-location-buffer"
msgstr ""

#. type: defvar
#: original_texis/abbrevs.texi:325
msgid ""
"The value of this variable is the buffer for which "
"@code{abbrev-start-location} has been set.  Trying to expand an abbrev in "
"any other buffer clears @code{abbrev-start-location}.  This variable is set "
"by @code{abbrev-prefix-mark}."
msgstr ""

#. type: defvar
#: original_texis/abbrevs.texi:327
#, no-wrap
msgid "last-abbrev"
msgstr ""

#. type: defvar
#: original_texis/abbrevs.texi:332
msgid ""
"This is the @code{abbrev-symbol} of the most recent abbrev expanded.  This "
"information is left by @code{expand-abbrev} for the sake of the "
"@code{unexpand-abbrev} command (@pxref{Expanding Abbrevs,, Expanding "
"Abbrevs, emacs, The GNU Emacs Manual})."
msgstr ""

#. type: defvar
#: original_texis/abbrevs.texi:334
#, no-wrap
msgid "last-abbrev-location"
msgstr ""

#. type: defvar
#: original_texis/abbrevs.texi:338
msgid ""
"This is the location of the most recent abbrev expanded.  This contains "
"information left by @code{expand-abbrev} for the sake of the "
"@code{unexpand-abbrev} command."
msgstr ""

#. type: defvar
#: original_texis/abbrevs.texi:340
#, no-wrap
msgid "last-abbrev-text"
msgstr ""

#. type: defvar
#: original_texis/abbrevs.texi:345
msgid ""
"This is the exact expansion text of the most recent abbrev expanded, after "
"case conversion (if any).  Its value is @code{nil} if the abbrev has already "
"been unexpanded.  This contains information left by @code{expand-abbrev} for "
"the sake of the @code{unexpand-abbrev} command."
msgstr ""

#. type: defvar
#: original_texis/abbrevs.texi:347
#, no-wrap
msgid "abbrev-expand-function"
msgstr ""

#. type: defvar
#: original_texis/abbrevs.texi:352
msgid ""
"The value of this variable is a function that @code{expand-abbrev} will call "
"with no arguments to do the expansion.  The function can do anything it "
"wants before and after performing the expansion.  It should return the "
"abbrev symbol if expansion took place."
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:362
msgid ""
"The following sample code shows a simple use of "
"@code{abbrev-expand-function}.  It assumes that @code{foo-mode} is a mode "
"for editing certain files in which lines that start with @samp{#} are "
"comments.  You want to use Text mode abbrevs for those lines.  The regular "
"local abbrev table, @code{foo-mode-abbrev-table} is appropriate for all "
"other lines.  @xref{Standard Abbrev Tables}, for the definitions of "
"@code{local-abbrev-table} and @code{text-mode-abbrev-table}.  @xref{Advising "
"Functions}, for details of @code{add-function}."
msgstr ""

#. type: smallexample
#: original_texis/abbrevs.texi:371
#, no-wrap
msgid ""
"(defun foo-mode-abbrev-expand-function (expand)\n"
"  (if (not (save-excursion (forward-line 0) (eq (char-after) ?#)))\n"
"      ;; Performs normal expansion.\n"
"      (funcall expand)\n"
"    ;; We're inside a comment: use the text-mode abbrevs.\n"
"    (let ((local-abbrev-table text-mode-abbrev-table))\n"
"      (funcall expand))))\n"
"\n"
msgstr ""

#. type: smallexample
#: original_texis/abbrevs.texi:376
#, no-wrap
msgid ""
"(add-hook 'foo-mode-hook\n"
"          (lambda ()\n"
"            (add-function :around (local 'abbrev-expand-function)\n"
"                          #'foo-mode-abbrev-expand-function)))\n"
msgstr ""

#. type: cindex
#: original_texis/abbrevs.texi:380
#, no-wrap
msgid "standard abbrev tables"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:384
msgid ""
"Here we list the variables that hold the abbrev tables for the preloaded "
"major modes of Emacs."
msgstr ""

#. type: defvar
#: original_texis/abbrevs.texi:385
#, no-wrap
msgid "global-abbrev-table"
msgstr ""

#. type: defvar
#: original_texis/abbrevs.texi:390
msgid ""
"This is the abbrev table for mode-independent abbrevs.  The abbrevs defined "
"in it apply to all buffers.  Each buffer may also have a local abbrev table, "
"whose abbrev definitions take precedence over those in the global table."
msgstr ""

#. type: defvar
#: original_texis/abbrevs.texi:392
#, no-wrap
msgid "local-abbrev-table"
msgstr ""

#. type: defvar
#: original_texis/abbrevs.texi:396
msgid ""
"The value of this buffer-local variable is the (mode-specific)  abbreviation "
"table of the current buffer.  It can also be a list of such tables."
msgstr ""

#. type: defvar
#: original_texis/abbrevs.texi:398
#, no-wrap
msgid "abbrev-minor-mode-table-alist"
msgstr ""

#. type: defvar
#: original_texis/abbrevs.texi:404
msgid ""
"The value of this variable is a list of elements of the form "
"@code{(@var{mode} . @var{abbrev-table})} where @var{mode} is the name of a "
"variable: if the variable is bound to a non-@code{nil} value, then the "
"@var{abbrev-table} is active, otherwise it is ignored.  @var{abbrev-table} "
"can also be a list of abbrev tables."
msgstr ""

#. type: defvar
#: original_texis/abbrevs.texi:406
#, no-wrap
msgid "fundamental-mode-abbrev-table"
msgstr ""

#. type: defvar
#: original_texis/abbrevs.texi:409
msgid ""
"This is the local abbrev table used in Fundamental mode; in other words, it "
"is the local abbrev table in all buffers in Fundamental mode."
msgstr ""

#. type: defvar
#: original_texis/abbrevs.texi:411
#, no-wrap
msgid "text-mode-abbrev-table"
msgstr ""

#. type: defvar
#: original_texis/abbrevs.texi:413
msgid "This is the local abbrev table used in Text mode."
msgstr ""

#. type: defvar
#: original_texis/abbrevs.texi:415
#, no-wrap
msgid "lisp-mode-abbrev-table"
msgstr ""

#. type: defvar
#: original_texis/abbrevs.texi:419
msgid ""
"This is the local abbrev table used in Lisp mode.  It is the parent of the "
"local abbrev table used in Emacs Lisp mode.  @xref{Abbrev Table Properties}."
msgstr ""

#. type: cindex
#: original_texis/abbrevs.texi:423
#, no-wrap
msgid "abbrev properties"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:428
msgid ""
"Abbrevs have properties, some of which influence the way they work.  You can "
"provide them as arguments to @code{define-abbrev}, and manipulate them with "
"the following functions:"
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:429
#, no-wrap
msgid "abbrev-put abbrev prop val"
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:431
msgid "Set the property @var{prop} of @var{abbrev} to value @var{val}."
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:433
#, no-wrap
msgid "abbrev-get abbrev prop"
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:436
msgid ""
"Return the property @var{prop} of @var{abbrev}, or @code{nil} if the abbrev "
"has no such property."
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:439
msgid "The following properties have special meanings:"
msgstr ""

#. type: item
#: original_texis/abbrevs.texi:441
#, no-wrap
msgid ":count"
msgstr ""

#. type: table
#: original_texis/abbrevs.texi:445
msgid ""
"This property counts the number of times the abbrev has been expanded.  If "
"not explicitly set, it is initialized to 0 by @code{define-abbrev}."
msgstr ""

#. type: item
#: original_texis/abbrevs.texi:446
#, no-wrap
msgid ":system"
msgstr ""

#. type: table
#: original_texis/abbrevs.texi:449
msgid ""
"If non-@code{nil}, this property marks the abbrev as a system abbrev.  Such "
"abbrevs are not saved (@pxref{Abbrev Files})."
msgstr ""

#. type: item
#: original_texis/abbrevs.texi:450 original_texis/abbrevs.texi:482
#, no-wrap
msgid ":enable-function"
msgstr ""

#. type: table
#: original_texis/abbrevs.texi:454
msgid ""
"If non-@code{nil}, this property should be a function of no arguments which "
"returns @code{nil} if the abbrev should not be used and @code{t} otherwise."
msgstr ""

#. type: item
#: original_texis/abbrevs.texi:455 original_texis/abbrevs.texi:488
#, no-wrap
msgid ":case-fixed"
msgstr ""

#. type: table
#: original_texis/abbrevs.texi:460
msgid ""
"If non-@code{nil}, this property indicates that the case of the abbrev's "
"name is significant and should only match a text with the same pattern of "
"capitalization.  It also disables the code that modifies the capitalization "
"of the expansion."
msgstr ""

#. type: cindex
#: original_texis/abbrevs.texi:464
#, no-wrap
msgid "abbrev table properties"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:469
msgid ""
"Like abbrevs, abbrev tables have properties, some of which influence the way "
"they work.  You can provide them as arguments to @code{define-abbrev-table}, "
"and manipulate them with the functions:"
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:470
#, no-wrap
msgid "abbrev-table-put table prop val"
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:472
msgid "Set the property @var{prop} of abbrev table @var{table} to value @var{val}."
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:474
#, no-wrap
msgid "abbrev-table-get table prop"
msgstr ""

#. type: defun
#: original_texis/abbrevs.texi:477
msgid ""
"Return the property @var{prop} of abbrev table @var{table}, or @code{nil} if "
"@var{table} has no such property."
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:480
msgid "The following properties have special meaning:"
msgstr ""

#. type: table
#: original_texis/abbrevs.texi:487
msgid ""
"This is like the @code{:enable-function} abbrev property except that it "
"applies to all abbrevs in the table.  It is used before even trying to find "
"the abbrev before point, so it can dynamically modify the abbrev table."
msgstr ""

#. type: table
#: original_texis/abbrevs.texi:491
msgid ""
"This is like the @code{:case-fixed} abbrev property except that it applies "
"to all abbrevs in the table."
msgstr ""

#. type: item
#: original_texis/abbrevs.texi:492
#, no-wrap
msgid ":regexp"
msgstr ""

#. type: table
#: original_texis/abbrevs.texi:501
msgid ""
"If non-@code{nil}, this property is a regular expression that indicates how "
"to extract the name of the abbrev before point, before looking it up in the "
"table.  When the regular expression matches before point, the abbrev name is "
"expected to be in submatch 1.  If this property is @code{nil}, the default "
"is to use @code{backward-word} and @code{forward-word} to find the name.  "
"This property allows the use of abbrevs whose name contains characters of "
"non-word syntax."
msgstr ""

#. type: item
#: original_texis/abbrevs.texi:502
#, no-wrap
msgid ":parents"
msgstr ""

#. type: table
#: original_texis/abbrevs.texi:505
msgid "This property holds a list of tables from which to inherit other abbrevs."
msgstr ""

#. type: item
#: original_texis/abbrevs.texi:506
#, no-wrap
msgid ":abbrev-table-modiff"
msgstr ""

#. type: table
#: original_texis/abbrevs.texi:509
msgid ""
"This property holds a counter incremented each time a new abbrev is added to "
"the table."
msgstr ""
