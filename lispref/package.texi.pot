# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2024-05-02 15:32+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: node
#: original_texis/package.texi:5
#, no-wrap
msgid "Packaging"
msgstr ""

#. type: chapter
#: original_texis/package.texi:6
#, no-wrap
msgid "Preparing Lisp code for distribution"
msgstr ""

#. type: cindex
#: original_texis/package.texi:7
#, no-wrap
msgid "package"
msgstr ""

#. type: cindex
#: original_texis/package.texi:8
#, no-wrap
msgid "Lisp package"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:14
msgid ""
"Emacs provides a standard way to distribute Emacs Lisp code to users.  A "
"@dfn{package} is a collection of one or more files, formatted and bundled in "
"such a way that users can easily download, install, uninstall, and upgrade "
"it."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:19
msgid ""
"The following sections describe how to create a package, and how to put it "
"in a @dfn{package archive} for others to download.  @xref{Packages,,, emacs, "
"The GNU Emacs Manual}, for a description of user-level features of the "
"packaging system."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:24
msgid ""
"These sections are mostly directed towards package archive "
"maintainers---much of this information is not relevant for package authors "
"(i.e., people who write code that will be distributed via these archives)."
msgstr ""

#. type: section
#: original_texis/package.texi:31 original_texis/package.texi:33
#: original_texis/package.texi:34
#, no-wrap
msgid "Packaging Basics"
msgstr ""

#. type: menuentry
#: original_texis/package.texi:31
msgid "The basic concepts of Emacs Lisp packages."
msgstr ""

#. type: section
#: original_texis/package.texi:31 original_texis/package.texi:143
#: original_texis/package.texi:144
#, no-wrap
msgid "Simple Packages"
msgstr ""

#. type: menuentry
#: original_texis/package.texi:31
msgid "How to package a single .el file."
msgstr ""

#. type: section
#: original_texis/package.texi:31 original_texis/package.texi:212
#: original_texis/package.texi:213
#, no-wrap
msgid "Multi-file Packages"
msgstr ""

#. type: menuentry
#: original_texis/package.texi:31
msgid "How to package multiple files."
msgstr ""

#. type: node
#: original_texis/package.texi:31 original_texis/package.texi:296
#, no-wrap
msgid "Package Archives"
msgstr ""

#. type: menuentry
#: original_texis/package.texi:31
msgid "Maintaining package archives."
msgstr ""

#. type: node
#: original_texis/package.texi:31 original_texis/package.texi:378
#, no-wrap
msgid "Archive Web Server"
msgstr ""

#. type: menuentry
#: original_texis/package.texi:31
msgid "Interfacing to an archive web server."
msgstr ""

#. type: cindex
#: original_texis/package.texi:35
#, no-wrap
msgid "package attributes"
msgstr ""

#. type: cindex
#: original_texis/package.texi:36
#, no-wrap
msgid "package name"
msgstr ""

#. type: cindex
#: original_texis/package.texi:37
#, no-wrap
msgid "package version"
msgstr ""

#. type: cindex
#: original_texis/package.texi:38
#, no-wrap
msgid "dependencies"
msgstr ""

#. type: cindex
#: original_texis/package.texi:39
#, no-wrap
msgid "package dependencies"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:46
msgid ""
"A package is either a @dfn{simple package} or a @dfn{multi-file package}.  A "
"simple package is stored in a package archive as a single Emacs Lisp file, "
"while a multi-file package is stored as a tar file (containing multiple Lisp "
"files, and possibly non-Lisp files such as a manual)."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:51
msgid ""
"In ordinary usage, the difference between simple packages and multi-file "
"packages is relatively unimportant; the Package Menu interface makes no "
"distinction between them.  However, the procedure for creating them differs, "
"as explained in the following sections."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:54
msgid "Each package (whether simple or multi-file) has certain @dfn{attributes}:"
msgstr ""

#. type: item
#: original_texis/package.texi:56
#, no-wrap
msgid "Name"
msgstr ""

#. type: table
#: original_texis/package.texi:59
msgid ""
"A short word (e.g., @samp{auctex}).  This is usually also the symbol prefix "
"used in the program (@pxref{Coding Conventions})."
msgstr ""

#. type: item
#: original_texis/package.texi:60
#, no-wrap
msgid "Version"
msgstr ""

#. type: table
#: original_texis/package.texi:65
msgid ""
"A version number, in a form that the function @code{version-to-list} "
"understands (e.g., @samp{11.86}).  Each release of a package should be "
"accompanied by an increase in the version number so that it will be "
"recognized as an upgrade by users querying the package archive."
msgstr ""

#. type: item
#: original_texis/package.texi:66
#, no-wrap
msgid "Brief description"
msgstr ""

#. type: table
#: original_texis/package.texi:69
msgid ""
"This is shown when the package is listed in the Package Menu.  It should "
"occupy a single line, ideally in 36 characters or less."
msgstr ""

#. type: item
#: original_texis/package.texi:70
#, no-wrap
msgid "Long description"
msgstr ""

#. type: table
#: original_texis/package.texi:76
msgid ""
"This is shown in the buffer created by @kbd{C-h P} "
"(@code{describe-package}), following the package's brief description and "
"installation status.  It normally spans multiple lines, and should fully "
"describe the package's capabilities and how to begin using it once it is "
"installed."
msgstr ""

#. type: item
#: original_texis/package.texi:77
#, no-wrap
msgid "Dependencies"
msgstr ""

#. type: table
#: original_texis/package.texi:84
msgid ""
"A list of other packages (possibly including minimal acceptable version "
"numbers) on which this package depends.  The list may be empty, meaning this "
"package has no dependencies.  Otherwise, installing this package also "
"automatically installs its dependencies, recursively; if any dependency "
"cannot be found, the package cannot be installed."
msgstr ""

#. type: cindex
#: original_texis/package.texi:86
#, no-wrap
msgid "content directory, package"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:95
msgid ""
"Installing a package, either via the command @code{package-install-file}, or "
"via the Package Menu, creates a subdirectory of @code{package-user-dir} "
"named @file{@var{name}-@var{version}}, where @var{name} is the package's "
"name and @var{version} its version (e.g., "
"@file{~/.emacs.d/elpa/auctex-11.86/}).  We call this the package's "
"@dfn{content directory}.  It is where Emacs puts the package's contents (the "
"single Lisp file for a simple package, or the files extracted from a "
"multi-file package)."
msgstr ""

#. type: cindex
#: original_texis/package.texi:96
#, no-wrap
msgid "package autoloads"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:108
msgid ""
"Emacs then searches every Lisp file in the content directory for autoload "
"magic comments (@pxref{Autoload}).  These autoload definitions are saved to "
"a file named @file{@var{name}-autoloads.el} in the content directory.  They "
"are typically used to autoload the principal user commands defined in the "
"package, but they can also perform other tasks, such as adding an element to "
"@code{auto-mode-alist} (@pxref{Auto Major Mode}).  Note that a package "
"typically does @emph{not} autoload every function and variable defined "
"within it---only the handful of commands typically called to begin using the "
"package.  Emacs then byte-compiles every Lisp file in the package."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:112
msgid ""
"After installation, the installed package is @dfn{loaded}: Emacs adds the "
"package's content directory to @code{load-path}, and evaluates the autoload "
"definitions in @file{@var{name}-autoloads.el}."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:120
msgid ""
"Whenever Emacs starts up, it automatically calls the function "
"@code{package-activate-all} to make installed packages available to the "
"current session.  This is done after loading the early init file, but before "
"loading the regular init file (@pxref{Startup Summary}).  Packages are not "
"automatically made available if the user option "
"@code{package-enable-at-startup} is set to @code{nil} in the early init "
"file."
msgstr ""

#. type: defun
#: original_texis/package.texi:121
#, no-wrap
msgid "package-activate-all"
msgstr ""

#. type: defun
#: original_texis/package.texi:126
msgid ""
"This function makes the packages available to the current session.  The user "
"option @code{package-load-list} specifies which packages to make available; "
"by default, all installed packages are made available.  @xref{Package "
"Installation,,, emacs, The GNU Emacs Manual}."
msgstr ""

#. type: defun
#: original_texis/package.texi:132
msgid ""
"In most cases, you should not need to call @code{package-activate-all}, as "
"this is done automatically during startup.  Simply make sure to put any code "
"that should run before @code{package-activate-all} in the early init file, "
"and any code that should run after it in the primary init file (@pxref{Init "
"File,,, emacs, The GNU Emacs Manual})."
msgstr ""

#. type: deffn
#: original_texis/package.texi:134
#, no-wrap
msgid "Command package-initialize &optional no-activate"
msgstr ""

#. type: deffn
#: original_texis/package.texi:137
msgid ""
"This function initializes Emacs' internal record of which packages are "
"installed, and then calls @code{package-activate-all}."
msgstr ""

#. type: deffn
#: original_texis/package.texi:141
msgid ""
"The optional argument @var{no-activate}, if non-@code{nil}, causes Emacs to "
"update its record of installed packages without actually making them "
"available."
msgstr ""

#. type: cindex
#: original_texis/package.texi:145
#, no-wrap
msgid "single file package"
msgstr ""

#. type: cindex
#: original_texis/package.texi:146
#, no-wrap
msgid "simple package"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:152
msgid ""
"A simple package consists of a single Emacs Lisp source file.  The file must "
"conform to the Emacs Lisp library header conventions (@pxref{Library "
"Headers}).  The package's attributes are taken from the various headers, as "
"illustrated by the following example:"
msgstr ""

#. type: group
#: original_texis/package.texi:156
#, no-wrap
msgid ""
";;; superfrobnicator.el --- Frobnicate and bifurcate flanges  -*- "
"lexical-binding:t -*-\n"
"\n"
msgstr ""

#. type: group
#: original_texis/package.texi:158
#, no-wrap
msgid ";; Copyright (C) 2022 Free Software Foundation, Inc.\n"
msgstr ""

#. type: example
#: original_texis/package.texi:165
#, no-wrap
msgid ""
";; Author: J. R. Hacker <jrh@@example.com>\n"
";; Version: 1.3\n"
";; Package-Requires: ((flange \"1.0\"))\n"
";; Keywords: multimedia, hypermedia\n"
";; URL: https://example.com/jrhacker/superfrobnicate\n"
"\n"
msgstr ""

#. type: example
#: original_texis/package.texi:167
#, no-wrap
msgid ""
"@dots{}\n"
"\n"
msgstr ""

#. type: example
#: original_texis/package.texi:169
#, no-wrap
msgid ""
";;; Commentary:\n"
"\n"
msgstr ""

#. type: example
#: original_texis/package.texi:173
#, no-wrap
msgid ""
";; This package provides a minor mode to frobnicate and/or\n"
";; bifurcate any flanges you desire.  To activate it, just type\n"
"@dots{}\n"
"\n"
msgstr ""

#. type: example
#: original_texis/package.texi:177
#, no-wrap
msgid ""
";;;###autoload\n"
"(define-minor-mode superfrobnicator-mode\n"
"@dots{}\n"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:181
msgid ""
"The name of the package is the same as the base name of the file, as written "
"on the first line.  Here, it is @samp{superfrobnicator}."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:184
msgid ""
"The brief description is also taken from the first line.  Here, it is "
"@samp{Frobnicate and bifurcate flanges}."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:188
msgid ""
"The version number comes from the @samp{Package-Version} header, if it "
"exists, or from the @samp{Version} header otherwise.  One or the other "
"@emph{must} be present.  Here, the version number is 1.3."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:193
msgid ""
"If the file has a @samp{;;; Commentary:} section, this section is used as "
"the long description.  (When displaying the description, Emacs omits the "
"@samp{;;; Commentary:} line, as well as the leading comment characters in "
"the commentary itself.)"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:199
msgid ""
"If the file has a @samp{Package-Requires} header, that is used as the "
"package dependencies.  In the above example, the package depends on the "
"@samp{flange} package, version 1.0 or higher.  @xref{Library Headers}, for a "
"description of the @samp{Package-Requires} header.  If the header is "
"omitted, the package has no dependencies."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:204
msgid ""
"The @samp{Keywords} and @samp{URL} headers are optional, but recommended.  "
"The command @code{describe-package} uses these to add links to its output.  "
"The @samp{Keywords} header should contain at least one standard keyword from "
"the @code{finder-known-keywords} list."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:208
msgid ""
"The file ought to also contain one or more autoload magic comments, as "
"explained in @ref{Packaging Basics}.  In the above example, a magic comment "
"autoloads @code{superfrobnicator-mode}."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:211
msgid ""
"@xref{Package Archives}, for an explanation of how to add a single-file "
"package to a package archive."
msgstr ""

#. type: cindex
#: original_texis/package.texi:214
#, no-wrap
msgid "multi-file package"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:219
msgid ""
"A multi-file package is less convenient to create than a single-file "
"package, but it offers more features: it can include multiple Emacs Lisp "
"files, an Info manual, and other file types (such as images)."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:228
msgid ""
"Prior to installation, a multi-file package is stored in a package archive "
"as a tar file.  The tar file must be named "
"@file{@var{name}-@var{version}.tar}, where @var{name} is the package name "
"and @var{version} is the version number.  Its contents, once extracted, must "
"all appear in a directory named @file{@var{name}-@var{version}}, the "
"@dfn{content directory} (@pxref{Packaging Basics}).  Files may also extract "
"into subdirectories of the content directory."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:234
msgid ""
"One of the files in the content directory must be named "
"@file{@var{name}-pkg.el}.  It must contain a single Lisp form, consisting of "
"a call to the function @code{define-package}, described below.  This defines "
"the package's attributes: version, brief description, and requirements."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:240
msgid ""
"For example, if we distribute version 1.3 of the superfrobnicator as a "
"multi-file package, the tar file would be @file{superfrobnicator-1.3.tar}.  "
"Its contents would extract into the directory @file{superfrobnicator-1.3}, "
"and one of these would be the file @file{superfrobnicator-pkg.el}."
msgstr ""

#. type: defun
#: original_texis/package.texi:241
#, no-wrap
msgid "define-package name version &optional docstring requirements"
msgstr ""

#. type: defun
#: original_texis/package.texi:246
msgid ""
"This function defines a package.  @var{name} is the package name, a string.  "
"@var{version} is the version, as a string of a form that can be understood "
"by the function @code{version-to-list}.  @var{docstring} is the brief "
"description."
msgstr ""

#. type: defun
#: original_texis/package.texi:252
msgid ""
"@var{requirements} is a list of required packages and their versions.  Each "
"element in this list should have the form @code{(@var{dep-name} "
"@var{dep-version})}, where @var{dep-name} is a symbol whose name is the "
"dependency's package name, and @var{dep-version} is the dependency's version "
"(a string)."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:257
msgid ""
"If the content directory contains a file named @file{README}, this file is "
"used as the long description (overriding any @samp{;;; Commentary:} "
"section)."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:265
msgid ""
"If the content directory contains a file named @file{dir}, this is assumed "
"to be an Info directory file made with @command{install-info}.  "
"@xref{Invoking install-info, Invoking install-info, Invoking install-info, "
"texinfo, Texinfo}.  The relevant Info files should also be present in the "
"content directory.  In this case, Emacs will automatically add the content "
"directory to @code{Info-directory-list} when the package is activated."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:269
msgid ""
"Do not include any @file{.elc} files in the package.  Those are created when "
"the package is installed.  Note that there is no way to control the order in "
"which files are byte-compiled."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:275
msgid ""
"Do not include any file named @file{@var{name}-autoloads.el}.  This file is "
"reserved for the package's autoload definitions (@pxref{Packaging Basics}).  "
"It is created automatically when the package is installed, by searching all "
"the Lisp files in the package for autoload magic comments."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:279
msgid ""
"If the multi-file package contains auxiliary data files (such as images), "
"the package's Lisp code can refer to these files via the variable "
"@code{load-file-name} (@pxref{Loading}).  Here is an example:"
msgstr ""

#. type: smallexample
#: original_texis/package.texi:282
#, no-wrap
msgid ""
"(defconst superfrobnicator-base (file-name-directory load-file-name))\n"
"\n"
msgstr ""

#. type: smallexample
#: original_texis/package.texi:285
#, no-wrap
msgid ""
"(defun superfrobnicator-fetch-image (file)\n"
"  (expand-file-name file superfrobnicator-base))\n"
msgstr ""

#. type: cindex
#: original_texis/package.texi:287
#, no-wrap
msgid "@file{.elpaignore} file"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:295
msgid ""
"If your package contains files that you don't wish to distribute to users "
"(e.g.@: regression tests), you can add them to an @file{.elpaignore} file.  "
"In this file, each line lists a file or a wildcard matching files; those "
"files should be ignored when producing your package's tarball on ELPA "
"(@pxref{Package Archives}).  (ELPA will pass this file to the @command{tar} "
"command via the @option{-X} command-line option, when it prepares the "
"package for download.)"
msgstr ""

#. type: section
#: original_texis/package.texi:297
#, no-wrap
msgid "Creating and Maintaining Package Archives"
msgstr ""

#. type: cindex
#: original_texis/package.texi:298
#, no-wrap
msgid "package archive"
msgstr ""

#. type: cindex
#: original_texis/package.texi:300
#, no-wrap
msgid "GNU ELPA"
msgstr ""

#. type: cindex
#: original_texis/package.texi:301
#, no-wrap
msgid "non-GNU ELPA"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:308
msgid ""
"Via the Package Menu, users may download packages from @dfn{package "
"archives}.  Such archives are specified by the variable "
"@code{package-archives}, whose default value lists the archives hosted on "
"@url{https://elpa.gnu.org, GNU ELPA} and @url{https://elpa.nongnu.org, "
"non-GNU ELPA}.  This section describes how to set up and maintain a package "
"archive."
msgstr ""

#. type: cindex
#: original_texis/package.texi:309
#, no-wrap
msgid "base location, package archive"
msgstr ""

#. type: defopt
#: original_texis/package.texi:310
#, no-wrap
msgid "package-archives"
msgstr ""

#. type: defopt
#: original_texis/package.texi:313
msgid ""
"The value of this variable is an alist of package archives recognized by the "
"Emacs package manager."
msgstr ""

#. type: defopt
#: original_texis/package.texi:318
msgid ""
"Each alist element corresponds to one archive, and should have the form "
"@code{(@var{id} . @var{location})}, where @var{id} is the name of the "
"archive (a string) and @var{location} is its @dfn{base location} (a string)."
msgstr ""

#. type: defopt
#: original_texis/package.texi:322
msgid ""
"If the base location starts with @samp{http:} or @samp{https:}, it is "
"treated as an HTTP(S) URL, and packages are downloaded from this archive via "
"HTTP(S) (as is the case for the default GNU archive)."
msgstr ""

#. type: defopt
#: original_texis/package.texi:326
msgid ""
"Otherwise, the base location should be a directory name.  In this case, "
"Emacs retrieves packages from this archive via ordinary file access.  Such "
"local archives are mainly useful for testing."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:332
msgid ""
"A package archive is simply a directory in which the package files, and "
"associated files, are stored.  If you want the archive to be reachable via "
"HTTP, this directory must be accessible to a web server; @xref{Archive Web "
"Server}."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:338
msgid ""
"A convenient way to set up and update a package archive is via the "
"@code{package-x} library.  This is included with Emacs, but not loaded by "
"default; type @kbd{M-x load-library @key{RET} package-x @key{RET}} to load "
"it, or add @code{(require 'package-x)} to your init file.  @xref{Lisp "
"Libraries,, Lisp Libraries, emacs, The GNU Emacs Manual}."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:342
msgid ""
"After you create an archive, remember that it is not accessible in the "
"Package Menu interface unless it is in @code{package-archives}."
msgstr ""

#. type: cindex
#: original_texis/package.texi:343
#, no-wrap
msgid "package archive security"
msgstr ""

#. type: cindex
#: original_texis/package.texi:344
#, no-wrap
msgid "package signing"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:351
msgid ""
"Maintaining a public package archive entails a degree of responsibility.  "
"When Emacs users install packages from your archive, those packages can "
"cause Emacs to run arbitrary code with the permissions of the installing "
"user.  (This is true for Emacs code in general, not just for packages.)  So "
"you should ensure that your archive is well-maintained and keep the hosting "
"system secure."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:356
msgid ""
"One way to increase the security of your packages is to @dfn{sign} them "
"using a cryptographic key.  If you have generated a private/public gpg key "
"pair, you can use gpg to sign the package like this:"
msgstr ""

#. type: example
#: original_texis/package.texi:360
#, no-wrap
msgid "gpg -ba -o @var{file}.sig @var{file}\n"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:371
msgid ""
"For a single-file package, @var{file} is the package Lisp file; for a "
"multi-file package, it is the package tar file.  You can also sign the "
"archive's contents file in the same way.  Make the @file{.sig} files "
"available in the same location as the packages.  You should also make your "
"public key available for people to download; e.g., by uploading it to a key "
"server such as @url{https://pgp.mit.edu/}.  When people install packages "
"from your archive, they can use your public key to verify the signatures."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:377
msgid ""
"A full explanation of these matters is outside the scope of this manual.  "
"For more information on cryptographic keys and signing, @pxref{Top,, GnuPG, "
"gnupg, The GNU Privacy Guard Manual}.  Emacs comes with an interface to GNU "
"Privacy Guard, @pxref{Top,, EasyPG, epa, Emacs EasyPG Assistant Manual}."
msgstr ""

#. type: section
#: original_texis/package.texi:379
#, no-wrap
msgid "Interfacing to an archive web server"
msgstr ""

#. type: cindex
#: original_texis/package.texi:380
#, no-wrap
msgid "archive web server"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:384
msgid ""
"A web server providing access to a package archive must support the "
"following queries:"
msgstr ""

#. type: item
#: original_texis/package.texi:386
#, no-wrap
msgid "archive-contents"
msgstr ""

#. type: table
#: original_texis/package.texi:390
msgid ""
"Return a lisp form describing the archive contents. The form is a list of "
"'package-desc' structures (see @file{package.el}), except the first element "
"of the list is the archive version."
msgstr ""

#. type: item
#: original_texis/package.texi:391
#, no-wrap
msgid "<package name>-readme.txt"
msgstr ""

#. type: table
#: original_texis/package.texi:393
msgid "Return the long description of the package."
msgstr ""

#. type: item
#: original_texis/package.texi:394
#, no-wrap
msgid "<file name>.sig"
msgstr ""

#. type: table
#: original_texis/package.texi:396
msgid "Return the signature for the file."
msgstr ""

#. type: item
#: original_texis/package.texi:397
#, no-wrap
msgid "<file name>"
msgstr ""

#. type: table
#: original_texis/package.texi:400
msgid ""
"Return the file. This will be the tarball for a multi-file package, or the "
"single file for a simple package."
msgstr ""
