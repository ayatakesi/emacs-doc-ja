# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2024-06-30 14:10+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: chapter
#: original_texis/frames.texi:6 original_texis/frames.texi:7
#, no-wrap
msgid "Frames"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:8
#, no-wrap
msgid "frame"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:16
msgid ""
"A @dfn{frame} is a screen object that contains one or more Emacs windows "
"(@pxref{Windows}).  It is the kind of object called a ``window'' in the "
"terminology of graphical environments; but we can't call it a ``window'' "
"here, because Emacs uses that word in a different way.  In Emacs Lisp, a "
"@dfn{frame object} is a Lisp object that represents a frame on the screen.  "
"@xref{Frame Type}."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:20
msgid ""
"A frame initially contains a single main window and/or a minibuffer window; "
"you can subdivide the main window vertically or horizontally into smaller "
"windows.  @xref{Splitting Windows}."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:21
#, no-wrap
msgid "terminal"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:25
msgid ""
"A @dfn{terminal} is a display device capable of displaying one or more Emacs "
"frames.  In Emacs Lisp, a @dfn{terminal object} is a Lisp object that "
"represents a terminal.  @xref{Terminal Type}."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:26
#, no-wrap
msgid "text terminal"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:27
#, no-wrap
msgid "graphical terminal"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:28
#, no-wrap
msgid "graphical display"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:38
msgid ""
"There are two classes of terminals: @dfn{text terminals} and @dfn{graphical "
"terminals}.  Text terminals are non-graphics-capable displays, including "
"@command{xterm} and other terminal emulators.  On a text terminal, each "
"Emacs frame occupies the terminal's entire screen; although you can create "
"additional frames and switch between them, the terminal only shows one frame "
"at a time.  Graphical terminals, on the other hand, are managed by graphical "
"display systems such as the X Window System, which allow Emacs to show "
"multiple frames simultaneously on the same display."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:45
msgid ""
"On GNU and Unix systems, you can create additional frames on any available "
"terminal, within a single Emacs session, regardless of whether Emacs was "
"started on a text or graphical terminal.  Emacs can display on both "
"graphical and text terminals simultaneously.  This comes in handy, for "
"instance, when you connect to the same session from several remote "
"locations.  @xref{Multiple Terminals}."
msgstr ""

#. type: defun
#: original_texis/frames.texi:46
#, no-wrap
msgid "framep object"
msgstr ""

#. type: defun
#: original_texis/frames.texi:50
msgid ""
"This predicate returns a non-@code{nil} value if @var{object} is a frame, "
"and @code{nil} otherwise.  For a frame, the value indicates which kind of "
"display the frame uses:"
msgstr ""

#. type: code{#1}
#: original_texis/frames.texi:52 original_texis/frames.texi:3091
#, no-wrap
msgid "t"
msgstr ""

#. type: table
#: original_texis/frames.texi:54
msgid "The frame is displayed on a text terminal."
msgstr ""

#. type: item
#: original_texis/frames.texi:54
#, no-wrap
msgid "x"
msgstr ""

#. type: table
#: original_texis/frames.texi:56
msgid "The frame is displayed on an X graphical terminal."
msgstr ""

#. type: item
#: original_texis/frames.texi:56
#, no-wrap
msgid "w32"
msgstr ""

#. type: table
#: original_texis/frames.texi:58
msgid "The frame is displayed on a MS-Windows graphical terminal."
msgstr ""

#. type: item
#: original_texis/frames.texi:58
#, no-wrap
msgid "ns"
msgstr ""

#. type: table
#: original_texis/frames.texi:61
msgid "The frame is displayed on a GNUstep or Macintosh Cocoa graphical terminal."
msgstr ""

#. type: item
#: original_texis/frames.texi:61
#, no-wrap
msgid "pc"
msgstr ""

#. type: table
#: original_texis/frames.texi:63
msgid "The frame is displayed on an MS-DOS terminal."
msgstr ""

#. type: item
#: original_texis/frames.texi:63
#, no-wrap
msgid "pgtk"
msgstr ""

#. type: table
#: original_texis/frames.texi:65
msgid "The frame is displayed using pure GTK facilities."
msgstr ""

#. type: defun
#: original_texis/frames.texi:68
#, no-wrap
msgid "frame-terminal &optional frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:72
msgid ""
"This function returns the terminal object that displays @var{frame}.  If "
"@var{frame} is @code{nil} or unspecified, it defaults to the selected frame."
msgstr ""

#. type: defun
#: original_texis/frames.texi:74
#, no-wrap
msgid "terminal-live-p object"
msgstr ""

#. type: defun
#: original_texis/frames.texi:80
msgid ""
"This predicate returns a non-@code{nil} value if @var{object} is a terminal "
"that is live (i.e., not deleted), and @code{nil} otherwise.  For live "
"terminals, the return value indicates what kind of frames are displayed on "
"that terminal; the list of possible values is the same as for @code{framep} "
"above."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:82
#, no-wrap
msgid "top-level frame"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:88
msgid ""
"On a graphical terminal we distinguish two types of frames: A normal "
"@dfn{top-level frame} is a frame whose window-system window is a child of "
"the window-system's root window for that terminal.  A child frame is a frame "
"whose window-system window is the child of the window-system window of "
"another Emacs frame.  @xref{Child Frames}."
msgstr ""

#. type: section
#: original_texis/frames.texi:116 original_texis/frames.texi:119
#: original_texis/frames.texi:120
#, no-wrap
msgid "Creating Frames"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:116
msgid "Creating additional frames."
msgstr ""

#. type: section
#: original_texis/frames.texi:116 original_texis/frames.texi:200
#: original_texis/frames.texi:201
#, no-wrap
msgid "Multiple Terminals"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:116
msgid "Displaying on several different devices."
msgstr ""

#. type: section
#: original_texis/frames.texi:116 original_texis/frames.texi:477
#: original_texis/frames.texi:478
#, no-wrap
msgid "Frame Geometry"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:116
msgid "Geometric properties of frames."
msgstr ""

#. type: section
#: original_texis/frames.texi:116 original_texis/frames.texi:1267
#: original_texis/frames.texi:1268
#, no-wrap
msgid "Frame Parameters"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:116
msgid "Controlling frame size, position, font, etc."
msgstr ""

#. type: section
#: original_texis/frames.texi:116 original_texis/frames.texi:2574
#: original_texis/frames.texi:2575
#, no-wrap
msgid "Terminal Parameters"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:116
msgid "Parameters common for all frames on terminal."
msgstr ""

#. type: section
#: original_texis/frames.texi:116 original_texis/frames.texi:2633
#: original_texis/frames.texi:2634
#, no-wrap
msgid "Frame Titles"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:116
msgid "Automatic updating of frame titles."
msgstr ""

#. type: section
#: original_texis/frames.texi:116 original_texis/frames.texi:2683
#: original_texis/frames.texi:2684
#, no-wrap
msgid "Deleting Frames"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:116
msgid "Frames last until explicitly deleted."
msgstr ""

#. type: section
#: original_texis/frames.texi:116 original_texis/frames.texi:2745
#: original_texis/frames.texi:2746
#, no-wrap
msgid "Finding All Frames"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:116
msgid "How to examine all existing frames."
msgstr ""

#. type: section
#: original_texis/frames.texi:116 original_texis/frames.texi:2825
#: original_texis/frames.texi:2826
#, no-wrap
msgid "Minibuffers and Frames"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:116
msgid "How a frame finds the minibuffer to use."
msgstr ""

#. type: section
#: original_texis/frames.texi:116 original_texis/frames.texi:2859
#: original_texis/frames.texi:2860
#, no-wrap
msgid "Input Focus"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:116
msgid "Specifying the selected frame."
msgstr ""

#. type: section
#: original_texis/frames.texi:116 original_texis/frames.texi:3128
#: original_texis/frames.texi:3129
#, no-wrap
msgid "Visibility of Frames"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:116
msgid "Frames may be visible or invisible, or icons."
msgstr ""

#. type: node
#: original_texis/frames.texi:116 original_texis/frames.texi:3207
#, no-wrap
msgid "Raising and Lowering"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:116
msgid "Raising, Lowering and Restacking Frames."
msgstr ""

#. type: section
#: original_texis/frames.texi:116 original_texis/frames.texi:3302
#: original_texis/frames.texi:3303
#, no-wrap
msgid "Frame Configurations"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:116
msgid "Saving the state of all frames."
msgstr ""

#. type: section
#: original_texis/frames.texi:116 original_texis/frames.texi:3326
#: original_texis/frames.texi:3327
#, no-wrap
msgid "Child Frames"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:116
msgid "Making a frame the child of another."
msgstr ""

#. type: section
#: original_texis/frames.texi:116 original_texis/frames.texi:3566
#: original_texis/frames.texi:3567
#, no-wrap
msgid "Mouse Tracking"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:116
msgid "Getting events that say when the mouse moves."
msgstr ""

#. type: section
#: original_texis/frames.texi:116 original_texis/frames.texi:3660
#: original_texis/frames.texi:3661
#, no-wrap
msgid "Mouse Position"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:116
msgid "Asking where the mouse is, or moving it."
msgstr ""

#. type: section
#: original_texis/frames.texi:116 original_texis/frames.texi:3750
#: original_texis/frames.texi:3751
#, no-wrap
msgid "Pop-Up Menus"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:116
msgid "Displaying a menu for the user to select from."
msgstr ""

#. type: section
#: original_texis/frames.texi:116 original_texis/frames.texi:3851
#: original_texis/frames.texi:3852
#, no-wrap
msgid "Dialog Boxes"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:116
msgid "Displaying a box to ask yes or no."
msgstr ""

#. type: section
#: original_texis/frames.texi:116 original_texis/frames.texi:3908
#: original_texis/frames.texi:3909
#, no-wrap
msgid "Pointer Shape"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:116
msgid "Specifying the shape of the mouse pointer."
msgstr ""

#. type: section
#: original_texis/frames.texi:116 original_texis/frames.texi:3977
#: original_texis/frames.texi:3978
#, no-wrap
msgid "Window System Selections"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:116
msgid "Transferring text to and from other X clients."
msgstr ""

#. type: section
#: original_texis/frames.texi:116 original_texis/frames.texi:4058
#: original_texis/frames.texi:4059
#, no-wrap
msgid "Yanking Media"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:116
msgid "Yanking things that aren't plain text."
msgstr ""

#. type: section
#: original_texis/frames.texi:116 original_texis/frames.texi:4099
#: original_texis/frames.texi:4100
#, no-wrap
msgid "Drag and Drop"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:116
msgid "Internals of Drag-and-Drop implementation."
msgstr ""

#. type: section
#: original_texis/frames.texi:116 original_texis/frames.texi:4434
#: original_texis/frames.texi:4435
#, no-wrap
msgid "Color Names"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:116
msgid "Getting the definitions of color names."
msgstr ""

#. type: section
#: original_texis/frames.texi:116 original_texis/frames.texi:4557
#: original_texis/frames.texi:4558
#, no-wrap
msgid "Text Terminal Colors"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:116
msgid "Defining colors for text terminals."
msgstr ""

#. type: node
#: original_texis/frames.texi:116 original_texis/frames.texi:4620
#, no-wrap
msgid "Resources"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:116
msgid "Getting resource values from the server."
msgstr ""

#. type: section
#: original_texis/frames.texi:116 original_texis/frames.texi:4687
#: original_texis/frames.texi:4688
#, no-wrap
msgid "Display Feature Testing"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:116
msgid "Determining the features of a terminal."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:121
#, no-wrap
msgid "frame creation"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:124
msgid "To create a new frame, call the function @code{make-frame}."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:125
#, no-wrap
msgid "Command make-frame &optional parameters"
msgstr ""

#. type: deffn
#: original_texis/frames.texi:128
msgid ""
"This function creates and returns a new frame, displaying the current "
"buffer."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:137
msgid ""
"The @var{parameters} argument is an alist that specifies frame parameters "
"for the new frame.  @xref{Frame Parameters}.  If you specify the "
"@code{terminal} parameter in @var{parameters}, the new frame is created on "
"that terminal.  Otherwise, if you specify the @code{window-system} frame "
"parameter in @var{parameters}, that determines whether the frame should be "
"displayed on a text terminal or a graphical terminal.  @xref{Window "
"Systems}.  If neither is specified, the new frame is created in the same "
"terminal as the selected frame."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:147
msgid ""
"Any parameters not mentioned in @var{parameters} default to the values in "
"the alist @code{default-frame-alist} (@pxref{Initial Parameters}); "
"parameters not specified there default from the X resources or its "
"equivalent on your operating system (@pxref{X Resources,, X Resources, "
"emacs, The GNU Emacs Manual}).  After the frame is created, this function "
"applies any parameters specified in @code{frame-inherited-parameters} (see "
"below) it has no assigned yet, taking the values from the frame that was "
"selected when @code{make-frame} was called."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:154
msgid ""
"Note that on multi-monitor displays (@pxref{Multiple Terminals}), the window "
"manager might position the frame differently than specified by the "
"positional parameters in @var{parameters} (@pxref{Position Parameters}).  "
"For example, some window managers have a policy of displaying the frame on "
"the monitor that contains the largest part of the window (a.k.a.@: the "
"@dfn{dominating} monitor)."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:159
msgid ""
"This function itself does not make the new frame the selected frame.  "
"@xref{Input Focus}.  The previously selected frame remains selected.  On "
"graphical terminals, however, the window system may select the new frame for "
"its own reasons."
msgstr ""

#. type: defvar
#: original_texis/frames.texi:161
#, no-wrap
msgid "before-make-frame-hook"
msgstr ""

#. type: defvar
#: original_texis/frames.texi:163
msgid "A normal hook run by @code{make-frame} before it creates the frame."
msgstr ""

#. type: defvar
#: original_texis/frames.texi:165
#, no-wrap
msgid "after-make-frame-functions"
msgstr ""

#. type: defvar
#: original_texis/frames.texi:169
msgid ""
"An abnormal hook run by @code{make-frame} after it created the frame.  Each "
"function in @code{after-make-frame-functions} receives one argument, the "
"frame just created."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:179
msgid ""
"Note that any functions added to these hooks by your initial file are "
"usually not run for the initial frame, since Emacs reads the initial file "
"only after creating that frame.  However, if the initial frame is specified "
"to use a separate minibuffer frame (@pxref{Minibuffers and Frames}), the "
"functions will be run for both, the minibuffer-less and the minibuffer "
"frame.  Alternatively, you can add functions to these hooks in your ``early "
"init file'' (@pxref{Init File}), in which case they will be in effect for "
"the initial frame as well."
msgstr ""

#. type: defvar
#: original_texis/frames.texi:180
#, no-wrap
msgid "frame-inherited-parameters"
msgstr ""

#. type: defvar
#: original_texis/frames.texi:187
msgid ""
"This variable specifies the list of frame parameters that a newly created "
"frame inherits from the currently selected frame.  For each parameter (a "
"symbol) that is an element in this list and has not been assigned earlier "
"when processing @code{make-frame}, the function sets the value of that "
"parameter in the created frame to its value in the selected frame."
msgstr ""

#. type: defopt
#: original_texis/frames.texi:189
#, no-wrap
msgid "server-after-make-frame-hook"
msgstr ""

#. type: defopt
#: original_texis/frames.texi:197
msgid ""
"A normal hook run when the Emacs server starts using a client frame.  When "
"this hook is called, the client frame is the selected one.  Note that, "
"depending on how @command{emacsclient} was invoked (@pxref{Invoking "
"emacsclient,,, emacs, The GNU Emacs Manual}), this client frame could be a "
"new frame created for the client, or it could be an existing frame that the "
"server reused for handling the client commands.  @xref{Emacs Server,,, "
"emacs, The GNU Emacs Manual}."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:202
#, no-wrap
msgid "multiple terminals"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:203
#, no-wrap
msgid "multi-tty"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:204
#, no-wrap
msgid "multiple X displays"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:205
#, no-wrap
msgid "displays, multiple"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:212
msgid ""
"Emacs represents each terminal as a @dfn{terminal object} data type "
"(@pxref{Terminal Type}).  On GNU and Unix systems, Emacs can use multiple "
"terminals simultaneously in each session.  On other systems, it can only use "
"a single terminal.  Each terminal object has the following attributes:"
msgstr ""

#. type: itemize
#: original_texis/frames.texi:217
msgid ""
"The name of the device used by the terminal (e.g., @samp{:0.0} or "
"@file{/dev/tty})."
msgstr ""

#. type: itemize
#: original_texis/frames.texi:221
msgid ""
"The terminal and keyboard coding systems used on the terminal.  "
"@xref{Terminal I/O Encoding}."
msgstr ""

#. type: itemize
#: original_texis/frames.texi:227
msgid ""
"The kind of display associated with the terminal.  This is the symbol "
"returned by the function @code{terminal-live-p} (i.e., @code{x}, @code{t}, "
"@code{w32}, @code{ns}, @code{pc}, @code{haiku}, or @code{pgtk}).  "
"@xref{Frames}."
msgstr ""

#. type: itemize
#: original_texis/frames.texi:230
msgid "A list of terminal parameters.  @xref{Terminal Parameters}."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:235
msgid ""
"There is no primitive for creating terminal objects.  Emacs creates them as "
"needed, such as when you call @code{make-frame-on-display} (described "
"below)."
msgstr ""

#. type: defun
#: original_texis/frames.texi:236
#, no-wrap
msgid "terminal-name &optional terminal"
msgstr ""

#. type: defun
#: original_texis/frames.texi:241
msgid ""
"This function returns the file name of the device used by @var{terminal}.  "
"If @var{terminal} is omitted or @code{nil}, it defaults to the selected "
"frame's terminal.  @var{terminal} can also be a frame, meaning that frame's "
"terminal."
msgstr ""

#. type: defun
#: original_texis/frames.texi:243
#, no-wrap
msgid "terminal-list"
msgstr ""

#. type: defun
#: original_texis/frames.texi:245
msgid "This function returns a list of all live terminal objects."
msgstr ""

#. type: defun
#: original_texis/frames.texi:247
#, no-wrap
msgid "get-device-terminal device"
msgstr ""

#. type: defun
#: original_texis/frames.texi:256
msgid ""
"This function returns a terminal whose device name is given by "
"@var{device}.  If @var{device} is a string, it can be either the file name "
"of a terminal device, or the name of an X display of the form "
"@samp{@var{host}:@var{server}.@var{screen}}.  If @var{device} is a frame, "
"this function returns that frame's terminal; @code{nil} means the selected "
"frame.  Finally, if @var{device} is a terminal object that represents a live "
"terminal, that terminal is returned.  The function signals an error if its "
"argument is none of the above."
msgstr ""

#. type: defun
#: original_texis/frames.texi:258
#, no-wrap
msgid "delete-terminal &optional terminal force"
msgstr ""

#. type: defun
#: original_texis/frames.texi:263
msgid ""
"This function deletes all frames on @var{terminal} and frees the resources "
"used by it.  It runs the abnormal hook @code{delete-terminal-functions}, "
"passing @var{terminal} as the argument to each function."
msgstr ""

#. type: defun
#: original_texis/frames.texi:267
msgid ""
"If @var{terminal} is omitted or @code{nil}, it defaults to the selected "
"frame's terminal.  @var{terminal} can also be a frame, meaning that frame's "
"terminal."
msgstr ""

#. type: defun
#: original_texis/frames.texi:272
msgid ""
"Normally, this function signals an error if you attempt to delete the sole "
"active terminal, but if @var{force} is non-@code{nil}, you are allowed to do "
"so.  Emacs automatically calls this function when the last frame on a "
"terminal is deleted (@pxref{Deleting Frames})."
msgstr ""

#. type: defvar
#: original_texis/frames.texi:274
#, no-wrap
msgid "delete-terminal-functions"
msgstr ""

#. type: defvar
#: original_texis/frames.texi:280
msgid ""
"An abnormal hook run by @code{delete-terminal}.  Each function receives one "
"argument, the @var{terminal} argument passed to @code{delete-terminal}.  Due "
"to technical details, the functions may be called either just before the "
"terminal is deleted, or just afterwards."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:282
#, no-wrap
msgid "terminal-local variables"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:290
msgid ""
"A few Lisp variables are @dfn{terminal-local}; that is, they have a separate "
"binding for each terminal.  The binding in effect at any time is the one for "
"the terminal that the currently selected frame belongs to.  These variables "
"include @code{default-minibuffer-frame}, @code{defining-kbd-macro}, "
"@code{last-kbd-macro}, and @code{system-key-alist}.  They are always "
"terminal-local, and can never be buffer-local (@pxref{Buffer-Local "
"Variables})."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:302
msgid ""
"On GNU and Unix systems, each X display is a separate graphical terminal.  "
"When Emacs is started from within the X window system, it uses the X display "
"specified by the @env{DISPLAY} environment variable, or by the "
"@samp{--display} option (@pxref{Initial Options,,, emacs, The GNU Emacs "
"Manual}).  Emacs can connect to other X displays via the command "
"@code{make-frame-on-display}.  Each X display has its own selected frame and "
"its own minibuffer windows; however, only one of those frames is @emph{the} "
"selected frame at any given moment (@pxref{Input Focus}).  Emacs can even "
"connect to other text terminals, by interacting with the "
"@command{emacsclient} program.  @xref{Emacs Server,,, emacs, The GNU Emacs "
"Manual}."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:303
#, no-wrap
msgid "X display names"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:304
#, no-wrap
msgid "display name on X"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:317
msgid ""
"A single X server can handle more than one display.  Each X display has a "
"three-part name, "
"@samp{@var{hostname}:@var{displaynumber}.@var{screennumber}}.  The first "
"part, @var{hostname}, specifies the name of the machine to which the display "
"is physically connected.  The second part, @var{displaynumber}, is a "
"zero-based number that identifies one or more monitors connected to that "
"machine that share a common keyboard and pointing device (mouse, tablet, "
"etc.).  The third part, @var{screennumber}, identifies a zero-based screen "
"number (a separate monitor) that is part of a single monitor collection on "
"that X server.  When you use two or more screens belonging to one server, "
"Emacs knows by the similarity in their names that they share a single "
"keyboard."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:324
msgid ""
"Systems that don't use the X window system, such as MS-Windows, don't "
"support the notion of X displays, and have only one display on each host.  "
"The display name on these systems doesn't follow the above 3-part format; "
"for example, the display name on MS-Windows systems is a constant string "
"@samp{w32}, and exists for compatibility, so that you could pass it to "
"functions that expect a display name."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:325
#, no-wrap
msgid "Command make-frame-on-display display &optional parameters"
msgstr ""

#. type: deffn
#: original_texis/frames.texi:329
msgid ""
"This function creates and returns a new frame on @var{display}, taking the "
"other frame parameters from the alist @var{parameters}.  @var{display} "
"should be the name of an X display (a string)."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:335
msgid ""
"Before creating the frame, this function ensures that Emacs is set up to "
"display graphics.  For instance, if Emacs has not processed X resources "
"(e.g., if it was started on a text terminal), it does so at this time.  In "
"all other respects, this function behaves like @code{make-frame} "
"(@pxref{Creating Frames})."
msgstr ""

#. type: defun
#: original_texis/frames.texi:337
#, no-wrap
msgid "x-display-list"
msgstr ""

#. type: defun
#: original_texis/frames.texi:341
msgid ""
"This function returns a list that indicates which X displays Emacs has a "
"connection to.  The elements of the list are strings, and each one is a "
"display name."
msgstr ""

#. type: defun
#: original_texis/frames.texi:343
#, no-wrap
msgid "x-open-connection display &optional xrm-string must-succeed"
msgstr ""

#. type: defun
#: original_texis/frames.texi:349
msgid ""
"This function opens a connection to the X display @var{display}, without "
"creating a frame on that display.  Normally, Emacs Lisp programs need not "
"call this function, as @code{make-frame-on-display} calls it automatically.  "
"The only reason for calling it is to check whether communication can be "
"established with a given X display."
msgstr ""

#. type: defun
#: original_texis/frames.texi:356
msgid ""
"The optional argument @var{xrm-string}, if not @code{nil}, is a string of "
"resource names and values, in the same format used in the @file{.Xresources} "
"file.  @xref{X Resources,, X Resources, emacs, The GNU Emacs Manual}.  These "
"values apply to all Emacs frames created on this display, overriding the "
"resource values recorded in the X server.  Here's an example of what this "
"string might look like:"
msgstr ""

#. type: example
#: original_texis/frames.texi:359
#, no-wrap
msgid "\"*BorderWidth: 3\\n*InternalBorder: 2\\n\"\n"
msgstr ""

#. type: defun
#: original_texis/frames.texi:363
msgid ""
"If @var{must-succeed} is non-@code{nil}, failure to open the connection "
"terminates Emacs.  Otherwise, it is an ordinary Lisp error."
msgstr ""

#. type: defun
#: original_texis/frames.texi:365
#, no-wrap
msgid "x-close-connection display"
msgstr ""

#. type: defun
#: original_texis/frames.texi:369
msgid ""
"This function closes the connection to display @var{display}.  Before you "
"can do this, you must first delete all the frames that were open on that "
"display (@pxref{Deleting Frames})."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:371
#, no-wrap
msgid "multi-monitor"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:376
msgid ""
"On some multi-monitor setups, a single X display outputs to more than one "
"physical monitor.  You can use the functions "
"@code{display-monitor-attributes-list} and @code{frame-monitor-attributes} "
"to obtain information about such setups."
msgstr ""

#. type: defun
#: original_texis/frames.texi:377
#, no-wrap
msgid "display-monitor-attributes-list &optional display"
msgstr ""

#. type: defun
#: original_texis/frames.texi:385
msgid ""
"This function returns a list of physical monitor attributes on "
"@var{display}, which can be a display name (a string), a terminal, or a "
"frame; if omitted or @code{nil}, it defaults to the selected frame's "
"display.  Each element of the list is an association list, representing the "
"attributes of a physical monitor.  The first element corresponds to the "
"primary monitor.  The attribute keys and values are:"
msgstr ""

#. type: item
#: original_texis/frames.texi:387
#, no-wrap
msgid "geometry"
msgstr ""

#. type: table
#: original_texis/frames.texi:392
msgid ""
"Position of the top-left corner of the monitor's screen and its size, in "
"pixels, as @samp{(@var{x} @var{y} @var{width} @var{height})}.  Note that, if "
"the monitor is not the primary monitor, some of the coordinates might be "
"negative."
msgstr ""

#. type: item
#: original_texis/frames.texi:393
#, no-wrap
msgid "workarea"
msgstr ""

#. type: table
#: original_texis/frames.texi:402
msgid ""
"Position of the top-left corner and size of the work area (usable space) in "
"pixels as @samp{(@var{x} @var{y} @var{width} @var{height})}.  This may be "
"different from @samp{geometry} in that space occupied by various window "
"manager features (docks, taskbars, etc.)@: may be excluded from the work "
"area.  Whether or not such features actually subtract from the work area "
"depends on the platform and environment.  Again, if the monitor is not the "
"primary monitor, some of the coordinates might be negative."
msgstr ""

#. type: item
#: original_texis/frames.texi:403
#, no-wrap
msgid "mm-size"
msgstr ""

#. type: table
#: original_texis/frames.texi:405
msgid "Width and height in millimeters as @samp{(@var{width} @var{height})}"
msgstr ""

#. type: item
#: original_texis/frames.texi:406
#, no-wrap
msgid "frames"
msgstr ""

#. type: table
#: original_texis/frames.texi:408
msgid "List of frames that this physical monitor dominates (see below)."
msgstr ""

#. type: item
#: original_texis/frames.texi:409 original_texis/frames.texi:1493
#, no-wrap
msgid "name"
msgstr ""

#. type: table
#: original_texis/frames.texi:411
msgid "Name of the physical monitor as @var{string}."
msgstr ""

#. type: item
#: original_texis/frames.texi:412
#, no-wrap
msgid "source"
msgstr ""

#. type: table
#: original_texis/frames.texi:415
msgid ""
"Source of the multi-monitor information as @var{string}; e.g., @samp{XRandR "
"1.5}, @samp{XRandr} or @samp{Xinerama}."
msgstr ""

#. type: defun
#: original_texis/frames.texi:419
msgid ""
"@var{x}, @var{y}, @var{width}, and @var{height} are integers.  @samp{name} "
"and @samp{source} may be absent."
msgstr ""

#. type: defun
#: original_texis/frames.texi:426
msgid ""
"A frame is @dfn{dominated} by a physical monitor when either the largest "
"area of the frame resides in that monitor, or (if the frame does not "
"intersect any physical monitors) that monitor is the closest to the frame.  "
"Every (non-tooltip) frame (whether visible or not) in a graphical display is "
"dominated by exactly one physical monitor at a time, though the frame can "
"span multiple (or no) physical monitors."
msgstr ""

#. type: defun
#: original_texis/frames.texi:429
msgid ""
"Here's an example of the data produced by this function on a 2-monitor "
"display:"
msgstr ""

#. type: lisp
#: original_texis/frames.texi:444
#, no-wrap
msgid ""
"  (display-monitor-attributes-list)\n"
"  @result{}\n"
"  (((geometry 0 0 1920 1080) ;; @r{Left-hand, primary monitor}\n"
"    (workarea 0 0 1920 1050) ;; @r{A taskbar occupies some of the height}\n"
"    (mm-size 677 381)\n"
"    (name . \"DISPLAY1\")\n"
"    (frames #<frame emacs@@host *Messages* 0x11578c0>\n"
"            #<frame emacs@@host *scratch* 0x114b838>))\n"
"   ((geometry 1920 0 1680 1050) ;; @r{Right-hand monitor}\n"
"    (workarea 1920 0 1680 1050) ;; @r{Whole screen can be used}\n"
"    (mm-size 593 370)\n"
"    (name . \"DISPLAY2\")\n"
"    (frames)))\n"
msgstr ""

#. type: defun
#: original_texis/frames.texi:448
#, no-wrap
msgid "frame-monitor-attributes &optional frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:451
msgid ""
"This function returns the attributes of the physical monitor dominating (see "
"above) @var{frame}, which defaults to the selected frame."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:455
msgid ""
"On multi-monitor displays it is possible to use the command "
"@code{make-frame-on-monitor} to make frames on the specified monitor."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:456
#, no-wrap
msgid "Command make-frame-on-monitor monitor &optional display parameters"
msgstr ""

#. type: deffn
#: original_texis/frames.texi:463
msgid ""
"This function creates and returns a new frame on @var{monitor} located on "
"@var{display}, taking the other frame parameters from the alist "
"@var{parameters}.  @var{monitor} should be the name of the physical monitor, "
"the same string as returned by the function "
"@code{display-monitor-attributes-list} in the attribute @code{name}.  "
"@var{display} should be the name of an X display (a string)."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:465
#, no-wrap
msgid "monitor change functions"
msgstr ""

#. type: defvar
#: original_texis/frames.texi:466
#, no-wrap
msgid "display-monitors-changed-functions"
msgstr ""

#. type: defvar
#: original_texis/frames.texi:475
msgid ""
"This variable is an abnormal hook run when the monitor configuration "
"changes, which can happen if a monitor is rotated, moved, added or removed "
"from a multiple-monitor setup, if the primary monitor changes, or if the "
"resolution of a monitor changes.  It is called with a single argument "
"consisting of the terminal on which the monitor configuration changed.  "
"Programs should call @code{display-monitor-attributes-list} with the "
"terminal as the argument to retrieve the new monitor configuration on that "
"terminal."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:479
#, no-wrap
msgid "frame geometry"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:480 original_texis/frames.texi:946
#: original_texis/frames.texi:1515
#, no-wrap
msgid "frame position"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:481 original_texis/frames.texi:947
#, no-wrap
msgid "position of frame"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:482 original_texis/frames.texi:1016
#, no-wrap
msgid "frame size"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:483
#, no-wrap
msgid "size of frame"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:491
msgid ""
"The geometry of a frame depends on the toolkit that was used to build this "
"instance of Emacs and the terminal that displays the frame.  This chapter "
"describes these dependencies and some of the functions to deal with them.  "
"Note that the @var{frame} argument of all of these functions has to specify "
"a live frame (@pxref{Deleting Frames}).  If omitted or @code{nil}, it "
"specifies the selected frame (@pxref{Input Focus})."
msgstr ""

#. type: subsection
#: original_texis/frames.texi:498 original_texis/frames.texi:501
#: original_texis/frames.texi:502
#, no-wrap
msgid "Frame Layout"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:498
msgid "Basic layout of frames."
msgstr ""

#. type: subsection
#: original_texis/frames.texi:498 original_texis/frames.texi:891
#: original_texis/frames.texi:892
#, no-wrap
msgid "Frame Font"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:498
msgid "The default font of a frame and how to set it."
msgstr ""

#. type: subsection
#: original_texis/frames.texi:498 original_texis/frames.texi:944
#: original_texis/frames.texi:945
#, no-wrap
msgid "Frame Position"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:498
msgid "The position of a frame on its display."
msgstr ""

#. type: subsection
#: original_texis/frames.texi:498 original_texis/frames.texi:1014
#: original_texis/frames.texi:1015
#, no-wrap
msgid "Frame Size"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:498
msgid "Specifying and retrieving a frame's size."
msgstr ""

#. type: subsection
#: original_texis/frames.texi:498 original_texis/frames.texi:1203
#: original_texis/frames.texi:1204
#, no-wrap
msgid "Implied Frame Resizing"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:498
msgid "Implied resizing of frames and how to prevent it."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:503
#, no-wrap
msgid "frame layout"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:504
#, no-wrap
msgid "layout of frame"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:510
msgid ""
"A visible frame occupies a rectangular area on its terminal's display.  This "
"area may contain a number of nested rectangles, each serving a different "
"purpose.  The drawing below sketches the layout of a frame on a graphical "
"terminal:"
msgstr ""

#. type: group
#: original_texis/frames.texi:533
#, no-wrap
msgid ""
"        <------------ Outer Frame Width ----------->\n"
"        ____________________________________________\n"
"     ^(0)  ________ External/Outer Border _______   |\n"
"     | |  |_____________ Title Bar ______________|  |\n"
"     | | (1)_____________ Menu Bar ______________|  | ^\n"
"     | | (2)_____________ Tool Bar ______________|  | ^\n"
"     | | (3)_____________ Tab Bar _______________|  | ^\n"
"     | |  |  _________ Internal Border ________  |  | ^\n"
"     | |  | |   ^                              | |  | |\n"
"     | |  | |   |                              | |  | |\n"
"Outer  |  | | Inner                            | |  | Native\n"
"Frame  |  | | Frame                            | |  | Frame\n"
"Height |  | | Height                           | |  | Height\n"
"     | |  | |   |                              | |  | |\n"
"     | |  | |<--+--- Inner Frame Width ------->| |  | |\n"
"     | |  | |   |                              | |  | |\n"
"     | |  | |___v______________________________| |  | |\n"
"     | |  |___________ Internal Border __________|  | v\n"
"     v |___________ External/Outer Border __________|\n"
"           <-------- Native Frame Width -------->\n"
"\n"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:539
msgid ""
"In practice not all of the areas shown in the drawing will or may be "
"present.  The meaning of these areas is described below."
msgstr ""

#. type: item
#: original_texis/frames.texi:541
#, no-wrap
msgid "Outer Frame"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:542
#, no-wrap
msgid "outer frame"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:543
#, no-wrap
msgid "outer edges"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:544
#, no-wrap
msgid "outer width"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:545
#, no-wrap
msgid "outer height"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:546
#, no-wrap
msgid "outer size"
msgstr ""

#. type: table
#: original_texis/frames.texi:551
msgid ""
"The @dfn{outer frame} is a rectangle comprising all areas shown in the "
"drawing.  The edges of that rectangle are called the @dfn{outer edges} of "
"the frame.  Together, the @dfn{outer width} and @dfn{outer height} of the "
"frame specify the @dfn{outer size} of that rectangle."
msgstr ""

#. type: table
#: original_texis/frames.texi:562
msgid ""
"Knowing the outer size of a frame is useful for fitting a frame into the "
"working area of its display (@pxref{Multiple Terminals}) or for placing two "
"frames adjacent to each other on the screen.  Usually, the outer size of a "
"frame is available only after the frame has been mapped (made visible, "
"@pxref{Visibility of Frames}) at least once.  For the initial frame or a "
"frame that has not been created yet, the outer size can be only estimated or "
"must be calculated from the window-system's or window manager's defaults.  "
"One workaround is to obtain the differences of the outer and native (see "
"below) sizes of a mapped frame and use them for calculating the outer size "
"of the new frame."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:563
#, no-wrap
msgid "outer position"
msgstr ""

#. type: table
#: original_texis/frames.texi:569
msgid ""
"The position of the upper left corner of the outer frame (indicated by "
"@samp{(0)} in the drawing above) is the @dfn{outer position} of the frame.  "
"The outer position of a graphical frame is also referred to as ``the "
"position'' of the frame because it usually remains unchanged on its display "
"whenever the frame is resized or its layout is changed."
msgstr ""

#. type: table
#: original_texis/frames.texi:578
msgid ""
"The outer position is specified by and can be set via the @code{left} and "
"@code{top} frame parameters (@pxref{Position Parameters}).  For a normal, "
"top-level frame these parameters usually represent its absolute position "
"(see below) with respect to its display's origin.  For a child frame "
"(@pxref{Child Frames}) these parameters represent its position relative to "
"the native position (see below) of its parent frame.  For frames on text "
"terminals the values of these parameters are meaningless and always zero."
msgstr ""

#. type: item
#: original_texis/frames.texi:579
#, no-wrap
msgid "External Border"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:580
#, no-wrap
msgid "external border"
msgstr ""

#. type: table
#: original_texis/frames.texi:586
msgid ""
"The @dfn{external border} is part of the decorations supplied by the window "
"manager.  It is typically used for resizing the frame with the mouse and is "
"therefore not shown on ``fullboth'' and maximized frames (@pxref{Size "
"Parameters}).  Its width is determined by the window manager and cannot be "
"changed by Emacs' functions."
msgstr ""

#. type: table
#: original_texis/frames.texi:591
msgid ""
"External borders don't exist on text terminal frames.  For graphical frames, "
"their display can be suppressed by setting the @code{override-redirect} or "
"@code{undecorated} frame parameter (@pxref{Management Parameters})."
msgstr ""

#. type: item
#: original_texis/frames.texi:592
#, no-wrap
msgid "Outer Border"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:593
#, no-wrap
msgid "outer border"
msgstr ""

#. type: table
#: original_texis/frames.texi:602
msgid ""
"The @dfn{outer border} is a separate border whose width can be specified "
"with the @code{border-width} frame parameter (@pxref{Layout Parameters}).  "
"In practice, either the external or the outer border of a frame are "
"displayed but never both at the same time.  Usually, the outer border is "
"shown only for special frames that are not (fully) controlled by the window "
"manager like tooltip frames (@pxref{Tooltips}), child frames (@pxref{Child "
"Frames}) and @code{undecorated} or @code{override-redirect} frames "
"(@pxref{Management Parameters})."
msgstr ""

#. type: table
#: original_texis/frames.texi:608
msgid ""
"Outer borders are never shown on text terminal frames and on frames "
"generated by GTK+ routines.  On MS-Windows, the outer border is emulated "
"with the help of a one pixel wide external border.  Non-toolkit builds on X "
"allow to change the color of the outer border by setting the "
"@code{border-color} frame parameter (@pxref{Layout Parameters})."
msgstr ""

#. type: item
#: original_texis/frames.texi:609
#, no-wrap
msgid "Title Bar"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:610
#, no-wrap
msgid "title bar"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:611
#, no-wrap
msgid "caption bar"
msgstr ""

#. type: table
#: original_texis/frames.texi:622
msgid ""
"The @dfn{title bar}, a.k.a.@ @dfn{caption bar}, is also part of the window "
"manager's decorations and typically displays the title of the frame "
"(@pxref{Frame Titles}) as well as buttons for minimizing, maximizing and "
"deleting the frame.  It can be also used for dragging the frame with the "
"mouse.  The title bar is usually not displayed for fullboth (@pxref{Size "
"Parameters}), tooltip (@pxref{Tooltips}) and child frames (@pxref{Child "
"Frames}) and doesn't exist for terminal frames.  Display of the title bar "
"can be suppressed by setting the @code{override-redirect} or the "
"@code{undecorated} frame parameters (@pxref{Management Parameters})."
msgstr ""

#. type: item
#: original_texis/frames.texi:623
#, no-wrap
msgid "Menu Bar"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:624
#, no-wrap
msgid "internal menu bar"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:625
#, no-wrap
msgid "external menu bar"
msgstr ""

#. type: table
#: original_texis/frames.texi:636
msgid ""
"The menu bar (@pxref{Menu Bar}) can be either internal (drawn by Emacs "
"itself) or external (drawn by the toolkit).  Most builds (GTK+, Lucid, Motif "
"and MS-Windows) rely on an external menu bar.  NS also uses an external menu "
"bar which, however, is not part of the outer frame.  Non-toolkit builds can "
"provide an internal menu bar.  On text terminal frames, the menu bar is part "
"of the frame's root window (@pxref{Windows and Frames}).  As a rule, menu "
"bars are never shown on child frames (@pxref{Child Frames}).  Display of the "
"menu bar can be suppressed by setting the @code{menu-bar-lines} parameter "
"(@pxref{Layout Parameters})  to zero."
msgstr ""

#. type: table
#: original_texis/frames.texi:643
msgid ""
"Whether the menu bar is wrapped or truncated whenever its width becomes too "
"large to fit on its frame depends on the toolkit .  Usually, only Motif and "
"MS-Windows builds can wrap the menu bar.  When they (un-)wrap the menu bar, "
"they try to keep the outer height of the frame unchanged, so the native "
"height of the frame (see below) will change instead."
msgstr ""

#. type: item
#: original_texis/frames.texi:644
#, no-wrap
msgid "Tool Bar"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:645
#, no-wrap
msgid "internal tool bar"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:646
#, no-wrap
msgid "external tool bar"
msgstr ""

#. type: table
#: original_texis/frames.texi:656
msgid ""
"Like the menu bar, the tool bar (@pxref{Tool Bar}) can be either internal "
"(drawn by Emacs itself) or external (drawn by a toolkit).  The GTK+ and NS "
"builds have the tool bar drawn by the toolkit.  The remaining builds use "
"internal tool bars.  With GTK+ the tool bar can be located on either side of "
"the frame, immediately outside the internal border, see below.  Tool bars "
"are usually not shown for child frames (@pxref{Child Frames}).  Display of "
"the tool bar can be suppressed by setting the @code{tool-bar-lines} "
"parameter (@pxref{Layout Parameters}) to zero."
msgstr ""

#. type: table
#: original_texis/frames.texi:665
msgid ""
"If the variable @code{auto-resize-tool-bars} is non-@code{nil}, Emacs wraps "
"the internal tool bar when its width becomes too large for its frame.  If "
"and when Emacs (un-)wraps the internal tool bar, it by default keeps the "
"outer height of the frame unchanged, so the native height of the frame (see "
"below) will change instead.  Emacs built with GTK+, on the other hand, never "
"wraps the tool bar but may automatically increase the outer width of a frame "
"in order to accommodate an overlong tool bar."
msgstr ""

#. type: item
#: original_texis/frames.texi:666
#, no-wrap
msgid "Tab Bar"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:667
#, no-wrap
msgid "tab bar"
msgstr ""

#. type: table
#: original_texis/frames.texi:674
msgid ""
"The tab bar (@pxref{Tab Bars,,,emacs, The GNU Emacs Manual}) is always drawn "
"by Emacs itself.  The tab bar appears above the tool bar in Emacs built with "
"an internal tool bar, and below the tool bar in builds with an external tool "
"bar.  Display of the tab bar can be suppressed by setting the "
"@code{tab-bar-lines} parameter (@pxref{Layout Parameters}) to zero."
msgstr ""

#. type: item
#: original_texis/frames.texi:675
#, no-wrap
msgid "Native Frame"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:676
#, no-wrap
msgid "native frame"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:677
#, no-wrap
msgid "native edges"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:678
#, no-wrap
msgid "native width"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:679
#, no-wrap
msgid "native height"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:680
#, no-wrap
msgid "native size"
msgstr ""

#. type: table
#: original_texis/frames.texi:687
msgid ""
"The @dfn{native frame} is a rectangle located entirely within the outer "
"frame.  It excludes the areas occupied by an external or outer border, the "
"title bar and any external menu or tool bar.  The edges of the native frame "
"are called the @dfn{native edges} of the frame.  Together, the @dfn{native "
"width} and @dfn{native height} of a frame specify the @dfn{native size} of "
"the frame."
msgstr ""

#. type: table
#: original_texis/frames.texi:695
msgid ""
"The native size of a frame is the size Emacs passes to the window-system or "
"window manager when creating or resizing the frame from within Emacs.  It is "
"also the size Emacs receives from the window-system or window manager "
"whenever these resize the frame's window-system window, for example, after "
"maximizing the frame by clicking on the corresponding button in the title "
"bar or when dragging its external border with the mouse."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:696
#, no-wrap
msgid "native position"
msgstr ""

#. type: table
#: original_texis/frames.texi:700
msgid ""
"The position of the top left corner of the native frame specifies the "
"@dfn{native position} of the frame.  (1)--(3) in the drawing above indicate "
"that position for the various builds:"
msgstr ""

#. type: item
#: original_texis/frames.texi:702
#, no-wrap
msgid "(1) non-toolkit, Haiku, and terminal frames"
msgstr ""

#. type: item
#: original_texis/frames.texi:704
#, no-wrap
msgid "(2) Lucid, Motif, and MS-Windows frames"
msgstr ""

#. type: item
#: original_texis/frames.texi:706
#, no-wrap
msgid "(3) GTK+ and NS frames"
msgstr ""

#. type: table
#: original_texis/frames.texi:713
msgid ""
"Accordingly, the native height of a frame may include the height of the tool "
"bar but not that of the menu bar (Lucid, Motif, MS-Windows) or those of the "
"menu bar and the tool bar (non-toolkit and text terminal frames)."
msgstr ""

#. type: table
#: original_texis/frames.texi:721
msgid ""
"The native position of a frame is the reference position for functions that "
"set or return the current position of the mouse (@pxref{Mouse Position}) and "
"for functions dealing with the position of windows like @code{window-edges}, "
"@code{window-at} or @code{coordinates-in-window-p} (@pxref{Coordinates and "
"Windows}).  It also specifies the (0, 0) origin for locating and positioning "
"child frames within this frame (@pxref{Child Frames})."
msgstr ""

#. type: table
#: original_texis/frames.texi:726
msgid ""
"Note also that the native position of a frame usually remains unaltered on "
"its display when removing or adding the window manager decorations by "
"changing the frame's @code{override-redirect} or @code{undecorated} "
"parameter (@pxref{Management Parameters})."
msgstr ""

#. type: item
#: original_texis/frames.texi:727
#, no-wrap
msgid "Internal Border"
msgstr ""

#. type: table
#: original_texis/frames.texi:731
msgid ""
"The internal border is a border drawn by Emacs around the inner frame (see "
"below).  The specification of its appearance depends on whether or not the "
"given frame is a child frame (@pxref{Child Frames})."
msgstr ""

#. type: table
#: original_texis/frames.texi:735
msgid ""
"For normal frames its width is specified by the @code{internal-border-width} "
"frame parameter (@pxref{Layout Parameters}), and its color is specified by "
"the background of the @code{internal-border} face."
msgstr ""

#. type: table
#: original_texis/frames.texi:740
msgid ""
"For child frames its width is specified by the "
"@code{child-frame-border-width} frame parameter (but will use the "
"@code{internal-border-width} parameter as fallback), and its color is "
"specified by the background of the @code{child-frame-border} face."
msgstr ""

#. type: item
#: original_texis/frames.texi:741
#, no-wrap
msgid "Inner Frame"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:742
#, no-wrap
msgid "inner frame"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:743
#, no-wrap
msgid "inner edges"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:744
#, no-wrap
msgid "inner width"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:745
#, no-wrap
msgid "inner height"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:746
#, no-wrap
msgid "inner size"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:747
#, no-wrap
msgid "display area"
msgstr ""

#. type: table
#: original_texis/frames.texi:754
msgid ""
"The @dfn{inner frame} is the rectangle reserved for the frame's windows.  "
"It's enclosed by the internal border which, however, is not part of the "
"inner frame.  Its edges are called the @dfn{inner edges} of the frame.  The "
"@dfn{inner width} and @dfn{inner height} specify the @dfn{inner size} of the "
"rectangle.  The inner frame is sometimes also referred to as the "
"@dfn{display area} of the frame."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:755
#, no-wrap
msgid "minibuffer-less frame"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:756 original_texis/frames.texi:1400
#, no-wrap
msgid "minibuffer-only frame"
msgstr ""

#. type: table
#: original_texis/frames.texi:765
msgid ""
"As a rule, the inner frame is subdivided into the frame's root window "
"(@pxref{Windows and Frames}) and the frame's minibuffer window "
"(@pxref{Minibuffer Windows}).  There are two notable exceptions to this "
"rule: A @dfn{minibuffer-less frame} contains a root window only and does not "
"contain a minibuffer window.  A @dfn{minibuffer-only frame} contains only a "
"minibuffer window which also serves as that frame's root window.  See "
"@ref{Initial Parameters} for how to create such frame configurations."
msgstr ""

#. type: item
#: original_texis/frames.texi:766
#, no-wrap
msgid "Text Area"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:767
#, no-wrap
msgid "text area"
msgstr ""

#. type: table
#: original_texis/frames.texi:777
msgid ""
"The @dfn{text area} of a frame is a somewhat fictitious area that can be "
"embedded in the native frame.  Its position is unspecified.  Its width can "
"be obtained by removing from that of the native width the widths of the "
"internal border, one vertical scroll bar, and one left and one right fringe "
"if they are specified for this frame, see @ref{Layout Parameters}.  Its "
"height can be obtained by removing from that of the native height the widths "
"of the internal border and the heights of the frame's internal menu and tool "
"bars, the tab bar and one horizontal scroll bar if specified for this frame."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:779
#, no-wrap
msgid "absolute position"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:780
#, no-wrap
msgid "absolute frame position"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:781
#, no-wrap
msgid "absolute edges"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:782
#, no-wrap
msgid "absolute frame edges"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:783
#, no-wrap
msgid "display origin"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:784
#, no-wrap
msgid "origin of display"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:789
msgid ""
"The @dfn{absolute position} of a frame is given as a pair (X, Y) of "
"horizontal and vertical pixel offsets relative to an origin (0, 0) of the "
"frame's display.  Correspondingly, the @dfn{absolute edges} of a frame are "
"given as pixel offsets from that origin."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:795
msgid ""
"Note that with multiple monitors, the origin of the display does not "
"necessarily coincide with the top-left corner of the entire usable display "
"area of the terminal.  Hence the absolute position of a frame can be "
"negative in such an environment even when that frame is completely visible."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:801
msgid ""
"By convention, vertical offsets increase ``downwards''.  This means that the "
"height of a frame is obtained by subtracting the offset of its top edge from "
"that of its bottom edge.  Horizontal offsets increase ``rightwards'', as "
"expected, so a frame's width is calculated by subtracting the offset of its "
"left edge from that of its right edge."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:804
msgid ""
"For a frame on a graphical terminal the following function returns the sizes "
"of the areas described above:"
msgstr ""

#. type: defun
#: original_texis/frames.texi:805
#, no-wrap
msgid "frame-geometry &optional frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:813
msgid ""
"This function returns geometric attributes of @var{frame}.  The return value "
"is an association list of the attributes listed below.  All coordinate, "
"height and width values are integers counting pixels.  Note that if "
"@var{frame} has not been mapped yet, (@pxref{Visibility of Frames}) some of "
"the return values may only represent approximations of the actual "
"values---those that can be seen after the frame has been mapped."
msgstr ""

#. type: item
#: original_texis/frames.texi:815
#, no-wrap
msgid "outer-position"
msgstr ""

#. type: table
#: original_texis/frames.texi:818
msgid ""
"A cons representing the absolute position of the outer @var{frame}, relative "
"to the origin at position (0, 0) of @var{frame}'s display."
msgstr ""

#. type: item
#: original_texis/frames.texi:819
#, no-wrap
msgid "outer-size"
msgstr ""

#. type: table
#: original_texis/frames.texi:821
msgid "A cons of the outer width and height of @var{frame}."
msgstr ""

#. type: item
#: original_texis/frames.texi:822
#, no-wrap
msgid "external-border-size"
msgstr ""

#. type: table
#: original_texis/frames.texi:827
msgid ""
"A cons of the horizontal and vertical width of @var{frame}'s external "
"borders as supplied by the window manager.  If the window manager doesn't "
"supply these values, Emacs will try to guess them from the coordinates of "
"the outer and inner frame."
msgstr ""

#. type: item
#: original_texis/frames.texi:828
#, no-wrap
msgid "outer-border-width"
msgstr ""

#. type: table
#: original_texis/frames.texi:831
msgid ""
"The width of the outer border of @var{frame}.  The value is meaningful for "
"non-GTK+ X builds only."
msgstr ""

#. type: item
#: original_texis/frames.texi:832
#, no-wrap
msgid "title-bar-size"
msgstr ""

#. type: table
#: original_texis/frames.texi:837
msgid ""
"A cons of the width and height of the title bar of @var{frame} as supplied "
"by the window manager or operating system.  If both of them are zero, the "
"frame has no title bar.  If only the width is zero, Emacs was not able to "
"retrieve the width information."
msgstr ""

#. type: item
#: original_texis/frames.texi:838
#, no-wrap
msgid "menu-bar-external"
msgstr ""

#. type: table
#: original_texis/frames.texi:841
msgid ""
"If non-@code{nil}, this means the menu bar is external (not part of the "
"native frame of @var{frame})."
msgstr ""

#. type: item
#: original_texis/frames.texi:842
#, no-wrap
msgid "menu-bar-size"
msgstr ""

#. type: table
#: original_texis/frames.texi:844
msgid "A cons of the width and height of the menu bar of @var{frame}."
msgstr ""

#. type: item
#: original_texis/frames.texi:845
#, no-wrap
msgid "tool-bar-external"
msgstr ""

#. type: table
#: original_texis/frames.texi:848
msgid ""
"If non-@code{nil}, this means the tool bar is external (not part of the "
"native frame of @var{frame})."
msgstr ""

#. type: item
#: original_texis/frames.texi:849 original_texis/frames.texi:1911
#, no-wrap
msgid "tool-bar-position"
msgstr ""

#. type: table
#: original_texis/frames.texi:853
msgid ""
"This tells on which side the tool bar on @var{frame} is and can be one of "
"@code{left}, @code{top}, @code{right} or @code{bottom}.  The only toolkit "
"that currently supports a value other than @code{top} is GTK+."
msgstr ""

#. type: item
#: original_texis/frames.texi:854
#, no-wrap
msgid "tool-bar-size"
msgstr ""

#. type: table
#: original_texis/frames.texi:856
msgid "A cons of the width and height of the tool bar of @var{frame}."
msgstr ""

#. type: item
#: original_texis/frames.texi:857 original_texis/frames.texi:1835
#, no-wrap
msgid "internal-border-width"
msgstr ""

#. type: table
#: original_texis/frames.texi:859
msgid "The width of the internal border of @var{frame}."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:864
msgid ""
"The following function can be used to retrieve the edges of the outer, "
"native and inner frame."
msgstr ""

#. type: defun
#: original_texis/frames.texi:865
#, no-wrap
msgid "frame-edges &optional frame type"
msgstr ""

#. type: defun
#: original_texis/frames.texi:872
msgid ""
"This function returns the absolute edges of the outer, native or inner frame "
"of @var{frame}.  @var{frame} must be a live frame and defaults to the "
"selected one.  The returned list has the form @w{@code{(@var{left} @var{top} "
"@var{right} @var{bottom})}} where all values are in pixels relative to the "
"origin of @var{frame}'s display.  For terminal frames the values returned "
"for @var{left} and @var{top} are always zero."
msgstr ""

#. type: defun
#: original_texis/frames.texi:877
msgid ""
"Optional argument @var{type} specifies the type of the edges to return: "
"@code{outer-edges} means to return the outer edges of @var{frame}, "
"@code{native-edges} (or @code{nil}) means to return its native edges and "
"@code{inner-edges} means to return its inner edges."
msgstr ""

#. type: defun
#: original_texis/frames.texi:888
msgid ""
"By convention, the pixels of the display at the values returned for "
"@var{left} and @var{top} are considered to be inside (part of)  "
"@var{frame}.  Hence, if @var{left} and @var{top} are both zero, the pixel at "
"the display's origin is part of @var{frame}.  The pixels at @var{bottom} and "
"@var{right}, on the other hand, are considered to lie immediately outside "
"@var{frame}.  This means that if you have, for example, two side-by-side "
"frames positioned such that the right outer edge of the frame on the left "
"equals the left outer edge of the frame on the right, the pixels at that "
"edge show a part of the frame on the right."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:893
#, no-wrap
msgid "default font"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:894
#, no-wrap
msgid "default character size"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:895
#, no-wrap
msgid "default character width"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:896
#, no-wrap
msgid "default width of character"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:897
#, no-wrap
msgid "default character height"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:898
#, no-wrap
msgid "default height of character"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:904
msgid ""
"Each frame has a @dfn{default font} which specifies the default character "
"size for that frame.  This size is meant when retrieving or changing the "
"size of a frame in terms of columns or lines (@pxref{Size Parameters}).  It "
"is also used when resizing (@pxref{Window Sizes}) or splitting "
"(@pxref{Splitting Windows}) windows."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:905
#, no-wrap
msgid "line height"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:906
#, no-wrap
msgid "column width"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:907
#, no-wrap
msgid "canonical character height"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:908
#, no-wrap
msgid "canonical character width"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:913
msgid ""
"The terms @dfn{line height} and @dfn{canonical character height} are "
"sometimes used instead of ``default character height''.  Similarly, the "
"terms @dfn{column width} and @dfn{canonical character width} are used "
"instead of ``default character width''."
msgstr ""

#. type: defun
#: original_texis/frames.texi:914
#, no-wrap
msgid "frame-char-height &optional frame"
msgstr ""

#. type: defunx
#: original_texis/frames.texi:915
#, no-wrap
msgid "frame-char-width &optional frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:920
msgid ""
"These functions return the default height and width of a character in "
"@var{frame}, measured in pixels.  Together, these values establish the size "
"of the default font on @var{frame}.  The values depend on the choice of font "
"for @var{frame}, see @ref{Font and Color Parameters}."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:923
msgid "The default font can be also set directly with the following function:"
msgstr ""

#. type: deffn
#: original_texis/frames.texi:924
#, no-wrap
msgid "Command set-frame-font font &optional keep-size frames"
msgstr ""

#. type: deffn
#: original_texis/frames.texi:929
msgid ""
"This sets the default font to @var{font}.  When called interactively, it "
"prompts for the name of a font, and uses that font on the selected frame.  "
"When called from Lisp, @var{font} should be a font name (a string), a font "
"object, font entity, or a font spec."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:936
msgid ""
"If the optional argument @var{keep-size} is @code{nil}, this keeps the "
"number of frame lines and columns fixed.  (If non-@code{nil}, the option "
"@code{frame-inhibit-implied-resize} described in the next section will "
"override this.)  If @var{keep-size} is non-@code{nil} (or with a prefix "
"argument), it tries to keep the size of the display area of the current "
"frame fixed by adjusting the number of lines and columns."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:941
msgid ""
"If the optional argument @var{frames} is @code{nil}, this applies the font "
"to the selected frame only.  If @var{frames} is non-@code{nil}, it should be "
"a list of frames to act upon, or @code{t} meaning all existing and all "
"future graphical frames."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:954
msgid ""
"On graphical systems, the position of a normal top-level frame is specified "
"as the absolute position of its outer frame (@pxref{Frame Geometry}).  The "
"position of a child frame (@pxref{Child Frames}) is specified via pixel "
"offsets of its outer edges relative to the native position of its parent "
"frame."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:960
msgid ""
"You can access or change the position of a frame using the frame parameters "
"@code{left} and @code{top} (@pxref{Position Parameters}).  Here are two "
"additional functions for working with the positions of an existing, visible "
"frame.  For both functions, the argument @var{frame} must denote a live "
"frame and defaults to the selected frame."
msgstr ""

#. type: defun
#: original_texis/frames.texi:961
#, no-wrap
msgid "frame-position &optional frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:968
msgid ""
"For a normal, non-child frame this function returns a cons of the pixel "
"coordinates of its outer position (@pxref{Frame Layout}) with respect to the "
"origin @code{(0, 0)} of its display.  For a child frame (@pxref{Child "
"Frames}) this function returns the pixel coordinates of its outer position "
"with respect to an origin @code{(0, 0)} at the native position of "
"@var{frame}'s parent."
msgstr ""

#. type: defun
#: original_texis/frames.texi:977
msgid ""
"Negative values never indicate an offset from the right or bottom edge of "
"@var{frame}'s display or parent frame.  Rather, they mean that @var{frame}'s "
"outer position is on the left and/or above the origin of its display or the "
"native position of its parent frame.  This usually means that @var{frame} is "
"only partially visible (or completely invisible).  However, on systems where "
"the display's origin does not coincide with its top-left corner, the frame "
"may be visible on a secondary monitor."
msgstr ""

#. type: defun
#: original_texis/frames.texi:979
msgid "On a text terminal frame both values are zero."
msgstr ""

#. type: defun
#: original_texis/frames.texi:981
#, no-wrap
msgid "set-frame-position frame x y"
msgstr ""

#. type: defun
#: original_texis/frames.texi:987
msgid ""
"This function sets the outer frame position of @var{frame} to (@var{x}, "
"@var{y}).  The latter arguments specify pixels and normally count from the "
"origin at the position (0, 0) of @var{frame}'s display.  For child frames, "
"they count from the native position of @var{frame}'s parent frame."
msgstr ""

#. type: defun
#: original_texis/frames.texi:992
msgid ""
"Negative parameter values position the right edge of the outer frame by "
"@var{-x} pixels left from the right edge of the screen (or the parent "
"frame's native rectangle) and the bottom edge by @var{-y} pixels up from the "
"bottom edge of the screen (or the parent frame's native rectangle)."
msgstr ""

#. type: defun
#: original_texis/frames.texi:1000
msgid ""
"Note that negative values do not permit to align the right or bottom edge of "
"@var{frame} exactly at the right or bottom edge of its display or parent "
"frame.  Neither do they allow to specify a position that does not lie within "
"the edges of the display or parent frame.  The frame parameters @code{left} "
"and @code{top} (@pxref{Position Parameters})  allow to do that, but may "
"still fail to provide good results for the initial or a new frame."
msgstr ""

#. type: defun
#: original_texis/frames.texi:1002
msgid "This function has no effect on text terminal frames."
msgstr ""

#. type: defvar
#: original_texis/frames.texi:1004
#, no-wrap
msgid "move-frame-functions"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:1005
#, no-wrap
msgid "frame position changes, a hook"
msgstr ""

#. type: defvar
#: original_texis/frames.texi:1011
msgid ""
"This hook specifies the functions that are run when an Emacs frame is moved "
"(assigned a new position) by the window-system or window manager.  The "
"functions are run with one argument, the frame that moved.  For a child "
"frame (@pxref{Child Frames}), the functions are run only when the position "
"of the frame changes in relation to that of its parent frame."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:1017
#, no-wrap
msgid "text width of a frame"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:1018
#, no-wrap
msgid "text height of a frame"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:1019
#, no-wrap
msgid "text size of a frame"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:1025
msgid ""
"The canonical way to specify the @dfn{size of a frame} from within Emacs is "
"by specifying its @dfn{text size}---a tuple of the width and height of the "
"frame's text area (@pxref{Frame Layout}).  It can be measured either in "
"pixels or in terms of the frame's canonical character size (@pxref{Frame "
"Font})."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:1037
msgid ""
"For frames with an internal menu or tool bar, the frame's native height "
"cannot be told exactly before the frame has been actually drawn.  This means "
"that in general you cannot use the native size to specify the initial size "
"of a frame.  As soon as you know the native size of a visible frame, you can "
"calculate its outer size (@pxref{Frame Layout})  by adding in the remaining "
"components from the return value of @code{frame-geometry}.  For invisible "
"frames or for frames that have yet to be created, however, the outer size "
"can only be estimated.  This also means that calculating an exact initial "
"position of a frame specified via offsets from the right or bottom edge of "
"the screen (@pxref{Frame Position}) is impossible."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:1045
msgid ""
"The text size of any frame can be set and retrieved with the help of the "
"@code{height} and @code{width} frame parameters (@pxref{Size Parameters}).  "
"The text size of the initial frame can be also set with the help of an "
"X-style geometry specification.  @xref{Emacs Invocation,, Command Line "
"Arguments for Emacs Invocation, emacs, The GNU Emacs Manual}.  Below we list "
"some functions to access and set the size of an existing, visible frame, by "
"default the selected one."
msgstr ""

#. type: defun
#: original_texis/frames.texi:1046
#, no-wrap
msgid "frame-height &optional frame"
msgstr ""

#. type: defunx
#: original_texis/frames.texi:1047
#, no-wrap
msgid "frame-width &optional frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:1053
msgid ""
"These functions return the height and width of the text area of @var{frame}, "
"measured in units of the default font height and width of @var{frame} "
"(@pxref{Frame Font}).  These functions are plain shorthands for writing "
"@code{(frame-parameter frame 'height)} and @code{(frame-parameter frame "
"'width)}."
msgstr ""

#. type: defun
#: original_texis/frames.texi:1058
msgid ""
"If the text area of @var{frame} measured in pixels is not a multiple of its "
"default font size, the values returned by these functions are rounded down "
"to the number of characters of the default font that fully fit into the text "
"area."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:1064
msgid ""
"The functions following next return the pixel widths and heights of the "
"native, outer and inner frame and the text area (@pxref{Frame Layout})  of a "
"given frame.  For a text terminal, the results are in characters rather than "
"pixels."
msgstr ""

#. type: defun
#: original_texis/frames.texi:1065
#, no-wrap
msgid "frame-outer-width &optional frame"
msgstr ""

#. type: defunx
#: original_texis/frames.texi:1066
#, no-wrap
msgid "frame-outer-height &optional frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:1069
msgid "These functions return the outer width and height of @var{frame} in pixels."
msgstr ""

#. type: defun
#: original_texis/frames.texi:1071
#, no-wrap
msgid "frame-native-height &optional frame"
msgstr ""

#. type: defunx
#: original_texis/frames.texi:1072
#, no-wrap
msgid "frame-native-width &optional frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:1075
msgid "These functions return the native width and height of @var{frame} in pixels."
msgstr ""

#. type: defun
#: original_texis/frames.texi:1077
#, no-wrap
msgid "frame-inner-width &optional frame"
msgstr ""

#. type: defunx
#: original_texis/frames.texi:1078
#, no-wrap
msgid "frame-inner-height &optional frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:1081
msgid "These functions return the inner width and height of @var{frame} in pixels."
msgstr ""

#. type: defun
#: original_texis/frames.texi:1083
#, no-wrap
msgid "frame-text-width &optional frame"
msgstr ""

#. type: defunx
#: original_texis/frames.texi:1084
#, no-wrap
msgid "frame-text-height &optional frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:1087
msgid ""
"These functions return the width and height of the text area of @var{frame} "
"in pixels."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:1097
msgid ""
"On window systems that support it, Emacs tries by default to make the text "
"size of a frame measured in pixels a multiple of the frame's character "
"size.  This, however, usually means that a frame can be resized only in "
"character size increments when dragging its external borders.  It also may "
"break attempts to truly maximize the frame or making it ``fullheight'' or "
"``fullwidth'' (@pxref{Size Parameters})  leaving some empty space below "
"and/or on the right of the frame.  The following option may help in that "
"case."
msgstr ""

#. type: defopt
#: original_texis/frames.texi:1098
#, no-wrap
msgid "frame-resize-pixelwise"
msgstr ""

#. type: defopt
#: original_texis/frames.texi:1104
msgid ""
"If this option is @code{nil} (the default), a frame's text pixel size is "
"usually rounded to a multiple of the current values of that frame's "
"@code{frame-char-height} and @code{frame-char-width} whenever the frame is "
"resized.  If this is non-@code{nil}, no rounding occurs, hence frame sizes "
"can increase/decrease by one pixel."
msgstr ""

#. type: defopt
#: original_texis/frames.texi:1109
msgid ""
"Setting this variable usually causes the next resize operation to pass the "
"corresponding size hints to the window manager.  This means that this "
"variable should be set only in a user's initial file; applications should "
"never bind it temporarily."
msgstr ""

#. type: defopt
#: original_texis/frames.texi:1117
msgid ""
"The precise meaning of a value of @code{nil} for this option depends on the "
"toolkit used.  Dragging the external border with the mouse is done "
"character-wise provided the window manager is willing to process the "
"corresponding size hints.  Calling @code{set-frame-size} (see below)  with "
"arguments that do not specify the frame size as an integer multiple of its "
"character size, however, may: be ignored, cause a rounding (GTK+), or be "
"accepted (Lucid, Motif, MS-Windows)."
msgstr ""

#. type: defopt
#: original_texis/frames.texi:1120
msgid ""
"With some window managers you may have to set this to non-@code{nil} in "
"order to make a frame appear truly maximized or full-screen."
msgstr ""

#. type: defun
#: original_texis/frames.texi:1122
#, no-wrap
msgid "set-frame-size frame width height &optional pixelwise"
msgstr ""

#. type: defun
#: original_texis/frames.texi:1126
msgid ""
"This function sets the size of the text area of @var{frame}, measured in "
"terms of the canonical height and width of a character on @var{frame} "
"(@pxref{Frame Font})."
msgstr ""

#. type: defun
#: original_texis/frames.texi:1132
msgid ""
"The optional argument @var{pixelwise} non-@code{nil} means to measure the "
"new width and height in units of pixels instead.  Note that if "
"@code{frame-resize-pixelwise} is @code{nil}, some toolkits may refuse to "
"truly honor the request if it does not increase/decrease the frame size to a "
"multiple of its character size."
msgstr ""

#. type: defun
#: original_texis/frames.texi:1134
#, no-wrap
msgid "set-frame-height frame height &optional pretend pixelwise"
msgstr ""

#. type: defun
#: original_texis/frames.texi:1138
msgid ""
"This function resizes the text area of @var{frame} to a height of "
"@var{height} lines.  The sizes of existing windows in @var{frame} are "
"altered proportionally to fit."
msgstr ""

#. type: defun
#: original_texis/frames.texi:1148
msgid ""
"If @var{pretend} is non-@code{nil}, then Emacs displays @var{height} lines "
"of output in @var{frame}, but does not change its value for the actual "
"height of the frame.  This is only useful on text terminals.  Using a "
"smaller height than the terminal actually implements may be useful to "
"reproduce behavior observed on a smaller screen, or if the terminal "
"malfunctions when using its whole screen.  Setting the frame height directly "
"does not always work, because knowing the correct actual size may be "
"necessary for correct cursor positioning on text terminals."
msgstr ""

#. type: defun
#: original_texis/frames.texi:1154
msgid ""
"The optional fourth argument @var{pixelwise} non-@code{nil} means that "
"@var{frame} should be @var{height} pixels high.  Note that if "
"@code{frame-resize-pixelwise} is @code{nil}, some window managers may refuse "
"to truly honor the request if it does not increase/decrease the frame height "
"to a multiple of its character height."
msgstr ""

#. type: defun
#: original_texis/frames.texi:1158
msgid ""
"When used interactively, this command will ask the user for the number of "
"lines to set the height of the currently selected frame.  You can also "
"provide this value with a numeric prefix."
msgstr ""

#. type: defun
#: original_texis/frames.texi:1160
#, no-wrap
msgid "set-frame-width frame width &optional pretend pixelwise"
msgstr ""

#. type: defun
#: original_texis/frames.texi:1164
msgid ""
"This function sets the width of the text area of @var{frame}, measured in "
"characters.  The argument @var{pretend} has the same meaning as in "
"@code{set-frame-height}."
msgstr ""

#. type: defun
#: original_texis/frames.texi:1170
msgid ""
"The optional fourth argument @var{pixelwise} non-@code{nil} means that "
"@var{frame} should be @var{width} pixels wide.  Note that if "
"@code{frame-resize-pixelwise} is @code{nil}, some window managers may refuse "
"to fully honor the request if it does not increase/decrease the frame width "
"to a multiple of its character width."
msgstr ""

#. type: defun
#: original_texis/frames.texi:1174
msgid ""
"When used interactively, this command will ask the user for the number of "
"columns to set the width of the currently selected frame.  You can also "
"provide this value with a numeric prefix."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:1185
msgid ""
"None of these three functions will make a frame smaller than needed to "
"display all of its windows together with their scroll bars, fringes, "
"margins, dividers, mode and header lines.  This contrasts with requests by "
"the window manager triggered, for example, by dragging the external border "
"of a frame with the mouse.  Such requests are always honored by clipping, if "
"necessary, portions that cannot be displayed at the right, bottom corner of "
"the frame.  The parameters @code{min-width} and @code{min-height} "
"(@pxref{Size Parameters}) can be used to obtain a similar behavior when "
"changing the frame size from within Emacs."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:1186
#, no-wrap
msgid "tracking frame size changes"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:1193
msgid ""
"The abnormal hook @code{window-size-change-functions} (@pxref{Window Hooks}) "
"tracks all changes of the inner size of a frame including those induced by "
"request of the window-system or window manager.  To rule out false positives "
"that might occur when changing only the sizes of a frame's windows without "
"actually changing the size of the inner frame, use the following function."
msgstr ""

#. type: defun
#: original_texis/frames.texi:1194
#, no-wrap
msgid "frame-size-changed-p &optional frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:1200
msgid ""
"This function returns non-@code{nil} when the inner width or height of "
"@var{frame} has changed since @code{window-size-change-functions} was run "
"the last time for @var{frame}.  It always returns @code{nil} immediately "
"after running @code{window-size-change-functions} for @var{frame}."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:1205
#, no-wrap
msgid "implied frame resizing"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:1206
#, no-wrap
msgid "implied resizing of frame"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:1214
msgid ""
"By default, Emacs tries to keep the number of lines and columns of a frame's "
"text area unaltered when, for example, toggling its menu or tool bar, "
"changing its default font or setting the width of any of its scroll bars.  "
"This means that in such case Emacs must ask the window manager to resize the "
"frame's window in order to accommodate the size change."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:1219
msgid ""
"Occasionally, such @dfn{implied frame resizing} may be unwanted, for "
"example, when a frame has been maximized or made full-screen (where it's "
"turned off by default).  In general, users can disable implied resizing with "
"the following option:"
msgstr ""

#. type: defopt
#: original_texis/frames.texi:1220
#, no-wrap
msgid "frame-inhibit-implied-resize"
msgstr ""

#. type: defopt
#: original_texis/frames.texi:1225
msgid ""
"If this option is @code{nil}, changing a frame's font, menu bar, tool bar, "
"internal borders, fringes or scroll bars may resize its outer frame in order "
"to keep the number of columns or lines of its text area unaltered.  If this "
"option is @code{t}, no such resizing is done."
msgstr ""

#. type: defopt
#: original_texis/frames.texi:1232
msgid ""
"The value of this option can be also a list of frame parameters.  In that "
"case, implied resizing is inhibited for the change of a parameter that "
"appears in this list.  Parameters currently handled by this option are "
"@code{font}, @code{font-backend}, @code{internal-border-width}, "
"@code{menu-bar-lines} and @code{tool-bar-lines}."
msgstr ""

#. type: defopt
#: original_texis/frames.texi:1242
msgid ""
"Changing any of the @code{scroll-bar-width}, @code{scroll-bar-height}, "
"@code{vertical-scroll-bars}, @code{horizontal-scroll-bars}, "
"@code{left-fringe} and @code{right-fringe} frame parameters is handled as if "
"the frame contained just one live window.  This means, for example, that "
"removing vertical scroll bars on a frame containing several side by side "
"windows will shrink the outer frame width by the width of one scroll bar "
"provided this option is @code{nil} and keep it unchanged if this option is "
"@code{t} or a list containing @code{vertical-scroll-bars}."
msgstr ""

#. type: defopt
#: original_texis/frames.texi:1251
msgid ""
"The default value is @code{(tab-bar-lines tool-bar-lines)} for Lucid, Motif "
"and MS-Windows (which means that adding/removing a tool or tab bar there "
"does not change the outer frame height), @code{(tab-bar-lines)} on all other "
"window systems including GTK+ (which means that changing any of the "
"parameters listed above with the exception of @code{tab-bar-lines} may "
"change the size of the outer frame), and @code{t} otherwise (which means the "
"outer frame size never changes implicitly when there's no window system "
"support)."
msgstr ""

#. type: defopt
#: original_texis/frames.texi:1255
msgid ""
"Note that when a frame is not large enough to accommodate a change of any of "
"the parameters listed above, Emacs may try to enlarge the frame even if this "
"option is non-@code{nil}."
msgstr ""

#. type: defopt
#: original_texis/frames.texi:1264
msgid ""
"Note also that window managers usually do not ask for resizing a frame when "
"they change the number of lines occupied by an external menu or tool bar.  "
"Typically, such ``wrappings'' occur when a user shrinks a frame "
"horizontally, making it impossible to display all elements of its menu or "
"tool bar.  They may also result from a change of the major mode altering the "
"number of items of a menu or tool bar.  Any such wrappings may implicitly "
"alter the number of lines of a frame's text area and are unaffected by the "
"setting of this option."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:1269
#, no-wrap
msgid "frame parameters"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:1274
msgid ""
"A frame has many parameters that control its appearance and behavior.  Just "
"what parameters a frame has depends on what display mechanism it uses."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:1284
msgid ""
"Frame parameters exist mostly for the sake of graphical displays.  Most "
"frame parameters have no effect when applied to a frame on a text terminal; "
"only the @code{height}, @code{width}, @code{name}, @code{title}, "
"@code{menu-bar-lines}, @code{buffer-list} and @code{buffer-predicate} "
"parameters do something special.  If the terminal supports colors, the "
"parameters @code{foreground-color}, @code{background-color}, "
"@code{background-mode} and @code{display-type} are also meaningful.  If the "
"terminal supports frame transparency, the parameter @code{alpha} is also "
"meaningful."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:1291
msgid ""
"By default, frame parameters are saved and restored by the desktop library "
"functions (@pxref{Desktop Save Mode}) when the variable "
"@code{desktop-restore-frames} is non-@code{nil}.  It's the responsibility of "
"applications that their parameters are included in "
"@code{frameset-persistent-filter-alist} to avoid that they get meaningless "
"or even harmful values in restored sessions."
msgstr ""

#. type: node
#: original_texis/frames.texi:1297 original_texis/frames.texi:1299
#, no-wrap
msgid "Parameter Access"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:1297
msgid "How to change a frame's parameters."
msgstr ""

#. type: node
#: original_texis/frames.texi:1297 original_texis/frames.texi:1362
#, no-wrap
msgid "Initial Parameters"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:1297
msgid "Specifying frame parameters when you make a frame."
msgstr ""

#. type: subsection
#: original_texis/frames.texi:1297 original_texis/frames.texi:1431
#: original_texis/frames.texi:1432
#, no-wrap
msgid "Window Frame Parameters"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:1297
msgid "List of frame parameters for window systems."
msgstr ""

#. type: subsection
#: original_texis/frames.texi:1297 original_texis/frames.texi:2541
#: original_texis/frames.texi:2542
#, no-wrap
msgid "Geometry"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:1297
msgid "Parsing geometry specifications."
msgstr ""

#. type: subsection
#: original_texis/frames.texi:1300
#, no-wrap
msgid "Access to Frame Parameters"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:1304
msgid "These functions let you read and change the parameter values of a frame."
msgstr ""

#. type: defun
#: original_texis/frames.texi:1305
#, no-wrap
msgid "frame-parameter frame parameter"
msgstr ""

#. type: defun
#: original_texis/frames.texi:1310
msgid ""
"This function returns the value of the parameter @var{parameter} (a symbol) "
"of @var{frame}.  If @var{frame} is @code{nil}, it returns the selected "
"frame's parameter.  If @var{frame} has no setting for @var{parameter}, this "
"function returns @code{nil}."
msgstr ""

#. type: defun
#: original_texis/frames.texi:1312
#, no-wrap
msgid "frame-parameters &optional frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:1316
msgid ""
"The function @code{frame-parameters} returns an alist listing all the "
"parameters of @var{frame} and their values.  If @var{frame} is @code{nil} or "
"omitted, this returns the selected frame's parameters"
msgstr ""

#. type: defun
#: original_texis/frames.texi:1318
#, no-wrap
msgid "modify-frame-parameters frame alist"
msgstr ""

#. type: defun
#: original_texis/frames.texi:1325
msgid ""
"This function alters the frame @var{frame} based on the elements of "
"@var{alist}.  Each element of @var{alist} has the form @code{(@var{parm} "
". @var{value})}, where @var{parm} is a symbol naming a parameter.  If you "
"don't mention a parameter in @var{alist}, its value doesn't change.  If "
"@var{frame} is @code{nil}, it defaults to the selected frame."
msgstr ""

#. type: defun
#: original_texis/frames.texi:1331
msgid ""
"Some parameters are only meaningful for frames on certain kinds of display "
"(@pxref{Frames}).  If @var{alist} includes parameters that are not "
"meaningful for the @var{frame}'s display, this function will change its "
"value in the frame's parameter list, but will otherwise ignore it."
msgstr ""

#. type: defun
#: original_texis/frames.texi:1342
msgid ""
"When @var{alist} specifies more than one parameter whose value can affect "
"the new size of @var{frame}, the final size of the frame may differ "
"according to the toolkit used.  For example, specifying that a frame should "
"from now on have a menu and/or tool bar instead of none and simultaneously "
"specifying the new height of the frame will inevitably lead to a "
"recalculation of the frame's height.  Conceptually, in such case, this "
"function will try to have the explicit height specification prevail.  It "
"cannot be excluded, however, that the addition (or removal)  of the menu or "
"tool bar, when eventually performed by the toolkit, will defeat this "
"intention."
msgstr ""

#. type: defun
#: original_texis/frames.texi:1347
msgid ""
"Sometimes, binding @code{frame-inhibit-implied-resize} (@pxref{Implied Frame "
"Resizing}) to a non-@code{nil} value around calls to this function may fix "
"the problem sketched here.  Sometimes, however, exactly such binding may be "
"hit by the problem."
msgstr ""

#. type: defun
#: original_texis/frames.texi:1349
#, no-wrap
msgid "set-frame-parameter frame parm value"
msgstr ""

#. type: defun
#: original_texis/frames.texi:1353
msgid ""
"This function sets the frame parameter @var{parm} to the specified "
"@var{value}.  If @var{frame} is @code{nil}, it defaults to the selected "
"frame."
msgstr ""

#. type: defun
#: original_texis/frames.texi:1355
#, no-wrap
msgid "modify-all-frames-parameters alist"
msgstr ""

#. type: defun
#: original_texis/frames.texi:1360
msgid ""
"This function alters the frame parameters of all existing frames according "
"to @var{alist}, then modifies @code{default-frame-alist} (and, if necessary, "
"@code{initial-frame-alist}) to apply the same parameter values to frames "
"that will be created henceforth."
msgstr ""

#. type: subsection
#: original_texis/frames.texi:1363
#, no-wrap
msgid "Initial Frame Parameters"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:1364
#, no-wrap
msgid "parameters of initial frame"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:1369
msgid ""
"You can specify the parameters for the initial startup frame by setting "
"@code{initial-frame-alist} in your init file (@pxref{Init File})."
msgstr ""

#. type: defopt
#: original_texis/frames.texi:1370
#, no-wrap
msgid "initial-frame-alist"
msgstr ""

#. type: defopt
#: original_texis/frames.texi:1375
msgid ""
"This variable's value is an alist of parameter values used when creating the "
"initial frame.  You can set this variable to specify the appearance of the "
"initial frame without altering subsequent frames.  Each element has the "
"form:"
msgstr ""

#. type: example
#: original_texis/frames.texi:1378
#, no-wrap
msgid "(@var{parameter} . @var{value})\n"
msgstr ""

#. type: defopt
#: original_texis/frames.texi:1384
msgid ""
"Emacs creates the initial frame before it reads your init file.  After "
"reading that file, Emacs checks @code{initial-frame-alist}, and applies the "
"parameter settings in the altered value to the already created initial "
"frame."
msgstr ""

#. type: defopt
#: original_texis/frames.texi:1390
msgid ""
"If these settings affect the frame geometry and appearance, you'll see the "
"frame appear with the wrong ones and then change to the specified ones.  If "
"that bothers you, you can specify the same geometry and appearance with X "
"resources; those do take effect before the frame is created.  @xref{X "
"Resources,, X Resources, emacs, The GNU Emacs Manual}."
msgstr ""

#. type: defopt
#: original_texis/frames.texi:1398
msgid ""
"X resource settings typically apply to all frames.  If you want to specify "
"some X resources solely for the sake of the initial frame, and you don't "
"want them to apply to subsequent frames, here's how to achieve this.  "
"Specify parameters in @code{default-frame-alist} to override the X resources "
"for subsequent frames; then, to prevent these from affecting the initial "
"frame, specify the same parameters in @code{initial-frame-alist} with values "
"that match the X resources."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:1404
msgid ""
"If these parameters include @code{(minibuffer . nil)}, that indicates that "
"the initial frame should have no minibuffer.  In this case, Emacs creates a "
"separate @dfn{minibuffer-only frame} as well."
msgstr ""

#. type: defopt
#: original_texis/frames.texi:1405
#, no-wrap
msgid "minibuffer-frame-alist"
msgstr ""

#. type: defopt
#: original_texis/frames.texi:1410
msgid ""
"This variable's value is an alist of parameter values used when creating an "
"initial minibuffer-only frame (i.e., the minibuffer-only frame that Emacs "
"creates if @code{initial-frame-alist} specifies a frame with no minibuffer)."
msgstr ""

#. type: defopt
#: original_texis/frames.texi:1412
#, no-wrap
msgid "default-frame-alist"
msgstr ""

#. type: defopt
#: original_texis/frames.texi:1417
msgid ""
"This is an alist specifying default values of frame parameters for all Emacs "
"frames---the first frame, and subsequent frames.  When using the X Window "
"System, you can get the same results by means of X resources in many cases."
msgstr ""

#. type: defopt
#: original_texis/frames.texi:1421
msgid ""
"Setting this variable does not affect existing frames.  Furthermore, "
"functions that display a buffer in a separate frame may override the default "
"parameters by supplying their own parameters."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:1430
msgid ""
"If you invoke Emacs with command-line options that specify frame appearance, "
"those options take effect by adding elements to either "
"@code{initial-frame-alist} or @code{default-frame-alist}.  Options which "
"affect just the initial frame, such as @samp{--geometry} and "
"@samp{--maximized}, add to @code{initial-frame-alist}; the others add to "
"@code{default-frame-alist}.  @pxref{Emacs Invocation,, Command Line "
"Arguments for Emacs Invocation, emacs, The GNU Emacs Manual}."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:1433
#, no-wrap
msgid "frame parameters for windowed displays"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:1442
msgid ""
"Just what parameters a frame has depends on what display mechanism it uses.  "
"This section describes the parameters that have special meanings on some or "
"all kinds of terminals.  Of these, @code{name}, @code{title}, @code{height}, "
"@code{width}, @code{buffer-list} and @code{buffer-predicate} provide "
"meaningful information in terminal frames, and @code{tty-color-mode} is "
"meaningful only for frames on text terminals."
msgstr ""

#. type: subsubsection
#: original_texis/frames.texi:1457 original_texis/frames.texi:1459
#: original_texis/frames.texi:1460
#, no-wrap
msgid "Basic Parameters"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:1457
msgid "Parameters that are fundamental."
msgstr ""

#. type: subsubsection
#: original_texis/frames.texi:1457 original_texis/frames.texi:1512
#: original_texis/frames.texi:1513
#, no-wrap
msgid "Position Parameters"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:1457
msgid "The position of the frame on the screen."
msgstr ""

#. type: subsubsection
#: original_texis/frames.texi:1457 original_texis/frames.texi:1661
#: original_texis/frames.texi:1662
#, no-wrap
msgid "Size Parameters"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:1457
msgid "Frame's size."
msgstr ""

#. type: subsubsection
#: original_texis/frames.texi:1457 original_texis/frames.texi:1821
#: original_texis/frames.texi:1822
#, no-wrap
msgid "Layout Parameters"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:1457
msgid "Size of parts of the frame, and enabling or disabling some parts."
msgstr ""

#. type: subsubsection
#: original_texis/frames.texi:1457 original_texis/frames.texi:1944
#: original_texis/frames.texi:1945
#, no-wrap
msgid "Buffer Parameters"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:1457
msgid "Which buffers have been or should be shown."
msgstr ""

#. type: subsubsection
#: original_texis/frames.texi:1457 original_texis/frames.texi:1995
#: original_texis/frames.texi:1996
#, no-wrap
msgid "Frame Interaction Parameters"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:1457
msgid "Parameters for interacting with other frames."
msgstr ""

#. type: subsubsection
#: original_texis/frames.texi:1457 original_texis/frames.texi:2069
#: original_texis/frames.texi:2070
#, no-wrap
msgid "Mouse Dragging Parameters"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:1457
msgid "Parameters for resizing and moving frames with the mouse."
msgstr ""

#. type: node
#: original_texis/frames.texi:1457 original_texis/frames.texi:2136
#, no-wrap
msgid "Management Parameters"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:1457
msgid "Communicating with the window manager."
msgstr ""

#. type: subsubsection
#: original_texis/frames.texi:1457 original_texis/frames.texi:2299
#: original_texis/frames.texi:2300
#, no-wrap
msgid "Cursor Parameters"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:1457
msgid "Controlling the cursor appearance."
msgstr ""

#. type: subsubsection
#: original_texis/frames.texi:1457 original_texis/frames.texi:2380
#: original_texis/frames.texi:2381
#, no-wrap
msgid "Font and Color Parameters"
msgstr ""

#. type: menuentry
#: original_texis/frames.texi:1457
msgid "Fonts and colors for the frame text."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:1464
msgid ""
"These frame parameters give the most basic information about the frame.  "
"@code{title} and @code{name} are meaningful on all terminals."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1466
#, no-wrap
msgid "display@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1467
#, no-wrap
msgid "display"
msgstr ""

#. type: table
#: original_texis/frames.texi:1472
msgid ""
"The display on which to open this frame.  It should be a string of the form "
"@samp{@var{host}:@var{dpy}.@var{screen}}, just like the @env{DISPLAY} "
"environment variable.  @xref{Multiple Terminals}, for more details about "
"display names."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1473
#, no-wrap
msgid "display-type@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1474
#, no-wrap
msgid "display-type"
msgstr ""

#. type: table
#: original_texis/frames.texi:1478
msgid ""
"This parameter describes the range of possible colors that can be used in "
"this frame.  Its value is @code{color}, @code{grayscale} or @code{mono}."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1479
#, no-wrap
msgid "title@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1480
#, no-wrap
msgid "title"
msgstr ""

#. type: table
#: original_texis/frames.texi:1491
msgid ""
"If a frame has a non-@code{nil} title, that title appears in the window "
"system's title bar at the top of the frame, and also in the mode line of "
"windows in that frame if @code{mode-line-frame-identification} uses "
"@samp{%F} (@pxref{%-Constructs}).  This is normally the case when Emacs is "
"not using a window system, and can only display one frame at a time.  When "
"Emacs is using a window system, this parameter, if non-@code{nil}, overrides "
"the title determined by the @code{name} parameter and the implicit title "
"calculated according to @code{frame-title-format}.  It also overrides the "
"title determined by @code{icon-title-format} for iconified frames.  "
"@xref{Frame Titles}."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1492
#, no-wrap
msgid "name@r{, a frame parameter}"
msgstr ""

#. type: table
#: original_texis/frames.texi:1499
msgid ""
"The name of the frame.  If you don't specify a name via this parameter, "
"Emacs sets the frame name automatically, as specified by "
"@code{frame-title-format} and @code{icon-title-format}, and that is the "
"frame's title that will appear on display when Emacs uses a window system "
"(unless the @code{title} parameter overrides it)."
msgstr ""

#. type: table
#: original_texis/frames.texi:1503
msgid ""
"If you specify the frame name explicitly when you create the frame, the name "
"is also used (instead of the name of the Emacs executable) when looking up X "
"resources for the frame."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1504
#, no-wrap
msgid "explicit-name@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1505
#, no-wrap
msgid "explicit-name"
msgstr ""

#. type: table
#: original_texis/frames.texi:1509
msgid ""
"If the frame name was specified explicitly when the frame was created, this "
"parameter will be that name.  If the frame wasn't explicitly named, this "
"parameter will be @code{nil}."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:1514
#, no-wrap
msgid "window position on display"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:1524
msgid ""
"Parameters describing the X- and Y-offsets of a frame are always measured in "
"pixels.  For a normal, non-child frame they specify the frame's outer "
"position (@pxref{Frame Geometry}) relative to its display's origin.  For a "
"child frame (@pxref{Child Frames}) they specify the frame's outer position "
"relative to the native position of the frame's parent frame.  (Note that "
"none of these parameters is meaningful on TTY frames.)"
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1526
#, no-wrap
msgid "left@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1527
#, no-wrap
msgid "left"
msgstr ""

#. type: table
#: original_texis/frames.texi:1531
msgid ""
"The position, in pixels, of the left outer edge of the frame with respect to "
"the left edge of the frame's display or parent frame.  It can be specified "
"in one of the following ways."
msgstr ""

#. type: item
#: original_texis/frames.texi:1533 original_texis/frames.texi:1676
#, no-wrap
msgid "an integer"
msgstr ""

#. type: table
#: original_texis/frames.texi:1537
msgid ""
"A positive integer always relates the left edge of the frame to the left "
"edge of its display or parent frame.  A negative integer relates the right "
"frame edge to the right edge of the display or parent frame."
msgstr ""

#. type: code{#1}
#: original_texis/frames.texi:1538
#, no-wrap
msgid "(+ @var{pos})"
msgstr ""

#. type: table
#: original_texis/frames.texi:1544
msgid ""
"This specifies the position of the left frame edge relative to the left edge "
"of its display or parent frame.  The integer @var{pos} may be positive or "
"negative; a negative value specifies a position outside the screen or parent "
"frame or on a monitor other than the primary one (for multi-monitor "
"displays)."
msgstr ""

#. type: code{#1}
#: original_texis/frames.texi:1545
#, no-wrap
msgid "(- @var{pos})"
msgstr ""

#. type: table
#: original_texis/frames.texi:1551
msgid ""
"This specifies the position of the right frame edge relative to the right "
"edge of the display or parent frame.  The integer @var{pos} may be positive "
"or negative; a negative value specifies a position outside the screen or "
"parent frame or on a monitor other than the primary one (for multi-monitor "
"displays)."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:1552
#, no-wrap
msgid "left position ratio"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:1553
#, no-wrap
msgid "top position ratio"
msgstr ""

#. type: item
#: original_texis/frames.texi:1554 original_texis/frames.texi:1687
#, no-wrap
msgid "a floating-point value"
msgstr ""

#. type: table
#: original_texis/frames.texi:1565
msgid ""
"A floating-point value in the range 0.0 to 1.0 specifies the left edge's "
"offset via the @dfn{left position ratio} of the frame---the ratio of the "
"left edge of its outer frame to the width of the frame's workarea "
"(@pxref{Multiple Terminals}) or its parent's native frame (@pxref{Child "
"Frames}) minus the width of the outer frame.  Thus, a left position ratio of "
"0.0 flushes a frame to the left, a ratio of 0.5 centers it and a ratio of "
"1.0 flushes it to the right of its display or parent frame.  Similarly, the "
"@dfn{top position ratio} of a frame is the ratio of the frame's top position "
"to the height of its workarea or parent frame minus the height of the frame."
msgstr ""

#. type: table
#: original_texis/frames.texi:1569
msgid ""
"Emacs will try to keep the position ratios of a child frame unaltered if "
"that frame has a non-@code{nil} @code{keep-ratio} parameter (@pxref{Frame "
"Interaction Parameters}) and its parent frame is resized."
msgstr ""

#. type: table
#: original_texis/frames.texi:1575
msgid ""
"Since the outer size of a frame (@pxref{Frame Geometry}) is usually "
"unavailable before a frame has been made visible, it is generally not "
"advisable to use floating-point values when creating decorated frames.  "
"Floating-point values are more suited for ensuring that an (undecorated)  "
"child frame is positioned nicely within the area of its parent frame."
msgstr ""

#. type: table
#: original_texis/frames.texi:1581
msgid ""
"Some window managers ignore program-specified positions.  If you want to be "
"sure the position you specify is not ignored, specify a non-@code{nil} value "
"for the @code{user-position} parameter as in the following example:"
msgstr ""

#. type: example
#: original_texis/frames.texi:1585
#, no-wrap
msgid ""
"(modify-frame-parameters\n"
"  nil '((user-position . t) (left . (+ -4))))\n"
msgstr ""

#. type: table
#: original_texis/frames.texi:1593
msgid ""
"In general, it is not a good idea to position a frame relative to the right "
"or bottom edge of its display.  Positioning the initial or a new frame is "
"either not accurate (because the size of the outer frame is not yet fully "
"known before the frame has been made visible) or will cause additional "
"flicker (if the frame has to be repositioned after becoming visible)."
msgstr ""

#. type: table
#: original_texis/frames.texi:1600
msgid ""
"Note also, that positions specified relative to the right/bottom edge of a "
"display, workarea or parent frame as well as floating-point offsets are "
"stored internally as integer offsets relative to the left/top edge of the "
"display, workarea or parent frame edge.  They are also returned as such by "
"functions like @code{frame-parameters} and restored as such by the desktop "
"saving routines."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1601
#, no-wrap
msgid "top@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1602
#, no-wrap
msgid "top"
msgstr ""

#. type: table
#: original_texis/frames.texi:1606
msgid ""
"The screen position of the top (or bottom) edge, in pixels, with respect to "
"the top (or bottom) edge of the display or parent frame.  It works just like "
"@code{left}, except vertically instead of horizontally."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1607
#, no-wrap
msgid "icon-left@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1608
#, no-wrap
msgid "icon-left"
msgstr ""

#. type: table
#: original_texis/frames.texi:1614
msgid ""
"The screen position of the left edge of the frame's icon, in pixels, "
"counting from the left edge of the screen.  This takes effect when the frame "
"is iconified, if the window manager supports this feature.  If you specify a "
"value for this parameter, then you must also specify a value for "
"@code{icon-top} and vice versa."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1615
#, no-wrap
msgid "icon-top@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1616
#, no-wrap
msgid "icon-top"
msgstr ""

#. type: table
#: original_texis/frames.texi:1620
msgid ""
"The screen position of the top edge of the frame's icon, in pixels, counting "
"from the top edge of the screen.  This takes effect when the frame is "
"iconified, if the window manager supports this feature."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1621
#, no-wrap
msgid "user-position@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1622
#, no-wrap
msgid "user-position"
msgstr ""

#. type: table
#: original_texis/frames.texi:1628
msgid ""
"When you create a frame and specify its screen position with the @code{left} "
"and @code{top} parameters, use this parameter to say whether the specified "
"position was user-specified (explicitly requested in some way by a human "
"user) or merely program-specified (chosen by a program).  A non-@code{nil} "
"value says the position was user-specified."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:1629
#, no-wrap
msgid "window positions and window managers"
msgstr ""

#. type: table
#: original_texis/frames.texi:1636
msgid ""
"Window managers generally heed user-specified positions, and some heed "
"program-specified positions too.  But many ignore program-specified "
"positions, placing the window in a default fashion or letting the user place "
"it with the mouse.  Some window managers, including @code{twm}, let the user "
"specify whether to obey program-specified positions or ignore them."
msgstr ""

#. type: table
#: original_texis/frames.texi:1641
msgid ""
"When you call @code{make-frame}, you should specify a non-@code{nil} value "
"for this parameter if the values of the @code{left} and @code{top} "
"parameters represent the user's stated preference; otherwise, use "
"@code{nil}."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1642
#, no-wrap
msgid "z-group@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1643
#, no-wrap
msgid "z-group"
msgstr ""

#. type: table
#: original_texis/frames.texi:1646
msgid ""
"This parameter specifies a relative position of the frame's window-system "
"window in the stacking (Z-) order of the frame's display."
msgstr ""

#. type: table
#: original_texis/frames.texi:1655
msgid ""
"If this is @code{above}, the window-system will display the window that "
"corresponds to the frame above all other window-system windows that do not "
"have the @code{above} property set.  If this is @code{nil}, the frame's "
"window is displayed below all windows that have the @code{above} property "
"set and above all windows that have the @code{below} property set.  If this "
"is @code{below}, the frame's window is displayed below all windows that do "
"not have the @code{below} property set."
msgstr ""

#. type: table
#: original_texis/frames.texi:1658
msgid ""
"To position the frame above or below a specific other frame use the function "
"@code{frame-restack} (@pxref{Raising and Lowering})."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:1663
#, no-wrap
msgid "window size on display"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:1668
msgid ""
"Frame parameters usually specify frame sizes in character units.  On "
"graphical displays, the @code{default} face determines the actual pixel "
"sizes of these character units (@pxref{Face Attributes})."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1670
#, no-wrap
msgid "width@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1671
#, no-wrap
msgid "width"
msgstr ""

#. type: table
#: original_texis/frames.texi:1674
msgid ""
"This parameter specifies the width of the frame.  It can be specified as in "
"the following ways:"
msgstr ""

#. type: table
#: original_texis/frames.texi:1679
msgid ""
"A positive integer specifies the width of the frame's text area "
"(@pxref{Frame Geometry}) in characters."
msgstr ""

#. type: item
#: original_texis/frames.texi:1680
#, no-wrap
msgid "a cons cell"
msgstr ""

#. type: table
#: original_texis/frames.texi:1684
msgid ""
"If this is a cons cell with the symbol @code{text-pixels} in its @sc{car}, "
"the @sc{cdr} of that cell specifies the width of the frame's text area in "
"pixels."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:1685
#, no-wrap
msgid "frame width ratio"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:1686
#, no-wrap
msgid "frame height ratio"
msgstr ""

#. type: table
#: original_texis/frames.texi:1696
msgid ""
"A floating-point number between 0.0 and 1.0 can be used to specify the width "
"of a frame via its @dfn{width ratio}---the ratio of its outer width "
"(@pxref{Frame Geometry}) to the width of the frame's workarea "
"(@pxref{Multiple Terminals}) or its parent frame's (@pxref{Child Frames}) "
"native frame.  Thus, a value of 0.5 makes the frame occupy half of the width "
"of its workarea or parent frame, a value of 1.0 the full width.  Similarly, "
"the @dfn{height ratio} of a frame is the ratio of its outer height to the "
"height of its workarea or its parent's native frame."
msgstr ""

#. type: table
#: original_texis/frames.texi:1700
msgid ""
"Emacs will try to keep the width and height ratio of a child frame unaltered "
"if that frame has a non-@code{nil} @code{keep-ratio} parameter (@pxref{Frame "
"Interaction Parameters}) and its parent frame is resized."
msgstr ""

#. type: table
#: original_texis/frames.texi:1708
msgid ""
"Since the outer size of a frame is usually unavailable before a frame has "
"been made visible, it is generally not advisable to use floating-point "
"values when creating decorated frames.  Floating-point values are more "
"suited to ensure that a child frame always fits within the area of its "
"parent frame as, for example, when customizing @code{display-buffer-alist} "
"(@pxref{Choosing Window}) via @code{display-buffer-in-child-frame}."
msgstr ""

#. type: table
#: original_texis/frames.texi:1715
msgid ""
"Regardless of how this parameter was specified, functions reporting the "
"value of this parameter like @code{frame-parameters} always report the width "
"of the frame's text area in characters as an integer rounded, if necessary, "
"to a multiple of the frame's default character width.  That value is also "
"used by the desktop saving routines."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1716
#, no-wrap
msgid "height@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1717
#, no-wrap
msgid "height"
msgstr ""

#. type: table
#: original_texis/frames.texi:1720
msgid ""
"This parameter specifies the height of the frame.  It works just like "
"@code{width}, except vertically instead of horizontally."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1721
#, no-wrap
msgid "user-size@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1722
#, no-wrap
msgid "user-size"
msgstr ""

#. type: table
#: original_texis/frames.texi:1727
msgid ""
"This does for the size parameters @code{height} and @code{width} what the "
"@code{user-position} parameter (@pxref{Position Parameters, user-position}) "
"does for the position parameters @code{top} and @code{left}."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1728
#, no-wrap
msgid "min-width@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1729
#, no-wrap
msgid "min-width"
msgstr ""

#. type: table
#: original_texis/frames.texi:1738
msgid ""
"This parameter specifies the minimum native width (@pxref{Frame Geometry}) "
"of the frame, in characters.  Normally, the functions that establish a "
"frame's initial width or resize a frame horizontally make sure that all the "
"frame's windows, vertical scroll bars, fringes, margins and vertical "
"dividers can be displayed.  This parameter, if non-@code{nil} allows to make "
"a frame narrower than that with the consequence that any components that do "
"not fit will be clipped by the window manager."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1739
#, no-wrap
msgid "min-height@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1740
#, no-wrap
msgid "min-height"
msgstr ""

#. type: table
#: original_texis/frames.texi:1749
msgid ""
"This parameter specifies the minimum native height (@pxref{Frame Geometry}) "
"of the frame, in characters.  Normally, the functions that establish a "
"frame's initial size or resize a frame make sure that all the frame's "
"windows, horizontal scroll bars and dividers, mode and header lines, the "
"echo area and the internal menu and tool bar can be displayed.  This "
"parameter, if non-@code{nil} allows to make a frame smaller than that with "
"the consequence that any components that do not fit will be clipped by the "
"window manager."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:1750
#, no-wrap
msgid "fullboth frames"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:1751
#, no-wrap
msgid "fullheight frames"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:1752
#, no-wrap
msgid "fullwidth frames"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:1753
#, no-wrap
msgid "maximized frames"
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1754
#, no-wrap
msgid "fullscreen@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1755
#, no-wrap
msgid "fullscreen"
msgstr ""

#. type: table
#: original_texis/frames.texi:1768
msgid ""
"This parameter specifies whether to maximize the frame's width, height or "
"both.  Its value can be @code{fullwidth}, @code{fullheight}, "
"@code{fullboth}, or @code{maximized}.@footnote{On PGTK frames, setting the "
"values @code{fullheight} and @code{fullwidth} has no effect.} A "
"@dfn{fullwidth} frame is as wide as possible, a @dfn{fullheight} frame is as "
"tall as possible, and a @dfn{fullboth} frame is both as wide and as tall as "
"possible.  A @dfn{maximized} frame is like a ``fullboth'' frame, except that "
"it usually keeps its title bar and the buttons for resizing and closing the "
"frame.  Also, maximized frames typically avoid hiding any task bar or panels "
"displayed on the desktop.  A ``fullboth'' frame, on the other hand, usually "
"omits the title bar and occupies the entire available screen space."
msgstr ""

#. type: table
#: original_texis/frames.texi:1774
msgid ""
"Full-height and full-width frames are more similar to maximized frames in "
"this regard.  However, these typically display an external border which "
"might be absent with maximized frames.  Hence the heights of maximized and "
"full-height frames and the widths of maximized and full-width frames often "
"differ by a few pixels."
msgstr ""

#. type: table
#: original_texis/frames.texi:1781
msgid ""
"With some window managers you may have to customize the variable "
"@code{frame-resize-pixelwise} (@pxref{Frame Size}) in order to make a frame "
"truly appear maximized or full-screen.  Moreover, some window managers might "
"not support smooth transition between the various full-screen or "
"maximization states.  Customizing the variable "
"@code{x-frame-normalize-before-maximize} can help to overcome that."
msgstr ""

#. type: table
#: original_texis/frames.texi:1785
msgid ""
"Full-screen on macOS hides both the tool-bar and the menu-bar, however both "
"will be displayed if the mouse pointer is moved to the top of the screen."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1786
#, no-wrap
msgid "fullscreen-restore@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1787
#, no-wrap
msgid "fullscreen-restore"
msgstr ""

#. type: table
#: original_texis/frames.texi:1795
msgid ""
"This parameter specifies the desired fullscreen state of the frame after "
"invoking the @code{toggle-frame-fullscreen} command (@pxref{Frame "
"Commands,,, emacs, The GNU Emacs Manual}) in the ``fullboth'' state.  "
"Normally this parameter is installed automatically by that command when "
"toggling the state to fullboth.  If, however, you start Emacs in the "
"``fullboth'' state, you have to specify the desired behavior in your initial "
"file as, for example"
msgstr ""

#. type: example
#: original_texis/frames.texi:1800
#, no-wrap
msgid ""
"(setq default-frame-alist\n"
"    '((fullscreen . fullboth)\n"
"      (fullscreen-restore . fullheight)))\n"
msgstr ""

#. type: table
#: original_texis/frames.texi:1804
msgid ""
"This will give a new frame full height after typing in it @key{F11} for the "
"first time."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1805
#, no-wrap
msgid "fit-frame-to-buffer-margins@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1806
#, no-wrap
msgid "fit-frame-to-buffer-margins"
msgstr ""

#. type: table
#: original_texis/frames.texi:1811
msgid ""
"This parameter allows to override the value of the option "
"@code{fit-frame-to-buffer-margins} when fitting this frame to the buffer of "
"its root window with @code{fit-frame-to-buffer} (@pxref{Resizing Windows})."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1812
#, no-wrap
msgid "fit-frame-to-buffer-sizes@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1813
#, no-wrap
msgid "fit-frame-to-buffer-sizes"
msgstr ""

#. type: table
#: original_texis/frames.texi:1818
msgid ""
"This parameter allows to override the value of the option "
"@code{fit-frame-to-buffer-sizes} when fitting this frame to the buffer of "
"its root window with @code{fit-frame-to-buffer} (@pxref{Resizing Windows})."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:1823
#, no-wrap
msgid "layout parameters of frames"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:1824
#, no-wrap
msgid "frame layout parameters"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:1828
msgid ""
"These frame parameters enable or disable various parts of the frame, or "
"control their sizes."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1830
#, no-wrap
msgid "border-width@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1831
#, no-wrap
msgid "border-width"
msgstr ""

#. type: table
#: original_texis/frames.texi:1833
msgid "The width in pixels of the frame's outer border (@pxref{Frame Geometry})."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1834
#, no-wrap
msgid "internal-border-width@r{, a frame parameter}"
msgstr ""

#. type: table
#: original_texis/frames.texi:1838
msgid "The width in pixels of the frame's internal border (@pxref{Frame Geometry})."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1839
#, no-wrap
msgid "child-frame-border-width@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1840
#, no-wrap
msgid "child-frame-border-width"
msgstr ""

#. type: table
#: original_texis/frames.texi:1845
msgid ""
"The width in pixels of the frame's internal border (@pxref{Frame Geometry}) "
"if the given frame is a child frame (@pxref{Child Frames}).  If this is "
"@code{nil}, the value specified by the @code{internal-border-width} "
"parameter is used instead."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1846
#, no-wrap
msgid "vertical-scroll-bars@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1847
#, no-wrap
msgid "vertical-scroll-bars"
msgstr ""

#. type: table
#: original_texis/frames.texi:1851
msgid ""
"Whether the frame has scroll bars (@pxref{Scroll Bars}) for vertical "
"scrolling, and which side of the frame they should be on.  The possible "
"values are @code{left}, @code{right}, and @code{nil} for no scroll bars."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1852
#, no-wrap
msgid "horizontal-scroll-bars@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1853
#, no-wrap
msgid "horizontal-scroll-bars"
msgstr ""

#. type: table
#: original_texis/frames.texi:1856
msgid ""
"Whether the frame has scroll bars for horizontal scrolling (@code{t} and "
"@code{bottom} mean yes, @code{nil} means no)."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1857
#, no-wrap
msgid "scroll-bar-width@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1858
#, no-wrap
msgid "scroll-bar-width"
msgstr ""

#. type: table
#: original_texis/frames.texi:1861
msgid ""
"The width of vertical scroll bars, in pixels, or @code{nil} meaning to use "
"the default width."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1862
#, no-wrap
msgid "scroll-bar-height@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1863
#, no-wrap
msgid "scroll-bar-height"
msgstr ""

#. type: table
#: original_texis/frames.texi:1866
msgid ""
"The height of horizontal scroll bars, in pixels, or @code{nil} meaning to "
"use the default height."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1867
#, no-wrap
msgid "left-fringe@r{, a frame parameter}"
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1868
#, no-wrap
msgid "right-fringe@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1869
#, no-wrap
msgid "left-fringe"
msgstr ""

#. type: itemx
#: original_texis/frames.texi:1870
#, no-wrap
msgid "right-fringe"
msgstr ""

#. type: table
#: original_texis/frames.texi:1874
msgid ""
"The default width of the left and right fringes of windows in this frame "
"(@pxref{Fringes}).  If either of these is zero, that effectively removes the "
"corresponding fringe."
msgstr ""

#. type: table
#: original_texis/frames.texi:1879
msgid ""
"When you use @code{frame-parameter} to query the value of either of these "
"two frame parameters, the return value is always an integer.  When using "
"@code{set-frame-parameter}, passing a @code{nil} value imposes an actual "
"default value of 8 pixels."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1880
#, no-wrap
msgid "right-divider-width@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1881
#, no-wrap
msgid "right-divider-width"
msgstr ""

#. type: table
#: original_texis/frames.texi:1885
msgid ""
"The width (thickness) reserved for the right divider (@pxref{Window "
"Dividers}) of any window on the frame, in pixels.  A value of zero means to "
"not draw right dividers."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1886
#, no-wrap
msgid "bottom-divider-width@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1887
#, no-wrap
msgid "bottom-divider-width"
msgstr ""

#. type: table
#: original_texis/frames.texi:1891
msgid ""
"The width (thickness) reserved for the bottom divider (@pxref{Window "
"Dividers}) of any window on the frame, in pixels.  A value of zero means to "
"not draw bottom dividers."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1892
#, no-wrap
msgid "menu-bar-lines@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1893
#, no-wrap
msgid "menu-bar-lines"
msgstr ""

#. type: table
#: original_texis/frames.texi:1902
msgid ""
"The number of lines to allocate at the top of the frame for a menu bar "
"(@pxref{Menu Bar}).  The default is one if Menu Bar mode is enabled and zero "
"otherwise.  @xref{Menu Bars,,,emacs, The GNU Emacs Manual}.  For an external "
"menu bar (@pxref{Frame Layout}), this value remains unchanged even when the "
"menu bar wraps to two or more lines.  In that case, the @code{menu-bar-size} "
"value returned by @code{frame-geometry} (@pxref{Frame Geometry}) allows to "
"derive whether the menu bar actually occupies one or more lines."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1903
#, no-wrap
msgid "tool-bar-lines@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1904
#, no-wrap
msgid "tool-bar-lines"
msgstr ""

#. type: table
#: original_texis/frames.texi:1909
msgid ""
"The number of lines to use for the tool bar (@pxref{Tool Bar}).  The default "
"is one if Tool Bar mode is enabled and zero otherwise.  @xref{Tool "
"Bars,,,emacs, The GNU Emacs Manual}.  This value may change whenever the "
"tool bar wraps (@pxref{Frame Layout})."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1910
#, no-wrap
msgid "tool-bar-position@r{, a frame parameter}"
msgstr ""

#. type: table
#: original_texis/frames.texi:1915
msgid ""
"The position of the tool bar when Emacs was built with GTK+.  Its value can "
"be one of @code{top}, @code{bottom} @code{left}, @code{right}.  The default "
"is @code{top}."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1916
#, no-wrap
msgid "tab-bar-lines@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1917
#, no-wrap
msgid "tab-bar-lines"
msgstr ""

#. type: table
#: original_texis/frames.texi:1922
msgid ""
"The number of lines to use for the tab bar (@pxref{Tab Bars,,,emacs, The GNU "
"Emacs Manual}).  The default is one if Tab Bar mode is enabled and zero "
"otherwise.  This value may change whenever the tab bar wraps (@pxref{Frame "
"Layout})."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1923
#, no-wrap
msgid "line-spacing@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1924
#, no-wrap
msgid "line-spacing"
msgstr ""

#. type: table
#: original_texis/frames.texi:1927
msgid ""
"Additional space to leave below each text line, in pixels (a positive "
"integer).  @xref{Line Height}, for more information."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1928
#, no-wrap
msgid "no-special-glyphs@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1929
#, no-wrap
msgid "no-special-glyphs"
msgstr ""

#. type: table
#: original_texis/frames.texi:1941
msgid ""
"If this is non-@code{nil}, it suppresses the display of any truncation "
"(@pxref{Truncation}) and continuation glyphs for all the buffers displayed "
"by this frame.  This is useful to eliminate such glyphs when fitting a frame "
"to its buffer via @code{fit-frame-to-buffer} (@pxref{Resizing Windows}).  "
"This frame parameter has effect only for GUI frames shown on graphical "
"displays, and only if the fringes are disabled.  This parameter is intended "
"as a purely-presentation feature, and in particular should not be used for "
"frames where the user can interactively insert text, or more generally where "
"the cursor is shown.  A notable example of frames where this is used is "
"tooltip frames (@pxref{Tooltips})."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:1946
#, no-wrap
msgid "frame, which buffers to display"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:1947
#, no-wrap
msgid "buffers to display on frame"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:1951
msgid ""
"These frame parameters, meaningful on all kinds of terminals, deal with "
"which buffers have been, or should, be displayed in the frame."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1953
#, no-wrap
msgid "minibuffer@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1954
#, no-wrap
msgid "minibuffer"
msgstr ""

#. type: table
#: original_texis/frames.texi:1959
msgid ""
"Whether this frame has its own minibuffer.  The value @code{t} means yes, "
"@code{nil} means no, @code{only} means this frame is just a minibuffer.  If "
"the value is a minibuffer window (in some other frame), the frame uses that "
"minibuffer."
msgstr ""

#. type: table
#: original_texis/frames.texi:1968
msgid ""
"This parameter takes effect when the frame is created.  If specified as "
"@code{nil}, Emacs will try to set it to the minibuffer window of "
"@code{default-minibuffer-frame} (@pxref{Minibuffers and Frames}).  For an "
"existing frame, this parameter can be used exclusively to specify another "
"minibuffer window.  It is not allowed to change it from a minibuffer window "
"to @code{t} and vice-versa, or from @code{t} to @code{nil}.  If the "
"parameter specifies a minibuffer window already, setting it to @code{nil} "
"has no effect."
msgstr ""

#. type: table
#: original_texis/frames.texi:1974
msgid ""
"The special value @code{child-frame} means to make a minibuffer-only child "
"frame (@pxref{Child Frames}) whose parent becomes the frame created.  As if "
"specified as @code{nil}, Emacs will set this parameter to the minibuffer "
"window of the child frame but will not select the child frame after its "
"creation."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1975
#, no-wrap
msgid "buffer-predicate@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1976
#, no-wrap
msgid "buffer-predicate"
msgstr ""

#. type: table
#: original_texis/frames.texi:1983
msgid ""
"The buffer-predicate function for this frame.  The function "
"@code{other-buffer} uses this predicate (from the selected frame) to decide "
"which buffers it should consider, if the predicate is not @code{nil}.  It "
"calls the predicate with one argument, a buffer, once for each buffer; if "
"the predicate returns a non-@code{nil} value, it considers that buffer."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1984
#, no-wrap
msgid "buffer-list@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1985
#, no-wrap
msgid "buffer-list"
msgstr ""

#. type: table
#: original_texis/frames.texi:1988
msgid ""
"A list of buffers that have been selected in this frame, ordered "
"most-recently-selected first."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:1989
#, no-wrap
msgid "unsplittable@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:1990
#, no-wrap
msgid "unsplittable"
msgstr ""

#. type: table
#: original_texis/frames.texi:1992
msgid "If non-@code{nil}, this frame's window is never split automatically."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:1997
#, no-wrap
msgid "frame interaction parameters"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:1998
#, no-wrap
msgid "interaction parameters between frames"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:2001
msgid "These parameters supply forms of interactions between different frames."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2003
#, no-wrap
msgid "parent-frame@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2004
#, no-wrap
msgid "parent-frame"
msgstr ""

#. type: table
#: original_texis/frames.texi:2008
msgid ""
"If non-@code{nil}, this means that this frame is a child frame (@pxref{Child "
"Frames}), and this parameter specifies its parent frame.  If @code{nil}, "
"this means that this frame is a normal, top-level frame."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2009
#, no-wrap
msgid "delete-before@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2010
#, no-wrap
msgid "delete-before"
msgstr ""

#. type: table
#: original_texis/frames.texi:2014
msgid ""
"If non-@code{nil}, this parameter specifies another frame whose deletion "
"will automatically trigger the deletion of this frame.  @xref{Deleting "
"Frames}."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2015
#, no-wrap
msgid "mouse-wheel-frame@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2016
#, no-wrap
msgid "mouse-wheel-frame"
msgstr ""

#. type: table
#: original_texis/frames.texi:2021
msgid ""
"If non-@code{nil}, this parameter specifies the frame whose windows will be "
"scrolled whenever the mouse wheel is scrolled with the mouse pointer "
"hovering over this frame, see @ref{Mouse Commands,,, emacs, The GNU Emacs "
"Manual}."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2022
#, no-wrap
msgid "no-other-frame@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2023
#, no-wrap
msgid "no-other-frame"
msgstr ""

#. type: table
#: original_texis/frames.texi:2028
msgid ""
"If this is non-@code{nil}, then this frame is not eligible as candidate for "
"the functions @code{next-frame}, @code{previous-frame} (@pxref{Finding All "
"Frames}) and @code{other-frame}, see @ref{Frame Commands,,, emacs, The GNU "
"Emacs Manual}."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2029
#, no-wrap
msgid "auto-hide-function@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2030
#, no-wrap
msgid "auto-hide-function"
msgstr ""

#. type: table
#: original_texis/frames.texi:2035
msgid ""
"When this parameter specifies a function, that function will be called "
"instead of the function specified by the variable "
"@code{frame-auto-hide-function} when quitting the frame's only window "
"(@pxref{Quitting Windows}) and there are other frames left."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2036
#, no-wrap
msgid "minibuffer-exit@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2037
#, no-wrap
msgid "minibuffer-exit"
msgstr ""

#. type: table
#: original_texis/frames.texi:2044
msgid ""
"When this parameter is non-@code{nil}, Emacs will by default make this frame "
"invisible whenever the minibuffer (@pxref{Minibuffers}) is exited.  "
"Alternatively, it can specify the functions @code{iconify-frame} and "
"@code{delete-frame}.  This parameter is useful to make a child frame "
"disappear automatically (similar to how Emacs deals with a window) when "
"exiting the minibuffer."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2045
#, no-wrap
msgid "keep-ratio@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2046
#, no-wrap
msgid "keep-ratio"
msgstr ""

#. type: table
#: original_texis/frames.texi:2052
msgid ""
"This parameter is currently meaningful for child frames (@pxref{Child "
"Frames}) only.  If it is non-@code{nil}, then Emacs will try to keep the "
"frame's size (width and height) ratios (@pxref{Size Parameters}) as well as "
"its left and right position ratios (@pxref{Position Parameters})  unaltered "
"whenever its parent frame is resized."
msgstr ""

#. type: table
#: original_texis/frames.texi:2058
msgid ""
"If the value of this parameter is @code{nil}, the frame's position and size "
"remain unaltered when the parent frame is resized, so the position and size "
"ratios may change.  If the value of this parameter is @code{t}, Emacs will "
"try to preserve the frame's size and position ratios, hence the frame's size "
"and position relative to its parent frame may change."
msgstr ""

#. type: table
#: original_texis/frames.texi:2066
msgid ""
"More individual control is possible by using a cons cell: In that case the "
"frame's width ratio is preserved if the @sc{car} of the cell is either "
"@code{t} or @code{width-only}.  The height ratio is preserved if the "
"@sc{car} of the cell is either @code{t} or @code{height-only}.  The left "
"position ratio is preserved if the @sc{cdr} of the cell is either @code{t} "
"or @code{left-only}.  The top position ratio is preserved if the @sc{cdr} of "
"the cell is either @code{t} or @code{top-only}."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:2071
#, no-wrap
msgid "mouse dragging parameters"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:2072
#, no-wrap
msgid "parameters for resizing frames with the mouse"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:2073
#, no-wrap
msgid "parameters for moving frames with the mouse"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:2079
msgid ""
"The parameters described below provide support for resizing a frame by "
"dragging its internal borders with the mouse.  They also allow moving a "
"frame with the mouse by dragging the header or tab line of its topmost or "
"the mode line of its bottommost window."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:2083
msgid ""
"These parameters are mostly useful for child frames (@pxref{Child Frames}) "
"that come without window manager decorations.  If necessary, they can be "
"used for undecorated top-level frames as well."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2085
#, no-wrap
msgid "drag-internal-border@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2086
#, no-wrap
msgid "drag-internal-border"
msgstr ""

#. type: table
#: original_texis/frames.texi:2089
msgid ""
"If non-@code{nil}, the frame can be resized by dragging its internal "
"borders, if present, with the mouse."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2090
#, no-wrap
msgid "drag-with-header-line@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2091
#, no-wrap
msgid "drag-with-header-line"
msgstr ""

#. type: table
#: original_texis/frames.texi:2094
msgid ""
"If non-@code{nil}, the frame can be moved with the mouse by dragging the "
"header line of its topmost window."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2095
#, no-wrap
msgid "drag-with-tab-line@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2096
#, no-wrap
msgid "drag-with-tab-line"
msgstr ""

#. type: table
#: original_texis/frames.texi:2099
msgid ""
"If non-@code{nil}, the frame can be moved with the mouse by dragging the tab "
"line of its topmost window."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2100
#, no-wrap
msgid "drag-with-mode-line@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2101
#, no-wrap
msgid "drag-with-mode-line"
msgstr ""

#. type: table
#: original_texis/frames.texi:2105
msgid ""
"If non-@code{nil}, the frame can be moved with the mouse by dragging the "
"mode line of its bottommost window.  Note that such a frame is not allowed "
"to have its own minibuffer window."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2106
#, no-wrap
msgid "snap-width@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2107
#, no-wrap
msgid "snap-width"
msgstr ""

#. type: table
#: original_texis/frames.texi:2111
msgid ""
"A frame that is moved with the mouse will ``snap'' at the border(s) of the "
"display or its parent frame whenever it is dragged as near to such an edge "
"as the number of pixels specified by this parameter."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2112
#, no-wrap
msgid "top-visible@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2113
#, no-wrap
msgid "top-visible"
msgstr ""

#. type: table
#: original_texis/frames.texi:2122
msgid ""
"If this parameter is a number, the top edge of the frame never appears above "
"the top edge of its display or parent frame.  Moreover, as many pixels of "
"the frame as specified by that number will remain visible when the frame is "
"moved against any of the remaining edges of its display or parent frame.  "
"Setting this parameter is useful to guard against dragging a child frame "
"with a non-@code{nil} @code{drag-with-header-line} parameter completely out "
"of the area of its parent frame."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2123
#, no-wrap
msgid "bottom-visible@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2124
#, no-wrap
msgid "bottom-visible"
msgstr ""

#. type: table
#: original_texis/frames.texi:2133
msgid ""
"If this parameter is a number, the bottom edge of the frame never appears "
"below the bottom edge of its display or parent frame.  Moreover, as many "
"pixels of the frame as specified by that number will remain visible when the "
"frame is moved against any of the remaining edges of its display or parent "
"frame.  Setting this parameter is useful to guard against dragging a child "
"frame with a non-@code{nil} @code{drag-with-mode-line} parameter completely "
"out of the area of its parent frame."
msgstr ""

#. type: subsubsection
#: original_texis/frames.texi:2137
#, no-wrap
msgid "Window Management Parameters"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:2138
#, no-wrap
msgid "window manager interaction, and frame parameters"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:2143
msgid ""
"The following frame parameters control various aspects of the frame's "
"interaction with the window manager or window system.  They have no effect "
"on text terminals."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2145
#, no-wrap
msgid "visibility@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2146
#, no-wrap
msgid "visibility"
msgstr ""

#. type: table
#: original_texis/frames.texi:2150
msgid ""
"The state of visibility of the frame.  There are three possibilities: "
"@code{nil} for invisible, @code{t} for visible, and @code{icon} for "
"iconified.  @xref{Visibility of Frames}."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2151
#, no-wrap
msgid "auto-raise@r{, a frame parameter}"
msgstr ""

#. type: code{#1}
#: original_texis/frames.texi:2152 original_texis/frames.texi:3097
#, no-wrap
msgid "auto-raise"
msgstr ""

#. type: table
#: original_texis/frames.texi:2155
msgid ""
"If non-@code{nil}, Emacs automatically raises the frame when it is "
"selected.  Some window managers do not allow this."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2156
#, no-wrap
msgid "auto-lower@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2157
#, no-wrap
msgid "auto-lower"
msgstr ""

#. type: table
#: original_texis/frames.texi:2160
msgid ""
"If non-@code{nil}, Emacs automatically lowers the frame when it is "
"deselected.  Some window managers do not allow this."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2161
#, no-wrap
msgid "icon-type@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2162
#, no-wrap
msgid "icon-type"
msgstr ""

#. type: table
#: original_texis/frames.texi:2167
msgid ""
"The type of icon to use for this frame.  If the value is a string, that "
"specifies a file containing a bitmap to use; @code{nil} specifies no icon "
"(in which case the window manager decides what to show); any other "
"non-@code{nil} value specifies the default Emacs icon."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2168
#, no-wrap
msgid "icon-name@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2169
#, no-wrap
msgid "icon-name"
msgstr ""

#. type: table
#: original_texis/frames.texi:2172
msgid ""
"The name to use in the icon for this frame, when and if the icon appears.  "
"If this is @code{nil}, the frame's title is used."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2173
#, no-wrap
msgid "window-id@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2174
#, no-wrap
msgid "window-id"
msgstr ""

#. type: table
#: original_texis/frames.texi:2178
msgid ""
"The ID number which the graphical display uses for this frame.  Emacs "
"assigns this parameter when the frame is created; changing the parameter has "
"no effect on the actual ID number."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2179
#, no-wrap
msgid "outer-window-id@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2180
#, no-wrap
msgid "outer-window-id"
msgstr ""

#. type: table
#: original_texis/frames.texi:2184
msgid ""
"The ID number of the outermost window-system window in which the frame "
"exists.  As with @code{window-id}, changing this parameter has no actual "
"effect."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2185
#, no-wrap
msgid "wait-for-wm@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2186
#, no-wrap
msgid "wait-for-wm"
msgstr ""

#. type: table
#: original_texis/frames.texi:2191
msgid ""
"If non-@code{nil}, tell Xt to wait for the window manager to confirm "
"geometry changes.  Some window managers, including versions of Fvwm2 and "
"KDE, fail to confirm, so Xt hangs.  Set this to @code{nil} to prevent "
"hanging with those window managers."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2192
#, no-wrap
msgid "sticky@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2193
#, no-wrap
msgid "sticky"
msgstr ""

#. type: table
#: original_texis/frames.texi:2196
msgid ""
"If non-@code{nil}, the frame is visible on all virtual desktops on systems "
"with virtual desktops."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2197
#, no-wrap
msgid "shaded@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2198
#, no-wrap
msgid "shaded"
msgstr ""

#. type: table
#: original_texis/frames.texi:2201
msgid ""
"If non-@code{nil}, tell the window manager to display the frame in a way "
"that its contents are hidden, leaving only the title bar."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2202
#, no-wrap
msgid "use-frame-synchronization@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2203
#, no-wrap
msgid "use-frame-synchronization"
msgstr ""

#. type: table
#: original_texis/frames.texi:2211
msgid ""
"If non-@code{nil}, synchronize the frame redisplay with the refresh rate of "
"the monitor to avoid graphics tearing.  At present, this is only implemented "
"on Haiku and the X window system inside no-toolkit and X toolkit builds, "
"does not work correctly with toolkit scroll bars, and requires a compositing "
"manager supporting the relevant display synchronization protocols.  The "
"@code{synchronizeResize} X resource must also be set to the string "
"@code{\"extended\"}."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2212
#, no-wrap
msgid "inhibit-double-buffering@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2213
#, no-wrap
msgid "inhibit-double-buffering"
msgstr ""

#. type: table
#: original_texis/frames.texi:2218
msgid ""
"If non-@code{nil}, the frame is drawn to the screen without double "
"buffering.  Emacs normally attempts to use double buffering, where "
"available, to reduce flicker.  Set this property if you experience display "
"bugs or pine for that retro, flicker-y feeling."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2219
#, no-wrap
msgid "skip-taskbar@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2220
#, no-wrap
msgid "skip-taskbar"
msgstr ""

#. type: table
#: original_texis/frames.texi:2227
msgid ""
"If non-@code{nil}, this tells the window manager to remove the frame's icon "
"from the taskbar associated with the frame's display and inhibit switching "
"to the frame's window via the combination @kbd{Alt-@key{TAB}}.  On "
"MS-Windows, iconifying such a frame will \"roll in\" its window-system "
"window at the bottom of the desktop.  Some window managers may not honor "
"this parameter."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2228
#, no-wrap
msgid "no-focus-on-map@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2229
#, no-wrap
msgid "no-focus-on-map"
msgstr ""

#. type: table
#: original_texis/frames.texi:2233
msgid ""
"If non-@code{nil}, this means that the frame does not want to receive input "
"focus when it is mapped (@pxref{Visibility of Frames}).  Some window "
"managers may not honor this parameter."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2234
#, no-wrap
msgid "no-accept-focus@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2235
#, no-wrap
msgid "no-accept-focus"
msgstr ""

#. type: table
#: original_texis/frames.texi:2246
msgid ""
"If non-@code{nil}, this means that the frame does not want to receive input "
"focus via explicit mouse clicks or when moving the mouse into it either via "
"@code{focus-follows-mouse} (@pxref{Input Focus}) or "
"@code{mouse-autoselect-window} (@pxref{Mouse Window Auto-selection}).  This "
"may have the unwanted side-effect that a user cannot scroll a non-selected "
"frame with the mouse.  Some window managers may not honor this parameter.  "
"On Haiku, it also has the side-effect that the window will not be able to "
"receive any keyboard input from the user, not even if the user switches to "
"the frame using the key combination @kbd{Alt-@key{TAB}}."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2247
#, no-wrap
msgid "undecorated@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2248
#, no-wrap
msgid "undecorated"
msgstr ""

#. type: table
#: original_texis/frames.texi:2255
msgid ""
"If non-@code{nil}, this frame's window-system window is drawn without "
"decorations, like the title, minimize/maximize boxes and external borders.  "
"This usually means that the window cannot be dragged, resized, iconified, "
"maximized or deleted with the mouse.  If @code{nil}, the frame's window is "
"usually drawn with all the elements listed above unless their display has "
"been suspended via window manager settings."
msgstr ""

#. type: table
#: original_texis/frames.texi:2258
msgid ""
"Under X, Emacs uses the Motif window manager hints to turn off decorations.  "
"Some window managers may not honor these hints."
msgstr ""

#. type: table
#: original_texis/frames.texi:2261
msgid ""
"NS builds consider the tool bar to be a decoration, and therefore hide it on "
"an undecorated frame."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2262
#, no-wrap
msgid "override-redirect@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2263
#, no-wrap
msgid "override-redirect"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:2264
#, no-wrap
msgid "override redirect frames"
msgstr ""

#. type: table
#: original_texis/frames.texi:2271
msgid ""
"If non-@code{nil}, this means that this is an @dfn{override redirect} "
"frame---a frame not handled by window managers under X@.  Override redirect "
"frames have no window manager decorations, can be positioned and resized "
"only via Emacs' positioning and resizing functions and are usually drawn on "
"top of all other frames.  Setting this parameter has no effect on "
"MS-Windows."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2273
#, no-wrap
msgid "parent-id@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2274
#, no-wrap
msgid "parent-id"
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2282
#, no-wrap
msgid "ns-appearance@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2283
#, no-wrap
msgid "ns-appearance"
msgstr ""

#. type: table
#: original_texis/frames.texi:2290
msgid ""
"Only available on macOS, if set to @code{dark} draw this frame's "
"window-system window using the ``vibrant dark'' theme, and if set to "
"@code{light} use the ``aqua'' theme, otherwise use the system default.  The "
"``vibrant dark'' theme can be used to set the toolbar and scrollbars to a "
"dark appearance when using an Emacs theme with a dark background."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2291
#, no-wrap
msgid "ns-transparent-titlebar@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2292
#, no-wrap
msgid "ns-transparent-titlebar"
msgstr ""

#. type: table
#: original_texis/frames.texi:2296
msgid ""
"Only available on macOS, if non-@code{nil}, set the titlebar and toolbar to "
"be transparent.  This effectively sets the background color of both to match "
"the Emacs background color."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:2301
#, no-wrap
msgid "cursor, and frame parameters"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:2304
msgid "This frame parameter controls the way the cursor looks."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2306
#, no-wrap
msgid "cursor-type@r{, a frame parameter}"
msgstr ""

#. type: defopt
#: original_texis/frames.texi:2307 original_texis/frames.texi:2331
#: original_texis/frames.texi:2336
#, no-wrap
msgid "cursor-type"
msgstr ""

#. type: table
#: original_texis/frames.texi:2309
msgid "How to display the cursor.  Legitimate values are:"
msgstr ""

#. type: item
#: original_texis/frames.texi:2311
#, no-wrap
msgid "box"
msgstr ""

#. type: table
#: original_texis/frames.texi:2313
msgid "Display a filled box.  (This is the default.)"
msgstr ""

#. type: item
#: original_texis/frames.texi:2313
#, no-wrap
msgid "(box . @var{size})"
msgstr ""

#. type: table
#: original_texis/frames.texi:2316
msgid ""
"Display a filled box.  However, display it as a hollow box if point is under "
"masked image larger than @var{size} pixels in either dimension."
msgstr ""

#. type: item
#: original_texis/frames.texi:2316
#, no-wrap
msgid "hollow"
msgstr ""

#. type: table
#: original_texis/frames.texi:2318
msgid "Display a hollow box."
msgstr ""

#. type: item
#: original_texis/frames.texi:2318 original_texis/frames.texi:2791
#: original_texis/frames.texi:3086 original_texis/frames.texi:3921
#: original_texis/frames.texi:4276 original_texis/frames.texi:4316
#, no-wrap
msgid "nil"
msgstr ""

#. type: table
#: original_texis/frames.texi:2320
msgid "Don't display a cursor."
msgstr ""

#. type: item
#: original_texis/frames.texi:2320
#, no-wrap
msgid "bar"
msgstr ""

#. type: table
#: original_texis/frames.texi:2322
msgid "Display a vertical bar between characters."
msgstr ""

#. type: item
#: original_texis/frames.texi:2322
#, no-wrap
msgid "(bar . @var{width})"
msgstr ""

#. type: table
#: original_texis/frames.texi:2324
msgid "Display a vertical bar @var{width} pixels wide between characters."
msgstr ""

#. type: item
#: original_texis/frames.texi:2324
#, no-wrap
msgid "hbar"
msgstr ""

#. type: table
#: original_texis/frames.texi:2326
msgid "Display a horizontal bar."
msgstr ""

#. type: item
#: original_texis/frames.texi:2326
#, no-wrap
msgid "(hbar . @var{height})"
msgstr ""

#. type: table
#: original_texis/frames.texi:2328
msgid "Display a horizontal bar @var{height} pixels high."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:2335
msgid ""
"The @code{cursor-type} frame parameter may be overridden by the variables "
"@code{cursor-type} and @code{cursor-in-non-selected-windows}:"
msgstr ""

#. type: defopt
#: original_texis/frames.texi:2342
msgid ""
"This buffer-local variable controls how the cursor looks in a selected "
"window showing the buffer.  If its value is @code{t}, that means to use the "
"cursor specified by the @code{cursor-type} frame parameter.  Otherwise, the "
"value should be one of the cursor types listed above, and it overrides the "
"@code{cursor-type} frame parameter."
msgstr ""

#. type: defopt
#: original_texis/frames.texi:2344
#, no-wrap
msgid "cursor-in-non-selected-windows"
msgstr ""

#. type: defopt
#: original_texis/frames.texi:2351
msgid ""
"This buffer-local variable controls how the cursor looks in a window that is "
"not selected.  It supports the same values as the @code{cursor-type} frame "
"parameter; also, @code{nil} means don't display a cursor in nonselected "
"windows, and @code{t} (the default)  means use a standard modification of "
"the usual cursor type (solid box becomes hollow box, and bar becomes a "
"narrower bar)."
msgstr ""

#. type: defopt
#: original_texis/frames.texi:2353
#, no-wrap
msgid "x-stretch-cursor"
msgstr ""

#. type: defopt
#: original_texis/frames.texi:2361
msgid ""
"This variable controls the width of the block cursor displayed on extra-wide "
"glyphs such as a tab or a stretch of white space.  By default, the block "
"cursor is only as wide as the font's default character, and will not cover "
"all of the width of the glyph under it if that glyph is extra-wide.  A "
"non-@code{nil} value of this variable means draw the block cursor as wide as "
"the glyph under it.  The default value is @code{nil}."
msgstr ""

#. type: defopt
#: original_texis/frames.texi:2364
msgid ""
"This variable has no effect on text-mode frames, since the text-mode cursor "
"is drawn by the terminal out of Emacs's control."
msgstr ""

#. type: defopt
#: original_texis/frames.texi:2366
#, no-wrap
msgid "blink-cursor-alist"
msgstr ""

#. type: defopt
#: original_texis/frames.texi:2373
msgid ""
"This variable specifies how to blink the cursor.  Each element has the form "
"@code{(@var{on-state} . @var{off-state})}.  Whenever the cursor type equals "
"@var{on-state} (comparing using @code{equal}), the corresponding "
"@var{off-state} specifies what the cursor looks like when it blinks off.  "
"Both @var{on-state} and @var{off-state} should be suitable values for the "
"@code{cursor-type} frame parameter."
msgstr ""

#. type: defopt
#: original_texis/frames.texi:2378
msgid ""
"There are various defaults for how to blink each type of cursor, if the type "
"is not mentioned as an @var{on-state} here.  Changes in this variable do not "
"take effect immediately, only when you specify the @code{cursor-type} frame "
"parameter."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:2382
#, no-wrap
msgid "font and color, frame parameters"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:2385
msgid "These frame parameters control the use of fonts and colors."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2387
#, no-wrap
msgid "font-backend@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2388
#, no-wrap
msgid "font-backend"
msgstr ""

#. type: table
#: original_texis/frames.texi:2408
msgid ""
"A list of symbols, specifying the @dfn{font backends} to use for drawing "
"characters on the frame, in order of priority.  In Emacs built without Cairo "
"drawing on X, there are currently three potentially available font backends: "
"@code{x} (the X core font driver), @code{xft} (the Xft font driver), and "
"@code{xfthb} (the Xft font driver with HarfBuzz text shaping).  If built "
"with Cairo drawing, there are also three potentially available font backends "
"on X: @code{x}, @code{ftcr} (the FreeType font driver on Cairo), and "
"@code{ftcrhb} (the FreeType font driver on Cairo with HarfBuzz text "
"shaping).  When Emacs is built with HarfBuzz, the default font driver is "
"@code{ftcrhb}, although use of the @code{ftcr} driver is still possible, but "
"not recommended.  On MS-Windows, there are currently three available font "
"backends: @code{gdi} (the core MS-Windows font driver), @code{uniscribe} "
"(font driver for OTF and TTF fonts with text shaping by the Uniscribe "
"engine), and @code{harfbuzz} (font driver for OTF and TTF fonts with "
"HarfBuzz text shaping) (@pxref{Windows Fonts,,, emacs, The GNU Emacs "
"Manual}).  The @code{harfbuzz} driver is similarly recommended.  On Haiku, "
"there can be several font drivers (@pxref{Haiku Fonts,,, emacs, The GNU "
"Emacs Manual})."
msgstr ""

#. type: table
#: original_texis/frames.texi:2411
msgid ""
"On other systems, there is only one available font backend, so it does not "
"make sense to modify this frame parameter."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2412
#, no-wrap
msgid "background-mode@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2413 original_texis/frames.texi:2609
#, no-wrap
msgid "background-mode"
msgstr ""

#. type: table
#: original_texis/frames.texi:2416
msgid ""
"This parameter is either @code{dark} or @code{light}, according to whether "
"the background color is a light one or a dark one."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2417
#, no-wrap
msgid "tty-color-mode@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2418
#, no-wrap
msgid "tty-color-mode"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:2419
#, no-wrap
msgid "standard colors for character terminals"
msgstr ""

#. type: table
#: original_texis/frames.texi:2428
msgid ""
"This parameter overrides the terminal's color support as given by the "
"system's terminal capabilities database in that this parameter's value "
"specifies the color mode to use on a text terminal.  The value can be either "
"a symbol or a number.  A number specifies the number of colors to use (and, "
"indirectly, what commands to issue to produce each color).  For example, "
"@code{(tty-color-mode . 8)} specifies use of the ANSI escape sequences for 8 "
"standard text colors.  A value of @minus{}1 turns off color support."
msgstr ""

#. type: table
#: original_texis/frames.texi:2432
msgid ""
"If the parameter's value is a symbol, it specifies a number through the "
"value of @code{tty-color-mode-alist}, and the associated number is used "
"instead."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2433
#, no-wrap
msgid "screen-gamma@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2434
#, no-wrap
msgid "screen-gamma"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:2435
#, no-wrap
msgid "gamma correction"
msgstr ""

#. type: table
#: original_texis/frames.texi:2439
msgid ""
"If this is a number, Emacs performs gamma correction which adjusts the "
"brightness of all colors.  The value should be the screen gamma of your "
"display."
msgstr ""

#. type: table
#: original_texis/frames.texi:2447
msgid ""
"Usual PC monitors have a screen gamma of 2.2, so color values in Emacs, and "
"in X windows generally, are calibrated to display properly on a monitor with "
"that gamma value.  If you specify 2.2 for @code{screen-gamma}, that means no "
"correction is needed.  Other values request correction, designed to make the "
"corrected colors appear on your screen the way they would have appeared "
"without correction on an ordinary monitor with a gamma value of 2.2."
msgstr ""

#. type: table
#: original_texis/frames.texi:2452
msgid ""
"If your monitor displays colors too light, you should specify a "
"@code{screen-gamma} value smaller than 2.2.  This requests correction that "
"makes colors darker.  A screen gamma value of 1.5 may give good results for "
"LCD color displays."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2453
#, no-wrap
msgid "alpha@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2454
#, no-wrap
msgid "alpha"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:2455 original_texis/frames.texi:2480
#, no-wrap
msgid "opacity, frame"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:2456 original_texis/frames.texi:2481
#, no-wrap
msgid "transparency, frame"
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2457
#, no-wrap
msgid "frame-alpha-lower-limit"
msgstr ""

#. type: table
#: original_texis/frames.texi:2463
msgid ""
"This parameter specifies the opacity of the frame, on graphical displays "
"that support variable opacity.  It should be an integer between 0 and 100, "
"where 0 means completely transparent and 100 means completely opaque.  It "
"can also have a @code{nil} value, which tells Emacs not to set the frame "
"opacity (leaving it to the window manager)."
msgstr ""

#. type: table
#: original_texis/frames.texi:2469
msgid ""
"To prevent the frame from disappearing completely from view, the variable "
"@code{frame-alpha-lower-limit} defines a lower opacity limit.  If the value "
"of the frame parameter is less than the value of this variable, Emacs uses "
"the latter.  By default, @code{frame-alpha-lower-limit} is 20."
msgstr ""

#. type: table
#: original_texis/frames.texi:2474
msgid ""
"The @code{alpha} frame parameter can also be a cons cell @code{(@var{active} "
". @var{inactive})}, where @var{active} is the opacity of the frame when it "
"is selected, and @var{inactive} is the opacity when it is not selected."
msgstr ""

#. type: table
#: original_texis/frames.texi:2477
msgid ""
"Some window systems do not support the @code{alpha} parameter for child "
"frames (@pxref{Child Frames})."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2478
#, no-wrap
msgid "alpha-background@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2479
#, no-wrap
msgid "alpha-background"
msgstr ""

#. type: table
#: original_texis/frames.texi:2487
msgid ""
"Sets the background transparency of the frame.  Unlike the @code{alpha} "
"frame parameter, this only controls the transparency of the background while "
"keeping foreground elements such as text fully opaque.  It should be an "
"integer between 0 and 100, where 0 means completely transparent and 100 "
"means completely opaque (default)."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:2492
msgid ""
"The following frame parameters are semi-obsolete in that they are "
"automatically equivalent to particular face attributes of particular faces "
"(@pxref{Standard Faces,,, emacs, The Emacs Manual}):"
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2494
#, no-wrap
msgid "font@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2495
#, no-wrap
msgid "font"
msgstr ""

#. type: table
#: original_texis/frames.texi:2500
msgid ""
"The name of the font for displaying text in the frame.  This is a string, "
"either a valid font name for your system or the name of an Emacs fontset "
"(@pxref{Fontsets}).  It is equivalent to the @code{font} attribute of the "
"@code{default} face."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2501
#, no-wrap
msgid "foreground-color@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2502
#, no-wrap
msgid "foreground-color"
msgstr ""

#. type: table
#: original_texis/frames.texi:2505
msgid ""
"The color to use for characters.  It is equivalent to the @code{:foreground} "
"attribute of the @code{default} face."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2506
#, no-wrap
msgid "background-color@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2507
#, no-wrap
msgid "background-color"
msgstr ""

#. type: table
#: original_texis/frames.texi:2510
msgid ""
"The color to use for the background of characters.  It is equivalent to the "
"@code{:background} attribute of the @code{default} face."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2511
#, no-wrap
msgid "mouse-color@r{, a frame parameter}"
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2512
#, no-wrap
msgid "mouse@r{, a face}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2513
#, no-wrap
msgid "mouse-color"
msgstr ""

#. type: table
#: original_texis/frames.texi:2516
msgid ""
"The color for the mouse pointer.  It is equivalent to the @code{:background} "
"attribute of the @code{mouse} face."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2517
#, no-wrap
msgid "cursor-color@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2518
#, no-wrap
msgid "cursor-color"
msgstr ""

#. type: table
#: original_texis/frames.texi:2521
msgid ""
"The color for the cursor that shows point.  It is equivalent to the "
"@code{:background} attribute of the @code{cursor} face."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2522
#, no-wrap
msgid "border-color@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2523
#, no-wrap
msgid "border-color"
msgstr ""

#. type: table
#: original_texis/frames.texi:2526
msgid ""
"The color for the border of the frame.  It is equivalent to the "
"@code{:background} attribute of the @code{border} face."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2527
#, no-wrap
msgid "scroll-bar-foreground@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2528
#, no-wrap
msgid "scroll-bar-foreground"
msgstr ""

#. type: table
#: original_texis/frames.texi:2532
msgid ""
"If non-@code{nil}, the color for the foreground of scroll bars.  It is "
"equivalent to the @code{:foreground} attribute of the @code{scroll-bar} "
"face."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2533
#, no-wrap
msgid "scroll-bar-background@r{, a frame parameter}"
msgstr ""

#. type: item
#: original_texis/frames.texi:2534
#, no-wrap
msgid "scroll-bar-background"
msgstr ""

#. type: table
#: original_texis/frames.texi:2538
msgid ""
"If non-@code{nil}, the color for the background of scroll bars.  It is "
"equivalent to the @code{:background} attribute of the @code{scroll-bar} "
"face."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:2546
msgid "Here's how to examine the data in an X-style window geometry specification:"
msgstr ""

#. type: defun
#: original_texis/frames.texi:2547
#, no-wrap
msgid "x-parse-geometry geom"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:2548
#, no-wrap
msgid "geometry specification"
msgstr ""

#. type: defun
#: original_texis/frames.texi:2552
msgid ""
"The function @code{x-parse-geometry} converts a standard X window geometry "
"string to an alist that you can use as part of the argument to "
"@code{make-frame}."
msgstr ""

#. type: defun
#: original_texis/frames.texi:2557
msgid ""
"The alist describes which parameters were specified in @var{geom}, and gives "
"the values specified for them.  Each element looks like "
"@code{(@var{parameter} . @var{value})}.  The possible @var{parameter} values "
"are @code{left}, @code{top}, @code{width}, and @code{height}."
msgstr ""

#. type: defun
#: original_texis/frames.texi:2564
msgid ""
"For the size parameters, the value must be an integer.  The position "
"parameter names @code{left} and @code{top} are not totally accurate, because "
"some values indicate the position of the right or bottom edges instead.  The "
"@var{value} possibilities for the position parameters are: an integer, a "
"list @code{(+ @var{pos})}, or a list @code{(- @var{pos})}; as previously "
"described (@pxref{Position Parameters})."
msgstr ""

#. type: defun
#: original_texis/frames.texi:2566
msgid "Here is an example:"
msgstr ""

#. type: example
#: original_texis/frames.texi:2571
#, no-wrap
msgid ""
"(x-parse-geometry \"35x70+0-0\")\n"
"     @result{} ((height . 70) (width . 35)\n"
"         (top - 0) (left . 0))\n"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:2576
#, no-wrap
msgid "terminal parameters"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:2582
msgid ""
"Each terminal has a list of associated parameters.  These @dfn{terminal "
"parameters} are mostly a convenient way of storage for terminal-local "
"variables, but some terminal parameters have a special meaning."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:2587
msgid ""
"This section describes functions to read and change the parameter values of "
"a terminal.  They all accept as their argument either a terminal or a frame; "
"the latter means use that frame's terminal.  An argument of @code{nil} means "
"the selected frame's terminal."
msgstr ""

#. type: defun
#: original_texis/frames.texi:2588
#, no-wrap
msgid "terminal-parameters &optional terminal"
msgstr ""

#. type: defun
#: original_texis/frames.texi:2591
msgid ""
"This function returns an alist listing all the parameters of @var{terminal} "
"and their values."
msgstr ""

#. type: defun
#: original_texis/frames.texi:2593
#, no-wrap
msgid "terminal-parameter terminal parameter"
msgstr ""

#. type: defun
#: original_texis/frames.texi:2597
msgid ""
"This function returns the value of the parameter @var{parameter} (a symbol) "
"of @var{terminal}.  If @var{terminal} has no setting for @var{parameter}, "
"this function returns @code{nil}."
msgstr ""

#. type: defun
#: original_texis/frames.texi:2599
#, no-wrap
msgid "set-terminal-parameter terminal parameter value"
msgstr ""

#. type: defun
#: original_texis/frames.texi:2603
msgid ""
"This function sets the parameter @var{parameter} of @var{terminal} to the "
"specified @var{value}, and returns the previous value of that parameter."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:2607
msgid "Here's a list of a few terminal parameters that have a special meaning:"
msgstr ""

#. type: table
#: original_texis/frames.texi:2612
msgid ""
"The classification of the terminal's background color, either @code{light} "
"or @code{dark}."
msgstr ""

#. type: item
#: original_texis/frames.texi:2612
#, no-wrap
msgid "normal-erase-is-backspace"
msgstr ""

#. type: table
#: original_texis/frames.texi:2616
msgid ""
"Value is either 1 or 0, depending on whether "
"@code{normal-erase-is-backspace-mode} is turned on or off on this terminal.  "
"@xref{DEL Does Not Delete,,, emacs, The Emacs Manual}."
msgstr ""

#. type: item
#: original_texis/frames.texi:2616
#, no-wrap
msgid "terminal-initted"
msgstr ""

#. type: table
#: original_texis/frames.texi:2619
msgid ""
"After the terminal is initialized, this is set to the terminal-specific "
"initialization function."
msgstr ""

#. type: item
#: original_texis/frames.texi:2619
#, no-wrap
msgid "tty-mode-set-strings"
msgstr ""

#. type: table
#: original_texis/frames.texi:2627
msgid ""
"When present, a list of strings containing escape sequences that Emacs will "
"output while configuring a tty for rendering.  Emacs emits these strings "
"only when configuring a terminal: if you want to enable a mode on a terminal "
"that is already active (for example, while in @code{tty-setup-hook}), "
"explicitly output the necessary escape sequence using "
"@code{send-string-to-terminal} in addition to adding the sequence to "
"@code{tty-mode-set-strings}."
msgstr ""

#. type: item
#: original_texis/frames.texi:2627
#, no-wrap
msgid "tty-mode-reset-strings"
msgstr ""

#. type: table
#: original_texis/frames.texi:2631
msgid ""
"When present, a list of strings that undo the effects of the strings in "
"@code{tty-mode-set-strings}.  Emacs emits these strings when exiting, "
"deleting a terminal, or suspending itself."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:2635
#, no-wrap
msgid "frame title"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:2641
msgid ""
"Every frame has a @code{name} parameter; this serves as the default for the "
"frame title which window systems typically display at the top of the frame.  "
"You can specify a name explicitly by setting the @code{name} frame property."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:2646
msgid ""
"Normally you don't specify the name explicitly, and Emacs computes the frame "
"name automatically based on a template stored in the variable "
"@code{frame-title-format}.  Emacs recomputes the name each time the frame is "
"redisplayed."
msgstr ""

#. type: defvar
#: original_texis/frames.texi:2647
#, no-wrap
msgid "frame-title-format"
msgstr ""

#. type: defvar
#: original_texis/frames.texi:2654
msgid ""
"This variable specifies how to compute a name for a frame when you have not "
"explicitly specified one (via the frame's parameters; @pxref{Basic "
"Parameters}).  The variable's value is actually a mode line construct, just "
"like @code{mode-line-format}, except that the @samp{%c}, @samp{%C}, and "
"@samp{%l} constructs are ignored.  @xref{Mode Line Data}."
msgstr ""

#. type: defvar
#: original_texis/frames.texi:2656
#, no-wrap
msgid "icon-title-format"
msgstr ""

#. type: defvar
#: original_texis/frames.texi:2669
msgid ""
"This variable specifies how to compute the name for an iconified frame when "
"you have not explicitly specified the frame's name via the frame's "
"parameters.  The resulting title appears in the frame's icon itself.  If the "
"value is a string, is should be a mode line construct like that of "
"@code{frame-title-format}.  The value can also be @code{t}, which means to "
"use @code{frame-title-format} instead; this avoids problems with some window "
"managers and desktop environments, where a change in a frame's title (when a "
"frame is iconified) is interpreted as a request to raise the frame and/or "
"give it input focus.  It is also useful if you want the frame's title to be "
"the same no matter if the frame is iconified or not.  The default value is a "
"string identical to the default value of @code{frame-title-format}."
msgstr ""

#. type: defvar
#: original_texis/frames.texi:2671
#, no-wrap
msgid "multiple-frames"
msgstr ""

#. type: defvar
#: original_texis/frames.texi:2677
msgid ""
"This variable is set automatically by Emacs.  Its value is @code{t} when "
"there are two or more frames (not counting minibuffer-only frames or "
"invisible frames).  The default value of @code{frame-title-format} uses "
"@code{multiple-frames} so as to put the buffer name in the frame title only "
"when there is more than one frame."
msgstr ""

#. type: defvar
#: original_texis/frames.texi:2681
msgid ""
"The value of this variable is not guaranteed to be accurate except while "
"processing @code{frame-title-format} or @code{icon-title-format}."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:2685
#, no-wrap
msgid "deleting frames"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:2691
msgid ""
"A @dfn{live frame} is one that has not been deleted.  When a frame is "
"deleted, it is removed from its terminal display, although it may continue "
"to exist as a Lisp object until there are no more references to it."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:2692
#, no-wrap
msgid "Command delete-frame &optional frame force"
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2693
#, no-wrap
msgid "delete-frame-functions"
msgstr ""

#. type: vindex
#: original_texis/frames.texi:2694
#, no-wrap
msgid "after-delete-frame-functions"
msgstr ""

#. type: deffn
#: original_texis/frames.texi:2698
msgid ""
"This function deletes the frame @var{frame}.  The argument @var{frame} must "
"specify a live frame (see below) and defaults to the selected frame."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:2709
msgid ""
"It first deletes any child frame of @var{frame} (@pxref{Child Frames})  and "
"any frame whose @code{delete-before} frame parameter (@pxref{Frame "
"Interaction Parameters}) specifies @var{frame}.  All such deletions are "
"performed recursively; so this step makes sure that no other frames with "
"@var{frame} as their ancestor will exist.  Then, unless @var{frame} "
"specifies a tooltip, this function runs the hook "
"@code{delete-frame-functions} (each function getting one argument, "
"@var{frame}) before actually killing the frame.  After actually killing the "
"frame and removing the frame from the frame list, @code{delete-frame} runs "
"@code{after-delete-frame-functions}."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:2714
msgid ""
"Note that a frame cannot be deleted as long as its minibuffer serves as "
"surrogate minibuffer for another frame (@pxref{Minibuffers and Frames}).  "
"Normally, you cannot delete a frame if all other frames are invisible, but "
"if @var{force} is non-@code{nil}, then you are allowed to do so."
msgstr ""

#. type: defun
#: original_texis/frames.texi:2716
#, no-wrap
msgid "frame-live-p frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:2720
msgid ""
"This function returns non-@code{nil} if the frame @var{frame} has not been "
"deleted.  The possible non-@code{nil} return values are like those of "
"@code{framep}.  @xref{Frames}."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:2727
msgid ""
"Some window managers provide a command to delete a window.  These work by "
"sending a special message to the program that operates the window.  When "
"Emacs gets one of these commands, it generates a @code{delete-frame} event, "
"whose normal definition is a command that calls the function "
"@code{delete-frame}.  @xref{Misc Events}."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:2728
#, no-wrap
msgid "Command delete-other-frames &optional frame iconify"
msgstr ""

#. type: deffn
#: original_texis/frames.texi:2735
msgid ""
"This command deletes all frames on @var{frame}'s terminal, except "
"@var{frame}.  If @var{frame} uses another frame's minibuffer, that "
"minibuffer frame is left untouched.  The argument @var{frame} must specify a "
"live frame and defaults to the selected frame.  Internally, this command "
"works by calling @code{delete-frame} with @var{force} @code{nil} for all "
"frames that shall be deleted."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:2739
msgid ""
"This function does not delete any of @var{frame}'s child frames "
"(@pxref{Child Frames}).  If @var{frame} is a child frame, it deletes "
"@var{frame}'s siblings only."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:2742
msgid ""
"With the prefix argument @var{iconify}, the frames are iconified rather than "
"deleted."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:2747
#, no-wrap
msgid "frames, scanning all"
msgstr ""

#. type: defun
#: original_texis/frames.texi:2749
#, no-wrap
msgid "frame-list"
msgstr ""

#. type: defun
#: original_texis/frames.texi:2755
msgid ""
"This function returns a list of all the live frames, i.e., those that have "
"not been deleted.  It is analogous to @code{buffer-list} for buffers, and "
"includes frames on all terminals.  The list that you get is newly created, "
"so modifying the list doesn't have any effect on the internals of Emacs."
msgstr ""

#. type: defun
#: original_texis/frames.texi:2757
#, no-wrap
msgid "visible-frame-list"
msgstr ""

#. type: defun
#: original_texis/frames.texi:2761
msgid ""
"This function returns a list of just the currently visible frames.  "
"@xref{Visibility of Frames}.  Frames on text terminals always count as "
"visible, even though only the selected one is actually displayed."
msgstr ""

#. type: defun
#: original_texis/frames.texi:2763
#, no-wrap
msgid "frame-list-z-order &optional display"
msgstr ""

#. type: defun
#: original_texis/frames.texi:2770
msgid ""
"This function returns a list of Emacs' frames, in Z (stacking) order "
"(@pxref{Raising and Lowering}).  The optional argument @var{display} "
"specifies which display to poll.  @var{display} should be either a frame or "
"a display name (a string).  If omitted or @code{nil}, that stands for the "
"selected frame's display.  It returns @code{nil} if @var{display} contains "
"no Emacs frame."
msgstr ""

#. type: defun
#: original_texis/frames.texi:2774
msgid ""
"Frames are listed from topmost (first) to bottommost (last).  As a special "
"case, if @var{display} is non-@code{nil} and specifies a live frame, it "
"returns the child frames of that frame in Z (stacking) order."
msgstr ""

#. type: defun
#: original_texis/frames.texi:2776
msgid "This function is not meaningful on text terminals."
msgstr ""

#. type: defun
#: original_texis/frames.texi:2778
#, no-wrap
msgid "next-frame &optional frame minibuf"
msgstr ""

#. type: defun
#: original_texis/frames.texi:2786
msgid ""
"This function lets you cycle conveniently through all the frames on a "
"specific terminal from an arbitrary starting point.  It returns the frame "
"following @var{frame}, in the list of all live frames, on @var{frame}'s "
"terminal.  The argument @var{frame} must specify a live frame and defaults "
"to the selected frame.  It never returns a frame whose @code{no-other-frame} "
"parameter (@pxref{Frame Interaction Parameters}) is non-@code{nil}."
msgstr ""

#. type: defun
#: original_texis/frames.texi:2789
msgid ""
"The second argument, @var{minibuf}, says which frames to consider when "
"deciding what the next frame should be:"
msgstr ""

#. type: table
#: original_texis/frames.texi:2793
msgid "Consider all frames except minibuffer-only frames."
msgstr ""

#. type: code{#1}
#: original_texis/frames.texi:2793
#, no-wrap
msgid "visible"
msgstr ""

#. type: table
#: original_texis/frames.texi:2795
msgid "Consider only visible frames."
msgstr ""

#. type: item
#: original_texis/frames.texi:2795
#, no-wrap
msgid "0"
msgstr ""

#. type: table
#: original_texis/frames.texi:2797
msgid "Consider only visible or iconified frames."
msgstr ""

#. type: item
#: original_texis/frames.texi:2797
#, no-wrap
msgid "a window"
msgstr ""

#. type: table
#: original_texis/frames.texi:2800
msgid ""
"Consider only the frames using that particular window as their minibuffer "
"window."
msgstr ""

#. type: item
#: original_texis/frames.texi:2800
#, no-wrap
msgid "anything else"
msgstr ""

#. type: table
#: original_texis/frames.texi:2802
msgid "Consider all frames."
msgstr ""

#. type: defun
#: original_texis/frames.texi:2805
#, no-wrap
msgid "previous-frame &optional frame minibuf"
msgstr ""

#. type: defun
#: original_texis/frames.texi:2808
msgid ""
"Like @code{next-frame}, but cycles through all frames in the opposite "
"direction."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:2812
msgid ""
"See also @code{next-window} and @code{previous-window}, in @ref{Cyclic "
"Window Ordering}."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:2816
msgid ""
"Some Lisp programs need to find one or more frames that satisfy a given "
"criteria.  The function @code{filtered-frame-list} is provided for this "
"purpose."
msgstr ""

#. type: defun
#: original_texis/frames.texi:2817
#, no-wrap
msgid "filtered-frame-list predicate"
msgstr ""

#. type: defun
#: original_texis/frames.texi:2823
msgid ""
"This function returns the list of all the live frames which satisfy the "
"specified @var{predicate}.  The argument @var{predicate} must be a function "
"of one argument, a frame to be tested against the filtering criteria, and "
"should return non-@code{nil} if the frame satisfies the criteria."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:2831
msgid ""
"Normally, each frame has its own minibuffer window at the bottom, which is "
"used whenever that frame is selected.  You can get that window with the "
"function @code{minibuffer-window} (@pxref{Minibuffer Windows})."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:2832
#, no-wrap
msgid "frame without a minibuffer"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:2833
#, no-wrap
msgid "surrogate minibuffer frame"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:2839
msgid ""
"However, you can also create a frame without a minibuffer.  Such a frame "
"must use the minibuffer window of some other frame.  That other frame will "
"serve as @dfn{surrogate minibuffer frame} for this frame and cannot be "
"deleted via @code{delete-frame} (@pxref{Deleting Frames}) as long as this "
"frame is live."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:2846
msgid ""
"When you create the frame, you can explicitly specify its minibuffer window "
"(in some other frame) with the @code{minibuffer} frame parameter "
"(@pxref{Buffer Parameters}).  If you don't, then the minibuffer is found in "
"the frame which is the value of the variable "
"@code{default-minibuffer-frame}.  Its value should be a frame that does have "
"a minibuffer."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:2850
msgid ""
"If you use a minibuffer-only frame, you might want that frame to raise when "
"you enter the minibuffer.  If so, set the variable "
"@code{minibuffer-auto-raise} to @code{t}.  @xref{Raising and Lowering}."
msgstr ""

#. type: defvar
#: original_texis/frames.texi:2851
#, no-wrap
msgid "default-minibuffer-frame"
msgstr ""

#. type: defvar
#: original_texis/frames.texi:2856
msgid ""
"This variable specifies the frame to use for the minibuffer window, by "
"default.  It does not affect existing frames.  It is always local to the "
"current terminal and cannot be buffer-local.  @xref{Multiple Terminals}."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:2861
#, no-wrap
msgid "input focus"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:2862
#, no-wrap
msgid "selected frame"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:2867
msgid ""
"At any time, one frame in Emacs is the @dfn{selected frame}.  The selected "
"window (@pxref{Selecting Windows}) always resides on the selected frame."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:2878
msgid ""
"When Emacs displays its frames on several terminals (@pxref{Multiple "
"Terminals}), each terminal has its own selected frame.  But only one of "
"these is @emph{the} selected frame: it's the frame that belongs to the "
"terminal from which the most recent input came.  That is, when Emacs runs a "
"command that came from a certain terminal, the selected frame is the one of "
"that terminal.  Since Emacs runs only a single command at any given time, it "
"needs to consider only one selected frame at a time; this frame is what we "
"call @dfn{the selected frame} in this manual.  The display on which the "
"selected frame is shown is the @dfn{selected frame's display}."
msgstr ""

#. type: defun
#: original_texis/frames.texi:2879
#, no-wrap
msgid "selected-frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:2881
msgid "This function returns the selected frame."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:2889
msgid ""
"Some window systems and window managers direct keyboard input to the window "
"object that the mouse is in; others require explicit clicks or commands to "
"@dfn{shift the focus} to various window objects.  Either way, Emacs "
"automatically keeps track of which frames have focus.  To explicitly switch "
"to a different frame from a Lisp function, call "
"@code{select-frame-set-input-focus}."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:2900
msgid ""
"The plural ``frames'' in the previous paragraph is deliberate: while Emacs "
"itself has only one selected frame, Emacs can have frames on many different "
"terminals (recall that a connection to a window system counts as a "
"terminal), and each terminal has its own idea of which frame has input "
"focus.  Under the X Window System, where user input is organized into "
"individual ``seats'' of input, each seat in turn can have its own specific "
"input focus.  When you set the input focus to a frame, you set the focus for "
"that frame's terminal on the last seat which interacted with Emacs, but "
"frames on other terminals and seats may still remain focused."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:2905
msgid ""
"If the input focus is set before any user interaction has occurred on the "
"specified terminal, then the X server picks a random seat (normally the one "
"with the lowest number) and sets the input focus there."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:2910
msgid ""
"Lisp programs can switch frames temporarily by calling the function "
"@code{select-frame}.  This does not alter the window system's concept of "
"focus; rather, it escapes from the window manager's control until that "
"control is somehow reasserted."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:2917
msgid ""
"When using a text terminal, only one frame can be displayed at a time on the "
"terminal, so after a call to @code{select-frame}, the next redisplay "
"actually displays the newly selected frame.  This frame remains selected "
"until a subsequent call to @code{select-frame}.  Each frame on a text "
"terminal has a number which appears in the mode line before the buffer name "
"(@pxref{Mode Line Variables})."
msgstr ""

#. type: defun
#: original_texis/frames.texi:2918
#, no-wrap
msgid "select-frame-set-input-focus frame &optional norecord"
msgstr ""

#. type: defun
#: original_texis/frames.texi:2925
msgid ""
"This function selects @var{frame}, raises it (should it happen to be "
"obscured by other frames) and tries to give it the window system's focus.  "
"On a text terminal, the next redisplay displays the new frame on the entire "
"terminal screen.  The optional argument @var{norecord} has the same meaning "
"as for @code{select-frame} (see below).  The return value of this function "
"is not significant."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:2930
msgid ""
"Ideally, the function described next should focus a frame without also "
"raising it above other frames.  Unfortunately, many window-systems or window "
"managers may refuse to comply."
msgstr ""

#. type: defun
#: original_texis/frames.texi:2931
#, no-wrap
msgid "x-focus-frame frame &optional noactivate"
msgstr ""

#. type: defun
#: original_texis/frames.texi:2938
msgid ""
"This function gives @var{frame} the focus of the X server without "
"necessarily raising it.  @var{frame} @code{nil} means use the selected "
"frame.  Under X, the optional argument @var{noactivate}, if non-@code{nil}, "
"means to avoid making @var{frame}'s window-system window the ``active'' "
"window which should insist a bit more on avoiding to raise @var{frame} above "
"other frames."
msgstr ""

#. type: defun
#: original_texis/frames.texi:2943
msgid ""
"On MS-Windows the @var{noactivate} argument has no effect.  However, if "
"@var{frame} is a child frame (@pxref{Child Frames}), this function usually "
"focuses @var{frame} without raising it above other child frames."
msgstr ""

#. type: defun
#: original_texis/frames.texi:2945
msgid "If there is no window system support, this function does nothing."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:2947
#, no-wrap
msgid "Command select-frame frame &optional norecord"
msgstr ""

#. type: deffn
#: original_texis/frames.texi:2955
msgid ""
"This function selects frame @var{frame}, temporarily disregarding the focus "
"of the X server if any.  The selection of @var{frame} lasts until the next "
"time the user does something to select a different frame, or until the next "
"time this function is called.  (If you are using a window system, the "
"previously selected frame may be restored as the selected frame after return "
"to the command loop, because it still may have the window system's input "
"focus.)"
msgstr ""

#. type: deffn
#: original_texis/frames.texi:2963
msgid ""
"The specified @var{frame} becomes the selected frame, and its terminal "
"becomes the selected terminal.  This function then calls "
"@code{select-window} as a subroutine, passing the window selected within "
"@var{frame} as its first argument and @var{norecord} as its second argument "
"(hence, if @var{norecord} is non-@code{nil}, this avoids changing the order "
"of recently selected windows and the buffer list).  @xref{Selecting "
"Windows}."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:2966
msgid ""
"This function returns @var{frame}, or @code{nil} if @var{frame} has been "
"deleted."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:2970
msgid ""
"In general, you should never use @code{select-frame} in a way that could "
"switch to a different terminal without switching back when you're done."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:2972
#, no-wrap
msgid "text-terminal focus notification"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:2981
msgid ""
"Emacs cooperates with the window system by arranging to select frames as the "
"server and window manager request.  When a window system informs Emacs that "
"one of its frames has been selected, Emacs internally generates a "
"@dfn{focus-in} event.  When an Emacs frame is displayed on a text-terminal "
"emulator, such as @command{xterm}, which supports reporting of focus-change "
"notification, the focus-in and focus-out events are available even for "
"text-mode frames.  Focus events are normally handled by "
"@code{handle-focus-in}."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:2982
#, no-wrap
msgid "Command handle-focus-in event"
msgstr ""

#. type: deffn
#: original_texis/frames.texi:2994
msgid ""
"This function handles focus-in events from window systems and terminals that "
"support explicit focus notifications.  It updates the per-frame focus flags "
"that @code{frame-focus-state} queries and calls "
"@code{after-focus-change-function}.  In addition, it generates a "
"@code{switch-frame} event in order to switch the Emacs notion of the "
"selected frame to the frame most recently focused in some terminal.  It's "
"important to note that this switching of the Emacs selected frame to the "
"most recently focused frame does not mean that other frames do not continue "
"to have the focus in their respective terminals.  Do not invoke this "
"function yourself: instead, attach logic to "
"@code{after-focus-change-function}."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:2996
#, no-wrap
msgid "Command handle-switch-frame frame"
msgstr ""

#. type: deffn
#: original_texis/frames.texi:3001
msgid ""
"This function handles a switch-frame event, which Emacs generates for itself "
"upon focus notification or under various other circumstances involving an "
"input event arriving at a different frame from the last event.  Do not "
"invoke this function yourself."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3003
#, no-wrap
msgid "redirect-frame-focus frame &optional focus-frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3009
msgid ""
"This function redirects focus from @var{frame} to @var{focus-frame}.  This "
"means that @var{focus-frame} will receive subsequent keystrokes and events "
"intended for @var{frame}.  After such an event, the value of "
"@code{last-event-frame} will be @var{focus-frame}.  Also, switch-frame "
"events specifying @var{frame} will instead select @var{focus-frame}."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3013
msgid ""
"If @var{focus-frame} is omitted or @code{nil}, that cancels any existing "
"redirection for @var{frame}, which therefore once again receives its own "
"events."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3019
msgid ""
"One use of focus redirection is for frames that don't have minibuffers.  "
"These frames use minibuffers on other frames.  Activating a minibuffer on "
"another frame redirects focus to that frame.  This puts the focus on the "
"minibuffer's frame, where it belongs, even though the mouse remains in the "
"frame that activated the minibuffer."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3025
msgid ""
"Selecting a frame can also change focus redirections.  Selecting frame "
"@code{bar}, when @code{foo} had been selected, changes any redirections "
"pointing to @code{foo} so that they point to @code{bar} instead.  This "
"allows focus redirection to work properly when the user switches from one "
"frame to another using @code{select-window}."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3029
msgid ""
"This means that a frame whose focus is redirected to itself is treated "
"differently from a frame whose focus is not redirected.  @code{select-frame} "
"affects the former but not the latter."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3032
msgid ""
"The redirection lasts until @code{redirect-frame-focus} is called to change "
"it."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3034
#, no-wrap
msgid "frame-focus-state frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3036
msgid "This function retrieves the last known focus state of @var{frame}."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3042
msgid ""
"It returns @code{nil} if the frame is known not to be focused, @code{t} if "
"the frame is known to be focused, or @code{unknown} if Emacs does not know "
"the focus state of the frame.  (You may see this last state in TTY frames "
"running on terminals that do not support explicit focus notifications.)"
msgstr ""

#. type: defvar
#: original_texis/frames.texi:3044
#, no-wrap
msgid "after-focus-change-function"
msgstr ""

#. type: defvar
#: original_texis/frames.texi:3050
msgid ""
"This function is called with no arguments when Emacs notices that a frame "
"may have gotten or lost focus.  Focus events are delivered asynchronously, "
"and may not be delivered in the expected order, so code that wants to do "
"something depending on the state of focused frames have go through all the "
"frames and check."
msgstr ""

#. type: defvar
#: original_texis/frames.texi:3053
msgid ""
"For instance, here's a simple example function that sets the background "
"color based on whether the frame has focus or not:"
msgstr ""

#. type: lisp
#: original_texis/frames.texi:3062
#, no-wrap
msgid ""
"(add-function :after after-focus-change-function\n"
"              #'my-change-background)\n"
"(defun my-change-background ()\n"
"  (dolist (frame (frame-list))\n"
"    (pcase (frame-focus-state frame)\n"
"      (`t (set-face-background 'default \"black\" frame))\n"
"      (`nil (set-face-background 'default \"#404040\" frame)))))\n"
msgstr ""

#. type: defvar
#: original_texis/frames.texi:3068
msgid ""
"Multiple frames may appear to have input focus simultaneously due to focus "
"event delivery differences, the presence of multiple Emacs terminals, and "
"other factors, and code should be robust in the face of this situation."
msgstr ""

#. type: defvar
#: original_texis/frames.texi:3074
msgid ""
"Depending on window system, focus events may also be delivered repeatedly "
"and with different focus states before settling to the expected values.  "
"Code relying on focus notifications should ``debounce'' any user-visible "
"updates arising from focus changes, perhaps by deferring work until "
"redisplay."
msgstr ""

#. type: defvar
#: original_texis/frames.texi:3078
msgid ""
"This function may be called in arbitrary contexts, including from inside "
"@code{read-event}, so take the same care as you might when writing a process "
"filter."
msgstr ""

#. type: defopt
#: original_texis/frames.texi:3080
#, no-wrap
msgid "focus-follows-mouse"
msgstr ""

#. type: defopt
#: original_texis/frames.texi:3084
msgid ""
"This option informs Emacs whether and how the window manager transfers focus "
"when you move the mouse pointer into a frame.  It can have three meaningful "
"values:"
msgstr ""

#. type: table
#: original_texis/frames.texi:3090
msgid ""
"The default value @code{nil} should be used when your window manager follows "
"a ``click-to-focus'' policy where you have to click the mouse inside of a "
"frame in order for that frame to gain focus."
msgstr ""

#. type: table
#: original_texis/frames.texi:3096
msgid ""
"The value @code{t} should be used when your window manager has the focus "
"automatically follow the position of the mouse pointer but a frame that "
"gains focus is not raised automatically and may even remain occluded by "
"other window-system windows."
msgstr ""

#. type: table
#: original_texis/frames.texi:3101
msgid ""
"The value @code{auto-raise} should be used when your window manager has the "
"focus automatically follow the position of the mouse pointer and a frame "
"that gains focus is raised automatically."
msgstr ""

#. type: defopt
#: original_texis/frames.texi:3107
msgid ""
"If this option is non-@code{nil}, Emacs moves the mouse pointer to the frame "
"selected by @code{select-frame-set-input-focus}.  That function is used by a "
"number of commands like, for example, @code{other-frame} and "
"@code{pop-to-buffer}."
msgstr ""

#. type: defopt
#: original_texis/frames.texi:3113
msgid ""
"The distinction between the values @code{t} and @code{auto-raise} is not "
"needed for ``normal'' frames because the window manager usually takes care "
"of raising them.  It is useful to automatically raise child frames via "
"@code{mouse-autoselect-window} (@pxref{Mouse Window Auto-selection})."
msgstr ""

#. type: defopt
#: original_texis/frames.texi:3121
msgid ""
"Note that this option does not distinguish ``sloppy'' focus (where the frame "
"that previously had focus retains focus as long as the mouse pointer does "
"not move into another window-system window) from ``strict'' focus (where a "
"frame immediately loses focus when it's left by the mouse pointer).  Neither "
"does it recognize whether your window manager supports delayed focusing or "
"auto-raising where you can explicitly specify the time until a new frame "
"gets focus or is auto-raised."
msgstr ""

#. type: defopt
#: original_texis/frames.texi:3125
msgid ""
"You can supply a ``focus follows mouse'' policy for individual Emacs windows "
"by customizing the variable @code{mouse-autoselect-window} (@pxref{Mouse "
"Window Auto-selection})."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:3130
#, no-wrap
msgid "visible frame"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:3131
#, no-wrap
msgid "invisible frame"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:3132
#, no-wrap
msgid "iconified frame"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:3133
#, no-wrap
msgid "minimized frame"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:3134
#, no-wrap
msgid "frame visibility"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3143
msgid ""
"A frame on a graphical display may be @dfn{visible}, @dfn{invisible}, or "
"@dfn{iconified}.  If it is visible, its contents are displayed in the usual "
"manner.  If it is iconified, its contents are not displayed, but there is a "
"little icon somewhere to bring the frame back into view (some window "
"managers refer to this state as @dfn{minimized} rather than @dfn{iconified}, "
"but from Emacs' point of view they are the same thing).  If a frame is "
"invisible, it is not displayed at all."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:3144
#, no-wrap
msgid "mapped frame"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:3145
#, no-wrap
msgid "unmapped frame"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3153
msgid ""
"The concept of visibility is strongly related to that of (un-)mapped "
"frames.  A frame (or, more precisely, its window-system window) is and "
"becomes @dfn{mapped} when it is displayed for the first time and whenever it "
"changes its state of visibility from @code{iconified} or @code{invisible} to "
"@code{visible}.  Conversely, a frame is and becomes @dfn{unmapped} whenever "
"it changes its status from @code{visible} to @code{iconified} or "
"@code{invisible}."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3156
msgid ""
"Visibility is meaningless on text terminals, since only the selected frame "
"is actually displayed in any case."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3157
#, no-wrap
msgid "frame-visible-p frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3161
msgid ""
"This function returns the visibility status of frame @var{frame}.  The value "
"is @code{t} if @var{frame} is visible, @code{nil} if it is invisible, and "
"@code{icon} if it is iconified."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3165
msgid ""
"On a text terminal, all frames are considered visible for the purposes of "
"this function, even though only one frame is displayed.  @xref{Raising and "
"Lowering}."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:3167
#, no-wrap
msgid "Command iconify-frame &optional frame"
msgstr ""

#. type: deffn
#: original_texis/frames.texi:3171
msgid ""
"This function iconifies frame @var{frame}.  If you omit @var{frame}, it "
"iconifies the selected frame.  This usually makes all child frames of "
"@var{frame} (and their descendants) invisible (@pxref{Child Frames})."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:3173
#, no-wrap
msgid "Command make-frame-visible &optional frame"
msgstr ""

#. type: deffn
#: original_texis/frames.texi:3178
msgid ""
"This function makes frame @var{frame} visible.  If you omit @var{frame}, it "
"makes the selected frame visible.  This does not raise the frame, but you "
"can do that with @code{raise-frame} if you wish (@pxref{Raising and "
"Lowering})."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:3181
msgid ""
"Making a frame visible usually makes all its child frames (and their "
"descendants) visible as well (@pxref{Child Frames})."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:3183
#, no-wrap
msgid "Command make-frame-invisible &optional frame force"
msgstr ""

#. type: deffn
#: original_texis/frames.texi:3188
msgid ""
"This function makes frame @var{frame} invisible.  If you omit @var{frame}, "
"it makes the selected frame invisible.  Usually, this makes all child frames "
"of @var{frame} (and their descendants) invisible too (@pxref{Child Frames})."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:3191
msgid ""
"Unless @var{force} is non-@code{nil}, this function refuses to make "
"@var{frame} invisible if all other frames are invisible."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3199
msgid ""
"The visibility status of a frame is also available as a frame parameter.  "
"You can read or change it as such.  @xref{Management Parameters}.  The user "
"can also iconify and deiconify frames with the window manager.  This happens "
"below the level at which Emacs can exert any control, but Emacs does provide "
"events that you can use to keep track of such changes.  @xref{Misc Events}."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3200
#, no-wrap
msgid "x-double-buffered-p &optional frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3204
msgid ""
"This function returns non-@code{nil} if @var{frame} is currently being "
"rendered with double buffering.  @var{frame} defaults to the selected frame."
msgstr ""

#. type: section
#: original_texis/frames.texi:3208
#, no-wrap
msgid "Raising, Lowering and Restacking Frames"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:3210
#, no-wrap
msgid "raising a frame"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:3211
#, no-wrap
msgid "lowering a frame"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:3212
#, no-wrap
msgid "restacking a frame"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:3213
#, no-wrap
msgid "frame stacking order"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:3214
#, no-wrap
msgid "frame Z-order"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:3215
#, no-wrap
msgid "Z-order"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3222
msgid ""
"Most window systems use a desktop metaphor.  Part of this metaphor is the "
"idea that system-level windows (representing, e.g., Emacs frames)  are "
"stacked in a notional third dimension perpendicular to the screen surface.  "
"The order induced by stacking is total and usually referred to as stacking "
"(or Z-) order.  Where the areas of two windows overlap, the one higher up in "
"that order will (partially) cover the one underneath."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3227
msgid ""
"You can @dfn{raise} a frame to the top of that order or @dfn{lower} a frame "
"to its bottom by using the functions @code{raise-frame} and "
"@code{lower-frame}.  You can @dfn{restack} a frame directly above or below "
"another frame using the function @code{frame-restack}."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3234
msgid ""
"Note that all functions described below will respect the adherence of frames "
"(and all other window-system windows) to their respective z-group "
"(@pxref{Position Parameters}).  For example, you usually cannot lower a "
"frame below that of the desktop window and you cannot raise a frame whose "
"@code{z-group} parameter is @code{nil} above the window-system's taskbar or "
"tooltip window."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:3235
#, no-wrap
msgid "Command raise-frame &optional frame"
msgstr ""

#. type: deffn
#: original_texis/frames.texi:3241
msgid ""
"This function raises frame @var{frame} (default, the selected frame)  above "
"all other frames belonging to the same or a lower z-group as @var{frame}.  "
"If @var{frame} is invisible or iconified, this makes it visible.  If "
"@var{frame} is a child frame (@pxref{Child Frames}), this raises @var{frame} "
"above all other child frames of its parent."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:3243
#, no-wrap
msgid "Command lower-frame &optional frame"
msgstr ""

#. type: deffn
#: original_texis/frames.texi:3248
msgid ""
"This function lowers frame @var{frame} (default, the selected frame)  below "
"all other frames belonging to the same or a higher z-group as @var{frame}.  "
"If @var{frame} is a child frame (@pxref{Child Frames}), this lowers "
"@var{frame} below all other child frames of its parent."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3250
#, no-wrap
msgid "frame-restack frame1 frame2 &optional above"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3258
msgid ""
"This function restacks @var{frame1} below @var{frame2}.  This implies that "
"if both frames are visible and their display areas overlap, @var{frame2} "
"will (partially) obscure @var{frame1}.  If the optional third argument "
"@var{above} is non-@code{nil}, this function restacks @var{frame1} above "
"@var{frame2}.  This means that if both frames are visible and their display "
"areas overlap, @var{frame1} will (partially)  obscure @var{frame2}."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3266
msgid ""
"Technically, this function may be thought of as an atomic action performed "
"in two steps: The first step removes @var{frame1}'s window-system window "
"from the display.  The second step reinserts @var{frame1}'s window into the "
"display below (above if @var{above} is true) that of @var{frame2}.  Hence "
"the position of @var{frame2} in its display's Z (stacking) order relative to "
"all other frames excluding @var{frame1} remains unaltered."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3268
msgid "Some window managers may refuse to restack windows."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3279
msgid ""
"Note that the effect of restacking will only hold as long as neither of the "
"involved frames is iconified or made invisible.  You can use the "
"@code{z-group} (@pxref{Position Parameters}) frame parameter to add a frame "
"to a group of frames permanently shown above or below other frames.  As long "
"as a frame belongs to one of these groups, restacking it will only affect "
"its relative stacking position within that group.  The effect of restacking "
"frames belonging to different z-groups is undefined.  You can list frames in "
"their current stacking order with the function @code{frame-list-z-order} "
"(@pxref{Finding All Frames})."
msgstr ""

#. type: defopt
#: original_texis/frames.texi:3280
#, no-wrap
msgid "minibuffer-auto-raise"
msgstr ""

#. type: defopt
#: original_texis/frames.texi:3283
msgid ""
"If this is non-@code{nil}, activation of the minibuffer raises the frame "
"that the minibuffer window is in."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3288
msgid ""
"On window systems, you can also enable auto-raising (on frame selection) or "
"auto-lowering (on frame deselection) using frame parameters.  "
"@xref{Management Parameters}."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:3289
#, no-wrap
msgid "top frame"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3293
msgid ""
"The concept of raising and lowering frames also applies to text terminal "
"frames.  On each text terminal, only the top frame is displayed at any one "
"time."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3294
#, no-wrap
msgid "tty-top-frame &optional terminal"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3299
msgid ""
"This function returns the top frame on @var{terminal}.  @var{terminal} "
"should be a terminal object, a frame (meaning that frame's terminal), or "
"@code{nil} (meaning the selected frame's terminal).  If it does not refer to "
"a text terminal, the return value is @code{nil}."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:3304
#, no-wrap
msgid "frame configuration"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3309
msgid ""
"A @dfn{frame configuration} records the current arrangement of frames, all "
"their properties, and the window configuration of each one.  (@xref{Window "
"Configurations}.)"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3310
#, no-wrap
msgid "current-frame-configuration"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3313
msgid ""
"This function returns a frame configuration list that describes the current "
"arrangement of frames and their contents."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3315
#, no-wrap
msgid "set-frame-configuration configuration &optional nodelete"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3319
msgid ""
"This function restores the state of frames described in "
"@var{configuration}.  However, this function does not restore deleted "
"frames."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3323
msgid ""
"Ordinarily, this function deletes all existing frames not listed in "
"@var{configuration}.  But if @var{nodelete} is non-@code{nil}, the unwanted "
"frames are iconified instead."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:3328
#, no-wrap
msgid "child frames"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:3329
#, no-wrap
msgid "parent frames"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3336
msgid ""
"Child frames are objects halfway between windows (@pxref{Windows}) and "
"``normal'' frames.  Like windows, they are attached to an owning frame.  "
"Unlike windows, they may overlap each other---changing the size or position "
"of one child frame does not change the size or position of any of its "
"sibling child frames."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3341
msgid ""
"By design, operations to make or modify child frames are implemented with "
"the help of frame parameters (@pxref{Frame Parameters}) without any "
"specialized functions or customizable variables.  Note that child frames are "
"meaningful on graphical terminals only."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3349
msgid ""
"To create a new child frame or to convert a normal frame into a child frame, "
"set that frame's @code{parent-frame} parameter (@pxref{Frame Interaction "
"Parameters}) to that of an already existing frame.  The frame specified by "
"that parameter will then be the frame's parent frame as long as the "
"parameter is not changed or reset.  Technically, this makes the child "
"frame's window-system window a child window of the parent frame's "
"window-system window."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:3350
#, no-wrap
msgid "reparent frame"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:3351
#, no-wrap
msgid "nest frame"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3362
msgid ""
"The @code{parent-frame} parameter can be changed at any time.  Setting it to "
"another frame @dfn{reparents} the child frame.  Setting it to another child "
"frame makes the frame a @dfn{nested} child frame.  Setting it to @code{nil} "
"restores the frame's status as a top-level frame---a frame whose "
"window-system window is a child of its display's root window.@footnote{On "
"Haiku, child frames are only visible when a parent frame is active, owing to "
"a limitation of the Haiku windowing system.  Owing to the same limitation, "
"child frames are only guaranteed to appear above their top-level parent; "
"that is to say, the top-most frame in the hierarchy, which does not have a "
"parent frame.}"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3369
msgid ""
"Since child frames can be arbitrarily nested, a frame can be both a child "
"and a parent frame.  Also, the relative roles of child and parent frame may "
"be reversed at any time (though it's usually a good idea to keep the size of "
"a child frame sufficiently smaller than that of its parent).  An error will "
"be signaled for the attempt to make a frame an ancestor of itself."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3376
msgid ""
"Most window-systems clip a child frame at the native edges (@pxref{Frame "
"Geometry}) of its parent frame---everything outside these edges is usually "
"invisible.  A child frame's @code{left} and @code{top} parameters specify a "
"position relative to the top-left corner of its parent's native frame.  When "
"the parent frame is resized, this position remains conceptually unaltered."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3380
msgid ""
"NS builds do not clip child frames at the parent frame's edges, allowing "
"them to be positioned so they do not obscure the parent frame while still "
"being visible themselves."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3386
msgid ""
"Usually, moving a parent frame moves along all its child frames and their "
"descendants as well, keeping their relative positions unaltered.  Note that "
"the hook @code{move-frame-functions} (@pxref{Frame Position})  is run for a "
"child frame only when the position of the child frame relative to its parent "
"frame changes."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3395
msgid ""
"When a parent frame is resized, its child frames conceptually retain their "
"previous sizes and their positions relative to the left upper corner of the "
"parent.  This means that a child frame may become (partially) invisible when "
"its parent frame shrinks.  The parameter @code{keep-ratio} (@pxref{Frame "
"Interaction Parameters}) can be used to resize and reposition a child frame "
"proportionally whenever its parent frame is resized.  This may avoid "
"obscuring parts of a frame when its parent frame is shrunk."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3404
msgid ""
"A visible child frame always appears on top of its parent frame thus "
"obscuring parts of it, except on NS builds where it may be positioned "
"beneath the parent.  This is comparable to the window-system window of a "
"top-level frame which also always appears on top of its parent window---the "
"desktop's root window.  When a parent frame is iconified or made invisible "
"(@pxref{Visibility of Frames}), its child frames are made invisible.  When a "
"parent frame is deiconified or made visible, its child frames are made "
"visible."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3414
msgid ""
"When a parent frame is about to be deleted (@pxref{Deleting Frames}), its "
"child frames are recursively deleted before it.  There is one exception to "
"this rule: When the child frame serves as a surrogate minibuffer frame "
"(@pxref{Minibuffers and Frames}) for another frame, it is retained until the "
"parent frame has been deleted.  If, at this time, no remaining frame uses "
"the child frame as its minibuffer frame, Emacs will try to delete the child "
"frame too.  If that deletion fails for whatever reason, the child frame is "
"made a top-level frame."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3419
msgid ""
"Whether a child frame can have a menu or tool bar is window-system or window "
"manager dependent.  Most window-systems explicitly disallow menu bars for "
"child frames.  It seems advisable to disable both, menu and tool bars, via "
"the frame's initial parameters settings."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3424
msgid ""
"Usually, child frames do not exhibit window manager decorations like a title "
"bar or external borders (@pxref{Frame Geometry}).  When the child frame does "
"not show a menu or tool bar, any other of the frame's borders (@pxref{Layout "
"Parameters}) can be used instead of the external borders."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3431
msgid ""
"In particular, under X (but not when building with GTK+), the frame's outer "
"border can be used.  On MS-Windows, specifying a non-zero outer border width "
"will show a one-pixel wide external border.  Under all window-systems, the "
"internal border can be used.  In either case, it's advisable to disable a "
"child frame's window manager decorations with the @code{undecorated} frame "
"parameter (@pxref{Management Parameters})."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3439
msgid ""
"To resize or move an undecorated child frame with the mouse, special frame "
"parameters (@pxref{Mouse Dragging Parameters}) have to be used.  The "
"internal border of a child frame, if present, can be used to resize the "
"frame with the mouse, provided that frame has a non-@code{nil} "
"@code{drag-internal-border} parameter.  If set, the @code{snap-width} "
"parameter indicates the number of pixels where the frame @dfn{snaps} at the "
"respective edge or corner of its parent frame."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3446
msgid ""
"There are two ways to drag an entire child frame with the mouse: The "
"@code{drag-with-mode-line} parameter, if non-@code{nil}, allows to drag a "
"frame without minibuffer window (@pxref{Minibuffer Windows}) via the mode "
"line area of its bottommost window.  The @code{drag-with-header-line} "
"parameter, if non-@code{nil}, allows to drag the frame via the header line "
"area of its topmost window."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3452
msgid ""
"In order to give a child frame a draggable header or mode line, the window "
"parameters @code{mode-line-format} and @code{header-line-format} are handy "
"(@pxref{Window Parameters}).  These allow to remove an unwanted mode line "
"(when @code{drag-with-header-line} is chosen) and to remove mouse-sensitive "
"areas which might interfere with frame dragging."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3459
msgid ""
"When the user drags a frame with a mouse and overshoots, it's easy to drag a "
"frame out of the screen area of its parent.  Retrieving such a frame can be "
"hairy once the mouse button has been released.  To prevent such a situation, "
"it is advisable to set the frame's @code{top-visible} or "
"@code{bottom-visible} parameter (@pxref{Mouse Dragging Parameters})."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3469
msgid ""
"Set the @code{top-visible} parameter of a child frame to a number when you "
"intend to allow the user dragging that frame by its header line.  Setting "
"@code{top-visible} to a number inhibits dragging the top edge of the child "
"frame above the top edge of its parent.  Set the @code{bottom-visible} "
"parameter to a number when you intend to drag that frame via its mode line; "
"this inhibits dragging the bottom edge of the child frame beneath the bottom "
"edge of its parent.  In either case, that number also specifies width and "
"height (in pixels) of the area of the child frame that remains visible "
"during dragging."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3476
msgid ""
"When a child frame is used for displaying a buffer via "
"@code{display-buffer-in-child-frame} (@pxref{Buffer Display Action "
"Functions}), the frame's @code{auto-hide-function} parameter (@pxref{Frame "
"Interaction Parameters}) can be set to a function, in order to appropriately "
"deal with the frame when the window displaying the buffer shall be quit."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3481
msgid ""
"When a child frame is used during minibuffer interaction, for example, to "
"display completions in a separate window, the @code{minibuffer-exit} "
"parameter (@pxref{Frame Interaction Parameters}) is useful in order to deal "
"with the frame when the minibuffer is exited."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3484
msgid ""
"The behavior of child frames deviates from that of top-level frames in a "
"number of other ways as well.  Here we sketch a few of them:"
msgstr ""

#. type: itemize
#: original_texis/frames.texi:3494
msgid ""
"The semantics of maximizing and iconifying child frames is highly "
"window-system dependent.  As a rule, applications should never invoke these "
"operations on child frames.  By default, invoking @code{iconify-frame} on a "
"child frame will try to iconify the top-level frame corresponding to that "
"child frame instead.  To obtain a different behavior, users may customize "
"the option @code{iconify-child-frame} described below."
msgstr ""

#. type: itemize
#: original_texis/frames.texi:3500
msgid ""
"Raising, lowering and restacking child frames (@pxref{Raising and Lowering}) "
"or changing the @code{z-group} (@pxref{Position Parameters})  of a child "
"frame changes only the stacking order of child frames with the same parent."
msgstr ""

#. type: itemize
#: original_texis/frames.texi:3504
msgid ""
"Many window-systems are not able to change the opacity (@pxref{Font and "
"Color Parameters}) of child frames."
msgstr ""

#. type: itemize
#: original_texis/frames.texi:3510
msgid ""
"Transferring focus from a child frame to an ancestor that is not its parent "
"by clicking with the mouse in a visible part of that ancestor's window may "
"fail with some window-systems.  You may have to click into the direct "
"parent's window-system window first."
msgstr ""

#. type: itemize
#: original_texis/frames.texi:3515
msgid ""
"Window managers might not bother to extend their focus follows mouse policy "
"to child frames.  Customizing @code{mouse-autoselect-window} can help in "
"this regard (@pxref{Mouse Window Auto-selection})."
msgstr ""

#. type: itemize
#: original_texis/frames.texi:3520
msgid ""
"Dropping (@pxref{Drag and Drop}) on child frames is not guaranteed to work "
"on all window-systems.  Some will drop the object on the parent frame or on "
"some ancestor instead."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3524
msgid ""
"The following two functions can be useful when working with child and parent "
"frames:"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3525
#, no-wrap
msgid "frame-parent &optional frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3530
msgid ""
"This function returns the parent frame of @var{frame}.  The parent frame of "
"@var{frame} is the Emacs frame whose window-system window is the parent "
"window of @var{frame}'s window-system window.  If such a frame exists, "
"@var{frame} is considered a child frame of that frame."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3532
msgid "This function returns @code{nil} if @var{frame} has no parent frame."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3534
#, no-wrap
msgid "frame-ancestor-p ancestor descendant"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3540
msgid ""
"This functions returns non-@code{nil} if @var{ancestor} is an ancestor of "
"@var{descendant}.  @var{ancestor} is an ancestor of @var{descendant} when it "
"is either @var{descendant}'s parent frame or it is an ancestor of "
"@var{descendant}'s parent frame.  Both, @var{ancestor} and @var{descendant} "
"must specify live frames."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3547
msgid ""
"Note also the function @code{window-largest-empty-rectangle} "
"(@pxref{Coordinates and Windows}) which can be used to inscribe a child "
"frame in the largest empty area of an existing window.  This can be useful "
"to avoid that a child frame obscures any text shown in that window."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3550
msgid ""
"Customizing the following option can be useful to tweak the behavior of "
"@code{iconify-frame} for child frames."
msgstr ""

#. type: defopt
#: original_texis/frames.texi:3551
#, no-wrap
msgid "iconify-child-frame"
msgstr ""

#. type: defopt
#: original_texis/frames.texi:3558
msgid ""
"This option tells Emacs how to proceed when it is asked to iconify a child "
"frame.  If it is @code{nil}, @code{iconify-frame} will do nothing when "
"invoked on a child frame.  If it is @code{iconify-top-level}, Emacs will try "
"to iconify the top-level frame that is the ancestor of this child frame "
"instead.  If it is @code{make-invisible}, Emacs will try to make this child "
"frame invisible instead of iconifying it."
msgstr ""

#. type: defopt
#: original_texis/frames.texi:3563
msgid ""
"Any other value means to try iconifying the child frame.  Since such an "
"attempt may not be honored by all window managers and can even lead to "
"making the child frame unresponsive to user actions, the default is to "
"iconify the top level frame instead."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:3568
#, no-wrap
msgid "mouse tracking"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3575
msgid ""
"Sometimes it is useful to @dfn{track} the mouse, which means to display "
"something to indicate where the mouse is and move the indicator as the mouse "
"moves.  For efficient mouse tracking, you need a way to wait until the mouse "
"actually moves."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3582
msgid ""
"The convenient way to track the mouse is to ask for events to represent "
"mouse motion.  Then you can wait for motion by waiting for an event.  In "
"addition, you can easily handle any other sorts of events that may occur.  "
"That is useful, because normally you don't want to track the mouse "
"forever---only until some other event, such as the release of a button."
msgstr ""

#. type: defmac
#: original_texis/frames.texi:3583
#, no-wrap
msgid "track-mouse body@dots{}"
msgstr ""

#. type: defmac
#: original_texis/frames.texi:3588
msgid ""
"This macro executes @var{body}, with generation of mouse motion events "
"enabled.  Typically, @var{body} would use @code{read-event} to read the "
"motion events and modify the display accordingly.  @xref{Motion Events}, for "
"the format of mouse motion events."
msgstr ""

#. type: defmac
#: original_texis/frames.texi:3601
msgid ""
"The value of @code{track-mouse} is that of the last form in @var{body}.  You "
"should design @var{body} to return when it sees the up-event that indicates "
"the release of the button, or whatever kind of event means it is time to "
"stop tracking.  Its value also controls how mouse events are reported while "
"a mouse button is held down: if it is @code{dropping} or @code{drag-source}, "
"the motion events are reported relative to the frame underneath the "
"pointer.  If there is no such frame, the events will be reported relative to "
"the frame the mouse buttons were first pressed on.  In addition, the "
"@code{posn-window} of the mouse position list will be @code{nil} if the "
"value is @code{drag-source}.  This is useful to determine if a frame is not "
"directly visible underneath the mouse pointer."
msgstr ""

#. type: defmac
#: original_texis/frames.texi:3614
msgid ""
"The @code{track-mouse} macro causes Emacs to generate mouse motion events by "
"binding the variable @code{track-mouse} to a non-@code{nil} value.  If that "
"variable has the special value @code{dragging}, it additionally instructs "
"the display engine to refrain from changing the shape of the mouse pointer.  "
"This is desirable in Lisp programs that require mouse dragging across large "
"portions of Emacs display, which might otherwise cause the mouse pointer to "
"change its shape according to the display portion it hovers on "
"(@pxref{Pointer Shape}).  Therefore, Lisp programs that need the mouse "
"pointer to retain its original shape during dragging should bind "
"@code{track-mouse} to the value @code{dragging} at the beginning of their "
"@var{body}."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3619
msgid ""
"The usual purpose of tracking mouse motion is to indicate on the screen the "
"consequences of pushing or releasing a button at the current position."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3624
msgid ""
"In many cases, you can avoid the need to track the mouse by using the "
"@code{mouse-face} text property (@pxref{Special Properties}).  That works at "
"a much lower level and runs more smoothly than Lisp-level mouse tracking."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3634
#, no-wrap
msgid "x-contour-region window beg end"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3637
#, no-wrap
msgid ""
"This function draws lines to make a box around the text from @var{beg}\n"
"to @var{end}, in window @var{window}.\n"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3639
#, no-wrap
msgid "x-uncontour-region window beg end"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3643
#, no-wrap
msgid ""
"This function erases the lines that would make a box around the text\n"
"from @var{beg} to @var{end}, in window @var{window}.  Use it to remove\n"
"a contour that you previously made by calling @code{x-contour-region}.\n"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3645
#, no-wrap
msgid "x-draw-rectangle frame left top right bottom"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3650
#, no-wrap
msgid ""
"This function draws a hollow rectangle on frame @var{frame} with the\n"
"specified edge coordinates, all measured in pixels from the inside top\n"
"left corner.  It uses the cursor color, the one used for indicating the\n"
"location of point.\n"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3652
#, no-wrap
msgid "x-erase-rectangle frame left top right bottom"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3657
#, no-wrap
msgid ""
"This function erases a hollow rectangle on frame @var{frame} with the\n"
"specified edge coordinates, all measured in pixels from the inside top\n"
"left corner.  Erasure means redrawing the text and background that\n"
"normally belong in the specified rectangle.\n"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:3662
#, no-wrap
msgid "mouse position"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:3663
#, no-wrap
msgid "position of mouse"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3667
msgid ""
"The functions @code{mouse-position} and @code{set-mouse-position} give "
"access to the current position of the mouse."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3668
#, no-wrap
msgid "mouse-position"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3675
msgid ""
"This function returns a description of the position of the mouse.  The value "
"looks like @code{(@var{frame} @var{x} . @var{y})}, where @var{x} and @var{y} "
"are integers giving the (possibly rounded) position in multiples of the "
"default character size of @var{frame} (@pxref{Frame Font}) relative to the "
"native position of @var{frame} (@pxref{Frame Geometry})."
msgstr ""

#. type: defvar
#: original_texis/frames.texi:3677
#, no-wrap
msgid "mouse-position-function"
msgstr ""

#. type: defvar
#: original_texis/frames.texi:3682
msgid ""
"If non-@code{nil}, the value of this variable is a function for "
"@code{mouse-position} to call.  @code{mouse-position} calls this function "
"just before returning, with its normal return value as the sole argument, "
"and it returns whatever this function returns to it."
msgstr ""

#. type: defvar
#: original_texis/frames.texi:3685
msgid ""
"This abnormal hook exists for the benefit of packages like "
"@file{xt-mouse.el} that need to do mouse handling at the Lisp level."
msgstr ""

#. type: defvar
#: original_texis/frames.texi:3687
#, no-wrap
msgid "tty-menu-calls-mouse-position-function"
msgstr ""

#. type: defvar
#: original_texis/frames.texi:3692
msgid ""
"If non-@code{nil}, TTY menus will call @code{mouse-position-function} as "
"described above.  This exists for cases where @code{mouse-position-function} "
"is not safe to be called by the TTY menus, such as if it could trigger "
"redisplay."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3694
#, no-wrap
msgid "set-mouse-position frame x y"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3700
msgid ""
"This function @dfn{warps the mouse} to position @var{x}, @var{y} in frame "
"@var{frame}.  The arguments @var{x} and @var{y} are integers, giving the "
"position in multiples of the default character size of @var{frame} "
"(@pxref{Frame Font}) relative to the native position of @var{frame} "
"(@pxref{Frame Geometry})."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3704
msgid ""
"The resulting mouse position is constrained to the native frame of "
"@var{frame}.  If @var{frame} is not visible, this function does nothing.  "
"The return value is not significant."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3706
#, no-wrap
msgid "mouse-pixel-position"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3709
msgid ""
"This function is like @code{mouse-position} except that it returns "
"coordinates in units of pixels rather than units of characters."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3711
#, no-wrap
msgid "set-mouse-pixel-position frame x y"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3715
msgid ""
"This function warps the mouse like @code{set-mouse-position} except that "
"@var{x} and @var{y} are in units of pixels rather than units of characters."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3719
msgid ""
"The resulting mouse position is not constrained to the native frame of "
"@var{frame}.  If @var{frame} is not visible, this function does nothing.  "
"The return value is not significant."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3723
msgid ""
"On a graphical terminal the following two functions allow the absolute "
"position of the mouse cursor to be retrieved and set."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3724
#, no-wrap
msgid "mouse-absolute-pixel-position"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3728
msgid ""
"This function returns a cons cell (@var{x} . @var{y}) of the coordinates of "
"the mouse cursor position in pixels, relative to a position (0, 0) of the "
"selected frame's display."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3730
#, no-wrap
msgid "set-mouse-absolute-pixel-position x y"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3734
msgid ""
"This function moves the mouse cursor to the position (@var{x}, @var{y}).  "
"The coordinates @var{x} and @var{y} are interpreted in pixels relative to a "
"position (0, 0) of the selected frame's display."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3738
msgid ""
"The following function can tell whether the mouse cursor is currently "
"visible on a frame:"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3739
#, no-wrap
msgid "frame-pointer-visible-p &optional frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3746
msgid ""
"This predicate function returns non-@code{nil} if the mouse pointer "
"displayed on @var{frame} is visible; otherwise it returns @code{nil}.  "
"@var{frame} omitted or @code{nil} means the selected frame.  This is useful "
"when @code{make-pointer-invisible} is set to @code{t}: it allows you to know "
"if the pointer has been hidden.  @xref{Mouse Avoidance,,,emacs, The Emacs "
"Manual}."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:3752
#, no-wrap
msgid "menus, popup"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3758
msgid ""
"A Lisp program can pop up a menu so that the user can choose an alternative "
"with the mouse.  On a text terminal, if the mouse is not available, the user "
"can choose an alternative using the keyboard motion keys---@kbd{C-n}, "
"@kbd{C-p}, or up- and down-arrow keys."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3759
#, no-wrap
msgid "x-popup-menu position menu"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3762
msgid ""
"This function displays a pop-up menu and returns an indication of what "
"selection the user makes."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3767
msgid ""
"The argument @var{position} specifies where on the screen to put the top "
"left corner of the menu.  It can be either a mouse button event (which says "
"to put the menu where the user actuated the button) or a list of this form:"
msgstr ""

#. type: example
#: original_texis/frames.texi:3770
#, no-wrap
msgid "((@var{xoffset} @var{yoffset}) @var{window})\n"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3776
msgid ""
"where @var{xoffset} and @var{yoffset} are coordinates, measured in pixels, "
"counting from the top left corner of @var{window}.  @var{window} may be a "
"window or a frame."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3783
msgid ""
"If @var{position} is @code{t}, it means to use the current mouse position "
"(or the top-left corner of the frame if the mouse is not available on a text "
"terminal).  If @var{position} is @code{nil}, it means to precompute the key "
"binding equivalents for the keymaps specified in @var{menu}, without "
"actually displaying or popping up the menu."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3794
msgid ""
"The argument @var{menu} says what to display in the menu.  It can be a "
"keymap or a list of keymaps (@pxref{Menu Keymaps}).  In this case, the "
"return value is the list of events corresponding to the user's choice.  This "
"list has more than one element if the choice occurred in a submenu.  (Note "
"that @code{x-popup-menu} does not actually execute the command bound to that "
"sequence of events.)  On text terminals and toolkits that support menu "
"titles, the title is taken from the prompt string of @var{menu} if "
"@var{menu} is a keymap, or from the prompt string of the first keymap in "
"@var{menu} if it is a list of keymaps (@pxref{Defining Menus})."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3796
msgid "Alternatively, @var{menu} can have the following form:"
msgstr ""

#. type: example
#: original_texis/frames.texi:3799
#, no-wrap
msgid "(@var{title} @var{pane1} @var{pane2}...)\n"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3803
msgid "where each pane is a list of form"
msgstr ""

#. type: example
#: original_texis/frames.texi:3806
#, no-wrap
msgid "(@var{title} @var{item1} @var{item2}...)\n"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3814
msgid ""
"Each @var{item} should be a cons cell, @code{(@var{line} . @var{value})}, "
"where @var{line} is a string and @var{value} is the value to return if that "
"@var{line} is chosen.  Unlike in a menu keymap, a @code{nil} @var{value} "
"does not make the menu item non-selectable.  Alternatively, each @var{item} "
"can be a string rather than a cons cell; this makes a non-selectable menu "
"item."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3821
msgid ""
"If the user gets rid of the menu without making a valid choice, for instance "
"by clicking the mouse away from a valid choice or by typing @kbd{C-g}, then "
"this normally results in a quit and @code{x-popup-menu} does not return.  "
"But if @var{position} is a mouse button event (indicating that the user "
"invoked the menu with the mouse) then no quit occurs and @code{x-popup-menu} "
"returns @code{nil}."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3830
msgid ""
"@strong{Usage note:} Don't use @code{x-popup-menu} to display a menu if you "
"could do the job with a prefix key defined with a menu keymap.  If you use a "
"menu keymap to implement a menu, @kbd{C-h c} and @kbd{C-h a} can see the "
"individual items in that menu and provide help for them.  If instead you "
"implement the menu by defining a command that calls @code{x-popup-menu}, the "
"help facilities cannot know what happens inside that command, so they cannot "
"give any help for the menu's items."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3838
msgid ""
"The menu bar mechanism, which lets you switch between submenus by moving the "
"mouse, cannot look within the definition of a command to see that it calls "
"@code{x-popup-menu}.  Therefore, if you try to implement a submenu using "
"@code{x-popup-menu}, it cannot work with the menu bar in an integrated "
"fashion.  This is why all menu bar submenus are implemented with menu "
"keymaps within the parent menu, and never with @code{x-popup-menu}.  "
"@xref{Menu Bar}."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3843
msgid ""
"If you want a menu bar submenu to have contents that vary, you should still "
"use a menu keymap to implement it.  To make the contents vary, add a hook "
"function to @code{menu-bar-update-hook} to update the contents of the menu "
"keymap as necessary."
msgstr ""

#. type: defvar
#: original_texis/frames.texi:3844
#, no-wrap
msgid "x-pre-popup-menu-hook"
msgstr ""

#. type: defvar
#: original_texis/frames.texi:3849
msgid ""
"A normal hook run immediately before a pop-up menu is displayed, either "
"directly by calling @code{x-popup-menu}, or through a menu keymap.  It won't "
"be called if @code{x-popup-menu} returns for some other reason without "
"displaying a pop-up menu."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:3853
#, no-wrap
msgid "dialog boxes"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3863
msgid ""
"A dialog box is a variant of a pop-up menu---it looks a little different, it "
"always appears in the center of a frame, and it has just one level and one "
"or more buttons.  The main use of dialog boxes is for asking questions that "
"the user can answer with ``yes'', ``no'', and a few other alternatives.  "
"With a single button, they can also force the user to acknowledge important "
"information.  The functions @code{y-or-n-p} and @code{yes-or-no-p} use "
"dialog boxes instead of the keyboard, when called from commands invoked by "
"mouse clicks."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3864
#, no-wrap
msgid "x-popup-dialog position contents &optional header"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3868
msgid ""
"This function displays a pop-up dialog box and returns an indication of what "
"selection the user makes.  The argument @var{contents} specifies the "
"alternatives to offer; it has this format:"
msgstr ""

#. type: example
#: original_texis/frames.texi:3871
#, no-wrap
msgid "(@var{title} (@var{string} . @var{value})@dots{})\n"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3876
msgid ""
"which looks like the list that specifies a single pane for "
"@code{x-popup-menu}."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3878
msgid "The return value is @var{value} from the chosen alternative."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3882
msgid ""
"As for @code{x-popup-menu}, an element of the list may be just a string "
"instead of a cons cell @code{(@var{string} . @var{value})}.  That makes a "
"box that cannot be selected."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3888
msgid ""
"If @code{nil} appears in the list, it separates the left-hand items from the "
"right-hand items; items that precede the @code{nil} appear on the left, and "
"items that follow the @code{nil} appear on the right.  If you don't include "
"a @code{nil} in the list, then approximately half the items appear on each "
"side."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3893
msgid ""
"Dialog boxes always appear in the center of a frame; the argument "
"@var{position} specifies which frame.  The possible values are as in "
"@code{x-popup-menu}, but the precise coordinates or the individual window "
"don't matter; only the frame matters."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3898
msgid ""
"If @var{header} is non-@code{nil}, the frame title for the box is "
"@samp{Information}, otherwise it is @samp{Question}.  The former is used for "
"@code{message-box} (@pxref{message-box}).  (On text terminals, the box title "
"is not displayed.)"
msgstr ""

#. type: defun
#: original_texis/frames.texi:3902
msgid ""
"In some configurations, Emacs cannot display a real dialog box; so instead "
"it displays the same items in a pop-up menu in the center of the frame."
msgstr ""

#. type: defun
#: original_texis/frames.texi:3906
msgid ""
"If the user gets rid of the dialog box without making a valid choice, for "
"instance using the window manager, then this produces a quit and "
"@code{x-popup-dialog} does not return."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:3910
#, no-wrap
msgid "pointer shape"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:3911
#, no-wrap
msgid "mouse pointer shape"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3918
msgid ""
"You can specify the mouse pointer style for particular text or images using "
"the @code{pointer} text property, and for images with the @code{:pointer} "
"and @code{:map} image properties.  The values you can use in these "
"properties are in the table below.  The actual shapes may vary between "
"systems; the descriptions are examples."
msgstr ""

#. type: item
#: original_texis/frames.texi:3920
#, no-wrap
msgid "text"
msgstr ""

#. type: table
#: original_texis/frames.texi:3923
msgid "The usual mouse pointer style used over text (an ``I''-like shape)."
msgstr ""

#. type: item
#: original_texis/frames.texi:3924
#, no-wrap
msgid "arrow"
msgstr ""

#. type: itemx
#: original_texis/frames.texi:3925
#, no-wrap
msgid "vdrag"
msgstr ""

#. type: itemx
#: original_texis/frames.texi:3926
#, no-wrap
msgid "modeline"
msgstr ""

#. type: table
#: original_texis/frames.texi:3928
msgid "An arrow that points north-west."
msgstr ""

#. type: item
#: original_texis/frames.texi:3929
#, no-wrap
msgid "hand"
msgstr ""

#. type: table
#: original_texis/frames.texi:3931
msgid "A hand that points upwards."
msgstr ""

#. type: item
#: original_texis/frames.texi:3932
#, no-wrap
msgid "hdrag"
msgstr ""

#. type: table
#: original_texis/frames.texi:3934
msgid "A right-left arrow."
msgstr ""

#. type: item
#: original_texis/frames.texi:3935
#, no-wrap
msgid "nhdrag"
msgstr ""

#. type: table
#: original_texis/frames.texi:3937
msgid "An up-down arrow."
msgstr ""

#. type: item
#: original_texis/frames.texi:3938
#, no-wrap
msgid "hourglass"
msgstr ""

#. type: table
#: original_texis/frames.texi:3940
msgid "A rotating ring."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3946
msgid ""
"Over void parts of the window (parts that do not correspond to any of the "
"buffer contents), the mouse pointer usually uses the @code{arrow} style, but "
"you can specify a different style (one of those above) by setting "
"@code{void-text-area-pointer}."
msgstr ""

#. type: defopt
#: original_texis/frames.texi:3947
#, no-wrap
msgid "void-text-area-pointer"
msgstr ""

#. type: defopt
#: original_texis/frames.texi:3952
msgid ""
"This variable specifies the mouse pointer style for void text areas.  These "
"include the areas after the end of a line or below the last line in the "
"buffer.  The default is to use the @code{arrow} (non-text)  pointer style."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3957
msgid ""
"When using some window systems, you can specify what the @code{text} pointer "
"style really looks like by setting the variable @code{x-pointer-shape}."
msgstr ""

#. type: defvar
#: original_texis/frames.texi:3958
#, no-wrap
msgid "x-pointer-shape"
msgstr ""

#. type: defvar
#: original_texis/frames.texi:3961
msgid ""
"This variable specifies the pointer shape to use ordinarily in the Emacs "
"frame, for the @code{text} pointer style."
msgstr ""

#. type: defvar
#: original_texis/frames.texi:3963
#, no-wrap
msgid "x-sensitive-text-pointer-shape"
msgstr ""

#. type: defvar
#: original_texis/frames.texi:3966
msgid ""
"This variable specifies the pointer shape to use when the mouse is over "
"mouse-sensitive text."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3972
msgid ""
"These variables affect newly created frames.  They do not normally affect "
"existing frames; however, if you set the mouse color of a frame, that also "
"installs the current value of those two variables.  @xref{Font and Color "
"Parameters}."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3976
msgid ""
"The values you can use, to specify either of these pointer shapes, are "
"defined in the file @file{lisp/term/x-win.el}.  Use @kbd{M-x apropos "
"@key{RET} x-pointer @key{RET}} to see a list of them."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:3979
#, no-wrap
msgid "selection (for window systems)"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:3980
#, no-wrap
msgid "clipboard"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:3981
#, no-wrap
msgid "primary selection"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:3982
#, no-wrap
msgid "secondary selection"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:3993
msgid ""
"In window systems, such as X, data can be transferred between different "
"applications by means of @dfn{selections}.  X defines an arbitrary number of "
"@dfn{selection types}, each of which can store its own data; however, only "
"three are commonly used: the @dfn{clipboard}, @dfn{primary selection}, and "
"@dfn{secondary selection}.  Other window systems support only the "
"clipboard.  @xref{Cut and Paste,, Cut and Paste, emacs, The GNU Emacs "
"Manual}, for Emacs commands that make use of these selections.  This section "
"documents the low-level functions for reading and setting window-system "
"selections."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:3994
#, no-wrap
msgid "Command gui-set-selection type data"
msgstr ""

#. type: deffn
#: original_texis/frames.texi:3997
msgid ""
"This function sets a window-system selection.  It takes two arguments: a "
"selection type @var{type}, and the value to assign to it, @var{data}."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:4002
msgid ""
"@var{type} should be a symbol; it is usually one of @code{PRIMARY}, "
"@code{SECONDARY} or @code{CLIPBOARD}.  These are symbols with upper-case "
"names, in accord with X Window System conventions.  If @var{type} is "
"@code{nil}, that stands for @code{PRIMARY}."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:4009
msgid ""
"If @var{data} is @code{nil}, it means to clear out the selection.  "
"Otherwise, @var{data} may be a string, a symbol, an integer, an overlay, or "
"a cons of two markers pointing to the same buffer.  An overlay or a pair of "
"markers stands for text in the overlay or between the markers.  The argument "
"@var{data} may also be a vector of valid non-vector selection values."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:4016
msgid ""
"If @var{data} is a string, then its text properties can specify values used "
"for individual data types.  For example, if @var{data} has a property named "
"@code{text/uri-list}, then a call to @code{gui-get-selection} with the data "
"type @code{text/uri-list} will result in the value of that property being "
"used instead of @var{data} itself."
msgstr ""

#. type: deffn
#: original_texis/frames.texi:4018
msgid "This function returns @var{data}."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4020
#, no-wrap
msgid "gui-get-selection &optional type data-type"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4025
msgid ""
"This function accesses selections set up by Emacs or by other programs.  It "
"takes two optional arguments, @var{type} and @var{data-type}.  The default "
"for @var{type}, the selection type, is @code{PRIMARY}."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4037
msgid ""
"The @var{data-type} argument specifies the form of data conversion to use, "
"to convert the raw data obtained from another program into Lisp data.  "
"Meaningful values include @code{TEXT}, @code{STRING}, @code{UTF8_STRING}, "
"@code{TARGETS}, @code{LENGTH}, @code{DELETE}, @code{FILE_NAME}, "
"@code{CHARACTER_POSITION}, @code{NAME}, @code{LINE_NUMBER}, "
"@code{COLUMN_NUMBER}, @code{OWNER_OS}, @code{HOST_NAME}, @code{USER}, "
"@code{CLASS}, @code{ATOM}, and @code{INTEGER}.  (These are symbols with "
"upper-case names in accord with X conventions.)  The default for "
"@var{data-type} is @code{STRING}.  Window systems other than X usually "
"support only a small subset of these types, in addition to @code{STRING}."
msgstr ""

#. type: defopt
#: original_texis/frames.texi:4039
#, no-wrap
msgid "selection-coding-system"
msgstr ""

#. type: defopt
#: original_texis/frames.texi:4044
msgid ""
"This variable specifies the coding system to use when reading and writing "
"selections or the clipboard.  @xref{Coding Systems}.  The default is "
"@code{compound-text-with-extensions}, which converts to the text "
"representation that X11 normally uses."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:4046
#, no-wrap
msgid "clipboard support (for MS-Windows)"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:4052
msgid ""
"When Emacs runs on MS-Windows, it does not implement X selections in "
"general, but it does support the clipboard.  @code{gui-get-selection} and "
"@code{gui-set-selection} on MS-Windows support the text data type only; if "
"the clipboard holds other types of data, Emacs treats the clipboard as "
"empty.  The supported data type is @code{STRING}."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:4057
msgid ""
"For backward compatibility, there are obsolete aliases "
"@code{x-get-selection} and @code{x-set-selection}, which were the names of "
"@code{gui-get-selection} and @code{gui-set-selection} before Emacs 25.1."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:4066
msgid ""
"If you choose, for instance, ``Copy Image'' in a web browser, that image is "
"put onto the clipboard, and Emacs can access it via "
"@code{gui-get-selection}.  But in general, inserting image data into an "
"arbitrary buffer isn't very useful---you can't really do much with it by "
"default."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:4069
msgid ""
"So Emacs has a system to let modes register handlers for these "
"``complicated'' selections."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4070
#, no-wrap
msgid "yank-media-handler types handler"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4073
msgid ""
"@var{types} can be a @acronym{MIME} media type symbol, a regexp to match "
"these, or a list of these symbols and regexps.  For instance:"
msgstr ""

#. type: example
#: original_texis/frames.texi:4077
#, no-wrap
msgid ""
"(yank-media-handler 'text/html #'my-html-handler)\n"
"(yank-media-handler \"image/.*\" #'my-image-handler)\n"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4080
msgid "A mode can register as many handlers as required."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4085
msgid ""
"The @var{handler} function is called with two parameters: The @acronym{MIME} "
"media type symbol and the data (as a string).  The handler should then "
"insert the object into the buffer, or save it, or do whatever is appropriate "
"for the mode."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:4092
msgid ""
"The @code{yank-media} command will consult the registered handlers in the "
"current buffer, compare that with the available media types on the "
"clipboard, and then pass on the matching selection to the handler (if any).  "
"If there's more than one matching selection, the user is queried first."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:4098
msgid ""
"The @code{yank-media-types} command can be used to explore the "
"clipboard/primary selection.  It lists all the media types that are "
"currently available, and can be handy when creating handlers---to see what "
"data is actually available.  Some applications put a surprising amount of "
"different data types on the clipboard."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:4101
#, no-wrap
msgid "drag and drop"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:4114
msgid ""
"When the user drops something from another application over Emacs, Emacs "
"will try to insert any text and open any URL that was dropped.  If text was "
"dropped, then it will always be inserted at the location of the mouse "
"pointer where the drop happened, or saved in the kill ring if insertion "
"failed, which could happen if the buffer was read-only.  If a URL was "
"dropped instead, then Emacs will first try to call an appropriate handler "
"function by matching the URL against regexps defined in the variable "
"@code{dnd-protocol-alist}, and then against those defined in the variables "
"@code{browse-url-handlers} and @code{browse-url-default-handlers}.  Should "
"no suitable handler be located, Emacs will fall back to inserting the URL as "
"plain text."
msgstr ""

#. type: defvar
#: original_texis/frames.texi:4115
#, no-wrap
msgid "dnd-protocol-alist"
msgstr ""

#. type: defvar
#: original_texis/frames.texi:4123
msgid ""
"This variable is a list of cons cells of the form @w{@code{(@var{pattern} "
". @var{action})}}.  @var{pattern} is a regexp that URLs are matched against "
"after being dropped.  @var{action} is a function that is called with two "
"arguments, should a URL being dropped match @var{pattern}: the URL being "
"dropped, and the action being performed for the drop, which is one of the "
"symbols @code{copy}, @code{move}, @code{link}, @code{private} or @code{ask}."
msgstr ""

#. type: defvar
#: original_texis/frames.texi:4130
msgid ""
"If @var{action} is @var{private}, then it means the program that initiated "
"the drop wants Emacs to perform an unspecified action with the URL; a "
"reasonable action to perform in that case is to open the URL or copy its "
"contents into the current buffer.  Otherwise, @var{action} has the same "
"meaning as the @var{action} argument to @code{dnd-begin-file-drag}."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:4132
#, no-wrap
msgid "drag and drop, X"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:4133
#, no-wrap
msgid "drag and drop, other formats"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:4138
msgid ""
"Emacs implements receiving text and URLs individually for each window "
"system, and does not by default support receiving other kinds of data as "
"drops.  To support receiving other kinds of data, use the X-specific "
"interface described below."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:4139
#, no-wrap
msgid "x-dnd-test-function"
msgstr ""

#. type: vindex
#: original_texis/frames.texi:4140
#, no-wrap
msgid "x-dnd-known-types"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:4151
msgid ""
"When a user drags something from another application over Emacs under the X "
"Window System, that other application expects Emacs to tell it if Emacs "
"understands the data being dragged.  The function in the variable "
"@code{x-dnd-test-function} is called by Emacs to determine what to reply to "
"any such inquiry.  The default value is @code{x-dnd-default-test-function}, "
"which accepts drops if the type of the data to be dropped is present in "
"@code{x-dnd-known-types}.  Changing the variables @code{x-dnd-test-function} "
"and @code{x-dnd-known-types} can make Emacs accept or reject drops based on "
"some other criteria."
msgstr ""

#. type: vindex
#: original_texis/frames.texi:4152
#, no-wrap
msgid "x-dnd-types-alist"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:4157
msgid ""
"If you want to change the way Emacs receives drops of different data types, "
"or you want to enable it to understand a new type, change the variable "
"@code{x-dnd-types-alist}.  Doing so correctly requires detailed knowledge of "
"what data types other applications use for drag and drop."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:4165
msgid ""
"These data types are typically implemented as special data types that can be "
"obtained from an X selection provided by the other application.  In most "
"cases, they are either the same data types that are typically accepted by "
"@code{gui-set-selection}, or MIME types, depending on the specific "
"drag-and-drop protocol being used.  For example, the data type used for "
"plain text may be either @code{\"STRING\"} or @code{\"text/plain\"}."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:4166
#, no-wrap
msgid "XDS"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:4167
#, no-wrap
msgid "direct save protocol"
msgstr ""

#. type: vindex
#: original_texis/frames.texi:4168
#, no-wrap
msgid "x-dnd-direct-save-function"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:4179
msgid ""
"When Emacs runs on X window system, it supports the X Direct Save "
"(@acronym{XDS}) protocol, which allows users to save a file by dragging and "
"dropping it onto an Emacs window, such as a Dired window.  To comply with "
"the unique requirements of @acronym{XDS}, these drag-and-drop requests are "
"processed specially: instead of being handled according to "
"@code{x-dnd-types-alist}, they are handled by the @dfn{direct-save function} "
"that is the value of the variable @code{x-dnd-direct-save-function}.  The "
"value should be a function of two arguments, @var{need-name} and "
"@var{filename}.  The @acronym{XDS} protocol uses a two-step procedure for "
"dragging files:"
msgstr ""

#. type: enumerate
#: original_texis/frames.texi:4193
msgid ""
"The application from which the file is dragged asks Emacs to provide the "
"full file name under which to save the file.  For this purpose, the "
"direct-save function is called with its first argument @var{need-name} "
"non-@code{nil}, and the second argument @var{filename} set to the basename "
"of the file to be saved.  It should return the fully-expanded absolute file "
"name under which to save the file.  For example, if a file is dragged to a "
"Dired window, the natural directory for the file is the directory of the "
"file shown at location of the drop.  If saving the file is not possible for "
"some reason, the function should return @code{nil}, which will cancel the "
"drag-and-drop operation."
msgstr ""

#. type: enumerate
#: original_texis/frames.texi:4204
msgid ""
"The application from which the file is dragged saves the file under the name "
"returned by the first call to the direct-save function.  If it succeeds in "
"saving the file, the direct-save function is called again, this time with "
"the first argument @var{need-name} set to @code{nil} and the second argument "
"@var{filename} set to the full absolute name of the saved file.  The "
"function is then expected to do whatever is needed given the fact that file "
"was saved.  For example, Dired should update the directory on display by "
"showing the new file there."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:4208
msgid ""
"The default value of @code{x-dnd-direct-save-function} is "
"@code{x-dnd-save-direct}."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4209
#, no-wrap
msgid "x-dnd-save-direct need-name filename"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4215
msgid ""
"When called with the @var{need-name} argument non-@code{nil}, this function "
"prompts the user for the absolute file name under which it should be saved.  "
"If the specified file already exists, it additionally asks the user whether "
"to overwrite it, and returns the absolute file name only if the user "
"confirms the overwriting."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4220
msgid ""
"When called with the @var{need-name} argument @code{nil}, it reverts the "
"Dired listing if the current buffer is in Dired mode or one of its "
"descendants, and otherwise visits the file by calling @code{find-file} "
"(@pxref{Visiting Functions})."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4222
#, no-wrap
msgid "x-dnd-save-direct-immediately need-name filename"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4230
msgid ""
"This function works like @code{x-dnd-save-direct}, but when called with its "
"@var{need-name} argument non-@code{nil}, it doesn't prompt the user for the "
"full name of the file to be saved; instead, it returns its argument "
"@var{filename} expanded against the current buffer's default directory "
"(@pxref{File Name Expansion}).  (It still asks for confirmation if a file by "
"that name already exists in the default directory.)"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:4232
#, no-wrap
msgid "initiating drag-and-drop"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:4235
msgid ""
"On capable window systems, Emacs also supports dragging contents from its "
"frames to windows of other applications."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:4236
#, no-wrap
msgid "drop target, in drag-and-drop operations"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4237
#, no-wrap
msgid "dnd-begin-text-drag text &optional frame action allow-same-frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4243
msgid ""
"This function begins dragging text from @var{frame} to another program "
"(known as the @dfn{drop target}), and returns the result of drag-and-drop "
"operation when the text is dropped or the drag-and-drop operation is "
"canceled.  @var{text} is the text that will be inserted by the drop target."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4249
msgid ""
"@var{action} must be one of the symbols @code{copy} or @code{move}, where "
"@code{copy} means that @var{text} should be inserted by the drop target, and "
"@code{move} means the same as @code{copy}, but in addition the caller may "
"have to delete @var{text} from its source as explained below."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4256
msgid ""
"@var{frame} is the frame where the mouse is currently held down, or "
"@code{nil}, which means to use the selected frame.  This function may return "
"immediately if no mouse buttons are held down, so it should be only called "
"immediately after a @code{down-mouse-1} or similar event (@pxref{Mouse "
"Events}), with @var{frame} set to the frame where that event was generated "
"(@pxref{Click Events})."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4259
msgid ""
"@var{allow-same-frame} specifies whether or not drops on top of @var{frame} "
"itself are to be ignored."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4263
msgid ""
"The return value specifies the action that the drop target actually "
"performed, and optionally what the caller should do.  It can be one of the "
"following symbols:"
msgstr ""

#. type: item
#: original_texis/frames.texi:4265 original_texis/frames.texi:4303
#, no-wrap
msgid "copy"
msgstr ""

#. type: table
#: original_texis/frames.texi:4267
msgid "The drop target inserted the dropped text."
msgstr ""

#. type: item
#: original_texis/frames.texi:4268 original_texis/frames.texi:4306
#, no-wrap
msgid "move"
msgstr ""

#. type: table
#: original_texis/frames.texi:4272
msgid ""
"The drop target inserted the dropped text, but in addition the caller should "
"delete @var{text} from wherever it originated, such as its buffer."
msgstr ""

#. type: item
#: original_texis/frames.texi:4273 original_texis/frames.texi:4313
#, no-wrap
msgid "private"
msgstr ""

#. type: table
#: original_texis/frames.texi:4275 original_texis/frames.texi:4315
msgid "The drop target performed some other unspecified action."
msgstr ""

#. type: table
#: original_texis/frames.texi:4278 original_texis/frames.texi:4318
msgid "The drag-and-drop operation was canceled."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4282
#, no-wrap
msgid "dnd-begin-file-drag file &optional frame action allow-same-frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4286
msgid ""
"This function begins dragging @var{file} from @var{frame} to another "
"program, and returns the result of the drag-and-drop operation when the file "
"is dropped or the drag-and-drop operation is canceled."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4288
msgid "If @var{file} is a remote file, then a temporary copy will be made."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4295
msgid ""
"@var{action} must be one of the symbols @code{copy}, @code{move} or "
"@code{link}, where @code{copy} means that @var{file} should be opened or "
"copied by the drop target, @code{move} means the drop target should move the "
"file to another location, and @code{link} means the drop target should "
"create a symbolic link to @var{file}.  It is an error to specify @code{link} "
"as the action if @var{file} is a remote file."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4298
msgid ""
"@var{frame} and @var{allow-same-frame} have the same meaning as in "
"@code{dnd-begin-text-drag}."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4301
msgid ""
"The return value is the action that the drop target actually performed, "
"which can be one of the following symbols:"
msgstr ""

#. type: table
#: original_texis/frames.texi:4305
msgid "The drop target opened or copied @var{file} to a different location."
msgstr ""

#. type: table
#: original_texis/frames.texi:4308
msgid "The drop target moved @var{file} to a different location."
msgstr ""

#. type: item
#: original_texis/frames.texi:4309
#, no-wrap
msgid "link"
msgstr ""

#. type: table
#: original_texis/frames.texi:4312
msgid ""
"The drop target (usually a file manager) created a symbolic link to "
"@var{file}."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4322
#, no-wrap
msgid "dnd-begin-drag-files files &optional frame action allow-same-frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4326
msgid ""
"This function is like @code{dnd-begin-file-drag}, except that @var{files} is "
"a list of files.  If the drop target doesn't support dropping multiple "
"files, then the first file will be used instead."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4328
#, no-wrap
msgid "dnd-direct-save file name &optional frame allow-same-frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4333
msgid ""
"This function is similar to @code{dnd-begin-file-drag} (with the default "
"action of copy), but instead of specifying the action you specify the name "
"of the copy created by the target program in @code{name}."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:4335
#, no-wrap
msgid "initiating drag-and-drop, low-level"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:4342
msgid ""
"The high-level interfaces described above are implemented on top of a "
"lower-level primitive.  If you need to drag content other than files or "
"text, use the low-level interface @code{x-begin-drag} instead.  However, "
"using it will require detailed knowledge of the data types and actions used "
"by the programs to transfer content via drag-and-drop on each platform you "
"want to support."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4343
#, no-wrap
msgid ""
"x-begin-drag targets &optional action frame return-frame allow-current-frame "
"follow-tooltip"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4352
msgid ""
"This function begins a drag from @var{frame}, and returns when the "
"drag-and-drop operation ends, either because the drop was successful, or "
"because the drop was rejected.  The drop occurs when all mouse buttons are "
"released on top of an X window other than @var{frame} (the @dfn{drop "
"target}), or any X window if @var{allow-current-frame} is non-@code{nil}.  "
"If no mouse buttons are held down when the drag-and-drop operation begins, "
"this function may immediately return @code{nil}."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4357
msgid ""
"@var{targets} is a list of strings describing selection targets, much like "
"the @var{data-type} argument to @code{gui-get-selection}, that the drop "
"target can request from Emacs (@pxref{Window System Selections})."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4364
msgid ""
"@var{action} is a symbol describing the action recommended to the target.  "
"It can either be @code{XdndActionCopy}, which means to copy the contents of "
"the selection @code{XdndSelection} to the drop target; or "
"@code{XdndActionMove}, which means copy as with @code{XdndActionCopy}, and "
"in addition the caller should delete whatever was stored in that selection "
"after copying it."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4369
msgid ""
"@var{action} may also be an alist which associates between symbols "
"describing the available actions, and strings that the drop target is "
"expected to present to the user to choose between the available actions."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4379
msgid ""
"If @var{return-frame} is non-@code{nil} and the mouse moves over an Emacs "
"frame after first moving out of @var{frame}, then the frame to which the "
"mouse moves will be returned immediately.  If @var{return-frame} is the "
"symbol @code{now}, then any frame underneath the mouse pointer will be "
"returned without waiting for the mouse to first move out of @var{frame}.  "
"@var{return-frame} is useful when you want to treat dragging content from "
"one frame to another specially, while also being able to drag content to "
"other programs, but it is not guaranteed to work on all systems and with all "
"window managers."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4385
msgid ""
"If @var{follow-tooltip} is non-@code{nil}, the position of any tooltip (such "
"as one shown by @code{tooltip-show}) will follow the location of the mouse "
"pointer whenever it moves during the drag-and-drop operation.  The tooltip "
"will be hidden once all mouse buttons are released."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4394
msgid ""
"If the drop was rejected or no drop target was found, this function returns "
"@code{nil}.  Otherwise, it returns a symbol describing the action the target "
"chose to perform, which can differ from @var{action} if that isn't supported "
"by the drop target.  @code{XdndActionPrivate} is also a valid return value "
"in addition to @code{XdndActionCopy} and @code{XdndActionMove}; it means "
"that the drop target chose to perform an unspecified action, and no further "
"processing is required by the caller."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4398
msgid ""
"The caller must cooperate with the target to fully perform the action chosen "
"by the target.  For example, callers should delete the buffer text that was "
"dragged if this function returns @code{XdndActionMove}."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:4400
#, no-wrap
msgid "drag and drop protocols, X"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:4407
msgid ""
"On X Windows, several different drag-and-drop protocols are supported by "
"@code{x-begin-drag}.  When dragging content that is known to not be "
"supported by a specific drag-and-drop protocol, it might be desirable to "
"turn that protocol off, by changing the values of the following variables:"
msgstr ""

#. type: defvar
#: original_texis/frames.texi:4408
#, no-wrap
msgid "x-dnd-disable-motif-protocol"
msgstr ""

#. type: defvar
#: original_texis/frames.texi:4412
msgid ""
"When this is non-@code{nil}, the Motif drag and drop protocols are disabled, "
"and dropping onto programs that only understand them will not work."
msgstr ""

#. type: defvar
#: original_texis/frames.texi:4414
#, no-wrap
msgid "x-dnd-use-offix-drop"
msgstr ""

#. type: defvar
#: original_texis/frames.texi:4420
msgid ""
"When this is @code{nil}, the OffiX (old KDE) drag and drop protocol is "
"disabled.  When this is the symbol @code{files}, the OffiX protocol will "
"only be used if @code{\"FILE_NAME\"} is one of the targets given to "
"@code{x-begin-drag}.  Any other value means to use the OffiX protocol to "
"drop all supported content."
msgstr ""

#. type: defvar
#: original_texis/frames.texi:4422
#, no-wrap
msgid "x-dnd-use-unsupported-drop"
msgstr ""

#. type: defvar
#: original_texis/frames.texi:4428
msgid ""
"When one of the @code{\"STRING\"}, @code{\"UTF8_STRING\"}, "
"@code{\"COMPOUND_TEXT\"} or @code{\"TEXT\"} targets is present in the list "
"given to @code{x-begin-drag}, Emacs will try to use synthesized mouse events "
"and the primary selection to insert the text if the drop target doesn't "
"support any drag-and-drop protocol at all."
msgstr ""

#. type: defvar
#: original_texis/frames.texi:4432
msgid ""
"A side effect is that Emacs will become the owner of the primary selection "
"upon such a drop.  If that is not desired, then the drop emulation can be "
"disabled by setting this variable to @code{nil}."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:4437
#, no-wrap
msgid "color names"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:4438
#, no-wrap
msgid "specify color"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:4439
#, no-wrap
msgid "numerical RGB color specification"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:4452
msgid ""
"A color name is text (usually in a string) that specifies a color.  Symbolic "
"names such as @samp{black}, @samp{white}, @samp{red}, etc., are allowed; use "
"@kbd{M-x list-colors-display} to see a list of defined names.  You can also "
"specify colors numerically in forms such as @samp{#@var{rgb}} and "
"@samp{RGB:@var{r}/@var{g}/@var{b}}, where @var{r} specifies the red level, "
"@var{g} specifies the green level, and @var{b} specifies the blue level.  "
"You can use either one, two, three, or four hex digits for @var{r}; then you "
"must use the same number of hex digits for all @var{g} and @var{b} as well, "
"making either 3, 6, 9 or 12 hex digits in all.  (See the documentation of "
"the X Window System for more details about numerical RGB specification of "
"colors.)"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:4457
msgid ""
"These functions provide a way to determine which color names are valid, and "
"what they look like.  In some cases, the value depends on the @dfn{selected "
"frame}, as described below; see @ref{Input Focus}, for the meaning of the "
"term ``selected frame''."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:4460
msgid ""
"To read user input of color names with completion, use @code{read-color} "
"(@pxref{High-Level Completion, read-color})."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4461
#, no-wrap
msgid "color-defined-p color &optional frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4466
msgid ""
"This function reports whether a color name is meaningful.  It returns "
"@code{t} if so; otherwise, @code{nil}.  The argument @var{frame} says which "
"frame's display to ask about; if @var{frame} is omitted or @code{nil}, the "
"selected frame is used."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4472
msgid ""
"Note that this does not tell you whether the display you are using really "
"supports that color.  When using X, you can ask for any defined color on any "
"kind of display, and you will get some result---typically, the closest it "
"can do.  To determine whether a frame can really display a certain color, "
"use @code{color-supported-p} (see below)."
msgstr ""

#. type: findex
#: original_texis/frames.texi:4473
#, no-wrap
msgid "x-color-defined-p"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4476
msgid ""
"This function used to be called @code{x-color-defined-p}, and that name is "
"still supported as an alias."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4478
#, no-wrap
msgid "defined-colors &optional frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4482
msgid ""
"This function returns a list of the color names that are defined and "
"supported on frame @var{frame} (default, the selected frame).  If "
"@var{frame} does not support colors, the value is @code{nil}."
msgstr ""

#. type: findex
#: original_texis/frames.texi:4483
#, no-wrap
msgid "x-defined-colors"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4486
msgid ""
"This function used to be called @code{x-defined-colors}, and that name is "
"still supported as an alias."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4488
#, no-wrap
msgid "color-supported-p color &optional frame background-p"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4492
msgid ""
"This returns @code{t} if @var{frame} can really display the color "
"@var{color} (or at least something close to it).  If @var{frame} is omitted "
"or @code{nil}, the question applies to the selected frame."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4497
msgid ""
"Some terminals support a different set of colors for foreground and "
"background.  If @var{background-p} is non-@code{nil}, that means you are "
"asking whether @var{color} can be used as a background; otherwise you are "
"asking whether it can be used as a foreground."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4499
msgid "The argument @var{color} must be a valid color name."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4501
#, no-wrap
msgid "color-gray-p color &optional frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4506
msgid ""
"This returns @code{t} if @var{color} is a shade of gray, as defined on "
"@var{frame}'s display.  If @var{frame} is omitted or @code{nil}, the "
"question applies to the selected frame.  If @var{color} is not a valid color "
"name, this function returns @code{nil}."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4508
#, no-wrap
msgid "color-values color &optional frame"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:4509
#, no-wrap
msgid "rgb value"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4517
msgid ""
"This function returns a value that describes what @var{color} should ideally "
"look like on @var{frame}.  If @var{color} is defined, the value is a list of "
"three integers, which give the amount of red, the amount of green, and the "
"amount of blue.  Each integer ranges in principle from 0 to 65535, but some "
"displays may not use the full range.  This three-element list is called the "
"@dfn{rgb values} of the color."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4519
msgid "If @var{color} is not defined, the value is @code{nil}."
msgstr ""

#. type: example
#: original_texis/frames.texi:4531
#, no-wrap
msgid ""
"(color-values \"black\")\n"
"     @result{} (0 0 0)\n"
"(color-values \"white\")\n"
"     @result{} (65535 65535 65535)\n"
"(color-values \"red\")\n"
"     @result{} (65535 0 0)\n"
"(color-values \"pink\")\n"
"     @result{} (65535 49344 52171)\n"
"(color-values \"hungry\")\n"
"     @result{} nil\n"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4537
msgid ""
"The color values are returned for @var{frame}'s display.  If @var{frame} is "
"omitted or @code{nil}, the information is returned for the selected frame's "
"display.  If the frame cannot display colors, the value is @code{nil}."
msgstr ""

#. type: findex
#: original_texis/frames.texi:4538
#, no-wrap
msgid "x-color-values"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4541
msgid ""
"This function used to be called @code{x-color-values}, and that name is "
"still supported as an alias."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4543
#, no-wrap
msgid "color-name-to-rgb color &optional frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4546
msgid ""
"This function does the same as @code{color-values}, but it returns color "
"values as floating-point numbers between 0.0 and 1.0 inclusive."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4548
#, no-wrap
msgid "color-dark-p rgb"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4555
msgid ""
"This function returns non-@code{nil} if the color described by its RGB "
"triplet @var{rgb} is more readable against white background than against "
"dark background.  The argument @var{rgb} should be a list of the form "
"@w{@code{(@var{r} @var{g} @var{b})}}, with each component a floating-point "
"number in the range 0.0 to 1.0 inclusive.  You can use "
"@code{color-name-to-rgb} to convert a color's name to such a list."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:4559
#, no-wrap
msgid "colors on text terminals"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:4567
msgid ""
"Text terminals usually support only a small number of colors, and the "
"computer uses small integers to select colors on the terminal.  This means "
"that the computer cannot reliably tell what the selected color looks like; "
"instead, you have to inform your application which small integers correspond "
"to which colors.  However, Emacs does know the standard set of colors and "
"will try to use them automatically."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:4570
msgid ""
"The functions described in this section control how terminal colors are used "
"by Emacs."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:4573
msgid ""
"Several of these functions use or return @dfn{rgb values}, described in "
"@ref{Color Names}."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:4580
msgid ""
"These functions accept a display (either a frame or the name of a terminal) "
"as an optional argument.  We hope in the future to make Emacs support "
"different colors on different text terminals; then this argument will "
"specify which terminal to operate on (the default being the selected frame's "
"terminal; @pxref{Input Focus}).  At present, though, the @var{frame} "
"argument has no effect."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4581
#, no-wrap
msgid "tty-color-define name number &optional rgb frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4584
msgid ""
"This function associates the color name @var{name} with color number "
"@var{number} on the terminal."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4590
msgid ""
"The optional argument @var{rgb}, if specified, is an rgb value, a list of "
"three numbers that specify what the color actually looks like.  If you do "
"not specify @var{rgb}, then this color cannot be used by "
"@code{tty-color-approximate} to approximate other colors, because Emacs will "
"not know what it looks like."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4592
#, no-wrap
msgid "tty-color-clear &optional frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4594
msgid "This function clears the table of defined colors for a text terminal."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4596
#, no-wrap
msgid "tty-color-alist &optional frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4599
msgid ""
"This function returns an alist recording the known colors supported by a "
"text terminal."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4605
msgid ""
"Each element has the form @code{(@var{name} @var{number} . @var{rgb})} or "
"@code{(@var{name} @var{number})}.  Here, @var{name} is the color name, "
"@var{number} is the number used to specify it to the terminal.  If present, "
"@var{rgb} is a list of three color values (for red, green, and blue) that "
"says what the color actually looks like."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4607
#, no-wrap
msgid "tty-color-approximate rgb &optional frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4612
msgid ""
"This function finds the closest color, among the known colors supported for "
"@var{display}, to that described by the rgb value @var{rgb} (a list of color "
"values).  The return value is an element of @code{tty-color-alist}."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4614
#, no-wrap
msgid "tty-color-translate color &optional frame"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4618
msgid ""
"This function finds the closest color to @var{color} among the known colors "
"supported for @var{display} and returns its index (an integer).  If the name "
"@var{color} is not defined, the value is @code{nil}."
msgstr ""

#. type: section
#: original_texis/frames.texi:4621
#, no-wrap
msgid "X Resources"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:4627
msgid ""
"This section describes some of the functions and variables for querying and "
"using X resources, or their equivalent on your operating system.  @xref{X "
"Resources,, X Resources, emacs, The GNU Emacs Manual}, for more information "
"about X resources."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4628
#, no-wrap
msgid "x-get-resource attribute class &optional component subclass"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4631
msgid ""
"The function @code{x-get-resource} retrieves a resource value from the X "
"Window defaults database."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4637
msgid ""
"Resources are indexed by a combination of a @dfn{key} and a @dfn{class}.  "
"This function searches using a key of the form "
"@samp{@var{instance}.@var{attribute}} (where @var{instance} is the name "
"under which Emacs was invoked), and using @samp{Emacs.@var{class}} as the "
"class."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4643
msgid ""
"The optional arguments @var{component} and @var{subclass} add to the key and "
"the class, respectively.  You must specify both of them or neither.  If you "
"specify them, the key is "
"@samp{@var{instance}.@var{component}.@var{attribute}}, and the class is "
"@samp{Emacs.@var{class}.@var{subclass}}."
msgstr ""

#. type: defvar
#: original_texis/frames.texi:4645
#, no-wrap
msgid "x-resource-class"
msgstr ""

#. type: defvar
#: original_texis/frames.texi:4650
msgid ""
"This variable specifies the application name that @code{x-get-resource} "
"should look up.  The default value is @code{\"Emacs\"}.  You can examine X "
"resources for other application names by binding this variable to some other "
"string, around a call to @code{x-get-resource}."
msgstr ""

#. type: defvar
#: original_texis/frames.texi:4652
#, no-wrap
msgid "x-resource-name"
msgstr ""

#. type: defvar
#: original_texis/frames.texi:4656
msgid ""
"This variable specifies the instance name that @code{x-get-resource} should "
"look up.  The default value is the name Emacs was invoked with, or the value "
"specified with the @samp{-name} or @samp{-rn} switches."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:4659
msgid "To illustrate some of the above, suppose that you have the line:"
msgstr ""

#. type: example
#: original_texis/frames.texi:4662
#, no-wrap
msgid "xterm.vt100.background: yellow\n"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:4667
msgid ""
"in your X resources file (whose name is usually @file{~/.Xdefaults} or "
"@file{~/.Xresources}).  Then:"
msgstr ""

#. type: group
#: original_texis/frames.texi:4673
#, no-wrap
msgid ""
"(let ((x-resource-class \"XTerm\") (x-resource-name \"xterm\"))\n"
"  (x-get-resource \"vt100.background\" \"VT100.Background\"))\n"
"     @result{} \"yellow\"\n"
msgstr ""

#. type: group
#: original_texis/frames.texi:4678
#, no-wrap
msgid ""
"(let ((x-resource-class \"XTerm\") (x-resource-name \"xterm\"))\n"
"  (x-get-resource \"background\" \"VT100\" \"vt100\" \"Background\"))\n"
"     @result{} \"yellow\"\n"
msgstr ""

#. type: defvar
#: original_texis/frames.texi:4681
#, no-wrap
msgid "inhibit-x-resources"
msgstr ""

#. type: defvar
#: original_texis/frames.texi:4685
msgid ""
"If this variable is non-@code{nil}, Emacs does not look up X resources, and "
"X resources do not have any effect when creating new frames."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:4689
#, no-wrap
msgid "display feature testing"
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:4695
msgid ""
"The functions in this section describe the basic capabilities of a "
"particular display.  Lisp programs can use them to adapt their behavior to "
"what the display can do.  For example, a program that ordinarily uses a "
"popup menu could use the minibuffer if popup menus are not supported."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:4700
msgid ""
"The optional argument @var{display} in these functions specifies which "
"display to ask the question about.  It can be a display name, a frame (which "
"designates the display that frame is on), or @code{nil} (which refers to the "
"selected frame's display, @pxref{Input Focus})."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:4703
msgid ""
"@xref{Color Names}, @ref{Text Terminal Colors}, for other functions to "
"obtain information about displays."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4704
#, no-wrap
msgid "display-popup-menus-p &optional display"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4709
msgid ""
"This function returns @code{t} if popup menus are supported on "
"@var{display}, @code{nil} if not.  Support for popup menus requires that the "
"mouse be available, since the menu is popped up by clicking the mouse on "
"some portion of the Emacs display."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4711
#, no-wrap
msgid "display-graphic-p &optional display"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4716
msgid ""
"This function returns @code{t} if @var{display} is a graphic display capable "
"of displaying several frames and several different fonts at once.  This is "
"true for displays that use a window system such as X, and false for text "
"terminals."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4718
#, no-wrap
msgid "display-mouse-p &optional display"
msgstr ""

#. type: cindex
#: original_texis/frames.texi:4719
#, no-wrap
msgid "mouse, availability"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4722
msgid ""
"This function returns @code{t} if @var{display} has a mouse available, "
"@code{nil} if not."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4724
#, no-wrap
msgid "display-color-p &optional display"
msgstr ""

#. type: findex
#: original_texis/frames.texi:4725
#, no-wrap
msgid "x-display-color-p"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4729
msgid ""
"This function returns @code{t} if the screen is a color screen.  It used to "
"be called @code{x-display-color-p}, and that name is still supported as an "
"alias."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4731
#, no-wrap
msgid "display-grayscale-p &optional display"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4734
msgid ""
"This function returns @code{t} if the screen can display shades of gray.  "
"(All color displays can do this.)"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4736
#, no-wrap
msgid "display-supports-face-attributes-p attributes &optional display"
msgstr ""

#. type: anchor{#1}
#: original_texis/frames.texi:4740
msgid "Display Face Attribute Testing"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4740
msgid ""
"This function returns non-@code{nil} if all the face attributes in "
"@var{attributes} are supported (@pxref{Face Attributes})."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4745
msgid ""
"The definition of ``supported'' is somewhat heuristic, but basically means "
"that a face containing all the attributes in @var{attributes}, when merged "
"with the default face for display, can be represented in a way that's"
msgstr ""

#. type: enumerate
#: original_texis/frames.texi:4749
msgid "different in appearance than the default face, and"
msgstr ""

#. type: enumerate
#: original_texis/frames.texi:4752
msgid "close in spirit to what the attributes specify, if not exact."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4760
msgid ""
"Point (2) implies that a @code{:weight black} attribute will be satisfied by "
"any display that can display bold, as will @code{:foreground \"yellow\"} as "
"long as some yellowish color can be displayed, but @code{:slant italic} will "
"@emph{not} be satisfied by the tty display code's automatic substitution of "
"a dim face for italic."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4762
#, no-wrap
msgid "display-selections-p &optional display"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4766
msgid ""
"This function returns @code{t} if @var{display} supports selections.  "
"Windowed displays normally support selections, but they may also be "
"supported in some other cases."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4768
#, no-wrap
msgid "display-images-p &optional display"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4773
msgid ""
"This function returns @code{t} if @var{display} can display images.  "
"Windowed displays ought in principle to handle images, but some systems lack "
"the support for that.  On a display that does not support images, Emacs "
"cannot display a tool bar."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4775
#, no-wrap
msgid "display-screens &optional display"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4777
msgid "This function returns the number of screens associated with the display."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4779
#, no-wrap
msgid "display-pixel-height &optional display"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4782
msgid ""
"This function returns the height of the screen in pixels.  On a character "
"terminal, it gives the height in characters."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4786
msgid ""
"For graphical terminals, note that on multi-monitor setups this refers to "
"the pixel height for all physical monitors associated with @var{display}.  "
"@xref{Multiple Terminals}."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4788
#, no-wrap
msgid "display-pixel-width &optional display"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4791
msgid ""
"This function returns the width of the screen in pixels.  On a character "
"terminal, it gives the width in characters."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4795
msgid ""
"For graphical terminals, note that on multi-monitor setups this refers to "
"the pixel width for all physical monitors associated with @var{display}.  "
"@xref{Multiple Terminals}."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4797
#, no-wrap
msgid "display-mm-height &optional display"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4800
msgid ""
"This function returns the height of the screen in millimeters, or @code{nil} "
"if Emacs cannot get that information."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4804
msgid ""
"For graphical terminals, note that on multi-monitor setups this refers to "
"the height for all physical monitors associated with @var{display}.  "
"@xref{Multiple Terminals}."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4806
#, no-wrap
msgid "display-mm-width &optional display"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4809
msgid ""
"This function returns the width of the screen in millimeters, or @code{nil} "
"if Emacs cannot get that information."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4813
msgid ""
"For graphical terminals, note that on multi-monitor setups this refers to "
"the width for all physical monitors associated with @var{display}.  "
"@xref{Multiple Terminals}."
msgstr ""

#. type: defopt
#: original_texis/frames.texi:4815
#, no-wrap
msgid "display-mm-dimensions-alist"
msgstr ""

#. type: defopt
#: original_texis/frames.texi:4819
msgid ""
"This variable allows the user to specify the dimensions of graphical "
"displays returned by @code{display-mm-height} and @code{display-mm-width} in "
"case the system provides incorrect values."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:4821
#, no-wrap
msgid "backing store"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4822
#, no-wrap
msgid "display-backing-store &optional display"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4827
msgid ""
"This function returns the backing store capability of the display.  Backing "
"store means recording the pixels of windows (and parts of windows) that are "
"not exposed, so that when exposed they can be displayed very quickly."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4831
msgid ""
"Values can be the symbols @code{always}, @code{when-mapped}, or "
"@code{not-useful}.  The function can also return @code{nil} when the "
"question is inapplicable to a certain kind of display."
msgstr ""

#. type: cindex
#: original_texis/frames.texi:4833
#, no-wrap
msgid "SaveUnder feature"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4834
#, no-wrap
msgid "display-save-under &optional display"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4839
msgid ""
"This function returns non-@code{nil} if the display supports the SaveUnder "
"feature.  That feature is used by pop-up windows to save the pixels they "
"obscure, so that they can pop down quickly."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4841
#, no-wrap
msgid "display-planes &optional display"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4845
msgid ""
"This function returns the number of planes the display supports.  This is "
"typically the number of bits per pixel.  For a tty display, it is log to "
"base two of the number of colors supported."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4847
#, no-wrap
msgid "display-visual-class &optional display"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4855
msgid ""
"This function returns the visual class for the screen.  The value is one of "
"the symbols @code{static-gray} (a limited, unchangeable number of grays), "
"@code{gray-scale} (a full range of grays), @code{static-color} (a limited, "
"unchangeable number of colors), @code{pseudo-color} (a limited number of "
"colors), @code{true-color} (a full range of colors), and @code{direct-color} "
"(a full range of colors)."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4857
#, no-wrap
msgid "display-color-cells &optional display"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4859
msgid "This function returns the number of color cells the screen supports."
msgstr ""

#. type: Plain text
#: original_texis/frames.texi:4864
msgid ""
"These functions obtain additional information about the window system in use "
"where Emacs shows the specified @var{display}.  (Their names begin with "
"@code{x-} for historical reasons.)"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4865
#, no-wrap
msgid "x-server-version &optional display"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4874
msgid ""
"This function returns the list of version numbers of the GUI window system "
"running on @var{display}, such as the X server on GNU and Unix systems.  The "
"value is a list of three integers: the major and minor version numbers of "
"the protocol, and the distributor-specific release number of the window "
"system software itself.  On GNU and Unix systems, these are normally the "
"version of the X protocol and the distributor-specific release number of the "
"X server software.  On MS-Windows, this is the version of the Windows OS."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4876
#, no-wrap
msgid "x-server-vendor &optional display"
msgstr ""

#. type: defun
#: original_texis/frames.texi:4881
msgid ""
"This function returns the vendor that provided the window system software "
"(as a string).  On GNU and Unix systems this really means whoever "
"distributes the X server.  On MS-Windows this is the vendor ID string of the "
"Windows OS (Microsoft)."
msgstr ""

#. type: defun
#: original_texis/frames.texi:4885
msgid ""
"When the developers of X labeled software distributors as ``vendors'', they "
"showed their false assumption that no system could ever be developed and "
"distributed noncommercially."
msgstr ""

#. type: defvar
#: original_texis/frames.texi:4888
#, no-wrap
msgid "x-no-window-manager"
msgstr ""

#. type: defvar
#: original_texis/frames.texi:4890
#, no-wrap
msgid "This variable's value is @code{t} if no X window manager is in use.\n"
msgstr ""
