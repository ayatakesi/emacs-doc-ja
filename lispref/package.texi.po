# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Emacs 25.1\n"
"POT-Creation-Date: 2020-03-08 09:42+0900\n"
"PO-Revision-Date: 2020-06-12 22:00+0900\n"
"Last-Translator: Ayanokoji Takesi <ayanokoji.takesi@gmail.com>\n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: node
#: original_texis/package.texi:5
#, no-wrap
msgid "Packaging"
msgstr "Packaging"

#. type: chapter
#: original_texis/package.texi:6
#, no-wrap
msgid "Preparing Lisp code for distribution"
msgstr "Preparing Lisp code for distribution"

#. type: cindex
#: original_texis/package.texi:7
#, no-wrap
msgid "package"
msgstr "package"

#. type: cindex
#: original_texis/package.texi:8
#, no-wrap
msgid "Lisp package"
msgstr "Lisp package"

#. type: Plain text
#: original_texis/package.texi:14
msgid "Emacs provides a standard way to distribute Emacs Lisp code to users.  A @dfn{package} is a collection of one or more files, formatted and bundled in such a way that users can easily download, install, uninstall, and upgrade it."
msgstr "Emacs Lispコードをユーザーに配布するために、Emacsは標準的な方法を提供します。@dfn{パッケージ(package)}はユーザーが簡単にダウンロード、インストール、アンインストール、および更新できるような方法でフォーマットと同梱された1つ以上のファイルのコレクションです。"

#. type: Plain text
#: original_texis/package.texi:19
msgid "The following sections describe how to create a package, and how to put it in a @dfn{package archive} for others to download.  @xref{Packages,,, emacs, The GNU Emacs Manual}, for a description of user-level features of the packaging system."
msgstr "以降のセクションではパッケージを作成する方法、およびそれを他の人がダウンロードできるように@dfn{パッケージアーカイブ(package archive)}に配置する方法を説明します。パッケージングシステムのユーザーレベル機能の説明は@ref{Packages,,, emacs, The GNU Emacs Manual}を参照してください。"

#. type: section
#: original_texis/package.texi:25 original_texis/package.texi:27
#: original_texis/package.texi:28
#, no-wrap
msgid "Packaging Basics"
msgstr "Packaging Basics"

#. type: menuentry
#: original_texis/package.texi:25
msgid "The basic concepts of Emacs Lisp packages."
msgstr "Emacs Lispパッケージの基本的概念。"

#. type: section
#: original_texis/package.texi:25 original_texis/package.texi:128
#: original_texis/package.texi:129
#, no-wrap
msgid "Simple Packages"
msgstr "Simple Packages"

#. type: menuentry
#: original_texis/package.texi:25
msgid "How to package a single .el file."
msgstr "単一.elファイルをパッケージする方法。"

#. type: section
#: original_texis/package.texi:25 original_texis/package.texi:197
#: original_texis/package.texi:198
#, no-wrap
msgid "Multi-file Packages"
msgstr "Multi-file Packages"

#. type: menuentry
#: original_texis/package.texi:25
msgid "How to package multiple files."
msgstr "複数ファイルをパッケージする方法。"

#. type: node
#: original_texis/package.texi:25 original_texis/package.texi:271
#, no-wrap
msgid "Package Archives"
msgstr "Package Archives"

#. type: menuentry
#: original_texis/package.texi:25
msgid "Maintaining package archives."
msgstr "パッケージアーカイブの保守。"

#. type: cindex
#: original_texis/package.texi:29
#, no-wrap
msgid "package attributes"
msgstr "package attributes"

#. type: cindex
#: original_texis/package.texi:30
#, no-wrap
msgid "package name"
msgstr "package name"

#. type: cindex
#: original_texis/package.texi:31
#, no-wrap
msgid "package version"
msgstr "package version"

#. type: cindex
#: original_texis/package.texi:32
#, no-wrap
msgid "dependencies"
msgstr "dependencies"

#. type: cindex
#: original_texis/package.texi:33
#, no-wrap
msgid "package dependencies"
msgstr "package dependencies"

#. type: Plain text
#: original_texis/package.texi:40
msgid "A package is either a @dfn{simple package} or a @dfn{multi-file package}.  A simple package is stored in a package archive as a single Emacs Lisp file, while a multi-file package is stored as a tar file (containing multiple Lisp files, and possibly non-Lisp files such as a manual)."
msgstr "パッケージは@dfn{シンプルパケージ(simple package)}か@dfn{複数ファイルパッケージ(multi-file package)}のいずれかです。シンプルパッケージは単一のEmacs Lispファイル内に格納される一方、複数ファイルパッケージはtarファイル(複数のLispファイルとマニュアルのような非Lispファイルが含まれる可能性がある)に格納されます。"

#. type: Plain text
#: original_texis/package.texi:45
msgid "In ordinary usage, the difference between simple packages and multi-file packages is relatively unimportant; the Package Menu interface makes no distinction between them.  However, the procedure for creating them differs, as explained in the following sections."
msgstr "通常の使い方ではシンプルパッケージと複数ファイルパッケージとの違いは比較的重要ではありません。Package Menuインターフェースでは、それらの間に差異はありません。しかし以降のセクションで説明するように作成する手順は異なります。"

#. type: Plain text
#: original_texis/package.texi:48
msgid "Each package (whether simple or multi-file) has certain @dfn{attributes}:"
msgstr "パッケージ(シンプルか複数ファイル)はそれぞれ特定の@dfn{属性(attributes)}をもっています:"

#. type: item
#: original_texis/package.texi:50
#, no-wrap
msgid "Name"
msgstr "Name"

#. type: table
#: original_texis/package.texi:53
msgid "A short word (e.g., @samp{auctex}).  This is usually also the symbol prefix used in the program (@pxref{Coding Conventions})."
msgstr "短い単語(たとえば@samp{auctex})。これは通常はそのプログラム内でシンボルプレフィクスとしても使用される(@ref{Coding Conventions}を参照)。"

#. type: item
#: original_texis/package.texi:54
#, no-wrap
msgid "Version"
msgstr "Version"

#. type: table
#: original_texis/package.texi:59
msgid "A version number, in a form that the function @code{version-to-list} understands (e.g., @samp{11.86}).  Each release of a package should be accompanied by an increase in the version number so that it will be recognized as an upgrade by users querying the package archive."
msgstr "関数@code{version-to-list}が理解できる形式のバージョン番号(たとえば@samp{11.86})。パッケージの各リリースではユーザーがパッケージアーカイブの問い合わせでアップグレードとして認識できるようにバージョン番号のアップも行うこと。"

#. type: item
#: original_texis/package.texi:60
#, no-wrap
msgid "Brief description"
msgstr "Brief description"

#. type: table
#: original_texis/package.texi:63
msgid "This is shown when the package is listed in the Package Menu.  It should occupy a single line, ideally in 36 characters or less."
msgstr "そのパッケージがPackage Menuにリストされる際にが表示される。理想的には36文字以内の単一行であること。"

#. type: item
#: original_texis/package.texi:64
#, no-wrap
msgid "Long description"
msgstr "Long description"

#. type: table
#: original_texis/package.texi:70
msgid "This is shown in the buffer created by @kbd{C-h P} (@code{describe-package}), following the package's brief description and installation status.  It normally spans multiple lines, and should fully describe the package's capabilities and how to begin using it once it is installed."
msgstr "これは@kbd{C-h P} (@code{describe-package})により作成されたバッファーに表示されて、その後にそのパッケージの簡単な説明(brief description)とインストール状態(installation status)が続く。これには通常はパッケージの能力とインストール後に使用を開始する方法を複数行に渡って完全に記述すること。"

#. type: item
#: original_texis/package.texi:71
#, no-wrap
msgid "Dependencies"
msgstr "Dependencies"

#. type: table
#: original_texis/package.texi:78
msgid "A list of other packages (possibly including minimal acceptable version numbers) on which this package depends.  The list may be empty, meaning this package has no dependencies.  Otherwise, installing this package also automatically installs its dependencies, recursively; if any dependency cannot be found, the package cannot be installed."
msgstr "そのパッケージが依存する他のパッケージ(恐らく最低のバージョン番号を含む)。このリストは空でもよく、その場合にはパッケージに依存パッケージがないことを意味する。それ以外ならパッケージをインストールすることにより依存パッケージも自動的かつ再帰的にインストールされる。依存パッケージのいずれかが見つからなければパッケージをインストールすることはできない。"

#. type: cindex
#: original_texis/package.texi:80
#, no-wrap
msgid "content directory, package"
msgstr "content directory, package"

#. type: Plain text
#: original_texis/package.texi:89
msgid "Installing a package, either via the command @code{package-install-file}, or via the Package Menu, creates a subdirectory of @code{package-user-dir} named @file{@var{name}-@var{version}}, where @var{name} is the package's name and @var{version} its version (e.g., @file{~/.emacs.d/elpa/auctex-11.86/}).  We call this the package's @dfn{content directory}.  It is where Emacs puts the package's contents (the single Lisp file for a simple package, or the files extracted from a multi-file package)."
msgstr "コマンド@code{package-install-file}、またはPackage Menuのいずれかを介したパッケージのインストールでは、@code{package-user-dir}に@file{@var{name}-@var{version}}という名前のサブディレクトリーが作成されます。ここで@var{name}はパッケージ名、@var{version}はバージョン番号です(たとえば@file{~/.emacs.d/elpa/auctex-11.86/})。わたしたちはこれをパッケージの@dfn{コンテンツディレクトリー(content directory)}と呼んでいます。これはEmacsがパッケージのコンテンツ(シンプルパッケージでは単一のLispファイル、または複数ファイルパッケージから抽出されたファイル)を配置する場所です。"

#. type: cindex
#: original_texis/package.texi:90
#, no-wrap
msgid "package autoloads"
msgstr "package autoloads"

#. type: Plain text
#: original_texis/package.texi:102
msgid "Emacs then searches every Lisp file in the content directory for autoload magic comments (@pxref{Autoload}).  These autoload definitions are saved to a file named @file{@var{name}-autoloads.el} in the content directory.  They are typically used to autoload the principal user commands defined in the package, but they can also perform other tasks, such as adding an element to @code{auto-mode-alist} (@pxref{Auto Major Mode}).  Note that a package typically does @emph{not} autoload every function and variable defined within it---only the handful of commands typically called to begin using the package.  Emacs then byte-compiles every Lisp file in the package."
msgstr "その後にEmacsはautoloadマジックコメント(@ref{Autoload}を参照)にたいしてコンテンツディレクトリー内のすべてのLispファイルを検索します。これらのautoload定義はコンテンツディレクトリーの@file{@var{name}-autoloads.el}という名前のファイルに保存されます。これらは通常はパッケージ内で定義された主要なユーザーコマンドのautoloadに使用されますが、@code{auto-mode-alist}への要素の追加(@ref{Auto Major Mode}を参照)等の別のタスクを行うこともできます。パッケージは通常はその中で定義された関数と変数のすべてをautoload@emph{しない}ことに注意してください --- 通常はそのパッケージの使用を開始するために呼び出される一握りのコマンドだけがautoloadされます。それからEmacsはそのパッケージ内のすべてのLispファイルをバイトコンパイルします。"

#. type: Plain text
#: original_texis/package.texi:106
msgid "After installation, the installed package is @dfn{loaded}: Emacs adds the package's content directory to @code{load-path}, and evaluates the autoload definitions in @file{@var{name}-autoloads.el}."
msgstr "インストール後はインストールされたパッケージは@dfn{ロード済み(loaded)}になります。Emacsは@code{load-path}にコンテンツディレクトリーを追加して@file{@var{name}-autoloads.el}内のautoload定義を評価します。"

#. type: Plain text
#: original_texis/package.texi:113
msgid "Whenever Emacs starts up, it automatically calls the function @code{package-initialize} to load installed packages.  This is done after loading the init file and abbrev file (if any) and before running @code{after-init-hook} (@pxref{Startup Summary}).  Automatic package loading is disabled if the user option @code{package-enable-at-startup} is @code{nil}."
msgstr "Emacsのスタートアップ時はインストール済みパッケージをロードするために、常に自動的に関数@code{package-initialize}が呼び出されます。これはinitファイルと、(もしあれば)abbrevファイルのロード後、かつ@code{after-init-hook}の実行前に行われます(@ref{Startup Summary}を参照)。ユーザーオプション@code{package-enable-at-startup}が@code{nil}なら自動的なパッケージのロードは無効です。"

#. type: deffn
#: original_texis/package.texi:114
#, no-wrap
msgid "Command package-initialize &optional no-activate"
msgstr "Command package-initialize &optional no-activate"

#. type: deffn
#: original_texis/package.texi:122
msgid "This function initializes Emacs' internal record of which packages are installed, and loads them.  The user option @code{package-load-list} specifies which packages to load; by default, all installed packages are loaded.  If called during startup, this function also sets @code{package-enable-at-startup} to @code{nil}, to avoid accidentally loading the packages twice.  @xref{Package Installation,,, emacs, The GNU Emacs Manual}."
msgstr "この関数はインストール済みパッケージ、およびそれらがロード済みかどうかを記録するEmacsの内部レコードを初期化する。ユーザーオプション@code{package-load-list}は何のパッケージをロードするかを指定する。デフォルトではすべてのインストール済みパッケージがロードされる。スタートアップ中に呼び出されると、この関数は意図せずパッケージを2重にロードすることを防ぐために@code{package-enable-at-startup}に@code{nil}をセットする。@ref{Package Installation,,, emacs, The GNU Emacs Manual}を参照のこと。"

#. type: deffn
#: original_texis/package.texi:126
msgid "The optional argument @var{no-activate}, if non-@code{nil}, causes Emacs to update its record of installed packages without actually loading them; it is for internal use only."
msgstr "オプション引数@var{no-activate}が非@code{nil}なら、インストール済みパッケージを実際にロードせずにこのレコードを更新する。これは内部でのみ使用される。"

#. type: cindex
#: original_texis/package.texi:130
#, no-wrap
msgid "single file package"
msgstr "single file package"

#. type: cindex
#: original_texis/package.texi:131
#, no-wrap
msgid "simple package"
msgstr "simple package"

#. type: Plain text
#: original_texis/package.texi:137
msgid "A simple package consists of a single Emacs Lisp source file.  The file must conform to the Emacs Lisp library header conventions (@pxref{Library Headers}).  The package's attributes are taken from the various headers, as illustrated by the following example:"
msgstr "シンプルパッケージは単一のEmacs Lispソースファイルで構成されます。このファイルはEmacs Lispライブラリーのヘッダー規約に準拠していなればなりません(@ref{Library Headers}を参照)。以下の例に示すようにパッケージの属性は種々のヘッダーから取得されます:"

#. type: group
#: original_texis/package.texi:141
#, no-wrap
msgid ""
";;; superfrobnicator.el --- Frobnicate and bifurcate flanges\n"
"\n"
msgstr ""
";;; superfrobnicator.el --- Frobnicate and bifurcate flanges\n"
"\n"

#. type: group
#: original_texis/package.texi:143
#, no-wrap
msgid ";; Copyright (C) 2011 Free Software Foundation, Inc.\n"
msgstr ";; Copyright (C) 2011 Free Software Foundation, Inc.\n"

#. type: example
#: original_texis/package.texi:150
#, no-wrap
msgid ""
";; Author: J. R. Hacker <jrh@@example.com>\n"
";; Version: 1.3\n"
";; Package-Requires: ((flange \"1.0\"))\n"
";; Keywords: multimedia, frobnicate\n"
";; URL: http://example.com/jrhacker/superfrobnicate\n"
"\n"
msgstr ""
";; Author: J. R. Hacker <jrh@@example.com>\n"
";; Version: 1.3\n"
";; Package-Requires: ((flange \"1.0\"))\n"
";; Keywords: multimedia, frobnicate\n"
";; URL: http://example.com/jrhacker/superfrobnicate\n"
"\n"

#. type: example
#: original_texis/package.texi:152
#, no-wrap
msgid ""
"@dots{}\n"
"\n"
msgstr ""
"@dots{}\n"
"\n"

#. type: example
#: original_texis/package.texi:154
#, no-wrap
msgid ""
";;; Commentary:\n"
"\n"
msgstr ""
";;; Commentary:\n"
"\n"

#. type: example
#: original_texis/package.texi:158
#, no-wrap
msgid ""
";; This package provides a minor mode to frobnicate and/or\n"
";; bifurcate any flanges you desire.  To activate it, just type\n"
"@dots{}\n"
"\n"
msgstr ""
";; This package provides a minor mode to frobnicate and/or\n"
";; bifurcate any flanges you desire.  To activate it, just type\n"
"@dots{}\n"
"\n"

#. type: example
#: original_texis/package.texi:162
#, no-wrap
msgid ""
";;;###autoload\n"
"(define-minor-mode superfrobnicator-mode\n"
"@dots{}\n"
msgstr ""
";;;###autoload\n"
"(define-minor-mode superfrobnicator-mode\n"
"@dots{}\n"

#. type: Plain text
#: original_texis/package.texi:166
msgid "The name of the package is the same as the base name of the file, as written on the first line.  Here, it is @samp{superfrobnicator}."
msgstr "そのパッケージの名前は1行目のファイル名の拡張子を除いた部分と同じです。ここでは@samp{superfrobnicator}です。"

#. type: Plain text
#: original_texis/package.texi:169
msgid "The brief description is also taken from the first line.  Here, it is @samp{Frobnicate and bifurcate flanges}."
msgstr "brief description(簡単な説明)も1行目から取得されます。ここでは@samp{Frobnicate and bifurcate flanges}です(訳注: @samp{flangeをフロブニケートして二股化する}のフロブニケートとはある技術にたいする無目的で非生産的な具体的行為を意味する)。"

#. type: Plain text
#: original_texis/package.texi:173
msgid "The version number comes from the @samp{Package-Version} header, if it exists, or from the @samp{Version} header otherwise.  One or the other @emph{must} be present.  Here, the version number is 1.3."
msgstr "バージョン番号は、もしあれば@samp{Package-Version}ヘッダー、それ以外は@samp{Version}ヘッダーから取得されます。これらのヘッダーのいずれかが@emph{提供されていなればなりません}。ここでのバージョン番号は1.3です。"

#. type: Plain text
#: original_texis/package.texi:178
msgid "If the file has a @samp{;;; Commentary:} section, this section is used as the long description.  (When displaying the description, Emacs omits the @samp{;;; Commentary:} line, as well as the leading comment characters in the commentary itself.)"
msgstr "そのファイルに@samp{;;; Commentary:}セクションがあれば、そのセクションは長い説明(long description)として使用されます(その説明を表示する際にはEmacsは@samp{;;; Commentary:}の行とコメント内のコメント文字列を省略する)。"

#. type: Plain text
#: original_texis/package.texi:184
msgid "If the file has a @samp{Package-Requires} header, that is used as the package dependencies.  In the above example, the package depends on the @samp{flange} package, version 1.0 or higher.  @xref{Library Headers}, for a description of the @samp{Package-Requires} header.  If the header is omitted, the package has no dependencies."
msgstr "そのファイルに@samp{Package-Requires}ヘッダーがあればパッケージの依存関係(package dependencies)として使用されます。上の例ではパッケージはバージョン1.0以上の@samp{flange}パッケージに依存します。@samp{Package-Requires}ヘッダーの説明は@ref{Library Headers}を参照してください。このヘッダーが省略された場合にはパッケージに依存関係はありません。"

#. type: Plain text
#: original_texis/package.texi:189
msgid "The @samp{Keywords} and @samp{URL} headers are optional, but recommended.  The command @code{describe-package} uses these to add links to its output.  The @samp{Keywords} header should contain at least one standard keyword from the @code{finder-known-keywords} list."
msgstr "ヘッダー@samp{Keywords}と@samp{URL}はオプションですが含めることを推奨します。コマンド@code{describe-package}は出力にリンクを追加するためにこれらを使用します。@samp{Keywords}ヘッダーには@code{finder-known-keywords}リストからの標準的キーワードを少なくとも1つ含めるべきです。"

#. type: Plain text
#: original_texis/package.texi:193
msgid "The file ought to also contain one or more autoload magic comments, as explained in @ref{Packaging Basics}.  In the above example, a magic comment autoloads @code{superfrobnicator-mode}."
msgstr "ファイルには@ref{Packaging Basics}で説明したように1つ以上のautoloadマジックコメントも含めるべきです。上の例ではマジックコメントにより@code{superfrobnicator-mode}が自動ロードされます。"

#. type: Plain text
#: original_texis/package.texi:196
msgid "@xref{Package Archives}, for an explanation of how to add a single-file package to a package archive."
msgstr "パッケージアーカイブに単一ファイルのパッケージを追加する方法は@ref{Package Archives}を参照してください。"

#. type: cindex
#: original_texis/package.texi:199
#, no-wrap
msgid "multi-file package"
msgstr "multi-file package"

#. type: Plain text
#: original_texis/package.texi:204
msgid "A multi-file package is less convenient to create than a single-file package, but it offers more features: it can include multiple Emacs Lisp files, an Info manual, and other file types (such as images)."
msgstr "複数ファイルパッケージは単一ファイルパッケージより作成の手軽さが少し劣りますが、より多くの機能を提供します。複数ファイルパッケージには複数のEmacs Lispファイル、Infoマニュアル、および(イメージのような)他のファイルタイプを含めることができます。"

#. type: Plain text
#: original_texis/package.texi:213
msgid "Prior to installation, a multi-file package is stored in a package archive as a tar file.  The tar file must be named @file{@var{name}-@var{version}.tar}, where @var{name} is the package name and @var{version} is the version number.  Its contents, once extracted, must all appear in a directory named @file{@var{name}-@var{version}}, the @dfn{content directory} (@pxref{Packaging Basics}).  Files may also extract into subdirectories of the content directory."
msgstr "インストールに先立ち複数パッケージはファイルとしてパッケージアーカイブに含まれます。このtarファイルは@file{@var{name}-@var{version}.tar}という名前でなければなりません。ここで@var{name}はパッケージ名、@var{version}はバージョン番号です。tarのコンテンツは一度解凍されたなら、@dfn{コンテンツディレクトリcontent directory)}である@file{@var{name}-@var{version}}という名前のディレクトリーにすべて解凍されなければなりません(@ref{Packaging Basics}を参照)。このコンテンツディレクトリーのサブディレクトリーにもファイルが抽出されるかもしれません。"

#. type: Plain text
#: original_texis/package.texi:219
msgid "One of the files in the content directory must be named @file{@var{name}-pkg.el}.  It must contain a single Lisp form, consisting of a call to the function @code{define-package}, described below.  This defines the package's attributes: version, brief description, and requirements."
msgstr "このコンテンツディレクトリー内のファイルのうち1つは@file{@var{name}-pkg.el}という名前のファイルでなければなりません。このファイルには、以下で説明する関数@code{define-package}の呼び出しから構成される単一のLispフォームを含まなければなりません。これはパッケージの属性、簡単な説明(brief description)、必要条件(requirements)を定義します。"

#. type: Plain text
#: original_texis/package.texi:225
msgid "For example, if we distribute version 1.3 of the superfrobnicator as a multi-file package, the tar file would be @file{superfrobnicator-1.3.tar}.  Its contents would extract into the directory @file{superfrobnicator-1.3}, and one of these would be the file @file{superfrobnicator-pkg.el}."
msgstr "たとえば、複数ファイルパッケージとしてsuperfrobnicatorのバージョン1.3を配布する場合のtarファイルは@file{superfrobnicator-1.3.tar}になります。これのコンテンツは@file{superfrobnicator-1.3}に解凍されて、そのうちの1つはファイル@file{superfrobnicator-pkg.el}になるでしょう。"

#. type: defun
#: original_texis/package.texi:226
#, no-wrap
msgid "define-package name version &optional docstring requirements"
msgstr "define-package name version &optional docstring requirements"

#. type: defun
#: original_texis/package.texi:231
msgid "This function defines a package.  @var{name} is the package name, a string.  @var{version} is the version, as a string of a form that can be understood by the function @code{version-to-list}.  @var{docstring} is the brief description."
msgstr "この関数はパッケージを定義する。@var{name}はパッケージの名前(文字列)、@var{version}は関数@code{version-to-list}が理解できる形式のバージョン(文字列)、@var{docstring}は簡単な説明(brief description)。"

#. type: defun
#: original_texis/package.texi:237
msgid "@var{requirements} is a list of required packages and their versions.  Each element in this list should have the form @code{(@var{dep-name} @var{dep-version})}, where @var{dep-name} is a symbol whose name is the dependency's package name, and @var{dep-version} is the dependency's version (a string)."
msgstr "@var{requirements}は必要となるパッケージとバージョン番号。このリスト内の各要素は@code{(@var{dep-name} @var{dep-version})}という形式であること。ここで@var{dep-name}はその依存するパッケージ名が名前であるようなシンボル、@var{dep-version}は依存するパッケージのバージョン番号(文字列)。"

#. type: Plain text
#: original_texis/package.texi:241
msgid "If the content directory contains a file named @file{README}, this file is used as the long description."
msgstr "コンテンツディレクトリーに@file{README}という名前のファイルがあれば長い説明(long description)として使用されます。"

#. type: Plain text
#: original_texis/package.texi:249
msgid "If the content directory contains a file named @file{dir}, this is assumed to be an Info directory file made with @command{install-info}.  @xref{Invoking install-info, Invoking install-info, Invoking install-info, texinfo, Texinfo}.  The relevant Info files should also be present in the content directory.  In this case, Emacs will automatically add the content directory to @code{Info-directory-list} when the package is activated."
msgstr "コンテンツディレクトリーに@file{dir}という名前のファイルがあれば、@command{install-info}で作成されるInfoディレクトリーファイル名とみなされます。@ref{Invoking install-info, Invoking install-info, Invoking install-info, texinfo, Texinfo}を参照してください。関係のあるInfoファイルもコンテンツディレクトリー内に解凍される必要があります。この場合には、パッケージがアクティブ化されたときにEmacsが自動的に@code{Info-directory-list}にコンテンツディレクトリーを追加します。"

#. type: Plain text
#: original_texis/package.texi:253
msgid "Do not include any @file{.elc} files in the package.  Those are created when the package is installed.  Note that there is no way to control the order in which files are byte-compiled."
msgstr "パッケージ内に@file{.elc}ファイルを含めないでください。これらはパッケージのインストール時に作成されます。ファイルがバイトコンパイルされる順序を制御する方法は存在しないことに注意してください。"

#. type: Plain text
#: original_texis/package.texi:259
msgid "Do not include any file named @file{@var{name}-autoloads.el}.  This file is reserved for the package's autoload definitions (@pxref{Packaging Basics}).  It is created automatically when the package is installed, by searching all the Lisp files in the package for autoload magic comments."
msgstr "@file{@var{name}-autoloads.el}という名前のファイルを含めてはなりません。このファイルはパッケージのautoload定義のために予約済みです(@ref{Packaging Basics}を参照)。これはパッケージのインストール時にパッケージ内のすべてのLispファイルからautoloadマジックコメントを検索する際に自動的に作成されます。"

#. type: Plain text
#: original_texis/package.texi:263
msgid "If the multi-file package contains auxiliary data files (such as images), the package's Lisp code can refer to these files via the variable @code{load-file-name} (@pxref{Loading}).  Here is an example:"
msgstr "複数パッケージファイルが、(イメージのような)補助的なデータファイルを含む場合には、パッケージ内のLispファイルは変数@code{load-file-name}を通じてそれらのファイルを参照できます(@ref{Loading}を参照)。以下は例です:"

#. type: smallexample
#: original_texis/package.texi:266
#, no-wrap
msgid ""
"(defconst superfrobnicator-base (file-name-directory load-file-name))\n"
"\n"
msgstr ""
"(defconst superfrobnicator-base (file-name-directory load-file-name))\n"
"\n"

#. type: smallexample
#: original_texis/package.texi:269
#, no-wrap
msgid ""
"(defun superfrobnicator-fetch-image (file)\n"
"  (expand-file-name file superfrobnicator-base))\n"
msgstr ""
"(defun superfrobnicator-fetch-image (file)\n"
"  (expand-file-name file superfrobnicator-base))\n"

#. type: section
#: original_texis/package.texi:272
#, no-wrap
msgid "Creating and Maintaining Package Archives"
msgstr "Creating and Maintaining Package Archives"

#. type: cindex
#: original_texis/package.texi:273
#, no-wrap
msgid "package archive"
msgstr "package archive"

#. type: Plain text
#: original_texis/package.texi:280
msgid "Via the Package Menu, users may download packages from @dfn{package archives}.  Such archives are specified by the variable @code{package-archives}, whose default value contains a single entry: the archive hosted by the GNU project at @url{https://elpa.gnu.org}.  This section describes how to set up and maintain a package archive."
msgstr "Package Menuを通じて@dfn{パッケージアーカイブ(package archives)}からユーザーはパッケージをダウンロードできます。このようなアーカイブは変数@code{package-archives}で指定されます。この変数のデフォルト値のデフォルト値として@url{https://elpa.gnu.org}というGNUプロジェクトがホストするアーカイブが単一のエントリーとして含まれています。このセクションではパッケージアーカイブのセットアップと保守の方法について説明します。"

#. type: cindex
#: original_texis/package.texi:281
#, no-wrap
msgid "base location, package archive"
msgstr "base location, package archive"

#. type: defopt
#: original_texis/package.texi:282
#, no-wrap
msgid "package-archives"
msgstr "package-archives"

#. type: defopt
#: original_texis/package.texi:285
msgid "The value of this variable is an alist of package archives recognized by the Emacs package manager."
msgstr "この変数の値はEmacsパッケージマネージャーが認識するパッケージアーカイブのリスト。"

#. type: defopt
#: original_texis/package.texi:290
msgid "Each alist element corresponds to one archive, and should have the form @code{(@var{id} . @var{location})}, where @var{id} is the name of the archive (a string) and @var{location} is its @dfn{base location} (a string)."
msgstr "このalistの要素はそれぞれが1つのアーカイブに対応する@code{(@var{id} . @var{location})}という形式であること。ここで@var{id}はパッケージ名(文字列)、@var{location}は文字列であるような@dfn{ベースロケーション(base location)}。"

#. type: defopt
#: original_texis/package.texi:294
msgid "If the base location starts with @samp{http:} or @samp{https:}, it is treated as an HTTP(S) URL, and packages are downloaded from this archive via HTTP(S) (as is the case for the default GNU archive)."
msgstr "ベースロケーションが@samp{http:}か@samp{https:}で始まる場合にはHTTP(S)のURLとして扱われて、(デフォルトのGNUアーカイブのように)HTTP(S)を介してこのアーカイブからパッケージがダウンロードされる。"

#. type: defopt
#: original_texis/package.texi:298
msgid "Otherwise, the base location should be a directory name.  In this case, Emacs retrieves packages from this archive via ordinary file access.  Such local archives are mainly useful for testing."
msgstr "それ以外ならベースロケーションはディレクトリー名であること。この場合にはEmacsは通常のファイルアクセスを通じて、そのアーカイブからパッケージを取得する。localのようなアーカイブは主としてテストに有用。"

#. type: Plain text
#: original_texis/package.texi:304
msgid "A package archive is simply a directory in which the package files, and associated files, are stored.  If you want the archive to be reachable via HTTP, this directory must be accessible to a web server.  How to accomplish this is beyond the scope of this manual."
msgstr "パッケージアーカイブはパッケージ、および関連するファイルが格納された単なるディレクトリーです。HTTPを介してそのアーカイブに到達できるようにしたければ、このディレクトリーがウェブサーバーにアクセスできなければなりません。これを達成する方法はマニュアルの範囲を超えます。"

#. type: Plain text
#: original_texis/package.texi:311
msgid "A convenient way to set up and update a package archive is via the @code{package-x} library.  This is included with Emacs, but not loaded by default; type @kbd{M-x load-library @key{RET} package-x @key{RET}} to load it, or add @code{(require 'package-x)} to your init file.  @xref{Lisp Libraries,, Lisp Libraries, emacs, The GNU Emacs Manual}.  Once loaded, you can make use of the following:"
msgstr "手軽なのは@code{package-x}を通じてパッケージアーカイブのセットアップと更新を行う方法です。これはEmacsに含まれていますがデフォルトではロードされません。ロードするには@kbd{M-x load-library @key{RET} package-x @key{RET}}、または@code{(require 'package-x)}をinitファイルに追加します。@ref{Lisp Libraries,, Lisp Libraries, emacs, The GNU Emacs Manual}を参照してください。一度ロードされれば以下を使用できます:"

#. type: defopt
#: original_texis/package.texi:312
#, no-wrap
msgid "package-archive-upload-base"
msgstr "package-archive-upload-base"

#. type: defopt
#: original_texis/package.texi:316
msgid "The value of this variable is the base location of a package archive, as a directory name.  The commands in the @code{package-x} library will use this base location."
msgstr "この変数の値はディレクトリー名としてのパッケージアーカイブのベースロケーション。@code{package-x}ライブラリー内のコマンドはこのベースロケーションを使用することになる。"

#. type: defopt
#: original_texis/package.texi:321
msgid "The directory name should be absolute.  You may specify a remote name, such as @file{/ssh:foo@@example.com:/var/www/packages/}, if the package archive is on a different machine.  @xref{Remote Files,, Remote Files, emacs, The GNU Emacs Manual}."
msgstr "このディレクトリー名は絶対ファイル名であること。パッケージアーカイブが別マシン上にある場合には、@file{/ssh:foo@@example.com:/var/www/packages/}のようなリモート名を指定できる。@ref{Remote Files,, Remote Files, emacs, The GNU Emacs Manual}を参照のこと。"

#. type: deffn
#: original_texis/package.texi:323
#, no-wrap
msgid "Command package-upload-file filename"
msgstr "Command package-upload-file filename"

#. type: deffn
#: original_texis/package.texi:330
msgid "This command prompts for @var{filename}, a file name, and uploads that file to @code{package-archive-upload-base}.  The file must be either a simple package (a @file{.el} file) or a multi-file package (a @file{.tar} file); otherwise, an error is raised.  The package attributes are automatically extracted, and the archive's contents list is updated with this information."
msgstr "このコマンドはファイル名@var{filename}の入力を求めて、そのファイルを@code{package-archive-upload-base}にアップロードする。このファイルはシンプルパッケージ(@file{.el}ファイル)、または複数ファイルパッケージ(@file{.tar}ファイル)のいずれかでなければならず、それ以外ならエラーが発生する。そのパッケージの属性は自動的に解凍されて、アーカイブのコンテンツリストはこの情報でアップロードされる。"

#. type: deffn
#: original_texis/package.texi:336
msgid "If @code{package-archive-upload-base} does not specify a valid directory, the function prompts interactively for one.  If the directory does not exist, it is created.  The directory need not have any initial contents (i.e., you can use this command to populate an initially empty archive)."
msgstr "@code{package-archive-upload-base}が有効なディレクトリーを指定しない場合には、この関数はインタラクティブにそれの入力を求める。そのディレクトリーが存在しなければ作成する。このディレクトリーが初期コンテンツをもつ必要はない(最初に空のアーカイブを作成するためにこのコマンドを使用できる)。"

#. type: deffn
#: original_texis/package.texi:338
#, no-wrap
msgid "Command package-upload-buffer"
msgstr "Command package-upload-buffer"

#. type: deffn
#: original_texis/package.texi:344
msgid "This command is similar to @code{package-upload-file}, but instead of prompting for a package file, it uploads the contents of the current buffer.  The current buffer must be visiting a simple package (a @file{.el} file) or a multi-file package (a @file{.tar} file); otherwise, an error is raised."
msgstr "このコマンドは@code{package-upload-file}と似ているが、パッケージファイルの入力を求めずにカレントバッファーのコンテンツをアップロードする。カレントバッファーはシンプルパッケージ(@file{.el}ファイル)か複数ファイルパッケージ(@file{.tar}ファイル)をvisitしていなればならず、それ以外ならエラーが発生する。"

#. type: Plain text
#: original_texis/package.texi:349
msgid "After you create an archive, remember that it is not accessible in the Package Menu interface unless it is in @code{package-archives}."
msgstr "アーカイブ作成後に、それが@code{package-archives}内になければPackage Menuインターフェースからアクセスできないことを忘れないでください。"

#. type: cindex
#: original_texis/package.texi:350
#, no-wrap
msgid "package archive security"
msgstr "package archive security"

#. type: cindex
#: original_texis/package.texi:351
#, no-wrap
msgid "package signing"
msgstr "package signing"

#. type: Plain text
#: original_texis/package.texi:358
msgid "Maintaining a public package archive entails a degree of responsibility.  When Emacs users install packages from your archive, those packages can cause Emacs to run arbitrary code with the permissions of the installing user.  (This is true for Emacs code in general, not just for packages.)  So you should ensure that your archive is well-maintained and keep the hosting system secure."
msgstr "公的なパッケージアーカイブの保守には責任が併ないます。アーカイブからEmacsユーザーがパッケージをインストールする際には、それらのパッケージはそのユーザーの権限において任意のコードを実行できるようになります(これはパッケージにたいしてだけでなく一般的なEmacsコードにたいしても真といえる)。そのためアーカイブの保守を保つとともにホスティングシステムが安全であるよう維持するべきです。"

#. type: Plain text
#: original_texis/package.texi:363
msgid "One way to increase the security of your packages is to @dfn{sign} them using a cryptographic key.  If you have generated a private/public gpg key pair, you can use gpg to sign the package like this:"
msgstr "暗号化されたキーを使用してパッケージに@dfn{サイン(sign)}するのがパッケージのセキュリティーを向上する1つの方法です。gpgのprivateキーとpublicキーを生成してあれば以下のようにそのパッケージにサインするためにgpgを使用できます:"

#. type: example
#: original_texis/package.texi:367
#, no-wrap
msgid "gpg -ba -o @var{file}.sig @var{file}\n"
msgstr "gpg -ba -o @var{file}.sig @var{file}\n"

#. type: Plain text
#: original_texis/package.texi:378
msgid "For a single-file package, @var{file} is the package Lisp file; for a multi-file package, it is the package tar file.  You can also sign the archive's contents file in the same way.  Make the @file{.sig} files available in the same location as the packages.  You should also make your public key available for people to download; e.g., by uploading it to a key server such as @url{http://pgp.mit.edu/}.  When people install packages from your archive, they can use your public key to verify the signatures."
msgstr "単一ファイルパッケージにたいしては、@var{file}はそのパッケージのLispファイルです。複数ファイルパッケージではそのパッケージのtarファイルです。同じ方法によりアーカイブのコンテンツファイルにもサインできます。これを行うにはパッケージと同じディレクトリーで@file{.sig}ファイルを利用可能できるようにしてください。ダウンロードする人にたいしても、@url{http://pgp.mit.edu/}のようなキーサーバーにアップロードすることによりpublicキーを利用できるようにするべきです。その人がアーカイブからパッケージをインストールする際には署名の検証にpublicキーを使用できます。"

#. type: Plain text
#: original_texis/package.texi:383
msgid "A full explanation of these matters is outside the scope of this manual.  For more information on cryptographic keys and signing, @pxref{Top,, GnuPG, gnupg, The GNU Privacy Guard Manual}.  Emacs comes with an interface to GNU Privacy Guard, @pxref{Top,, EasyPG, epa, Emacs EasyPG Assistant Manual}."
msgstr "これらの方法についての完全な説明はマニュアルの範囲を超えます。暗号化キーとサインに関する詳細は@ref{Top,, GnuPG, gnupg, The GNU Privacy Guard Manual}、Emacsに付属するGNU Privacy Guardへのインターフェースについては@ref{Top,, EasyPG, epa, Emacs EasyPG Assistant Manual}を参照してください。"
