# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Emacs-lispref 25.1\n"
"POT-Creation-Date: 2019-10-14 22:48+0900\n"
"PO-Revision-Date: 2020-01-14 22:27+0900\n"
"Last-Translator: Ayanokoji Takesi <ayanokoji.takesi@gmail.com>\n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: chapter
#: original_texis/markers.texi:6 original_texis/markers.texi:7
#, no-wrap
msgid "Markers"
msgstr "Markers"

#. type: cindex
#: original_texis/markers.texi:8
#, no-wrap
msgid "markers"
msgstr "markers"

#. type: Plain text
#: original_texis/markers.texi:14
msgid "A @dfn{marker} is a Lisp object used to specify a position in a buffer relative to the surrounding text.  A marker changes its offset from the beginning of the buffer automatically whenever text is inserted or deleted, so that it stays with the two characters on either side of it."
msgstr "@dfn{マーカー(marker)}とは、あるバッファー内で取り囲んでいるテキストにたいして相対的な位置を指定するために使用されるオブジェクトです。テキストが挿入や削除される際には、常にマーカーは自動的にそのバッファーの先頭からのオフセットを自動的に変更して自身の左右にある文字の間に留まります。"

#. type: section
#: original_texis/markers.texi:25 original_texis/markers.texi:27
#: original_texis/markers.texi:28
#, no-wrap
msgid "Overview of Markers"
msgstr "Overview of Markers"

#. type: menuentry
#: original_texis/markers.texi:25
msgid "The components of a marker, and how it relocates."
msgstr "マーカー構成要素と再配置方法。"

#. type: section
#: original_texis/markers.texi:25 original_texis/markers.texi:119
#: original_texis/markers.texi:120
#, no-wrap
msgid "Predicates on Markers"
msgstr "Predicates on Markers"

#. type: menuentry
#: original_texis/markers.texi:25
msgid "Testing whether an object is a marker."
msgstr "オブジェクトがマーカーか否かのテスト。"

#. type: node
#: original_texis/markers.texi:25 original_texis/markers.texi:144
#, no-wrap
msgid "Creating Markers"
msgstr "Creating Markers"

#. type: menuentry
#: original_texis/markers.texi:25
msgid "Making empty markers or markers at certain places."
msgstr "空マーカーや特定箇所のマーカーの作成。"

#. type: section
#: original_texis/markers.texi:25 original_texis/markers.texi:274
#: original_texis/markers.texi:275
#, no-wrap
msgid "Information from Markers"
msgstr "Information from Markers"

#. type: menuentry
#: original_texis/markers.texi:25
msgid "Finding the marker's buffer or character position."
msgstr "マーカーのバッファーや文字位置を探す。"

#. type: section
#: original_texis/markers.texi:25 original_texis/markers.texi:321
#: original_texis/markers.texi:322
#, no-wrap
msgid "Marker Insertion Types"
msgstr "Marker Insertion Types"

#. type: menuentry
#: original_texis/markers.texi:25
msgid "Two ways a marker can relocate when you insert where it points."
msgstr "マーカーが指す位置への挿入時にマーカーを再配置する2つの方法。"

#. type: node
#: original_texis/markers.texi:25 original_texis/markers.texi:348
#, no-wrap
msgid "Moving Markers"
msgstr "Moving Markers"

#. type: menuentry
#: original_texis/markers.texi:25
msgid "Moving the marker to a new buffer or position."
msgstr "新たなバッファーや位置にマーカーを移動する。"

#. type: section
#: original_texis/markers.texi:25 original_texis/markers.texi:400
#: original_texis/markers.texi:401
#, no-wrap
msgid "The Mark"
msgstr "The Mark"

#. type: menuentry
#: original_texis/markers.texi:25
msgid "How the mark is implemented with a marker."
msgstr "マーカーによるマークの実装方法。"

#. type: section
#: original_texis/markers.texi:25 original_texis/markers.texi:680
#: original_texis/markers.texi:681
#, no-wrap
msgid "The Region"
msgstr "The Region"

#. type: menuentry
#: original_texis/markers.texi:25
msgid "How to access the region."
msgstr "リージョンへのアクセス方法。"

#. type: Plain text
#: original_texis/markers.texi:37
msgid "A marker specifies a buffer and a position in that buffer.  A marker can be used to represent a position in functions that require one, just as an integer could be used.  In that case, the marker's buffer is normally ignored.  Of course, a marker used in this way usually points to a position in the buffer that the function operates on, but that is entirely the programmer's responsibility.  @xref{Positions}, for a complete description of positions."
msgstr "マーカーはバッファーとそのバッファー内の位置を指定します。マーカーは位置を要求する関数内において、整数と同じように位置を表すために使用することができます。その場合には、そのマーカーのバッファーは通常は無視されます。この方法で使用されるマーカーは、通常はその関数が処理するバッファー内の位置を指しますが、それは完全にプログラマーの責任です。位置についての完全な説明は@ref{Positions}を参照してください。"

#. type: Plain text
#: original_texis/markers.texi:47
msgid "A marker has three attributes: the marker position, the marker buffer, and the insertion type.  The marker position is an integer that is equivalent (at a given time) to the marker as a position in that buffer.  But the marker's position value can change during the life of the marker, and often does.  Insertion and deletion of text in the buffer relocate the marker.  The idea is that a marker positioned between two characters remains between those two characters despite insertion and deletion elsewhere in the buffer.  Relocation changes the integer equivalent of the marker."
msgstr "マーカーはマーカー位置(marker position)、マーカーバッファー(marker buffer)、挿入タイプ(insertion type)という3つの属性をもちます。マーカー位置はそのバッファー内の位置としてのマーカーと(その時点において)等しい整数です。しかしマーカー位置はマーカーの生存期間中に変化し得るものであり頻繁に変更されます。バッファー内でのテキストの挿入や削除によってマーカーは再配置されます。マーカー前後の2文字以外の場所で挿入や削除がおこなわれても、マーカー位置はその2文字間に留まるというのがこのアイデアです。再配置によってマーカーと等価な整数は変更されます。"

#. type: cindex
#: original_texis/markers.texi:48
#, no-wrap
msgid "marker relocation"
msgstr "marker relocation"

#. type: Plain text
#: original_texis/markers.texi:55
msgid "Deleting text around a marker's position leaves the marker between the characters immediately before and after the deleted text.  Inserting text at the position of a marker normally leaves the marker either in front of or after the new text, depending on the marker's @dfn{insertion type} (@pxref{Marker Insertion Types})---unless the insertion is done with @code{insert-before-markers} (@pxref{Insertion})."
msgstr "マーカー位置周辺のテキストを削除することにより、そのマーカーは削除されたテキストの直前と直後にある文字の間に残されます。マーカー位置へのテキスト挿入では、マーカーは通常は新たなテキストの前か後のいずれかに配置されます。その挿入が@code{insert-before-markers} (@ref{Insertion}を参照)で行われたものでなければ、どちらに配置されるかはマーカーの@dfn{挿入タイプ}(@ref{Marker Insertion Types}を参照)に依存します。"

#. type: cindex
#: original_texis/markers.texi:56
#, no-wrap
msgid "marker garbage collection"
msgstr "marker garbage collection"

#. type: Plain text
#: original_texis/markers.texi:63
msgid "Insertion and deletion in a buffer must check all the markers and relocate them if necessary.  This slows processing in a buffer with a large number of markers.  For this reason, it is a good idea to make a marker point nowhere if you are sure you don't need it any more.  Markers that can no longer be accessed are eventually removed (@pxref{Garbage Collection})."
msgstr "バッファーでの挿入と削除では、すべてのマーカーをチェックして必要ならそれらを再配置しなければなりません。これは多数のマーカーをもつバッファーでの処理を低速にします。この理由によりそれ以上マーカーが不必要なことが確信できるなら、存在しない場所を指さないようにマーカーを設定することはよいアイデアといえるでしょう。それ以上アクセスされる可能性がないマーカーは最終的には削除されます(@ref{Garbage Collection}を参照)。"

#. type: cindex
#: original_texis/markers.texi:64
#, no-wrap
msgid "markers as numbers"
msgstr "markers as numbers"

#. type: Plain text
#: original_texis/markers.texi:69
msgid "Because it is common to perform arithmetic operations on a marker position, most of these operations (including @code{+} and @code{-}) accept markers as arguments.  In such cases, the marker stands for its current position."
msgstr "マーカー位置にたいして算術演算を行うことは一般的なので、それらの演算子のほとんど(@code{+}や@code{-}を含む)が引数としてマーカーに渡すことができます。そのような場合でのマーカーはカレント位置を意味します。"

#. type: Plain text
#: original_texis/markers.texi:72
msgid "Here are examples of creating markers, setting markers, and moving point to markers:"
msgstr "以下ではマーカーの作成とセットを行ってポイントをマーカーに移動しています:"

#. type: group
#: original_texis/markers.texi:78
#, no-wrap
msgid ""
";; @r{Make a new marker that initially does not point anywhere:}\n"
"(setq m1 (make-marker))\n"
"     @result{} #<marker in no buffer>\n"
msgstr ""
";; @r{最初はどこも指さない新たなマーカーを作成:}\n"
"(setq m1 (make-marker))\n"
"     @result{} #<marker in no buffer>\n"

#. type: group
#: original_texis/markers.texi:85
#, no-wrap
msgid ""
";; @r{Set @code{m1} to point between the 99th and 100th characters}\n"
";;   @r{in the current buffer:}\n"
"(set-marker m1 100)\n"
"     @result{} #<marker at 100 in markers.texi>\n"
msgstr ""
";; @r{カレントバッファーの99と100番目の}\n"
";;   @r{文字間を指すよう@code{m1}をセット:}\n"
"(set-marker m1 100)\n"
"     @result{} #<marker at 100 in markers.texi>\n"

#. type: group
#: original_texis/markers.texi:93
#, no-wrap
msgid ""
";; @r{Now insert one character at the beginning of the buffer:}\n"
"(goto-char (point-min))\n"
"     @result{} 1\n"
"(insert \"Q\")\n"
"     @result{} nil\n"
msgstr ""
";; @r{ここでバッファー先頭に1文字挿入:}\n"
"(goto-char (point-min))\n"
"     @result{} 1\n"
"(insert \"Q\")\n"
"     @result{} nil\n"

#. type: group
#: original_texis/markers.texi:99
#, no-wrap
msgid ""
";; @r{@code{m1} is updated appropriately.}\n"
"m1\n"
"     @result{} #<marker at 101 in markers.texi>\n"
msgstr ""
";; @r{@code{m1}は適切に更新された}\n"
"m1\n"
"     @result{} #<marker at 101 in markers.texi>\n"

#. type: group
#: original_texis/markers.texi:110
#, no-wrap
msgid ""
";; @r{Two markers that point to the same position}\n"
";;   @r{are not @code{eq}, but they are @code{equal}.}\n"
"(setq m2 (copy-marker m1))\n"
"     @result{} #<marker at 101 in markers.texi>\n"
"(eq m1 m2)\n"
"     @result{} nil\n"
"(equal m1 m2)\n"
"     @result{} t\n"
msgstr ""
";; @r{同じ位置を指す2つのマーカーは}\n"
";;   @r{@code{equal}だが@code{eq}に非ず}\n"
"(setq m2 (copy-marker m1))\n"
"     @result{} #<marker at 101 in markers.texi>\n"
"(eq m1 m2)\n"
"     @result{} nil\n"
"(equal m1 m2)\n"
"     @result{} t\n"

#. type: group
#: original_texis/markers.texi:116
#, no-wrap
msgid ""
";; @r{When you are finished using a marker, make it point nowhere.}\n"
"(set-marker m1 nil)\n"
"     @result{} #<marker in no buffer>\n"
msgstr ""
";; @r{マーカー使用終了時、存在しない場所を指すようセット}\n"
"(set-marker m1 nil)\n"
"     @result{} #<marker in no buffer>\n"

#. type: cindex
#: original_texis/markers.texi:121
#, no-wrap
msgid "predicates for markers"
msgstr "predicates for markers"

#. type: cindex
#: original_texis/markers.texi:122
#, no-wrap
msgid "markers, predicates for"
msgstr "markers, predicates for"

#. type: Plain text
#: original_texis/markers.texi:127
msgid "You can test an object to see whether it is a marker, or whether it is either an integer or a marker.  The latter test is useful in connection with the arithmetic functions that work with both markers and integers."
msgstr "あるオブジェクトがマーカーなのか、それとも整数かマーカーのいずれかであるかを確認するためのテストを行うことができます。後者のテストはマーカーと整数の両方にたいして機能する算術関数において有用です。"

#. type: defun
#: original_texis/markers.texi:128
#, no-wrap
msgid "markerp object"
msgstr "markerp object"

#. type: defun
#: original_texis/markers.texi:132
msgid "This function returns @code{t} if @var{object} is a marker, @code{nil} otherwise.  Note that integers are not markers, even though many functions will accept either a marker or an integer."
msgstr "この関数は@var{object}がマーカーなら@code{nil}、それ以外は@code{t}をリターンする。多くの関数はマーカーか整数のいずれかを受け入れるだろうが、整数はマーカーとは異なることに注意。"

#. type: defun
#: original_texis/markers.texi:134
#, no-wrap
msgid "integer-or-marker-p object"
msgstr "integer-or-marker-p object"

#. type: defun
#: original_texis/markers.texi:137
msgid "This function returns @code{t} if @var{object} is an integer or a marker, @code{nil} otherwise."
msgstr "この関数は@var{object}が整数かマーカーなら@code{t}、それ以外は@code{nil}をリターンする。"

#. type: defun
#: original_texis/markers.texi:139
#, no-wrap
msgid "number-or-marker-p object"
msgstr "number-or-marker-p object"

#. type: defun
#: original_texis/markers.texi:142
msgid "This function returns @code{t} if @var{object} is a number (either integer or floating point) or a marker, @code{nil} otherwise."
msgstr "この関数は@var{object}が数値(整数か浮動小数点数)またはマーカーなら@code{t}、それ以外は@code{nil}をリターンする。"

#. type: section
#: original_texis/markers.texi:145
#, no-wrap
msgid "Functions that Create Markers"
msgstr "Functions that Create Markers"

#. type: cindex
#: original_texis/markers.texi:146
#, no-wrap
msgid "creating markers"
msgstr "creating markers"

#. type: cindex
#: original_texis/markers.texi:147
#, no-wrap
msgid "marker creation"
msgstr "marker creation"

#. type: Plain text
#: original_texis/markers.texi:153
msgid "When you create a new marker, you can make it point nowhere, or point to the present position of point, or to the beginning or end of the accessible portion of the buffer, or to the same place as another given marker."
msgstr "マーカーを新たに作成する際には存在しない場所、ポイントの現在位置、バッファーのアクセス可能範囲の先頭や終端、または別の与えられたマーカーと同じ箇所を指すようにすることができます。"

#. type: Plain text
#: original_texis/markers.texi:156
msgid "The next four functions all return markers with insertion type @code{nil}.  @xref{Marker Insertion Types}."
msgstr "以下の4つの関数はすべて挿入タイプ@code{nil}のマーカーをリターンします。@ref{Marker Insertion Types}を参照してください。"

#. type: defun
#: original_texis/markers.texi:157
#, no-wrap
msgid "make-marker"
msgstr "make-marker"

#. type: defun
#: original_texis/markers.texi:160
msgid "This function returns a newly created marker that does not point anywhere."
msgstr "この関数はどこも指さないマーカーを新たに作成してリターンする。"

#. type: group
#: original_texis/markers.texi:165
#, no-wrap
msgid ""
"(make-marker)\n"
"     @result{} #<marker in no buffer>\n"
msgstr ""
"(make-marker)\n"
"     @result{} #<marker in no buffer>\n"

#. type: defun
#: original_texis/markers.texi:169
#, no-wrap
msgid "point-marker"
msgstr "point-marker"

#. type: defun
#: original_texis/markers.texi:173
msgid "This function returns a new marker that points to the present position of point in the current buffer.  @xref{Point}.  For an example, see @code{copy-marker}, below."
msgstr "この関数はカレントバッファーのポイント現在位置を指すマーカーを新たに作成してリターンする。@ref{Point}を参照のこと。例は以下の@code{copy-marker}を参照のこと。"

#. type: defun
#: original_texis/markers.texi:175
#, no-wrap
msgid "point-min-marker"
msgstr "point-min-marker"

#. type: defun
#: original_texis/markers.texi:179
msgid "This function returns a new marker that points to the beginning of the accessible portion of the buffer.  This will be the beginning of the buffer unless narrowing is in effect.  @xref{Narrowing}."
msgstr "この関数はバッファーのアクセス可能範囲の先頭を指すマーカーを新たに作成してリターンする。ナローイングが効力をもたなければ、これはバッファーの先頭になるだろう。@ref{Narrowing}を参照のこと。"

#. type: defun
#: original_texis/markers.texi:181
#, no-wrap
msgid "point-max-marker"
msgstr "point-max-marker"

#. type: defun
#: original_texis/markers.texi:185
msgid "This function returns a new marker that points to the end of the accessible portion of the buffer.  This will be the end of the buffer unless narrowing is in effect.  @xref{Narrowing}."
msgstr "この関数はバッファーのアクセス可能範囲の終端を指すマーカーを新たに作成してリターンする。ナローイングが効力をもたなければ、これはバッファーの終端になるだろう。@ref{Narrowing}を参照のこと。"

#. type: defun
#: original_texis/markers.texi:189
msgid "Here are examples of this function and @code{point-min-marker}, shown in a buffer containing a version of the source file for the text of this chapter."
msgstr "以下はこのチャプターのテキストのソースファイルのバージョンを含むバッファーにたいして、この関数と@code{point-min-marker}を使用する例。"

#. type: group
#: original_texis/markers.texi:196
#, no-wrap
msgid ""
"(point-min-marker)\n"
"     @result{} #<marker at 1 in markers.texi>\n"
"(point-max-marker)\n"
"     @result{} #<marker at 24080 in markers.texi>\n"
msgstr ""
"(point-min-marker)\n"
"     @result{} #<marker at 1 in markers.texi>\n"
"(point-max-marker)\n"
"     @result{} #<marker at 24080 in markers.texi>\n"

#. type: group
#: original_texis/markers.texi:201
#, no-wrap
msgid ""
"(narrow-to-region 100 200)\n"
"     @result{} nil\n"
msgstr ""
"(narrow-to-region 100 200)\n"
"     @result{} nil\n"

#. type: group
#: original_texis/markers.texi:205
#, no-wrap
msgid ""
"(point-min-marker)\n"
"     @result{} #<marker at 100 in markers.texi>\n"
msgstr ""
"(point-min-marker)\n"
"     @result{} #<marker at 100 in markers.texi>\n"

#. type: group
#: original_texis/markers.texi:209
#, no-wrap
msgid ""
"(point-max-marker)\n"
"     @result{} #<marker at 200 in markers.texi>\n"
msgstr ""
"(point-max-marker)\n"
"     @result{} #<marker at 200 in markers.texi>\n"

#. type: defun
#: original_texis/markers.texi:213
#, no-wrap
msgid "copy-marker &optional marker-or-integer insertion-type"
msgstr "copy-marker &optional marker-or-integer insertion-type"

#. type: defun
#: original_texis/markers.texi:219
msgid "If passed a marker as its argument, @code{copy-marker} returns a new marker that points to the same place and the same buffer as does @var{marker-or-integer}.  If passed an integer as its argument, @code{copy-marker} returns a new marker that points to position @var{marker-or-integer} in the current buffer."
msgstr "引数としてマーカーを渡されると、@code{copy-marker}は@var{marker-or-integer}が行うように同じバッファーの同じ位置を指すマーカーを新たに作成してリターンする。整数を渡されると、@code{copy-marker}はカレントバッファーの位置@var{marker-or-integer}を指すマーカーを新たに作成してリターンする。"

#. type: defun
#: original_texis/markers.texi:222
msgid "The new marker's insertion type is specified by the argument @var{insertion-type}.  @xref{Marker Insertion Types}."
msgstr "新たなマーカーの挿入タイプは引数@var{insertion-type}により指定される。@ref{Marker Insertion Types}を参照のこと。"

#. type: group
#: original_texis/markers.texi:236
#, no-wrap
msgid ""
"(copy-marker 0)\n"
"     @result{} #<marker at 1 in markers.texi>\n"
msgstr ""
"(copy-marker 0)\n"
"     @result{} #<marker at 1 in markers.texi>\n"

#. type: group
#: original_texis/markers.texi:241
#, no-wrap
msgid ""
"(copy-marker 90000)\n"
"     @result{} #<marker at 24080 in markers.texi>\n"
msgstr ""
"(copy-marker 90000)\n"
"     @result{} #<marker at 24080 in markers.texi>\n"

#. type: defun
#: original_texis/markers.texi:246
msgid "An error is signaled if @var{marker} is neither a marker nor an integer."
msgstr "@var{marker}がマーカーと整数のいずれでもなければエラーがシグナルされる。"

#. type: Plain text
#: original_texis/markers.texi:251
msgid "Two distinct markers are considered @code{equal} (even though not @code{eq}) to each other if they have the same position and buffer, or if they both point nowhere."
msgstr "2つのマーカーはそれらが同じバッファーの同じ位置、またはどちらも存在しない場所を指す場合には、(@code{eq}ではないが)@code{equal}とみなされます。"

#. type: group
#: original_texis/markers.texi:256
#, no-wrap
msgid ""
"(setq p (point-marker))\n"
"     @result{} #<marker at 2139 in markers.texi>\n"
msgstr ""
"(setq p (point-marker))\n"
"     @result{} #<marker at 2139 in markers.texi>\n"

#. type: group
#: original_texis/markers.texi:261
#, no-wrap
msgid ""
"(setq q (copy-marker p))\n"
"     @result{} #<marker at 2139 in markers.texi>\n"
msgstr ""
"(setq q (copy-marker p))\n"
"     @result{} #<marker at 2139 in markers.texi>\n"

#. type: group
#: original_texis/markers.texi:266
#, no-wrap
msgid ""
"(eq p q)\n"
"     @result{} nil\n"
msgstr ""
"(eq p q)\n"
"     @result{} nil\n"

#. type: group
#: original_texis/markers.texi:271
#, no-wrap
msgid ""
"(equal p q)\n"
"     @result{} t\n"
msgstr ""
"(equal p q)\n"
"     @result{} t\n"

#. type: cindex
#: original_texis/markers.texi:276
#, no-wrap
msgid "marker information"
msgstr "marker information"

#. type: Plain text
#: original_texis/markers.texi:280
msgid "This section describes the functions for accessing the components of a marker object."
msgstr "このセクションではマーカーオブジェクトの構成要素にアクセスする関数を説明します。"

#. type: defun
#: original_texis/markers.texi:281
#, no-wrap
msgid "marker-position marker"
msgstr "marker-position marker"

#. type: defun
#: original_texis/markers.texi:284
msgid "This function returns the position that @var{marker} points to, or @code{nil} if it points nowhere."
msgstr "この関数は@var{marker}が指す位置、存在しない場所なら@code{nil}をリターンする。"

#. type: defun
#: original_texis/markers.texi:286
#, no-wrap
msgid "marker-buffer marker"
msgstr "marker-buffer marker"

#. type: defun
#: original_texis/markers.texi:289
msgid "This function returns the buffer that @var{marker} points into, or @code{nil} if it points nowhere."
msgstr "この関数は@var{marker}がその内部を指すバッファー、存在しない場所を指す場合には@code{nil}をリターンする。"

#. type: group
#: original_texis/markers.texi:296
#, no-wrap
msgid ""
"(setq m (make-marker))\n"
"     @result{} #<marker in no buffer>\n"
msgstr ""
"(setq m (make-marker))\n"
"     @result{} #<marker in no buffer>\n"

#. type: group
#: original_texis/markers.texi:300
#, no-wrap
msgid ""
"(marker-position m)\n"
"     @result{} nil\n"
msgstr ""
"(marker-position m)\n"
"     @result{} nil\n"

#. type: group
#: original_texis/markers.texi:304
#, no-wrap
msgid ""
"(marker-buffer m)\n"
"     @result{} nil\n"
msgstr ""
"(marker-buffer m)\n"
"     @result{} nil\n"

#. type: group
#: original_texis/markers.texi:309
#, no-wrap
msgid ""
"(set-marker m 3770 (current-buffer))\n"
"     @result{} #<marker at 3770 in markers.texi>\n"
msgstr ""
"(set-marker m 3770 (current-buffer))\n"
"     @result{} #<marker at 3770 in markers.texi>\n"

#. type: group
#: original_texis/markers.texi:313
#, no-wrap
msgid ""
"(marker-buffer m)\n"
"     @result{} #<buffer markers.texi>\n"
msgstr ""
"(marker-buffer m)\n"
"     @result{} #<buffer markers.texi>\n"

#. type: group
#: original_texis/markers.texi:317
#, no-wrap
msgid ""
"(marker-position m)\n"
"     @result{} 3770\n"
msgstr ""
"(marker-position m)\n"
"     @result{} 3770\n"

#. type: cindex
#: original_texis/markers.texi:324
#, no-wrap
msgid "insertion type of a marker"
msgstr "insertion type of a marker"

#. type: Plain text
#: original_texis/markers.texi:331
msgid "When you insert text directly at the place where a marker points, there are two possible ways to relocate that marker: it can point before the inserted text, or point after it.  You can specify which one a given marker should do by setting its @dfn{insertion type}.  Note that use of @code{insert-before-markers} ignores markers' insertion types, always relocating a marker to point after the inserted text."
msgstr "マーカーが指す位置に直接テキストを挿入する際には、そのマーカーを再配置するために利用可能な手段が2つあります。そのマーカーは挿入されたテキストの前か後を指すことができます。マーカーの@dfn{挿入タイプ(insertion type)}を指定することにより、マーカーがどちらを行うか指定できます。@code{insert-before-markers}を使用する場合には、マーカーの挿入タイプを無視して常にマーカーが挿入されたテキストの後を指すよう再配置されることに注意してください。"

#. type: defun
#: original_texis/markers.texi:332
#, no-wrap
msgid "set-marker-insertion-type marker type"
msgstr "set-marker-insertion-type marker type"

#. type: defun
#: original_texis/markers.texi:337
msgid "This function sets the insertion type of marker @var{marker} to @var{type}.  If @var{type} is @code{t}, @var{marker} will advance when text is inserted at its position.  If @var{type} is @code{nil}, @var{marker} does not advance when text is inserted there."
msgstr "この関数はマーカー@var{marker}の挿入タイプを@var{type}にセットする。@var{type}が@code{t}なら、テキスト挿入時に@var{marker}はその位置まで進められるだろう。@var{type}が@code{nil}なら、テキスト挿入時に@var{marker}はそこまで進められることはない。"

#. type: defun
#: original_texis/markers.texi:339
#, no-wrap
msgid "marker-insertion-type marker"
msgstr "marker-insertion-type marker"

#. type: defun
#: original_texis/markers.texi:341
msgid "This function reports the current insertion type of @var{marker}."
msgstr "この関数は@var{marker}のカレント挿入タイプを報告する。"

#. type: Plain text
#: original_texis/markers.texi:347
msgid "All functions that create markers without accepting an argument that specifies the insertion type, create them with insertion type @code{nil} (@pxref{Creating Markers}).  Also, the mark has, by default, insertion type @code{nil}."
msgstr "挿入タイプを指定するための引数を受け取らずにマーカーを作成するすべての関数は、挿入タイプ@code{nil}でマーカーを作成します。マークもデフォルトでは挿入タイプ@code{nil}をもちます。"

#. type: section
#: original_texis/markers.texi:349
#, no-wrap
msgid "Moving Marker Positions"
msgstr "Moving Marker Positions"

#. type: cindex
#: original_texis/markers.texi:350
#, no-wrap
msgid "moving markers"
msgstr "moving markers"

#. type: cindex
#: original_texis/markers.texi:351
#, no-wrap
msgid "marker, how to move position"
msgstr "marker, how to move position"

#. type: Plain text
#: original_texis/markers.texi:358
msgid "This section describes how to change the position of an existing marker.  When you do this, be sure you know whether the marker is used outside of your program, and, if so, what effects will result from moving it---otherwise, confusing things may happen in other parts of Emacs."
msgstr "このセクションでは既存マーカーの位置を変更する方法について説明します。これを行う際にはそのマーカーがあなたのプログラム外部に使用されているかどうか、もし使用されているならマーカーを移動した結果どのような影響が生じるかを確実に理解する必要があります。さもないとEmacsの他の部分で混乱した出来事が発生するかもしれません。"

#. type: defun
#: original_texis/markers.texi:359
#, no-wrap
msgid "set-marker marker position &optional buffer"
msgstr "set-marker marker position &optional buffer"

#. type: defun
#: original_texis/markers.texi:363
msgid "This function moves @var{marker} to @var{position} in @var{buffer}.  If @var{buffer} is not provided, it defaults to the current buffer."
msgstr "この関数は@var{buffer}内で@var{marker}を@var{position}に移動する。@var{buffer}が与えられなかった場合のデフォルトはカレントバッファー。"

#. type: defun
#: original_texis/markers.texi:373
msgid "If @var{position} is @code{nil} or a marker that points nowhere, then @var{marker} is set to point nowhere."
msgstr "@var{position}が@code{nil}、または存在しない場所を指すマーカーなら、@var{marker}は存在しない場所を指すようにセットされる。"

#. type: defun
#: original_texis/markers.texi:375
msgid "The value returned is @var{marker}."
msgstr "リターン値は@var{marker}。"

#. type: group
#: original_texis/markers.texi:380
#, no-wrap
msgid ""
"(setq m (point-marker))\n"
"     @result{} #<marker at 4714 in markers.texi>\n"
msgstr ""
"(setq m (point-marker))\n"
"     @result{} #<marker at 4714 in markers.texi>\n"

#. type: group
#: original_texis/markers.texi:384
#, no-wrap
msgid ""
"(set-marker m 55)\n"
"     @result{} #<marker at 55 in markers.texi>\n"
msgstr ""
"(set-marker m 55)\n"
"     @result{} #<marker at 55 in markers.texi>\n"

#. type: group
#: original_texis/markers.texi:388
#, no-wrap
msgid ""
"(setq b (get-buffer \"foo\"))\n"
"     @result{} #<buffer foo>\n"
msgstr ""
"(setq b (get-buffer \"foo\"))\n"
"     @result{} #<buffer foo>\n"

#. type: group
#: original_texis/markers.texi:392
#, no-wrap
msgid ""
"(set-marker m 0 b)\n"
"     @result{} #<marker at 1 in foo>\n"
msgstr ""
"(set-marker m 0 b)\n"
"     @result{} #<marker at 1 in foo>\n"

#. type: defun
#: original_texis/markers.texi:396
#, no-wrap
msgid "move-marker marker position &optional buffer"
msgstr "move-marker marker position &optional buffer"

#. type: defun
#: original_texis/markers.texi:398
msgid "This is another name for @code{set-marker}."
msgstr "これは@code{set-marker}の別名。"

#. type: cindex
#: original_texis/markers.texi:402
#, no-wrap
msgid "mark, the"
msgstr "mark, the"

#. type: Plain text
#: original_texis/markers.texi:409
msgid "Each buffer has a special marker, which is designated @dfn{the mark}.  When a buffer is newly created, this marker exists but does not point anywhere; this means that the mark doesn't exist in that buffer yet.  Subsequent commands can set the mark."
msgstr "バッファーはそれぞれ@dfn{マーク(mark)}というバッファー専用の特別なマーカーをもちます。バッファーが新たに作成される際には、このマーカーはすでに存在していますがどこも指していません。これはそのバッファーにはまだマークが存在しないことを意味します。それ以降のコマンドがマークをセットできます。"

#. type: Plain text
#: original_texis/markers.texi:419
msgid "The mark specifies a position to bound a range of text for many commands, such as @code{kill-region} and @code{indent-rigidly}.  These commands typically act on the text between point and the mark, which is called the @dfn{region}.  If you are writing a command that operates on the region, don't examine the mark directly; instead, use @code{interactive} with the @samp{r} specification.  This provides the values of point and the mark as arguments to the command in an interactive call, but permits other Lisp programs to specify arguments explicitly.  @xref{Interactive Codes}."
msgstr "マークは@code{kill-region}や@code{indent-rigidly}のような多くのコマンドにたいしてテキスト範囲をバインドするための位置を指定します。これらのコマンドは、通常はポイントとマークの間の@dfn{リージョン(region)}と呼ばれるテキストに作用します。リージョンを操作するコマンドを記述する場合にはマークを直接調べず、かわりに@samp{r}指定とともに@code{interactive}を使用してください。このようにすればインタラクティブな呼び出しではコマンドの引数としてポイントとマークの値が提供され、かつ他のLispプログラムは引数を明示的に指定できます。@ref{Interactive Codes}を参照してください。"

#. type: Plain text
#: original_texis/markers.texi:426
msgid "Some commands set the mark as a side-effect.  Commands should do this only if it has a potential use to the user, and never for their own internal purposes.  For example, the @code{replace-regexp} command sets the mark to the value of point before doing any replacements, because this enables the user to move back there conveniently after the replace is finished."
msgstr "いくつかのコマンドは副作用(side-effect)としてマークをセットします。コマンドはユーザーがそれを使用する可能性がある場合のみマークをセットするべきであって、決してコマンドの内部的な目的にたいして使用してはなりません。たとえば@code{replace-regexp}コマンドは何らかの置換を行う前にマークにポイントの値をセットしますが、その理由はこれによりユーザーが置換を終えた後に簡単にその位置に戻ることが可能になるからです。"

#. type: Plain text
#: original_texis/markers.texi:435
msgid "Once the mark exists in a buffer, it normally never ceases to exist.  However, it may become @dfn{inactive}, if Transient Mark mode is enabled.  The buffer-local variable @code{mark-active}, if non-@code{nil}, means that the mark is active.  A command can call the function @code{deactivate-mark} to deactivate the mark directly, or it can request deactivation of the mark upon return to the editor command loop by setting the variable @code{deactivate-mark} to a non-@code{nil} value."
msgstr "一度バッファー内にマークが存在すれば、その存在は通常は決して消えることはありません。しかしTransient Markモードが有効だとマークが@dfn{非アクティブ(inactive)}になることはあります。バッファーローカル変数@code{mark-active}が非@code{nil}なら、それはマークがアクティブであることを意味します。コマンドはマークを直接非アクティブにするために関数@code{deactivate-mark}を呼び出すことができ、変数@code{deactivate-mark}を非@code{nil}値にセットすることにより、エディターコマンドループ(editor command loop)にリターン時にマークの非アクティブ化を要求できます。"

#. type: Plain text
#: original_texis/markers.texi:441
msgid "If Transient Mark mode is enabled, certain editing commands that normally apply to text near point, apply instead to the region when the mark is active.  This is the main motivation for using Transient Mark mode.  (Another is that this enables highlighting of the region when the mark is active.  @xref{Display}.)"
msgstr "Transient Markモードが有効だと、通常ならポイント近傍に適用される特定の編集コマンドはマークがアクティブなときはかわりにリージョンに適用されます。これがTransient Markモードを使用する主な動機です(他にもマークアクティブ時にはリージョンのハイライトが有効になるという理由もある。@ref{Display}を参照)。"

#. type: cindex
#: original_texis/markers.texi:442
#, no-wrap
msgid "mark ring"
msgstr "mark ring"

#. type: Plain text
#: original_texis/markers.texi:449
msgid "In addition to the mark, each buffer has a @dfn{mark ring} which is a list of markers containing previous values of the mark.  When editing commands change the mark, they should normally save the old value of the mark on the mark ring.  The variable @code{mark-ring-max} specifies the maximum number of entries in the mark ring; once the list becomes this long, adding a new element deletes the last element."
msgstr "マークに加えてバッファーはそれぞれ@dfn{マークリング(mark ring)}をもっています。これは以前のマーク値を含むマーカーのリストです。編集コマンドがマークを変更する際には、それらのコマンドは通常はマークの旧値をマークリングに保存するべきです。変数@code{mark-ring-max}はマークリング内のエントリー最大数を指定します。リストがこの長さに達すると最後の要素を削除して新たな要素が追加されます。"

#. type: Plain text
#: original_texis/markers.texi:453
msgid "There is also a separate global mark ring, but that is used only in a few particular user-level commands, and is not relevant to Lisp programming.  So we do not describe it here."
msgstr "これとは別にグローバルマークリング(global mark ring)がありますが、それは少数の特定のユーザーレベルコマンドでのみ使用されて、Lispプログラムとは関連しないのでここでは説明しません。"

#. type: defun
#: original_texis/markers.texi:454
#, no-wrap
msgid "mark &optional force"
msgstr "mark &optional force"

#. type: cindex
#: original_texis/markers.texi:455
#, no-wrap
msgid "current buffer mark"
msgstr "current buffer mark"

#. type: defun
#: original_texis/markers.texi:458
msgid "This function returns the current buffer's mark position as an integer, or @code{nil} if no mark has ever been set in this buffer."
msgstr "この関数はカレントバッファーのマーク位置を整数でリターンする。そのバッファー内でそれまでマークがセットされていなければ@code{nil}をリターンする。"

#. type: defun
#: original_texis/markers.texi:464
msgid "If Transient Mark mode is enabled, and @code{mark-even-if-inactive} is @code{nil}, @code{mark} signals an error if the mark is inactive.  However, if @var{force} is non-@code{nil}, then @code{mark} disregards inactivity of the mark, and returns the mark position (or @code{nil})  anyway."
msgstr "Transient Markモードが有効、かつ@code{mark-even-if-inactive}が@code{nil}の場合、マークが非アクティブなら@code{mark}はエラーをシグナルする。しかし、@var{force}が非@code{nil}なら、@code{mark}はマークの非アクティブ性を無視して、何にせよマーク位置(か@code{nil})をリターンする。"

#. type: defun
#: original_texis/markers.texi:466
#, no-wrap
msgid "mark-marker"
msgstr "mark-marker"

#. type: defun
#: original_texis/markers.texi:471
msgid "This function returns the marker that represents the current buffer's mark.  It is not a copy, it is the marker used internally.  Therefore, changing this marker's position will directly affect the buffer's mark.  Don't do that unless that is the effect you want."
msgstr "この関数はカレントバッファーのマークを表すマーカーをリターンする。これはコピーではなく内部的に使用されるマーカー。したがってこのマーカー位置にたいする変更は、そのバッファーのマークに直接影響する。それが望む効果でなければこれを行ってはならない。"

#. type: group
#: original_texis/markers.texi:476
#, no-wrap
msgid ""
"(setq m (mark-marker))\n"
"     @result{} #<marker at 3420 in markers.texi>\n"
msgstr ""
"(setq m (mark-marker))\n"
"     @result{} #<marker at 3420 in markers.texi>\n"

#. type: group
#: original_texis/markers.texi:480
#, no-wrap
msgid ""
"(set-marker m 100)\n"
"     @result{} #<marker at 100 in markers.texi>\n"
msgstr ""
"(set-marker m 100)\n"
"     @result{} #<marker at 100 in markers.texi>\n"

#. type: group
#: original_texis/markers.texi:484
#, no-wrap
msgid ""
"(mark-marker)\n"
"     @result{} #<marker at 100 in markers.texi>\n"
msgstr ""
"(mark-marker)\n"
"     @result{} #<marker at 100 in markers.texi>\n"

#. type: defun
#: original_texis/markers.texi:491
msgid "Like any marker, this marker can be set to point at any buffer you like.  If you make it point at any buffer other than the one of which it is the mark, it will yield perfectly consistent, but rather odd, results.  We recommend that you not do it!"
msgstr "他のマーカー同じように、このマーカーを任意のバッファー位置にセットできる。このマーカーにたいして、これがマークする以外のバッファーを指すようにすると、完全に整合性があるものの、いささか奇妙な結果を得ることになるだろう。わたしたちはこれを行わないことを推奨する!"

#. type: defun
#: original_texis/markers.texi:493
#, no-wrap
msgid "set-mark position"
msgstr "set-mark position"

#. type: defun
#: original_texis/markers.texi:496
msgid "This function sets the mark to @var{position}, and activates the mark.  The old value of the mark is @emph{not} pushed onto the mark ring."
msgstr "この関数はマークを@var{position}にセットして、そのマークをアクティブにする。マークの旧値はマークリングに@emph{pushされない}。"

#. type: defun
#: original_texis/markers.texi:502
msgid "@strong{Please note:} Use this function only if you want the user to see that the mark has moved, and you want the previous mark position to be lost.  Normally, when a new mark is set, the old one should go on the @code{mark-ring}.  For this reason, most applications should use @code{push-mark} and @code{pop-mark}, not @code{set-mark}."
msgstr "@strong{注意:} マークが移動したことをユーザーに確認させて、かつ前のマーク位置が失われることを望む場合のみこの関数を使用すること。通常はマークセット時に古いマークを@code{mark-ring}にpushすること。この理由により、ほとんどのアプリケーションは@code{set-mark}ではなく、@code{push-mark}と@code{pop-mark}を使用するべきである。"

#. type: defun
#: original_texis/markers.texi:510
msgid "Novice Emacs Lisp programmers often try to use the mark for the wrong purposes.  The mark saves a location for the user's convenience.  An editing command should not alter the mark unless altering the mark is part of the user-level functionality of the command.  (And, in that case, this effect should be documented.)  To remember a location for internal use in the Lisp program, store it in a Lisp variable.  For example:"
msgstr "Emacs Lisp初心者のプログラマーは誤った用途にマークの使用を試みがちである。ユーザーの利便のために位置を保存するのがマークである。編集コマンドはマーク変更がコマンドのユーザーレベル機能の一部でない限りマークを変更しないこと(そのような場合にはその効果をドキュメントするべきである)。Lispプログラムの内部的な使用のために位置を記憶するためには、マークをLisp変数に格納すること。たとえば:"

#. type: group
#: original_texis/markers.texi:516
#, no-wrap
msgid ""
"(let ((beg (point)))\n"
"  (forward-line 1)\n"
"  (delete-region beg (point))).\n"
msgstr ""
"(let ((beg (point)))\n"
"  (forward-line 1)\n"
"  (delete-region beg (point)))\n"

#. type: defun
#: original_texis/markers.texi:520
#, no-wrap
msgid "push-mark &optional position nomsg activate"
msgstr "push-mark &optional position nomsg activate"

#. type: defun
#: original_texis/markers.texi:526
msgid "This function sets the current buffer's mark to @var{position}, and pushes a copy of the previous mark onto @code{mark-ring}.  If @var{position} is @code{nil}, then the value of point is used."
msgstr "この関数はカレントバッファーのマークを@var{position}にセットして、前のマークを@code{mark-ring}にpushする。@var{position}が@code{nil}ならポイントの値を使用する。"

#. type: defun
#: original_texis/markers.texi:529
msgid "The function @code{push-mark} normally @emph{does not} activate the mark.  To do that, specify @code{t} for the argument @var{activate}."
msgstr "関数@code{push-mark}は通常はマークをアクティブに@emph{しない}。アクティブにする場合には引数@var{activate}に@code{t}を指定する。"

#. type: defun
#: original_texis/markers.texi:532
msgid "A @samp{Mark set} message is displayed unless @var{nomsg} is non-@code{nil}."
msgstr "@var{nomsg}が@code{nil}ならメッセージ@samp{Mark set}が表示される。"

#. type: defun
#: original_texis/markers.texi:534
#, no-wrap
msgid "pop-mark"
msgstr "pop-mark"

#. type: defun
#: original_texis/markers.texi:542
msgid "This function pops off the top element of @code{mark-ring} and makes that mark become the buffer's actual mark.  This does not move point in the buffer, and it does nothing if @code{mark-ring} is empty.  It deactivates the mark."
msgstr "この関数は@code{mark-ring}のトップ要素をpopして、そのマークをバッファーの実際のマークにする。これはバッファー内のポイントを移動せず、@code{mark-ring}が空なら何も行わない。これはマークを非アクティブ化する。"

#. type: defopt
#: original_texis/markers.texi:544
#, no-wrap
msgid "transient-mark-mode"
msgstr "transient-mark-mode"

#. type: defopt
#: original_texis/markers.texi:549
msgid "This variable, if non-@code{nil}, enables Transient Mark mode.  In Transient Mark mode, every buffer-modifying primitive sets @code{deactivate-mark}.  As a consequence, most commands that modify the buffer also deactivate the mark."
msgstr "この変数が非@code{nil}ならTransient Markモードを有効にする。Transient Markモードでは、すべてのバッファー変更プリミティブが@code{deactivate-mark}をセットする。結果としてバッファーを変更するほとんどのコマンドもマークを非アクティブにする。"

#. type: defopt
#: original_texis/markers.texi:554
msgid "When Transient Mark mode is enabled and the mark is active, many commands that normally apply to the text near point instead apply to the region.  Such commands should use the function @code{use-region-p} to test whether they should operate on the region.  @xref{The Region}."
msgstr "Transient Markモードが有効かつマークがアクティブなら、通常はポイント近傍に適用されるコマンドの多くは、かわりにリージョンに適用される。そのようなコマンド、リージョンを処理すべきかどうかをテストするために、関数@code{use-region-p}を使用すること。@ref{The Region}を参照のこと。"

#. type: defopt
#: original_texis/markers.texi:564
msgid "Lisp programs can set @code{transient-mark-mode} to non-@code{nil}, non-@code{t} values to enable Transient Mark mode temporarily.  If the value is @code{lambda}, Transient Mark mode is automatically turned off after any action, such as buffer modification, that would normally deactivate the mark.  If the value is @w{@code{(only . @var{oldval})}}, then @code{transient-mark-mode} is set to the value @var{oldval} after any subsequent command that moves point and is not shift-translated (@pxref{Key Sequence Input, shift-translation}), or after any other action that would normally deactivate the mark."
msgstr "Lispプログラムは一時的にTransient Markモードを有効にするために、@code{transient-mark-mode}を@code{nil}でも@code{t}でもない値にセットできる。値が@code{lambda}なら、通常ならマークを非アクティブ化するバッファー変更ような操作の後に、Transient Markモードを自動的にオフに切り替える。値が@w{@code{(only . @var{oldval})}}なら後続のコマンドがポイントを移動かつシフト変換(@ref{Key Sequence Input, shift-translation}を参照)されていない場合、あるいは通常はマークを非アクティブにするその他の操作の場合にに、@code{transient-mark-mode}に値@var{oldval}をセットする。"

#. type: defopt
#: original_texis/markers.texi:566
#, no-wrap
msgid "mark-even-if-inactive"
msgstr "mark-even-if-inactive"

#. type: defopt
#: original_texis/markers.texi:572
msgid "If this is non-@code{nil}, Lisp programs and the Emacs user can use the mark even when it is inactive.  This option affects the behavior of Transient Mark mode.  When the option is non-@code{nil}, deactivation of the mark turns off region highlighting, but commands that use the mark behave as if the mark were still active."
msgstr "これが非@code{nil}なLispプログラムおよびEmacsユーザーは、たとえ非アクティブでもマークを使用できる。このオプションはTransient Markモードの動作に影響を及ぼす。このオプションが非@code{nil}ならマークの非アクティブ化によりリージョンのハイライトはオフに切り替えられるが、マークを使用するコマンドは、あたかもマークがアクティブであるかのように振る舞う。"

#. type: defvar
#: original_texis/markers.texi:574
#, no-wrap
msgid "deactivate-mark"
msgstr "deactivate-mark"

#. type: defvar
#: original_texis/markers.texi:580
msgid "If an editor command sets this variable non-@code{nil}, then the editor command loop deactivates the mark after the command returns (if Transient Mark mode is enabled).  All the primitives that change the buffer set @code{deactivate-mark}, to deactivate the mark when the command is finished.  Setting this variable makes it buffer-local."
msgstr "エディターコマンドがこの変数を非@code{nil}にセットすると、エディターコマンドループはコマンドのリターン後に、(Transient Markモードが有効なら)マークを非アクティブにする。バッファーを変更するすべてのプリミティブは、コマンド終了時にマークを非アクティブにするために@code{deactivate-mark}をセットする。この変数はセットすらことによりバッファーローカルになる。"

#. type: defvar
#: original_texis/markers.texi:585
msgid "To write Lisp code that modifies the buffer without causing deactivation of the mark at the end of the command, bind @code{deactivate-mark} to @code{nil} around the code that does the modification.  For example:"
msgstr "コマンド終了時にマークを非アクティブにすることなくバッファーを変更するLispコードを記述するためには、変更を行うコードの周辺で@code{deactivate-mark}を@code{nil}にバインドすること。たとえば:"

#. type: example
#: original_texis/markers.texi:589
#, no-wrap
msgid ""
"(let (deactivate-mark)\n"
"  (insert \" \"))\n"
msgstr ""
"(let (deactivate-mark)\n"
"  (insert \" \"))\n"

#. type: defun
#: original_texis/markers.texi:592
#, no-wrap
msgid "deactivate-mark &optional force"
msgstr "deactivate-mark &optional force"

#. type: defun
#: original_texis/markers.texi:596
msgid "If Transient Mark mode is enabled or @var{force} is non-@code{nil}, this function deactivates the mark and runs the normal hook @code{deactivate-mark-hook}.  Otherwise, it does nothing."
msgstr "Transient Markモードが有効、または@var{force}が非@code{nil}なら、この関数はマークを非アクティブにしてノーマルフック@code{deactivate-mark-hook}を実行して、それ以外は何も行わない。"

#. type: defvar
#: original_texis/markers.texi:598
#, no-wrap
msgid "mark-active"
msgstr "mark-active"

#. type: defvar
#: original_texis/markers.texi:604
msgid "The mark is active when this variable is non-@code{nil}.  This variable is always buffer-local in each buffer.  Do @emph{not} use the value of this variable to decide whether a command that normally operates on text near point should operate on the region instead.  Use the function @code{use-region-p} for that (@pxref{The Region})."
msgstr "この変数が非@code{nil}ならマークはアクティブ。この変数はそれぞれのバッファーにたいして常にローカル。通常はポイント近傍を操作するコマンドが、かわりにリージョンを操作すべきかどうかを判断するためにこの変数の値を@emph{使用してはならない}。その目的にたいしては関数@code{use-region-p}を使用すること(@ref{The Region}を参照)。"

#. type: defvar
#: original_texis/markers.texi:606
#, no-wrap
msgid "activate-mark-hook"
msgstr "activate-mark-hook"

#. type: defvarx
#: original_texis/markers.texi:607
#, no-wrap
msgid "deactivate-mark-hook"
msgstr "deactivate-mark-hook"

#. type: defvar
#: original_texis/markers.texi:612
msgid "These normal hooks are run, respectively, when the mark becomes active and when it becomes inactive.  The hook @code{activate-mark-hook} is also run at the end of the command loop if the mark is active and it is possible that the region may have changed."
msgstr "これらのノーマルフックはマークがアクティブや非アクティブになった際に順次実行される。マークがアクティブかつリージョンが変更された可能性があるなら、コマンドループの最後にフック@code{activate-mark-hook}も実行される。"

#. type: defun
#: original_texis/markers.texi:622
#, no-wrap
msgid "handle-shift-selection"
msgstr "handle-shift-selection"

#. type: defun
#: original_texis/markers.texi:629
msgid "This function implements the shift-selection behavior of point-motion commands.  @xref{Shift Selection,,, emacs, The GNU Emacs Manual}.  It is called automatically by the Emacs command loop whenever a command with a @samp{^} character in its @code{interactive} spec is invoked, before the command itself is executed (@pxref{Interactive Codes, ^})."
msgstr "この関数はポイント移動コマンドのシフト選択(shift-selection)の動作を実装する。@ref{Shift Selection,,, emacs, The GNU Emacs Manual}を参照のこと。これは@code{interactive}指定に文字@samp{^}を含むコマンドの呼び出し時は常に、そのコマンド自身を実行する前にEmacsコマンドループにより自動的に呼び出される(@ref{Interactive Codes, ^}を参照)。"

#. type: defun
#: original_texis/markers.texi:637
msgid "If @code{shift-select-mode} is non-@code{nil} and the current command was invoked via shift translation (@pxref{Key Sequence Input, shift-translation}), this function sets the mark and temporarily activates the region, unless the region was already temporarily activated in this way.  Otherwise, if the region has been activated temporarily, it deactivates the mark and restores the variable @code{transient-mark-mode} to its earlier value."
msgstr "@code{shift-select-mode}が非@code{nil}、かつカレントコマンドがシフト変換(@ref{Key Sequence Input, shift-translation}を参照)を通じて呼び出された場合には、この関数はマークをセットして一時的にリージョンをアクティブにする(すでにこの方法によりリージョンが一時的にアクティブにされている場合を除く)。それ以外ではリージョンが一時的にアクティブにされていればマークを非アクティブにして、変数@code{transient-mark-mode}に前の値をリストアする。"

#. type: defvar
#: original_texis/markers.texi:639
#, no-wrap
msgid "mark-ring"
msgstr "mark-ring"

#. type: defvar
#: original_texis/markers.texi:642
msgid "The value of this buffer-local variable is the list of saved former marks of the current buffer, most recent first."
msgstr "このバッファーローカル変数の値は、もっとも最近のものが先頭となるような、以前に保存されたカレントバッファーのマークのリスト。"

#. type: group
#: original_texis/markers.texi:649
#, no-wrap
msgid ""
"mark-ring\n"
"@result{} (#<marker at 11050 in markers.texi>\n"
"    #<marker at 10832 in markers.texi>\n"
"    @dots{})\n"
msgstr ""
"mark-ring\n"
"@result{} (#<marker at 11050 in markers.texi>\n"
"    #<marker at 10832 in markers.texi>\n"
"    @dots{})\n"

#. type: defopt
#: original_texis/markers.texi:653
#, no-wrap
msgid "mark-ring-max"
msgstr "mark-ring-max"

#. type: defopt
#: original_texis/markers.texi:657
msgid "The value of this variable is the maximum size of @code{mark-ring}.  If more marks than this are pushed onto the @code{mark-ring}, @code{push-mark} discards an old mark when it adds a new one."
msgstr "この変数の値は@code{mark-ring}の最大サイズ。これより多くのマークが@code{mark-ring}にpushされると、@code{push-mark}新たなマーク追加時には古いマークを破棄する。"

#. type: cindex
#: original_texis/markers.texi:662
#, no-wrap
msgid "@code{delete-selection}, symbol property"
msgstr "@code{delete-selection}, symbol property"

#. type: findex
#: original_texis/markers.texi:663
#, no-wrap
msgid "delete-selection-helper"
msgstr "delete-selection-helper"

#. type: findex
#: original_texis/markers.texi:664
#, no-wrap
msgid "delete-selection-pre-hook"
msgstr "delete-selection-pre-hook"

#. type: Plain text
#: original_texis/markers.texi:679
msgid "When Delete Selection mode (@pxref{Using Region, Delete Selection, , emacs, The GNU Emacs Manual}) is enabled, commands that operate on the active region (a.k.a.@: ``selection'') behave slightly differently.  This works by adding the function @code{delete-selection-pre-hook} to the @code{pre-command-hook} (@pxref{Command Overview}).  That function calls @code{delete-selection-helper} to delete the selection as appropriate for the command.  If you want to adapt a command to Delete Selection mode, put the @code{delete-selection} property on the function's symbol (@pxref{Symbol Plists}); commands that don't have this property on their symbol won't delete the selection.  This property can have one of several values to tailor the behavior to what the command is supposed to do; see the doc strings of @code{delete-selection-pre-hook} and @code{delete-selection-helper} for the details."
msgstr "Delete Selectionモード(@ref{Using Region, Delete Selection, , emacs, The GNU Emacs Manual}を参照)が有効な際には、アクティブリージョン(いわゆる``選択'')を操作するコマンドは若干異なる振る舞いをします。これは@code{pre-command-hook}に関数@code{delete-selection-pre-hook}を追加することにより機能します(@ref{Command Overview}を参照)。この関数はそのコマンドにたいして適切なように選択を削除するために@code{delete-selection-helper}を呼び出します。コマンドをDelete Selectionモードに適応させたければ、その関数シンボルの@code{delete-selection}プロパティにputしてください(@ref{Symbol Plists}を参照)。シンボルにこのプロパティをもたないコマンドは選択を削除しません。そのコマンドに期待される挙動を調整するために、このプロパティはいくつかの値のいずれかをもつことができます。詳細は@code{delete-selection-pre-hook}と@code{delete-selection-helper}のドキュメント文字列を参照してください。"

#. type: cindex
#: original_texis/markers.texi:687
#, no-wrap
msgid "region"
msgstr "region"

#. type: Plain text
#: original_texis/markers.texi:693
msgid "The text between point and the mark is known as @dfn{the region}.  Various functions operate on text delimited by point and the mark, but only those functions specifically related to the region itself are described here."
msgstr "ポイントとマークの間のテキストは、@dfn{リージョン(region)}という名で知られています。さまざまな関数がポイントとマークで区切られたテキストを操作しますが、ここではリージョンそのものに特に関連する関数だけを説明します。"

#. type: Plain text
#: original_texis/markers.texi:698
msgid "The next two functions signal an error if the mark does not point anywhere.  If Transient Mark mode is enabled and @code{mark-even-if-inactive} is @code{nil}, they also signal an error if the mark is inactive."
msgstr "以下の2つの関数はマークが何処も指していなければエラーをシグナルします。Transient Markモードが有効、かつ@code{mark-even-if-inactive}が@code{nil}な、マークが非アクティブな場合にエラーをシグナルします。"

#. type: defun
#: original_texis/markers.texi:699
#, no-wrap
msgid "region-beginning"
msgstr "region-beginning"

#. type: defun
#: original_texis/markers.texi:703
msgid "This function returns the position of the beginning of the region (as an integer).  This is the position of either point or the mark, whichever is smaller."
msgstr "この関数はリージョンの先頭位置を、(整数として)リターンする。これはポイントかマークのいずれか小さいほうの位置。"

#. type: defun
#: original_texis/markers.texi:705
#, no-wrap
msgid "region-end"
msgstr "region-end"

#. type: defun
#: original_texis/markers.texi:709
msgid "This function returns the position of the end of the region (as an integer).  This is the position of either point or the mark, whichever is larger."
msgstr "この関数はリージョンの終端位置を、(整数として)リターンする。これはポイントかマークのいずれか大きいほうの位置。"

#. type: Plain text
#: original_texis/markers.texi:717
msgid "Instead of using @code{region-beginning} and @code{region-end}, a command designed to operate on a region should normally use @code{interactive} with the @samp{r} specification to find the beginning and end of the region.  This lets other Lisp programs specify the bounds explicitly as arguments.  @xref{Interactive Codes}."
msgstr "リージョンにたいして操作を行うようにデザインされたコマンドがリージョンの先頭と終端を探すためには、@code{region-beginning}や@code{region-end}を使用するかわりに、通常は@samp{r}指定とともに@code{interactive}を使用するべきです。これにより他のLispプログラムが引数として明示的にリージョンの境界を指定できるようになります。@ref{Interactive Codes}を参照してください。。"

#. type: defun
#: original_texis/markers.texi:718
#, no-wrap
msgid "use-region-p"
msgstr "use-region-p"

#. type: defun
#: original_texis/markers.texi:723
msgid "This function returns @code{t} if Transient Mark mode is enabled, the mark is active, and there is a valid region in the buffer.  This function is intended to be used by commands that operate on the region, instead of on text near point, when the mark is active."
msgstr "この関数はTransient Markモードが有効でマークがアクティブであり、かつバッファー内に有効なリージョンがあれば@code{t}をリターンする。この関数はマークアクティブ時にはポイント近傍のテキストのかわりにリージョンを操作するコマンドにより使用されることを意図している。"

#. type: cindex
#: original_texis/markers.texi:724
#, no-wrap
msgid "empty region"
msgstr "empty region"

#. type: vindex
#: original_texis/markers.texi:725
#, no-wrap
msgid "use-empty-active-region"
msgstr "use-empty-active-region"

#. type: defun
#: original_texis/markers.texi:732
msgid "A region is valid if it has a non-zero size, or if the user option @code{use-empty-active-region} is non-@code{nil} (by default, it is @code{nil}).  The function @code{region-active-p} is similar to @code{use-region-p}, but considers all regions as valid.  In most cases, you should not use @code{region-active-p}, since if the region is empty it is often more appropriate to operate on point."
msgstr "リージョンはそれが非0のサイズをもつか、あるいはユーザーオプション@code{use-empty-active-region}が非@code{nil} (デフォルトは@code{nil})なら有効。関数@code{region-active-p}は@code{use-region-p}と同様だが、すべてのリージョンを有効とみなす。リージョンが空ならポイントにたいして操作を行うほうが適切な場合が多いために、ほとんどの場合は@code{region-active-p}を使用するべきではない。"
