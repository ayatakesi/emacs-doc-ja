# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Emacs-24.5\n"
"POT-Creation-Date: 2019-10-14 22:48+0900\n"
"PO-Revision-Date: 2019-11-04 15:33+0900\n"
"Last-Translator: Ayanokoji Takesi <ayanokoji.takesi@gmail.com>\n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: chapter
#: original_texis/minibuf.texi:6 original_texis/minibuf.texi:7
#, no-wrap
msgid "Minibuffers"
msgstr "Minibuffers"

#. type: cindex
#: original_texis/minibuf.texi:8
#, no-wrap
msgid "arguments, reading"
msgstr "arguments, reading"

#. type: cindex
#: original_texis/minibuf.texi:9
#, no-wrap
msgid "complex arguments"
msgstr "complex arguments"

#. type: cindex
#: original_texis/minibuf.texi:10
#, no-wrap
msgid "minibuffer"
msgstr "minibuffer"

#. type: Plain text
#: original_texis/minibuf.texi:19
msgid "A @dfn{minibuffer} is a special buffer that Emacs commands use to read arguments more complicated than the single numeric prefix argument.  These arguments include file names, buffer names, and command names (as in @kbd{M-x}).  The minibuffer is displayed on the bottom line of the frame, in the same place as the echo area (@pxref{The Echo Area}), but only while it is in use for reading an argument."
msgstr "@dfn{ミニバッファー(minibuffer)}とは、単一の数プレフィックス引数(numeric prefix argument)より複雑な引数を読み取るためにEmacsコマンドが使用する特別なバッファーのことです。これらの引数にはファイル名、バッファー名、(@kbd{M-x}での)コマンド名が含まれます。ミニバッファーはフレームの最下行、エコーエリア(@ref{The Echo Area}を参照)と同じ場所に表示されますが、引数を読み取るときだけ使用されます。"

#. type: node
#: original_texis/minibuf.texi:36 original_texis/minibuf.texi:38
#, no-wrap
msgid "Intro to Minibuffers"
msgstr "Intro to Minibuffers"

#. type: menuentry
#: original_texis/minibuf.texi:36
msgid "Basic information about minibuffers."
msgstr "ミニバッファーに関する基本的な情報。"

#. type: node
#: original_texis/minibuf.texi:36 original_texis/minibuf.texi:108
#, no-wrap
msgid "Text from Minibuffer"
msgstr "Text from Minibuffer"

#. type: menuentry
#: original_texis/minibuf.texi:36
msgid "How to read a straight text string."
msgstr "そのままのテキスト文字列を読み取る方法。"

#. type: node
#: original_texis/minibuf.texi:36 original_texis/minibuf.texi:392
#, no-wrap
msgid "Object from Minibuffer"
msgstr "Object from Minibuffer"

#. type: menuentry
#: original_texis/minibuf.texi:36
msgid "How to read a Lisp object or expression."
msgstr "Lispオブジェクトや式を読み取る方法。"

#. type: section
#: original_texis/minibuf.texi:36 original_texis/minibuf.texi:488
#: original_texis/minibuf.texi:489
#, no-wrap
msgid "Minibuffer History"
msgstr "Minibuffer History"

#. type: menuentry
#: original_texis/minibuf.texi:36
msgid "Recording previous minibuffer inputs so the user can reuse them."
msgstr "ユーザーが再利用できるように以前のミニバッファー入力は記録される。"

#. type: section
#: original_texis/minibuf.texi:36 original_texis/minibuf.texi:623
#: original_texis/minibuf.texi:624
#, no-wrap
msgid "Initial Input"
msgstr "Initial Input"

#. type: menuentry
#: original_texis/minibuf.texi:36
msgid "Specifying initial contents for the minibuffer."
msgstr "ミニバッファーにたいして初期内容を指定する。"

#. type: section
#: original_texis/minibuf.texi:36 original_texis/minibuf.texi:661
#: original_texis/minibuf.texi:662
#, no-wrap
msgid "Completion"
msgstr "Completion"

#. type: menuentry
#: original_texis/minibuf.texi:36
msgid "How to invoke and customize completion."
msgstr "補完の呼び出しとカスタマイズ方法。"

#. type: section
#: original_texis/minibuf.texi:36 original_texis/minibuf.texi:1948
#: original_texis/minibuf.texi:1949
#, no-wrap
msgid "Yes-or-No Queries"
msgstr "Yes-or-No Queries"

#. type: menuentry
#: original_texis/minibuf.texi:36
msgid "Asking a question with a simple answer."
msgstr "問いにたいし単純な答えを求める。"

#. type: node
#: original_texis/minibuf.texi:36 original_texis/minibuf.texi:2062
#, no-wrap
msgid "Multiple Queries"
msgstr "Multiple Queries"

#. type: menuentry
#: original_texis/minibuf.texi:36
msgid "Asking a series of similar questions."
msgstr "一連の類似する問いに答える。"

#. type: section
#: original_texis/minibuf.texi:36 original_texis/minibuf.texi:2159
#: original_texis/minibuf.texi:2160
#, no-wrap
msgid "Reading a Password"
msgstr "Reading a Password"

#. type: menuentry
#: original_texis/minibuf.texi:36
msgid "Reading a password from the terminal."
msgstr "端末からパスワードを読み取る。"

#. type: section
#: original_texis/minibuf.texi:36 original_texis/minibuf.texi:2183
#: original_texis/minibuf.texi:2184
#, no-wrap
msgid "Minibuffer Commands"
msgstr "Minibuffer Commands"

#. type: menuentry
#: original_texis/minibuf.texi:36
msgid "Commands used as key bindings in minibuffers."
msgstr "ミニバッファー内でキーバインドとして使用されるコマンド。"

#. type: section
#: original_texis/minibuf.texi:36 original_texis/minibuf.texi:2235
#: original_texis/minibuf.texi:2236
#, no-wrap
msgid "Minibuffer Windows"
msgstr "Minibuffer Windows"

#. type: menuentry
#: original_texis/minibuf.texi:36
msgid "Operating on the special minibuffer windows."
msgstr "特殊なミニバッファーウィンドウを処理する。"

#. type: section
#: original_texis/minibuf.texi:36 original_texis/minibuf.texi:2304
#: original_texis/minibuf.texi:2305
#, no-wrap
msgid "Minibuffer Contents"
msgstr "Minibuffer Contents"

#. type: menuentry
#: original_texis/minibuf.texi:36
msgid "How such commands access the minibuffer text."
msgstr "どのようなコマンドがミニバッファーのテキストにアクセスするか。"

#. type: node
#: original_texis/minibuf.texi:36 original_texis/minibuf.texi:2345
#, no-wrap
msgid "Recursive Mini"
msgstr "Recursive Mini"

#. type: menuentry
#: original_texis/minibuf.texi:36
msgid "Whether recursive entry to minibuffer is allowed."
msgstr "ミニバッファーへの再帰的なエントリーが許容されるかどうか。"

#. type: node
#: original_texis/minibuf.texi:36 original_texis/minibuf.texi:2379
#, no-wrap
msgid "Minibuffer Misc"
msgstr "Minibuffer Misc"

#. type: menuentry
#: original_texis/minibuf.texi:36
msgid "Various customization hooks and variables."
msgstr "カスタマイズ用のさまざまなフックや変数。"

#. type: section
#: original_texis/minibuf.texi:39
#, no-wrap
msgid "Introduction to Minibuffers"
msgstr "Introduction to Minibuffers"

#. type: Plain text
#: original_texis/minibuf.texi:50
msgid "In most ways, a minibuffer is a normal Emacs buffer.  Most operations @emph{within} a buffer, such as editing commands, work normally in a minibuffer.  However, many operations for managing buffers do not apply to minibuffers.  The name of a minibuffer always has the form @w{@samp{ *Minibuf-@var{number}*}}, and it cannot be changed.  Minibuffers are displayed only in special windows used only for minibuffers; these windows always appear at the bottom of a frame.  (Sometimes frames have no minibuffer window, and sometimes a special kind of frame contains nothing but a minibuffer window; see @ref{Minibuffers and Frames}.)"
msgstr "ほとんどの点においてミニバッファーは普通のEmacsバッファーです。編集コマンドのようなバッファーにたいする操作のほとんどはミニバッファーでも機能します。しかしバッファーを管理する操作の多くはミニバッファーに適用できません。ミニバッファーは常に@w{@samp{ *Minibuf-@var{number}*}}という形式の名前をもち変更はできません。ミニバッファーはミニバッファー用の特殊なウィンドウだけに表示されます。これらのウィンドウは常にフレーム最下に表示されます(フレームにミニバッファーウィンドウがないときやミニバッファーウィンドウだけをもつ特殊なフレームもある)。@ref{Minibuffers and Frames}を参照してください。"

#. type: Plain text
#: original_texis/minibuf.texi:59
msgid "The text in the minibuffer always starts with the @dfn{prompt string}, the text that was specified by the program that is using the minibuffer to tell the user what sort of input to type.  This text is marked read-only so you won't accidentally delete or change it.  It is also marked as a field (@pxref{Fields}), so that certain motion functions, including @code{beginning-of-line}, @code{forward-word}, @code{forward-sentence}, and @code{forward-paragraph}, stop at the boundary between the prompt and the actual text."
msgstr "ミニバッファー内のテキストは常に@dfn{プロンプト文字列(prompt string)}で開始されます。これはミニバッファーを使用しているプログラムが、ユーザーにたいしてどのような種類の入力が求められているか告げるために指定するテキストです。このテキストは意図せずに変更してしまわないように、読み取り専用としてマークされます。このテキストは@code{beginning-of-line}、@code{forward-word}、@code{forward-sentence}、@code{forward-paragraph}を含む特定の移動用関数が、プロンプトと実際のテキストの境界でストップするようにフィールド(@ref{Fields}を参照)としてもマークされています。"

#. type: Plain text
#: original_texis/minibuf.texi:71
msgid "The minibuffer's window is normally a single line; it grows automatically if the contents require more space.  Whilst it is active, you can explicitly resize it temporarily with the window sizing commands; it reverts to its normal size when the minibuffer is exited.  When the minibuffer is not active, you can resize it permanently by using the window sizing commands in the frame's other window, or dragging the mode line with the mouse.  (Due to details of the current implementation, for this to work @code{resize-mini-windows} must be @code{nil}.)  If the frame contains just a minibuffer, you can change the minibuffer's size by changing the frame's size."
msgstr "ミニバッファーのウィンドウは通常は1行です。ミニバッファーのコンテンツがより多くのスペースを要求する場合は自動的に拡張されます。ミニバッファーのウィンドウがアクティブな間は、ウィンドウのサイズ変更コマンドで一時的にウィンドウのサイズを変更できます。サイズの変更はミニバッファーをexitしたときには、通常のサイズにリバートされます。ミニバッファーがアクティブでないときはフレーム内の他のウィンドウでウィンドウのサイズ変更コマンドを使用するか、マウスでモードラインをドラッグしてミニバッファーのサイズを永続的に変更できます(現実装ではこれが機能するには@code{resize-mini-windows}が@code{nil}でなければならない)。フレームがミニバッファーだけを含む場合は、そのフレームのサイズを変更してミニバッファーのサイズを変更できます。"

#. type: Plain text
#: original_texis/minibuf.texi:76
msgid "Use of the minibuffer reads input events, and that alters the values of variables such as @code{this-command} and @code{last-command} (@pxref{Command Loop Info}).  Your program should bind them around the code that uses the minibuffer, if you do not want that to change them."
msgstr "ミニバッファーの使用によって入力イベントが読み取られて、@code{this-command}や@code{last-command}のような変数の値が変更されます(@ref{Command Loop Info}を参照)。プログラムにそれらを変更させたくない場合は、ミニバッファーを使用するコードの前後でそれらをバインドするべきです。"

#. type: Plain text
#: original_texis/minibuf.texi:88
msgid "Under some circumstances, a command can use a minibuffer even if there is an active minibuffer; such a minibuffer is called a @dfn{recursive minibuffer}.  The first minibuffer is named @w{@samp{ *Minibuf-1*}}.  Recursive minibuffers are named by incrementing the number at the end of the name.  (The names begin with a space so that they won't show up in normal buffer lists.)  Of several recursive minibuffers, the innermost (or most recently entered) is the active minibuffer.  We usually call this @emph{the} minibuffer.  You can permit or forbid recursive minibuffers by setting the variable @code{enable-recursive-minibuffers}, or by putting properties of that name on command symbols (@xref{Recursive Mini}.)"
msgstr "ある状況下では、アクティブなミニバッファーが存在するときでもコマンドがミニバッファーを使用できます。そのようなミニバッファーは@dfn{再帰ミニバッファー(recursive minibuffer)}と呼ばれます。この場合は最初のミニバッファーは@w{@samp{ *Minibuf-1*}}という名前になります。再帰ミニバッファーはミニバッファー名の最後の数字を増加することにより命名されます(名前はスペースで始まるので通常のバッファーリストには表示されない)。再帰ミニバッファーが複数ある場合は、最内の(もっとも最近にエンターされた)ミニバッファーがアクティブなミニバッファーになります。このバッファーが、@emph{いわゆる}ミニバッファーと通常は呼ばれるバッファーです。変数@code{enable-recursive-minibuffers}、またはコマンドシンボルのその名前のプロパティをセットすることにより再帰ミニバッファーを許可したり禁止できます(@ref{Recursive Mini}を参照)。"

#. type: Plain text
#: original_texis/minibuf.texi:95
msgid "Like other buffers, a minibuffer uses a local keymap (@pxref{Keymaps}) to specify special key bindings.  The function that invokes the minibuffer also sets up its local map according to the job to be done.  @xref{Text from Minibuffer}, for the non-completion minibuffer local maps.  @xref{Completion Commands}, for the minibuffer local maps for completion."
msgstr "他のバッファーと同様、ミニバッファーは特別なキーバインドを指定するためにローカルキーマップ(@ref{Keymaps}を参照)を使用します。ミニバッファーを呼び出す関数も、処理を行うためにローカルマップをセットアップします。補完なしのミニバッファーローカルマップについては@ref{Text from Minibuffer}を参照してください。補完つきのミニバッファーローカルマップについては@ref{Completion Commands}を参照してください。"

#. type: cindex
#: original_texis/minibuf.texi:96
#, no-wrap
msgid "inactive minibuffer"
msgstr "inactive minibuffer"

#. type: Plain text
#: original_texis/minibuf.texi:101
msgid "When a minibuffer is inactive, its major mode is @code{minibuffer-inactive-mode}, with keymap @code{minibuffer-inactive-mode-map}.  This is only really useful if the minibuffer is in a separate frame.  @xref{Minibuffers and Frames}."
msgstr "ミニバッファーが非アクティブのときのメジャーモードは@code{minibuffer-inactive-mode}、キーマップは@code{minibuffer-inactive-mode-map}です。これらは実際にはミニバッファーが別フレームにある場合のみ有用です。@ref{Minibuffers and Frames}を参照してください。"

#. type: Plain text
#: original_texis/minibuf.texi:107
msgid "When Emacs is running in batch mode, any request to read from the minibuffer actually reads a line from the standard input descriptor that was supplied when Emacs was started.  This supports only basic input: none of the special minibuffer features (history, completion, etc.)@: are available in batch mode."
msgstr "Emacsがバッチモードで実行されている場合には、ミニバッファーからの読み取りリクエストは、実装にはEmacs開始時に提供された標準入力記述子から行を読み取ります。これは基本的な入力だけをサポートします。特別なミニバッファーの機能(ヒストリー、補完など)はバッチモードでは利用できません。"

#. type: section
#: original_texis/minibuf.texi:109
#, no-wrap
msgid "Reading Text Strings with the Minibuffer"
msgstr "Reading Text Strings with the Minibuffer"

#. type: cindex
#: original_texis/minibuf.texi:110
#, no-wrap
msgid "minibuffer input, reading text strings"
msgstr "minibuffer input, reading text strings"

#. type: Plain text
#: original_texis/minibuf.texi:119
msgid "The most basic primitive for minibuffer input is @code{read-from-minibuffer}, which can be used to read either a string or a Lisp object in textual form.  The function @code{read-regexp} is used for reading regular expressions (@pxref{Regular Expressions}), which are a special kind of string.  There are also specialized functions for reading commands, variables, file names, etc.@: (@pxref{Completion})."
msgstr "ミニバッファー入力にたいする基本的なプリミティブは@code{read-from-minibuffer}で、これは文字列とLispオブジェクトの両方からテキスト表現されたフォームを読み取ることができます。関数@code{read-regexp}は特別な種類の文字列である正規表現式(@ref{Regular Expressions}を参照)の読み取りに使用されます。コマンドや変数、ファイル名などの読み取りに特化した関数もあります(@ref{Completion}を参照)。"

#. type: Plain text
#: original_texis/minibuf.texi:124
msgid "In most cases, you should not call minibuffer input functions in the middle of a Lisp function.  Instead, do all minibuffer input as part of reading the arguments for a command, in the @code{interactive} specification.  @xref{Defining Commands}."
msgstr "ほとんどの場合でにはLisp関数の途中でミニバッファー入力関数を呼び出すべきではありません。かわりに@code{interactive}指定されたコマンドの引数の読み取りの一環として、すべてのミニバッファー入力を行います。@ref{Defining Commands}を参照してください。"

#. type: defun
#: original_texis/minibuf.texi:125
#, no-wrap
msgid "read-from-minibuffer prompt &optional initial keymap read history default inherit-input-method"
msgstr "read-from-minibuffer prompt &optional initial keymap read history default inherit-input-method"

#. type: defun
#: original_texis/minibuf.texi:131
msgid "This function is the most general way to get input from the minibuffer.  By default, it accepts arbitrary text and returns it as a string; however, if @var{read} is non-@code{nil}, then it uses @code{read} to convert the text into a Lisp object (@pxref{Input Functions})."
msgstr "この関数はミニバッファーから入力を取得するもっとも一般的な手段である。デフォルトでは任意のテキストを受け入れて、それを文字列としてリターンする。しかし@var{read}が非@code{nil}なら、テキストをLispオブジェクトに変換するために@code{read}を使用する(@ref{Input Functions}を参照)。"

#. type: defun
#: original_texis/minibuf.texi:135
msgid "The first thing this function does is to activate a minibuffer and display it with @var{prompt} (which must be a string) as the prompt.  Then the user can edit text in the minibuffer."
msgstr "この関数が最初に行うのはミニバッファーをアクティブにして、プロンプトに@var{prompt}(文字列でなければならない)を用いてミニバッファーを表示することである。その後にユーザーはミニバッファーでテキストを編集できる。"

#. type: defun
#: original_texis/minibuf.texi:142
msgid "When the user types a command to exit the minibuffer, @code{read-from-minibuffer} constructs the return value from the text in the minibuffer.  Normally it returns a string containing that text.  However, if @var{read} is non-@code{nil}, @code{read-from-minibuffer} reads the text and returns the resulting Lisp object, unevaluated.  (@xref{Input Functions}, for information about reading.)"
msgstr "ミニバッファーをexitするためにユーザーがコマンドをタイプするとき、@code{read-from-minibuffer}はミニバッファー内のテキストからリターン値を構築する。通常はそのテキストを含む文字列がリターンされる。しかし@var{read}が非@code{nil}なら、@code{read-from-minibuffer}はテキストを読み込んで結果を未評価のLispオブジェクトでリターンする(読み取りについての詳細は@xref{Input Functions}を参照)。"

#. type: defun
#: original_texis/minibuf.texi:147
msgid "The argument @var{default} specifies default values to make available through the history commands.  It should be a string, a list of strings, or @code{nil}.  The string or strings become the minibuffer's ``future history'', available to the user with @kbd{M-n}."
msgstr "引数@var{default}はヒストリーコマンドを通じて利用できるデフォルト値を指定する。値には文字列、文字列リスト、または@code{nil}を指定する。文字列と文字列リストは、ユーザーが@kbd{M-n}で利用可能な``未来のヒストリー(future history)''になる。"

#. type: defun
#: original_texis/minibuf.texi:156
msgid "If @var{read} is non-@code{nil}, then @var{default} is also used as the input to @code{read}, if the user enters empty input.  If @var{default} is a list of strings, the first string is used as the input.  If @var{default} is @code{nil}, empty input results in an @code{end-of-file} error.  However, in the usual case (where @var{read} is @code{nil}), @code{read-from-minibuffer} ignores @var{default} when the user enters empty input and returns an empty string, @code{\"\"}.  In this respect, it differs from all the other minibuffer input functions in this chapter."
msgstr "@var{read}が非@code{nil}なら、ユーザーの入力が空のときの@code{read}の入力としても@var{default}が使用される。@var{default}が文字列リストの!は、最初の文字列が入力として使用される。@var{default}が@code{nil}なら、空の入力は@code{end-of-file}エラーとなる。しかし通常(@var{read}が@code{nil})の場合には、ユーザーの入力が空のとき@code{read-from-minibuffer}は@var{default}を無視して空文字列@code{\"\"}をリターンする。この点ではこの関数はこのチャプターの他のどのミニバッファー入力関数とも異なる。"

#. type: defun
#: original_texis/minibuf.texi:162
msgid "If @var{keymap} is non-@code{nil}, that keymap is the local keymap to use in the minibuffer.  If @var{keymap} is omitted or @code{nil}, the value of @code{minibuffer-local-map} is used as the keymap.  Specifying a keymap is the most important way to customize the minibuffer for various applications such as completion."
msgstr "@var{keymap}が非@code{nil}なら、そのキーマップはミニバッファー内で使用されるローカルキーマップとなる。@var{keymap}が省略または@code{nil}なら、@code{minibuffer-local-map}の値がキーマップとして使用される。キーマップの指定は補完のようなさまざまなアプリケーションにたいしてミニバッファーをカスタマイズする、もっとも重要な方法である。"

#. type: defun
#: original_texis/minibuf.texi:167
msgid "The argument @var{history} specifies a history list variable to use for saving the input and for history commands used in the minibuffer.  It defaults to @code{minibuffer-history}.  You can optionally specify a starting position in the history list as well.  @xref{Minibuffer History}."
msgstr "引数@var{history}は入力の保存やミニバッファー内で使用されるヒストリーコマンドが使用するヒストリーリスト変数を指定する。デフォルトは@code{minibuffer-history}。同様にオプションでヒストリーリスト内の開始位置を指定できる。@ref{Minibuffer History}を参照のこと。"

#. type: defun
#: original_texis/minibuf.texi:172
msgid "If the variable @code{minibuffer-allow-text-properties} is non-@code{nil}, then the string that is returned includes whatever text properties were present in the minibuffer.  Otherwise all the text properties are stripped when the value is returned."
msgstr "変数@code{minibuffer-allow-text-properties}が非@code{nil}なら、リターンされる文字列にはミニバッファーでのすべてのテキストプロパティが含まれる。それ以外なら、値がリターンされるときすべてのテキストプロパティが取り除かれる。"

#. type: defun
#: original_texis/minibuf.texi:178 original_texis/minibuf.texi:1036
msgid "If the argument @var{inherit-input-method} is non-@code{nil}, then the minibuffer inherits the current input method (@pxref{Input Methods}) and the setting of @code{enable-multibyte-characters} (@pxref{Text Representations}) from whichever buffer was current before entering the minibuffer."
msgstr "引数@var{inherit-input-method}が非@code{nil}なら、ミニバッファーにエンターする前にカレントだったバッファーが何であれ、カレントの入力メソッド(@ref{Input Methods}を参照)、および@code{enable-multibyte-characters}のセッティング(@ref{Text Representations}を参照)が継承される。"

#. type: defun
#: original_texis/minibuf.texi:182
msgid "Use of @var{initial} is mostly deprecated; we recommend using a non-@code{nil} value only in conjunction with specifying a cons cell for @var{history}.  @xref{Initial Input}."
msgstr "ほとんどの場合、@var{initial}の使用は推奨されない。非@code{nil}値の使用は、@var{history}にたいするコンスセル指定と組み合わせる場合のみ推奨する。@ref{Initial Input}を参照のこと。"

#. type: defun
#: original_texis/minibuf.texi:184
#, no-wrap
msgid "read-string prompt &optional initial history default inherit-input-method"
msgstr "read-string prompt &optional initial history default inherit-input-method"

#. type: defun
#: original_texis/minibuf.texi:189
msgid "This function reads a string from the minibuffer and returns it.  The arguments @var{prompt}, @var{initial}, @var{history} and @var{inherit-input-method} are used as in @code{read-from-minibuffer}.  The keymap used is @code{minibuffer-local-map}."
msgstr "この関数はミニバッファーから文字列を読み取ってそれをリターンする。引数@var{prompt}、@var{initial}、@var{history}、@var{inherit-input-method}は@code{read-from-minibuffer}で使用する場合と同様。使用されるキーマップは@code{minibuffer-local-map}。"

#. type: defun
#: original_texis/minibuf.texi:199
msgid "The optional argument @var{default} is used as in @code{read-from-minibuffer}, except that, if non-@code{nil}, it also specifies a default value to return if the user enters null input.  As in @code{read-from-minibuffer} it should be a string, a list of strings, or @code{nil}, which is equivalent to an empty string.  When @var{default} is a string, that string is the default value.  When it is a list of strings, the first string is the default value.  (All these strings are available to the user in the ``future minibuffer history''.)"
msgstr "オプション引数@var{default}は@code{read-from-minibuffer}の場合と同様に使用されるが、ユーザーの入力が空の場合にリターンするデフォルト値も指定する。@code{read-from-minibuffer}の場合と同様に値は文字列、文字列リスト、または@code{nil}(空文字列と等価)である。@var{default}が文字列のときは、その文字列がデフォルト値になる。文字列リストのときは、最初の文字列がデフォルト値になる(これらの文字列はすべて``未来のミニバッファーヒストリー(future minibuffer history)''としてユーザーが利用できる)。"

#. type: defun
#: original_texis/minibuf.texi:202
msgid "This function works by calling the @code{read-from-minibuffer} function:"
msgstr "この関数は@code{read-from-minibuffer}を呼び出すことによって機能する。"

#. type: group
#: original_texis/minibuf.texi:213
#, no-wrap
msgid ""
"(read-string @var{prompt} @var{initial} @var{history} @var{default} @var{inherit})\n"
"@equiv{}\n"
"(let ((value\n"
"       (read-from-minibuffer @var{prompt} @var{initial} nil nil\n"
"                             @var{history} @var{default} @var{inherit})))\n"
"  (if (and (equal value \"\") @var{default})\n"
"      (if (consp @var{default}) (car @var{default}) @var{default})\n"
"    value))\n"
msgstr ""
"(read-string @var{prompt} @var{initial} @var{history} @var{default} @var{inherit})\n"
"@equiv{}\n"
"(let ((value\n"
"       (read-from-minibuffer @var{prompt} @var{initial} nil nil\n"
"                             @var{history} @var{default} @var{inherit})))\n"
"  (if (and (equal value \"\") @var{default})\n"
"      (if (consp @var{default}) (car @var{default}) @var{default})\n"
"    value))\n"

#. type: defun
#: original_texis/minibuf.texi:217
#, no-wrap
msgid "read-regexp prompt &optional defaults history"
msgstr "read-regexp prompt &optional defaults history"

#. type: defun
#: original_texis/minibuf.texi:223
msgid "This function reads a regular expression as a string from the minibuffer and returns it.  If the minibuffer prompt string @var{prompt} does not end in @samp{:} (followed by optional whitespace), the function adds @samp{: } to the end, preceded by the default return value (see below), if that is non-empty."
msgstr "この関数はミニバッファーから文字列として正規表現を読み取ってそれをリターンする。ミニバッファーのプロンプト文字列@var{prompt}が@samp{:}(とその後にオプションの空白文字)で終端されていなければ、この関数はデフォルトのリターン値(空文字列でない場合。以下参照)の前に@samp{: }を付加する。"

#. type: defun
#: original_texis/minibuf.texi:228
msgid "The optional argument @var{defaults} controls the default value to return if the user enters null input, and should be one of: a string; @code{nil}, which is equivalent to an empty string; a list of strings; or a symbol."
msgstr "オプション引数@var{defaults}は、入力が空の場合にリターンするデフォルト値を制御する。値は文字列、@code{nil}(空文字列と等価)、文字列リスト、シンボルのうちのいずれか。"

#. type: defun
#: original_texis/minibuf.texi:233
msgid "If @var{defaults} is a symbol, @code{read-regexp} consults the value of the variable @code{read-regexp-defaults-function} (see below), and if that is non-@code{nil} uses it in preference to @var{defaults}.  The value in this case should be either:"
msgstr "@var{defaults}がシンボルの場合、@code{read-regexp}は変数@code{read-regexp-defaults-function}(以下参照)の値を調べて非@code{nil}のときは@var{defaults}よりそちらを優先的に使用する。この場合は値は以下のいずれか:"

#. type: itemize
#: original_texis/minibuf.texi:238
msgid "@code{regexp-history-last}, which means to use the first element of the appropriate minibuffer history list (see below)."
msgstr "@code{regexp-history-last}。これは適切なミニバッファーヒストリーリスト(以下参照)の最初の要素を使用することを意味する。"

#. type: itemize
#: original_texis/minibuf.texi:243
msgid "A function of no arguments, whose return value (which should be @code{nil}, a string, or a list of strings) becomes the value of @var{defaults}."
msgstr "引数なしの関数。リターン値(@code{nil}、文字列、文字列リストのいずれか)が@var{defaults}の値となる。"

#. type: defun
#: original_texis/minibuf.texi:250
msgid "@code{read-regexp} now ensures that the result of processing @var{defaults} is a list (i.e., if the value is @code{nil} or a string, it converts it to a list of one element).  To this list, @code{read-regexp} then appends a few potentially useful candidates for input.  These are:"
msgstr "これで@code{read-regexp}が@var{defaults}を処理した結果はリストに確定する(値が@code{nil}または文字列の場合は1要素のリストに変換する)。このリストにたいして@code{read-regexp}は以下のような入力として有用な候補をいくつか追加する:"

#. type: itemize
#: original_texis/minibuf.texi:254
msgid "The word or symbol at point."
msgstr "ポイント位置の単語かシンボル。"

#. type: itemize
#: original_texis/minibuf.texi:256
msgid "The last regexp used in an incremental search."
msgstr "インクリメンタル検索で最後に使用されたregexp。"

#. type: itemize
#: original_texis/minibuf.texi:258
msgid "The last string used in an incremental search."
msgstr "インクリメンタル検索で最後に使用された文字列。"

#. type: itemize
#: original_texis/minibuf.texi:260
msgid "The last string or pattern used in query-replace commands."
msgstr "問い合わせつき置換コマンドで最後に使用された文字列またはパターン。"

#. type: defun
#: original_texis/minibuf.texi:268
msgid "The function now has a list of regular expressions that it passes to @code{read-from-minibuffer} to obtain the user's input.  The first element of the list is the default result in case of empty input.  All elements of the list are available to the user as the ``future minibuffer history'' list (@pxref{Minibuffer History, future list,, emacs, The GNU Emacs Manual})."
msgstr "これで関数はユーザー入力を取得するために@code{read-from-minibuffer}に渡す正規表現のリストを得た。リストの最初の要素は入力が空の場合のデフォルト値である。リストのすべての要素は``未来のミニバッファーヒストリー(future minibuffer history)''となるリスト(@pxref{Minibuffer History, future list,, emacs, The GNU Emacs Manual}を参照)としてユーザーが利用可能になる。"

#. type: defun
#: original_texis/minibuf.texi:273
msgid "The optional argument @var{history}, if non-@code{nil}, is a symbol specifying a minibuffer history list to use (@pxref{Minibuffer History}).  If it is omitted or @code{nil}, the history list defaults to @code{regexp-history}."
msgstr "オプション引数@var{history}が非@code{nil}なら、それは使用するミニバッファーヒストリーリストを指定するシンボルである(@ref{Minibuffer History}を参照)。これが省略または@code{nil}なら、ヒストリーリストのデフォルトは@code{regexp-history}となる。"

#. type: defopt
#: original_texis/minibuf.texi:275
#, no-wrap
msgid "read-regexp-defaults-function"
msgstr "read-regexp-defaults-function"

#. type: defopt
#: original_texis/minibuf.texi:279
msgid "The function @code{read-regexp} may use the value of this variable to determine its list of default regular expressions.  If non-@code{nil}, the value of this variable should be either:"
msgstr "関数@code{read-regexp}は、デフォルトの正規表現リストを決定するためにこの変数の値を使用するかもしれない。非@code{nil}なら、この変数は以下のいずれかである:"

#. type: itemize
#: original_texis/minibuf.texi:283
msgid "The symbol @code{regexp-history-last}."
msgstr "シンボル@code{regexp-history-last}。"

#. type: itemize
#: original_texis/minibuf.texi:287
msgid "A function of no arguments that returns either @code{nil}, a string, or a list of strings."
msgstr "@code{nil}、文字列、文字列リストのいずれかをリターンする引数なしの関数。"

#. type: defopt
#: original_texis/minibuf.texi:291
msgid "See @code{read-regexp} above for details of how these values are used."
msgstr "これらの変数の使い方についての詳細は、上述の@code{read-regexp}を参照のこと。"

#. type: defvar
#: original_texis/minibuf.texi:293
#, no-wrap
msgid "minibuffer-allow-text-properties"
msgstr "minibuffer-allow-text-properties"

#. type: defvar
#: original_texis/minibuf.texi:302
msgid "If this variable is @code{nil}, then @code{read-from-minibuffer} and @code{read-string} strip all text properties from the minibuffer input before returning it.  However, @code{read-no-blanks-input} (see below), as well as @code{read-minibuffer} and related functions (@pxref{Object from Minibuffer,, Reading Lisp Objects With the Minibuffer}), and all functions that do minibuffer input with completion, discard text properties unconditionally, regardless of the value of this variable."
msgstr "この変数が@code{nil}なら、@code{read-from-minibuffer}と@code{read-string}はミニバッファー入力をリターンする前にすべてのテキストプロパティを取り除く。しかし@code{read-no-blanks-input}(以下参照)、同様に補完つきでミニバッファー入力を行う@code{read-minibuffer}とそれに関連する関数(@ref{Object from Minibuffer,, Reading Lisp Objects With the Minibuffer}を参照)は、この変数の値に関わらず無条件でテキストプロパティを破棄する。"

#. type: defvar
#: original_texis/minibuf.texi:304
#, no-wrap
msgid "minibuffer-local-map"
msgstr "minibuffer-local-map"

#. type: defvar
#: original_texis/minibuf.texi:310
msgid "This @anchor{Definition of minibuffer-local-map} is the default local keymap for reading from the minibuffer.  By default, it makes the following bindings:"
msgstr "@anchor{Definition of minibuffer-local-map}これはミニバッファーからの読み取りにたいするデフォルトローカルキーマップである。デフォルトでは以下のバインディングをもつ:"

#. type: kbd{#1}
#: original_texis/minibuf.texi:312 original_texis/minibuf.texi:1209
#, no-wrap
msgid "C-j"
msgstr "C-j"

#. type: code{#1}
#: original_texis/minibuf.texi:314 original_texis/minibuf.texi:317
#: original_texis/minibuf.texi:381 original_texis/minibuf.texi:385
msgid "exit-minibuffer"
msgstr "exit-minibuffer"

#. type: key{#1}
#: original_texis/minibuf.texi:315 original_texis/minibuf.texi:1212
#, no-wrap
msgid "RET"
msgstr "RET"

#. type: kbd{#1}
#: original_texis/minibuf.texi:318
#, no-wrap
msgid "C-g"
msgstr "C-g"

#. type: code{#1}
#: original_texis/minibuf.texi:320
msgid "abort-recursive-edit"
msgstr "abort-recursive-edit"

#. type: kbd{#1}
#: original_texis/minibuf.texi:321
#, no-wrap
msgid "M-n"
msgstr "M-n"

#. type: key{#1}
#: original_texis/minibuf.texi:322
#, no-wrap
msgid "DOWN"
msgstr "DOWN"

#. type: code{#1}
#: original_texis/minibuf.texi:324
msgid "next-history-element"
msgstr "next-history-element"

#. type: kbd{#1}
#: original_texis/minibuf.texi:325
#, no-wrap
msgid "M-p"
msgstr "M-p"

#. type: key{#1}
#: original_texis/minibuf.texi:326
#, no-wrap
msgid "UP"
msgstr "UP"

#. type: code{#1}
#: original_texis/minibuf.texi:328
msgid "previous-history-element"
msgstr "previous-history-element"

#. type: kbd{#1}
#: original_texis/minibuf.texi:329
#, no-wrap
msgid "M-s"
msgstr "M-s"

#. type: code{#1}
#: original_texis/minibuf.texi:331
msgid "next-matching-history-element"
msgstr "next-matching-history-element"

#. type: kbd{#1}
#: original_texis/minibuf.texi:332
#, no-wrap
msgid "M-r"
msgstr "M-r"

#. type: code{#1}
#: original_texis/minibuf.texi:334
msgid "previous-matching-history-element"
msgstr "previous-matching-history-element"

#. type: item
#: original_texis/minibuf.texi:337
#, no-wrap
msgid "@kbd{C-@key{TAB}}"
msgstr "@kbd{C-@key{TAB}}"

#. type: defun
#: original_texis/minibuf.texi:345
#, no-wrap
msgid "read-no-blanks-input prompt &optional initial inherit-input-method"
msgstr "read-no-blanks-input prompt &optional initial inherit-input-method"

#. type: defun
#: original_texis/minibuf.texi:350
msgid "This function reads a string from the minibuffer, but does not allow whitespace characters as part of the input: instead, those characters terminate the input.  The arguments @var{prompt}, @var{initial}, and @var{inherit-input-method} are used as in @code{read-from-minibuffer}."
msgstr "この関数はミニバッファーから文字列を読み取るが、入力の一部として空白文字を認めず、そのかわりに空白文字は入力を終端させる。引数@var{prompt}、@var{initial}、@var{inherit-input-method}は@code{read-from-minibuffer}で使用するときと同様。"

#. type: defun
#: original_texis/minibuf.texi:356
msgid "This is a simplified interface to the @code{read-from-minibuffer} function, and passes the value of the @code{minibuffer-local-ns-map} keymap as the @var{keymap} argument for that function.  Since the keymap @code{minibuffer-local-ns-map} does not rebind @kbd{C-q}, it @emph{is} possible to put a space into the string, by quoting it."
msgstr "これは関数@code{read-from-minibuffer}の簡略化されたインターフェイスであり、キーマップ@code{minibuffer-local-ns-map}の値を@var{keymap}引数として@code{read-from-minibuffer}関数に渡す。キーマップ@code{minibuffer-local-ns-map}は@kbd{C-q}をリバインドしないので、クォートすることによって文字列内にスペースを挿入することが@emph{可能}である。"

#. type: defun
#: original_texis/minibuf.texi:359
msgid "This function discards text properties, regardless of the value of @code{minibuffer-allow-text-properties}."
msgstr "@code{minibuffer-allow-text-properties}の値に関わらず、この関数はテキストプロパティを破棄する。"

#. type: group
#: original_texis/minibuf.texi:366
#, no-wrap
msgid ""
"(read-no-blanks-input @var{prompt} @var{initial})\n"
"@equiv{}\n"
"(let (minibuffer-allow-text-properties)\n"
"  (read-from-minibuffer @var{prompt} @var{initial} minibuffer-local-ns-map))\n"
msgstr ""
"(read-no-blanks-input @var{prompt} @var{initial})\n"
"@equiv{}\n"
"(let (minibuffer-allow-text-properties)\n"
"  (read-from-minibuffer @var{prompt} @var{initial} minibuffer-local-ns-map))\n"

#. type: defvar
#: original_texis/minibuf.texi:372
#, no-wrap
msgid "minibuffer-local-ns-map"
msgstr "minibuffer-local-ns-map"

#. type: defvar
#: original_texis/minibuf.texi:376
msgid "This built-in variable is the keymap used as the minibuffer local keymap in the function @code{read-no-blanks-input}.  By default, it makes the following bindings, in addition to those of @code{minibuffer-local-map}:"
msgstr "このビルトイン変数は関数@code{read-no-blanks-input}内でミニバッファーローカルキーマップとして使用されるキーマップである。デフォルトでは@code{minibuffer-local-map}のバインディングに加えて、以下のバインディングが有効になる:"

#. type: key{#1}
#: original_texis/minibuf.texi:378 original_texis/minibuf.texi:1189
#, no-wrap
msgid "SPC"
msgstr "SPC"

#. type: cindex
#: original_texis/minibuf.texi:379
#, no-wrap
msgid "@key{SPC} in minibuffer"
msgstr "@key{SPC} in minibuffer"

#. type: key{#1}
#: original_texis/minibuf.texi:382 original_texis/minibuf.texi:1192
#, no-wrap
msgid "TAB"
msgstr "TAB"

#. type: cindex
#: original_texis/minibuf.texi:383
#, no-wrap
msgid "@key{TAB} in minibuffer"
msgstr "@key{TAB} in minibuffer"

#. type: kbd{#1}
#: original_texis/minibuf.texi:386 original_texis/minibuf.texi:1186
#, no-wrap
msgid "?"
msgstr "?"

#. type: cindex
#: original_texis/minibuf.texi:387
#, no-wrap
msgid "@kbd{?} in minibuffer"
msgstr "@kbd{?} in minibuffer"

#. type: code{#1}
#: original_texis/minibuf.texi:389
msgid "self-insert-and-exit"
msgstr "self-insert-and-exit"

#. type: section
#: original_texis/minibuf.texi:393
#, no-wrap
msgid "Reading Lisp Objects with the Minibuffer"
msgstr "Reading Lisp Objects with the Minibuffer"

#. type: cindex
#: original_texis/minibuf.texi:394
#, no-wrap
msgid "minibuffer input, reading lisp objects"
msgstr "minibuffer input, reading lisp objects"

#. type: Plain text
#: original_texis/minibuf.texi:398
msgid "This section describes functions for reading Lisp objects with the minibuffer."
msgstr "このセクションではミニバッファーでLispオブジェクトを読み取る関数を説明します。"

#. type: defun
#: original_texis/minibuf.texi:399
#, no-wrap
msgid "read-minibuffer prompt &optional initial"
msgstr "read-minibuffer prompt &optional initial"

#. type: defun
#: original_texis/minibuf.texi:403
msgid "This function reads a Lisp object using the minibuffer, and returns it without evaluating it.  The arguments @var{prompt} and @var{initial} are used as in @code{read-from-minibuffer}."
msgstr "この関数はミニバッファーを使用してLispオブジェクトを読み取って、それを評価せずにリターンする。引数@var{prompt}と@var{initial}は@code{read-from-minibuffer}のときと同様に使用する。"

#. type: defun
#: original_texis/minibuf.texi:406
msgid "This is a simplified interface to the @code{read-from-minibuffer} function:"
msgstr "これは@code{read-from-minibuffer}関数にたいする簡略化されたインターフェイスである。"

#. type: group
#: original_texis/minibuf.texi:413
#, no-wrap
msgid ""
"(read-minibuffer @var{prompt} @var{initial})\n"
"@equiv{}\n"
"(let (minibuffer-allow-text-properties)\n"
"  (read-from-minibuffer @var{prompt} @var{initial} nil t))\n"
msgstr ""
"(read-minibuffer @var{prompt} @var{initial})\n"
"@equiv{}\n"
"(let (minibuffer-allow-text-properties)\n"
"  (read-from-minibuffer @var{prompt} @var{initial} nil t))\n"

#. type: defun
#: original_texis/minibuf.texi:418
msgid "Here is an example in which we supply the string @code{\"(testing)\"} as initial input:"
msgstr "以下の例では初期入力として文字列@code{\"(testing)\"}を与えている:"

#. type: group
#: original_texis/minibuf.texi:423
#, no-wrap
msgid ""
"(read-minibuffer\n"
" \"Enter an expression: \" (format \"%s\" '(testing)))\n"
"\n"
msgstr ""
"(read-minibuffer\n"
" \"Enter an expression: \" (format \"%s\" '(testing)))\n"
"\n"

#. type: group
#: original_texis/minibuf.texi:425
#, no-wrap
msgid ";; @r{Here is how the minibuffer is displayed:}\n"
msgstr ";; @r{以下はミニバッファーでの表示:}\n"

#. type: group
#: original_texis/minibuf.texi:431
#, no-wrap
msgid ""
"---------- Buffer: Minibuffer ----------\n"
"Enter an expression: (testing)@point{}\n"
"---------- Buffer: Minibuffer ----------\n"
msgstr ""
"---------- Buffer: Minibuffer ----------\n"
"Enter an expression: (testing)@point{}\n"
"---------- Buffer: Minibuffer ----------\n"

#. type: defun
#: original_texis/minibuf.texi:437
msgid "The user can type @key{RET} immediately to use the initial input as a default, or can edit the input."
msgstr "ユーザーは@key{RET}をタイプして初期入力をデフォルトとして利用したり入力を編集することができる。"

#. type: defun
#: original_texis/minibuf.texi:439
#, no-wrap
msgid "eval-minibuffer prompt &optional initial"
msgstr "eval-minibuffer prompt &optional initial"

#. type: defun
#: original_texis/minibuf.texi:443
msgid "This function reads a Lisp expression using the minibuffer, evaluates it, then returns the result.  The arguments @var{prompt} and @var{initial} are used as in @code{read-from-minibuffer}."
msgstr "この関数はミニバッファーを使用してLisp式を読み取り、それを評価して結果をリターンする。引数@var{prompt}と@var{initial}の使い方は@code{read-from-minibuffer}と同様。"

#. type: defun
#: original_texis/minibuf.texi:446
msgid "This function simply evaluates the result of a call to @code{read-minibuffer}:"
msgstr "この関数は@code{read-minibuffer}の呼び出し結果を単に評価する:"

#. type: group
#: original_texis/minibuf.texi:452
#, no-wrap
msgid ""
"(eval-minibuffer @var{prompt} @var{initial})\n"
"@equiv{}\n"
"(eval (read-minibuffer @var{prompt} @var{initial}))\n"
msgstr ""
"(eval-minibuffer @var{prompt} @var{initial})\n"
"@equiv{}\n"
"(eval (read-minibuffer @var{prompt} @var{initial}))\n"

#. type: defun
#: original_texis/minibuf.texi:456
#, no-wrap
msgid "edit-and-eval-command prompt form"
msgstr "edit-and-eval-command prompt form"

#. type: defun
#: original_texis/minibuf.texi:464
msgid "This function reads a Lisp expression in the minibuffer, evaluates it, then returns the result.  The difference between this command and @code{eval-minibuffer} is that here the initial @var{form} is not optional and it is treated as a Lisp object to be converted to printed representation rather than as a string of text.  It is printed with @code{prin1}, so if it is a string, double-quote characters (@samp{\"})  appear in the initial text.  @xref{Output Functions}."
msgstr "この関数はミニバッファーでLisp式を読み取り、それを評価して結果をリターンする。このコマンドと@code{eval-minibuffer}の違いは、このコマンドでは初期値としての@var{form}はオプションではなく、テキストの文字列ではないプリント表現に変換されたLispオブジェクトとして扱われることである。これは@code{prin1}でプリントされるので、文字列の場合はテキスト初期値内にダブルクォート文字(@samp{\"})が含まれる。@ref{Output Functions}を参照のこと。"

#. type: defun
#: original_texis/minibuf.texi:467
msgid "In the following example, we offer the user an expression with initial text that is already a valid form:"
msgstr "以下の例では、すでに有効なフォームであるようなテキスト初期値として式をユーザーに提案している:"

#. type: group
#: original_texis/minibuf.texi:471
#, no-wrap
msgid ""
"(edit-and-eval-command \"Please edit: \" '(forward-word 1))\n"
"\n"
msgstr ""
"(edit-and-eval-command \"Please edit: \" '(forward-word 1))\n"
"\n"

#. type: group
#: original_texis/minibuf.texi:474 original_texis/minibuf.texi:1488
#, no-wrap
msgid ""
";; @r{After evaluation of the preceding expression,}\n"
";;   @r{the following appears in the minibuffer:}\n"
msgstr ""
";; @r{前の式を評価した後に、}\n"
";;   @r{ミニバッファーに以下が表示される:}\n"

#. type: group
#: original_texis/minibuf.texi:480
#, no-wrap
msgid ""
"---------- Buffer: Minibuffer ----------\n"
"Please edit: (forward-word 1)@point{}\n"
"---------- Buffer: Minibuffer ----------\n"
msgstr ""
"---------- Buffer: Minibuffer ----------\n"
"Please edit: (forward-word 1)@point{}\n"
"---------- Buffer: Minibuffer ----------\n"

#. type: defun
#: original_texis/minibuf.texi:486
msgid "Typing @key{RET} right away would exit the minibuffer and evaluate the expression, thus moving point forward one word."
msgstr "すぐに@key{RET} をタイプするとミニバッファーをexitして式を評価するので、1単語分ポイントは前進する。"

#. type: cindex
#: original_texis/minibuf.texi:490
#, no-wrap
msgid "minibuffer history"
msgstr "minibuffer history"

#. type: cindex
#: original_texis/minibuf.texi:491
#, no-wrap
msgid "history list"
msgstr "history list"

#. type: Plain text
#: original_texis/minibuf.texi:496
msgid "A @dfn{minibuffer history list} records previous minibuffer inputs so the user can reuse them conveniently.  It is a variable whose value is a list of strings (previous inputs), most recent first."
msgstr "@dfn{ミニバッファーヒストリーリスト(minibuffer history list)}は手軽に再利用できるように以前のミニバッファー入力を記録します。ミニバッファーヒストリーリストは、(以前に入力された)文字列のリストであり、もっとも最近の文字列が先頭になります。"

#. type: Plain text
#: original_texis/minibuf.texi:500
msgid "There are many separate minibuffer history lists, used for different kinds of inputs.  It's the Lisp programmer's job to specify the right history list for each use of the minibuffer."
msgstr "多数のミニバッファーが個別に存在し、異なる入力の種類に使用されます。それぞれのミニバッファー使用にたいして正しいヒストリーリストを指定するのはLispプログラマーの役目です。"

#. type: Plain text
#: original_texis/minibuf.texi:504
msgid "You specify a minibuffer history list with the optional @var{history} argument to @code{read-from-minibuffer} or @code{completing-read}.  Here are the possible values for it:"
msgstr "ミニバッファーヒストリーリストは、@code{read-from-minibuffer}と@code{completing-read}のオプション引数@var{history}に指定します。以下が利用できる値です:"

#. type: var{#1}
#: original_texis/minibuf.texi:506
#, no-wrap
msgid "variable"
msgstr "variable"

#. type: table
#: original_texis/minibuf.texi:508
msgid "Use @var{variable} (a symbol) as the history list."
msgstr "ヒストリーリストとして@var{variable}(シンボル)を使用する。"

#. type: item
#: original_texis/minibuf.texi:509
#, no-wrap
msgid "(@var{variable} . @var{startpos})"
msgstr "(@var{variable} . @var{startpos})"

#. type: table
#: original_texis/minibuf.texi:512
msgid "Use @var{variable} (a symbol) as the history list, and assume that the initial history position is @var{startpos} (a nonnegative integer)."
msgstr "ヒストリーリストとして@var{variable}(シンボル)を使用して、ヒストリー位置の初期値を@var{startpos}(負の整数)とみなす。"

#. type: table
#: original_texis/minibuf.texi:519
msgid "Specifying 0 for @var{startpos} is equivalent to just specifying the symbol @var{variable}.  @code{previous-history-element} will display the most recent element of the history list in the minibuffer.  If you specify a positive @var{startpos}, the minibuffer history functions behave as if @code{(elt @var{variable} (1- @var{startpos}))} were the history element currently shown in the minibuffer."
msgstr "@var{startpos}に0を指定するのは、単にシンボル@var{variable}だけを指定するのと等価である。@code{previous-history-element}はミニバッファー内のヒストリーリストの最新の要素を表示するだろう。 正の@var{startpos}を指定すると、ミニバッファーヒストリー関数は@code{(elt @var{variable}(1- @var{startpos}))}がミニバッファー内でカレントで表示されているヒストリー要素であるかのように振る舞う。"

#. type: table
#: original_texis/minibuf.texi:523
msgid "For consistency, you should also specify that element of the history as the initial minibuffer contents, using the @var{initial} argument to the minibuffer input function (@pxref{Initial Input})."
msgstr "一貫性を保つためにミニバッファー入力関数の@var{initial}引数(@ref{Initial Input}を参照)を使用して、ミニバッファーの初期内容となるヒストリー要素も指定すべきである。"

#. type: Plain text
#: original_texis/minibuf.texi:529
msgid "If you don't specify @var{history}, then the default history list @code{minibuffer-history} is used.  For other standard history lists, see below.  You can also create your own history list variable; just initialize it to @code{nil} before the first use."
msgstr "@var{history}を指定しない場合には、デフォルトのヒストリーリスト@code{minibuffer-history}が使用されます。他の標準的なヒストリーリストについては以下を参照してください。最初に使用する前に@code{nil}に初期化するだけで、独自のヒストリーリストを作成することもできます。"

#. type: Plain text
#: original_texis/minibuf.texi:536
msgid "Both @code{read-from-minibuffer} and @code{completing-read} add new elements to the history list automatically, and provide commands to allow the user to reuse items on the list.  The only thing your program needs to do to use a history list is to initialize it and to pass its name to the input functions when you wish.  But it is safe to modify the list by hand when the minibuffer input functions are not using it."
msgstr "@code{read-from-minibuffer}と@code{completing-read}は、どちらも新たな要素を自動的にヒストリーリストに追加して、ユーザーがそのリストのアイテムを再使用するためのコマンドを提供します。ヒストリーリストを使用するためにプログラムが行う必要があるのはリストの初期化と、使用するときに入力関数にリストの名前を渡すだけです。しかしミニバッファー入力関数がリストを使用していないときに手動でリストを変更しても問題はありません。"

#. type: Plain text
#: original_texis/minibuf.texi:544
msgid "Emacs functions that add a new element to a history list can also delete old elements if the list gets too long.  The variable @code{history-length} specifies the maximum length for most history lists.  To specify a different maximum length for a particular history list, put the length in the @code{history-length} property of the history list symbol.  The variable @code{history-delete-duplicates} specifies whether to delete duplicates in history."
msgstr "新たな要素をヒストリーリストに追加するEmacs関数は、リストが長くなりすぎたときに古い要素の削除を行うこともできます。変数@code{history-length}は、ほとんどのヒストリーリストの最大長を指定する変数です。特定のヒストリーリストにたいして異なる最大長を指定するには、そのヒストリーリストのシンボルの@code{history-length}プロパティにその最大長をセットします。変数@code{history-delete-duplicates}にはヒストリー内の重複を削除するかどうかを指定します。"

#. type: defun
#: original_texis/minibuf.texi:545
#, no-wrap
msgid "add-to-history history-var newelt &optional maxelt keep-all"
msgstr "add-to-history history-var newelt &optional maxelt keep-all"

#. type: defun
#: original_texis/minibuf.texi:552
msgid "This function adds a new element @var{newelt}, if it isn't the empty string, to the history list stored in the variable @var{history-var}, and returns the updated history list.  It limits the list length to the value of @var{maxelt} (if non-@code{nil}) or @code{history-length} (described below).  The possible values of @var{maxelt} have the same meaning as the values of @code{history-length}."
msgstr "この関数は@var{newelt}が空文字列でなければ、それを新たな要素として変数@var{history-var}に格納されたヒストリーリストに追加して、更新されたヒストリーリストをリターンする。これは@var{maxelt}か@code{history-length}がが非@code{nil}なら、リストの長さをその変数の値に制限する(以下参照)。@var{maxelt}に指定できる値の意味は@code{history-length}の値と同様。"

#. type: defun
#: original_texis/minibuf.texi:557
msgid "Normally, @code{add-to-history} removes duplicate members from the history list if @code{history-delete-duplicates} is non-@code{nil}.  However, if @var{keep-all} is non-@code{nil}, that says not to remove duplicates, and to add @var{newelt} to the list even if it is empty."
msgstr "@code{add-to-history}は通常は@code{history-delete-duplicates}が非@code{nil}ならば、ヒストリーリスト内の重複メンバーを削除する。しかし@var{keep-all}が非@code{nil}なら、それは重複を削除しないことを意味し、たとえ@var{newelt}が空でもリストに追加する。"

#. type: defvar
#: original_texis/minibuf.texi:559
#, no-wrap
msgid "history-add-new-input"
msgstr "history-add-new-input"

#. type: defvar
#: original_texis/minibuf.texi:564
msgid "If the value of this variable is @code{nil}, standard functions that read from the minibuffer don't add new elements to the history list.  This lets Lisp programs explicitly manage input history by using @code{add-to-history}.  The default value is @code{t}."
msgstr "この変数の値が@code{nil}なら、ミニバッファーから読み取りを行う標準的な関数はヒストリーリストに新たな要素を追加しない。これによりLispプログラムが@code{add-to-history}を使用して明示的に入力ヒストリーを管理することになる。デフォルト値は@code{t}。"

#. type: defopt
#: original_texis/minibuf.texi:566
#, no-wrap
msgid "history-length"
msgstr "history-length"

#. type: defopt
#: original_texis/minibuf.texi:573
msgid "The value of this variable specifies the maximum length for all history lists that don't specify their own maximum lengths.  If the value is @code{t}, that means there is no maximum (don't delete old elements).  If a history list variable's symbol has a non-@code{nil} @code{history-length} property, it overrides this variable for that particular history list."
msgstr "この変数の値は、最大長を独自に指定しないすべてのヒストリーリストの最大長を指定する。値が@code{t}なら最大長がない(古い要素を削除しない)ことを意味する。ヒストリーリスト変数のシンボルの@code{history-length}プロパティが非@code{nil}なら、その特定のヒストリーリストにたいする最大長として、そのプロパティ値がこの変数をオーバーライドする。"

#. type: defopt
#: original_texis/minibuf.texi:575
#, no-wrap
msgid "history-delete-duplicates"
msgstr "history-delete-duplicates"

#. type: defopt
#: original_texis/minibuf.texi:578
msgid "If the value of this variable is @code{t}, that means when adding a new history element, all previous identical elements are deleted."
msgstr "この変数の値が@code{t}なら、それは新たなヒストリー要素の追加時に以前からある等しい要素が削除されることを意味する。"

#. type: Plain text
#: original_texis/minibuf.texi:581
msgid "Here are some of the standard minibuffer history list variables:"
msgstr "以下は標準的なミニバッファーヒストリーリスト変数です:"

#. type: defvar
#: original_texis/minibuf.texi:582
#, no-wrap
msgid "minibuffer-history"
msgstr "minibuffer-history"

#. type: defvar
#: original_texis/minibuf.texi:584
msgid "The default history list for minibuffer history input."
msgstr "ミニバッファーヒストリー入力にたいするデフォルトのヒストリーリスト。"

#. type: defvar
#: original_texis/minibuf.texi:586
#, no-wrap
msgid "query-replace-history"
msgstr "query-replace-history"

#. type: defvar
#: original_texis/minibuf.texi:589
msgid "A history list for arguments to @code{query-replace} (and similar arguments to other commands)."
msgstr "@code{query-replace}の引数(と他のコマンドの同様の引数)にたいするヒストリーリスト。"

#. type: defvar
#: original_texis/minibuf.texi:591
#, no-wrap
msgid "file-name-history"
msgstr "file-name-history"

#. type: defvar
#: original_texis/minibuf.texi:593
msgid "A history list for file-name arguments."
msgstr "ファイル名引数にたいするヒストリーリスト。"

#. type: defvar
#: original_texis/minibuf.texi:595
#, no-wrap
msgid "buffer-name-history"
msgstr "buffer-name-history"

#. type: defvar
#: original_texis/minibuf.texi:597
msgid "A history list for buffer-name arguments."
msgstr "バッファー名引数にたいするヒストリーリスト。"

#. type: defvar
#: original_texis/minibuf.texi:599
#, no-wrap
msgid "regexp-history"
msgstr "regexp-history"

#. type: defvar
#: original_texis/minibuf.texi:601
msgid "A history list for regular expression arguments."
msgstr "正規表現引数にたいするヒストリーリスト。"

#. type: defvar
#: original_texis/minibuf.texi:603
#, no-wrap
msgid "extended-command-history"
msgstr "extended-command-history"

#. type: defvar
#: original_texis/minibuf.texi:605
msgid "A history list for arguments that are names of extended commands."
msgstr "拡張コマンド名引数にたいするヒストリーリスト。"

#. type: defvar
#: original_texis/minibuf.texi:607
#, no-wrap
msgid "shell-command-history"
msgstr "shell-command-history"

#. type: defvar
#: original_texis/minibuf.texi:609
msgid "A history list for arguments that are shell commands."
msgstr "シェルコマンド引数にたいするヒストリーリスト。"

#. type: defvar
#: original_texis/minibuf.texi:611
#, no-wrap
msgid "read-expression-history"
msgstr "read-expression-history"

#. type: defvar
#: original_texis/minibuf.texi:613
msgid "A history list for arguments that are Lisp expressions to evaluate."
msgstr "評価されるためのLisp式引数にたいするヒストリーリスト。"

#. type: defvar
#: original_texis/minibuf.texi:615
#, no-wrap
msgid "face-name-history"
msgstr "face-name-history"

#. type: defvar
#: original_texis/minibuf.texi:617
msgid "A history list for arguments that are faces."
msgstr "フェイス引数にたいするヒストリーリスト。"

#. type: Plain text
#: original_texis/minibuf.texi:630
msgid "Several of the functions for minibuffer input have an argument called @var{initial}.  This is a mostly-deprecated feature for specifying that the minibuffer should start out with certain text, instead of empty as usual."
msgstr "ミニバッファー入力にたいする関数のいくつかには、@var{initial}と呼ばれる引数があります。これは通常のように空の状態で開始されるのではなく、特定のテキストとともにミニバッファーが開始されることを指定しますが、ほとんどの場合においては推奨されない機能です。"

#. type: Plain text
#: original_texis/minibuf.texi:636
msgid "If @var{initial} is a string, the minibuffer starts out containing the text of the string, with point at the end, when the user starts to edit the text.  If the user simply types @key{RET} to exit the minibuffer, it will use the initial input string to determine the value to return."
msgstr "@var{initial}が文字列なら、ミニバッファーはその文字列のテキストを含む状態で開始され、ユーザーがそのテキストの編集を開始するとき、ポイントはテキストの終端にあります。ユーザーがミニバッファーをexitするために単に@key{RET}をタイプした場合には、この入力文字列の初期値をリターン値だと判断します。"

#. type: Plain text
#: original_texis/minibuf.texi:641
msgid "@strong{We discourage use of a non-@code{nil} value for @var{initial}}, because initial input is an intrusive interface.  History lists and default values provide a much more convenient method to offer useful default inputs to the user."
msgstr "@strong{@var{initial}にたいして非@code{nil}値の使用には反対します。}なぜなら初期入力は強要的なインターフェイスだからです。ユーザーにたいして有用なデフォルト入力を提案するためには、ヒストリーリストやデフォルト値の提供のほうがより有用です。"

#. type: Plain text
#: original_texis/minibuf.texi:645
msgid "There is just one situation where you should specify a string for an @var{initial} argument.  This is when you specify a cons cell for the @var{history} argument.  @xref{Minibuffer History}."
msgstr "しかし@var{initial}引数にたいして文字列を指定すべき状況が1つだけあります。それは@var{history}引数にコンスセルを指定したときです。@ref{Minibuffer History}を参照してください。"

#. type: Plain text
#: original_texis/minibuf.texi:649
msgid "@var{initial} can also be a cons cell of the form @code{(@var{string} . @var{position})}.  This means to insert @var{string} in the minibuffer but put point at @var{position} within the string's text."
msgstr "@var{initial}は@code{(@var{string} . @var{position})}という形式をとることもできます。これは@var{string}をミニバッファーに挿入するが、その文字列のテキスト中の@var{position}にポイントを配置するという意味です。"

#. type: Plain text
#: original_texis/minibuf.texi:658
msgid "As a historical accident, @var{position} was implemented inconsistently in different functions.  In @code{completing-read}, @var{position}'s value is interpreted as origin-zero; that is, a value of 0 means the beginning of the string, 1 means after the first character, etc.  In @code{read-minibuffer}, and the other non-completion minibuffer input functions that support this argument, 1 means the beginning of the string, 2 means after the first character, etc."
msgstr "歴史的な経緯により、@var{position}は異なる関数の間で実装が統一されていません。@code{completing-read}では@var{position}の値は0基準です。つまり値0は文字列の先頭、1は最初の文字の次、...を意味します。しかし@code{read-minibuffer}、およびこの引数をサポートする補完を行わない他のミニバッファー入力関数では、1は文字列の先頭、2は最初の文字の次、...を意味します。"

#. type: Plain text
#: original_texis/minibuf.texi:660
msgid "Use of a cons cell as the value for @var{initial} arguments is deprecated."
msgstr "@var{initial}の値としてのコンスセルの使用は推奨されません。"

#. type: cindex
#: original_texis/minibuf.texi:663
#, no-wrap
msgid "completion"
msgstr "completion"

#. type: Plain text
#: original_texis/minibuf.texi:674
msgid "@dfn{Completion} is a feature that fills in the rest of a name starting from an abbreviation for it.  Completion works by comparing the user's input against a list of valid names and determining how much of the name is determined uniquely by what the user has typed.  For example, when you type @kbd{C-x b} (@code{switch-to-buffer}) and then type the first few letters of the name of the buffer to which you wish to switch, and then type @key{TAB} (@code{minibuffer-complete}), Emacs extends the name as far as it can."
msgstr "@dfn{補完(complete, ompletion)}は省略された形式から始まる名前の残りを充填する機能です。補完はユーザー入力と有効な名前リストを比較して、ユーザーが何をタイプしたかで名前をどの程度一意に判定できるか判断することによって機能します。たとえば@kbd{C-x b} (@code{switch-to-buffer})とタイプしてからスイッチしたいバッファー名の最初の数文字をタイプして、その後に@key{TAB} (@code{minibuffer-complete})をタイプすると、Emacsはその名前を可能な限り展開します。"

#. type: Plain text
#: original_texis/minibuf.texi:678
msgid "Standard Emacs commands offer completion for names of symbols, files, buffers, and processes; with the functions in this section, you can implement completion for other kinds of names."
msgstr "標準的なEmacsコマンドはシンボル、ファイル、バッファー、プロセスの名前にたいする補完を提案します。このセクションの関数により、他の種類の名前にたいしても補完を実装できます。"

#. type: Plain text
#: original_texis/minibuf.texi:682
msgid "The @code{try-completion} function is the basic primitive for completion: it returns the longest determined completion of a given initial string, with a given set of strings to match against."
msgstr "@code{try-completion}関数は補完にたいする基本的なプリミティブです。これは初期文字列にたいして文字列セットをマッチして、最長と判定された補完をリターンします。"

#. type: Plain text
#: original_texis/minibuf.texi:689
msgid "The function @code{completing-read} provides a higher-level interface for completion.  A call to @code{completing-read} specifies how to determine the list of valid names.  The function then activates the minibuffer with a local keymap that binds a few keys to commands useful for completion.  Other functions provide convenient simple interfaces for reading certain kinds of names with completion."
msgstr "関数@code{completing-read}は補完にたいする高レベルなインターフェイスを提供します。@code{completing-read}の呼び出しによって有効な名前リストの判定方法が指定されます。その後にこの関数は補完にたいして有用ないくつかのコマンドにキーバインドするローカルキーマップとともに、ミニバッファーをアクティブ化します。その他の関数は特定の種類の名前を補完つきで読み取る、簡便なインターフェイスを提供します。"

#. type: node
#: original_texis/minibuf.texi:701 original_texis/minibuf.texi:703
#, no-wrap
msgid "Basic Completion"
msgstr "Basic Completion"

#. type: menuentry
#: original_texis/minibuf.texi:701
msgid "Low-level functions for completing strings."
msgstr "文字列を補完する低レベル関数。"

#. type: node
#: original_texis/minibuf.texi:701 original_texis/minibuf.texi:956
#, no-wrap
msgid "Minibuffer Completion"
msgstr "Minibuffer Completion"

#. type: menuentry
#: original_texis/minibuf.texi:701
msgid "Invoking the minibuffer with completion."
msgstr "補完つきでミニバッファーを呼び出す。"

#. type: node
#: original_texis/minibuf.texi:701 original_texis/minibuf.texi:1080
#, no-wrap
msgid "Completion Commands"
msgstr "Completion Commands"

#. type: menuentry
#: original_texis/minibuf.texi:701
msgid "Minibuffer commands that do completion."
msgstr "補完を行うミニバッファーコマンド。"

#. type: node
#: original_texis/minibuf.texi:701 original_texis/minibuf.texi:1228
#, no-wrap
msgid "High-Level Completion"
msgstr "High-Level Completion"

#. type: menuentry
#: original_texis/minibuf.texi:701
msgid "Convenient special cases of completion (reading buffer names, variable names, etc.)."
msgstr "特別なケースに有用な補完(バッファー名や変数名などの読み取り)。"

#. type: subsection
#: original_texis/minibuf.texi:701 original_texis/minibuf.texi:1384
#: original_texis/minibuf.texi:1385
#, no-wrap
msgid "Reading File Names"
msgstr "Reading File Names"

#. type: menuentry
#: original_texis/minibuf.texi:701
msgid "Using completion to read file names and shell commands."
msgstr "ファイル名やシェルコマンドの読み取りに補完を使用する。"

#. type: subsection
#: original_texis/minibuf.texi:701 original_texis/minibuf.texi:1613
#: original_texis/minibuf.texi:1614
#, no-wrap
msgid "Completion Variables"
msgstr "Completion Variables"

#. type: menuentry
#: original_texis/minibuf.texi:701
msgid "Variables controlling completion behavior."
msgstr "補完の挙動を制御する変数。"

#. type: subsection
#: original_texis/minibuf.texi:701 original_texis/minibuf.texi:1718
#: original_texis/minibuf.texi:1719
#, no-wrap
msgid "Programmed Completion"
msgstr "Programmed Completion"

#. type: menuentry
#: original_texis/minibuf.texi:701
msgid "Writing your own completion function."
msgstr "独自の補完関数を記述する。"

#. type: node
#: original_texis/minibuf.texi:701 original_texis/minibuf.texi:1843
#, no-wrap
msgid "Completion in Buffers"
msgstr "Completion in Buffers"

#. type: menuentry
#: original_texis/minibuf.texi:701
msgid "Completing text in ordinary buffers."
msgstr "通常バッファー内でのテキスト補完。"

#. type: subsection
#: original_texis/minibuf.texi:704
#, no-wrap
msgid "Basic Completion Functions"
msgstr "Basic Completion Functions"

#. type: Plain text
#: original_texis/minibuf.texi:709
msgid "The following completion functions have nothing in themselves to do with minibuffers.  We describe them here to keep them near the higher-level completion features that do use the minibuffer."
msgstr "以下の補完関数は、その関数自身ではミニバッファーで何も行いません。ここではミニバッファーを使用する高レベルの補完機能とともに、これらの関数について説明します。"

#. type: defun
#: original_texis/minibuf.texi:710
#, no-wrap
msgid "try-completion string collection &optional predicate"
msgstr "try-completion string collection &optional predicate"

#. type: defun
#: original_texis/minibuf.texi:713
msgid "This function returns the longest common substring of all possible completions of @var{string} in @var{collection}."
msgstr "この関数は@var{collection}内の@var{string}に可能なすべての補完の共通する最長部分文字列をリターンする。"

#. type: cindex
#: original_texis/minibuf.texi:714
#, no-wrap
msgid "completion table"
msgstr "completion table"

#. type: defun
#: original_texis/minibuf.texi:718
msgid "@var{collection} is called the @dfn{completion table}.  Its value must be a list of strings or cons cells, an obarray, a hash table, or a completion function."
msgstr "@var{collection}は@dfn{補完テーブル(completion table)}と呼ばれる。値は文字列リスト、コンスセル、obarray、ハッシュテーブル、または補完関数でなければならない。"

#. type: defun
#: original_texis/minibuf.texi:725
msgid "@code{try-completion} compares @var{string} against each of the permissible completions specified by the completion table.  If no permissible completions match, it returns @code{nil}.  If there is just one matching completion, and the match is exact, it returns @code{t}.  Otherwise, it returns the longest initial sequence common to all possible matching completions."
msgstr "@code{try-completion}は補完テーブルにより指定された許容できる補完それぞれにたいして、@var{string}と比較を行う。許容できる補完マッチが存在しなければ@code{nil}をリターンする。マッチする補完が1つだけで、それが完全一致ならば@code{t}をリターンする。それ以外は、すべてのマッチ可能な補完に共通する最長の初期シーケンスをリターンする。"

#. type: defun
#: original_texis/minibuf.texi:731
msgid "If @var{collection} is a list, the permissible completions are specified by the elements of the list, each of which should be either a string, or a cons cell whose @sc{car} is either a string or a symbol (a symbol is converted to a string using @code{symbol-name}).  If the list contains elements of any other type, those are ignored."
msgstr "@var{collection}がリストなら、許容できる補完(permissible completions)はそのリストの要素によって指定される。リストの要素は文字列、または@sc{car}が文字列、または(@code{symbol-name}によって文字列に変換される)シンボルであるようなコンスセルである。リストに他の型の要素が含まれる場合は無視される。"

#. type: cindex
#: original_texis/minibuf.texi:732
#, no-wrap
msgid "obarray in completion"
msgstr "obarray in completion"

#. type: defun
#: original_texis/minibuf.texi:735
msgid "If @var{collection} is an obarray (@pxref{Creating Symbols}), the names of all symbols in the obarray form the set of permissible completions."
msgstr "@var{collection}がobarray(@ref{Creating Symbols}を参照)なら、そのobarray内のすべてのシンボル名が許容できる補完セットを形成する。"

#. type: defun
#: original_texis/minibuf.texi:738
msgid "If @var{collection} is a hash table, then the keys that are strings or symbols are the possible completions.  Other keys are ignored."
msgstr "@var{collection}がハッシュテーブルの場合には、文字列かシンボルのキーが利用可能な補完となる。他のキーは無視される。"

#. type: defun
#: original_texis/minibuf.texi:746
msgid "You can also use a function as @var{collection}.  Then the function is solely responsible for performing completion; @code{try-completion} returns whatever this function returns.  The function is called with three arguments: @var{string}, @var{predicate} and @code{nil} (the third argument is so that the same function can be used in @code{all-completions} and do the appropriate thing in either case).  @xref{Programmed Completion}."
msgstr "@var{collection}として関数を使用することもできる。この場合にはその関数だけが補完を処理する役目を担う。つまり@code{try-completion}は、この関数が何をリターンしようともそれをリターンする。この関数は@var{string}、@var{predicate}、@code{nil}の3つの引数で呼び出される(3つ目の引数は同じ関数を@code{all-completions}でも使用して、どちらの場合でも適切なことを行うため)。@ref{Programmed Completion}を参照のこと。"

#. type: defun
#: original_texis/minibuf.texi:757
msgid "If the argument @var{predicate} is non-@code{nil}, then it must be a function of one argument, unless @var{collection} is a hash table, in which case it should be a function of two arguments.  It is used to test each possible match, and the match is accepted only if @var{predicate} returns non-@code{nil}.  The argument given to @var{predicate} is either a string or a cons cell (the @sc{car} of which is a string) from the alist, or a symbol (@emph{not} a symbol name) from the obarray.  If @var{collection} is a hash table, @var{predicate} is called with two arguments, the string key and the associated value."
msgstr "引数@var{predicate}が非@code{nil}の場合には、@var{collection}がハッシュテーブルなら1引数、それ以外は2引数の関数でなければならない。これは利用可能なマッチのテストに使用され、マッチは@var{predicate}が非@code{nil}をリターンしたときだけ受け入れられる。@var{predicate}に与えられる引数は文字列、alistのコンスセル(@sc{car}が文字列)、またはobarrayのシンボル(シンボル名では@emph{ない})のいずれか。@var{collection}がハッシュテーブルなら、@var{predicate}は文字列キー(string key)と連想値(associated value)の2引数で呼び出される。"

#. type: defun
#: original_texis/minibuf.texi:762
msgid "In addition, to be acceptable, a completion must also match all the regular expressions in @code{completion-regexp-list}.  (Unless @var{collection} is a function, in which case that function has to handle @code{completion-regexp-list} itself.)"
msgstr "これらに加えて許容され得るためには、補完は@code{completion-regexp-list}内のすべての正規表現にもマッチしなければならない。(@var{collection}が関数なら、その関数自身が@code{completion-regexp-list}を処理する必要がある)。"

#. type: defun
#: original_texis/minibuf.texi:768
msgid "In the first of the following examples, the string @samp{foo} is matched by three of the alist @sc{car}s.  All of the matches begin with the characters @samp{fooba}, so that is the result.  In the second example, there is only one possible match, and it is exact, so the return value is @code{t}."
msgstr "以下の1つ目の例では、文字列@samp{foo}がalistのうち3つの@sc{car}とマッチされている。すべてのマッチは文字@samp{fooba}で始まるので、それが結果となる。2つ目の例では可能なマッチは1つだけで、しかも完全一致なのでリターン値は@code{t}になる。"

#. type: group
#: original_texis/minibuf.texi:775
#, no-wrap
msgid ""
"(try-completion\n"
" \"foo\"\n"
" '((\"foobar1\" 1) (\"barfoo\" 2) (\"foobaz\" 3) (\"foobar2\" 4)))\n"
"     @result{} \"fooba\"\n"
msgstr ""
"(try-completion\n"
" \"foo\"\n"
" '((\"foobar1\" 1) (\"barfoo\" 2) (\"foobaz\" 3) (\"foobar2\" 4)))\n"
"     @result{} \"fooba\"\n"

#. type: group
#: original_texis/minibuf.texi:780
#, no-wrap
msgid ""
"(try-completion \"foo\" '((\"barfoo\" 2) (\"foo\" 3)))\n"
"     @result{} t\n"
msgstr ""
"(try-completion \"foo\" '((\"barfoo\" 2) (\"foo\" 3)))\n"
"     @result{} t\n"

#. type: defun
#: original_texis/minibuf.texi:787
msgid "In the following example, numerous symbols begin with the characters @samp{forw}, and all of them begin with the word @samp{forward}.  In most of the symbols, this is followed with a @samp{-}, but not in all, so no more than @samp{forward} can be completed."
msgstr "以下の例では文字@samp{forw}で始まるシンボルが多数あり、それらはすべて単語@samp{forward}で始まる。ほとんどのシンボルはその後に@samp{-}が続くが、すべてではないので@samp{forward}までしか補完できない。"

#. type: group
#: original_texis/minibuf.texi:792
#, no-wrap
msgid ""
"(try-completion \"forw\" obarray)\n"
"     @result{} \"forward\"\n"
msgstr ""
"(try-completion \"forw\" obarray)\n"
"     @result{} \"forward\"\n"

#. type: defun
#: original_texis/minibuf.texi:798
msgid "Finally, in the following example, only two of the three possible matches pass the predicate @code{test} (the string @samp{foobaz} is too short).  Both of those begin with the string @samp{foobar}."
msgstr "最後に以下の例では述語@code{test}に渡される利用可能なマッチは3つのうち2つだけである(文字列@samp{foobaz}は短すぎる)。これらは両方とも文字列@samp{foobar}で始まる。"

#. type: group
#: original_texis/minibuf.texi:804 original_texis/minibuf.texi:842
#, no-wrap
msgid ""
"(defun test (s)\n"
"  (> (length (car s)) 6))\n"
"     @result{} test\n"
msgstr ""
"(defun test (s)\n"
"  (> (length (car s)) 6))\n"
"     @result{} test\n"

#. type: group
#: original_texis/minibuf.texi:811
#, no-wrap
msgid ""
"(try-completion\n"
" \"foo\"\n"
" '((\"foobar1\" 1) (\"barfoo\" 2) (\"foobaz\" 3) (\"foobar2\" 4))\n"
" 'test)\n"
"     @result{} \"foobar\"\n"
msgstr ""
"(try-completion\n"
" \"foo\"\n"
" '((\"foobar1\" 1) (\"barfoo\" 2) (\"foobaz\" 3) (\"foobar2\" 4))\n"
" 'test)\n"
"     @result{} \"foobar\"\n"

#. type: defun
#: original_texis/minibuf.texi:816
#, no-wrap
msgid "all-completions string collection &optional predicate"
msgstr "all-completions string collection &optional predicate"

#. type: defun
#: original_texis/minibuf.texi:823
msgid "This function returns a list of all possible completions of @var{string}.  The arguments to this function are the same as those of @code{try-completion}, and it uses @code{completion-regexp-list} in the same way that @code{try-completion} does."
msgstr "この関数は@var{string}の利用可能な補完すべてのリストをリターンする。この関数の引数は@code{try-completion}の引数と同じであり、@code{try-completion}が行うのと同じ方法で@code{completion-regexp-list}を使用する。"

#. type: defun
#: original_texis/minibuf.texi:833
msgid "If @var{collection} is a function, it is called with three arguments: @var{string}, @var{predicate} and @code{t}; then @code{all-completions} returns whatever the function returns.  @xref{Programmed Completion}."
msgstr "@var{collection}か関数なら@var{string}、@var{predicate}、@code{t}の3つの引数で呼び出される。この場合はその関数がリターンするのが何であれ、@code{all-completions}はそれをリターンする。@ref{Programmed Completion}を参照のこと。"

#. type: defun
#: original_texis/minibuf.texi:836
msgid "Here is an example, using the function @code{test} shown in the example for @code{try-completion}:"
msgstr "以下の例は@code{try-completion}の例の関数@code{test}を使用している。"

#. type: group
#: original_texis/minibuf.texi:850
#, no-wrap
msgid ""
"(all-completions\n"
" \"foo\"\n"
" '((\"foobar1\" 1) (\"barfoo\" 2) (\"foobaz\" 3) (\"foobar2\" 4))\n"
" 'test)\n"
"     @result{} (\"foobar1\" \"foobar2\")\n"
msgstr ""
"(all-completions\n"
" \"foo\"\n"
" '((\"foobar1\" 1) (\"barfoo\" 2) (\"foobaz\" 3) (\"foobar2\" 4))\n"
" 'test)\n"
"     @result{} (\"foobar1\" \"foobar2\")\n"

#. type: defun
#: original_texis/minibuf.texi:854
#, no-wrap
msgid "test-completion string collection &optional predicate"
msgstr "test-completion string collection &optional predicate"

#. type: anchor{#1}
#: original_texis/minibuf.texi:862
msgid "Definition of test-completion"
msgstr "Definition of test-completion"

#. type: defun
#: original_texis/minibuf.texi:862
msgid "This function returns non-@code{nil} if @var{string} is a valid completion alternative specified by @var{collection} and @var{predicate}.  The arguments are the same as in @code{try-completion}.  For instance, if @var{collection} is a list of strings, this is true if @var{string} appears in the list and @var{predicate} is satisfied."
msgstr "この関数は@var{string}が@var{collection}と@var{predicate}で指定された有効な補完候補なら@code{nil}をリターンする。引数は@code{try-completion}の引数と同じ。たとえば@var{collection}が文字列リストなら、@var{string}がリスト内に存在して、かつ@var{predicate}を満足すればtrueとなる。"

#. type: defun
#: original_texis/minibuf.texi:865
msgid "This function uses @code{completion-regexp-list} in the same way that @code{try-completion} does."
msgstr "この関数は@code{try-completion}が行うのと同じ方法で@code{completion-regexp-list}を使用する。"

#. type: defun
#: original_texis/minibuf.texi:872
msgid "If @var{predicate} is non-@code{nil} and if @var{collection} contains several strings that are equal to each other, as determined by @code{compare-strings} according to @code{completion-ignore-case}, then @var{predicate} should accept either all or none of them.  Otherwise, the return value of @code{test-completion} is essentially unpredictable."
msgstr "@var{predicate}が非@code{nil}で@var{collection}が同じ文字列を複数含む場合には、@code{completion-ignore-case}にしたがって@code{compare-strings}で判定してそれらすべてをリターンするか、もしくは何もリターンしない。それ以外では@code{test-completion}のリターン値は基本的に予測できない。"

#. type: defun
#: original_texis/minibuf.texi:876
msgid "If @var{collection} is a function, it is called with three arguments, the values @var{string}, @var{predicate} and @code{lambda}; whatever it returns, @code{test-completion} returns in turn."
msgstr "@var{collection}が関数の場合は@var{string}、@var{predicate}、@code{lambda}の3つの引数で呼び出される。それが何をリターンするにせよ@code{test-completion}はそれをリターンする。"

#. type: defun
#: original_texis/minibuf.texi:878
#, no-wrap
msgid "completion-boundaries string collection predicate suffix"
msgstr "completion-boundaries string collection predicate suffix"

#. type: defun
#: original_texis/minibuf.texi:882
msgid "This function returns the boundaries of the field on which @var{collection} will operate, assuming that @var{string} holds the text before point and @var{suffix} holds the text after point."
msgstr "この関数はポイントの前のテキストが@var{string}、ポイントの後が@var{suffix}と仮定して、@var{collection}が扱うフィールドの境界(boundary)をリターンする。"

#. type: defun
#: original_texis/minibuf.texi:895
msgid "Normally completion operates on the whole string, so for all normal collections, this will always return @code{(0 . (length @var{suffix}))}.  But more complex completion such as completion on files is done one field at a time.  For example, completion of @code{\"/usr/sh\"} will include @code{\"/usr/share/\"} but not @code{\"/usr/share/doc\"} even if @code{\"/usr/share/doc\"} exists.  Also @code{all-completions} on @code{\"/usr/sh\"} will not include @code{\"/usr/share/\"} but only @code{\"share/\"}.  So if @var{string} is @code{\"/usr/sh\"} and @var{suffix} is @code{\"e/doc\"}, @code{completion-boundaries} will return @code{(5 . 1)} which tells us that the @var{collection} will only return completion information that pertains to the area after @code{\"/usr/\"} and before @code{\"/doc\"}."
msgstr "補完は通常は文字列(string)全体に作用するので、すべての普通のコレクション(collection)にたいして、この関数は常に@code{(0 . (length @var{suffix}))}をリターンするだろう。しかしファイルにたいする補完などの、より複雑な補完は1回に1フィールド行われる。たとえばたとえ@code{\"/usr/share/doc\"}が存在しても、@code{\"/usr/sh\"}の補完に@code{\"/usr/share/\"}は含まれるが、@code{\"/usr/share/doc\"}は含まれないだろう。また@code{\"/usr/sh\"}にたいする@code{all-completions}に@code{\"/usr/share/\"}は含まれず、@code{\"share/\"}だけが含まれるだろう。@var{string}が@code{\"/usr/sh\"}、@var{suffix}が@code{\"e/doc\"}なら、@code{completion-boundaries}は@code{(5 . 1)}をリターンするだろう。これは@var{collection}が@code{\"/usr/\"}の後ろにあり@code{\"/doc\"}の前にある領域に関する補完情報だけをリターンするであろうことを告げている。"

#. type: Plain text
#: original_texis/minibuf.texi:900
msgid "If you store a completion alist in a variable, you should mark the variable as risky by giving it a non-@code{nil} @code{risky-local-variable} property.  @xref{File Local Variables}."
msgstr "補完alistを変数に格納した場合は、変数の@code{risky-local-variable}プロパティに非@code{nil}をセットして、その変数がrisky(危険)だとマークすること。@ref{File Local Variables}を参照のこと。"

#. type: defvar
#: original_texis/minibuf.texi:901
#, no-wrap
msgid "completion-ignore-case"
msgstr "completion-ignore-case"

#. type: defvar
#: original_texis/minibuf.texi:909
msgid "If the value of this variable is non-@code{nil}, case is not considered significant in completion.  Within @code{read-file-name}, this variable is overridden by @code{read-file-name-completion-ignore-case} (@pxref{Reading File Names}); within @code{read-buffer}, it is overridden by @code{read-buffer-completion-ignore-case} (@pxref{High-Level Completion})."
msgstr "この変数の値が非@code{nil}なら、補完でのcase(大文字小文字)の違いは意味をもたない。@code{read-file-name}では、この変数は@code{read-file-name-completion-ignore-case} (@ref{Reading File Names}を参照)にオーバーライドされる。@code{read-buffer}では、この変数は@code{read-buffer-completion-ignore-case} (@ref{High-Level Completion}を参照)にオーバーライドされる。"

#. type: defvar
#: original_texis/minibuf.texi:911
#, no-wrap
msgid "completion-regexp-list"
msgstr "completion-regexp-list"

#. type: defvar
#: original_texis/minibuf.texi:916
msgid "This is a list of regular expressions.  The completion functions only consider a completion acceptable if it matches all regular expressions in this list, with @code{case-fold-search} (@pxref{Searching and Case})  bound to the value of @code{completion-ignore-case}."
msgstr "これは正規表現のリストである。補完関数はこのリスト内のすべての正規表現にマッチした場合のみ許容できる補完と判断する。@code{case-fold-search} (@ref{Searching and Case}を参照)では@code{completion-ignore-case}の値にバインドされる。"

#. type: defmac
#: original_texis/minibuf.texi:918
#, no-wrap
msgid "lazy-completion-table var fun"
msgstr "lazy-completion-table var fun"

#. type: defmac
#: original_texis/minibuf.texi:926
msgid "This macro provides a way to initialize the variable @var{var} as a collection for completion in a lazy way, not computing its actual contents until they are first needed.  You use this macro to produce a value that you store in @var{var}.  The actual computation of the proper value is done the first time you do completion using @var{var}.  It is done by calling @var{fun} with no arguments.  The value @var{fun} returns becomes the permanent value of @var{var}."
msgstr "この変数は変数@var{var}を補完のためのcollectionとしてlazy(lazy: 力のない、だらけさせる、のろのろした、怠惰な、不精な、眠気を誘う)な方法で初期化する。ここでlazyとは、collection内の実際のコンテンツを必要になるまで計算しないという意味。このマクロは@var{var}に格納する値の生成に使用する。@var{var}を使用して最初に補完を行ったとき、真の値が実際に計算される。これは引数なしで@var{fun}を呼び出すことにより行われる。@var{fun}がリターンする値は@var{var}の永続的な値となる。"

#. type: defun
#: original_texis/minibuf.texi:928 original_texis/minibuf.texi:2030
msgid "Here is an example:"
msgstr "以下は例:"

#. type: smallexample
#: original_texis/minibuf.texi:931
#, no-wrap
msgid "(defvar foo (lazy-completion-table foo make-my-alist))\n"
msgstr "(defvar foo (lazy-completion-table foo make-my-alist))\n"

#. type: findex
#: original_texis/minibuf.texi:935
#, no-wrap
msgid "completion-table-case-fold"
msgstr "completion-table-case-fold"

#. type: findex
#: original_texis/minibuf.texi:936
#, no-wrap
msgid "completion-table-in-turn"
msgstr "completion-table-in-turn"

#. type: findex
#: original_texis/minibuf.texi:937
#, no-wrap
msgid "completion-table-merge"
msgstr "completion-table-merge"

#. type: findex
#: original_texis/minibuf.texi:938
#, no-wrap
msgid "completion-table-subvert"
msgstr "completion-table-subvert"

#. type: findex
#: original_texis/minibuf.texi:939
#, no-wrap
msgid "completion-table-with-quoting"
msgstr "completion-table-with-quoting"

#. type: findex
#: original_texis/minibuf.texi:940
#, no-wrap
msgid "completion-table-with-predicate"
msgstr "completion-table-with-predicate"

#. type: findex
#: original_texis/minibuf.texi:941
#, no-wrap
msgid "completion-table-with-terminator"
msgstr "completion-table-with-terminator"

#. type: cindex
#: original_texis/minibuf.texi:942
#, no-wrap
msgid "completion table, modifying"
msgstr "completion table, modifying"

#. type: cindex
#: original_texis/minibuf.texi:943
#, no-wrap
msgid "completion tables, combining"
msgstr "completion tables, combining"

#. type: Plain text
#: original_texis/minibuf.texi:954
msgid "There are several functions that take an existing completion table and return a modified version.  @code{completion-table-case-fold} returns a case-insensitive table.  @code{completion-table-in-turn} and @code{completion-table-merge} combine multiple input tables in different ways.  @code{completion-table-subvert} alters a table to use a different initial prefix.  @code{completion-table-with-quoting} returns a table suitable for operating on quoted text.  @code{completion-table-with-predicate} filters a table with a predicate function.  @code{completion-table-with-terminator} adds a terminating string."
msgstr "既存の補完テーブルを受け取って変更したバージョンをリターンする関数がいくつかあります。@code{completion-table-case-fold}は大文字小文字を区別しない、case-insensitiveなテーブルをリターンします。@code{completion-table-in-turn}と@code{completion-table-merge}は、複数の入力テーブルを異なる方法で組み合わせます。@code{completion-table-subvert}はテーブルを異なる初期プレフィックス(initial prefix)で変更します。@code{completion-table-with-quoting}はクォートされたテキストの処理に適したテーブルをリターンします。@code{completion-table-with-predicate}は述語関数(predicate function)によるフィルタリングを行います。@code{completion-table-with-terminator}は終端文字列(terminating string)を追加します。"

#. type: subsection
#: original_texis/minibuf.texi:957
#, no-wrap
msgid "Completion and the Minibuffer"
msgstr "Completion and the Minibuffer"

#. type: cindex
#: original_texis/minibuf.texi:958
#, no-wrap
msgid "minibuffer completion"
msgstr "minibuffer completion"

#. type: cindex
#: original_texis/minibuf.texi:959
#, no-wrap
msgid "reading from minibuffer with completion"
msgstr "reading from minibuffer with completion"

#. type: Plain text
#: original_texis/minibuf.texi:963
msgid "This section describes the basic interface for reading from the minibuffer with completion."
msgstr "このセクションでは補完つきでミニバッファーから読み取るための、基本的なインターフェイスを説明します。"

#. type: defun
#: original_texis/minibuf.texi:964
#, no-wrap
msgid "completing-read prompt collection &optional predicate require-match initial history default inherit-input-method"
msgstr "completing-read prompt collection &optional predicate require-match initial history default inherit-input-method"

#. type: defun
#: original_texis/minibuf.texi:968
msgid "This function reads a string in the minibuffer, assisting the user by providing completion.  It activates the minibuffer with prompt @var{prompt}, which must be a string."
msgstr "この関数は補完の提供によりユーザーを支援して、ミニバッファーから文字列を読み取る。@var{prompt} (文字列でなければならない)のプロンプトとともにミニバッファーをアクティブ化する。"

#. type: defun
#: original_texis/minibuf.texi:977
msgid "The actual completion is done by passing the completion table @var{collection} and the completion predicate @var{predicate} to the function @code{try-completion} (@pxref{Basic Completion}).  This happens in certain commands bound in the local keymaps used for completion.  Some of these commands also call @code{test-completion}.  Thus, if @var{predicate} is non-@code{nil}, it should be compatible with @var{collection} and @code{completion-ignore-case}.  @xref{Definition of test-completion}."
msgstr "実際の補完は補完テーブル@var{collection}と補完述語@var{predicate}を関数@code{try-completion} (@ref{Basic Completion}を参照)に渡すことにより行われる。これは補完の使用されるローカルキーマップに特定のコマンドをバインドしたとき発生する。これらのコマンドのいくつかは@code{test-completion}も呼び出す。したがって@var{predicate}が非@code{nil}なら、@var{collection}と@code{completion-ignore-case}が矛盾しないようにすること。@ref{Definition of test-completion}を参照されたい。"

#. type: defun
#: original_texis/minibuf.texi:980
msgid "@xref{Programmed Completion}, for detailed requirements when @var{collection} is a function."
msgstr "@var{collection}が関数のときの詳細な要件は@ref{Programmed Completion}を参照のこと。"

#. type: defun
#: original_texis/minibuf.texi:983
msgid "The value of the optional argument @var{require-match} determines how the user may exit the minibuffer:"
msgstr "オプション引数@var{require-match}の値はユーザーがミニバッファーをexitする方法を決定する。"

#. type: itemize
#: original_texis/minibuf.texi:988
msgid "If @code{nil}, the usual minibuffer exit commands work regardless of the input in the minibuffer."
msgstr "@code{nil}なら、通常のミニバッファーexitコマンドはミニバッファーの入力と無関係に機能する。"

#. type: itemize
#: original_texis/minibuf.texi:992
msgid "If @code{t}, the usual minibuffer exit commands won't exit unless the input completes to an element of @var{collection}."
msgstr "@code{t}なら、入力が@var{collection}の要素に補完されるまで通常のミニバッファーexitコマンドは機能しない。"

#. type: itemize
#: original_texis/minibuf.texi:996
msgid "If @code{confirm}, the user can exit with any input, but is asked for confirmation if the input is not an element of @var{collection}."
msgstr "@code{confirm}なら、どのような入力でもユーザーはexitできるが、入力が@code{confirm}の要素に補完されていなければ確認を求められる。"

#. type: itemize
#: original_texis/minibuf.texi:1003
msgid "If @code{confirm-after-completion}, the user can exit with any input, but is asked for confirmation if the preceding command was a completion command (i.e., one of the commands in @code{minibuffer-confirm-exit-commands}) and the resulting input is not an element of @var{collection}.  @xref{Completion Commands}."
msgstr "@code{confirm-after-completion}なら、どのような入力でもユーザーはexitできるが、前のコマンドが補完コマンド(たとえば@code{minibuffer-confirm-exit-commands}の中のコマンドのいずれか)で、入力の結果が@var{collection}の要素でなければ確認を求められる。@ref{Completion Commands}を参照のこと。"

#. type: itemize
#: original_texis/minibuf.texi:1007
msgid "Any other value of @var{require-match} behaves like @code{t}, except that the exit commands won't exit if it performs completion."
msgstr "@var{require-match}にたいする他の値は@code{t}と同じだが、exitコマンドは補完処理中はexitしない。"

#. type: defun
#: original_texis/minibuf.texi:1015
msgid "However, empty input is always permitted, regardless of the value of @var{require-match}; in that case, @code{completing-read} returns the first element of @var{default}, if it is a list; @code{\"\"}, if @var{default} is @code{nil}; or @var{default}.  The string or strings in @var{default} are also available to the user through the history commands."
msgstr "しかし@var{require-match}の値に関わらず、空の入力は常に許容される。この場合@code{completing-read}は@var{default}がリストなら最初の要素、@var{default}が@code{nil}なら@code{\"\"}、または@var{default}をリターンする。文字列と@var{default}内の文字列はヒストリーコマンドを通じてユーザーが利用できる。"

#. type: defun
#: original_texis/minibuf.texi:1021
msgid "The function @code{completing-read} uses @code{minibuffer-local-completion-map} as the keymap if @var{require-match} is @code{nil}, and uses @code{minibuffer-local-must-match-map} if @var{require-match} is non-@code{nil}.  @xref{Completion Commands}."
msgstr "関数@code{completing-read}は@var{require-match}が@code{nil}ならキーマップとして@code{minibuffer-local-completion-map}を、@var{require-match}が非@code{nil}なら@code{minibuffer-local-must-match-map}を使用する。@ref{Completion Commands}を参照のこと。"

#. type: defun
#: original_texis/minibuf.texi:1025
msgid "The argument @var{history} specifies which history list variable to use for saving the input and for minibuffer history commands.  It defaults to @code{minibuffer-history}.  @xref{Minibuffer History}."
msgstr "引数@var{history}は入力の保存とミニバッファーヒストリーコマンドに、どのヒストリーリスト変数を使用するか指定する。デフォルトは@code{minibuffer-history}。@ref{Minibuffer History}を参照のこと。"

#. type: defun
#: original_texis/minibuf.texi:1030
msgid "The argument @var{initial} is mostly deprecated; we recommend using a non-@code{nil} value only in conjunction with specifying a cons cell for @var{history}.  @xref{Initial Input}.  For default input, use @var{default} instead."
msgstr "@var{initial}はほとんどの場合は推奨されない。@var{history}にたいするコンスセル指定と組み合わせた場合のみ非@code{nil}値の使用を推奨する。@ref{Initial Input}を参照のこと。デフォルト入力にたいしてはかわりに@var{default}を使用すること。"

#. type: defun
#: original_texis/minibuf.texi:1042
msgid "If the variable @code{completion-ignore-case} is non-@code{nil}, completion ignores case when comparing the input against the possible matches.  @xref{Basic Completion}.  In this mode of operation, @var{predicate} must also ignore case, or you will get surprising results."
msgstr "変数@code{completion-ignore-case}が非@code{nil}なら、利用可能なマッチにたいして入力を比較するときの補完はcaseを区別しない。@ref{Basic Completion}を参照のこと。このモードでの操作では、@var{predicate}もcaseを区別してはならない(さもないと驚くべき結果となるであろう)。"

#. type: defun
#: original_texis/minibuf.texi:1044
msgid "Here's an example of using @code{completing-read}:"
msgstr "以下は@code{completing-read}を使用した例:"

#. type: group
#: original_texis/minibuf.texi:1051
#, no-wrap
msgid ""
"(completing-read\n"
" \"Complete a foo: \"\n"
" '((\"foobar1\" 1) (\"barfoo\" 2) (\"foobaz\" 3) (\"foobar2\" 4))\n"
" nil t \"fo\")\n"
msgstr ""
"(completing-read\n"
" \"Complete a foo: \"\n"
" '((\"foobar1\" 1) (\"barfoo\" 2) (\"foobaz\" 3) (\"foobar2\" 4))\n"
" nil t \"fo\")\n"

#. type: group
#: original_texis/minibuf.texi:1056
#, no-wrap
msgid ""
";; @r{After evaluation of the preceding expression,}\n"
";;   @r{the following appears in the minibuffer:}\n"
"\n"
msgstr ""
";; @r{前の式を評価後に、}\n"
";;   @r{ミニバッファーに以下が表示される:}\n"
"\n"

#. type: group
#: original_texis/minibuf.texi:1060
#, no-wrap
msgid ""
"---------- Buffer: Minibuffer ----------\n"
"Complete a foo: fo@point{}\n"
"---------- Buffer: Minibuffer ----------\n"
msgstr ""
"---------- Buffer: Minibuffer ----------\n"
"Complete a foo: fo@point{}\n"
"---------- Buffer: Minibuffer ----------\n"

#. type: defun
#: original_texis/minibuf.texi:1066
msgid "If the user then types @kbd{@key{DEL} @key{DEL} b @key{RET}}, @code{completing-read} returns @code{barfoo}."
msgstr "その後ユーザーが@kbd{@key{DEL} @key{DEL} b @key{RET}}をタイプすると、@code{completing-read}は@code{barfoo}をリターンする。"

#. type: defun
#: original_texis/minibuf.texi:1070
msgid "The @code{completing-read} function binds variables to pass information to the commands that actually do completion.  They are described in the following section."
msgstr "@code{completing-read}関数は、実際に補完を行うコマンドの情報を渡すために変数をバインドする。これらの変数は以降のセクションで説明する。"

#. type: defvar
#: original_texis/minibuf.texi:1072
#, no-wrap
msgid "completing-read-function"
msgstr "completing-read-function"

#. type: defvar
#: original_texis/minibuf.texi:1078
msgid "The value of this variable must be a function, which is called by @code{completing-read} to actually do its work.  It should accept the same arguments as @code{completing-read}.  This can be bound to a different function to completely override the normal behavior of @code{completing-read}."
msgstr "この変数の値は関数でなければならず、補完つきの読み取りを実際に行うために@code{completing-read}から呼び出される。この関数は@code{completing-read}と同じ引数を受け入れる。他の関数のバインドして通常の@code{completing-read}の振る舞いを完全にオーバーライドすることができる。"

#. type: subsection
#: original_texis/minibuf.texi:1081
#, no-wrap
msgid "Minibuffer Commands that Do Completion"
msgstr "Minibuffer Commands that Do Completion"

#. type: Plain text
#: original_texis/minibuf.texi:1085
msgid "This section describes the keymaps, commands and user options used in the minibuffer to do completion."
msgstr "このセクションでは補完のためにミニバッファーで使用されるキーマップ、コマンド、ユーザーオプションを説明します。"

#. type: defvar
#: original_texis/minibuf.texi:1086
#, no-wrap
msgid "minibuffer-completion-table"
msgstr "minibuffer-completion-table"

#. type: defvar
#: original_texis/minibuf.texi:1092
msgid "The value of this variable is the completion table used for completion in the minibuffer.  This is the global variable that contains what @code{completing-read} passes to @code{try-completion}.  It is used by minibuffer completion commands such as @code{minibuffer-complete-word}."
msgstr "この変数の値はミニバッファー内の補完に使用される補完テーブルである。これは@code{completing-read}が@code{try-completion}に渡す補完テーブルを含んだグローバル変数である。@code{minibuffer-complete-word}のようなミニバッファー補完コマンドにより使用される。"

#. type: defvar
#: original_texis/minibuf.texi:1094
#, no-wrap
msgid "minibuffer-completion-predicate"
msgstr "minibuffer-completion-predicate"

#. type: defvar
#: original_texis/minibuf.texi:1098
msgid "This variable's value is the predicate that @code{completing-read} passes to @code{try-completion}.  The variable is also used by the other minibuffer completion functions."
msgstr "この変数の値は@code{completing-read}が@code{try-completion}に渡す述語(predicate)である。この変数は他のミニバッファー補完関数にも使用される。"

#. type: defvar
#: original_texis/minibuf.texi:1100
#, no-wrap
msgid "minibuffer-completion-confirm"
msgstr "minibuffer-completion-confirm"

#. type: defvar
#: original_texis/minibuf.texi:1112
msgid "This variable determines whether Emacs asks for confirmation before exiting the minibuffer; @code{completing-read} binds this variable, and the function @code{minibuffer-complete-and-exit} checks the value before exiting.  If the value is @code{nil}, confirmation is not required.  If the value is @code{confirm}, the user may exit with an input that is not a valid completion alternative, but Emacs asks for confirmation.  If the value is @code{confirm-after-completion}, the user may exit with an input that is not a valid completion alternative, but Emacs asks for confirmation if the user submitted the input right after any of the completion commands in @code{minibuffer-confirm-exit-commands}."
msgstr "この変数はミニバッファーをexitする前にEmacsが確認を求めるかどうかを決定する。@code{completing-read}はこの変数をバインドして、exitする前に関数@code{minibuffer-complete-and-exit}がこの値をチェックする。値が@code{nil}なら確認は求められない。値が@code{confirm}の場合は、入力が有効な補完候補でなくてもユーザーはexitするかもしれないがEmacsは確認を求めない。値が@code{confirm-after-completion}の場合、入力が有効な補完候補でなくてもユーザーはexitするかもしれないが、ユーザーが@code{minibuffer-confirm-exit-commands}内の任意の補完コマンドの直後に入力を確定した場合にはEmacsは確認を求める。"

#. type: defvar
#: original_texis/minibuf.texi:1114
#, no-wrap
msgid "minibuffer-confirm-exit-commands"
msgstr "minibuffer-confirm-exit-commands"

#. type: defvar
#: original_texis/minibuf.texi:1120
msgid "This variable holds a list of commands that cause Emacs to ask for confirmation before exiting the minibuffer, if the @var{require-match} argument to @code{completing-read} is @code{confirm-after-completion}.  The confirmation is requested if the user attempts to exit the minibuffer immediately after calling any command in this list."
msgstr "この変数には、@code{completing-read}の引数@var{require-match}が@code{confirm-after-completion}のときにミニバッファーexit前にEmacsに確認を求めさせるコマンドのリストが保持されている。このリスト内のコマンドを呼び出した直後にユーザーがミニバッファーのexitを試みるとEmacsは確認を求める。"

#. type: deffn
#: original_texis/minibuf.texi:1122
#, no-wrap
msgid "Command minibuffer-complete-word"
msgstr "Command minibuffer-complete-word"

#. type: deffn
#: original_texis/minibuf.texi:1127
msgid "This function completes the minibuffer contents by at most a single word.  Even if the minibuffer contents have only one completion, @code{minibuffer-complete-word} does not add any characters beyond the first character that is not a word constituent.  @xref{Syntax Tables}."
msgstr "この関数はせいぜい1つの単語からミニバッファーを補完する。たとえミニバッファーのコンテンツが1つの補完しかもたない場合でも、@code{minibuffer-complete-word}はその単語に属さない最初の文字を超えた追加はしない。@ref{Syntax Tables}を参照のこと。"

#. type: deffn
#: original_texis/minibuf.texi:1129
#, no-wrap
msgid "Command minibuffer-complete"
msgstr "Command minibuffer-complete"

#. type: deffn
#: original_texis/minibuf.texi:1131
msgid "This function completes the minibuffer contents as far as possible."
msgstr "この関数は可能な限りミニバッファーのコンテンツを補完する。"

#. type: deffn
#: original_texis/minibuf.texi:1133
#, no-wrap
msgid "Command minibuffer-complete-and-exit"
msgstr "Command minibuffer-complete-and-exit"

#. type: deffn
#: original_texis/minibuf.texi:1140
msgid "This function completes the minibuffer contents, and exits if confirmation is not required, i.e., if @code{minibuffer-completion-confirm} is @code{nil}.  If confirmation @emph{is} required, it is given by repeating this command immediately---the command is programmed to work without confirmation when run twice in succession."
msgstr "この関数はミニバッファーのコンテンツを補完して確認が要求されない場合(たとえば@code{minibuffer-completion-confirm}が@code{nil}のとき)はexitする。確認が@emph{要求される}場合には、このコマンドを即座に繰り返すことによって確認が行われないようにする。このコマンドは2回連続で実行された場合は確認なしで機能するようにプログラムされている。"

#. type: deffn
#: original_texis/minibuf.texi:1142
#, no-wrap
msgid "Command minibuffer-completion-help"
msgstr "Command minibuffer-completion-help"

#. type: deffn
#: original_texis/minibuf.texi:1150
msgid "This function creates a list of the possible completions of the current minibuffer contents.  It works by calling @code{all-completions} using the value of the variable @code{minibuffer-completion-table} as the @var{collection} argument, and the value of @code{minibuffer-completion-predicate} as the @var{predicate} argument.  The list of completions is displayed as text in a buffer named @file{*Completions*}."
msgstr "この関数はカレントのミニバッファーのコンテンツで利用可能な補完のリストを作成する。これは@code{all-completions}の引数@var{collection}に変数@code{minibuffer-completion-table}の値、引数@var{predicate}に@code{minibuffer-completion-predicate}の値を使用して呼び出すことによって機能する。補完リストは@file{*Completions*}と呼ばれるバッファーのテキストとして表示される。"

#. type: defun
#: original_texis/minibuf.texi:1152
#, no-wrap
msgid "display-completion-list completions"
msgstr "display-completion-list completions"

#. type: defun
#: original_texis/minibuf.texi:1162
msgid "This function displays @var{completions} to the stream in @code{standard-output}, usually a buffer.  (@xref{Read and Print}, for more information about streams.)  The argument @var{completions} is normally a list of completions just returned by @code{all-completions}, but it does not have to be.  Each element may be a symbol or a string, either of which is simply printed.  It can also be a list of two strings, which is printed as if the strings were concatenated.  The first of the two strings is the actual completion, the second string serves as annotation."
msgstr "この関数は@code{standard-output}内のストリーム(通常はバッファー)に@var{completions}を表示する(ストリームについての詳細は@ref{Read and Print}を参照)。引数@var{completions}は通常は@code{all-completions}がリターンする補完リストそのものだが、そうである必要はない。要素はシンボルか文字列で、どちらも単にプリントされる。文字列2つのリストでもよく、2つの文字列が結合されたかのようにプリントされる。この場合、1つ目の文字列は実際の補完で、2つ目の文字列は注釈の役目を負う。"

#. type: defun
#: original_texis/minibuf.texi:1166
msgid "This function is called by @code{minibuffer-completion-help}.  A common way to use it is together with @code{with-output-to-temp-buffer}, like this:"
msgstr "この関数は@code{minibuffer-completion-help}より呼び出される。一般的には以下のように@code{with-output-to-temp-buffer}とともに使用される。"

#. type: example
#: original_texis/minibuf.texi:1171
#, no-wrap
msgid ""
"(with-output-to-temp-buffer \"*Completions*\"\n"
"  (display-completion-list\n"
"    (all-completions (buffer-string) my-alist)))\n"
msgstr ""
"(with-output-to-temp-buffer \"*Completions*\"\n"
"  (display-completion-list\n"
"    (all-completions (buffer-string) my-alist)))\n"

#. type: defopt
#: original_texis/minibuf.texi:1174
#, no-wrap
msgid "completion-auto-help"
msgstr "completion-auto-help"

#. type: defopt
#: original_texis/minibuf.texi:1178
msgid "If this variable is non-@code{nil}, the completion commands automatically display a list of possible completions whenever nothing can be completed because the next character is not uniquely determined."
msgstr "この変数が非@code{nil}なら、次の文字が一意でなく決定できないために補完が完了しないときは常に、補完コマンドは利用可能な補完リストを自動的に表示する。"

#. type: defvar
#: original_texis/minibuf.texi:1180
#, no-wrap
msgid "minibuffer-local-completion-map"
msgstr "minibuffer-local-completion-map"

#. type: defvar
#: original_texis/minibuf.texi:1184
msgid "@code{completing-read} uses this value as the local keymap when an exact match of one of the completions is not required.  By default, this keymap makes the following bindings:"
msgstr "@code{completing-read}の値は、補完の1つが完全に一致することを要求されないときにローカルキーマップとして使用される。デフォルトではこのキーマップは以下のバインディングを作成する:"

#. type: code{#1}
#: original_texis/minibuf.texi:1188
msgid "minibuffer-completion-help"
msgstr "minibuffer-completion-help"

#. type: code{#1}
#: original_texis/minibuf.texi:1191
msgid "minibuffer-complete-word"
msgstr "minibuffer-complete-word"

#. type: code{#1}
#: original_texis/minibuf.texi:1194
msgid "minibuffer-complete"
msgstr "minibuffer-complete"

#. type: defvar
#: original_texis/minibuf.texi:1199
msgid "and uses @code{minibuffer-local-map} as its parent keymap (@pxref{Definition of minibuffer-local-map})."
msgstr "親キーマップとして@code{minibuffer-local-map}を使用する(@ref{Definition of minibuffer-local-map}を参照)。"

#. type: defvar
#: original_texis/minibuf.texi:1201
#, no-wrap
msgid "minibuffer-local-must-match-map"
msgstr "minibuffer-local-must-match-map"

#. type: defvar
#: original_texis/minibuf.texi:1207
msgid "@code{completing-read} uses this value as the local keymap when an exact match of one of the completions is required.  Therefore, no keys are bound to @code{exit-minibuffer}, the command that exits the minibuffer unconditionally.  By default, this keymap makes the following bindings:"
msgstr "@code{completing-read}は、1つの補完の完全な一致が要求されないときのローカルキーマップとしてこの値を使用する。したがって@code{exit-minibuffer}にキーがバインドされていなければ、無条件にミニバッファーをexitする。デフォルトでは、このキーマップは以下のバインディングを作成する:"

#. type: code{#1}
#: original_texis/minibuf.texi:1211 original_texis/minibuf.texi:1214
msgid "minibuffer-complete-and-exit"
msgstr "minibuffer-complete-and-exit"

#. type: defvar
#: original_texis/minibuf.texi:1218
msgid "and uses @code{minibuffer-local-completion-map} as its parent keymap."
msgstr "親キーマップは@code{minibuffer-local-completion-map}を使用する。"

#. type: defvar
#: original_texis/minibuf.texi:1220
#, no-wrap
msgid "minibuffer-local-filename-completion-map"
msgstr "minibuffer-local-filename-completion-map"

#. type: defvar
#: original_texis/minibuf.texi:1225
msgid "This is a sparse keymap that simply unbinds @key{SPC}; because filenames can contain spaces.  The function @code{read-file-name} combines this keymap with either @code{minibuffer-local-completion-map} or @code{minibuffer-local-must-match-map}."
msgstr "これは単に@key{SPC}を非バインドするsparseキーマップ(sparse: 疎、希薄、まばら)を作成する。これはファイル名にスペースを含めることができるからである。関数@code{read-file-name}は、このキーマップと@code{minibuffer-local-completion-map}か@code{minibuffer-local-must-match-map}のいずれかを組み合わせる。"

#. type: subsection
#: original_texis/minibuf.texi:1229
#, no-wrap
msgid "High-Level Completion Functions"
msgstr "High-Level Completion Functions"

#. type: Plain text
#: original_texis/minibuf.texi:1233
msgid "This section describes the higher-level convenience functions for reading certain sorts of names with completion."
msgstr "このセクションでは特定の種類の名前を補完つきで読み取る便利な高レベル関数を説明します。"

#. type: Plain text
#: original_texis/minibuf.texi:1238
msgid "In most cases, you should not call these functions in the middle of a Lisp function.  When possible, do all minibuffer input as part of reading the arguments for a command, in the @code{interactive} specification.  @xref{Defining Commands}."
msgstr "ほとんどの場合は、Lisp関数の中盤でこれらの関数を呼び出すべきではありません。可能なときは@code{interactive}指定の内部で呼び出して、ミニバッファーのすべての入力をコマンドの引数読み取りの一部にします。@ref{Defining Commands}を参照してください。"

#. type: defun
#: original_texis/minibuf.texi:1239
#, no-wrap
msgid "read-buffer prompt &optional default require-match predicate"
msgstr "read-buffer prompt &optional default require-match predicate"

#. type: defun
#: original_texis/minibuf.texi:1247
msgid "This function reads the name of a buffer and returns it as a string.  It prompts with @var{prompt}.  The argument @var{default} is the default name to use, the value to return if the user exits with an empty minibuffer.  If non-@code{nil}, it should be a string, a list of strings, or a buffer.  If it is a list, the default value is the first element of this list.  It is mentioned in the prompt, but is not inserted in the minibuffer as initial input."
msgstr "この関数はバッファーの名前を読み取ってそれを文字列でリターンする。プロンプトは@var{prompt}。引数@var{default}はミニバッファーが空の状態でユーザーがexitした場合にリターンされるデフォルト名として使用される。非@code{nil}なら文字列、文字列リスト、またはバッファーを指定する。リストならリストの先頭の要素がデフォルト値になる。デフォルト値はプロンプトに示されるが、初期入力としてミニバッファーには挿入されない。"

#. type: defun
#: original_texis/minibuf.texi:1252
msgid "The argument @var{prompt} should be a string ending with a colon and a space.  If @var{default} is non-@code{nil}, the function inserts it in @var{prompt} before the colon to follow the convention for reading from the minibuffer with a default value (@pxref{Programming Tips})."
msgstr "引数@var{prompt}はコロンかスペースで終わる文字列である。@var{default}が非@code{nil}なら、この関数はデフォルト値つきでミニバッファーから読み取る際の慣習にしたがってコロンの前の@var{prompt}の中にこれを挿入する。"

#. type: defun
#: original_texis/minibuf.texi:1255 original_texis/minibuf.texi:1430
msgid "The optional argument @var{require-match} has the same meaning as in @code{completing-read}.  @xref{Minibuffer Completion}."
msgstr "オプション引数@var{require-match}は@code{completing-read}のときと同じ。@ref{Minibuffer Completion}を参照のこと。"

#. type: defun
#: original_texis/minibuf.texi:1261
msgid "The optional argument @var{predicate}, if non-@code{nil}, specifies a function to filter the buffers that should be considered: the function will be called with every potential candidate as its argument, and should return @code{nil} to reject the candidate, non-@code{nil} to accept it."
msgstr "オプション引数@var{predicate}が非@code{nil}なら、それは考慮すべきバッファーをフィルターする関数を指定する。この関数は可能性のある候補を引数として呼び出されて、候補を拒絶するなら@code{nil}、許容するなら非@code{nil}をリターンすること。"

#. type: defun
#: original_texis/minibuf.texi:1266
msgid "In the following example, the user enters @samp{minibuffer.t}, and then types @key{RET}.  The argument @var{require-match} is @code{t}, and the only buffer name starting with the given input is @samp{minibuffer.texi}, so that name is the value."
msgstr "以下の例ではユーザーが@samp{minibuffer.t}とエンターしてから、@key{RET}をタイプしている。引数@var{require-match}は@code{t}であり、与えられた入力で始まるバッファー名は@samp{minibuffer.texi}だけなので、その名前が値となる。"

#. type: example
#: original_texis/minibuf.texi:1269
#, no-wrap
msgid "(read-buffer \"Buffer name: \" \"foo\" t)\n"
msgstr "(read-buffer \"Buffer name: \" \"foo\" t)\n"

#. type: group
#: original_texis/minibuf.texi:1273 original_texis/minibuf.texi:2038
#, no-wrap
msgid ""
";; @r{After evaluation of the preceding expression,}\n"
";;   @r{the following prompt appears,}\n"
";;   @r{with an empty minibuffer:}\n"
msgstr ""
";; @r{前の式を評価した後、}\n"
";;   @r{空のミニバッファーに}\n"
";;   @r{以下のプロンプトが表示される:}\n"

#. type: group
#: original_texis/minibuf.texi:1279
#, no-wrap
msgid ""
"---------- Buffer: Minibuffer ----------\n"
"Buffer name (default foo): @point{}\n"
"---------- Buffer: Minibuffer ----------\n"
msgstr ""
"---------- Buffer: Minibuffer ----------\n"
"Buffer name (default foo): @point{}\n"
"---------- Buffer: Minibuffer ----------\n"

#. type: group
#: original_texis/minibuf.texi:1284
#, no-wrap
msgid ""
";; @r{The user types @kbd{minibuffer.t @key{RET}}.}\n"
"     @result{} \"minibuffer.texi\"\n"
msgstr ""
";; @r{ユーザーが@kbd{minibuffer.t @key{RET}}とタイプする}\n"
"     @result{} \"minibuffer.texi\"\n"

#. type: defopt
#: original_texis/minibuf.texi:1288
#, no-wrap
msgid "read-buffer-function"
msgstr "read-buffer-function"

#. type: defopt
#: original_texis/minibuf.texi:1292
msgid "This variable, if non-@code{nil}, specifies a function for reading buffer names.  @code{read-buffer} calls this function instead of doing its usual work, with the same arguments passed to @code{read-buffer}."
msgstr "この変数が非@code{nil}なら、それはバッファー名を読み取る関数を指定する。@code{read-buffer}は通常行うことを行うかわりに、@code{read-buffer}と同じ引数でその関数を呼び出す。"

#. type: defopt
#: original_texis/minibuf.texi:1294
#, no-wrap
msgid "read-buffer-completion-ignore-case"
msgstr "read-buffer-completion-ignore-case"

#. type: defopt
#: original_texis/minibuf.texi:1297
msgid "If this variable is non-@code{nil}, @code{read-buffer} ignores case when performing completion while reading the buffer name."
msgstr "この変数が非non-@code{nil}なら、バッファー名の読み取りの補完処理において@code{read-buffer}はcaseを無視する。"

#. type: defun
#: original_texis/minibuf.texi:1299
#, no-wrap
msgid "read-command prompt &optional default"
msgstr "read-command prompt &optional default"

#. type: defun
#: original_texis/minibuf.texi:1305
msgid "This function reads the name of a command and returns it as a Lisp symbol.  The argument @var{prompt} is used as in @code{read-from-minibuffer}.  Recall that a command is anything for which @code{commandp} returns @code{t}, and a command name is a symbol for which @code{commandp} returns @code{t}.  @xref{Interactive Call}."
msgstr "この関数はコマンドの名前を読み取って、Lispシンボルとしてそれをリターンする。引数@var{prompt}は@code{read-from-minibuffer}で使用される場合と同じ。それが何であれ@code{commandp}が@code{t}をリターンすればコマンドであり、コマンド名とは@code{commandp}が@code{t}をリターンするシンボルだということを思い出してほしい。@ref{Interactive Call}を参照のこと。"

#. type: defun
#: original_texis/minibuf.texi:1313
msgid "The argument @var{default} specifies what to return if the user enters null input.  It can be a symbol, a string or a list of strings.  If it is a string, @code{read-command} interns it before returning it.  If it is a list, @code{read-command} interns the first element of this list.  If @var{default} is @code{nil}, that means no default has been specified; then if the user enters null input, the return value is @code{(intern \"\")}, that is, a symbol whose name is an empty string."
msgstr "引数@var{default}はユーザーがnull入力をエンターした場合に何をリターンするか指定する。シンボル、文字列、文字列リストを指定できる。文字列なら@code{read-command}はリターンする前にそれをinternする。リストなら@code{read-command}はリストの最初の要素をinternする。@var{default}が@code{nil}ならデフォルトが指定されなかったことを意味する。その場合もしユーザーがnull入力をエンターすると、リターン値は@code{(intern \"\")}、つまり名前が空文字列のシンボルとなる。"

#. type: example
#: original_texis/minibuf.texi:1316
#, no-wrap
msgid ""
"(read-command \"Command name? \")\n"
"\n"
msgstr ""
"(read-command \"Command name? \")\n"
"\n"

#. type: group
#: original_texis/minibuf.texi:1320
#, no-wrap
msgid ""
";; @r{After evaluation of the preceding expression,}\n"
";;   @r{the following prompt appears with an empty minibuffer:}\n"
msgstr ""
";; @r{前の式を評価した後に、}\n"
";;   @r{空のミニバッファーに以下のプロンプトが表示される:}\n"

#. type: group
#: original_texis/minibuf.texi:1326
#, no-wrap
msgid ""
"---------- Buffer: Minibuffer ----------\n"
"Command name?\n"
"---------- Buffer: Minibuffer ----------\n"
msgstr ""
"---------- Buffer: Minibuffer ----------\n"
"Command name?\n"
"---------- Buffer: Minibuffer ----------\n"

#. type: defun
#: original_texis/minibuf.texi:1332
msgid "If the user types @kbd{forward-c @key{RET}}, then this function returns @code{forward-char}."
msgstr "ユーザーが@kbd{forward-c @key{RET}}とタイプすると、この関数は@code{forward-char}をリターンする。"

#. type: defun
#: original_texis/minibuf.texi:1337
msgid "The @code{read-command} function is a simplified interface to @code{completing-read}.  It uses the variable @code{obarray} so as to complete in the set of extant Lisp symbols, and it uses the @code{commandp} predicate so as to accept only command names:"
msgstr "@code{read-command}関数は@code{completing-read}の簡略化されたインターフェイスである。実在するLisp変数のセットを補完するために変数@code{obarray}、コマンド名だけを受け入れるために述語@code{commandp}を使用する。"

#. type: cindex
#: original_texis/minibuf.texi:1338
#, no-wrap
msgid "@code{commandp} example"
msgstr "@code{commandp} example"

#. type: group
#: original_texis/minibuf.texi:1345
#, no-wrap
msgid ""
"(read-command @var{prompt})\n"
"@equiv{}\n"
"(intern (completing-read @var{prompt} obarray\n"
"                         'commandp t nil))\n"
msgstr ""
"(read-command @var{prompt})\n"
"@equiv{}\n"
"(intern (completing-read @var{prompt} obarray\n"
"                         'commandp t nil))\n"

#. type: defun
#: original_texis/minibuf.texi:1349
#, no-wrap
msgid "read-variable prompt &optional default"
msgstr "read-variable prompt &optional default"

#. type: anchor{#1}
#: original_texis/minibuf.texi:1356
msgid "Definition of read-variable"
msgstr "Definition of read-variable"

#. type: defun
#: original_texis/minibuf.texi:1356
msgid "This function reads the name of a customizable variable and returns it as a symbol.  Its arguments have the same form as those of @code{read-command}.  It behaves just like @code{read-command}, except that it uses the predicate @code{custom-variable-p} instead of @code{commandp}."
msgstr "この変数はカスタマイズ可能な変数の名前を読み取って、それをシンボルとしてリターンする。引数の形式は@code{read-command}の引数と同じ。この関数は@code{commandp}のかわりに@code{custom-variable-p}を述語に使用する点を除いて@code{read-command}と同様に振る舞う。"

#. type: deffn
#: original_texis/minibuf.texi:1358
#, no-wrap
msgid "Command read-color &optional prompt convert allow-empty display"
msgstr "Command read-color &optional prompt convert allow-empty display"

#. type: deffn
#: original_texis/minibuf.texi:1365
msgid "This function reads a string that is a color specification, either the color's name or an RGB hex value such as @code{#RRRGGGBBB}.  It prompts with @var{prompt} (default: @code{\"Color (name or #RGB triplet):\"})  and provides completion for color names, but not for hex RGB values.  In addition to names of standard colors, completion candidates include the foreground and background colors at point."
msgstr "この関数はカラー指定(カラー名、または@code{#RRRGGGBBB}のような形式のRGB16進値)の文字列を読み取る。これはプロンプトに@var{prompt}(デフォルトは@code{\"Color (name or #RGB triplet):\"})を表示して、カラー名にたいする補完を提供する(16進RGB値は補完しない)。標準的なカラー名に加えて、補完候補にはポイント位置のフォアグラウンドカラーとバックグラウンドカラーが含まれる。"

#. type: deffn
#: original_texis/minibuf.texi:1367
msgid "Valid RGB values are described in @ref{Color Names}."
msgstr "Valid RGB values are described in @ref{Color Names}."

#. type: deffn
#: original_texis/minibuf.texi:1375
msgid "The function's return value is the string typed by the user in the minibuffer.  However, when called interactively or if the optional argument @var{convert} is non-@code{nil}, it converts any input color name into the corresponding RGB value string and instead returns that.  This function requires a valid color specification to be input.  Empty color names are allowed when @var{allow-empty} is non-@code{nil} and the user enters null input."
msgstr "この関数のリターン値はミニバッファー内でユーザーがタイプした文字列である。しかしインタラクティブに呼び出されたとき、またはオプション引数@var{convert}が非@code{nil}なら、入力されたカラー名のかわりにそれに対応するRGB値文字列をリターンする。この関数は入力として有効なカラー指定を求める。@var{allow-empty}が非@code{nil}でユーザーがnull入力をエンターした場合は空のカラー名が許容される。"

#. type: deffn
#: original_texis/minibuf.texi:1378
msgid "Interactively, or when @var{display} is non-@code{nil}, the return value is also displayed in the echo area."
msgstr "インタラクティブに呼び出されたとき、または@var{display}が非@code{nil}なら、エコーエリアにもリターン値が表示される。"

#. type: Plain text
#: original_texis/minibuf.texi:1383
msgid "See also the functions @code{read-coding-system} and @code{read-non-nil-coding-system}, in @ref{User-Chosen Coding Systems}, and @code{read-input-method-name}, in @ref{Input Methods}."
msgstr "@ref{User-Chosen Coding Systems}の関数@code{read-coding-system}と@code{read-non-nil-coding-system}、および@ref{Input Methods}の@code{read-input-method-name}も参照されたい。"

#. type: cindex
#: original_texis/minibuf.texi:1386
#, no-wrap
msgid "read file names"
msgstr "read file names"

#. type: cindex
#: original_texis/minibuf.texi:1387
#, no-wrap
msgid "prompt for file name"
msgstr "prompt for file name"

#. type: Plain text
#: original_texis/minibuf.texi:1394
msgid "The high-level completion functions @code{read-file-name}, @code{read-directory-name}, and @code{read-shell-command} are designed to read file names, directory names, and shell commands, respectively.  They provide special features, including automatic insertion of the default directory."
msgstr "高レベル補完関数@code{read-file-name}、@code{read-directory-name}、@code{read-shell-command}はそれぞれファイル名、ディレクトリー名、シェルコマンドを読み取るようにデザインされています。これらはデフォルトディレクトリーの自動挿入を含む特別な機能を提供します。"

#. type: defun
#: original_texis/minibuf.texi:1395
#, no-wrap
msgid "read-file-name prompt &optional directory default require-match initial predicate"
msgstr "read-file-name prompt &optional directory default require-match initial predicate"

#. type: defun
#: original_texis/minibuf.texi:1398
msgid "This function reads a file name, prompting with @var{prompt} and providing completion."
msgstr "この関数はプロンプト@var{prompt}とともに補完つきでファイル名を読み取る。"

#. type: defun
#: original_texis/minibuf.texi:1402
msgid "As an exception, this function reads a file name using a graphical file dialog instead of the minibuffer, if all of the following are true:"
msgstr "例外として以下のすべてが真ならば、この関数はミニバッファーのかわりにグラフィカルなファイルダイアログを使用してファイル名を読み取る:"

#. type: enumerate
#: original_texis/minibuf.texi:1406
msgid "It is invoked via a mouse command."
msgstr "マウスコマンドを通じて呼び出された。"

#. type: enumerate
#: original_texis/minibuf.texi:1409
msgid "The selected frame is on a graphical display supporting such dialogs."
msgstr "グラフィカルなディスプレイ上の選択されたフレームがこの種のダイアログをサポートしている。"

#. type: enumerate
#: original_texis/minibuf.texi:1413
msgid "The variable @code{use-dialog-box} is non-@code{nil}.  @xref{Dialog Boxes,, Dialog Boxes, emacs, The GNU Emacs Manual}."
msgstr "変数@code{use-dialog-box}が非@code{nil}の場合。@ref{Dialog Boxes,, Dialog Boxes, emacs, The GNU Emacs Manual}を参照のこと。"

#. type: enumerate
#: original_texis/minibuf.texi:1417
msgid "The @var{directory} argument, described below, does not specify a remote file.  @xref{Remote Files,, Remote Files, emacs, The GNU Emacs Manual}."
msgstr "@var{directory}引数(以下参照)がリモートファイルを指定しない場合。@ref{Remote Files,, Remote Files, emacs, The GNU Emacs Manual}を参照のこと。"

#. type: defun
#: original_texis/minibuf.texi:1423
msgid "The exact behavior when using a graphical file dialog is platform-dependent.  Here, we simply document the behavior when using the minibuffer."
msgstr "グラフィカルなファイルダイアログを使用したときの正確な振る舞いはプラットホームに依存する。ここでは単にミニバッファーを使用したときの振る舞いを示す。"

#. type: defun
#: original_texis/minibuf.texi:1427
msgid "@code{read-file-name} does not automatically expand the returned file name.  You must call @code{expand-file-name} yourself if an absolute file name is required."
msgstr "@code{read-file-name}はリターンするファイル名を自動的に展開しない。絶対ファイル名が必要なら、自分で@code{expand-file-name}を呼び出さなければならない。"

#. type: defun
#: original_texis/minibuf.texi:1436
msgid "The argument @var{directory} specifies the directory to use for completing relative file names.  It should be an absolute directory name.  If the variable @code{insert-default-directory} is non-@code{nil}, @var{directory} is also inserted in the minibuffer as initial input.  It defaults to the current buffer's value of @code{default-directory}."
msgstr "引数@var{directory}は、相対ファイル名の補完に使用するディレクトリーを指定する。値は絶対ディレクトリー名。変数@code{insert-default-directory}が非@code{nil}なら、初期入力としてミニバッファーに@var{directory}も挿入される。デフォルトはカレントバッファーの@code{default-directory}の値。"

#. type: defun
#: original_texis/minibuf.texi:1444
msgid "If you specify @var{initial}, that is an initial file name to insert in the buffer (after @var{directory}, if that is inserted).  In this case, point goes at the beginning of @var{initial}.  The default for @var{initial} is @code{nil}---don't insert any file name.  To see what @var{initial} does, try the command @kbd{C-x C-v} in a buffer visiting a file.  @strong{Please note:} we recommend using @var{default} rather than @var{initial} in most cases."
msgstr "@var{initial}を指定すると、それはミニバッファーに挿入する初期ファイル名になる(@var{directory}が挿入された場合はその後に挿入される)。この場合、ポイントは@var{initial}の先頭に配置される。@var{initial}のデフォルト値は@code{nil}(ファイル名を挿入しない)。@var{initial}が何を行うか確認するには、ファイルをvisitしているバッファーで@kbd{C-x C-v}を試すとよい。@strong{注意: ほとんどの場合は}@var{initial}よりも@var{default}の使用を推奨する。"

#. type: defun
#: original_texis/minibuf.texi:1457
msgid "If @var{default} is non-@code{nil}, then the function returns @var{default} if the user exits the minibuffer with the same non-empty contents that @code{read-file-name} inserted initially.  The initial minibuffer contents are always non-empty if @code{insert-default-directory} is non-@code{nil}, as it is by default.  @var{default} is not checked for validity, regardless of the value of @var{require-match}.  However, if @var{require-match} is non-@code{nil}, the initial minibuffer contents should be a valid file (or directory) name.  Otherwise @code{read-file-name} attempts completion if the user exits without any editing, and does not return @var{default}.  @var{default} is also available through the history commands."
msgstr "@var{default}が非@code{nil}なら、最初に@code{read-file-name}が挿入したものと等しい空以外のコンテンツを残してユーザーがミニバッファーをexitすると、この関数は@var{default}をリターンする。@code{insert-default-directory}が非@code{nil}ならそれがデフォルトとなるので、ミニバッファーの初期コンテンツは常に空以外になる。@var{require-match}の値に関わらず@var{default}の有効性はチェックされない。とはいえ@var{require-match}が非@code{nil}なら、ミニバッファーの初期コンテンツは有効なファイル名(またはディレクトリー名)であるべきだろう。それが有効でなければ、ユーザーがそれを編集せずにexitすると@code{read-file-name}は補完を試みて、@var{default}はリターンされない。@var{default}はヒストリーコマンドからも利用できる。"

#. type: defun
#: original_texis/minibuf.texi:1469
msgid "If @var{default} is @code{nil}, @code{read-file-name} tries to find a substitute default to use in its place, which it treats in exactly the same way as if it had been specified explicitly.  If @var{default} is @code{nil}, but @var{initial} is non-@code{nil}, then the default is the absolute file name obtained from @var{directory} and @var{initial}.  If both @var{default} and @var{initial} are @code{nil} and the buffer is visiting a file, @code{read-file-name} uses the absolute file name of that file as default.  If the buffer is not visiting a file, then there is no default.  In that case, if the user types @key{RET} without any editing, @code{read-file-name} simply returns the pre-inserted contents of the minibuffer."
msgstr "@var{default}が@code{nil}なら、@code{read-file-name}はその場所に代用するデフォルトを探そうと試みる。この代用デフォルトは明示的に@var{default}にそれが指定されたかのように、@var{default}とまったく同じ方法で扱われる。@var{default}が@code{nil}でも@var{initial}が非@code{nil}なら、デフォルトは@var{directory}と@var{initial}から得られる絶対ファイル名になる。@var{default}と@var{initial}の両方が@code{nil}で、そのバッファーがファイルをvisitしているバッファーなら、@code{read-file-name}はそのファイルの絶対ファイル名をデフォルトとして使用する。バッファーがファイルをvisitしていなければデフォルトは存在しない。この場合はユーザーが編集せずに@key{RET}をタイプすると、@code{read-file-name}は前にミニバッファーに挿入されたコンテンツを単にリターンする。"

#. type: defun
#: original_texis/minibuf.texi:1474
msgid "If the user types @key{RET} in an empty minibuffer, this function returns an empty string, regardless of the value of @var{require-match}.  This is, for instance, how the user can make the current buffer visit no file using @kbd{M-x set-visited-file-name}."
msgstr "空のミニバッファー内でユーザーが@key{RET}をタイプすると、この関数は@var{require-match}の値に関わらず空文字列をリターンする。たとえばユーザーが@kbd{M-x set-visited-file-name}を使用して、カレントバッファーをファイルをvisitしていないことにするために、この方法を使用している。"

#. type: defun
#: original_texis/minibuf.texi:1479
msgid "If @var{predicate} is non-@code{nil}, it specifies a function of one argument that decides which file names are acceptable completion alternatives.  A file name is an acceptable value if @var{predicate} returns non-@code{nil} for it."
msgstr "@var{predicate}が非@code{nil}なら、それは補完候補として許容できるファイル名を決定する1引数の関数である。@var{predicate}が関数名にたいして非@code{nil}をリターンすれば、それはファイル名として許容できる値である。"

#. type: defun
#: original_texis/minibuf.texi:1481
msgid "Here is an example of using @code{read-file-name}:"
msgstr "以下は@code{read-file-name}を使用した例:"

#. type: group
#: original_texis/minibuf.texi:1485
#, no-wrap
msgid ""
"(read-file-name \"The file is \")\n"
"\n"
msgstr ""
"(read-file-name \"The file is \")\n"
"\n"

#. type: group
#: original_texis/minibuf.texi:1494
#, no-wrap
msgid ""
"---------- Buffer: Minibuffer ----------\n"
"The file is /gp/gnu/elisp/@point{}\n"
"---------- Buffer: Minibuffer ----------\n"
msgstr ""
"---------- Buffer: Minibuffer ----------\n"
"The file is /gp/gnu/elisp/@point{}\n"
"---------- Buffer: Minibuffer ----------\n"

#. type: defun
#: original_texis/minibuf.texi:1499
msgid "Typing @kbd{manual @key{TAB}} results in the following:"
msgstr "@kbd{manual @key{TAB}}をタイプすると以下がリターンされる:"

#. type: group
#: original_texis/minibuf.texi:1505
#, no-wrap
msgid ""
"---------- Buffer: Minibuffer ----------\n"
"The file is /gp/gnu/elisp/manual.texi@point{}\n"
"---------- Buffer: Minibuffer ----------\n"
msgstr ""
"---------- Buffer: Minibuffer ----------\n"
"The file is /gp/gnu/elisp/manual.texi@point{}\n"
"---------- Buffer: Minibuffer ----------\n"

#. type: defun
#: original_texis/minibuf.texi:1512
msgid "If the user types @key{RET}, @code{read-file-name} returns the file name as the string @code{\"/gp/gnu/elisp/manual.texi\"}."
msgstr "ここでユーザーが@key{RET}をタイプすると、@code{read-file-name}は文字列@code{\"/gp/gnu/elisp/manual.texi\"}をファイル名としてリターンする。"

#. type: defvar
#: original_texis/minibuf.texi:1514
#, no-wrap
msgid "read-file-name-function"
msgstr "read-file-name-function"

#. type: defvar
#: original_texis/minibuf.texi:1519
msgid "If non-@code{nil}, this should be a function that accepts the same arguments as @code{read-file-name}.  When @code{read-file-name} is called, it calls this function with the supplied arguments instead of doing its usual work."
msgstr "非@code{nil}なら、@code{read-file-name}と同じ引数を受け取る関数である。@code{read-file-name}が呼び出されたとき、@code{read-file-name}は通常の処理を行なうかわりに与えられた引数でこの関数を呼び出す。"

#. type: defopt
#: original_texis/minibuf.texi:1521
#, no-wrap
msgid "read-file-name-completion-ignore-case"
msgstr "read-file-name-completion-ignore-case"

#. type: defopt
#: original_texis/minibuf.texi:1524
msgid "If this variable is non-@code{nil}, @code{read-file-name} ignores case when performing completion."
msgstr "この変数が非@code{nil}なら、@code{read-file-name}は補完を行なう際にcaseを無視する。"

#. type: defun
#: original_texis/minibuf.texi:1526
#, no-wrap
msgid "read-directory-name prompt &optional directory default require-match initial"
msgstr "read-directory-name prompt &optional directory default require-match initial"

#. type: defun
#: original_texis/minibuf.texi:1529
msgid "This function is like @code{read-file-name} but allows only directory names as completion alternatives."
msgstr "この関数は@code{read-file-name}と似ているが補完候補としてディレクトリーだけを許す。"

#. type: defun
#: original_texis/minibuf.texi:1537
msgid "If @var{default} is @code{nil} and @var{initial} is non-@code{nil}, @code{read-directory-name} constructs a substitute default by combining @var{directory} (or the current buffer's default directory if @var{directory} is @code{nil}) and @var{initial}.  If both @var{default} and @var{initial} are @code{nil}, this function uses @var{directory} as substitute default, or the current buffer's default directory if @var{directory} is @code{nil}."
msgstr "@var{default}が@code{nil}で@var{initial}が非@code{nil}なら、@code{read-directory-name}は@var{directory} (@var{directory}が@code{nil}ならカレントバッファーのデフォルトディレクトリー)と@var{initial}を組み合わせて代用のデフォルトを構築する。この関数は@var{default}と@var{initial}の両方が@code{nil}なら@var{directory}、@var{directory}も@code{nil}ならカレントバッファーのデフォルトディレクトリーを代用のデフォルトとして使用する。"

#. type: defopt
#: original_texis/minibuf.texi:1539
#, no-wrap
msgid "insert-default-directory"
msgstr "insert-default-directory"

#. type: defopt
#: original_texis/minibuf.texi:1551
msgid "This variable is used by @code{read-file-name}, and thus, indirectly, by most commands reading file names.  (This includes all commands that use the code letters @samp{f} or @samp{F} in their interactive form.  @xref{Interactive Codes,, Code Characters for interactive}.)  Its value controls whether @code{read-file-name} starts by placing the name of the default directory in the minibuffer, plus the initial file name, if any.  If the value of this variable is @code{nil}, then @code{read-file-name} does not place any initial input in the minibuffer (unless you specify initial input with the @var{initial} argument).  In that case, the default directory is still used for completion of relative file names, but is not displayed."
msgstr "この変数は@code{read-file-name}により使用されるため、ファイル名を読み取るほとんどのコマンドにより間接的に使用される(これらのコマンドにはコマンドのインタラクティブフォームに@samp{f}や@samp{F}のコードレター(code letter))をふくむすべてのコマンドが含まれる。@ref{Interactive Codes,, Code Characters for interactive}を参照されたい)。この変数の値は、(もしあれば)デフォルトディレクトリー名をミニバッファー内に配置して@code{read-file-name}を開始するかどうかを制御する。変数の値が@code{nil}なら、@code{read-file-name}はミニバッファーに初期入力を何も配置しない(ただし@var{initial}引数で初期入力を指定しない場合)。この場合には依然としてデフォルトディレクトリーが相対ファイル名の補完に使用されるが表示はされない。"

#. type: defopt
#: original_texis/minibuf.texi:1558
msgid "If this variable is @code{nil} and the initial minibuffer contents are empty, the user may have to explicitly fetch the next history element to access a default value.  If the variable is non-@code{nil}, the initial minibuffer contents are always non-empty and the user can always request a default value by immediately typing @key{RET} in an unedited minibuffer.  (See above.)"
msgstr "この変数が@code{nil}でミニバッファーの初期コンテンツが空なら、ユーザーはデフォルト値にアクセスするために次のヒストリー要素を明示的にフェッチする必要があるだろう。この変数が非@code{nil}ならミニバッファーの初期コンテンツは常に空以外となり、ミニバッファーで編集をおこなわず即座に@key{RET}をタイプすることによって、常にデフォルト値を要求できる(上記参照)。"

#. type: defopt
#: original_texis/minibuf.texi:1560
msgid "For example:"
msgstr "たとえば:"

#. type: group
#: original_texis/minibuf.texi:1566
#, no-wrap
msgid ""
";; @r{Here the minibuffer starts out with the default directory.}\n"
"(let ((insert-default-directory t))\n"
"  (read-file-name \"The file is \"))\n"
msgstr ""
";; @r{デフォルトディレクトリーとともにミニバッファーが開始}\n"
"(let ((insert-default-directory t))\n"
"  (read-file-name \"The file is \"))\n"

#. type: group
#: original_texis/minibuf.texi:1572
#, no-wrap
msgid ""
"---------- Buffer: Minibuffer ----------\n"
"The file is ~lewis/manual/@point{}\n"
"---------- Buffer: Minibuffer ----------\n"
msgstr ""
"---------- Buffer: Minibuffer ----------\n"
"The file is ~lewis/manual/@point{}\n"
"---------- Buffer: Minibuffer ----------\n"

#. type: group
#: original_texis/minibuf.texi:1579
#, no-wrap
msgid ""
";; @r{Here the minibuffer is empty and only the prompt}\n"
";;   @r{appears on its line.}\n"
"(let ((insert-default-directory nil))\n"
"  (read-file-name \"The file is \"))\n"
msgstr ""
";; @r{ミニバッファーはプロンプトだけで空}\n"
";;   @r{appears on its line.}\n"
"(let ((insert-default-directory nil))\n"
"  (read-file-name \"The file is \"))\n"

#. type: group
#: original_texis/minibuf.texi:1585
#, no-wrap
msgid ""
"---------- Buffer: Minibuffer ----------\n"
"The file is @point{}\n"
"---------- Buffer: Minibuffer ----------\n"
msgstr ""
"---------- Buffer: Minibuffer ----------\n"
"The file is @point{}\n"
"---------- Buffer: Minibuffer ----------\n"

#. type: defun
#: original_texis/minibuf.texi:1589
#, no-wrap
msgid "read-shell-command prompt &optional initial history &rest args"
msgstr "read-shell-command prompt &optional initial history &rest args"

#. type: defun
#: original_texis/minibuf.texi:1594
msgid "This function reads a shell command from the minibuffer, prompting with @var{prompt} and providing intelligent completion.  It completes the first word of the command using candidates that are appropriate for command names, and the rest of the command words as file names."
msgstr "この関数はプロンプト@var{prompt}とインテリジェントな補完を提供して、ミニバッファーからシェルコマンドを読み取る。これはコマンド名にたいして適切な候補を使用してコマンドの最初の単語を補完する。コマンドの残りの単語はファイル名として補完する。"

#. type: defun
#: original_texis/minibuf.texi:1604
msgid "This function uses @code{minibuffer-local-shell-command-map} as the keymap for minibuffer input.  The @var{history} argument specifies the history list to use; if is omitted or @code{nil}, it defaults to @code{shell-command-history} (@pxref{Minibuffer History, shell-command-history}).  The optional argument @var{initial} specifies the initial content of the minibuffer (@pxref{Initial Input}).  The rest of @var{args}, if present, are used as the @var{default} and @var{inherit-input-method} arguments in @code{read-from-minibuffer} (@pxref{Text from Minibuffer})."
msgstr "この関数はミニバッファー入力にたいするキーマップとして@code{minibuffer-local-shell-command-map}を使用する。@var{history}引数は使用するヒストリーリストを指定する。省略または@code{nil}の場合のデフォルトは@code{shell-command-history} (@ref{Minibuffer History, shell-command-history}を参照)。オプション引数@var{initial}はミニバッファーの初期コンテンツを指定する(@ref{Initial Input}を参照)。もしあれば残りの@var{args}は@code{read-from-minibuffer}内の@var{default}と@var{inherit-input-method}として使用される(@ref{Text from Minibuffer}を参照)。"

#. type: defvar
#: original_texis/minibuf.texi:1606
#, no-wrap
msgid "minibuffer-local-shell-command-map"
msgstr "minibuffer-local-shell-command-map"

#. type: defvar
#: original_texis/minibuf.texi:1611
msgid "This keymap is used by @code{read-shell-command} for completing command and file names that are part of a shell command.  It uses @code{minibuffer-local-map} as its parent keymap, and binds @key{TAB} to @code{completion-at-point}."
msgstr "このキーマップは@code{read-shell-command}により、コマンドとシェルコマンドの一部となるファイル名の補完のために使用される。これは親キーマップとして@code{minibuffer-local-map}を使用して、@key{TAB}を@code{completion-at-point}にバインドする。"

#. type: Plain text
#: original_texis/minibuf.texi:1618
msgid "Here are some variables that can be used to alter the default completion behavior."
msgstr "補完のデフォルト動作を変更するために使用される変数がいくつかあります。"

#. type: cindex
#: original_texis/minibuf.texi:1619
#, no-wrap
msgid "completion styles"
msgstr "completion styles"

#. type: defopt
#: original_texis/minibuf.texi:1620
#, no-wrap
msgid "completion-styles"
msgstr "completion-styles"

#. type: defopt
#: original_texis/minibuf.texi:1625
msgid "The value of this variable is a list of completion style (symbols) to use for performing completion.  A @dfn{completion style} is a set of rules for generating completions.  Each symbol occurring this list must have a corresponding entry in @code{completion-styles-alist}."
msgstr "この変数の値は補完を行うために使用される補完スタイル(シンボル)である。@dfn{補完スタイル(completion style)}とは、補完を生成するためのルールセットのこと。このリストにあるシンボルはそれぞれ、@code{completion-styles-alist}内に対応するエントリーをもたなければならない。"

#. type: defvar
#: original_texis/minibuf.texi:1627
#, no-wrap
msgid "completion-styles-alist"
msgstr "completion-styles-alist"

#. type: defvar
#: original_texis/minibuf.texi:1630
msgid "This variable stores a list of available completion styles.  Each element in the list has the form"
msgstr "この変数には補完スタイルのリストが格納される。リスト内の各要素は以下の形式をもつ"

#. type: example
#: original_texis/minibuf.texi:1633
#, no-wrap
msgid "(@var{style} @var{try-completion} @var{all-completions} @var{doc})\n"
msgstr "(@var{style} @var{try-completion} @var{all-completions} @var{doc})\n"

#. type: defvar
#: original_texis/minibuf.texi:1642
msgid "Here, @var{style} is the name of the completion style (a symbol), which may be used in the @code{completion-styles} variable to refer to this style; @var{try-completion} is the function that does the completion; @var{all-completions} is the function that lists the completions; and @var{doc} is a string describing the completion style."
msgstr "ここで@var{style}は補完スタイルの名前(シンボル)であり、そのスタイルを参照するために変数@code{completion-styles}内で使用されるかもしれない。@var{try-completion}は補完を行なう関数で、@var{all-completions}補完をリストする関数、@var{doc}は補完スタイルを説明する文字列である。"

#. type: defvar
#: original_texis/minibuf.texi:1652
msgid "The @var{try-completion} and @var{all-completions} functions should each accept four arguments: @var{string}, @var{collection}, @var{predicate}, and @var{point}.  The @var{string}, @var{collection}, and @var{predicate} arguments have the same meanings as in @code{try-completion} (@pxref{Basic Completion}), and the @var{point} argument is the position of point within @var{string}.  Each function should return a non-@code{nil} value if it performed its job, and @code{nil} if it did not (e.g., if there is no way to complete @var{string} according to the completion style)."
msgstr "関数@var{try-completion}と@var{all-completions}は@var{string}、@var{collection}、@var{predicate}、@var{point}の4つの引数をとる。引数@var{string}、@var{collection}、@var{predicate}の意味は@code{try-completion} (@ref{Basic Completion}を参照)のときと同様。引数@var{point}は@var{string}内のポイント位置。各関数は自身の処理を行ったら非@code{nil}、行わなかった場合(たとえば補完スタイルに一致するように@var{string}を行う方法がない場合)は@code{nil}をリターンする。"

#. type: defvar
#: original_texis/minibuf.texi:1662
msgid "When the user calls a completion command like @code{minibuffer-complete} (@pxref{Completion Commands}), Emacs looks for the first style listed in @code{completion-styles} and calls its @var{try-completion} function.  If this function returns @code{nil}, Emacs moves to the next listed completion style and calls its @var{try-completion} function, and so on until one of the @var{try-completion} functions successfully performs completion and returns a non-@code{nil} value.  A similar procedure is used for listing completions, via the @var{all-completions} functions."
msgstr "ユーザーが@code{minibuffer-complete} (@ref{Completion Commands}を参照)のような補完コマンドを呼び出すと、Emacsは@code{completion-styles}に最初にリストされたスタイルを探して、そのスタイルの@var{try-completion}関数を呼び出す。この関数が@code{nil}をリターンしたら、Emacsは次にリストされた補完スタイルに移動してそのスタイルの@var{try-completion}関数を呼び出すといったように、@var{try-completion}関数の1つが補完の処理に成功して非@code{nil}値をリターンするまで順次これを行なう。同様の手順は@var{all-completions}関数を通じて補完のリストにも行われる。"

#. type: defvar
#: original_texis/minibuf.texi:1665
msgid "@xref{Completion Styles,,, emacs, The GNU Emacs Manual}, for a description of the available completion styles."
msgstr "利用できる補完スタイルについては@ref{Completion Styles,,, emacs, The GNU Emacs Manual}を参照のこと。"

#. type: defopt
#: original_texis/minibuf.texi:1667
#, no-wrap
msgid "completion-category-overrides"
msgstr "completion-category-overrides"

#. type: defopt
#: original_texis/minibuf.texi:1678
msgid "This variable specifies special completion styles and other completion behaviors to use when completing certain types of text.  Its value should be an alist with elements of the form @code{(@var{category} . @var{alist})}.  @var{category} is a symbol describing what is being completed; currently, the @code{buffer}, @code{file}, and @code{unicode-name} categories are defined, but others can be defined via specialized completion functions (@pxref{Programmed Completion}).  @var{alist} is an association list describing how completion should behave for the corresponding category.  The following alist keys are supported:"
msgstr "この変数は特別な補完スタイルと、特定の種類のテキスト補完時に使用するその他の補完動作を指定する。この変数の値は@code{(@var{category} . @var{alist})}という形式の要素をもつようなalistである。@var{category}は何が補完されるかを記述するシンボルで、現在のところカテゴリーに@code{buffer}、@code{file}、@code{unicode-name}が定義されているが、これに特化した補完関数(@ref{Programmed Completion}を参照)を通じて他のカテゴリーを定義できる。@var{alist}はそのカテゴリーにたいして補完がどのように振る舞うべきかを記述する連想リスト。alistのキーとして以下がサポートされる:"

#. type: item
#: original_texis/minibuf.texi:1680
#, no-wrap
msgid "styles"
msgstr "styles"

#. type: table
#: original_texis/minibuf.texi:1682
msgid "The value should be a list of completion styles (symbols)."
msgstr "値は補完スタイル(シンボル)のリスト。"

#. type: item
#: original_texis/minibuf.texi:1683
#, no-wrap
msgid "cycle"
msgstr "cycle"

#. type: table
#: original_texis/minibuf.texi:1687
msgid "The value should be a value for @code{completion-cycle-threshold} (@pxref{Completion Options,,, emacs, The GNU Emacs Manual}) for this category."
msgstr "値はそのカテゴリーにたいする@code{completion-cycle-threshold} (@ref{Completion Options,,, emacs, The GNU Emacs Manual}を参照)の値。"

#. type: defopt
#: original_texis/minibuf.texi:1691
msgid "Additional alist entries may be defined in the future."
msgstr "将来、さらにalistエントリーが定義されるかもしれない。"

#. type: defvar
#: original_texis/minibuf.texi:1693
#, no-wrap
msgid "completion-extra-properties"
msgstr "completion-extra-properties"

#. type: defvar
#: original_texis/minibuf.texi:1698
msgid "This variable is used to specify extra properties of the current completion command.  It is intended to be let-bound by specialized completion commands.  Its value should be a list of property and value pairs.  The following properties are supported:"
msgstr "この変数はカレント補完コマンドの特別なプロパティの指定に使用される。この変数は補完に特化したコマンドによりletバインドされることを意図している。値はプロパティ/値ペアーのリスト。以下のプロパティがサポートされる:"

#. type: item
#: original_texis/minibuf.texi:1700
#, no-wrap
msgid ":annotation-function"
msgstr ":annotation-function"

#. type: table
#: original_texis/minibuf.texi:1705
msgid "The value should be a function to add annotations in the completions buffer.  This function must accept one argument, a completion, and should either return @code{nil} or a string to be displayed next to the completion."
msgstr "値は補完バッファー内に注釈(annotation)を加える関数。この関数は引数completionを1つ受け取り@code{nil}、または補完の隣に表示する文字列をリターンしなければならない。"

#. type: item
#: original_texis/minibuf.texi:1706
#, no-wrap
msgid ":exit-function"
msgstr ":exit-function"

#. type: table
#: original_texis/minibuf.texi:1715
msgid "The value should be a function to run after performing completion.  The function should accept two arguments, @var{string} and @var{status}, where @var{string} is the text to which the field was completed, and @var{status} indicates what kind of operation happened: @code{finished} if text is now complete, @code{sole} if the text cannot be further completed but completion is not finished, or @code{exact} if the text is a valid completion but may be further completed."
msgstr "値は補完を行った後に実行する関数。この関数は2つの引数@var{string}と@var{status}を受け取る。@var{string}は補完されたフィールドのテキストで、@var{status}は行われた操作の種類を示す。操作の種類はテキストの補完が完了したなら@code{finished}、それ以上補完できないが補完が完了していなければ@code{sole}、有効な補完だがさらに補完できるときは@code{exact}となる。"

#. type: cindex
#: original_texis/minibuf.texi:1720
#, no-wrap
msgid "programmed completion"
msgstr "programmed completion"

#. type: Plain text
#: original_texis/minibuf.texi:1728
msgid "Sometimes it is not possible or convenient to create an alist or an obarray containing all the intended possible completions ahead of time.  In such a case, you can supply your own function to compute the completion of a given string.  This is called @dfn{programmed completion}.  Emacs uses programmed completion when completing file names (@pxref{File Name Completion}), among many other cases."
msgstr "意図した利用可能な補完のすべてを含むalistかobarrayを事前に作成するのが不可能または不便なことがあります。このような場合は与えられた文字列にたいする補完を計算するために独自の関数を提供できます。これは@dfn{プログラム補完(programmed completion)}と呼ばれます。Emacsは数あるケースの中でも特にファイル名の補完(@ref{File Name Completion}を参照)でプログラム補完を使用しています。"

#. type: Plain text
#: original_texis/minibuf.texi:1735
msgid "To use this feature, pass a function as the @var{collection} argument to @code{completing-read}.  The function @code{completing-read} arranges to pass your completion function along to @code{try-completion}, @code{all-completions}, and other basic completion functions, which will then let your function do all the work."
msgstr "この機能を使用するためには、関数を@code{completing-read}の@var{collection}引数として渡します。関数@code{completing-read}はその補完関数が@code{try-completion}、@code{all-completions}などの基本的な補完関数に渡されて、その関数がすべてを行えるよう取り計らいます。"

#. type: Plain text
#: original_texis/minibuf.texi:1737
msgid "The completion function should accept three arguments:"
msgstr "補完関数は3つの引数を受け取ります:"

#. type: itemize
#: original_texis/minibuf.texi:1741
msgid "The string to be completed."
msgstr "補完される文字列。"

#. type: itemize
#: original_texis/minibuf.texi:1747
msgid "A predicate function with which to filter possible matches, or @code{nil} if none.  The function should call the predicate for each possible match, and ignore the match if the predicate returns @code{nil}."
msgstr "利用可能なマッチをフィルターする述語関数。もしなければ@code{nil}。関数は利用可能なマッチにたいしてこの述語(predicate)を呼び出して、述語が@code{nil}をリターンしたらそのマッチを無視する。"

#. type: itemize
#: original_texis/minibuf.texi:1751
msgid "A flag specifying the type of completion operation to perform.  This flag may be one of the following values."
msgstr "実行する補完操作のタイプを指定するフラグ。以下のいずれかを指定できる:"

#. type: item
#: original_texis/minibuf.texi:1753
#, no-wrap
msgid "nil"
msgstr "nil"

#. type: table
#: original_texis/minibuf.texi:1761
msgid "This specifies a @code{try-completion} operation.  The function should return @code{t} if the specified string is a unique and exact match; if there is more than one match, it should return the common substring of all matches (if the string is an exact match for one completion alternative but also matches other longer alternatives, the return value is the string); if there are no matches, it should return @code{nil}."
msgstr "@code{try-completion}を指定する。関数は指定された文字が一意かつ完全一致なら@code{t}をリターンする。マッチが複数なら、すべてのマッチに共通する部分文字列をリターンする(文字列が補完候補の1つに完全一致するが、より長い他の候補にもマッチするならリターン値はその文字列)。マッチがなければ@code{nil}をリターンする。"

#. type: item
#: original_texis/minibuf.texi:1762
#, no-wrap
msgid "t"
msgstr "t"

#. type: table
#: original_texis/minibuf.texi:1766
msgid "This specifies an @code{all-completions} operation.  The function should return a list of all possible completions of the specified string."
msgstr "@code{all-completions}を指定する。関数は指定された文字列の利用可能なすべての補完のリストをリターンする。"

#. type: item
#: original_texis/minibuf.texi:1767
#, no-wrap
msgid "lambda"
msgstr "lambda"

#. type: table
#: original_texis/minibuf.texi:1771
msgid "This specifies a @code{test-completion} operation.  The function should return @code{t} if the specified string is an exact match for some completion alternative; @code{nil} otherwise."
msgstr "@code{test-completion}を指定する。関数は指定された文字列がいくつかの補完候補に完全一致するなら@code{t}、それ以外は@code{nil}をリターンする。"

#. type: item
#: original_texis/minibuf.texi:1772
#, no-wrap
msgid "(boundaries . @var{suffix})"
msgstr "(boundaries . @var{suffix})"

#. type: table
#: original_texis/minibuf.texi:1778
msgid "This specifies a @code{completion-boundaries} operation.  The function should return @code{(boundaries @var{start} . @var{end})}, where @var{start} is the position of the beginning boundary in the specified string, and @var{end} is the position of the end boundary in @var{suffix}."
msgstr "@code{completion-boundaries}を指定する。関数は@code{(boundaries @var{start} . @var{end})}をリターンする。ここで@var{start}は指定された文字列内の境界の開始位置、@var{end}は@var{suffix}内の境界の終了位置。"

#. type: item
#: original_texis/minibuf.texi:1779
#, no-wrap
msgid "metadata"
msgstr "metadata"

#. type: table
#: original_texis/minibuf.texi:1784
msgid "This specifies a request for information about the state of the current completion.  The return value should have the form @code{(metadata . @var{alist})}, where @var{alist} is an alist whose elements are described below."
msgstr "カレント補完の状態に関する情報の要求を指定する。リターン値は@code{(metadata . @var{alist})}の形式をもち、@var{alist}は以下で説明する要素をもつ連想配列。"

#. type: itemize
#: original_texis/minibuf.texi:1789
msgid "If the flag has any other value, the completion function should return @code{nil}."
msgstr "フラグに他の値が指定されたら、補完関数は@code{nil}をリターンする。"

#. type: Plain text
#: original_texis/minibuf.texi:1793
msgid "The following is a list of metadata entries that a completion function may return in response to a @code{metadata} flag argument:"
msgstr "以下は@code{metadata}フラグ引数への応答として補完関数がリターンするかもしれないmetadataエントリーのリストです:"

#. type: item
#: original_texis/minibuf.texi:1795
#, no-wrap
msgid "category"
msgstr "category"

#. type: table
#: original_texis/minibuf.texi:1800
msgid "The value should be a symbol describing what kind of text the completion function is trying to complete.  If the symbol matches one of the keys in @code{completion-category-overrides}, the usual completion behavior is overridden.  @xref{Completion Variables}."
msgstr "値は補完関数が補完を試みているテキストの種類を説明するシンボル。シンボルが@code{completion-category-overrides}内のキーの1つにマッチする場合、通常の補完動作はオーバーライドされる。@ref{Completion Variables}を参照のこと。"

#. type: item
#: original_texis/minibuf.texi:1801
#, no-wrap
msgid "annotation-function"
msgstr "annotation-function"

#. type: table
#: original_texis/minibuf.texi:1806
msgid "The value should be a function for @dfn{annotating} completions.  The function should take one argument, @var{string}, which is a possible completion.  It should return a string, which is displayed after the completion @var{string} in the @file{*Completions*} buffer."
msgstr "値は補完に@dfn{注釈(annotation)}を付ける関数。この関数は1つの引数@var{string}を受け取り、これは利用可能な補完である。リターン値は文字列で、@file{*Completions*}バッファー内の補完@var{string}の後に表示される。"

#. type: item
#: original_texis/minibuf.texi:1807
#, no-wrap
msgid "display-sort-function"
msgstr "display-sort-function"

#. type: table
#: original_texis/minibuf.texi:1812
msgid "The value should be a function for sorting completions.  The function should take one argument, a list of completion strings, and return a sorted list of completion strings.  It is allowed to alter the input list destructively."
msgstr "値は補完をソートする関数。関数は1つの引数をとる。これは補完文字列のリストで、ソートされた補完文字列リストがリターンされる。その入力のリストは破壊的に変更することが許容される。"

#. type: item
#: original_texis/minibuf.texi:1813
#, no-wrap
msgid "cycle-sort-function"
msgstr "cycle-sort-function"

#. type: table
#: original_texis/minibuf.texi:1819
msgid "The value should be a function for sorting completions, when @code{completion-cycle-threshold} is non-@code{nil} and the user is cycling through completion alternatives.  @xref{Completion Options,,, emacs, The GNU Emacs Manual}.  Its argument list and return value are the same as for @code{display-sort-function}."
msgstr "値は@code{completion-cycle-threshold}が非@code{nil}、かつユーザーが補完候補を巡回するときに補完をソートする関数。引数のリストとリターン値は@code{display-sort-function}と同様。"

#. type: defun
#: original_texis/minibuf.texi:1821
#, no-wrap
msgid "completion-table-dynamic function &optional switch-buffer"
msgstr "completion-table-dynamic function &optional switch-buffer"

#. type: defun
#: original_texis/minibuf.texi:1829
#, fuzzy
msgid "This function is a convenient way to write a function that can act as a programmed completion function.  The argument @var{function} should be a function that takes one argument, a string, and returns an alist of possible completions of it.  It is allowed to ignore the argument and return a full list of all possible completions.  You can think of @code{completion-table-dynamic} as a transducer between that interface and the interface for programmed completion functions."
msgstr "この関数はプログラム補完関数として動作する関数を記述する便利な方法である。引数@var{function}は1つの引数(文字列)を受け取る関数であり、その文字列の利用可能な補完のalistをリターンする。引数を無視して、利用可能なすべての補完を含む完全なリストのリターンが許される。@code{completion-table-dynamic}を@var{function}とプログラム補完関数のインターフェイス変換器と考えることができる。"

#. type: defun
#: original_texis/minibuf.texi:1834
msgid "If the optional argument @var{switch-buffer} is non-@code{nil}, and completion is performed in the minibuffer, @var{function} will be called with current buffer set to the buffer from which the minibuffer was entered."
msgstr "オプション引数@var{switch-buffer}が非@code{nil}、かつ補完がミニバッファーで行われた場合、@var{function}はそのミニバッファーにエンターしたときのバッファーをカレントバッファーにセットして呼び出される。"

#. type: defun
#: original_texis/minibuf.texi:1836
#, no-wrap
msgid "completion-table-with-cache function &optional ignore-case"
msgstr "completion-table-with-cache function &optional ignore-case"

#. type: defun
#: original_texis/minibuf.texi:1841
msgid "This is a wrapper for @code{completion-table-dynamic} that saves the last argument-result pair.  This means that multiple lookups with the same argument only need to call @var{function} once.  This can be useful when a slow operation is involved, such as calling an external process."
msgstr "これは前回の引数/結果ペアーを保存する@code{completion-table-dynamic}にたいするラッパーである。これは同じ引数にたいする複数回の検査に必要なのが、1回の@var{function}呼び出しだけであることを意味する。これは外部プロセス呼び出しなど、処理が低速のとき有用かもしれない。"

#. type: subsection
#: original_texis/minibuf.texi:1844
#, no-wrap
msgid "Completion in Ordinary Buffers"
msgstr "Completion in Ordinary Buffers"

#. type: cindex
#: original_texis/minibuf.texi:1845
#, no-wrap
msgid "inline completion"
msgstr "inline completion"

#. type: findex
#: original_texis/minibuf.texi:1847
#, no-wrap
msgid "completion-at-point"
msgstr "completion-at-point"

#. type: Plain text
#: original_texis/minibuf.texi:1855
msgid "Although completion is usually done in the minibuffer, the completion facility can also be used on the text in ordinary Emacs buffers.  In many major modes, in-buffer completion is performed by the @kbd{C-M-i} or @kbd{M-@key{TAB}} command, bound to @code{completion-at-point}.  @xref{Symbol Completion,,, emacs, The GNU Emacs Manual}.  This command uses the abnormal hook variable @code{completion-at-point-functions}:"
msgstr "補完は通常はミニバッファー内で行われますが、補完機能は通常のEmacsバッファー内のテキストにも使用できます。多くのメジャーモードで、コマンド@kbd{C-M-i}または@kbd{M-@key{TAB}}によってバッファー内補完が行われ、それらは@code{completion-at-point}にバインドされています。@ref{Symbol Completion,,, emacs, The GNU Emacs Manual}を参照してください。このコマンドはアブノーマルフック変数@code{completion-at-point-functions}を使用します:"

#. type: defvar
#: original_texis/minibuf.texi:1856
#, no-wrap
msgid "completion-at-point-functions"
msgstr "completion-at-point-functions"

#. type: defvar
#: original_texis/minibuf.texi:1861
msgid "The value of this abnormal hook should be a list of functions, which are used to compute a completion table for completing the text at point.  It can be used by major modes to provide mode-specific completion tables (@pxref{Major Mode Conventions})."
msgstr "このアブノーマルフックの値は関数のリストである。これらの関数はポイント位置のテキストの補完にたいする補完テーブルの計算に使用される。これはメジャーモードによるモード特有な補完テーブル(@ref{Major Mode Conventions}を参照)の提供に使用できる。"

#. type: defvar
#: original_texis/minibuf.texi:1866
msgid "When the command @code{completion-at-point} runs, it calls the functions in the list one by one, without any argument.  Each function should return @code{nil} if it is unable to produce a completion table for the text at point.  Otherwise it should return a list of the form"
msgstr "コマンド@code{completion-at-point}が実行されると、引数なしでリスト内の関数が1つずつ呼び出される。それぞれの関数はポイント位置のテキストにたいして補完テーブルを生成できないなら@code{nil}をリターンする。生成できたら以下の形式のリストをリターンする"

#. type: example
#: original_texis/minibuf.texi:1869
#, no-wrap
msgid "(@var{start} @var{end} @var{collection} . @var{props})\n"
msgstr "(@var{start} @var{end} @var{collection} . @var{props})\n"

#. type: defvar
#: original_texis/minibuf.texi:1882
msgid "@var{start} and @var{end} delimit the text to complete (which should enclose point).  @var{collection} is a completion table for completing that text, in a form suitable for passing as the second argument to @code{try-completion} (@pxref{Basic Completion}); completion alternatives will be generated from this completion table in the usual way, via the completion styles defined in @code{completion-styles} (@pxref{Completion Variables}).  @var{props} is a property list for additional information; any of the properties in @code{completion-extra-properties} are recognized (@pxref{Completion Variables}), as well as the following additional ones:"
msgstr "ここで@var{start}と@var{end}は補完する(ポイントを取り囲む)テキストの区切りである。@var{collection}はそのテキストを補完する補完テーブルであり、@code{try-completion} (@ref{Basic Completion}を参照)の2つ目の引数として渡すのに適した形式である。補完候補は@code{completion-styles} (@ref{Completion Variables}を参照)で定義された補完スタイルを通じて、この補完テーブルを通常の方法で使用して生成されるだろう。@var{props}は追加の情報のためのプロパティリストである。@code{completion-extra-properties}内のすべてのプロパティ(@ref{Completion Variables}を参照)と、以下の追加のプロパティが認識される:"

#. type: item
#: original_texis/minibuf.texi:1884
#, no-wrap
msgid ":predicate"
msgstr ":predicate"

#. type: table
#: original_texis/minibuf.texi:1887
msgid "The value should be a predicate that completion candidates need to satisfy."
msgstr "値は補完候補が満足する必要がある述語。"

#. type: item
#: original_texis/minibuf.texi:1888
#, no-wrap
msgid ":exclusive"
msgstr ":exclusive"

#. type: table
#: original_texis/minibuf.texi:1893
msgid "If the value is @code{no}, then if the completion table fails to match the text at point, @code{completion-at-point} moves on to the next function in @code{completion-at-point-functions} instead of reporting a completion failure."
msgstr "値が@code{no}の場合は、もし補完テーブルがポイント位置のテキストのマッチに失敗したなら、補完の失敗を報告するかわりに@code{completion-at-point}は@code{completion-at-point-functions}内の次の関数へ移動する。"

#. type: defvar
#: original_texis/minibuf.texi:1902
msgid "Supplying a function for @var{collection} is strongly recommended if generating the list of completions is an expensive operation.  Emacs may internally call functions in @code{completion-at-point-functions} many times, but care about the value of @var{collection} for only some of these calls.  By supplying a function for @var{collection}, Emacs can defer generating completions until necessary.  You can use @var{completion-table-dynamic} to create a wrapper function:"
msgstr "補完リスト生成が処理が高価なら、@var{collection}にたいして関数の提供を推奨する。Emacsは内部的に@code{completion-at-point-functions}内の関数を多数回呼び出すかもしれないが、それらの呼び出しのいくつかにたいしてのみ@var{collection}の値を考慮する。@var{collection}にたいして関数を提供することにより、Emacsは必要になるまで補完の生成を遅延できる。ラッパー関数を作成するために@var{completion-table-dynamic}を使用できる:"

#. type: smallexample
#: original_texis/minibuf.texi:1907
#, no-wrap
msgid ""
";; Avoid this pattern.\n"
"(let ((beg ...) (end ...) (my-completions (my-make-completions)))\n"
"  (list beg end my-completions))\n"
"\n"
msgstr ""
";; このパターンは避けて\n"
"(let ((beg ...) (end ...) (my-completions (my-make-completions)))\n"
"  (list beg end my-completions))\n"
"\n"

#. type: smallexample
#: original_texis/minibuf.texi:1915
#, no-wrap
msgid ""
";; Use this instead.\n"
"(let ((beg ...) (end ...))\n"
"  (list beg\n"
"        end\n"
"        (completion-table-dynamic\n"
"          (lambda (_)\n"
"            (my-make-completions)))))\n"
msgstr ""
";; かわりに以下を使用する\n"
"(let ((beg ...) (end ...))\n"
"  (list beg\n"
"        end\n"
"        (completion-table-dynamic\n"
"          (lambda (_)\n"
"            (my-make-completions)))))\n"

#. type: defvar
#: original_texis/minibuf.texi:1923
msgid "A function in @code{completion-at-point-functions} may also return a function instead of a list as described above.  In that case, that returned function is called, with no argument, and it is entirely responsible for performing the completion.  We discourage this usage; it is intended to help convert old code to using @code{completion-at-point}."
msgstr "@code{completion-at-point-functions}内の関数も、上述したリストのかわりに関数をリターンするかもしれない。その場合は引数なしでリターンされた関数が呼び出されてその関数が補完処理の全責任を負う。この方法は推奨されない。これは@code{completion-at-point}を使用する古いコードの救済を意図したものだからである。"

#. type: defvar
#: original_texis/minibuf.texi:1928
msgid "The first function in @code{completion-at-point-functions} to return a non-@code{nil} value is used by @code{completion-at-point}.  The remaining functions are not called.  The exception to this is when there is an @code{:exclusive} specification, as described above."
msgstr "非@code{nil}値を最初にリターンした@code{completion-at-point-functions}内の関数が、@code{completion-at-point}によって使用される。残りの関数は呼び出されない。例外は上述の@code{:exclusive}指定があるとき。"

#. type: Plain text
#: original_texis/minibuf.texi:1932
msgid "The following function provides a convenient way to perform completion on an arbitrary stretch of text in an Emacs buffer:"
msgstr "以下の関数はEmacsバッファー内の任意に拡張されたテキストにたいして便利な補完方法を提供します:"

#. type: defun
#: original_texis/minibuf.texi:1933
#, no-wrap
msgid "completion-in-region start end collection &optional predicate"
msgstr "completion-in-region start end collection &optional predicate"

#. type: defun
#: original_texis/minibuf.texi:1938
msgid "This function completes the text in the current buffer between the positions @var{start} and @var{end}, using @var{collection}.  The argument @var{collection} has the same meaning as in @code{try-completion} (@pxref{Basic Completion})."
msgstr "この関数は@var{collection}を使用してカレントバッファー内の位置@var{start}と@var{end}の間のテキストを補完する。引数@var{collection}は@code{try-completion} (@ref{Basic Completion}を参照)のときと同じ意味をもつ。"

#. type: defun
#: original_texis/minibuf.texi:1942
msgid "This function inserts the completion text directly into the current buffer.  Unlike @code{completing-read} (@pxref{Minibuffer Completion}), it does not activate the minibuffer."
msgstr "この関数は補完テキストを直接カレントバッファーに挿入する。@code{completing-read} (@ref{Minibuffer Completion}を参照)とは異なり、ミニバッファーをアクティブにしない。"

#. type: defun
#: original_texis/minibuf.texi:1945
msgid "For this function to work, point must be somewhere between @var{start} and @var{end}."
msgstr "この関数が機能するためには、ポイントが@var{start}と@var{end}の間になければならない。"

#. type: cindex
#: original_texis/minibuf.texi:1950
#, no-wrap
msgid "asking the user questions"
msgstr "asking the user questions"

#. type: cindex
#: original_texis/minibuf.texi:1951
#, no-wrap
msgid "querying the user"
msgstr "querying the user"

#. type: cindex
#: original_texis/minibuf.texi:1952
#, no-wrap
msgid "yes-or-no questions"
msgstr "yes-or-no questions"

#. type: Plain text
#: original_texis/minibuf.texi:1960
msgid "This section describes functions used to ask the user a yes-or-no question.  The function @code{y-or-n-p} can be answered with a single character; it is useful for questions where an inadvertent wrong answer will not have serious consequences.  @code{yes-or-no-p} is suitable for more momentous questions, since it requires three or four characters to answer."
msgstr "このセクションではユーザーにyes-or-noの確認を求める関数を説明します。関数@code{y-or-n-p}は1文字での応答に使用できます。この関数は不注意による誤った答えが深刻な結果を招かない場合に有用です。@code{yes-or-no-p}は3文字から4文字の答えを要求するので、より重大な問いに適しています。"

#. type: Plain text
#: original_texis/minibuf.texi:1968
msgid "If either of these functions is called in a command that was invoked using the mouse---more precisely, if @code{last-nonmenu-event} (@pxref{Command Loop Info}) is either @code{nil} or a list---then it uses a dialog box or pop-up menu to ask the question.  Otherwise, it uses keyboard input.  You can force use either of the mouse or of keyboard input by binding @code{last-nonmenu-event} to a suitable value around the call."
msgstr "3つの関数はいずれもマウスを使用して呼び出されたコマンドの場合、より正確には@code{last-nonmenu-event} (@ref{Command Loop Info}を参照)が@code{nil}かリストの場合は、問いに答えるためにダイアログボックスまたはポップアップメニューを使用します。それ以外の場合はキーボード入力を使用します。呼び出しの周囲で@code{last-nonmenu-event}に適切な値をバインドすることにより、マウスあるいはキーボードの使用を強制できます。"

#. type: Plain text
#: original_texis/minibuf.texi:1971
msgid "Strictly speaking, @code{yes-or-no-p} uses the minibuffer and @code{y-or-n-p} does not; but it seems best to describe them together."
msgstr "厳密に言うと@code{yes-or-no-p}はミニバッファーを使用して、@code{y-or-n-p}は使用しませんが、これらのコマンドは一緒に説明したほうがよいでしょう。"

#. type: defun
#: original_texis/minibuf.texi:1972
#, no-wrap
msgid "y-or-n-p prompt"
msgstr "y-or-n-p prompt"

#. type: defun
#: original_texis/minibuf.texi:1981
msgid "This function asks the user a question, expecting input in the echo area.  It returns @code{t} if the user types @kbd{y}, @code{nil} if the user types @kbd{n}.  This function also accepts @key{SPC} to mean yes and @key{DEL} to mean no.  It accepts @kbd{C-]} to quit, like @kbd{C-g}, because the question might look like a minibuffer and for that reason the user might try to use @kbd{C-]} to get out.  The answer is a single character, with no @key{RET} needed to terminate it.  Upper and lower case are equivalent."
msgstr "この関数はユーザーに答えを尋ねてミニバッファーに入力を求める。ユーザーが@kbd{y}をタイプしたら@code{t}、@kbd{n}をタイプしたら@code{nil}をリターンする。この関数はyesの意味で@key{SPC}、noの意味で@key{DEL}も受け入れる。quitとして@kbd{C-g}と同様に@kbd{C-]}も受け入れる。これは問いがミニバッファーのような外見をもち、ミニバッファーを抜けるためにユーザーが@kbd{C-]}の使用を試みるかもしれないという理由による。応答は1文字であり、問いを終了させるための@key{RET}は必要ない。大文字と小文字は等価である。"

#. type: defun
#: original_texis/minibuf.texi:1987
msgid "``Asking the question'' means printing @var{prompt} in the echo area, followed by the string @w{@samp{(y or n) }}.  If the input is not one of the expected answers (@kbd{y}, @kbd{n}, @kbd{@key{SPC}}, @kbd{@key{DEL}}, or something that quits), the function responds @samp{Please answer y or n.}, and repeats the request."
msgstr "``答えを尋ねる''とはエコーエリアに@var{prompt}、その後に文字列@w{@samp{(y or n) }}をプリントすることを意味する。期待される答え(@kbd{y}、@kbd{n}、@kbd{@key{SPC}}、@kbd{@key{DEL}}、もしくは質問を終了するその他のキー)以外が入力されると、この関数は@samp{Please answer y or n.}と応答して繰り返し答えの入力を要求する。"

#. type: defun
#: original_texis/minibuf.texi:1992
msgid "This function does not actually use the minibuffer, since it does not allow editing of the answer.  It actually uses the echo area (@pxref{The Echo Area}), which uses the same screen space as the minibuffer.  The cursor moves to the echo area while the question is being asked."
msgstr "この関数は答えの編集を許さないので、実際にはミニバッファーを使用しない。実際に使用するのはミニバッファーと同じスクリーンスペースを使用するエコーエリア(@ref{The Echo Area}を参照)である。問いが答えられるまでカーソルはエコーエリアに移動される。"

#. type: defun
#: original_texis/minibuf.texi:2002
msgid "The answers and their meanings, even @samp{y} and @samp{n}, are not hardwired, and are specified by the keymap @code{query-replace-map} (@pxref{Search and Replace}).  In particular, if the user enters the special responses @code{recenter}, @code{scroll-up}, @code{scroll-down}, @code{scroll-other-window}, or @code{scroll-other-window-down} (respectively bound to @kbd{C-l}, @kbd{C-v}, @kbd{M-v}, @kbd{C-M-v} and @kbd{C-M-S-v} in @code{query-replace-map}), this function performs the specified window recentering or scrolling operation, and poses the question again."
msgstr "答えとその意味は、たとえ@samp{y}と@samp{n}であっても固定されたものではなく、キーマップ@code{query-replace-map}によって指定される(@ref{Search and Replace}を参照)。特にユーザーが@code{recenter}、@code{scroll-up}、@code{scroll-down}、@code{scroll-other-window}、@code{scroll-other-window-down}(それぞれ@code{query-replace-map}内で@kbd{C-l}、@kbd{C-v}、@kbd{M-v}、@kbd{C-M-v}、@kbd{C-M-S-v}にバインドされている)のような特殊な応答をエンターした場合、この関数はは指定されたウィンドウの再センタリングやスクロール操作を処理してから再度答えを求める。"

#. type: defun
#: original_texis/minibuf.texi:2006
msgid "We show successive lines of echo area messages, but only one actually appears on the screen at a time."
msgstr "エコーエリアのメッセージを連続する行で示しているが、スクリーン上に実際に表示されるのは一度に1行だけである。"

#. type: defun
#: original_texis/minibuf.texi:2008
#, no-wrap
msgid "y-or-n-p-with-timeout prompt seconds default"
msgstr "y-or-n-p-with-timeout prompt seconds default"

#. type: defun
#: original_texis/minibuf.texi:2013
msgid "Like @code{y-or-n-p}, except that if the user fails to answer within @var{seconds} seconds, this function stops waiting and returns @var{default}.  It works by setting up a timer; see @ref{Timers}.  The argument @var{seconds} should be a number."
msgstr "@code{y-or-n-p}と同様だがユーザーが@var{seconds}秒以内に答えないと、この関数は待つのをやめて@var{default}をリターンする。これはタイマーをセットアップすることによって機能する。引数@var{seconds}は数字である。"

#. type: defun
#: original_texis/minibuf.texi:2015
#, no-wrap
msgid "yes-or-no-p prompt"
msgstr "yes-or-no-p prompt"

#. type: defun
#: original_texis/minibuf.texi:2020
msgid "This function asks the user a question, expecting input in the minibuffer.  It returns @code{t} if the user enters @samp{yes}, @code{nil} if the user types @samp{no}.  The user must type @key{RET} to finalize the response.  Upper and lower case are equivalent."
msgstr "この関数は質問してミニバッファーに答えの入力を求める。これはユーザーが@samp{yes}をエンターすると@code{t}、@samp{no}をエンターすると@code{nil}をリターンする。ユーザーは応答を終えるために@key{RET}をタイプしなければならない。大文字と小文字は等価。"

#. type: defun
#: original_texis/minibuf.texi:2025
msgid "@code{yes-or-no-p} starts by displaying @var{prompt} in the echo area, followed by @w{@samp{(yes or no) }}.  The user must type one of the expected responses; otherwise, the function responds @samp{Please answer yes or no.}, waits about two seconds and repeats the request."
msgstr "@code{yes-or-no-p}はエコーエリアに@var{prompt}とその後に@w{@samp{(yes or no) }}を表示することによって開始される。ユーザーは期待される応答の1つをタイプしなければならない。それ以外の答えなら、この関数は@samp{Please answer yes or no.}と応答して約2秒待った後に要求を繰り返す。"

#. type: defun
#: original_texis/minibuf.texi:2028
msgid "@code{yes-or-no-p} requires more work from the user than @code{y-or-n-p} and is appropriate for more crucial decisions."
msgstr "@code{yes-or-no-p}は@code{y-or-n-p}より多くの作業をユーザーに要求するので、より重大な決定に適している。"

#. type: group
#: original_texis/minibuf.texi:2034
#, no-wrap
msgid ""
"(yes-or-no-p \"Do you really want to remove everything? \")\n"
"\n"
msgstr ""
"(yes-or-no-p \"Do you really want to remove everything? \")\n"
"\n"

#. type: group
#: original_texis/minibuf.texi:2044
#, no-wrap
msgid ""
"---------- Buffer: minibuffer ----------\n"
"Do you really want to remove everything? (yes or no)\n"
"---------- Buffer: minibuffer ----------\n"
msgstr ""
"---------- Buffer: minibuffer ----------\n"
"Do you really want to remove everything? (yes or no)\n"
"---------- Buffer: minibuffer ----------\n"

#. type: defun
#: original_texis/minibuf.texi:2051
msgid "If the user first types @kbd{y @key{RET}}, which is invalid because this function demands the entire word @samp{yes}, it responds by displaying these prompts, with a brief pause between them:"
msgstr "ユーザーが最初に@kbd{y @key{RET}}とタイプしたら無効になる。なぜならこの関数は@samp{yes}という単語全体を要求しているので、一時停止して以下のプロンプトを説明のために表示する。"

#. type: group
#: original_texis/minibuf.texi:2058
#, no-wrap
msgid ""
"---------- Buffer: minibuffer ----------\n"
"Please answer yes or no.\n"
"Do you really want to remove everything? (yes or no)\n"
"---------- Buffer: minibuffer ----------\n"
msgstr ""
"---------- Buffer: minibuffer ----------\n"
"Please answer yes or no.\n"
"Do you really want to remove everything? (yes or no)\n"
"---------- Buffer: minibuffer ----------\n"

#. type: section
#: original_texis/minibuf.texi:2063
#, no-wrap
msgid "Asking Multiple Y-or-N Questions"
msgstr "Asking Multiple Y-or-N Questions"

#. type: cindex
#: original_texis/minibuf.texi:2064
#, no-wrap
msgid "multiple yes-or-no questions"
msgstr "multiple yes-or-no questions"

#. type: Plain text
#: original_texis/minibuf.texi:2072
msgid "When you have a series of similar questions to ask, such as ``Do you want to save this buffer?'' for each buffer in turn, you should use @code{map-y-or-n-p} to ask the collection of questions, rather than asking each question individually.  This gives the user certain convenient facilities such as the ability to answer the whole series at once."
msgstr "同じような連続する質問と答えがある場合、たとえば各バッファーにたいして順に``Do you want to save this buffer?''と確認を求めるような場合には、個別に質問するより@code{map-y-or-n-p}を使用して質問のコレクションを尋ねるべきです。これはユーザーにたいして、質問全体にたいして1回で答えられるような便利な機能を提供します。"

#. type: defun
#: original_texis/minibuf.texi:2073
#, no-wrap
msgid "map-y-or-n-p prompter actor list &optional help action-alist no-cursor-in-echo-area"
msgstr "map-y-or-n-p prompter actor list &optional help action-alist no-cursor-in-echo-area"

#. type: defun
#: original_texis/minibuf.texi:2076
msgid "This function asks the user a series of questions, reading a single-character answer in the echo area for each one."
msgstr "この関数はユーザーに一連の質問をし、それぞれの質問にたいしてエコーエリア内の1文字の答えを読み取る。"

#. type: defun
#: original_texis/minibuf.texi:2081
msgid "The value of @var{list} specifies the objects to ask questions about.  It should be either a list of objects or a generator function.  If it is a function, it should expect no arguments, and should return either the next object to ask about, or @code{nil}, meaning to stop asking questions."
msgstr "値@var{list}は質問をするオブジェクトを指定する。これはリスト、オブジェクト、または生成関数(generator function)のいずれかである。関数の場合は引数なしで次に質問するオブジェクト、または質問の中止を意味する@code{nil}のいずれかをリターンする。"

#. type: defun
#: original_texis/minibuf.texi:2084
msgid "The argument @var{prompter} specifies how to ask each question.  If @var{prompter} is a string, the question text is computed like this:"
msgstr "引数@var{prompter}は各質問について問い合わせ方法を指定する。@var{prompter}が文字列なら質問テキストは以下のようになる:"

#. type: example
#: original_texis/minibuf.texi:2087
#, no-wrap
msgid "(format @var{prompter} @var{object})\n"
msgstr "(format @var{prompter} @var{object})\n"

#. type: defun
#: original_texis/minibuf.texi:2092
msgid "where @var{object} is the next object to ask about (as obtained from @var{list})."
msgstr "ここで@var{object}は、(@var{list}から得られる)質問する次のオブジェクトである。"

#. type: defun
#: original_texis/minibuf.texi:2099
msgid "If not a string, @var{prompter} should be a function of one argument (the next object to ask about) and should return the question text.  If the value is a string, that is the question to ask the user.  The function can also return @code{t}, meaning do act on this object (and don't ask the user), or @code{nil}, meaning ignore this object (and don't ask the user)."
msgstr "文字列でないければ、@var{prompter}は1つの引数(質問する次のオブジェクト)をとる関数で、質問テキストをリターンする。値が文字列ならユーザーに問う質問であること。関数は@code{t}(ユーザーに尋ねずこのオブジェクトを処理する)、または@code{nil}(ユーザーに尋ねずこのオブジェクトを無視する)をリターンすることもできる。"

#. type: defun
#: original_texis/minibuf.texi:2104
msgid "The argument @var{actor} says how to act on the answers that the user gives.  It should be a function of one argument, and it is called with each object that the user says yes for.  Its argument is always an object obtained from @var{list}."
msgstr "引数@var{actor}はユーザーが与えた答えにたいして、どのように処理するかを指定する。これは引数が1つの関数で、ユーザーがyesと答えたオブジェクトを引数として呼び出される。引数は常に@var{list}から取得したオブジェクトである。"

#. type: defun
#: original_texis/minibuf.texi:2106
msgid "If the argument @var{help} is given, it should be a list of this form:"
msgstr "引数@var{help}が与えられたら、それは以下の形式のリストである:"

#. type: example
#: original_texis/minibuf.texi:2109
#, no-wrap
msgid "(@var{singular} @var{plural} @var{action})\n"
msgstr "(@var{singular} @var{plural} @var{action})\n"

#. type: defun
#: original_texis/minibuf.texi:2116
msgid "where @var{singular} is a string containing a singular noun that describes the objects conceptually being acted on, @var{plural} is the corresponding plural noun, and @var{action} is a transitive verb describing what @var{actor} does."
msgstr "@var{singular}はそのオブジェクトが概念的に何に作用するかを説明する単数形の名詞を含む文字列、@var{plural}はそれに対応する複数形の名詞、@var{action}は@var{actor}が何を行うかを説明する他動詞である。"

#. type: defun
#: original_texis/minibuf.texi:2119
msgid "If you don't specify @var{help}, the default is @code{(\"object\" \"objects\" \"act on\")}."
msgstr "@var{help}を指定しない場合のデフォルトは@code{(\"object\" \"objects\" \"act on\")}。"

#. type: defun
#: original_texis/minibuf.texi:2128
msgid "Each time a question is asked, the user may enter @kbd{y}, @kbd{Y}, or @key{SPC} to act on that object; @kbd{n}, @kbd{N}, or @key{DEL} to skip that object; @kbd{!} to act on all following objects; @key{ESC} or @kbd{q} to exit (skip all following objects); @kbd{.} (period) to act on the current object and then exit; or @kbd{C-h} to get help.  These are the same answers that @code{query-replace} accepts.  The keymap @code{query-replace-map} defines their meaning for @code{map-y-or-n-p} as well as for @code{query-replace}; see @ref{Search and Replace}."
msgstr "質問のたびに、ユーザーはそのオブジェクトを処理するなら@kbd{y}、@kbd{Y}または@key{SPC}、そのオブジェクトをスキップするなら@kbd{n}、@kbd{N}、または@key{DEL}、以降のすべてのオブジェクトを処理するなら@kbd{!}、exit(以降のすべてのオブジェクトをスキップ)するなら@key{ESC}か@kbd{q}、カレントオブジェクトを処理した後にexitするなら@kbd{.}(ピリオド)、ヘルプを入手する場合は@kbd{C-h}をエンターする。これらは@code{query-replace}が受け入れるのと同じ答えである。キーマップ@code{query-replace-map}は@code{map-y-or-n-p}にたいするそれらの意味を定義して、@code{query-replace}にたいしても同様に定義する。@ref{Search and Replace}を参照のこと。"

#. type: defun
#: original_texis/minibuf.texi:2135
msgid "You can use @var{action-alist} to specify additional possible answers and what they mean.  It is an alist of elements of the form @code{(@var{char} @var{function} @var{help})}, each of which defines one additional answer.  In this element, @var{char} is a character (the answer); @var{function} is a function of one argument (an object from @var{list}); @var{help} is a string."
msgstr "@var{action-alist}を使用して、利用できる追加の答えとそれらが何を意味するかを指定できる。これは要素が@code{(@var{char} @var{function} @var{help})}という形式のalistで、それぞれの要素が追加の答えを1つ定義する。要素の内容は@var{char}が文字(答え)、@var{function}が引数が1つ(@var{list}から取得するオブジェクト)の関数、@var{help}が文字列である。"

#. type: defun
#: original_texis/minibuf.texi:2141
msgid "When the user responds with @var{char}, @code{map-y-or-n-p} calls @var{function}.  If it returns non-@code{nil}, the object is considered acted upon, and @code{map-y-or-n-p} advances to the next object in @var{list}.  If it returns @code{nil}, the prompt is repeated for the same object."
msgstr "ユーザーの応答が@var{char}なら、@code{map-y-or-n-p}は@var{function}を呼び出す。これが非@code{nil}をリターンしたらそのオブジェクトが処理されたと判断して、@code{map-y-or-n-p}は@var{list}内の次のオブジェクトに進む。@code{nil}をリターンしたら同じオブジェクトにたいして質問を繰り返す。"

#. type: defun
#: original_texis/minibuf.texi:2145
msgid "Normally, @code{map-y-or-n-p} binds @code{cursor-in-echo-area} while prompting.  But if @var{no-cursor-in-echo-area} is non-@code{nil}, it does not do that."
msgstr "確認を求める間、@code{map-y-or-n-p}は通常は@code{cursor-in-echo-area}をバインドする。しかし@var{no-cursor-in-echo-area}が非@code{nil}ならバインドしない。"

#. type: defun
#: original_texis/minibuf.texi:2153
msgid "If @code{map-y-or-n-p} is called in a command that was invoked using the mouse---more precisely, if @code{last-nonmenu-event} (@pxref{Command Loop Info}) is either @code{nil} or a list---then it uses a dialog box or pop-up menu to ask the question.  In this case, it does not use keyboard input or the echo area.  You can force use either of the mouse or of keyboard input by binding @code{last-nonmenu-event} to a suitable value around the call."
msgstr "マウスを使用して呼び出されたコマンドから@code{map-y-or-n-p}が呼び出された場合(より正確には@code{last-nonmenu-event}は非@code{nil}かリストの場合。@ref{Command Loop Info}を参照)には、確認を求めるためにダイアログボックスかポップアップメニューが使用される。この場合にはキーボード入力やエコーエリアは使用されない。呼び出しの前後で@code{last-nonmenu-event}を適切な値にバインドすることによって、マウスあるいはキーボードの入力を強制できる。"

#. type: defun
#: original_texis/minibuf.texi:2155
msgid "The return value of @code{map-y-or-n-p} is the number of objects acted on."
msgstr "@code{map-y-or-n-p}のリターン値は処理したオブジェクトの個数である。"

#. type: cindex
#: original_texis/minibuf.texi:2161
#, no-wrap
msgid "passwords, reading"
msgstr "passwords, reading"

#. type: Plain text
#: original_texis/minibuf.texi:2165
msgid "To read a password to pass to another program, you can use the function @code{read-passwd}."
msgstr "他のプログラムに渡すためのパスワードを読み取るために関数@code{read-passwd}を使用できます。"

#. type: defun
#: original_texis/minibuf.texi:2166
#, no-wrap
msgid "read-passwd prompt &optional confirm default"
msgstr "read-passwd prompt &optional confirm default"

#. type: defun
#: original_texis/minibuf.texi:2172
msgid "This function reads a password, prompting with @var{prompt}.  It does not echo the password as the user types it; instead, it echoes @samp{.} for each character in the password.  If you want to apply another character to hide the password, let-bind the variable @code{read-hide-char} with that character."
msgstr "この関数はプロンプト@var{prompt}を表示してパスワードを読み取る。これはユーザーがタイプしたパスワードのかわりに、パスワード内の各文字を@samp{.}に変更してエコーする。パスワードを隠すために別の文字を適用したければ、その文字を@code{read-hide-char}にletバインドすること。"

#. type: defun
#: original_texis/minibuf.texi:2177
msgid "The optional argument @var{confirm}, if non-@code{nil}, says to read the password twice and insist it must be the same both times.  If it isn't the same, the user has to type it over and over until the last two times match."
msgstr "オプション引数@var{confirm}が非@code{nil}なら、パスワードを2回読み取ることでそれらが同じものであることを強制する。同じでなければ、2回の入力が同じになるまで、ユーザーはパスワードを繰り返しタイプする必要がある。"

#. type: defun
#: original_texis/minibuf.texi:2181
msgid "The optional argument @var{default} specifies the default password to return if the user enters empty input.  If @var{default} is @code{nil}, then @code{read-passwd} returns the null string in that case."
msgstr "オプション引数@var{default}は、ユーザーが空入力をエンターした場合のデフォルトパスワードである。@var{default}が@code{nil}なら、@code{read-passwd}はnull文字列をリターンする。"

#. type: Plain text
#: original_texis/minibuf.texi:2188
msgid "This section describes some commands meant for use in the minibuffer."
msgstr "このセクションではミニバッファー内で使用するコマンドを説明します。"

#. type: deffn
#: original_texis/minibuf.texi:2189
#, no-wrap
msgid "Command exit-minibuffer"
msgstr "Command exit-minibuffer"

#. type: deffn
#: original_texis/minibuf.texi:2192
msgid "This command exits the active minibuffer.  It is normally bound to keys in minibuffer local keymaps."
msgstr "このコマンドはアクティブなミニバッファーをexitする。これは通常はミニバッファー内のローカルキーマップのキーにバインドされる。"

#. type: deffn
#: original_texis/minibuf.texi:2194
#, no-wrap
msgid "Command self-insert-and-exit"
msgstr "Command self-insert-and-exit"

#. type: deffn
#: original_texis/minibuf.texi:2198
msgid "This command exits the active minibuffer after inserting the last character typed on the keyboard (found in @code{last-command-event}; @pxref{Command Loop Info})."
msgstr "このコマンドはキーボードでタイプされた最後の文字を挿入した後にアクティブなミニバッファーをexitする。@ref{Command Loop Info})を参照のこと。"

#. type: deffn
#: original_texis/minibuf.texi:2200
#, no-wrap
msgid "Command previous-history-element n"
msgstr "Command previous-history-element n"

#. type: deffn
#: original_texis/minibuf.texi:2203
msgid "This command replaces the minibuffer contents with the value of the @var{n}th previous (older) history element."
msgstr "このコマンドは@var{n}個前(古い)のヒストリー要素の値でミニバッファー内のコンテンツを置換する。"

#. type: deffn
#: original_texis/minibuf.texi:2205
#, no-wrap
msgid "Command next-history-element n"
msgstr "Command next-history-element n"

#. type: deffn
#: original_texis/minibuf.texi:2208
msgid "This command replaces the minibuffer contents with the value of the @var{n}th more recent history element."
msgstr "このコマンドは@var{n}個先(新しい)のヒストリー要素の値でミニバッファー内のコンテンツを置換する。"

#. type: deffn
#: original_texis/minibuf.texi:2210
#, no-wrap
msgid "Command previous-matching-history-element pattern n"
msgstr "Command previous-matching-history-element pattern n"

#. type: deffn
#: original_texis/minibuf.texi:2214
msgid "This command replaces the minibuffer contents with the value of the @var{n}th previous (older) history element that matches @var{pattern} (a regular expression)."
msgstr "このコマンドは@var{pattern}(正規表現)にマッチする@var{n}個前(古い)のヒストリー要素でミニバッファー内のコンテンツを置換する。"

#. type: deffn
#: original_texis/minibuf.texi:2216
#, no-wrap
msgid "Command next-matching-history-element pattern n"
msgstr "Command next-matching-history-element pattern n"

#. type: deffn
#: original_texis/minibuf.texi:2220
msgid "This command replaces the minibuffer contents with the value of the @var{n}th next (newer) history element that matches @var{pattern} (a regular expression)."
msgstr "このコマンドは@var{pattern}(正規表現)にマッチする@var{n}個先(新しい)のヒストリー要素でミニバッファー内のコンテンツを置換する。"

#. type: deffn
#: original_texis/minibuf.texi:2222
#, no-wrap
msgid "Command previous-complete-history-element n"
msgstr "Command previous-complete-history-element n"

#. type: deffn
#: original_texis/minibuf.texi:2226
msgid "This command replaces the minibuffer contents with the value of the @var{n}th previous (older) history element that completes the current contents of the minibuffer before the point."
msgstr "このコマンドはミニバッファー内のポイントの前のカレントコンテンツを、@var{n}個前(古い)ヒストリー要素の値で置換する。"

#. type: deffn
#: original_texis/minibuf.texi:2228
#, no-wrap
msgid "Command next-complete-history-element n"
msgstr "Command next-complete-history-element n"

#. type: deffn
#: original_texis/minibuf.texi:2232
msgid "This command replaces the minibuffer contents with the value of the @var{n}th next (newer) history element that completes the current contents of the minibuffer before the point."
msgstr "このコマンドはミニバッファー内のポイントの前のカレントコンテンツを、@var{n}個先(新しい)ヒストリー要素の値で置換する。"

#. type: cindex
#: original_texis/minibuf.texi:2237
#, no-wrap
msgid "minibuffer windows"
msgstr "minibuffer windows"

#. type: Plain text
#: original_texis/minibuf.texi:2241
msgid "These functions access and select minibuffer windows, test whether they are active and control how they get resized."
msgstr "以下の関数はミニバッファーウィンドウにアクセスと選択を行い、それがアクティブかどうかテストしてリサイズされる方法を制御します。"

#. type: defun
#: original_texis/minibuf.texi:2242
#, no-wrap
msgid "active-minibuffer-window"
msgstr "active-minibuffer-window"

#. type: defun
#: original_texis/minibuf.texi:2245
msgid "This function returns the currently active minibuffer window, or @code{nil} if there is none."
msgstr "この関数はカレントでアクティブなミニバッファーウィンドウ、アクティブなウィンドウがなければ@code{nil}をリターンする。"

#. type: defun
#: original_texis/minibuf.texi:2247
#, no-wrap
msgid "minibuffer-window &optional frame"
msgstr "minibuffer-window &optional frame"

#. type: anchor{#1}
#: original_texis/minibuf.texi:2254
msgid "Definition of minibuffer-window"
msgstr "Definition of minibuffer-window"

#. type: defun
#: original_texis/minibuf.texi:2254
msgid "This function returns the minibuffer window used for frame @var{frame}.  If @var{frame} is @code{nil}, that stands for the current frame.  Note that the minibuffer window used by a frame need not be part of that frame---a frame that has no minibuffer of its own necessarily uses some other frame's minibuffer window."
msgstr "この関数はフレーム@var{frame}にたいして使用されるミニバッファーウィンドウをリターンする。@var{frame}が@code{nil}ならカレントフレームを意味する。フレームに使用されるミニバッファーウィンドウは、そのフレームの一部である必要はないことに注意。自身のミニバッファーをもたないフレームは、必然的に他のフレームのミニバッファーウィンドウを使用する。"

#. type: defun
#: original_texis/minibuf.texi:2256
#, no-wrap
msgid "set-minibuffer-window window"
msgstr "set-minibuffer-window window"

#. type: defun
#: original_texis/minibuf.texi:2262
msgid "This function specifies @var{window} as the minibuffer window to use.  This affects where the minibuffer is displayed if you put text in it without invoking the usual minibuffer commands.  It has no effect on the usual minibuffer input functions because they all start by choosing the minibuffer window according to the current frame."
msgstr "この関数はミニバッファーウィンドウとして@var{window}を使用するよう指定する。これは通常のミニバッファーコマンドを呼び出さずにミニバッファーにテキストを入力する場合には、そのミニバッファーがどこに表示されるかに影響を及ぼす。通常のミニバッファー入力関数はすべてカレントフレームに対応するミニバッファーを選択して開始されるので影響はない。"

#. type: defun
#: original_texis/minibuf.texi:2265
#, no-wrap
msgid "window-minibuffer-p &optional window"
msgstr "window-minibuffer-p &optional window"

#. type: defun
#: original_texis/minibuf.texi:2269
msgid "This function returns non-@code{nil} if @var{window} is a minibuffer window.  @var{window} defaults to the selected window."
msgstr "この関数は@var{window}がミニバッファーウィンドウなら@code{nil}をリターンする。@var{window}のデフォルトは選択されたウィンドウ。"

#. type: Plain text
#: original_texis/minibuf.texi:2275
msgid "It is not correct to determine whether a given window is a minibuffer by comparing it with the result of @code{(minibuffer-window)}, because there can be more than one minibuffer window if there is more than one frame."
msgstr "@code{(minibuffer-window)}の結果を比較して与えられたウィンドウがミニバッファーかどうか判断するのは正しくない。なぜなら複数のフレームがある場合には、ミニバッファーウィンドウも複数あり得るからである。"

#. type: defun
#: original_texis/minibuf.texi:2276
#, no-wrap
msgid "minibuffer-window-active-p window"
msgstr "minibuffer-window-active-p window"

#. type: defun
#: original_texis/minibuf.texi:2279
msgid "This function returns non-@code{nil} if @var{window} is the currently active minibuffer window."
msgstr "この関数は@var{window}がカレントでアクティブなミニバッファーウィンドウなら非@code{nil}をリターンする。"

#. type: Plain text
#: original_texis/minibuf.texi:2283
msgid "The following two options control whether minibuffer windows are resized automatically and how large they can get in the process."
msgstr "以下の2つのオプションはミニバッファーウィンドウが自動的にリサイズされるか否か、およびその処理でミニバッファーが大きくなり得るサイズを制御します。"

#. type: defopt
#: original_texis/minibuf.texi:2284
#, no-wrap
msgid "resize-mini-windows"
msgstr "resize-mini-windows"

#. type: defopt
#: original_texis/minibuf.texi:2294
msgid "This option specifies whether minibuffer windows are resized automatically.  The default value is @code{grow-only}, which means that a minibuffer window by default expands automatically to accommodate the text it displays and shrinks back to one line as soon as the minibuffer gets empty.  If the value is @code{t}, Emacs will always try to fit the height of a minibuffer window to the text it displays (with a minimum of one line).  If the value is @code{nil}, a minibuffer window never changes size automatically.  In that case the window resizing commands (@pxref{Resizing Windows}) can be used to adjust its height."
msgstr "このオプションはミニバッファーウィンドウが自動的にリサイズされるかどうかを指定する。デフォルト値は@code{grow-only}で、これはミニバッファーが表示するテキストを収容するために、ミニバッファーウィンドウがデフォルトにより自動的に拡張されて、ミニバッファーが空になれば即座に1行に縮小されることを意味する。値が@code{t}ならEmacsは常にミニバッファーが表示するテキストにミニバッファーウィンドウの高さをフィットさせるように試みる。値が@code{nil}ならミニバッファーウィンドウのサイズが自動的に変更されることは決してない。この場合には、ミニバッファーウィンドウの高さの調節のために、ウィンドウリサイズコマンドを使用できる(@ref{Resizing Windows}を参照)。"

#. type: defopt
#: original_texis/minibuf.texi:2296 original_texis/minibuf.texi:2417
#, no-wrap
msgid "max-mini-window-height"
msgstr "max-mini-window-height"

#. type: defopt
#: original_texis/minibuf.texi:2301
msgid "This option provides a maximum height for resizing minibuffer windows automatically.  A floating-point number specifies a fraction of the frame's height; an integer specifies the maximum number of lines.  The default value is 0.25."
msgstr "このオプションはミニバッファーウィンドウの自動的なリサイズにたいする最大高さを提供する。浮動小数点数はフレーム高さにたいする割合、整数は最大行数を指定する。デフォルト値は0.25。"

#. type: cindex
#: original_texis/minibuf.texi:2306
#, no-wrap
msgid "access minibuffer contents"
msgstr "access minibuffer contents"

#. type: cindex
#: original_texis/minibuf.texi:2307
#, no-wrap
msgid "minibuffer contents, accessing"
msgstr "minibuffer contents, accessing"

#. type: Plain text
#: original_texis/minibuf.texi:2310
msgid "These functions access the minibuffer prompt and contents."
msgstr "以下の関数はミニバッファーのプロンプトとコンテンツにアクセスします。"

#. type: defun
#: original_texis/minibuf.texi:2311
#, no-wrap
msgid "minibuffer-prompt"
msgstr "minibuffer-prompt"

#. type: defun
#: original_texis/minibuf.texi:2314
msgid "This function returns the prompt string of the currently active minibuffer.  If no minibuffer is active, it returns @code{nil}."
msgstr "この関数はカレントでアクティブなミニバッファーのプロンプト文字列をリターンする。アクティブなミニバッファーがなければ@code{nil}をリターンする。"

#. type: defun
#: original_texis/minibuf.texi:2316
#, no-wrap
msgid "minibuffer-prompt-end"
msgstr "minibuffer-prompt-end"

#. type: defun
#: original_texis/minibuf.texi:2320
msgid "This function returns the current position of the end of the minibuffer prompt, if a minibuffer is current.  Otherwise, it returns the minimum valid buffer position."
msgstr "この関数はミニバッファーがカレントならミニバッファープロンプトの終端のカレント位置をリターンする。それ以外はバッファーの有効な最小位置をリターンする。"

#. type: defun
#: original_texis/minibuf.texi:2322
#, no-wrap
msgid "minibuffer-prompt-width"
msgstr "minibuffer-prompt-width"

#. type: defun
#: original_texis/minibuf.texi:2325
msgid "This function returns the current display-width of the minibuffer prompt, if a minibuffer is current.  Otherwise, it returns zero."
msgstr "この関数はミニバッファーがカレントならミニバッファープロンプトのカレントの表示幅をリターンする。それ以外は0をリターンする。"

#. type: defun
#: original_texis/minibuf.texi:2327
#, no-wrap
msgid "minibuffer-contents"
msgstr "minibuffer-contents"

#. type: defun
#: original_texis/minibuf.texi:2332
msgid "This function returns the editable contents of the minibuffer (that is, everything except the prompt) as a string, if a minibuffer is current.  Otherwise, it returns the entire contents of the current buffer."
msgstr "この関数はミニバッファーがカレントなら、ミニバッファーの編集可能なコンテンツ(つまりプロンプト以外のすべて)を文字列でリターンする。それ以外はカレントバッファーのコンテンツ全体をリターンする。"

#. type: defun
#: original_texis/minibuf.texi:2334
#, no-wrap
msgid "minibuffer-contents-no-properties"
msgstr "minibuffer-contents-no-properties"

#. type: defun
#: original_texis/minibuf.texi:2337
msgid "This is like @code{minibuffer-contents}, except that it does not copy text properties, just the characters themselves.  @xref{Text Properties}."
msgstr "これは@code{minibuffer-contents}と同様だが、テキストプロパティをコピーせずに文字自身だけをリターンする。@ref{Text Properties}を参照のこと。"

#. type: deffn
#: original_texis/minibuf.texi:2339
#, no-wrap
msgid "Command delete-minibuffer-contents"
msgstr "Command delete-minibuffer-contents"

#. type: deffn
#: original_texis/minibuf.texi:2343
msgid "This command erases the editable contents of the minibuffer (that is, everything except the prompt), if a minibuffer is current.  Otherwise, it erases the entire current buffer."
msgstr "このコマンドはミニバッファーがカレントなら、ミニバッファーの編集可能なコンテンツ(つまりプロンプト以外のすべて)を削除する。それ以外はカレントバッファー全体を削除する。"

#. type: section
#: original_texis/minibuf.texi:2346
#, no-wrap
msgid "Recursive Minibuffers"
msgstr "Recursive Minibuffers"

#. type: cindex
#: original_texis/minibuf.texi:2347
#, no-wrap
msgid "recursive minibuffers"
msgstr "recursive minibuffers"

#. type: Plain text
#: original_texis/minibuf.texi:2351
msgid "These functions and variables deal with recursive minibuffers (@pxref{Recursive Editing}):"
msgstr "以下の関数と変数は再帰ミニバッファーを処理します(@ref{Recursive Editing}を参照):"

#. type: defun
#: original_texis/minibuf.texi:2352
#, no-wrap
msgid "minibuffer-depth"
msgstr "minibuffer-depth"

#. type: defun
#: original_texis/minibuf.texi:2356
msgid "This function returns the current depth of activations of the minibuffer, a nonnegative integer.  If no minibuffers are active, it returns zero."
msgstr "この関数はアクティブなミニバッファーのカレント再帰深さを正の整数でリターンする。アクティブなミニバッファーが存在しなければ0をリターンする。"

#. type: defopt
#: original_texis/minibuf.texi:2358
#, no-wrap
msgid "enable-recursive-minibuffers"
msgstr "enable-recursive-minibuffers"

#. type: defopt
#: original_texis/minibuf.texi:2364
msgid "If this variable is non-@code{nil}, you can invoke commands (such as @code{find-file}) that use minibuffers even while the minibuffer window is active.  Such invocation produces a recursive editing level for a new minibuffer.  The outer-level minibuffer is invisible while you are editing the inner one."
msgstr "この変数が非@code{nil}ならミニバッファーウィンドウがアクティブでも、(@code{find-file}のような)ミニバッファーを使用するコマンドを呼び出すことができる。このような呼び出しは新たなミニバッファーにたいして再帰編集レベル(recursive editing level)を生成する。内側レベルの編集の間、外側レベルのミニバッファーは非表示になる。"

#. type: defopt
#: original_texis/minibuf.texi:2368
msgid "If this variable is @code{nil}, you cannot invoke minibuffer commands when the minibuffer window is active, not even if you switch to another window to do it."
msgstr "この変数が@code{nil}なら、ミニバッファーウィンドウがアクティブなときにたとえ他のウィンドウに切り替えても、ミニバッファーコマンドの呼び出しはできない。"

#. type: Plain text
#: original_texis/minibuf.texi:2378
msgid "If a command name has a property @code{enable-recursive-minibuffers} that is non-@code{nil}, then the command can use the minibuffer to read arguments even if it is invoked from the minibuffer.  A command can also achieve this by binding @code{enable-recursive-minibuffers} to @code{t} in the interactive declaration (@pxref{Using Interactive}).  The minibuffer command @code{next-matching-history-element} (normally @kbd{M-s} in the minibuffer) does the latter."
msgstr "コマンド名が非@code{nil}のプロパティ@code{enable-recursive-minibuffers}をもつ場合には、たとえミニバッファーから呼び出された場合でも、そのコマンドは引数の読み取りにミニバッファーを使用できる。コマンドのinteractive宣言内で@code{enable-recursive-minibuffers}を@code{t}にしても、これを行うことができる(@ref{Using Interactive}を参照)。ミニバッファーコマンド@code{next-matching-history-element} (ミニバッファー内では通常@kbd{M-s})は後者を行う。"

#. type: section
#: original_texis/minibuf.texi:2380
#, no-wrap
msgid "Minibuffer Miscellany"
msgstr "Minibuffer Miscellany"

#. type: defun
#: original_texis/minibuf.texi:2382
#, no-wrap
msgid "minibufferp &optional buffer-or-name"
msgstr "minibufferp &optional buffer-or-name"

#. type: defun
#: original_texis/minibuf.texi:2386
msgid "This function returns non-@code{nil} if @var{buffer-or-name} is a minibuffer.  If @var{buffer-or-name} is omitted, it tests the current buffer."
msgstr "この関数は@var{buffer-or-name}がミニバッファーなら非@code{nil}をリターンする。@var{buffer-or-name}が省略されるとカレントバッファーをテストする。"

#. type: defvar
#: original_texis/minibuf.texi:2388
#, no-wrap
msgid "minibuffer-setup-hook"
msgstr "minibuffer-setup-hook"

#. type: defvar
#: original_texis/minibuf.texi:2391
msgid "This is a normal hook that is run whenever the minibuffer is entered.  @xref{Hooks}."
msgstr "これはミニバッファーがエンターされたときは常に実行されるノーマルフックである。@ref{Hooks}を参照のこと。"

#. type: defvar
#: original_texis/minibuf.texi:2393
#, no-wrap
msgid "minibuffer-exit-hook"
msgstr "minibuffer-exit-hook"

#. type: defvar
#: original_texis/minibuf.texi:2396
msgid "This is a normal hook that is run whenever the minibuffer is exited.  @xref{Hooks}."
msgstr "これはミニバッファーがexitされたときは常に実行されるノーマルフックである。"

#. type: defvar
#: original_texis/minibuf.texi:2398
#, no-wrap
msgid "minibuffer-help-form"
msgstr "minibuffer-help-form"

#. type: anchor{#1}
#: original_texis/minibuf.texi:2402
msgid "Definition of minibuffer-help-form"
msgstr "Definition of minibuffer-help-form"

#. type: defvar
#: original_texis/minibuf.texi:2402
msgid "The current value of this variable is used to rebind @code{help-form} locally inside the minibuffer (@pxref{Help Functions})."
msgstr "この変数のカレント値はミニバッファー内で@code{help-form}をローカルにリバインドするために使用される(@ref{Help Functions}を参照)。"

#. type: defvar
#: original_texis/minibuf.texi:2404
#, no-wrap
msgid "minibuffer-scroll-window"
msgstr "minibuffer-scroll-window"

#. type: anchor{#1}
#: original_texis/minibuf.texi:2409
msgid "Definition of minibuffer-scroll-window"
msgstr "Definition of minibuffer-scroll-window"

#. type: defvar
#: original_texis/minibuf.texi:2409
msgid "If the value of this variable is non-@code{nil}, it should be a window object.  When the function @code{scroll-other-window} is called in the minibuffer, it scrolls this window."
msgstr "この変数の値が非@code{nil}なら、それはウィンドウオブジェクトである。ミニバッファー内で関数@code{scroll-other-window}が呼び出されたときは、このウィンドウをスクロールする。"

#. type: defun
#: original_texis/minibuf.texi:2411
#, no-wrap
msgid "minibuffer-selected-window"
msgstr "minibuffer-selected-window"

#. type: defun
#: original_texis/minibuf.texi:2415
msgid "This function returns the window that was selected when the minibuffer was entered.  If selected window is not a minibuffer window, it returns @code{nil}."
msgstr "この関数はミニバッファーがエンターされたときに選択されていたウィンドウをリターンする。選択されたウィンドウがミニバッファー以外のときは@code{nil}をリターンする。"

#. type: defopt
#: original_texis/minibuf.texi:2421
msgid "This variable specifies the maximum height for resizing minibuffer windows.  If a float, it specifies a fraction of the height of the frame.  If an integer, it specifies a number of lines."
msgstr "この変数はミニバッファーウィンドウのリサイズにたいする最大高さを指定する。浮動小数点数ならフレーム高さにたいする割り合いを指定する。整数の場合は行数を指定する。"

#. type: vindex
#: original_texis/minibuf.texi:2423
#, no-wrap
msgid "minibuffer-message-timeout"
msgstr "minibuffer-message-timeout"

#. type: defun
#: original_texis/minibuf.texi:2424
#, no-wrap
msgid "minibuffer-message string &rest args"
msgstr "minibuffer-message string &rest args"

#. type: defun
#: original_texis/minibuf.texi:2432
msgid "This function displays @var{string} temporarily at the end of the minibuffer text, for a few seconds, or until the next input event arrives, whichever comes first.  The variable @code{minibuffer-message-timeout} specifies the number of seconds to wait in the absence of input.  It defaults to 2.  If @var{args} is non-@code{nil}, the actual message is obtained by passing @var{string} and @var{args} through @code{format-message}.  @xref{Formatting Strings}."
msgstr "この関数は数秒、あるいは次の入力イベントが到着するまでミニバッファーテキストの最後に一時的に@var{string}を表示する。変数@code{minibuffer-message-timeout}は入力がない場合に待機する秒数を指定する(デフォルトは2)。@var{args}が非@code{nil}なら、実際のメッセージは@code{format-message}に@var{string}と@var{args}を渡して作成される。@xref{Formatting Strings}を参照のこと。"

#. type: deffn
#: original_texis/minibuf.texi:2434
#, no-wrap
msgid "Command minibuffer-inactive-mode"
msgstr "Command minibuffer-inactive-mode"

#. type: deffn
#: original_texis/minibuf.texi:2438
msgid "This is the major mode used in inactive minibuffers.  It uses keymap @code{minibuffer-inactive-mode-map}.  This can be useful if the minibuffer is in a separate frame.  @xref{Minibuffers and Frames}."
msgstr "これはインタラクティブなミニバッファー内で使用されるメジャーモードである。キーマップ@code{minibuffer-inactive-mode-map}を使用する。ミニバッファーが別のフレームにある場合には有用かもしれない。@ref{Minibuffers and Frames}を参照のこと。"
