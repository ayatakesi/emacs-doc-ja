# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Emacs 25.1\n"
"POT-Creation-Date: 2021-03-19 23:06+0900\n"
"PO-Revision-Date: 2020-11-20 01:48+0900\n"
"Last-Translator: Ayanokoji Takesi <ayanokoji.takesi@gmail.com>\n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: node
#: original_texis/anti.texi:8
#, no-wrap
msgid "Antinews"
msgstr "Antinews"

#. type: appendix
#: original_texis/anti.texi:9
#, no-wrap
msgid "Emacs 26 Antinews"
msgstr "Emacs 26 Antinews"

#. type: Plain text
#: original_texis/anti.texi:16
msgid "For those users who live backwards in time, here is information about downgrading to Emacs version 26.3.  We hope you will enjoy the greater simplicity that results from the absence of many @w{Emacs @value{EMACSVER}} features."
msgstr "時代に逆らって生きるユーザーのために、以下はEmacsバージョン26.3へのダウングレードに関する情報です。@w{Emacs @value{EMACSVER}}機能の不在による結果としての偉大なる単純さをぜひ堪能してください。"

#. type: itemize
#: original_texis/anti.texi:26
msgid "Lisp objects are again implemented on the C level as integer types, not as pointers.  This might be a small step for Emacs Lisp users, but it's a giant leap for the Emacs developers who work on the C level, since it is now again easy to print Lisp object in the debugger in the decimal format, which is so much easier for debugging.  It also makes calling Emacs functions from the debugger easier, and allows us to freely mix integers and Lisp objects in the C code."
msgstr "CレベルでのLispオヴジェクトは再びポインターから整数で実装されるようになりました。これはEmacs Lispのユーザーにとっては小さなステップかもしれませんが、Cレベルで作業するEmacsユーザーにとっては大きな飛躍です。なぜならデバッガでLispオブジェクトを10進フォーマットで再び簡単にプリントできるようになったからです(デバッグ中ならとても簡単にできる)。これによりデバッガからEmacs関数を呼び出すのが簡単になり、Cコードで整数とLispオブジェクトを混ぜ合せるのが簡単になりました。"

#. type: itemize
#: original_texis/anti.texi:33
msgid "The test suite was removed from the distribution tarball.  We believe that tests need seldom if ever be run, certainly not by the end users.  Removing the tests from the tarball makes it much smaller, which is important since disk space becomes more and more at premium as you move back in time."
msgstr "配布用tarballからテストスーツを削除しました。わたしたちは今までに実行されたテストは、特にエンドユーザーにとって不必要と信じています。テストを削除することによりtarballのサイズは小さくなり、これは時代を遡るにつれてディスクスペースはより高価になっていくので重要なことなのです。"

#. type: itemize
#: original_texis/anti.texi:40
msgid "Dynamic module support is disabled by default.  This both makes Emacs smaller (a worthy goal by itself), and removes the complications and additional complexity related with installing module support files and letting random shared objects an opportunity to be loaded into Emacs and mess with it."
msgstr "ダイナミックモジュールのサポートはデフォルトで無効になりました。これによりEmacsが軽量化される(これ自体が価値あるゴール)とともに、モジュールサポートファイルのインストールに関する混乱と余計な複雑化、ランダム共有オブジェクトをEmacsに共有させてEmacsを混乱させる機会を削除しました。"

#. type: itemize
#: original_texis/anti.texi:48
msgid "You now must activate any installed packages only after loading your init files.  That requires an explicit call to @code{package-initialize} in your init file, which is a Good Thing, as it makes you think seriously where and indeed whether you'd like your packages to become available to your sessions.  Simplicity should tramp convenience!"
msgstr "インストール済みパッケージは、initファイルのロード後にのみアクティブ化を行わなければなりません。これにはinitファイル内での明示的な@code{package-initialize}呼び出しが必要です。これはあなたのセッションのどこで、本当にパッケージを利用可能にしたいのかを、あなたに真剣に考えさせる点においてよい事なのです。利便性は素朴さによって踏破されるべきです!"

#. type: itemize
#: original_texis/anti.texi:54
msgid "To reduce the amount of code in Emacs related to unimportant features, we've removed native rotation and resizing of images.  You will have to build Emacs with ImageMagick if you want to resize or rotate images inside Emacs.  We don't expect anyone to miss that."
msgstr "重要でなはい機能に関連するEmacsのコード量を削減するために、イメージのネイティブなローテーションとリサイズを削除しました。Emacs内部でイメージのリサイズやローテートを行いたければ、ImageMagickとともにEmacsをビルドする必要があります。これを失念する人がいるとは思えません。"

#. type: itemize
#: original_texis/anti.texi:61
msgid "We've re-enabled color fonts usage by the XFT font back-end.  We consider the availability of these fonts more important than a random crash here and there, especially since the use of these fonts for displaying Emoji will become less and less important as we travel back in time, and will completely disappear in some past Emacs version."
msgstr "XFTフォントバックエンドによるカラーフォントの使用を再び有効化しました。わたしたちはそこかしこでランダムに発生するクラッシュよりも、これらのフォントの可用性のほうが重要だと考えます。特にEmojiを表示するためのこれらのフォントの使用は時代を遡るにつれて重要さを失い、Emacsのより過去のバージョンでは完全に消滅するはずだからです。"

#. type: itemize
#: original_texis/anti.texi:68
msgid "The function @code{network-interface-list} can now return only IPv4 addresses.  We consider the complexity introduced by IPv6 to be too much to be justified, and on the other hand its removal is the step in the right direction, given that IPv6 is expected to be completely removed as we move back in time."
msgstr "関数@code{network-interface-list}はIPv4アドレスだけをリターンできるようになりました。わたしたちはIPv6がもたらす複雑性はその正当性を大きく凌駕すると考えており、その一方でIPv6は時代を逆行するにつれて完全に消え去ることが予想されていることから、IPv6の削除は正しい方向に向けたステップなのです。"

#. type: itemize
#: original_texis/anti.texi:71
msgid "The limit on repetitions in regular expressions was reduced to"
msgstr "正規表現における繰り返しリミットは"

#. type: ifnottex
#: original_texis/anti.texi:73
msgid "2**15 @minus{} 1."
msgstr "2**15 @minus{} 1に削減されました。"

#. type: tex
#: original_texis/anti.texi:76
#, no-wrap
msgid "@math{2^{15}-1}.\n"
msgstr "@math{2^{15}-1}に削減されました。\n"

#. type: itemize
#: original_texis/anti.texi:79
msgid "We envision that regular expressions will become more and more simple as we move towards the distant past."
msgstr "わたしたちの想定では遠い過去へと向うにつれて、正規表現はよりシンプルになっていくはずです。"

#. type: itemize
#: original_texis/anti.texi:85
msgid "To simplify code and reduce complexity, we removed the capability of searching programs on remote hosts in @code{executable-find}.  If you really need this feature (why would you?), you can always write your own shell script and run it on the remote."
msgstr "コード単純化と複雑性低減のために、@code{executable-find}におけるリモートホストでのプログラム検索能力を削除しました。本当にこの機能が必要(何故に?)なら、いつでも独自のシェルスクリプトを記述してリモートホスト上で実行することができます。"

#. type: itemize
#: original_texis/anti.texi:92
msgid "The @code{:extend} face attribute is no longer available; all faces have their background color extended by default past end of line.  This should significantly simplify face management and remove unnecessary code bloat, as well as make faces significantly simpler to understand and use."
msgstr "フェイス属性@code{:extend}は利用できなくなりました。すべてのフェイスのバックグラウンドカラーは、デフォルトでは行末を超えて拡張されます。これはフェイス管理を有意に簡略化と不必要なコードの増殖の削除、同様にフェイスの理解と使用を大幅に簡略化するはずです。"

#. type: itemize
#: original_texis/anti.texi:101
msgid "The predicates @code{display-blink-cursor-p} and @code{display-symbol-keys-p} were deleted.  They are rarely if ever needed, and can easily be substituted by appropriate calls to old and proven APIs like @code{display-graphic-p}.  As an additional bonus, writing Lisp programs that depend on this functionality will make sure the programmer understands better what exactly is the required features of the display terminal."
msgstr "@code{display-blink-cursor-p}および@code{display-symbol-keys-p}の述語を削除しました。これらが必要になるのは稀であり、@code{display-graphic-p}のような旧来の実証済みな適切なAPI呼び出しで簡単に置き換えることができます。追加ボーナスとしてこの機能に依存するLispプログラムを記述することにより、そのディスプレイ端末において真に必要な機能は何なのかを、プログラマーにより深く理解させることが保証されます。"

#. type: itemize
#: original_texis/anti.texi:108
msgid "Relative directories in the value of the @env{HOME} environment variable are once again interpreted relative to the @code{default-directory} of the current buffer.  This is much simpler, and also allows @env{HOME} to resolve to a different place in different buffers, which allows some interesting applications."
msgstr "環境変数@env{HOME}の値内の相対ディレクトリーは、再びカレントバッファーの@code{default-directory}に相対的と解釈されるようになりました。こちらのほうがより単純であり、さらにバッファーが異なれば@env{HOME}が異なる場所に解決されるために、いくつかの興味深いアプリケーションが可能になります。"

#. type: itemize
#: original_texis/anti.texi:113
msgid "For the same reasons, @code{file-name-absolute-p} now again considers @file{~foo} an absolute file name, even if there's no known user @samp{foo}.  This means a Lisp program which uses such file names will always work the same on any system, regardless of its known users."
msgstr "同様の理由により、既知のユーザー@samp{foo}が存在しなくても、@code{file-name-absolute-p}は@file{~foo}を再び絶対ファイル名とみなすようになりました。これはそのようなファイル名を使用するLispプログラムが、すべてのシステムにおいて、ユーザーが既知であるかどうかとは無関係に常に同じように機能することを意味します。"

#. type: itemize
#: original_texis/anti.texi:122
msgid "File-related primitives like @code{file-attributes}, @code{file-modes}, @code{file-newer-than-file-p}, and some others once again return @code{nil} when the underlying low-level APIs fail, instead of signaling an error.  We decided that functions which signal errors require more complex code from Lisp programs which use them, and found this complexity unjustified when returning @code{nil} will do."
msgstr "@code{file-attributes}、@code{file-modes}、@code{file-newer-than-file-p}、およびその他のファイル関連のプリミティブは、基盤となる低レベルAPIの失敗時にはエラーをシグナルするかわりに再び@code{nil}をリターンするようになりました。エラーをシグナルする関数は、それを使用するLispプログラムにたいしてより複雑なコードを要求すると判断するとともに、@code{nil}をリターンするようにした際にはこの複雑性は不当であることを見出しました。"

#. type: itemize
#: original_texis/anti.texi:127
msgid "Similarly, old-style backquotes no longer signal errors; they generate warnings instead.  You can remove error handling from programs that use backquotes."
msgstr "同様に旧スタイルのバッククォートはエラーをシグナルするのではなく、警告を生成するようになりました。これでバッククォートを使用するプログラムからエラー処理を削除することができます。"

#. type: itemize
#: original_texis/anti.texi:134
msgid "Formatting floating-point numbers has been sped up by letting the underlying implementation produce unpredictable values, instead of signaling errors when the number is too large to format correctly.  We believe the Emacs Lisp programmers should always know what they are doing when they deal with floating-point values."
msgstr "浮動小数点数のフォーマットは、数値が正確にフォーマットできないほど大きい場合にエラーをシグナルするかわりに、予測不可能な値を背景となる実装に生成させることにより高速化されました。わたしたちはEmacs Lispプログラマーは浮動小数点値を扱う際には、自分が何を行っているかを常に承知していると信じています。"

#. type: itemize
#: original_texis/anti.texi:144
msgid "The function @code{read-char-from-minibuffer} was deleted.  We decided that @code{read-char} should be enough for any Lisp program that needs to ask the user for a single-character input, in recognition of the fact that nothing makes Emacs Lisp hackers rejoice more than the need to sit down and write yet another interactive question-and-answer function, and make it optimal for each specific case.  Consequently, no history is provided for such responses (why would someone want history of single-key strokes, anyway?)."
msgstr "関数@code{read-char-from-minibuffer}を削除しました。わたしたちはEmacs Lispハッカーにとって座して別種のインタラクティブなQ&A関数を記述して、それを特定のケースごとに最適化するに優る喜びはないという認識の元に、ユーザーにたいして1文字の入力を尋ねる必要があるすべてのLispプログラムにとっては@code{read-char}で十分なはずだと判断しました。その結果としてそのような応答のヒストリーは提供されません(いずれにせよ、誰が何故に単一キーストロークのヒストリーを望むのか?)。"

#. type: itemize
#: original_texis/anti.texi:150
msgid "The function @code{ngettext} was deleted.  Non-English languages will become less and less widespread, let alone useful, as you move back in time, so we took this small step in that direction, and simplified Emacs as a nice bonus."
msgstr "関数@code{ngettext}を削除しました。時代を遡るにつれて英語以外の言語は普及しなくなり、それが便利であることは言うまでもないことなので、わたしたちはこの方向に向けて小さなステップを踏にだすとともに、イカしたボーナスとしてEmacsを簡略化しました。"

#. type: itemize
#: original_texis/anti.texi:157
msgid "Focus-change notifications on text-mode frames are no longer recognized or supported.  You can now safely disregard the possibility of receiving such notifications on TTY frames.  This is one small step on the long road of removing all non-character input events Emacs supports on TTY frames."
msgstr "テキストモードフレームでのフォーカス変更通知はもはや認識されず、サポートされません。これでTTYフレーム上のそのような通知を受信する可能性を安全に無視できるようになりました。これはTTYフレーム上でのすべての非文字の入力イベントにたいするEmacsサポートの削除という長い道程に向けた小さな一歩です。"

#. type: itemize
#: original_texis/anti.texi:163
msgid "Face specifications in @code{face-remapping-alist} now have to be buffer-specific, without any differences between windows showing the same buffers.  This allowed us to remove a lot of unneeded code bloat from Emacs, and make the face handling much simpler."
msgstr "@code{face-remapping-alist}内のフェイス仕様は同一バッファーを表示するウィンドウ間の差異とな無関係にバッファー固有であることが要求されます。これによりEmacsから不必要なコードの肥大化を防ぐとともに、フェイス処理がより単純化されます。"

#. type: itemize
#: original_texis/anti.texi:169
msgid "The @samp{%o} and @samp{%x} formats now always produce unsigned values, as you'd expect.  This allows you to reveal the underlying machine representation, which is different on each architecture, something we consider a valuable feature."
msgstr "フォーマット@samp{%o}および@samp{%x}は、あなたが期待通り常に符号なしの値を生成するようになりました。これによってあなたは背後にあるアーキテクチャーごとに異なるマシン表現(わたしたちはこれを何か価値のある機能とみなしている)を暴くことが可能になりました。"

#. type: itemize
#: original_texis/anti.texi:176
msgid "We no longer highlight in @code{font-lock-warning-face} symbols with confusable quote characters, such as U+2018.  Detecting them needed non-trivial amount of code, and we firmly believe that Lisp programmers always know what they are doing, and don't need to be annoyed with typefaces that stand out and distract."
msgstr "わたしたちはもはやU+2018のような紛らわしい引用符を含むシンボルを@code{font-lock-warning-face}でハイライトしません。これらの検出には無視できない量のコードが必要であり、Lispプログラマーは自分が何をしているか常に承知していて、目障りで紛らわしい書体に煩わされる必要などないとわたしたちは固く信じています。"

#. type: itemize
#: original_texis/anti.texi:181
msgid "The function @code{file-system-info} was dropped on Posix platforms, since you can always invoke @command{df} instead and parse its output."
msgstr "関数@code{file-system-info}は@command{df}呼び出しと出力の解析が常に可能なことから、Posixプラットフォームで削除しました。"

#. type: itemize
#: original_texis/anti.texi:187
msgid "The functions that implement the @samp{base64url} encoding were removed, as they can always be emulated by suitable tweaking of the normal base-64 encoding.  No need to bloat Emacs and force Lisp programmers learn more interfaces on this account."
msgstr "@samp{base64url}エンコーディングを実装する関数は、通常のbase-64エンコーディングを適切に調整することで常にエミュレートできるので削除しました。Emacsの肥大化、およびこれのためにLispプログラマーにさらなるインターフェースの学習を強いる必要はありません。"

#. type: itemize
#: original_texis/anti.texi:191
msgid "As part of the ongoing quest for simplicity, many other functions and variables have been eliminated."
msgstr "簡略化にたいする継続要求の一環として、他の多くの関数と変数が排除されました。"
