# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Emacs 25.1\n"
"POT-Creation-Date: 2024-06-26 23:45+0000\n"
"PO-Revision-Date: 2023-08-02 14:58+0900\n"
"Last-Translator: Ayanokoji Takesi <ayanokoji.takesi@gmail.com>\n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: node
#: original_texis/anti.texi:8
#, no-wrap
msgid "Antinews"
msgstr "Antinews"

#. type: appendix
#: original_texis/anti.texi:9
#, no-wrap
msgid "Emacs 28 Antinews"
msgstr "Emacs 28 Antinews"

#. type: Plain text
#: original_texis/anti.texi:16
msgid "For those users who live backwards in time, here is information about downgrading to Emacs version 28.2.  We hope you will enjoy the greater simplicity that results from the absence of many @w{Emacs @value{EMACSVER}} features."
msgstr "時代に逆らって生きるユーザーのために、以下はEmacsバージョン28.2へのダウングレードに関する情報です。@w{Emacs @value{EMACSVER}}機能の不在による結果としての偉大なる単純さをぜひ堪能してください。"

#. type: itemize
#: original_texis/anti.texi:26
msgid "The implementation of overlays is back to its simple, time-proven storage in a pair of linear linked lists centered around some buffer position.  No more fancy interval trees and suchlikes.  Lisp programs that use overlays once again need to recenter overlays around the buffer position of interest, and display-related features should again make sure they don't use too many overlays in a buffer, lest redisplay will be too slow."
msgstr "オーバーレイの実装が、バッファーのある位置周辺を中央にもつ一対の線形リストによるストレージという、シンプルかつ実績のある実装に戻されました。派手なインターバル木(interval tree: 区間木)はもう必要ありません。オーバーレイを使用するLispプログラムは、以前のように興味をもつバッファー位置周辺の中央にオーバーレイを配置する必要があります。更に表示関連の機能も再表示が非常に低速になることを避けるために、以前のように1つのバッファーで大量のオーバーレイを使用しないよう留意する必要があります。"

#. type: itemize
#: original_texis/anti.texi:35
msgid "Several functions stopped the annoying conversion of quotes and key sequences by no longer calling @code{substitute-command-keys}.  One prominent example is @code{format-prompt} and all its many callers.  This makes the strings they produce much more predictable, returning to you, the Lisp programmer, control on which punctuation characters will appear in the text presented to the users.  For similar reasons, the @code{substitute-quotes} function was deleted."
msgstr "@code{substitute-command-keys}を呼び出さないことによって、いくつかの関数がクォート文字やキーシーケンスの煩わしい変換を行わなくなりました。目を引く例として@code{format-prompt}、およびそれを呼び出す多くの関数すべてが挙げられます。これによってこれらの関数が生成する文字列の予測がより容易になり、Lispプログラマーであるあなたにとってはユーザーに表示するテキスト内にどの句読点文字を表示させるかが制御しやすくなりました。同様の理由によって@code{substitute-quotes}関数が削除されました。"

#. type: itemize
#: original_texis/anti.texi:39
msgid "The venerable @code{buffer-modified-p} function again reliably returns either @code{nil} or @code{t}, not any other confusing values."
msgstr "由緒ある@code{buffer-modified-p}関数は紛らわしい値ではなく、以前のように確実に@code{nil}か@code{t}だけをリターンするようになりました。"

#. type: itemize
#: original_texis/anti.texi:46
msgid "The support for @samp{medium} weight of fonts was dropped.  Emacs now considers @samp{medium} and @samp{regular} weights to be the same.  We believe this will simplify your font setup, since there's no longer a need to worry about fonts that support @samp{regular} weight, but not the @samp{medium} one, or vice versa: either one will do!"
msgstr "@samp{medium}ウェイトのフォントにたいするサポートが廃止されました。これでEmacsは@samp{medium}ウェイトと@samp{regular}ウェイトのフォントを同一とみなすようになります。@samp{regular}ウェイトはサポートするが@samp{medium}ウェイトはサポートしないフォント(またはその逆)について心配する必要がなくなったので、フォントのセットアップがシンプルになったと信じています。どちらのウェイトでも構わないですよ!"

#. type: itemize
#: original_texis/anti.texi:55
msgid "To reduce the amount of code in Emacs related to unimportant features, we've removed the function @code{compiled-function-p}.  Lisp programs are expected to test explicitly for the relevant types of function objects: built-in, byte-compiled, and natively-compiled.  For the same reasons we deleted the functions @code{pos-bol}, @code{pos-eol}, @code{file-attribute-file-identifier}, and quite a few others.  We don't expect anyone to miss those fancy functions."
msgstr "重要ではない機能に関連するEmacsのコード量削減のために、関数@code{compiled-function-p}を削除しました。Lispプログラムには関数オブジェクトに関するbuilt-in、byte-compiled、natively-compiledといったタイプを明示的にテストすることが期待されています。同様の理由により@code{pos-bol}、@code{pos-eol}、@code{file-attribute-file-identifier}といった多くの関数が削除されました。このような派手な関数が失われたことを悲しむ人がいるなど、わたしたちは期待していません。"

#. type: itemize
#: original_texis/anti.texi:61
msgid "The timeout used by @code{x-show-tip} can no longer be specified by Lisp programs; it is hard-coded in the function.  This will lead to a simpler, easier maintained code, and no one should want to control the timeout after which the tip pops down."
msgstr "@code{x-show-tip}によって用いられるタイムアウトは、Lispプログラムから指定するのではなく関数内にハードコードされます(訳注: x-show-tipは内部的な使用を意図した関数でありユーザー用の関数はtooltip-show; Emacs 29.1からツールチップ表示タイムアウトがハードコードされた値ではなくx-show-tooltip-timeoutでカスタマイズ可能になった)。これによってコードがシンプルかつ保守しやすくなりますし、ツールチップのポップアップが非表示になるまでのタイムアウトを制御したい人など存在しない筈です。"

#. type: itemize
#: original_texis/anti.texi:65
msgid "The macro @code{setopt} was deleted; use @code{customize-variable} instead, or invoke the @code{:set} function from Lisp."
msgstr "マクロ@code{setopt}が削除されました。かわりに@code{customize-variable}を使うか、Lispから@code{:set}関数を呼び出してください。"

#. type: itemize
#: original_texis/anti.texi:71
msgid "We removed the @code{lisp-directory} variable, as the value can be easily deduced from other similar variables, like @code{installation-directory} and @code{source-directory}, each one when it's relevant."
msgstr "@code{lisp-directory}変数の値は、似たような@code{installation-directory}や@code{source-directory}の等の他の変数から(それらの変数が関係する場合には)容易に推測できるので削除しました。"

#. type: itemize
#: original_texis/anti.texi:77
msgid "To simplify code and reduce complexity, we deleted the functions @code{get-display-property} and @code{add-display-text-property}; use the generic @code{get-text-property} and @code{put-text-property} instead."
msgstr "コードの単純化と複雑度低減のために、関数@code{get-display-property}と@code{add-display-text-property}を削除しました。かわりに汎用性のある@code{get-text-property}と@code{put-text-property}を使ってください。"

#. type: itemize
#: original_texis/anti.texi:83
msgid "Support for pinch input events and for modern drag-and-drop functionality on X was dropped.  As you move back in time, these facilities will become less and less important, and will soon enough disappear, so there's no reason to keep them in Emacs."
msgstr "Xにおけるピンチ(pinch)入力イベント、および現代的なドラッグアンドドロップ関数が削除されました。これらの機能の重要性は時を遡るにつれて減少して、やがては消滅するでしょう。なのでEmacsに残しておく理由はありません。"

#. type: itemize
#: original_texis/anti.texi:92
msgid "To keep Emacs clean and elegant, we've removed the @file{textsec.el} library, with its facilities for checking whether some text is ``suspicious''.  We consider our users smart enough to detect maliciously modified text by just looking at it or by moving the cursor across it, and the whole idea that someone would wish to deliberately deceive Emacs users ridiculous and unworthy of complicating our elegant text-processing and display capabilities."
msgstr "Emacsを清潔かつ優雅に保つために、あるテキストが``疑わしい''かどうかをチェックする機能とともに@file{textsec.el}ライブラリーを削除しました。わたしたちはユーザーがテキストを一見するかカーソルを動かすだけで悪意をもって変更されたテキストを見破るほどに洗練されていると考えています。誰かが意図的にEmacsユーザーを騙そうというアイデア自体が馬鹿げています。わたしたちのエレガントなテキスト処理と表示能力を複雑化する価値はありません。"

#. type: itemize
#: original_texis/anti.texi:104
msgid "The functions @code{keymap-set}, @code{keymap-global-set}, @code{keymap-local-set}, @code{keymap-substitute}, @code{keymap-lookup}, and some others were deleted.  We have found the traditional @code{define-key}, @code{global-set-key}, @code{local-set-key}, @code{substitute-key-definition}, and @code{key-binding} more than enough, and their minor inconsistencies in the syntax of keys they accept a source of endless fun in Emacs Lisp programming.  Why make Emacs programming a dull place? For the same reasons we deleted @code{key-valid-p}, since we consider the permissive nature of @code{kbd} more in the spirit of Emacs Lisp."
msgstr "@code{keymap-set}、@code{keymap-global-set}、@code{keymap-local-set}、@code{keymap-substitute}、@code{keymap-lookup}、その他の関数が削除されました。伝統的な@code{define-key}、@code{global-set-key}、@code{local-set-key}、@code{substitute-key-definition}、@code{key-binding}で十分すぎます。これらの関数が受け付けるキー構文の些細な一貫性の欠如こそ、Emacs Lispプログラミングにおける終わりなき愉悦の源だからです。何故にEmacsプログラミングをつまらない場にするのでしょうか? @code{kbd}の寛大な性質をよりEmacs Lisp精神に則って考慮した結果、同様の理由によって@code{key-valid-p}を削除しました。"

#. type: itemize
#: original_texis/anti.texi:111
msgid "Yanking of anything but plain text from other applications becomes more and more an unnecessary feature as you move back in time, so we dropped support for pasting media like HTML and images via the clipboard.  If you @i{really} need to yank those into an Emacs buffer, you can go via a disk file."
msgstr "他のアプリケーションからプレーンテキスト以外の何かをyankする機能は時を遡るにつれて不要になっていくので、クリップボード経由でにHTMLやイメージのようなメディア貼り付けにたいするサポートは削除しました。@i{本当に}これらをEmacsバッファーにyankする必要がある場合には、ディスク上のファイルを通じて行うことができます。"

#. type: itemize
#: original_texis/anti.texi:118
msgid "We removed unnecessary functions @code{string-pixel-width} and @code{string-glyph-split}, as we consider it inappropriate for Lisp programs to do display layout calculations, where these functions come in handy.  Display is for the display engine, written in C, and should stay there!"
msgstr "わたしたちはLispプログラムは表示レイアウトの計算に適さないとみなして、それを簡単に行うための関数@code{string-pixel-width}と@code{string-glyph-split}は削除しました。表示はCで記述されたディスプレイエンジンのためのものであり、そこに留まるべきなのです!"

#. type: itemize
#: original_texis/anti.texi:125
msgid "Various new Xwidget functions, such as @code{xwidget-perform-lispy-event}, @code{xwidget-webkit-load-html}, and @code{xwidget-webkit-back-forward-list}, were deleted as part of our continuing effort to gradually delete the entire Xwidget functionality in some previous release of Emacs."
msgstr "Emacsの過去のリリースにおけるXwidget機能の全体の段階的削除に向けた取り組みの一環として@code{xwidget-perform-lispy-event}、@code{xwidget-webkit-load-html}、@code{xwidget-webkit-back-forward-list}といった新しいさまざまなXwidget関数が削除されました。"

#. type: itemize
#: original_texis/anti.texi:131
msgid "Setting the @code{:stderr} property of a process in a @code{make-process} call once again forces the process's connection to use pipes, not ptys, for all the standard streams --- a considerable simplification of this complex interface."
msgstr "@code{make-process}呼び出しにおいて@code{:stderr}プロパティをセットすることによって、そのプロセス接続にはすべての標準ストリームにptyではなく、以前のようにpipeの使用が強制されるようになりました。この複雑なインターフェイスが大幅に単純化がされたのです。"

#. type: itemize
#: original_texis/anti.texi:136
msgid "To keep the amount of Lisp functions from growing out of control, we deleted @code{string-equal-ignore-case}.  Use @code{compare-strings} instead."
msgstr "Lisp関数の数が制御できる限界を超えないように保つために@code{string-equal-ignore-case}を削除しました。かわりに@code{compare-strings}を使ってください。"

#. type: itemize
#: original_texis/anti.texi:138
msgid "Several features that complicated the byte compiler have been removed:"
msgstr "バイトコンパイラーを複雑にするいくつかの機能を削除しました。"

#. type: itemize
#: original_texis/anti.texi:144
msgid "The warnings about quoting mistakes in documentation strings.  You are expected to find such mistakes yourself, by eyeballing the resulting @file{*Help*} buffer display."
msgstr "ドキュメント文字列におけるクォート間違いに関する警告。そのような間違いは、目を皿のようにして@file{*Help*}バッファーに表示された結果を調べることを期待しています。"

#. type: itemize
#: original_texis/anti.texi:148
msgid "The warnings about malformed @code{defcustom} types, like double-quoting symbols in @code{choice} lists."
msgstr "@code{choice}リストにおけるダブルクォートされたシンボルのような、不正な形式の@code{defcustom}について警告。"

#. type: itemize
#: original_texis/anti.texi:154
msgid "The macro @code{with-buffer-unmodified-if-unchanged} was deleted.  Lisp programs that need to leave the buffer unmodified in these cases can always compare the text before and after the modifications."
msgstr "マクロ@code{with-buffer-unmodified-if-unchanged}を削除しました。そのような場合においてバッファーを未変更のままにする必要があるLispプログラムは、変更の前後でテキストを比較することは常に可能なのですから。"

#. type: itemize
#: original_texis/anti.texi:159
msgid "The functions @code{string-edit} and @code{read-string-from-buffer} were removed, as we consider the fun of programming them anew every time an important part of the education of each Emacs Lisp developer."
msgstr "Emacs Lisp開発者の教育において、毎回新たにプログラミングする楽しみが重要なポイントだとわたしたちは考えており、したがって関数@code{string-edit}と@code{read-string-from-buffer}を削除しました。"

#. type: itemize
#: original_texis/anti.texi:164
msgid "We deleted the function @code{readablep} and the related variable @code{print-unreadable-function}, since no one is supposed to want to print unreadable Lisp objects."
msgstr "読み取りできないLispオブジェクトをプリントしたい人などいないでしょうから関数@code{readablep}、およびそれに関連する変数@code{print-unreadable-function}は削除しました。"

#. type: itemize
#: original_texis/anti.texi:170
msgid "The facility for storing multisession variables was deleted as an unnecessary complication.  With it are gone @code{multisession-value}, @code{define-multisession-variable}, and @code{list-multisession-values}."
msgstr "不必要に複雑なので、マルチセッション変数保存用の機能は削除しました。それにともない@code{multisession-value}、@code{define-multisession-variable}、@code{list-multisession-values}はなくなりました。"

#. type: itemize
#: original_texis/anti.texi:175
msgid "The support for the @code{cursor-face} text property was dropped.  We consider the rest of the faces adequate for supporting this functionality."
msgstr "テキストプロパティ@code{cursor-face}にたいするサポートを削除しました。この機能のサポートは残されたフェイスだけで十分だと考えます。"

#. type: itemize
#: original_texis/anti.texi:181
msgid "The function @code{tooltip-show} dropped support for optional face arguments @code{text-face} and @code{default-face} that allow fancy control of the face of the tip text and top frame colors.  We decided that tooltips should all look the same, to prevent user confusion."
msgstr "関数@code{tooltip-show}から、ツールチップのフェイスおよびトップフレームのカラーに奇抜な制御を許すためのオプション変数@code{text-face}と@code{text-face}のサポートを削除しました。わたしたちはユーザーの混乱を避けるために、ツールチップはすべて同じ外観であるべきだと判断しました。"

#. type: itemize
#: original_texis/anti.texi:187
msgid "As part of the ongoing quest for simplicity, many other functions and variables have been eliminated.  Other functions and variables, that were declared obsolete since Emacs 24, have been added back, in preparation for releasing Emacs 24 in some distant past."
msgstr "簡略化にたいする継続要求の一環として、その他の多くの関数と変数が排除されました。他にはEmacs 24以降で廃止と宣言された関数および変数が、過去のある時点におけるEmacs 24リリースの準備に向けて再び追加されています。"
