# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2024-05-03 10:07+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: node
#: original_texis/nonascii.texi:5
#, no-wrap
msgid "Non-ASCII Characters"
msgstr ""

#. type: chapter
#: original_texis/nonascii.texi:6
#, no-wrap
msgid "Non-@acronym{ASCII} Characters"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:7
#, no-wrap
msgid "multibyte characters"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:8
#, no-wrap
msgid "characters, multi-byte"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:9
#, no-wrap
msgid "non-@acronym{ASCII} characters"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:13
msgid ""
"This chapter covers the special issues relating to characters and how they "
"are stored in strings and buffers."
msgstr ""

#. type: section
#: original_texis/nonascii.texi:31 original_texis/nonascii.texi:33
#: original_texis/nonascii.texi:34
#, no-wrap
msgid "Text Representations"
msgstr ""

#. type: menuentry
#: original_texis/nonascii.texi:31
msgid "How Emacs represents text."
msgstr ""

#. type: node
#: original_texis/nonascii.texi:31 original_texis/nonascii.texi:183
#, no-wrap
msgid "Disabling Multibyte"
msgstr ""

#. type: menuentry
#: original_texis/nonascii.texi:31
msgid "Controlling whether to use multibyte characters."
msgstr ""

#. type: node
#: original_texis/nonascii.texi:31 original_texis/nonascii.texi:232
#, no-wrap
msgid "Converting Representations"
msgstr ""

#. type: menuentry
#: original_texis/nonascii.texi:31
msgid "Converting unibyte to multibyte and vice versa."
msgstr ""

#. type: section
#: original_texis/nonascii.texi:31 original_texis/nonascii.texi:310
#: original_texis/nonascii.texi:311
#, no-wrap
msgid "Selecting a Representation"
msgstr ""

#. type: menuentry
#: original_texis/nonascii.texi:31
msgid "Treating a byte sequence as unibyte or multi."
msgstr ""

#. type: section
#: original_texis/nonascii.texi:31 original_texis/nonascii.texi:365
#: original_texis/nonascii.texi:366
#, no-wrap
msgid "Character Codes"
msgstr ""

#. type: menuentry
#: original_texis/nonascii.texi:31
msgid "How unibyte and multibyte relate to codes of individual characters."
msgstr ""

#. type: section
#: original_texis/nonascii.texi:31 original_texis/nonascii.texi:451
#: original_texis/nonascii.texi:452
#, no-wrap
msgid "Character Properties"
msgstr ""

#. type: menuentry
#: original_texis/nonascii.texi:31
msgid "Character attributes that define their behavior and handling."
msgstr ""

#. type: section
#: original_texis/nonascii.texi:31 original_texis/nonascii.texi:747
#: original_texis/nonascii.texi:748
#, no-wrap
msgid "Character Sets"
msgstr ""

#. type: menuentry
#: original_texis/nonascii.texi:31
msgid ""
"The space of possible character codes is divided into various character "
"sets."
msgstr ""

#. type: node
#: original_texis/nonascii.texi:31 original_texis/nonascii.texi:882
#, no-wrap
msgid "Scanning Charsets"
msgstr ""

#. type: menuentry
#: original_texis/nonascii.texi:31
msgid "Which character sets are used in a buffer?"
msgstr ""

#. type: section
#: original_texis/nonascii.texi:31 original_texis/nonascii.texi:919
#: original_texis/nonascii.texi:920
#, no-wrap
msgid "Translation of Characters"
msgstr ""

#. type: menuentry
#: original_texis/nonascii.texi:31
msgid "Translation tables are used for conversion."
msgstr ""

#. type: section
#: original_texis/nonascii.texi:31 original_texis/nonascii.texi:1021
#: original_texis/nonascii.texi:1022
#, no-wrap
msgid "Coding Systems"
msgstr ""

#. type: menuentry
#: original_texis/nonascii.texi:31
msgid "Coding systems are conversions for saving files."
msgstr ""

#. type: section
#: original_texis/nonascii.texi:31 original_texis/nonascii.texi:2044
#: original_texis/nonascii.texi:2045
#, no-wrap
msgid "Input Methods"
msgstr ""

#. type: menuentry
#: original_texis/nonascii.texi:31
msgid ""
"Input methods allow users to enter various non-ASCII characters without "
"special keyboards."
msgstr ""

#. type: section
#: original_texis/nonascii.texi:31 original_texis/nonascii.texi:2116
#: original_texis/nonascii.texi:2117
#, no-wrap
msgid "Locales"
msgstr ""

#. type: menuentry
#: original_texis/nonascii.texi:31
msgid "Interacting with the POSIX locale."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:35
#, no-wrap
msgid "text representation"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:40
msgid ""
"Emacs buffers and strings support a large repertoire of characters from many "
"different scripts, allowing users to type and display text in almost any "
"known written language."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:41
#, no-wrap
msgid "character codepoint"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:42
#, no-wrap
msgid "codespace"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:43
#, no-wrap
msgid "Unicode"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:54
msgid ""
"To support this multitude of characters and scripts, Emacs closely follows "
"the @dfn{Unicode Standard}.  The Unicode Standard assigns a unique number, "
"called a @dfn{codepoint}, to each and every character.  The range of "
"codepoints defined by Unicode, or the Unicode @dfn{codespace}, is "
"@code{0..#x10FFFF} (in hexadecimal notation), inclusive.  Emacs extends this "
"range with codepoints in the range @code{#x110000..#x3FFFFF}, which it uses "
"for representing characters that are not unified with Unicode and @dfn{raw "
"8-bit bytes} that cannot be interpreted as characters.  Thus, a character "
"codepoint in Emacs is a 22-bit integer."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:55
#, no-wrap
msgid "internal representation of characters"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:56
#, no-wrap
msgid "characters, representation in buffers and strings"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:57
#, no-wrap
msgid "multibyte text"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:70
msgid ""
"To conserve memory, Emacs does not hold fixed-length 22-bit numbers that are "
"codepoints of text characters within buffers and strings.  Rather, Emacs "
"uses a variable-length internal representation of characters, that stores "
"each character as a sequence of 1 to 5 8-bit bytes, depending on the "
"magnitude of its codepoint@footnote{ This internal representation is based "
"on one of the encodings defined by the Unicode Standard, called @dfn{UTF-8}, "
"for representing any Unicode codepoint, but Emacs extends UTF-8 to represent "
"the additional codepoints it uses for raw 8-bit bytes and characters not "
"unified with Unicode.}.  For example, any @acronym{ASCII} character takes up "
"only 1 byte, a Latin-1 character takes up 2 bytes, etc.  We call this "
"representation of text @dfn{multibyte}."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:76
msgid ""
"Outside Emacs, characters can be represented in many different encodings, "
"such as ISO-8859-1, GB-2312, Big-5, etc.  Emacs converts between these "
"external encodings and its internal representation, as appropriate, when it "
"reads text into a buffer or a string, or when it writes text to a disk file "
"or passes it to some other process."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:82
msgid ""
"Occasionally, Emacs needs to hold and manipulate encoded text or binary "
"non-text data in its buffers or strings.  For example, when Emacs visits a "
"file, it first reads the file's text verbatim into a buffer, and only then "
"converts it to the internal representation.  Before the conversion, the "
"buffer holds encoded text."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:83
#, no-wrap
msgid "unibyte text"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:91
msgid ""
"Encoded text is not really text, as far as Emacs is concerned, but rather a "
"sequence of raw 8-bit bytes.  We call buffers and strings that hold encoded "
"text @dfn{unibyte} buffers and strings, because Emacs treats them as a "
"sequence of individual bytes.  Usually, Emacs displays unibyte buffers and "
"strings as octal codes such as @code{\\237}.  We recommend that you never "
"use unibyte buffers and strings except for manipulating encoded text or "
"binary non-text data."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:96
msgid ""
"In a buffer, the buffer-local value of the variable "
"@code{enable-multibyte-characters} specifies the representation used.  The "
"representation for a string is determined and recorded in the string when "
"the string is constructed."
msgstr ""

#. type: vindex
#: original_texis/nonascii.texi:97 original_texis/nonascii.texi:216
#, no-wrap
msgid "enable-multibyte-characters"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:101
msgid ""
"This variable specifies the current buffer's text representation.  If it is "
"non-@code{nil}, the buffer contains multibyte text; otherwise, it contains "
"unibyte encoded text or binary non-text data."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:104
msgid ""
"You cannot set this variable directly; instead, use the function "
"@code{set-buffer-multibyte} to change a buffer's representation."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:106
#, no-wrap
msgid "position-bytes position"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:112
msgid ""
"Buffer positions are measured in character units.  This function returns the "
"byte-position corresponding to buffer position @var{position} in the current "
"buffer.  This is 1 at the start of the buffer, and counts upward in bytes.  "
"If @var{position} is out of range, the value is @code{nil}."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:114
#, no-wrap
msgid "byte-to-position byte-position"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:124
msgid ""
"Return the buffer position, in character units, corresponding to given "
"@var{byte-position} in the current buffer.  If @var{byte-position} is out of "
"range, the value is @code{nil}.  In a multibyte buffer, an arbitrary value "
"of @var{byte-position} can be not at character boundary, but inside a "
"multibyte sequence representing a single character; in this case, this "
"function returns the buffer position of the character whose multibyte "
"sequence includes @var{byte-position}.  In other words, the value does not "
"change for all byte positions that belong to the same character."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:126
#, no-wrap
msgid "convert file byte to buffer position"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:127
#, no-wrap
msgid "convert buffer position to file byte"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:130
msgid ""
"The following two functions are useful when a Lisp program needs to map "
"buffer positions to byte offsets in a file visited by the buffer."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:131
#, no-wrap
msgid "bufferpos-to-filepos position &optional quality coding-system"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:141
msgid ""
"This function is similar to @code{position-bytes}, but instead of byte "
"position in the current buffer it returns the offset from the beginning of "
"the current buffer's file of the byte that corresponds to the given "
"character @var{position} in the buffer.  The conversion requires to know how "
"the text is encoded in the buffer's file; this is what the "
"@var{coding-system} argument is for, defaulting to the value of "
"@code{buffer-file-coding-system}.  The optional argument @var{quality} "
"specifies how accurate the result should be; it should be one of the "
"following:"
msgstr ""

#. type: item
#: original_texis/nonascii.texi:143
#, no-wrap
msgid "exact"
msgstr ""

#. type: table
#: original_texis/nonascii.texi:146
msgid ""
"The result must be accurate.  The function may need to encode and decode a "
"large part of the buffer, which is expensive and can be slow."
msgstr ""

#. type: item
#: original_texis/nonascii.texi:146
#, no-wrap
msgid "approximate"
msgstr ""

#. type: table
#: original_texis/nonascii.texi:149
msgid ""
"The value can be an approximation.  The function may avoid expensive "
"processing and return an inexact result."
msgstr ""

#. type: item
#: original_texis/nonascii.texi:149
#, no-wrap
msgid "nil"
msgstr ""

#. type: table
#: original_texis/nonascii.texi:153
msgid ""
"If the exact result needs expensive processing, the function will return "
"@code{nil} rather than an approximation.  This is the default if the "
"argument is omitted."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:156
#, no-wrap
msgid "filepos-to-bufferpos byte &optional quality coding-system"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:163
msgid ""
"This function returns the buffer position corresponding to a file position "
"specified by @var{byte}, a zero-base byte offset from the file's beginning.  "
"The function performs the conversion opposite to what "
"@code{bufferpos-to-filepos} does.  Optional arguments @var{quality} and "
"@var{coding-system} have the same meaning and values as for "
"@code{bufferpos-to-filepos}."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:165
#, no-wrap
msgid "multibyte-string-p string"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:169
msgid ""
"Return @code{t} if @var{string} is a multibyte string, @code{nil} "
"otherwise.  This function also returns @code{nil} if @var{string} is some "
"object other than a string."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:171
#, no-wrap
msgid "string-bytes string"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:172
#, no-wrap
msgid "string, number of bytes"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:176
msgid ""
"This function returns the number of bytes in @var{string}.  If @var{string} "
"is a multibyte string, this can be greater than @code{(length "
"@var{string})}."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:178
#, no-wrap
msgid "unibyte-string &rest bytes"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:181
msgid ""
"This function concatenates all its argument @var{bytes} and makes the result "
"a unibyte string."
msgstr ""

#. type: section
#: original_texis/nonascii.texi:184
#, no-wrap
msgid "Disabling Multibyte Characters"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:185
#, no-wrap
msgid "disabling multibyte"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:192
msgid ""
"By default, Emacs starts in multibyte mode: it stores the contents of "
"buffers and strings using an internal encoding that represents "
"non-@acronym{ASCII} characters using multi-byte sequences.  Multibyte mode "
"allows you to use all the supported languages and scripts without "
"limitations."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:193
#, no-wrap
msgid "turn multibyte support on or off"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:202
msgid ""
"Under very special circumstances, you may want to disable multibyte "
"character support, for a specific buffer.  When multibyte characters are "
"disabled in a buffer, we call that @dfn{unibyte mode}.  In unibyte mode, "
"each character in the buffer has a character code ranging from 0 through 255 "
"(0377 octal); 0 through 127 (0177 octal) represent @acronym{ASCII} "
"characters, and 128 (0200 octal) through 255 (0377 octal) represent "
"non-@acronym{ASCII} characters."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:214
msgid ""
"To edit a particular file in unibyte representation, visit it using "
"@code{find-file-literally}.  @xref{Visiting Functions}.  You can convert a "
"multibyte buffer to unibyte by saving it to a file, killing the buffer, and "
"visiting the file again with @code{find-file-literally}.  Alternatively, you "
"can use @kbd{C-x @key{RET} c} (@code{universal-coding-system-argument}) and "
"specify @samp{raw-text} as the coding system with which to visit or save a "
"file.  @xref{Text Coding, , Specifying a Coding System for File Text, emacs, "
"GNU Emacs Manual}.  Unlike @code{find-file-literally}, finding a file as "
"@samp{raw-text} doesn't disable format conversion, uncompression, or auto "
"mode selection."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:227
msgid ""
"The buffer-local variable @code{enable-multibyte-characters} is "
"non-@code{nil} in multibyte buffers, and @code{nil} in unibyte ones.  The "
"mode line also indicates whether a buffer is multibyte or not.  With a "
"graphical display, in a multibyte buffer, the portion of the mode line that "
"indicates the character set has a tooltip that (amongst other things) says "
"that the buffer is multibyte.  In a unibyte buffer, the character set "
"indicator is absent.  Thus, in a unibyte buffer (when using a graphical "
"display) there is normally nothing before the indication of the visited "
"file's end-of-line convention (colon, backslash, etc.), unless you are using "
"an input method."
msgstr ""

#. type: findex
#: original_texis/nonascii.texi:228
#, no-wrap
msgid "toggle-enable-multibyte-characters"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:231
msgid ""
"You can turn off multibyte support in a specific buffer by invoking the "
"command @code{toggle-enable-multibyte-characters} in that buffer."
msgstr ""

#. type: section
#: original_texis/nonascii.texi:233
#, no-wrap
msgid "Converting Text Representations"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:241
msgid ""
"Emacs can convert unibyte text to multibyte; it can also convert multibyte "
"text to unibyte, provided that the multibyte text contains only "
"@acronym{ASCII} and 8-bit raw bytes.  In general, these conversions happen "
"when inserting text into a buffer, or when putting text from several strings "
"together in one string.  You can also explicitly convert a string's contents "
"to either representation."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:247
msgid ""
"Emacs chooses the representation for a string based on the text from which "
"it is constructed.  The general rule is to convert unibyte text to multibyte "
"text when combining it with other multibyte text, because the multibyte "
"representation is more general and can hold whatever characters the unibyte "
"text has."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:257
msgid ""
"When inserting text into a buffer, Emacs converts the text to the buffer's "
"representation, as specified by @code{enable-multibyte-characters} in that "
"buffer.  In particular, when you insert multibyte text into a unibyte "
"buffer, Emacs converts the text to unibyte, even though this conversion "
"cannot in general preserve all the characters that might be in the multibyte "
"text.  The other natural alternative, to convert the buffer contents to "
"multibyte, is not acceptable because the buffer's representation is a choice "
"made by the user that cannot be overridden automatically."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:261
msgid ""
"Converting unibyte text to multibyte text leaves @acronym{ASCII} characters "
"unchanged, and converts bytes with codes 128 through 255 to the multibyte "
"representation of raw eight-bit bytes."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:267
msgid ""
"Converting multibyte text to unibyte converts all @acronym{ASCII} and "
"eight-bit characters to their single-byte form, but loses information for "
"non-@acronym{ASCII} characters by discarding all but the low 8 bits of each "
"character's codepoint.  Converting unibyte text to multibyte and back to "
"unibyte reproduces the original unibyte text."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:270
msgid ""
"The next two functions either return the argument @var{string}, or a newly "
"created string with no text properties."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:271
#, no-wrap
msgid "string-to-multibyte string"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:279
msgid ""
"This function returns a multibyte string containing the same sequence of "
"characters as @var{string}.  If @var{string} is a multibyte string, it is "
"returned unchanged.  The function assumes that @var{string} includes only "
"@acronym{ASCII} characters and raw 8-bit bytes; the latter are converted to "
"their multibyte representation corresponding to the codepoints "
"@code{#x3FFF80} through @code{#x3FFFFF}, inclusive (@pxref{Text "
"Representations, codepoints})."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:281
#, no-wrap
msgid "string-to-unibyte string"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:289
msgid ""
"This function returns a unibyte string containing the same sequence of "
"characters as @var{string}.  If @var{string} is a unibyte string, it is "
"returned unchanged.  Otherwise, @acronym{ASCII} characters and characters in "
"the @code{eight-bit} charset are converted to their corresponding byte "
"values.  Use this function for @var{string} arguments that contain only "
"@acronym{ASCII} and eight-bit characters; the function signals an error if "
"any other characters are encountered."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:291
#, no-wrap
msgid "byte-to-string byte"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:292
#, no-wrap
msgid "byte to string"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:296
msgid ""
"This function returns a unibyte string containing a single byte of character "
"data, @var{byte}.  It signals an error if @var{byte} is not an integer "
"between 0 and 255."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:298
#, no-wrap
msgid "multibyte-char-to-unibyte char"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:302
msgid ""
"This converts the multibyte character @var{char} to a unibyte character, and "
"returns that character.  If @var{char} is neither @acronym{ASCII} nor "
"eight-bit, the function returns @minus{}1."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:304
#, no-wrap
msgid "unibyte-char-to-multibyte char"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:308
msgid ""
"This converts the unibyte character @var{char} to a multibyte character, "
"assuming @var{char} is either @acronym{ASCII} or raw 8-bit byte."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:315
msgid ""
"Sometimes it is useful to examine an existing buffer or string as multibyte "
"when it was unibyte, or vice versa."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:316
#, no-wrap
msgid "set-buffer-multibyte multibyte"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:320
msgid ""
"Set the representation type of the current buffer.  If @var{multibyte} is "
"non-@code{nil}, the buffer becomes multibyte.  If @var{multibyte} is "
"@code{nil}, the buffer becomes unibyte."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:329
msgid ""
"This function leaves the buffer contents unchanged when viewed as a sequence "
"of bytes.  As a consequence, it can change the contents viewed as "
"characters; for instance, a sequence of three bytes which is treated as one "
"character in multibyte representation will count as three characters in "
"unibyte representation.  Eight-bit characters representing raw bytes are an "
"exception.  They are represented by one byte in a unibyte buffer, but when "
"the buffer is set to multibyte, they are converted to two-byte sequences, "
"and vice versa."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:334
msgid ""
"This function sets @code{enable-multibyte-characters} to record which "
"representation is in use.  It also adjusts various data in the buffer "
"(including overlays, text properties and markers) so that they cover the "
"same text as they did before."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:338
msgid ""
"This function signals an error if the buffer is narrowed, since the "
"narrowing might have occurred in the middle of multibyte character "
"sequences."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:342
msgid ""
"This function also signals an error if the buffer is an indirect buffer.  An "
"indirect buffer always inherits the representation of its base buffer."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:344
#, no-wrap
msgid "string-as-unibyte string"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:352
msgid ""
"If @var{string} is already a unibyte string, this function returns "
"@var{string} itself.  Otherwise, it returns a new string with the same bytes "
"as @var{string}, but treating each byte as a separate character (so that the "
"value may have more characters than @var{string}); as an exception, each "
"eight-bit character representing a raw byte is converted into a single "
"byte.  The newly-created string contains no text properties."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:354
#, no-wrap
msgid "string-as-multibyte string"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:363
msgid ""
"If @var{string} is a multibyte string, this function returns @var{string} "
"itself.  Otherwise, it returns a new string with the same bytes as "
"@var{string}, but treating each multibyte sequence as one character.  This "
"means that the value may have fewer characters than @var{string} has.  If a "
"byte sequence in @var{string} is invalid as a multibyte representation of a "
"single character, each byte in the sequence is treated as a raw 8-bit byte.  "
"The newly-created string contains no text properties."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:367
#, no-wrap
msgid "character codes"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:377
msgid ""
"The unibyte and multibyte text representations use different character "
"codes.  The valid character codes for unibyte representation range from 0 to "
"@code{#xFF} (255)---the values that can fit in one byte.  The valid "
"character codes for multibyte representation range from 0 to "
"@code{#x3FFFFF}.  In this code space, values 0 through @code{#x7F} (127) are "
"for @acronym{ASCII} characters, and values @code{#x80} (128) through "
"@code{#x3FFF7F} (4194175) are for non-@acronym{ASCII} characters."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:384
msgid ""
"Emacs character codes are a superset of the Unicode standard.  Values 0 "
"through @code{#x10FFFF} (1114111) correspond to Unicode characters of the "
"same codepoint; values @code{#x110000} (1114112)  through @code{#x3FFF7F} "
"(4194175) represent characters that are not unified with Unicode; and values "
"@code{#x3FFF80} (4194176) through @code{#x3FFFFF} (4194303) represent "
"eight-bit raw bytes."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:385
#, no-wrap
msgid "characterp charcode"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:388
msgid ""
"This returns @code{t} if @var{charcode} is a valid character, and @code{nil} "
"otherwise."
msgstr ""

#. type: group
#: original_texis/nonascii.texi:393
#, no-wrap
msgid ""
"(characterp 65)\n"
"     @result{} t\n"
msgstr ""

#. type: group
#: original_texis/nonascii.texi:397
#, no-wrap
msgid ""
"(characterp 4194303)\n"
"     @result{} t\n"
msgstr ""

#. type: group
#: original_texis/nonascii.texi:401
#, no-wrap
msgid ""
"(characterp 4194304)\n"
"     @result{} nil\n"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:405
#, no-wrap
msgid "maximum value of character codepoint"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:406
#, no-wrap
msgid "codepoint, largest value"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:407
#, no-wrap
msgid "max-char &optional unicode"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:413
msgid ""
"This function returns the largest value that a valid character codepoint can "
"have in Emacs.  If the optional argument @var{unicode} is non-@code{nil}, it "
"returns the largest character codepoint defined by the Unicode Standard "
"(which is smaller than the maximum codepoint supported by Emacs)."
msgstr ""

#. type: group
#: original_texis/nonascii.texi:418
#, no-wrap
msgid ""
"(characterp (max-char))\n"
"     @result{} t\n"
msgstr ""

#. type: group
#: original_texis/nonascii.texi:422
#, no-wrap
msgid ""
"(characterp (1+ (max-char)))\n"
"     @result{} nil\n"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:426
#, no-wrap
msgid "char-from-name string &optional ignore-case"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:430
msgid ""
"This function returns the character whose Unicode name is @var{string}.  If "
"@var{ignore-case} is non-@code{nil}, case is ignored in @var{string}.  This "
"function returns @code{nil} if @var{string} does not name a character."
msgstr ""

#. type: example
#: original_texis/nonascii.texi:435
#, no-wrap
msgid ""
";; U+03A3\n"
"(= (char-from-name \"GREEK CAPITAL LETTER SIGMA\") #x03A3)\n"
"     @result{} t\n"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:438
#, no-wrap
msgid "get-byte &optional pos string"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:446
msgid ""
"This function returns the byte at character position @var{pos} in the "
"current buffer.  If the current buffer is unibyte, this is literally the "
"byte at that position.  If the buffer is multibyte, byte values of "
"@acronym{ASCII} characters are the same as character codepoints, whereas "
"eight-bit raw bytes are converted to their 8-bit codes.  The function "
"signals an error if the character at @var{pos} is non-@acronym{ASCII}."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:449
msgid ""
"The optional argument @var{string} means to get a byte value from that "
"string instead of the current buffer."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:453
#, no-wrap
msgid "character properties"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:458
msgid ""
"A @dfn{character property} is a named attribute of a character that "
"specifies how the character behaves and how it should be handled during text "
"processing and display.  Thus, character properties are an important part of "
"specifying the character's semantics."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:472
msgid ""
"On the whole, Emacs follows the Unicode Standard in its implementation of "
"character properties.  In particular, Emacs supports the "
"@uref{https://www.unicode.org/reports/tr23/, Unicode Character Property "
"Model}, and the Emacs character property database is derived from the "
"Unicode Character Database (@acronym{UCD}).  See the "
"@uref{https://www.unicode.org/versions/Unicode15.0.0/ch04.pdf, Character "
"Properties chapter of the Unicode Standard}, for a detailed description of "
"Unicode character properties and their meaning.  This section assumes you "
"are already familiar with that chapter of the Unicode Standard, and want to "
"apply that knowledge to Emacs Lisp programs."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:482
msgid ""
"In Emacs, each property has a name, which is a symbol, and a set of possible "
"values, whose types depend on the property; if a character does not have a "
"certain property, the value is @code{nil}.  As a general rule, the names of "
"character properties in Emacs are produced from the corresponding Unicode "
"properties by downcasing them and replacing each @samp{_} character with a "
"dash @samp{-}.  For example, @code{Canonical_Combining_Class} becomes "
"@code{canonical-combining-class}.  However, sometimes we shorten the names "
"to make their use easier."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:483
#, no-wrap
msgid "unassigned character codepoints"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:488
msgid ""
"Some codepoints are left @dfn{unassigned} by the @acronym{UCD}---they don't "
"correspond to any character.  The Unicode Standard defines default values of "
"properties for such codepoints; they are mentioned below for each property."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:491
msgid ""
"Here is the full list of value types for all the character properties that "
"Emacs knows about:"
msgstr ""

#. type: item
#: original_texis/nonascii.texi:493
#, no-wrap
msgid "name"
msgstr ""

#. type: table
#: original_texis/nonascii.texi:498
msgid ""
"Corresponds to the @code{Name} Unicode property.  The value is a string "
"consisting of upper-case Latin letters A to Z, digits, spaces, and hyphen "
"@samp{-} characters.  For unassigned codepoints, the value is @code{nil}."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:499
#, no-wrap
msgid "unicode general category"
msgstr ""

#. type: item
#: original_texis/nonascii.texi:500
#, no-wrap
msgid "general-category"
msgstr ""

#. type: table
#: original_texis/nonascii.texi:505
msgid ""
"Corresponds to the @code{General_Category} Unicode property.  The value is a "
"symbol whose name is a 2-letter abbreviation of the character's "
"classification.  For unassigned codepoints, the value is @code{Cn}."
msgstr ""

#. type: item
#: original_texis/nonascii.texi:506
#, no-wrap
msgid "canonical-combining-class"
msgstr ""

#. type: table
#: original_texis/nonascii.texi:510
msgid ""
"Corresponds to the @code{Canonical_Combining_Class} Unicode property.  The "
"value is an integer.  For unassigned codepoints, the value is zero."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:511
#, no-wrap
msgid "bidirectional class of characters"
msgstr ""

#. type: item
#: original_texis/nonascii.texi:512
#, no-wrap
msgid "bidi-class"
msgstr ""

#. type: table
#: original_texis/nonascii.texi:521
msgid ""
"Corresponds to the Unicode @code{Bidi_Class} property.  The value is a "
"symbol whose name is the Unicode @dfn{directional type} of the character.  "
"Emacs uses this property when it reorders bidirectional text for display "
"(@pxref{Bidirectional Display}).  For unassigned codepoints, the value "
"depends on the code blocks to which the codepoint belongs: most unassigned "
"codepoints get the value of @code{L} (strong L), but some get values of "
"@code{AL} (Arabic letter)  or @code{R} (strong R)."
msgstr ""

#. type: item
#: original_texis/nonascii.texi:522
#, no-wrap
msgid "decomposition"
msgstr ""

#. type: table
#: original_texis/nonascii.texi:534
msgid ""
"Corresponds to the Unicode properties @code{Decomposition_Type} and "
"@code{Decomposition_Value}.  The value is a list, whose first element may be "
"a symbol representing a compatibility formatting tag, such as "
"@code{small}@footnote{The Unicode specification writes these tag names "
"inside @samp{<..>} brackets, but the tag names in Emacs do not include the "
"brackets; e.g., Unicode specifies @samp{<small>} where Emacs uses "
"@samp{small}.  }; the other elements are characters that give the "
"compatibility decomposition sequence of this character.  For characters that "
"don't have decomposition sequences, and for unassigned codepoints, the value "
"is a list with a single member, the character itself."
msgstr ""

#. type: item
#: original_texis/nonascii.texi:535
#, no-wrap
msgid "decimal-digit-value"
msgstr ""

#. type: table
#: original_texis/nonascii.texi:541
msgid ""
"Corresponds to the Unicode @code{Numeric_Value} property for characters "
"whose @code{Numeric_Type} is @samp{Decimal}.  The value is an integer, or "
"@code{nil} if the character has no decimal digit value.  For unassigned "
"codepoints, the value is @code{nil}, which means @acronym{NaN}, or ``not a "
"number''."
msgstr ""

#. type: item
#: original_texis/nonascii.texi:542
#, no-wrap
msgid "digit-value"
msgstr ""

#. type: table
#: original_texis/nonascii.texi:550
msgid ""
"Corresponds to the Unicode @code{Numeric_Value} property for characters "
"whose @code{Numeric_Type} is @samp{Digit}.  The value is an integer.  "
"Examples of such characters include compatibility subscript and superscript "
"digits, for which the value is the corresponding number.  For characters "
"that don't have any numeric value, and for unassigned codepoints, the value "
"is @code{nil}, which means @acronym{NaN}."
msgstr ""

#. type: item
#: original_texis/nonascii.texi:551
#, no-wrap
msgid "numeric-value"
msgstr ""

#. type: table
#: original_texis/nonascii.texi:561
msgid ""
"Corresponds to the Unicode @code{Numeric_Value} property for characters "
"whose @code{Numeric_Type} is @samp{Numeric}.  The value of this property is "
"a number.  Examples of characters that have this property include fractions, "
"subscripts, superscripts, Roman numerals, currency numerators, and encircled "
"numbers.  For example, the value of this property for the character U+2155 "
"@sc{vulgar fraction one fifth} is @code{0.2}.  For characters that don't "
"have any numeric value, and for unassigned codepoints, the value is "
"@code{nil}, which means @acronym{NaN}."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:562
#, no-wrap
msgid "mirroring of characters"
msgstr ""

#. type: item
#: original_texis/nonascii.texi:563
#, no-wrap
msgid "mirrored"
msgstr ""

#. type: table
#: original_texis/nonascii.texi:567
msgid ""
"Corresponds to the Unicode @code{Bidi_Mirrored} property.  The value of this "
"property is a symbol, either @code{Y} or @code{N}.  For unassigned "
"codepoints, the value is @code{N}."
msgstr ""

#. type: item
#: original_texis/nonascii.texi:568
#, no-wrap
msgid "mirroring"
msgstr ""

#. type: table
#: original_texis/nonascii.texi:580
msgid ""
"Corresponds to the Unicode @code{Bidi_Mirroring_Glyph} property.  The value "
"of this property is a character whose glyph represents the mirror image of "
"the character's glyph, or @code{nil} if there's no defined mirroring glyph.  "
"All the characters whose @code{mirrored} property is @code{N} have "
"@code{nil} as their @code{mirroring} property; however, some characters "
"whose @code{mirrored} property is @code{Y} also have @code{nil} for "
"@code{mirroring}, because no appropriate characters exist with mirrored "
"glyphs.  Emacs uses this property to display mirror images of characters "
"when appropriate (@pxref{Bidirectional Display}).  For unassigned "
"codepoints, the value is @code{nil}."
msgstr ""

#. type: item
#: original_texis/nonascii.texi:581
#, no-wrap
msgid "paired-bracket"
msgstr ""

#. type: table
#: original_texis/nonascii.texi:589
msgid ""
"Corresponds to the Unicode @code{Bidi_Paired_Bracket} property.  The value "
"of this property is the codepoint of a character's @dfn{paired bracket}, or "
"@code{nil} if the character is not a bracket character.  This establishes a "
"mapping between characters that are treated as bracket pairs by the Unicode "
"Bidirectional Algorithm; Emacs uses this property when it decides how to "
"reorder for display parentheses, braces, and other similar characters "
"(@pxref{Bidirectional Display})."
msgstr ""

#. type: item
#: original_texis/nonascii.texi:590
#, no-wrap
msgid "bracket-type"
msgstr ""

#. type: table
#: original_texis/nonascii.texi:598
msgid ""
"Corresponds to the Unicode @code{Bidi_Paired_Bracket_Type} property.  For "
"characters whose @code{paired-bracket} property is non-@code{nil}, the value "
"of this property is a symbol, either @code{o} (for opening bracket "
"characters) or @code{c} (for closing bracket characters).  For characters "
"whose @code{paired-bracket} property is @code{nil}, the value is the symbol "
"@code{n} (None).  Like @code{paired-bracket}, this property is used for "
"bidirectional display."
msgstr ""

#. type: item
#: original_texis/nonascii.texi:599
#, no-wrap
msgid "old-name"
msgstr ""

#. type: table
#: original_texis/nonascii.texi:603
msgid ""
"Corresponds to the Unicode @code{Unicode_1_Name} property.  The value is a "
"string.  For unassigned codepoints, and characters that have no value for "
"this property, the value is @code{nil}."
msgstr ""

#. type: item
#: original_texis/nonascii.texi:604
#, no-wrap
msgid "iso-10646-comment"
msgstr ""

#. type: table
#: original_texis/nonascii.texi:608
msgid ""
"Corresponds to the Unicode @code{ISO_Comment} property.  The value is either "
"a string or @code{nil}.  For unassigned codepoints, the value is @code{nil}."
msgstr ""

#. type: item
#: original_texis/nonascii.texi:609
#, no-wrap
msgid "uppercase"
msgstr ""

#. type: table
#: original_texis/nonascii.texi:613
msgid ""
"Corresponds to the Unicode @code{Simple_Uppercase_Mapping} property.  The "
"value of this property is a single character.  For unassigned codepoints, "
"the value is @code{nil}, which means the character itself."
msgstr ""

#. type: item
#: original_texis/nonascii.texi:614
#, no-wrap
msgid "lowercase"
msgstr ""

#. type: table
#: original_texis/nonascii.texi:618
msgid ""
"Corresponds to the Unicode @code{Simple_Lowercase_Mapping} property.  The "
"value of this property is a single character.  For unassigned codepoints, "
"the value is @code{nil}, which means the character itself."
msgstr ""

#. type: item
#: original_texis/nonascii.texi:619
#, no-wrap
msgid "titlecase"
msgstr ""

#. type: table
#: original_texis/nonascii.texi:625
msgid ""
"Corresponds to the Unicode @code{Simple_Titlecase_Mapping} property.  "
"@dfn{Title case} is a special form of a character used when the first "
"character of a word needs to be capitalized.  The value of this property is "
"a single character.  For unassigned codepoints, the value is @code{nil}, "
"which means the character itself."
msgstr ""

#. type: item
#: original_texis/nonascii.texi:626
#, no-wrap
msgid "special-uppercase"
msgstr ""

#. type: table
#: original_texis/nonascii.texi:632
msgid ""
"Corresponds to Unicode language- and context-independent special "
"upper-casing rules.  The value of this property is a string (which may be "
"empty).  For example mapping for U+00DF @sc{latin small letter sharp s} is "
"@code{\"SS\"}.  For characters with no special mapping, the value is "
"@code{nil} which means @code{uppercase} property needs to be consulted "
"instead."
msgstr ""

#. type: item
#: original_texis/nonascii.texi:633
#, no-wrap
msgid "special-lowercase"
msgstr ""

#. type: table
#: original_texis/nonascii.texi:642
msgid ""
"Corresponds to Unicode language- and context-independent special "
"lower-casing rules.  The value of this property is a string (which may be "
"empty).  For example mapping for U+0130 @sc{latin capital letter i with dot "
"above} the value is @code{\"i\\u0307\"} (i.e. 2-character string consisting "
"of @sc{latin small letter i} followed by U+0307 @sc{combining dot above}).  "
"For characters with no special mapping, the value is @code{nil} which means "
"@code{lowercase} property needs to be consulted instead."
msgstr ""

#. type: item
#: original_texis/nonascii.texi:643
#, no-wrap
msgid "special-titlecase"
msgstr ""

#. type: table
#: original_texis/nonascii.texi:649
msgid ""
"Corresponds to Unicode unconditional special title-casing rules.  The value "
"of this property is a string (which may be empty).  For example mapping for "
"U+FB01 @sc{latin small ligature fi} the value is @code{\"Fi\"}.  For "
"characters with no special mapping, the value is @code{nil} which means "
"@code{titlecase} property needs to be consulted instead."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:651
#, no-wrap
msgid "get-char-code-property char propname"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:653
msgid "This function returns the value of @var{char}'s @var{propname} property."
msgstr ""

#. type: group
#: original_texis/nonascii.texi:658
#, no-wrap
msgid ""
"(get-char-code-property ?\\s 'general-category)\n"
"     @result{} Zs\n"
msgstr ""

#. type: group
#: original_texis/nonascii.texi:662
#, no-wrap
msgid ""
"(get-char-code-property ?1 'general-category)\n"
"     @result{} Nd\n"
msgstr ""

#. type: group
#: original_texis/nonascii.texi:668
#, no-wrap
msgid ""
";; U+2084\n"
"(get-char-code-property ?\\N@{SUBSCRIPT FOUR@}\n"
"                        'digit-value)\n"
"     @result{} 4\n"
msgstr ""

#. type: group
#: original_texis/nonascii.texi:674
#, no-wrap
msgid ""
";; U+2155\n"
"(get-char-code-property ?\\N@{VULGAR FRACTION ONE FIFTH@}\n"
"                        'numeric-value)\n"
"     @result{} 0.2\n"
msgstr ""

#. type: group
#: original_texis/nonascii.texi:680
#, no-wrap
msgid ""
";; U+2163\n"
"(get-char-code-property ?\\N@{ROMAN NUMERAL FOUR@}\n"
"                        'numeric-value)\n"
"     @result{} 4\n"
msgstr ""

#. type: group
#: original_texis/nonascii.texi:684
#, no-wrap
msgid ""
"(get-char-code-property ?\\( 'paired-bracket)\n"
"     @result{} 41  ; closing parenthesis\n"
msgstr ""

#. type: group
#: original_texis/nonascii.texi:688
#, no-wrap
msgid ""
"(get-char-code-property ?\\) 'bracket-type)\n"
"     @result{} c\n"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:692
#, no-wrap
msgid "char-code-property-description prop value"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:695
msgid ""
"This function returns the description string of property @var{prop}'s "
"@var{value}, or @code{nil} if @var{value} has no description."
msgstr ""

#. type: group
#: original_texis/nonascii.texi:700
#, no-wrap
msgid ""
"(char-code-property-description 'general-category 'Zs)\n"
"     @result{} \"Separator, Space\"\n"
msgstr ""

#. type: group
#: original_texis/nonascii.texi:704
#, no-wrap
msgid ""
"(char-code-property-description 'general-category 'Nd)\n"
"     @result{} \"Number, Decimal Digit\"\n"
msgstr ""

#. type: group
#: original_texis/nonascii.texi:708
#, no-wrap
msgid ""
"(char-code-property-description 'numeric-value '1/5)\n"
"     @result{} nil\n"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:712
#, no-wrap
msgid "put-char-code-property char propname value"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:715
msgid ""
"This function stores @var{value} as the value of the property @var{propname} "
"for the character @var{char}."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:717
#, no-wrap
msgid "unicode-category-table"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:721
msgid ""
"The value of this variable is a char-table (@pxref{Char-Tables}) that "
"specifies, for each character, its Unicode @code{General_Category} property "
"as a symbol."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:723
#, no-wrap
msgid "char-script-table"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:724
#, no-wrap
msgid "script symbols"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:733
msgid ""
"The value of this variable is a char-table that specifies, for each "
"character, a symbol whose name is the script to which the character belongs, "
"according to the Unicode Standard classification of the Unicode code space "
"into script-specific blocks.  This char-table has a single extra slot whose "
"value is the list of all script symbols.  Note that Emacs' classification of "
"characters into scripts is not a 1-for-1 reflection of the Unicode standard, "
"e.g. there is no @samp{symbol} script in Unicode."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:735
#, no-wrap
msgid "char-width-table"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:738
msgid ""
"The value of this variable is a char-table that specifies the width of each "
"character in columns that it will occupy on the screen."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:740
#, no-wrap
msgid "printable-chars"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:745
msgid ""
"The value of this variable is a char-table that specifies, for each "
"character, whether it is printable or not.  That is, if evaluating "
"@code{(aref printable-chars char)} results in @code{t}, the character is "
"printable, and if it results in @code{nil}, it is not."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:749
#, no-wrap
msgid "character sets"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:751
#, no-wrap
msgid "charset"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:752
#, no-wrap
msgid "coded character set"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:763
msgid ""
"An Emacs @dfn{character set}, or @dfn{charset}, is a set of characters in "
"which each character is assigned a numeric code point.  (The Unicode "
"Standard calls this a @dfn{coded character set}.)  Each Emacs charset has a "
"name which is a symbol.  A single character can belong to any number of "
"different character sets, but it will generally have a different code point "
"in each charset.  Examples of character sets include @code{ascii}, "
"@code{iso-8859-1}, @code{greek-iso8859-7}, and @code{windows-1255}.  The "
"code point assigned to a character in a charset is usually different from "
"its code point used in Emacs buffers and strings."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:764
#, no-wrap
msgid "@code{emacs}, a charset"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:765
#, no-wrap
msgid "@code{unicode}, a charset"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:766
#, no-wrap
msgid "@code{eight-bit}, a charset"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:773
msgid ""
"Emacs defines several special character sets.  The character set "
"@code{unicode} includes all the characters whose Emacs code points are in "
"the range @code{0..#x10FFFF}.  The character set @code{emacs} includes all "
"@acronym{ASCII} and non-@acronym{ASCII} characters.  Finally, the "
"@code{eight-bit} charset includes the 8-bit raw bytes; Emacs uses it to "
"represent raw bytes encountered in text."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:774
#, no-wrap
msgid "charsetp object"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:777
msgid ""
"Returns @code{t} if @var{object} is a symbol that names a character set, "
"@code{nil} otherwise."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:779
#, no-wrap
msgid "charset-list"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:781
msgid "The value is a list of all defined character set names."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:783
#, no-wrap
msgid "charset-priority-list &optional highestp"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:787
msgid ""
"This function returns a list of all defined character sets ordered by their "
"priority.  If @var{highestp} is non-@code{nil}, the function returns a "
"single character set of the highest priority."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:789
#, no-wrap
msgid "set-charset-priority &rest charsets"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:791
msgid "This function makes @var{charsets} the highest priority character sets."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:793
#, no-wrap
msgid "char-charset character &optional restriction"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:797
msgid ""
"This function returns the name of the character set of highest priority that "
"@var{character} belongs to.  @acronym{ASCII} characters are an exception: "
"for them, this function always returns @code{ascii}."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:802
msgid ""
"If @var{restriction} is non-@code{nil}, it should be a list of charsets to "
"search.  Alternatively, it can be a coding system, in which case the "
"returned charset must be supported by that coding system (@pxref{Coding "
"Systems})."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:805
#, no-wrap
msgid "charset-plist charset"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:811
msgid ""
"This function returns the property list of the character set @var{charset}.  "
"Although @var{charset} is a symbol, this is not the same as the property "
"list of that symbol.  Charset properties include important information about "
"the charset, such as its documentation string, short name, etc."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:813
#, no-wrap
msgid "put-charset-property charset propname value"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:816
msgid ""
"This function sets the @var{propname} property of @var{charset} to the given "
"@var{value}."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:818
#, no-wrap
msgid "get-charset-property charset propname"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:821
msgid "This function returns the value of @var{charset}s property @var{propname}."
msgstr ""

#. type: deffn
#: original_texis/nonascii.texi:823
#, no-wrap
msgid "Command list-charset-chars charset"
msgstr ""

#. type: deffn
#: original_texis/nonascii.texi:826
msgid ""
"This command displays a list of characters in the character set "
"@var{charset}."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:831
msgid ""
"Emacs can convert between its internal representation of a character and the "
"character's codepoint in a specific charset.  The following two functions "
"support these conversions."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:835
#, no-wrap
msgid "decode-char charset code-point"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:840
msgid ""
"This function decodes a character that is assigned a @var{code-point} in "
"@var{charset}, to the corresponding Emacs character, and returns it.  If "
"@var{charset} doesn't contain a character of that code point, the value is "
"@code{nil}."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:846
msgid ""
"For backward compatibility, if @var{code-point} doesn't fit in a Lisp fixnum "
"(@pxref{Integer Basics, most-positive-fixnum}), it can be specified as a "
"cons cell @code{(@var{high} . @var{low})}, where @var{low} are the lower 16 "
"bits of the value and @var{high} are the high 16 bits.  This usage is "
"obsolescent."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:848
#, no-wrap
msgid "encode-char char charset"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:853
msgid ""
"This function returns the code point assigned to the character @var{char} in "
"@var{charset}.  If @var{charset} doesn't have a codepoint for @var{char}, "
"the value is @code{nil}."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:857
msgid ""
"The following function comes in handy for applying a certain function to all "
"or part of the characters in a charset:"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:858
#, no-wrap
msgid "map-charset-chars function charset &optional arg from-code to-code"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:865
msgid ""
"Call @var{function} for characters in @var{charset}.  @var{function} is "
"called with two arguments.  The first one is a cons cell @code{(@var{from} "
".  @var{to})}, where @var{from} and @var{to} indicate a range of characters "
"contained in @var{charset}.  The second argument passed to @var{function} is "
"@var{arg}, or @code{nil} if @var{arg} is omitted."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:880
msgid ""
"By default, the range of codepoints passed to @var{function} includes all "
"the characters in @var{charset}, but optional arguments @var{from-code} and "
"@var{to-code} limit that to the range of characters between these two "
"codepoints of @var{charset}.  If either of them is @code{nil}, it defaults "
"to the first or last codepoint of @var{charset}, respectively.  Note that "
"@var{from-code} and @var{to-code} are @var{charset}'s codepoints, not the "
"Emacs codes of characters; by contrast, the values @var{from} and @var{to} "
"in the cons cell passed to @var{function} @emph{are} Emacs character codes.  "
"Those Emacs character codes are either Unicode code points, or Emacs "
"internal code points that extend Unicode and are beyond the Unicode range of "
"characters @code{0..#x10FFFF} (@pxref{Text Representations}).  The latter "
"happens rarely, with legacy CJK charsets for codepoints of @var{charset} "
"which specify characters not yet unified with Unicode."
msgstr ""

#. type: section
#: original_texis/nonascii.texi:883
#, no-wrap
msgid "Scanning for Character Sets"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:884
#, no-wrap
msgid "scanning for character sets"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:885
#, no-wrap
msgid "character set, searching"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:892
msgid ""
"Sometimes it is useful to find out which character set a particular "
"character belongs to.  One use for this is in determining which coding "
"systems (@pxref{Coding Systems}) are capable of representing all of the text "
"in question; another is to determine the font(s) for displaying that text."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:893
#, no-wrap
msgid "charset-after &optional pos"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:898
msgid ""
"This function returns the charset of highest priority containing the "
"character at position @var{pos} in the current buffer.  If @var{pos} is "
"omitted or @code{nil}, it defaults to the current value of point.  If "
"@var{pos} is out of range, the value is @code{nil}."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:900
#, no-wrap
msgid "find-charset-region beg end &optional translation"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:904
msgid ""
"This function returns a list of the character sets of highest priority that "
"contain characters in the current buffer between positions @var{beg} and "
"@var{end}."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:910
msgid ""
"The optional argument @var{translation} specifies a translation table to use "
"for scanning the text (@pxref{Translation of Characters}).  If it is "
"non-@code{nil}, then each character in the region is translated through this "
"table, and the value returned describes the translated characters instead of "
"the characters actually in the buffer."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:912
#, no-wrap
msgid "find-charset-string string &optional translation"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:917
msgid ""
"This function returns a list of character sets of highest priority that "
"contain characters in @var{string}.  It is just like "
"@code{find-charset-region}, except that it applies to the contents of "
"@var{string} instead of part of the current buffer."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:921
#, no-wrap
msgid "character translation tables"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:922
#, no-wrap
msgid "translation tables"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:930
msgid ""
"A @dfn{translation table} is a char-table (@pxref{Char-Tables}) that "
"specifies a mapping of characters into characters.  These tables are used in "
"encoding and decoding, and for other purposes.  Some coding systems specify "
"their own particular translation tables; there are also default translation "
"tables which apply to all other coding systems."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:936
msgid ""
"A translation table has two extra slots.  The first is either @code{nil} or "
"a translation table that performs the reverse translation; the second is the "
"maximum number of characters to look up for translating sequences of "
"characters (see the description of @code{make-translation-table-from-alist} "
"below)."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:937
#, no-wrap
msgid "make-translation-table &rest translations"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:942
msgid ""
"This function returns a translation table based on the argument "
"@var{translations}.  Each element of @var{translations} should be a list of "
"elements of the form @code{(@var{from} . @var{to})}; this says to translate "
"the character @var{from} into @var{to}."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:947
msgid ""
"The arguments and the forms in each argument are processed in order, and if "
"a previous form already translates @var{to} to some other character, say "
"@var{to-alt}, @var{from} is also translated to @var{to-alt}."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:959
msgid ""
"During decoding, the translation table's translations are applied to the "
"characters that result from ordinary decoding.  If a coding system has the "
"property @code{:decode-translation-table}, that specifies the translation "
"table to use, or a list of translation tables to apply in sequence.  (This "
"is a property of the coding system, as returned by @code{coding-system-get}, "
"not a property of the symbol that is the coding system's name.  @xref{Coding "
"System Basics,, Basic Concepts of Coding Systems}.)  Finally, if "
"@code{standard-translation-table-for-decode} is non-@code{nil}, the "
"resulting characters are translated by that table."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:968
msgid ""
"During encoding, the translation table's translations are applied to the "
"characters in the buffer, and the result of translation is actually "
"encoded.  If a coding system has property @code{:encode-translation-table}, "
"that specifies the translation table to use, or a list of translation tables "
"to apply in sequence.  In addition, if the variable "
"@code{standard-translation-table-for-encode} is non-@code{nil}, it specifies "
"the translation table to use for translating the result."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:969
#, no-wrap
msgid "standard-translation-table-for-decode"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:973
msgid ""
"This is the default translation table for decoding.  If a coding system "
"specifies its own translation tables, the table that is the value of this "
"variable, if non-@code{nil}, is applied after them."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:975
#, no-wrap
msgid "standard-translation-table-for-encode"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:979
msgid ""
"This is the default translation table for encoding.  If a coding system "
"specifies its own translation tables, the table that is the value of this "
"variable, if non-@code{nil}, is applied after them."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:983
#, no-wrap
msgid "translation-table-for-input"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:988
msgid ""
"Self-inserting characters are translated through this translation table "
"before they are inserted.  Search commands also translate their input "
"through this table, so they can compare more reliably with what's in the "
"buffer."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:990
msgid "This variable automatically becomes buffer-local when set."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:992
#, no-wrap
msgid "make-translation-table-from-vector vec"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:998
msgid ""
"This function returns a translation table made from @var{vec} that is an "
"array of 256 elements to map bytes (values 0 through #xFF) to characters.  "
"Elements may be @code{nil} for untranslated bytes.  The returned table has a "
"translation table for reverse mapping in the first extra slot, and the value "
"@code{1} in the second extra slot."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1005
msgid ""
"This function provides an easy way to make a private coding system that maps "
"each byte to a specific character.  You can specify the returned table and "
"the reverse translation table using the properties "
"@code{:decode-translation-table} and @code{:encode-translation-table} "
"respectively in the @var{props} argument to @code{define-coding-system}."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1007
#, no-wrap
msgid "make-translation-table-from-alist alist"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1019
msgid ""
"This function is similar to @code{make-translation-table} but returns a "
"complex translation table rather than a simple one-to-one mapping.  Each "
"element of @var{alist} is of the form @code{(@var{from} . @var{to})}, where "
"@var{from} and @var{to} are either characters or vectors specifying a "
"sequence of characters.  If @var{from} is a character, that character is "
"translated to @var{to} (i.e., to a character or a character sequence).  If "
"@var{from} is a vector of characters, that sequence is translated to "
"@var{to}.  The returned table has a translation table for reverse mapping in "
"the first extra slot, and the maximum length of all the @var{from} character "
"sequences in the second extra slot."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1024
#, no-wrap
msgid "coding system"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:1029
msgid ""
"When Emacs reads or writes a file, and when Emacs sends text to a subprocess "
"or receives text from a subprocess, it normally performs character code "
"conversion and end-of-line conversion as specified by a particular "
"@dfn{coding system}."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:1032
msgid ""
"How to define a coding system is an arcane matter, and is not documented "
"here."
msgstr ""

#. type: node
#: original_texis/nonascii.texi:1043 original_texis/nonascii.texi:1045
#, no-wrap
msgid "Coding System Basics"
msgstr ""

#. type: menuentry
#: original_texis/nonascii.texi:1043
msgid "Basic concepts."
msgstr ""

#. type: subsection
#: original_texis/nonascii.texi:1043 original_texis/nonascii.texi:1160
#: original_texis/nonascii.texi:1161
#, no-wrap
msgid "Encoding and I/O"
msgstr ""

#. type: menuentry
#: original_texis/nonascii.texi:1043
msgid "How file I/O functions handle coding systems."
msgstr ""

#. type: node
#: original_texis/nonascii.texi:1043 original_texis/nonascii.texi:1251
#, no-wrap
msgid "Lisp and Coding Systems"
msgstr ""

#. type: menuentry
#: original_texis/nonascii.texi:1043
msgid "Functions to operate on coding system names."
msgstr ""

#. type: subsection
#: original_texis/nonascii.texi:1043 original_texis/nonascii.texi:1441
#: original_texis/nonascii.texi:1442
#, no-wrap
msgid "User-Chosen Coding Systems"
msgstr ""

#. type: menuentry
#: original_texis/nonascii.texi:1043
msgid "Asking the user to choose a coding system."
msgstr ""

#. type: subsection
#: original_texis/nonascii.texi:1043 original_texis/nonascii.texi:1538
#: original_texis/nonascii.texi:1539
#, no-wrap
msgid "Default Coding Systems"
msgstr ""

#. type: menuentry
#: original_texis/nonascii.texi:1043
msgid "Controlling the default choices."
msgstr ""

#. type: node
#: original_texis/nonascii.texi:1043 original_texis/nonascii.texi:1745
#, no-wrap
msgid "Specifying Coding Systems"
msgstr ""

#. type: menuentry
#: original_texis/nonascii.texi:1043
msgid "Requesting a particular coding system for a single file operation."
msgstr ""

#. type: node
#: original_texis/nonascii.texi:1043 original_texis/nonascii.texi:1847
#, no-wrap
msgid "Explicit Encoding"
msgstr ""

#. type: menuentry
#: original_texis/nonascii.texi:1043
msgid "Encoding or decoding text without doing I/O."
msgstr ""

#. type: subsection
#: original_texis/nonascii.texi:1043 original_texis/nonascii.texi:2000
#: original_texis/nonascii.texi:2001
#, no-wrap
msgid "Terminal I/O Encoding"
msgstr ""

#. type: menuentry
#: original_texis/nonascii.texi:1043
msgid "Use of encoding for terminal I/O."
msgstr ""

#. type: subsection
#: original_texis/nonascii.texi:1046
#, no-wrap
msgid "Basic Concepts of Coding Systems"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1048
#, no-wrap
msgid "character code conversion"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:1058
msgid ""
"@dfn{Character code conversion} involves conversion between the internal "
"representation of characters used inside Emacs and some other encoding.  "
"Emacs supports many different encodings, in that it can convert to and from "
"them.  For example, it can convert text to or from encodings such as Latin "
"1, Latin 2, Latin 3, Latin 4, Latin 5, and several variants of ISO 2022.  In "
"some cases, Emacs supports several alternative encodings for the same "
"characters; for example, there are three coding systems for the Cyrillic "
"(Russian) alphabet: ISO, Alternativnyj, and KOI8."
msgstr ""

#. type: vindex
#: original_texis/nonascii.texi:1059
#, no-wrap
msgid "undecided@r{ coding system}"
msgstr ""

#. type: vindex
#: original_texis/nonascii.texi:1060
#, no-wrap
msgid "prefer-utf-8@r{ coding system}"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:1067
msgid ""
"Every coding system specifies a particular set of character code "
"conversions, but the coding system @code{undecided} is special: it leaves "
"the choice unspecified, to be chosen heuristically for each file or string, "
"based on the file's or string's data, when they are decoded or encoded.  The "
"coding system @code{prefer-utf-8} is like @code{undecided}, but it prefers "
"to choose @code{utf-8} when possible."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:1074
msgid ""
"In general, a coding system doesn't guarantee roundtrip identity: decoding a "
"byte sequence using a coding system, then encoding the resulting text in the "
"same coding system, can produce a different byte sequence.  But some coding "
"systems do guarantee that the byte sequence will be the same as what you "
"originally decoded.  Here are a few examples:"
msgstr ""

#. type: quotation
#: original_texis/nonascii.texi:1077
msgid "iso-8859-1, utf-8, big5, shift_jis, euc-jp"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:1085
msgid ""
"Encoding buffer text and then decoding the result can also fail to reproduce "
"the original text.  For instance, if you encode a character with a coding "
"system which does not support that character, the result is unpredictable, "
"and thus decoding it using the same coding system may produce a different "
"text.  Currently, Emacs can't report errors that result from encoding "
"unsupported characters."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1086
#, no-wrap
msgid "EOL conversion"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1087
#, no-wrap
msgid "end-of-line conversion"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1088
#, no-wrap
msgid "line end conversion"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:1096
msgid ""
"@dfn{End of line conversion} handles three different conventions used on "
"various systems for representing end of line in files.  The Unix convention, "
"used on GNU and Unix systems, is to use the linefeed character (also called "
"newline).  The DOS convention, used on MS-Windows and MS-DOS systems, is to "
"use a carriage return and a linefeed at the end of a line.  The Mac "
"convention is to use just carriage return.  (This was the convention used in "
"Classic Mac OS.)"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1097
#, no-wrap
msgid "base coding system"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1098
#, no-wrap
msgid "variant coding system"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:1105
msgid ""
"@dfn{Base coding systems} such as @code{latin-1} leave the end-of-line "
"conversion unspecified, to be chosen based on the data.  @dfn{Variant coding "
"systems} such as @code{latin-1-unix}, @code{latin-1-dos} and "
"@code{latin-1-mac} specify the end-of-line conversion explicitly as well.  "
"Most base coding systems have three corresponding variants whose names are "
"formed by adding @samp{-unix}, @samp{-dos} and @samp{-mac}."
msgstr ""

#. type: vindex
#: original_texis/nonascii.texi:1106
#, no-wrap
msgid "raw-text@r{ coding system}"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:1117
msgid ""
"The coding system @code{raw-text} is special in that it prevents character "
"code conversion, and causes the buffer visited with this coding system to be "
"a unibyte buffer.  For historical reasons, you can save both unibyte and "
"multibyte text with this coding system.  When you use @code{raw-text} to "
"encode multibyte text, it does perform one character code conversion: it "
"converts eight-bit characters to their single-byte external representation.  "
"@code{raw-text} does not specify the end-of-line conversion, allowing that "
"to be determined as usual by the data, and has the usual three variants "
"which specify the end-of-line conversion."
msgstr ""

#. type: vindex
#: original_texis/nonascii.texi:1118
#, no-wrap
msgid "no-conversion@r{ coding system}"
msgstr ""

#. type: vindex
#: original_texis/nonascii.texi:1119
#, no-wrap
msgid "binary@r{ coding system}"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:1123
msgid ""
"@code{no-conversion} (and its alias @code{binary}) is equivalent to "
"@code{raw-text-unix}: it specifies no conversion of either character codes "
"or end-of-line."
msgstr ""

#. type: vindex
#: original_texis/nonascii.texi:1124
#, no-wrap
msgid "emacs-internal@r{ coding system}"
msgstr ""

#. type: vindex
#: original_texis/nonascii.texi:1125
#, no-wrap
msgid "utf-8-emacs@r{ coding system}"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:1134
msgid ""
"The coding system @code{utf-8-emacs} specifies that the data is represented "
"in the internal Emacs encoding (@pxref{Text Representations}).  This is like "
"@code{raw-text} in that no code conversion happens, but different in that "
"the result is multibyte data.  The name @code{emacs-internal} is an alias "
"for @code{utf-8-emacs-unix} (so it forces no conversion of end-of-line, "
"unlike @code{utf-8-emacs}, which can decode all 3 kinds of end-of-line "
"conventions)."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1135
#, no-wrap
msgid "coding-system-get coding-system property"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1141
msgid ""
"This function returns the specified property of the coding system "
"@var{coding-system}.  Most coding system properties exist for internal "
"purposes, but one that you might find useful is @code{:mime-charset}.  That "
"property's value is the name used in MIME for the character coding which "
"this coding system can read and write.  Examples:"
msgstr ""

#. type: example
#: original_texis/nonascii.texi:1149
#, no-wrap
msgid ""
"(coding-system-get 'iso-latin-1 :mime-charset)\n"
"     @result{} iso-8859-1\n"
"(coding-system-get 'iso-2022-cn :mime-charset)\n"
"     @result{} iso-2022-cn\n"
"(coding-system-get 'cyrillic-koi8 :mime-charset)\n"
"     @result{} koi8-r\n"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1153
msgid ""
"The value of the @code{:mime-charset} property is also defined as an alias "
"for the coding system."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1155
#, no-wrap
msgid "alias, for coding systems"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1156
#, no-wrap
msgid "coding-system-aliases coding-system"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1158
msgid "This function returns the list of aliases of @var{coding-system}."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:1167
msgid ""
"The principal purpose of coding systems is for use in reading and writing "
"files.  The function @code{insert-file-contents} uses a coding system to "
"decode the file data, and @code{write-region} uses one to encode the buffer "
"contents."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:1176
msgid ""
"You can specify the coding system to use either explicitly "
"(@pxref{Specifying Coding Systems}), or implicitly using a default mechanism "
"(@pxref{Default Coding Systems}).  But these methods may not completely "
"specify what to do.  For example, they may choose a coding system such as "
"@code{undecided} which leaves the character code conversion to be determined "
"from the data.  In these cases, the I/O operation finishes the job of "
"choosing a coding system.  Very often you will want to find out afterwards "
"which coding system was chosen."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1177
#, no-wrap
msgid "buffer-file-coding-system"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1187
msgid ""
"This buffer-local variable records the coding system used for saving the "
"buffer and for writing part of the buffer with @code{write-region}.  If the "
"text to be written cannot be safely encoded using the coding system "
"specified by this variable, these operations select an alternative encoding "
"by calling the function @code{select-safe-coding-system} (@pxref{User-Chosen "
"Coding Systems}).  If selecting a different encoding requires to ask the "
"user to specify a coding system, @code{buffer-file-coding-system} is updated "
"to the newly selected coding system."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1190
msgid ""
"@code{buffer-file-coding-system} does @emph{not} affect sending text to a "
"subprocess."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1192
#, no-wrap
msgid "save-buffer-coding-system"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1196
msgid ""
"This variable specifies the coding system for saving the buffer (by "
"overriding @code{buffer-file-coding-system}).  Note that it is not used for "
"@code{write-region}."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1205
msgid ""
"When a command to save the buffer starts out to use "
"@code{buffer-file-coding-system} (or @code{save-buffer-coding-system}), and "
"that coding system cannot handle the actual text in the buffer, the command "
"asks the user to choose another coding system (by calling "
"@code{select-safe-coding-system}).  After that happens, the command also "
"updates @code{buffer-file-coding-system} to represent the coding system that "
"the user specified."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1207
#, no-wrap
msgid "last-coding-system-used"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1211
msgid ""
"I/O operations for files and subprocesses set this variable to the coding "
"system name that was used.  The explicit encoding and decoding functions "
"(@pxref{Explicit Encoding}) set it too."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1216
msgid ""
"@strong{Warning:} Since receiving subprocess output sets this variable, it "
"can change whenever Emacs waits; therefore, you should copy the value "
"shortly after the function call that stores the value you are interested in."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:1220
msgid ""
"The variable @code{selection-coding-system} specifies how to encode "
"selections for the window system.  @xref{Window System Selections}."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1221
#, no-wrap
msgid "file-name-coding-system"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1230
msgid ""
"The variable @code{file-name-coding-system} specifies the coding system to "
"use for encoding file names.  Emacs encodes file names using that coding "
"system for all file operations.  If @code{file-name-coding-system} is "
"@code{nil}, Emacs uses a default coding system determined by the selected "
"language environment.  In the default language environment, any "
"non-@acronym{ASCII} characters in file names are not encoded specially; they "
"appear in the file system using the internal Emacs representation."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:1240
msgid ""
"@strong{Warning:} if you change @code{file-name-coding-system} (or the "
"language environment) in the middle of an Emacs session, problems can result "
"if you have already visited files whose names were encoded using the earlier "
"coding system and are handled differently under the new coding system.  If "
"you try to save one of these buffers under the visited file name, saving may "
"use the wrong file name, or it may get an error.  If such a problem happens, "
"use @kbd{C-x C-w} to specify a new file name for that buffer."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1241
#, no-wrap
msgid "file-name encoding, MS-Windows"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:1250
msgid ""
"On Windows 2000 and later, Emacs by default uses Unicode APIs to pass file "
"names to the OS, so the value of @code{file-name-coding-system} is largely "
"ignored.  Lisp applications that need to encode or decode file names on the "
"Lisp level should use @code{utf-8} coding-system when @code{system-type} is "
"@code{windows-nt}; the conversion of UTF-8 encoded file names to the "
"encoding appropriate for communicating with the OS is performed internally "
"by Emacs."
msgstr ""

#. type: subsection
#: original_texis/nonascii.texi:1252
#, no-wrap
msgid "Coding Systems in Lisp"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:1255
msgid "Here are the Lisp facilities for working with coding systems:"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1256
#, no-wrap
msgid "list all coding systems"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1257
#, no-wrap
msgid "coding-system-list &optional base-only"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1262
msgid ""
"This function returns a list of all coding system names (symbols).  If "
"@var{base-only} is non-@code{nil}, the value includes only the base coding "
"systems.  Otherwise, it includes alias and variant coding systems as well."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1264
#, no-wrap
msgid "coding-system-p object"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1267
msgid ""
"This function returns @code{t} if @var{object} is a coding system name or "
"@code{nil}."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1269
#, no-wrap
msgid "validity of coding system"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1270
#, no-wrap
msgid "coding system, validity check"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1271
#, no-wrap
msgid "check-coding-system coding-system"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1277
msgid ""
"This function checks the validity of @var{coding-system}.  If that is valid, "
"it returns @var{coding-system}.  If @var{coding-system} is @code{nil}, the "
"function returns @code{nil}.  For any other values, it signals an error "
"whose @code{error-symbol} is @code{coding-system-error} (@pxref{Signaling "
"Errors, signal})."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1279
#, no-wrap
msgid "eol type of coding system"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1280
#, no-wrap
msgid "coding-system-eol-type coding-system"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1288
msgid ""
"This function returns the type of end-of-line (a.k.a.@: @dfn{eol})  "
"conversion used by @var{coding-system}.  If @var{coding-system} specifies a "
"certain eol conversion, the return value is an integer 0, 1, or 2, standing "
"for @code{unix}, @code{dos}, and @code{mac}, respectively.  If "
"@var{coding-system} doesn't specify eol conversion explicitly, the return "
"value is a vector of coding systems, each one with one of the possible eol "
"conversion types, like this:"
msgstr ""

#. type: lisp
#: original_texis/nonascii.texi:1292
#, no-wrap
msgid ""
"(coding-system-eol-type 'latin-1)\n"
"     @result{} [latin-1-unix latin-1-dos latin-1-mac]\n"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1304
msgid ""
"If this function returns a vector, Emacs will decide, as part of the text "
"encoding or decoding process, what eol conversion to use.  For decoding, the "
"end-of-line format of the text is auto-detected, and the eol conversion is "
"set to match it (e.g., DOS-style CRLF format will imply @code{dos} eol "
"conversion).  For encoding, the eol conversion is taken from the appropriate "
"default coding system (e.g., default value of "
"@code{buffer-file-coding-system} for @code{buffer-file-coding-system}), or "
"from the default eol conversion appropriate for the underlying platform."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1306
#, no-wrap
msgid "eol conversion of coding system"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1307
#, no-wrap
msgid "coding-system-change-eol-conversion coding-system eol-type"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1313
msgid ""
"This function returns a coding system which is like @var{coding-system} "
"except for its eol conversion, which is specified by @code{eol-type}.  "
"@var{eol-type} should be @code{unix}, @code{dos}, @code{mac}, or "
"@code{nil}.  If it is @code{nil}, the returned coding system determines the "
"end-of-line conversion from the data."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1316
msgid ""
"@var{eol-type} may also be 0, 1 or 2, standing for @code{unix}, @code{dos} "
"and @code{mac}, respectively."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1318
#, no-wrap
msgid "text conversion of coding system"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1319
#, no-wrap
msgid "coding-system-change-text-conversion eol-coding text-coding"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1324
msgid ""
"This function returns a coding system which uses the end-of-line conversion "
"of @var{eol-coding}, and the text conversion of @var{text-coding}.  If "
"@var{text-coding} is @code{nil}, it returns @code{undecided}, or one of its "
"variants according to @var{eol-coding}."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1326
#, no-wrap
msgid "safely encode region"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1327
#, no-wrap
msgid "coding systems for encoding region"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1328
#, no-wrap
msgid "find-coding-systems-region from to"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1333
msgid ""
"This function returns a list of coding systems that could be used to encode "
"a text between @var{from} and @var{to}.  All coding systems in the list can "
"safely encode any multibyte characters in that portion of the text."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1336
msgid ""
"If the text contains no multibyte characters, the function returns the list "
"@code{(undecided)}."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1338
#, no-wrap
msgid "safely encode a string"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1339
#, no-wrap
msgid "coding systems for encoding a string"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1340
#, no-wrap
msgid "find-coding-systems-string string"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1346
msgid ""
"This function returns a list of coding systems that could be used to encode "
"the text of @var{string}.  All coding systems in the list can safely encode "
"any multibyte characters in @var{string}.  If the text contains no multibyte "
"characters, this returns the list @code{(undecided)}."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1348
#, no-wrap
msgid "charset, coding systems to encode"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1349
#, no-wrap
msgid "safely encode characters in a charset"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1350
#, no-wrap
msgid "find-coding-systems-for-charsets charsets"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1353
msgid ""
"This function returns a list of coding systems that could be used to encode "
"all the character sets in the list @var{charsets}."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1355
#, no-wrap
msgid "check-coding-systems-region start end coding-system-list"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1365
msgid ""
"This function checks whether coding systems in the list "
"@code{coding-system-list} can encode all the characters in the region "
"between @var{start} and @var{end}.  If all of the coding systems in the list "
"can encode the specified text, the function returns @code{nil}.  If some "
"coding systems cannot encode some of the characters, the value is an alist, "
"each element of which has the form @code{(@var{coding-system1} @var{pos1} "
"@var{pos2} @dots{})}, meaning that @var{coding-system1} cannot encode "
"characters at buffer positions @var{pos1}, @var{pos2}, @enddots{}."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1369
msgid ""
"@var{start} may be a string, in which case @var{end} is ignored and the "
"returned value references string indices instead of buffer positions."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1371
#, no-wrap
msgid "detect-coding-region start end &optional highest"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1376
msgid ""
"This function chooses a plausible coding system for decoding the text from "
"@var{start} to @var{end}.  This text should be a byte sequence, i.e., "
"unibyte text or multibyte text with only @acronym{ASCII} and eight-bit "
"characters (@pxref{Explicit Encoding})."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1382
msgid ""
"Normally this function returns a list of coding systems that could handle "
"decoding the text that was scanned.  They are listed in order of decreasing "
"priority.  But if @var{highest} is non-@code{nil}, then the return value is "
"just one coding system, the one that is highest in priority."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1387
msgid ""
"If the region contains only @acronym{ASCII} characters except for such "
"ISO-2022 control characters ISO-2022 as @code{ESC}, the value is "
"@code{undecided} or @code{(undecided)}, or a variant specifying end-of-line "
"conversion, if that can be deduced from the text."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1390
msgid ""
"If the region contains null bytes, the value is @code{no-conversion}, even "
"if the region contains text encoded in some coding system."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1392
#, no-wrap
msgid "detect-coding-string string &optional highest"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1395
msgid ""
"This function is like @code{detect-coding-region} except that it operates on "
"the contents of @var{string} instead of bytes in the buffer."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1397
#, no-wrap
msgid "null bytes, and decoding text"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1398
#, no-wrap
msgid "inhibit-null-byte-detection"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1403
msgid ""
"If this variable has a non-@code{nil} value, null bytes are ignored when "
"detecting the encoding of a region or a string.  This allows the encoding of "
"text that contains null bytes to be correctly detected, such as Info files "
"with Index nodes."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1405
#, no-wrap
msgid "inhibit-iso-escape-detection"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1412
msgid ""
"If this variable has a non-@code{nil} value, ISO-2022 escape sequences are "
"ignored when detecting the encoding of a region or a string.  The result is "
"that no text is ever detected as encoded in some ISO-2022 encoding, and all "
"escape sequences become visible in a buffer.  @strong{Warning:} @emph{Use "
"this variable with extreme caution, because many files in the Emacs "
"distribution use ISO-2022 encoding.}"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1414
#, no-wrap
msgid "charsets supported by a coding system"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1415
#, no-wrap
msgid "coding-system-charset-list coding-system"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1419
msgid ""
"This function returns the list of character sets (@pxref{Character Sets}) "
"supported by @var{coding-system}.  Some coding systems that support too many "
"character sets to list them all yield special values:"
msgstr ""

#. type: itemize
#: original_texis/nonascii.texi:1423
msgid ""
"If @var{coding-system} supports all Emacs characters, the value is "
"@code{(emacs)}."
msgstr ""

#. type: itemize
#: original_texis/nonascii.texi:1426
msgid ""
"If @var{coding-system} supports all Unicode characters, the value is "
"@code{(unicode)}."
msgstr ""

#. type: itemize
#: original_texis/nonascii.texi:1429
msgid ""
"If @var{coding-system} supports all ISO-2022 charsets, the value is "
"@code{iso-2022}."
msgstr ""

#. type: itemize
#: original_texis/nonascii.texi:1433
msgid ""
"If @var{coding-system} supports all the characters in the internal coding "
"system used by Emacs version 21 (prior to the implementation of internal "
"Unicode support), the value is @code{emacs-mule}."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:1440
msgid ""
"@xref{Coding systems for a subprocess,, Process Information}, in particular "
"the description of the functions @code{process-coding-system} and "
"@code{set-process-coding-system}, for how to examine or set the coding "
"systems used for I/O to a subprocess."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1444
#, no-wrap
msgid "select safe coding system"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1445
#, no-wrap
msgid ""
"select-safe-coding-system from to &optional default-coding-system "
"accept-default-p file"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1451
msgid ""
"This function selects a coding system for encoding specified text, asking "
"the user to choose if necessary.  Normally the specified text is the text in "
"the current buffer between @var{from} and @var{to}.  If @var{from} is a "
"string, the string specifies the text to encode, and @var{to} is ignored."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1455
msgid ""
"If the specified text includes raw bytes (@pxref{Text Representations}), "
"@code{select-safe-coding-system} suggests @code{raw-text} for its encoding."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1467
msgid ""
"If @var{default-coding-system} is non-@code{nil}, that is the first coding "
"system to try; if that can handle the text, @code{select-safe-coding-system} "
"returns that coding system.  It can also be a list of coding systems; then "
"the function tries each of them one by one.  After trying all of them, it "
"next tries the current buffer's value of @code{buffer-file-coding-system} "
"(if it is not @code{undecided}), then the default value of "
"@code{buffer-file-coding-system} and finally the user's most preferred "
"coding system, which the user can set using the command "
"@code{prefer-coding-system} (@pxref{Recognize Coding,, Recognizing Coding "
"Systems, emacs, The GNU Emacs Manual})."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1472
msgid ""
"If one of those coding systems can safely encode all the specified text, "
"@code{select-safe-coding-system} chooses it and returns it.  Otherwise, it "
"asks the user to choose from a list of coding systems which can encode all "
"the text, and returns the user's choice."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1479
msgid ""
"@var{default-coding-system} can also be a list whose first element is "
"@code{t} and whose other elements are coding systems.  Then, if no coding "
"system in the list can handle the text, @code{select-safe-coding-system} "
"queries the user immediately, without trying any of the three alternatives "
"described above.  This is handy for checking only the coding systems in the "
"list."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1489
msgid ""
"The optional argument @var{accept-default-p} determines whether a coding "
"system selected without user interaction is acceptable.  If it's omitted or "
"@code{nil}, such a silent selection is always acceptable.  If it is "
"non-@code{nil}, it should be a function; @code{select-safe-coding-system} "
"calls this function with one argument, the base coding system of the "
"selected coding system.  If the function returns @code{nil}, "
"@code{select-safe-coding-system} rejects the silently selected coding "
"system, and asks the user to select a coding system from a list of possible "
"candidates."
msgstr ""

#. type: vindex
#: original_texis/nonascii.texi:1490
#, no-wrap
msgid "select-safe-coding-system-accept-default-p"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1495
msgid ""
"If the variable @code{select-safe-coding-system-accept-default-p} is "
"non-@code{nil}, it should be a function taking a single argument.  It is "
"used in place of @var{accept-default-p}, overriding any value supplied for "
"this argument."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1507
msgid ""
"As a final step, before returning the chosen coding system, "
"@code{select-safe-coding-system} checks whether that coding system is "
"consistent with what would be selected if the contents of the region were "
"read from a file.  (If not, this could lead to data corruption in a file "
"subsequently re-visited and edited.)  Normally, "
"@code{select-safe-coding-system} uses @code{buffer-file-name} as the file "
"for this purpose, but if @var{file} is non-@code{nil}, it uses that file "
"instead (this can be relevant for @code{write-region} and similar "
"functions).  If it detects an apparent inconsistency, "
"@code{select-safe-coding-system} queries the user before selecting the "
"coding system."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1509
#, no-wrap
msgid "select-safe-coding-system-function"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1519
msgid ""
"This variable names the function to be called to request the user to select "
"a proper coding system for encoding text when the default coding system for "
"an output operation cannot safely encode that text.  The default value of "
"this variable is @code{select-safe-coding-system}.  Emacs primitives that "
"write text to files, such as @code{write-region}, or send text to other "
"processes, such as @code{process-send-region}, normally call the value of "
"this variable, unless @code{coding-system-for-write} is bound to a "
"non-@code{nil} value (@pxref{Specifying Coding Systems})."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:1523
msgid ""
"Here are two functions you can use to let the user specify a coding system, "
"with completion.  @xref{Completion}."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1524
#, no-wrap
msgid "read-coding-system prompt &optional default"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1529
msgid ""
"This function reads a coding system using the minibuffer, prompting with "
"string @var{prompt}, and returns the coding system name as a symbol.  If the "
"user enters null input, @var{default} specifies which coding system to "
"return.  It should be a symbol or a string."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1531
#, no-wrap
msgid "read-non-nil-coding-system prompt"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1536
msgid ""
"This function reads a coding system using the minibuffer, prompting with "
"string @var{prompt}, and returns the coding system name as a symbol.  If the "
"user tries to enter null input, it asks the user to try again.  @xref{Coding "
"Systems}."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1540
#, no-wrap
msgid "default coding system"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1541
#, no-wrap
msgid "coding system, automatically determined"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:1546
msgid ""
"This section describes variables that specify the default coding system for "
"certain files or when running certain subprograms, and the function that I/O "
"operations use to access them."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:1553
msgid ""
"The idea of these variables is that you set them once and for all to the "
"defaults you want, and then do not change them again.  To specify a "
"particular coding system for a particular operation in a Lisp program, don't "
"change these variables; instead, override them using "
"@code{coding-system-for-read} and @code{coding-system-for-write} "
"(@pxref{Specifying Coding Systems})."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1554
#, no-wrap
msgid "file contents, and default coding system"
msgstr ""

#. type: defopt
#: original_texis/nonascii.texi:1555
#, no-wrap
msgid "auto-coding-regexp-alist"
msgstr ""

#. type: defopt
#: original_texis/nonascii.texi:1565
msgid ""
"This variable is an alist of text patterns and corresponding coding "
"systems.  Each element has the form @code{(@var{regexp} "
". @var{coding-system})}; a file whose first few kilobytes match @var{regexp} "
"is decoded with @var{coding-system} when its contents are read into a "
"buffer.  The settings in this alist take priority over @code{coding:} tags "
"in the files and the contents of @code{file-coding-system-alist} (see "
"below).  The default value is set so that Emacs automatically recognizes "
"mail files in Babyl format and reads them with no code conversions."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1567
#, no-wrap
msgid "file name, and default coding system"
msgstr ""

#. type: defopt
#: original_texis/nonascii.texi:1568
#, no-wrap
msgid "file-coding-system-alist"
msgstr ""

#. type: defopt
#: original_texis/nonascii.texi:1574
msgid ""
"This variable is an alist that specifies the coding systems to use for "
"reading and writing particular files.  Each element has the form "
"@code{(@var{pattern} . @var{coding})}, where @var{pattern} is a regular "
"expression that matches certain file names.  The element applies to file "
"names that match @var{pattern}."
msgstr ""

#. type: defopt
#: original_texis/nonascii.texi:1582
msgid ""
"The @sc{cdr} of the element, @var{coding}, should be either a coding system, "
"a cons cell containing two coding systems, or a function name (a symbol with "
"a function definition).  If @var{coding} is a coding system, that coding "
"system is used for both reading the file and writing it.  If @var{coding} is "
"a cons cell containing two coding systems, its @sc{car} specifies the coding "
"system for decoding, and its @sc{cdr} specifies the coding system for "
"encoding."
msgstr ""

#. type: defopt
#: original_texis/nonascii.texi:1588
msgid ""
"If @var{coding} is a function name, the function should take one argument, a "
"list of all arguments passed to @code{find-operation-coding-system}.  It "
"must return a coding system or a cons cell containing two coding systems.  "
"This value has the same meaning as described above."
msgstr ""

#. type: defopt
#: original_texis/nonascii.texi:1591
msgid ""
"If @var{coding} (or what returned by the above function) is "
"@code{undecided}, the normal code-detection is performed."
msgstr ""

#. type: defopt
#: original_texis/nonascii.texi:1593
#, no-wrap
msgid "auto-coding-alist"
msgstr ""

#. type: defopt
#: original_texis/nonascii.texi:1598
msgid ""
"This variable is an alist that specifies the coding systems to use for "
"reading and writing particular files.  Its form is like that of "
"@code{file-coding-system-alist}, but, unlike the latter, this variable takes "
"priority over any @code{coding:} tags in the file."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1600
#, no-wrap
msgid "program name, and default coding system"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1601
#, no-wrap
msgid "process-coding-system-alist"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1609
msgid ""
"This variable is an alist specifying which coding systems to use for a "
"subprocess, depending on which program is running in the subprocess.  It "
"works like @code{file-coding-system-alist}, except that @var{pattern} is "
"matched against the program name used to start the subprocess.  The coding "
"system or systems specified in this alist are used to initialize the coding "
"systems used for I/O to the subprocess, but you can specify other coding "
"systems later using @code{set-process-coding-system}."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:1618
msgid ""
"@strong{Warning:} Coding systems such as @code{undecided}, which determine "
"the coding system from the data, do not work entirely reliably with "
"asynchronous subprocess output.  This is because Emacs handles asynchronous "
"subprocess output in batches, as it arrives.  If the coding system leaves "
"the character code conversion unspecified, or leaves the end-of-line "
"conversion unspecified, Emacs must try to detect the proper conversion from "
"one batch at a time, and this does not always work."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:1623
msgid ""
"Therefore, with an asynchronous subprocess, if at all possible, use a coding "
"system which determines both the character code conversion and the end of "
"line conversion---that is, one like @code{latin-1-unix}, rather than "
"@code{undecided} or @code{latin-1}."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1624
#, no-wrap
msgid "port number, and default coding system"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1625
#, no-wrap
msgid "network service name, and default coding system"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1626
#, no-wrap
msgid "network-coding-system-alist"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1633
msgid ""
"This variable is an alist that specifies the coding system to use for "
"network streams.  It works much like @code{file-coding-system-alist}, with "
"the difference that the @var{pattern} in an element may be either a port "
"number or a regular expression.  If it is a regular expression, it is "
"matched against the network service name used to open the network stream."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1635
#, no-wrap
msgid "default-process-coding-system"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1639
msgid ""
"This variable specifies the coding systems to use for subprocess (and "
"network stream) input and output, when nothing else specifies what to do."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1643
msgid ""
"The value should be a cons cell of the form @code{(@var{input-coding} "
". @var{output-coding})}.  Here @var{input-coding} applies to input from the "
"subprocess, and @var{output-coding} applies to output to it."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1645
#, no-wrap
msgid "default coding system, functions to determine"
msgstr ""

#. type: defopt
#: original_texis/nonascii.texi:1646
#, no-wrap
msgid "auto-coding-functions"
msgstr ""

#. type: defopt
#: original_texis/nonascii.texi:1649
msgid ""
"This variable holds a list of functions that try to determine a coding "
"system for a file based on its undecoded contents."
msgstr ""

#. type: defopt
#: original_texis/nonascii.texi:1657
msgid ""
"Each function in this list should be written to look at text in the current "
"buffer, but should not modify it in any way.  The buffer will contain the "
"text of parts of the file.  Each function should take one argument, "
"@var{size}, which tells it how many characters to look at, starting from "
"point.  If the function succeeds in determining a coding system for the "
"file, it should return that coding system.  Otherwise, it should return "
"@code{nil}."
msgstr ""

#. type: defopt
#: original_texis/nonascii.texi:1662
msgid ""
"The functions in this list could be called either when the file is visited "
"and Emacs wants to decode its contents, and/or when the file's buffer is "
"about to be saved and Emacs wants to determine how to encode its contents."
msgstr ""

#. type: defopt
#: original_texis/nonascii.texi:1665
msgid ""
"If a file has a @samp{coding:} tag, that takes precedence, so these "
"functions won't be called."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1667
#, no-wrap
msgid "find-auto-coding filename size"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1683
msgid ""
"This function tries to determine a suitable coding system for "
"@var{filename}.  It examines the buffer visiting the named file, using the "
"variables documented above in sequence, until it finds a match for one of "
"the rules specified by these variables.  It then returns a cons cell of the "
"form @code{(@var{coding} . @var{source})}, where @var{coding} is the coding "
"system to use and @var{source} is a symbol, one of @code{auto-coding-alist}, "
"@code{auto-coding-regexp-alist}, @code{:coding}, or "
"@code{auto-coding-functions}, indicating which one supplied the matching "
"rule.  The value @code{:coding} means the coding system was specified by the "
"@code{coding:} tag in the file (@pxref{Specify Coding,, coding tag, emacs, "
"The GNU Emacs Manual}).  The order of looking for a matching rule is "
"@code{auto-coding-alist} first, then @code{auto-coding-regexp-alist}, then "
"the @code{coding:} tag, and lastly @code{auto-coding-functions}.  If no "
"matching rule was found, the function returns @code{nil}."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1690
msgid ""
"The second argument @var{size} is the size of text, in characters, following "
"point.  The function examines text only within @var{size} characters after "
"point.  Normally, the buffer should be positioned at the beginning when this "
"function is called, because one of the places for the @code{coding:} tag is "
"the first one or two lines of the file; in that case, @var{size} should be "
"the size of the buffer."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1692
#, no-wrap
msgid "set-auto-coding filename size"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1698
msgid ""
"This function returns a suitable coding system for file @var{filename}.  It "
"uses @code{find-auto-coding} to find the coding system.  If no coding system "
"could be determined, the function returns @code{nil}.  The meaning of the "
"argument @var{size} is like in @code{find-auto-coding}."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1700
#, no-wrap
msgid "find-operation-coding-system operation &rest arguments"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1704
msgid ""
"This function returns the coding system to use (by default) for performing "
"@var{operation} with @var{arguments}.  The value has this form:"
msgstr ""

#. type: example
#: original_texis/nonascii.texi:1707
#, no-wrap
msgid "(@var{decoding-system} . @var{encoding-system})\n"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1713
msgid ""
"The first element, @var{decoding-system}, is the coding system to use for "
"decoding (in case @var{operation} does decoding), and @var{encoding-system} "
"is the coding system for encoding (in case @var{operation} does encoding)."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1719
msgid ""
"The argument @var{operation} is a symbol; it should be one of "
"@code{write-region}, @code{start-process}, @code{call-process}, "
"@code{call-process-region}, @code{insert-file-contents}, or "
"@code{open-network-stream}.  These are the names of the Emacs I/O primitives "
"that can do character code and eol conversion."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1727
msgid ""
"The remaining arguments should be the same arguments that might be given to "
"the corresponding I/O primitive.  Depending on the primitive, one of those "
"arguments is selected as the @dfn{target}.  For example, if @var{operation} "
"does file I/O, whichever argument specifies the file name is the target.  "
"For subprocess primitives, the process name is the target.  For "
"@code{open-network-stream}, the target is the service name or port number."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1733
msgid ""
"Depending on @var{operation}, this function looks up the target in "
"@code{file-coding-system-alist}, @code{process-coding-system-alist}, or "
"@code{network-coding-system-alist}.  If the target is found in the alist, "
"@code{find-operation-coding-system} returns its association in the alist; "
"otherwise it returns @code{nil}."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1743
msgid ""
"If @var{operation} is @code{insert-file-contents}, the argument "
"corresponding to the target may be a cons cell of the form "
"@code{(@var{filename} . @var{buffer})}.  In that case, @var{filename} is a "
"file name to look up in @code{file-coding-system-alist}, and @var{buffer} is "
"a buffer that contains the file's contents (not yet decoded).  If "
"@code{file-coding-system-alist} specifies a function to call for this file, "
"and that function needs to examine the file's contents (as it usually does), "
"it should examine the contents of @var{buffer} instead of reading the file."
msgstr ""

#. type: subsection
#: original_texis/nonascii.texi:1746
#, no-wrap
msgid "Specifying a Coding System for One Operation"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1747
#, no-wrap
msgid "specify coding system"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1748
#, no-wrap
msgid "force coding system for operation"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1749
#, no-wrap
msgid "coding system for operation"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:1754
msgid ""
"You can specify the coding system for a specific operation by binding the "
"variables @code{coding-system-for-read} and/or "
"@code{coding-system-for-write}."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1755
#, no-wrap
msgid "coding-system-for-read"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1758
msgid ""
"If this variable is non-@code{nil}, it specifies the coding system to use "
"for reading a file, or for input from a synchronous subprocess."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1764
msgid ""
"It also applies to any asynchronous subprocess or network stream, but in a "
"different way: the value of @code{coding-system-for-read} when you start the "
"subprocess or open the network stream specifies the input decoding method "
"for that subprocess or network stream.  It remains in use for that "
"subprocess or network stream unless and until overridden."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1769
msgid ""
"The right way to use this variable is to bind it with @code{let} for a "
"specific I/O operation.  Its global value is normally @code{nil}, and you "
"should not globally set it to any other value.  Here is an example of the "
"right way to use the variable:"
msgstr ""

#. type: example
#: original_texis/nonascii.texi:1774
#, no-wrap
msgid ""
";; @r{Read the file with no character code conversion.}\n"
"(let ((coding-system-for-read 'no-conversion))\n"
"  (insert-file-contents filename))\n"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1781
msgid ""
"When its value is non-@code{nil}, this variable takes precedence over all "
"other methods of specifying a coding system to use for input, including "
"@code{file-coding-system-alist}, @code{process-coding-system-alist} and "
"@code{network-coding-system-alist}."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1783
#, no-wrap
msgid "coding-system-for-write"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1789
msgid ""
"This works much like @code{coding-system-for-read}, except that it applies "
"to output rather than input.  It affects writing to files, as well as "
"sending output to subprocesses and net connections.  It also applies to "
"encoding command-line arguments with which Emacs invokes subprocesses."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1794
msgid ""
"When a single operation does both input and output, as do "
"@code{call-process-region} and @code{start-process}, both "
"@code{coding-system-for-read} and @code{coding-system-for-write} affect it."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1796
#, no-wrap
msgid "coding-system-require-warning"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:1811
msgid ""
"Binding @code{coding-system-for-write} to a non-@code{nil} value prevents "
"output primitives from calling the function specified by "
"@code{select-safe-coding-system-function} (@pxref{User-Chosen Coding "
"Systems}).  This is because @kbd{C-x @key{RET} c} "
"(@code{universal-coding-system-argument}) works by binding "
"@code{coding-system-for-write}, and Emacs should obey user selection.  If a "
"Lisp program binds @code{coding-system-for-write} to a value that might not "
"be safe for encoding the text to be written, it can also bind "
"@code{coding-system-require-warning} to a non-@code{nil} value, which will "
"force the output primitives to check the encoding by calling the value of "
"@code{select-safe-coding-system-function} even though "
"@code{coding-system-for-write} is non-@code{nil}.  Alternatively, call "
"@code{select-safe-coding-system} explicitly before using the specified "
"encoding."
msgstr ""

#. type: defopt
#: original_texis/nonascii.texi:1813
#, no-wrap
msgid "inhibit-eol-conversion"
msgstr ""

#. type: defopt
#: original_texis/nonascii.texi:1818
msgid ""
"When this variable is non-@code{nil}, no end-of-line conversion is done, no "
"matter which coding system is specified.  This applies to all the Emacs I/O "
"and subprocess primitives, and to the explicit encoding and decoding "
"functions (@pxref{Explicit Encoding})."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1820
#, no-wrap
msgid "priority order of coding systems"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1821
#, no-wrap
msgid "coding systems, priority"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:1827
msgid ""
"Sometimes, you need to prefer several coding systems for some operation, "
"rather than fix a single one.  Emacs lets you specify a priority order for "
"using coding systems.  This ordering affects the sorting of lists of coding "
"systems returned by functions such as @code{find-coding-systems-region} "
"(@pxref{Lisp and Coding Systems})."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1828
#, no-wrap
msgid "coding-system-priority-list &optional highestp"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1832
msgid ""
"This function returns the list of coding systems in the order of their "
"current priorities.  Optional argument @var{highestp}, if non-@code{nil}, "
"means return only the highest priority coding system."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1834
#, no-wrap
msgid "set-coding-system-priority &rest coding-systems"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1838
msgid ""
"This function puts @var{coding-systems} at the beginning of the priority "
"list for coding systems, thus making their priority higher than all the "
"rest."
msgstr ""

#. type: defmac
#: original_texis/nonascii.texi:1840
#, no-wrap
msgid "with-coding-priority coding-systems &rest body"
msgstr ""

#. type: defmac
#: original_texis/nonascii.texi:1845
msgid ""
"This macro executes @var{body}, like @code{progn} does (@pxref{Sequencing, "
"progn}), with @var{coding-systems} at the front of the priority list for "
"coding systems.  @var{coding-systems} should be a list of coding systems to "
"prefer during execution of @var{body}."
msgstr ""

#. type: subsection
#: original_texis/nonascii.texi:1848
#, no-wrap
msgid "Explicit Encoding and Decoding"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1849
#, no-wrap
msgid "encoding in coding systems"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1850
#, no-wrap
msgid "decoding in coding systems"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:1856
msgid ""
"All the operations that transfer text in and out of Emacs have the ability "
"to use a coding system to encode or decode the text.  You can also "
"explicitly encode and decode text using the functions in this section."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:1865
msgid ""
"The result of encoding, and the input to decoding, are not ordinary text.  "
"They logically consist of a series of byte values; that is, a series of "
"@acronym{ASCII} and eight-bit characters.  In unibyte buffers and strings, "
"these characters have codes in the range 0 through #xFF (255).  In a "
"multibyte buffer or string, eight-bit characters have character codes higher "
"than #xFF (@pxref{Text Representations}), but Emacs transparently converts "
"them to their single-byte values when you encode or decode such text."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:1872
msgid ""
"The usual way to read a file into a buffer as a sequence of bytes, so you "
"can decode the contents explicitly, is with "
"@code{insert-file-contents-literally} (@pxref{Reading from Files}); "
"alternatively, specify a non-@code{nil} @var{rawfile} argument when visiting "
"a file with @code{find-file-noselect}.  These methods result in a unibyte "
"buffer."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:1878
msgid ""
"The usual way to use the byte sequence that results from explicitly encoding "
"text is to copy it to a file or process---for example, to write it with "
"@code{write-region} (@pxref{Writing to Files}), and suppress encoding by "
"binding @code{coding-system-for-write} to @code{no-conversion}."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:1884
msgid ""
"Here are the functions to perform explicit encoding or decoding.  The "
"encoding functions produce sequences of bytes; the decoding functions are "
"meant to operate on sequences of bytes.  All of these functions discard text "
"properties.  They also set @code{last-coding-system-used} to the precise "
"coding system they used."
msgstr ""

#. type: deffn
#: original_texis/nonascii.texi:1885
#, no-wrap
msgid "Command encode-coding-region start end coding-system &optional destination"
msgstr ""

#. type: deffn
#: original_texis/nonascii.texi:1893
msgid ""
"This command encodes the text from @var{start} to @var{end} according to "
"coding system @var{coding-system}.  Normally, the encoded text replaces the "
"original text in the buffer, but the optional argument @var{destination} can "
"change that.  If @var{destination} is a buffer, the encoded text is inserted "
"in that buffer after point (point does not move); if it is @code{t}, the "
"command returns the encoded text as a unibyte string without inserting it."
msgstr ""

#. type: deffn
#: original_texis/nonascii.texi:1896
msgid ""
"If encoded text is inserted in some buffer, this command returns the length "
"of the encoded text."
msgstr ""

#. type: deffn
#: original_texis/nonascii.texi:1901
msgid ""
"The result of encoding is logically a sequence of bytes, but the buffer "
"remains multibyte if it was multibyte before, and any 8-bit bytes are "
"converted to their multibyte representation (@pxref{Text Representations})."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1902
#, no-wrap
msgid "@code{undecided} coding-system, when encoding"
msgstr ""

#. type: deffn
#: original_texis/nonascii.texi:1908
msgid ""
"Do @emph{not} use @code{undecided} for @var{coding-system} when encoding "
"text, since that may lead to unexpected results.  Instead, use "
"@code{select-safe-coding-system} (@pxref{User-Chosen Coding Systems, "
"select-safe-coding-system}) to suggest a suitable encoding, if there's no "
"obvious pertinent value for @var{coding-system}."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1910
#, no-wrap
msgid "encode-coding-string string coding-system &optional nocopy buffer"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1916
msgid ""
"This function encodes the text in @var{string} according to coding system "
"@var{coding-system}.  It returns a new string containing the encoded text, "
"except when @var{nocopy} is non-@code{nil}, in which case the function may "
"return @var{string} itself if the encoding operation is trivial.  The result "
"of encoding is a unibyte string."
msgstr ""

#. type: deffn
#: original_texis/nonascii.texi:1918
#, no-wrap
msgid "Command decode-coding-region start end coding-system &optional destination"
msgstr ""

#. type: deffn
#: original_texis/nonascii.texi:1930
msgid ""
"This command decodes the text from @var{start} to @var{end} according to "
"coding system @var{coding-system}.  To make explicit decoding useful, the "
"text before decoding ought to be a sequence of byte values, but both "
"multibyte and unibyte buffers are acceptable (in the multibyte case, the raw "
"byte values should be represented as eight-bit characters).  Normally, the "
"decoded text replaces the original text in the buffer, but the optional "
"argument @var{destination} can change that.  If @var{destination} is a "
"buffer, the decoded text is inserted in that buffer after point (point does "
"not move); if it is @code{t}, the command returns the decoded text as a "
"multibyte string without inserting it."
msgstr ""

#. type: deffn
#: original_texis/nonascii.texi:1936
msgid ""
"If decoded text is inserted in some buffer, this command returns the length "
"of the decoded text.  If that buffer is a unibyte buffer (@pxref{Selecting a "
"Representation}), the internal representation of the decoded text "
"(@pxref{Text Representations}) is inserted into the buffer as individual "
"bytes."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1937
#, no-wrap
msgid "@code{charset}, text property on buffer text"
msgstr ""

#. type: deffn
#: original_texis/nonascii.texi:1941
msgid ""
"This command puts a @code{charset} text property on the decoded text.  The "
"value of the property states the character set used to decode the original "
"text."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1942
#, no-wrap
msgid "undecided coding-system, when decoding"
msgstr ""

#. type: deffn
#: original_texis/nonascii.texi:1955
msgid ""
"This command detects the encoding of the text if necessary.  If "
"@var{coding-system} is @code{undecided}, the command detects the encoding of "
"the text based on the byte sequences it finds in the text, and also detects "
"the type of end-of-line convention used by the text (@pxref{Lisp and Coding "
"Systems, eol type}).  If @var{coding-system} is "
"@code{undecided-@var{eol-type}}, where @var{eol-type} is @code{unix}, "
"@code{dos}, or @code{mac}, then the command detects only the encoding of the "
"text.  Any @var{coding-system} that doesn't specify @var{eol-type}, as in "
"@code{utf-8}, causes the command to detect the end-of-line convention; "
"specify the encoding completely, as in @code{utf-8-unix}, if the EOL "
"convention used by the text is known in advance, to prevent any automatic "
"detection."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1957
#, no-wrap
msgid "decode-coding-string string coding-system &optional nocopy buffer"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1966
msgid ""
"This function decodes the text in @var{string} according to "
"@var{coding-system}.  It returns a new string containing the decoded text, "
"except when @var{nocopy} is non-@code{nil}, in which case the function may "
"return @var{string} itself if the decoding operation is trivial.  To make "
"explicit decoding useful, the contents of @var{string} ought to be a unibyte "
"string with a sequence of byte values, but a multibyte string is also "
"acceptable (assuming it contains 8-bit bytes in their multibyte form)."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1969
msgid ""
"This function detects the encoding of the string if needed, like "
"@code{decode-coding-region} does."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1975
msgid ""
"If optional argument @var{buffer} specifies a buffer, the decoded text is "
"inserted in that buffer after point (point does not move).  In this case, "
"the return value is the length of the decoded text.  If that buffer is a "
"unibyte buffer, the internal representation of the decoded text is inserted "
"into it as individual bytes."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:1976
#, no-wrap
msgid "@code{charset}, text property on strings"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1980
msgid ""
"This function puts a @code{charset} text property on the decoded text.  The "
"value of the property states the character set used to decode the original "
"text:"
msgstr ""

#. type: group
#: original_texis/nonascii.texi:1985
#, no-wrap
msgid ""
"(decode-coding-string \"Gr\\374ss Gott\" 'latin-1)\n"
"     @result{} #(\"Grüss Gott\" 0 9 (charset iso-8859-1))\n"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1989
#, no-wrap
msgid ""
"decode-coding-inserted-region from to filename &optional visit beg end "
"replace"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1993
msgid ""
"This function decodes the text from @var{from} to @var{to} as if it were "
"being read from file @var{filename} using @code{insert-file-contents} using "
"the rest of the arguments provided."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:1998
msgid ""
"The normal way to use this function is after reading text from a file "
"without decoding, if you decide you would rather have decoded it.  Instead "
"of deleting the text and reading it again, this time with decoding, you can "
"call this function."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:2008
msgid ""
"Emacs can use coding systems to decode keyboard input and encode terminal "
"output.  This is useful for terminals that transmit or display text using a "
"particular encoding, such as Latin-1.  Emacs does not set "
"@code{last-coding-system-used} when encoding or decoding terminal I/O."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:2009
#, no-wrap
msgid "keyboard-coding-system &optional terminal"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:2014
msgid ""
"This function returns the coding system used for decoding keyboard input "
"from @var{terminal}.  A value of @code{no-conversion} means no decoding is "
"done.  If @var{terminal} is omitted or @code{nil}, it means the selected "
"frame's terminal.  @xref{Multiple Terminals}."
msgstr ""

#. type: deffn
#: original_texis/nonascii.texi:2016
#, no-wrap
msgid "Command set-keyboard-coding-system coding-system &optional terminal"
msgstr ""

#. type: deffn
#: original_texis/nonascii.texi:2025
msgid ""
"This command specifies @var{coding-system} as the coding system to use for "
"decoding keyboard input from @var{terminal}.  If @var{coding-system} is "
"@code{nil}, that means not to decode keyboard input.  If @var{terminal} is a "
"frame, it means that frame's terminal; if it is @code{nil}, that means the "
"currently selected frame's terminal.  @xref{Multiple Terminals}.  Note that "
"on modern MS-Windows systems Emacs always uses Unicode input when decoding "
"keyboard input, so the encoding set by this command has no effect on "
"Windows."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:2027
#, no-wrap
msgid "terminal-coding-system &optional terminal"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:2033
msgid ""
"This function returns the coding system that is in use for encoding terminal "
"output from @var{terminal}.  A value of @code{no-conversion} means no "
"encoding is done.  If @var{terminal} is a frame, it means that frame's "
"terminal; if it is @code{nil}, that means the currently selected frame's "
"terminal."
msgstr ""

#. type: deffn
#: original_texis/nonascii.texi:2035
#, no-wrap
msgid "Command set-terminal-coding-system coding-system &optional terminal"
msgstr ""

#. type: deffn
#: original_texis/nonascii.texi:2042
msgid ""
"This command specifies @var{coding-system} as the coding system to use for "
"encoding terminal output from @var{terminal}.  If @var{coding-system} is "
"@code{nil}, that means not to encode terminal output.  If @var{terminal} is "
"a frame, it means that frame's terminal; if it is @code{nil}, that means the "
"currently selected frame's terminal."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:2046
#, no-wrap
msgid "input methods"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:2055
msgid ""
"@dfn{Input methods} provide convenient ways of entering non-@acronym{ASCII} "
"characters from the keyboard.  Unlike coding systems, which translate "
"non-@acronym{ASCII} characters to and from encodings meant to be read by "
"programs, input methods provide human-friendly commands.  (@xref{Input "
"Methods,,, emacs, The GNU Emacs Manual}, for information on how users use "
"input methods to enter text.)  How to define input methods is not yet "
"documented in this manual, but here we describe how to use them."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:2058
msgid ""
"Each input method has a name, which is currently a string; in the future, "
"symbols may also be usable as input method names."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:2059
#, no-wrap
msgid "current-input-method"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:2064
msgid ""
"This variable holds the name of the input method now active in the current "
"buffer.  (It automatically becomes local in each buffer when set in any "
"fashion.)  It is @code{nil} if no input method is active in the buffer now."
msgstr ""

#. type: defopt
#: original_texis/nonascii.texi:2066
#, no-wrap
msgid "default-input-method"
msgstr ""

#. type: defopt
#: original_texis/nonascii.texi:2070
msgid ""
"This variable holds the default input method for commands that choose an "
"input method.  Unlike @code{current-input-method}, this variable is normally "
"global."
msgstr ""

#. type: deffn
#: original_texis/nonascii.texi:2072
#, no-wrap
msgid "Command set-input-method input-method"
msgstr ""

#. type: deffn
#: original_texis/nonascii.texi:2077
msgid ""
"This command activates input method @var{input-method} for the current "
"buffer.  It also sets @code{default-input-method} to @var{input-method}.  If "
"@var{input-method} is @code{nil}, this command deactivates any input method "
"for the current buffer."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:2079
#, no-wrap
msgid "read-input-method-name prompt &optional default inhibit-null"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:2084
msgid ""
"This function reads an input method name with the minibuffer, prompting with "
"@var{prompt}.  If @var{default} is non-@code{nil}, that is returned by "
"default, if the user enters empty input.  However, if @var{inhibit-null} is "
"non-@code{nil}, empty input signals an error."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:2086
msgid "The returned value is a string."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:2088
#, no-wrap
msgid "input-method-alist"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:2091
msgid ""
"This variable defines all the supported input methods.  Each element defines "
"one input method, and should have the form:"
msgstr ""

#. type: example
#: original_texis/nonascii.texi:2095
#, no-wrap
msgid ""
"(@var{input-method} @var{language-env} @var{activate-func}\n"
" @var{title} @var{description} @var{args}...)\n"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:2101
msgid ""
"Here @var{input-method} is the input method name, a string; "
"@var{language-env} is another string, the name of the language environment "
"this input method is recommended for.  (That serves only for documentation "
"purposes.)"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:2106
msgid ""
"@var{activate-func} is a function to call to activate this method.  The "
"@var{args}, if any, are passed as arguments to @var{activate-func}.  All "
"told, the arguments to @var{activate-func} are @var{input-method} and the "
"@var{args}."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:2110
msgid ""
"@var{title} is a string to display in the mode line while this method is "
"active.  @var{description} is a string describing this method and what it is "
"good for."
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:2115
msgid ""
"The fundamental interface to input methods is through the variable "
"@code{input-method-function}.  @xref{Reading One Event}, and @ref{Invoking "
"the Input Method}."
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:2118
#, no-wrap
msgid "locale"
msgstr ""

#. type: Plain text
#: original_texis/nonascii.texi:2123
msgid ""
"In POSIX, locales control which language to use in language-related "
"features.  These Emacs variables control how Emacs interacts with these "
"features."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:2124
#, no-wrap
msgid "locale-coding-system"
msgstr ""

#. type: cindex
#: original_texis/nonascii.texi:2125
#, no-wrap
msgid "keyboard input decoding on X"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:2131
msgid ""
"This variable specifies the coding system to use for decoding system error "
"messages and---on X Window system only---keyboard input, for sending batch "
"output to the standard output and error streams, for encoding the format "
"argument to @code{format-time-string}, and for decoding the return value of "
"@code{format-time-string}."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:2133
#, no-wrap
msgid "system-messages-locale"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:2139
msgid ""
"This variable specifies the locale to use for generating system error "
"messages.  Changing the locale can cause messages to come out in a different "
"language or in a different orthography.  If the variable is @code{nil}, the "
"locale is specified by environment variables in the usual POSIX fashion."
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:2141
#, no-wrap
msgid "system-time-locale"
msgstr ""

#. type: defvar
#: original_texis/nonascii.texi:2146
msgid ""
"This variable specifies the locale to use for formatting time values.  "
"Changing the locale can cause messages to appear according to the "
"conventions of a different language.  If the variable is @code{nil}, the "
"locale is specified by environment variables in the usual POSIX fashion."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:2148
#, no-wrap
msgid "locale-info item"
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:2151
msgid ""
"This function returns locale data @var{item} for the current POSIX locale, "
"if available.  @var{item} should be one of these symbols:"
msgstr ""

#. type: item
#: original_texis/nonascii.texi:2153
#, no-wrap
msgid "codeset"
msgstr ""

#. type: table
#: original_texis/nonascii.texi:2155
msgid "Return the character set as a string (locale item @code{CODESET})."
msgstr ""

#. type: item
#: original_texis/nonascii.texi:2156
#, no-wrap
msgid "days"
msgstr ""

#. type: table
#: original_texis/nonascii.texi:2159
msgid ""
"Return a 7-element vector of day names (locale items @code{DAY_1} through "
"@code{DAY_7});"
msgstr ""

#. type: item
#: original_texis/nonascii.texi:2160
#, no-wrap
msgid "months"
msgstr ""

#. type: table
#: original_texis/nonascii.texi:2163
msgid ""
"Return a 12-element vector of month names (locale items @code{MON_1} through "
"@code{MON_12})."
msgstr ""

#. type: item
#: original_texis/nonascii.texi:2164
#, no-wrap
msgid "paper"
msgstr ""

#. type: table
#: original_texis/nonascii.texi:2168
msgid ""
"Return a list @w{@code{(@var{width} @var{height})}} of 2 integers, for the "
"default paper size measured in millimeters (locale items "
"@code{_NL_PAPER_WIDTH} and @code{_NL_PAPER_HEIGHT})."
msgstr ""

#. type: defun
#: original_texis/nonascii.texi:2175
msgid ""
"If the system can't provide the requested information, or if @var{item} is "
"not one of those symbols, the value is @code{nil}.  All strings in the "
"return value are decoded using @code{locale-coding-system}.  "
"@xref{Locales,,, libc, The GNU Libc Manual}, for more information about "
"locales and locale items."
msgstr ""
