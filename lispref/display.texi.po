# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Emacs 25.1\n"
"POT-Creation-Date: 2020-03-08 09:40+0900\n"
"PO-Revision-Date: 2020-06-09 00:16+0900\n"
"Last-Translator: Ayanokoji Takesi <ayanokoji.takesi@gmail.com>\n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: node
#: original_texis/display.texi:5
#, no-wrap
msgid "Display"
msgstr "Display"

#. type: chapter
#: original_texis/display.texi:6
#, no-wrap
msgid "Emacs Display"
msgstr "Emacs Display"

#. type: Plain text
#: original_texis/display.texi:10
msgid "This chapter describes a number of features related to the display that Emacs presents to the user."
msgstr "このチャプターではEmacsによるユーザーへのプレゼンテーションとなる、表示に関連するいくつかの機能を説明します。"

#. type: node
#: original_texis/display.texi:40 original_texis/display.texi:42
#, no-wrap
msgid "Refresh Screen"
msgstr "Refresh Screen"

#. type: menuentry
#: original_texis/display.texi:40
msgid "Clearing the screen and redrawing everything on it."
msgstr "スクリーン上にあるすべてのもののクリアーと再描画。"

#. type: section
#: original_texis/display.texi:40 original_texis/display.texi:81
#: original_texis/display.texi:82
#, no-wrap
msgid "Forcing Redisplay"
msgstr "Forcing Redisplay"

#. type: menuentry
#: original_texis/display.texi:40
msgid "Forcing redisplay."
msgstr "再描画の強制。"

#. type: section
#: original_texis/display.texi:40 original_texis/display.texi:131
#: original_texis/display.texi:132
#, no-wrap
msgid "Truncation"
msgstr "Truncation"

#. type: menuentry
#: original_texis/display.texi:40
msgid "Folding or wrapping long text lines."
msgstr "長いテキストの折り畳みと折り返し。"

#. type: section
#: original_texis/display.texi:40 original_texis/display.texi:227
#: original_texis/display.texi:228
#, no-wrap
msgid "The Echo Area"
msgstr "The Echo Area"

#. type: menuentry
#: original_texis/display.texi:40
msgid "Displaying messages at the bottom of the screen."
msgstr "スクリーン最下部へのメッセージ表示。"

#. type: node
#: original_texis/display.texi:40 original_texis/display.texi:586
#, no-wrap
msgid "Warnings"
msgstr "Warnings"

#. type: menuentry
#: original_texis/display.texi:40
msgid "Displaying warning messages for the user."
msgstr "ユーザーへの警告メッセージの表示。"

#. type: section
#: original_texis/display.texi:40 original_texis/display.texi:829
#: original_texis/display.texi:830
#, no-wrap
msgid "Invisible Text"
msgstr "Invisible Text"

#. type: menuentry
#: original_texis/display.texi:40
msgid "Hiding part of the buffer text."
msgstr "バッファーのテキストの一部を隠す。"

#. type: section
#: original_texis/display.texi:40 original_texis/display.texi:992
#: original_texis/display.texi:993
#, no-wrap
msgid "Selective Display"
msgstr "Selective Display"

#. type: menuentry
#: original_texis/display.texi:40
msgid "Hiding part of the buffer text (the old way)."
msgstr "バッファーのテキストの一部を隠す(旧来の方式)。"

#. type: section
#: original_texis/display.texi:40 original_texis/display.texi:1110
#: original_texis/display.texi:1111
#, no-wrap
msgid "Temporary Displays"
msgstr "Temporary Displays"

#. type: menuentry
#: original_texis/display.texi:40
msgid "Displays that go away automatically."
msgstr "自動的に消える表示。"

#. type: section
#: original_texis/display.texi:40 original_texis/display.texi:1335
#: original_texis/display.texi:1336
#, no-wrap
msgid "Overlays"
msgstr "Overlays"

#. type: menuentry
#: original_texis/display.texi:40
msgid "Use overlays to highlight parts of the buffer."
msgstr "オーバーレイを使用したバッファーの一部のハイライト。"

#. type: section
#: original_texis/display.texi:40 original_texis/display.texi:1871
#: original_texis/display.texi:1872
#, no-wrap
msgid "Size of Displayed Text"
msgstr "Size of Displayed Text"

#. type: menuentry
#: original_texis/display.texi:40
msgid "How large displayed text is."
msgstr "表示されたテキストの大きさ。"

#. type: section
#: original_texis/display.texi:40 original_texis/display.texi:2072
#: original_texis/display.texi:2073
#, no-wrap
msgid "Line Height"
msgstr "Line Height"

#. type: menuentry
#: original_texis/display.texi:40
msgid "Controlling the height of lines."
msgstr "行の高さの制御。"

#. type: section
#: original_texis/display.texi:40 original_texis/display.texi:2173
#: original_texis/display.texi:2174
#, no-wrap
msgid "Faces"
msgstr "Faces"

#. type: menuentry
#: original_texis/display.texi:40
msgid "A face defines a graphics style for text characters: font, colors, etc."
msgstr "テキスト文字のグラフィカルスタイル(フォント、カラー等)を定義するフェイス。"

#. type: section
#: original_texis/display.texi:40 original_texis/display.texi:3844
#: original_texis/display.texi:3845
#, no-wrap
msgid "Fringes"
msgstr "Fringes"

#. type: menuentry
#: original_texis/display.texi:40
msgid "Controlling window fringes."
msgstr "ウィンドウフリンジの制御。"

#. type: section
#: original_texis/display.texi:40 original_texis/display.texi:4265
#: original_texis/display.texi:4266
#, no-wrap
msgid "Scroll Bars"
msgstr "Scroll Bars"

#. type: menuentry
#: original_texis/display.texi:40
msgid "Controlling scroll bars."
msgstr "スクロールバーの制御。"

#. type: section
#: original_texis/display.texi:40 original_texis/display.texi:4425
#: original_texis/display.texi:4426
#, no-wrap
msgid "Window Dividers"
msgstr "Window Dividers"

#. type: menuentry
#: original_texis/display.texi:40
msgid "Separating windows visually."
msgstr "ウィンドウを視覚的に区別する。"

#. type: node
#: original_texis/display.texi:40 original_texis/display.texi:4489
#, no-wrap
msgid "Display Property"
msgstr "Display Property"

#. type: menuentry
#: original_texis/display.texi:40
msgid "Enabling special display features."
msgstr "特別な表示機能の有効化。"

#. type: section
#: original_texis/display.texi:40 original_texis/display.texi:4921
#: original_texis/display.texi:4922
#, no-wrap
msgid "Images"
msgstr "Images"

#. type: menuentry
#: original_texis/display.texi:40
msgid "Displaying images in Emacs buffers."
msgstr "Emacsバッファー内でのイメージ表示。"

#. type: node
#: original_texis/display.texi:40 original_texis/display.texi:5989
#, no-wrap
msgid "Xwidgets"
msgstr "Xwidgets"

#. type: menuentry
#: original_texis/display.texi:40
msgid "Displaying native widgets in Emacs buffers."
msgstr "Emacsバッファー内でのネイティブウィジェットの表示。"

#. type: section
#: original_texis/display.texi:40 original_texis/display.texi:6100
#: original_texis/display.texi:6101
#, no-wrap
msgid "Buttons"
msgstr "Buttons"

#. type: menuentry
#: original_texis/display.texi:40
msgid "Adding clickable buttons to Emacs buffers."
msgstr "Emacsバッファー内へのイメージ表示クリック可能ボタン追加。"

#. type: section
#: original_texis/display.texi:40 original_texis/display.texi:6416
#: original_texis/display.texi:6417
#, no-wrap
msgid "Abstract Display"
msgstr "Abstract Display"

#. type: menuentry
#: original_texis/display.texi:40
msgid "Emacs's Widget for Object Collections."
msgstr "オブジェクトコレクション用のEmacsウィジェット。"

#. type: node
#: original_texis/display.texi:40 original_texis/display.texi:6756
#, no-wrap
msgid "Blinking"
msgstr "Blinking"

#. type: menuentry
#: original_texis/display.texi:40
msgid "How Emacs shows the matching open parenthesis."
msgstr "Emacsがマッチする開カッコを表示する方法。"

#. type: section
#: original_texis/display.texi:40 original_texis/display.texi:6814
#: original_texis/display.texi:6815
#, no-wrap
msgid "Character Display"
msgstr "Character Display"

#. type: menuentry
#: original_texis/display.texi:40
msgid "How Emacs displays individual characters."
msgstr "Emacsがマッチする個々の文字を表示する方法。"

#. type: section
#: original_texis/display.texi:40 original_texis/display.texi:7250
#: original_texis/display.texi:7251
#, no-wrap
msgid "Beeping"
msgstr "Beeping"

#. type: menuentry
#: original_texis/display.texi:40
msgid "Audible signal to the user."
msgstr "ユーザーへの可聴シグナル。"

#. type: section
#: original_texis/display.texi:40 original_texis/display.texi:7286
#: original_texis/display.texi:7287
#, no-wrap
msgid "Window Systems"
msgstr "Window Systems"

#. type: menuentry
#: original_texis/display.texi:40
msgid "Which window system is being used."
msgstr "どのウィンドウシステムが使用されているか。"

#. type: section
#: original_texis/display.texi:40 original_texis/display.texi:7338
#: original_texis/display.texi:7339
#, no-wrap
msgid "Tooltips"
msgstr "Tooltips"

#. type: menuentry
#: original_texis/display.texi:40
msgid "Tooltip display in Emacs."
msgstr "Emacsでのツールチップの表示。"

#. type: section
#: original_texis/display.texi:40 original_texis/display.texi:7415
#: original_texis/display.texi:7416
#, no-wrap
msgid "Bidirectional Display"
msgstr "Bidirectional Display"

#. type: menuentry
#: original_texis/display.texi:40
msgid "Display of bidirectional scripts, such as Arabic and Farsi."
msgstr "アラビア語やペルシア語のような双方向スクリプトの表示。"

#. type: section
#: original_texis/display.texi:43
#, no-wrap
msgid "Refreshing the Screen"
msgstr "Refreshing the Screen"

#. type: cindex
#: original_texis/display.texi:44
#, no-wrap
msgid "refresh the screen"
msgstr "refresh the screen"

#. type: cindex
#: original_texis/display.texi:45
#, no-wrap
msgid "screen refresh"
msgstr "screen refresh"

#. type: Plain text
#: original_texis/display.texi:50
msgid "The function @code{redraw-frame} clears and redisplays the entire contents of a given frame (@pxref{Frames}).  This is useful if the screen is corrupted."
msgstr "関数@code{redraw-frame}は与えられたフレーム(@ref{Frames}を参照)のコンテンツ全体にたいしてクリアーと再描画を行います。これはスクリーンが壊れている(corrupted)場合に有用です。"

#. type: defun
#: original_texis/display.texi:51
#, no-wrap
msgid "redraw-frame &optional frame"
msgstr "redraw-frame &optional frame"

#. type: defun
#: original_texis/display.texi:54
msgid "This function clears and redisplays frame @var{frame}.  If @var{frame} is omitted or @code{nil}, it redraws the selected frame."
msgstr "この関数はフレーム@var{frame}のクリアーと再表示を行う。@var{frame}が省略か@code{nil}なら選択されたフレームを再描画する。"

#. type: Plain text
#: original_texis/display.texi:57
msgid "Even more powerful is @code{redraw-display}:"
msgstr "更に強力なのは@code{redraw-display}です:"

#. type: deffn
#: original_texis/display.texi:58
#, no-wrap
msgid "Command redraw-display"
msgstr "Command redraw-display"

#. type: deffn
#: original_texis/display.texi:60
msgid "This function clears and redisplays all visible frames."
msgstr "この関数はすべての可視なフレームのクリアーと再描画を行う。"

#. type: Plain text
#: original_texis/display.texi:66
msgid "In Emacs, processing user input takes priority over redisplay.  If you call these functions when input is available, they don't redisplay immediately, but the requested redisplay does happen eventually---after all the input has been processed."
msgstr "Emacsではユーザー入力は再描画より優先されます。入力が可能なときにこれらの関数を呼び出すと、これらはすぐに再描画はしませんが、要求された再描画はすべての入力処理後に行われます。"

#. type: Plain text
#: original_texis/display.texi:72
msgid "On text terminals, suspending and resuming Emacs normally also refreshes the screen.  Some terminal emulators record separate contents for display-oriented programs such as Emacs and for ordinary sequential display.  If you are using such a terminal, you might want to inhibit the redisplay on resumption."
msgstr "テキスト端末では通常はEmacsのサスペントと再開によりスクリーンのリフレッシュも行われます。Emacsのようなディスプレイ指向のプログラムと通常のシーケンシャル表示のプログラムで、コンテンツを区別して記録する端末エミュレーターがいくつかあります。そのような端末を使用する場合には、おそらく再開時の再表示を抑制したいでしょう。"

#. type: defopt
#: original_texis/display.texi:73
#, no-wrap
msgid "no-redraw-on-reenter"
msgstr "no-redraw-on-reenter"

#. type: cindex
#: original_texis/display.texi:74
#, no-wrap
msgid "suspend (cf. @code{no-redraw-on-reenter})"
msgstr "suspend (cf. @code{no-redraw-on-reenter})"

#. type: cindex
#: original_texis/display.texi:75
#, no-wrap
msgid "resume (cf. @code{no-redraw-on-reenter})"
msgstr "resume (cf. @code{no-redraw-on-reenter})"

#. type: defopt
#: original_texis/display.texi:79
msgid "This variable controls whether Emacs redraws the entire screen after it has been suspended and resumed.  Non-@code{nil} means there is no need to redraw, @code{nil} means redrawing is needed.  The default is @code{nil}."
msgstr "この変数はEmacsがサスペンドや再開された後にスクリーン全体を再描画するかどうかを制御する。非@code{nil}なら再描画は不要、@code{nil}なら再描画が必要であることを意味する。デフォルトは@code{nil}。"

#. type: cindex
#: original_texis/display.texi:83
#, no-wrap
msgid "forcing redisplay"
msgstr "forcing redisplay"

#. type: Plain text
#: original_texis/display.texi:89
msgid "Emacs normally tries to redisplay the screen whenever it waits for input.  With the following function, you can request an immediate attempt to redisplay, in the middle of Lisp code, without actually waiting for input."
msgstr "Emacsは入力の待機時は常に再表示を試みます。以下の関数により実際に入力を待機することなく、Lispコードの中から即座に再表示を試みることを要求できます。"

#. type: defun
#: original_texis/display.texi:90
#, no-wrap
msgid "redisplay &optional force"
msgstr "redisplay &optional force"

#. type: defun
#: original_texis/display.texi:94
msgid "This function tries immediately to redisplay.  The optional argument @var{force}, if non-@code{nil}, forces the redisplay to be performed, instead of being preempted if input is pending."
msgstr "この関数は即座に再表示を試みる。オプション引数@var{force}が非@code{nil}の場合には、入力が保留中なら横取りされるかわりに強制的に再表示が行われる。"

#. type: defun
#: original_texis/display.texi:99
msgid "The function returns @code{t} if it actually tried to redisplay, and @code{nil} otherwise.  A value of @code{t} does not mean that redisplay proceeded to completion; it could have been preempted by newly arriving input."
msgstr "この関数は実際に再表示が試行されたなら@code{t}、それ以外は@code{nil}をリターンする。@code{t}という値は再表示の試行が完了したことを意味しない。新たに到着した入力に横取りされた可能性がある。"

#. type: Plain text
#: original_texis/display.texi:106
msgid "Although @code{redisplay} tries immediately to redisplay, it does not change how Emacs decides which parts of its frame(s) to redisplay.  By contrast, the following function adds certain windows to the pending redisplay work (as if their contents had completely changed), but does not immediately try to perform redisplay."
msgstr "@code{redisplay}が即座に再表示を試みたとしても、Emacsがフレーム(複数可)のどの部分を再表示するか決定する方法が変更されるわけではありません。それとは対照的に以下の関数は特定のウィンドウを、(あたかもコンテンツが完全に変更されたかのように)保留中の再表示処理に追加します。しかし再描画を即座には試みません。"

#. type: defun
#: original_texis/display.texi:107
#, no-wrap
msgid "force-window-update &optional object"
msgstr "force-window-update &optional object"

#. type: defun
#: original_texis/display.texi:113
msgid "This function forces some or all windows to be updated the next time Emacs does a redisplay.  If @var{object} is a window, that window is to be updated.  If @var{object} is a buffer or buffer name, all windows displaying that buffer are to be updated.  If @var{object} is @code{nil} (or omitted), all windows are to be updated."
msgstr "この関数はEmacsが次に再表示を行う際にいくつか、あるいはすべてのウィンドウが更新されるよう強制する。@var{object}がウィンドウならそのウィンドウ、バッファーやバッファー名ならそのバッファーを表示するすべてのウィンドウ、@code{nil} (または省略)ならすべてのウィンドウが更新される。"

#. type: defun
#: original_texis/display.texi:116
msgid "This function does not do a redisplay immediately; Emacs does that as it waits for input, or when the function @code{redisplay} is called."
msgstr "この関数は即座に再表示を行わない。再表示はEmacsが入力を待機時、または関数@code{redisplay}呼び出し時に行われる。"

#. type: defvar
#: original_texis/display.texi:118
#, no-wrap
msgid "pre-redisplay-function"
msgstr "pre-redisplay-function"

#. type: defvar
#: original_texis/display.texi:123
msgid "A function run just before redisplay.  It is called with one argument, the set of windows to be redisplayed.  The set can be @code{nil}, meaning only the selected window, or @code{t}, meaning all the windows."
msgstr "再表示の直前に実行される関数。これは再表示されるウィンドウセットを単一の引数として呼び出される。ウィンドウセットは選択されたウィンドウを意味する@code{nil}、すべてのウィンドウを意味する@code{t}を指定できる。"

#. type: defvar
#: original_texis/display.texi:125
#, no-wrap
msgid "pre-redisplay-functions"
msgstr "pre-redisplay-functions"

#. type: defvar
#: original_texis/display.texi:129
msgid "This hook is run just before redisplay.  It is called once in each window that is about to be redisplayed, with @code{current-buffer} set to the buffer displayed in that window."
msgstr "このフックは再表示の直前に実行される。これは再表示されようとするウィンドウそれぞれにたいして、そのウィンドウに表示されているバッファーを@code{current-buffer}にセットして1回呼び出される。"

#. type: cindex
#: original_texis/display.texi:133
#, no-wrap
msgid "line wrapping"
msgstr "line wrapping"

#. type: cindex
#: original_texis/display.texi:134
#, no-wrap
msgid "line truncation"
msgstr "line truncation"

#. type: cindex
#: original_texis/display.texi:135
#, no-wrap
msgid "continuation lines"
msgstr "continuation lines"

#. type: cindex
#: original_texis/display.texi:136
#, no-wrap
msgid "@samp{$} in display"
msgstr "@samp{$} in display"

#. type: cindex
#: original_texis/display.texi:137
#, no-wrap
msgid "@samp{\\} in display"
msgstr "@samp{\\} in display"

#. type: Plain text
#: original_texis/display.texi:147
msgid "When a line of text extends beyond the right edge of a window, Emacs can @dfn{continue} the line (make it wrap to the next screen line), or @dfn{truncate} the line (limit it to one screen line).  The additional screen lines used to display a long text line are called @dfn{continuation} lines.  Continuation is not the same as filling; continuation happens on the screen only, not in the buffer contents, and it breaks a line precisely at the right margin, not at a word boundary.  @xref{Filling}."
msgstr "Emacsはテキスト行がウィンドウ右端を超過する際には、その行を@dfn{継続(continue)}させる(次のスクリーン行へwrap、すなわち折り返す)か、あるいはその行を@dfn{切り詰め(truncate)}て表示(その行をスクリーン行の1行に制限)することができます。長いテキスト行を表示するために使用される追加のスクリーン行は@dfn{継続(continuation)}行と呼ばれます。継続はフィルとは異なります。継続はバッファーのコンテンツ内ではなくスクリーン上でのみ発生して、単語境界ではなく正確に右マージンで行をブレークします。@ref{Filling}を参照してください。"

#. type: Plain text
#: original_texis/display.texi:154
msgid "On a graphical display, tiny arrow images in the window fringes indicate truncated and continued lines (@pxref{Fringes}).  On a text terminal, a @samp{$} in the rightmost column of the window indicates truncation; a @samp{\\} on the rightmost column indicates a line that wraps.  (The display table can specify alternate characters to use for this; @pxref{Display Tables})."
msgstr "グラフィカルなディスプレイでは切り詰めと継続はウィンドウフリンジ内の小さな矢印イメージで示されます(@ref{Fringes}を参照)。テキスト端末では切り詰めはそのウィンドウの最右列の@samp{$}、折り返しは最右列の@samp{\\}で示されます(ディスプレイテーブルでこれを行うための代替え文字を指定できる。@ref{Display Tables}を参照)。"

#. type: defopt
#: original_texis/display.texi:155
#, no-wrap
msgid "truncate-lines"
msgstr "truncate-lines"

#. type: defopt
#: original_texis/display.texi:162
msgid "If this buffer-local variable is non-@code{nil}, lines that extend beyond the right edge of the window are truncated; otherwise, they are continued.  As a special exception, the variable @code{truncate-partial-width-windows} takes precedence in @dfn{partial-width} windows (i.e., windows that do not occupy the entire frame width)."
msgstr "このバッファーローカル変数が非@code{nil}ならウィンドウ右端を超過する行は切り詰められて、それ以外なら継続される。特別な例外として@dfn{部分幅(partial-width)}ウィンドウ(フレーム全体の幅を占有しないウィンドウ)では変数@code{truncate-partial-width-windows}が優先される。"

#. type: defopt
#: original_texis/display.texi:164
#, no-wrap
msgid "truncate-partial-width-windows"
msgstr "truncate-partial-width-windows"

#. type: cindex
#: original_texis/display.texi:165
#, no-wrap
msgid "partial-width windows"
msgstr "partial-width windows"

#. type: defopt
#: original_texis/display.texi:177
msgid "This variable controls line truncation in @dfn{partial-width} windows.  A partial-width window is one that does not occupy the entire frame width (@pxref{Splitting Windows}).  If the value is @code{nil}, line truncation is determined by the variable @code{truncate-lines} (see above).  If the value is an integer @var{n}, lines are truncated if the partial-width window has fewer than @var{n} columns, regardless of the value of @code{truncate-lines}; if the partial-width window has @var{n} or more columns, line truncation is determined by @code{truncate-lines}.  For any other non-@code{nil} value, lines are truncated in every partial-width window, regardless of the value of @code{truncate-lines}."
msgstr "この変数は@dfn{部分幅(partial-width)}ウィンドウ内の行の切り詰めを制御する。部分幅ウィンドウとはフレーム全体の幅を占有しないウィンドウ(@ref{Splitting Windows}を参照)。値が@code{nil}なら行の切り詰めは変数@code{truncate-lines} (上記参照)により決定される。値が整数@var{n}の場合には、部分幅ウィンドウの列数が@var{n}より小さければ@code{truncate-lines}の値とは無関係に行は切り詰められて、部分幅ウィンドウの列数が@var{n}以上なら行の切り詰めは@code{truncate-lines}により決定される。それ以外の非@code{nil}値では@code{truncate-lines}の値とは無関係にすべての部分幅ウィンドウで行は切り詰められる。"

#. type: Plain text
#: original_texis/display.texi:181
msgid "When horizontal scrolling (@pxref{Horizontal Scrolling}) is in use in a window, that forces truncation."
msgstr "ウィンドウ内で水平スクロール(@ref{Horizontal Scrolling}を参照)を使用中は切り詰めが強制されます。"

#. type: item
#: original_texis/display.texi:182 original_texis/display.texi:1767
#, no-wrap
msgid "wrap-prefix"
msgstr "wrap-prefix"

#. type: defvar
#: original_texis/display.texi:191
msgid "If this buffer-local variable is non-@code{nil}, it defines a @dfn{wrap prefix} which Emacs displays at the start of every continuation line.  (If lines are truncated, @code{wrap-prefix} is never used.)  Its value may be a string or an image (@pxref{Other Display Specs}), or a stretch of whitespace such as specified by the @code{:width} or @code{:align-to} display properties (@pxref{Specified Space}).  The value is interpreted in the same way as a @code{display} text property.  @xref{Display Property}."
msgstr "このバッファーローカル変数が非@code{nil}なら、それはEmacsが各継続行の先頭に表示する@dfn{折り返しプレフィックス(wrap prefix)}を定義する(行を切り詰めている場合には@code{wrap-prefix}は使用されない)。この値は文字列、またはイメージ(@ref{Other Display Specs}を参照)やディスプレイプロパティ@code{:width}や@code{:align-to}で指定されるような伸長された空白文字を指定できる(@ref{Specified Space}を参照)。値はテキストプロパティ@code{display}と同じ方法で解釈される。@ref{Display Property}を参照のこと。"

#. type: defvar
#: original_texis/display.texi:195
msgid "A wrap prefix may also be specified for regions of text, using the @code{wrap-prefix} text or overlay property.  This takes precedence over the @code{wrap-prefix} variable.  @xref{Special Properties}."
msgstr "折り返しプレフィックスはテキストプロパティかオーバーレイプロパティ@code{wrap-prefix}を使用することにより、テキストのリージョンにたいして指定することもできる。これは@code{wrap-prefix}変数より優先される。@ref{Special Properties}を参照のこと。"

#. type: item
#: original_texis/display.texi:197 original_texis/display.texi:1763
#, no-wrap
msgid "line-prefix"
msgstr "line-prefix"

#. type: defvar
#: original_texis/display.texi:205
msgid "If this buffer-local variable is non-@code{nil}, it defines a @dfn{line prefix} which Emacs displays at the start of every non-continuation line.  Its value may be a string or an image (@pxref{Other Display Specs}), or a stretch of whitespace such as specified by the @code{:width} or @code{:align-to} display properties (@pxref{Specified Space}).  The value is interpreted in the same way as a @code{display} text property.  @xref{Display Property}."
msgstr "このバッファーローカル変数が非@code{nil}なら、それはEmacsがすべての非継続行の先頭に表示する@dfn{行プレフィックス(line prefix)}を定義する。この値は文字列、イメージ(@ref{Other Display Specs}を参照)、またはディスプレイプロパティ@code{:width}や@code{:align-to}で指定されるような伸長された空白文字を指定できる(@ref{Specified Space}を参照)。値はテキストプロパティ@code{display}と同じ方法で解釈される。@ref{Display Property}を参照のこと。"

#. type: defvar
#: original_texis/display.texi:209
msgid "A line prefix may also be specified for regions of text using the @code{line-prefix} text or overlay property.  This takes precedence over the @code{line-prefix} variable.  @xref{Special Properties}."
msgstr "行プレフィックスはテキストプロパティまたはオーバーレイプロパティ@code{line-prefix}を使用することにより、テキストのリージョンにたいして指定することもできる。これは@code{line-prefix}変数より優先される。@ref{Special Properties}を参照のこと。"

#. type: defvar
#: original_texis/display.texi:215
#, no-wrap
msgid "cache-long-scans"
msgstr "cache-long-scans"

# @ignore section
#. type: defvar
#: original_texis/display.texi:220
#, no-wrap
msgid ""
"If this variable is non-@code{nil} (the default), various indentation\n"
"and motion functions, and Emacs redisplay, cache the results of\n"
"scanning the buffer, and consult the cache to avoid rescanning regions\n"
"of the buffer unless they are modified.\n"
"\n"
msgstr ""
"If this variable is non-@code{nil} (the default), various indentation\n"
"and motion functions, and Emacs redisplay, cache the results of\n"
"scanning the buffer, and consult the cache to avoid rescanning regions\n"
"of the buffer unless they are modified.\n"
"\n"

# @ignore section
#. type: defvar
#: original_texis/display.texi:222
#, no-wrap
msgid ""
"Turning off the cache speeds up processing of short lines somewhat.\n"
"\n"
msgstr ""
"Turning off the cache speeds up processing of short lines somewhat.\n"
"\n"

# @ignore section
#. type: defvar
#: original_texis/display.texi:224
#, no-wrap
msgid "This variable is automatically buffer-local in every buffer.\n"
msgstr "This variable is automatically buffer-local in every buffer.\n"

#. type: cindex
#: original_texis/display.texi:229
#, no-wrap
msgid "error display"
msgstr "error display"

#. type: cindex
#: original_texis/display.texi:230
#, no-wrap
msgid "echo area"
msgstr "echo area"

#. type: Plain text
#: original_texis/display.texi:239
msgid "The @dfn{echo area} is used for displaying error messages (@pxref{Errors}), for messages made with the @code{message} primitive, and for echoing keystrokes.  It is not the same as the minibuffer, despite the fact that the minibuffer appears (when active) in the same place on the screen as the echo area.  @xref{Minibuffer,, The Minibuffer, emacs, The GNU Emacs Manual}."
msgstr "@dfn{エコーエリア(echo area)}はエラーメッセージ(@ref{Errors})や@code{message}プリミティブで作成されたメッセージの表示、およびキーストロークをエコーするために使用されます。(アクティブ時には)ミニバッファーがスクリーン上のエコーエリアと同じ場所に表示されるという事実にも関わらずエコーエリアはミニバッファーと同じではありません。@ref{Minibuffer,, The Minibuffer, emacs, The GNU Emacs Manual}を参照してください。"

#. type: Plain text
#: original_texis/display.texi:243
msgid "Apart from the functions documented in this section, you can print Lisp objects to the echo area by specifying @code{t} as the output stream.  @xref{Output Streams}."
msgstr "このセクションに記述された関数とは別に、出力ストリームとして@code{t}を指定することによりエコーエリアにLispオブジェクトをプリントできます。@ref{Output Streams}を参照してください。"

#. type: node
#: original_texis/display.texi:249 original_texis/display.texi:251
#, no-wrap
msgid "Displaying Messages"
msgstr "Displaying Messages"

#. type: menuentry
#: original_texis/display.texi:249
msgid "Explicitly displaying text in the echo area."
msgstr "エコーエリア内に明示的にテキストを表示する。"

#. type: node
#: original_texis/display.texi:249 original_texis/display.texi:369
#, no-wrap
msgid "Progress"
msgstr "Progress"

#. type: menuentry
#: original_texis/display.texi:249
msgid "Informing user about progress of a long operation."
msgstr "長時間の処理の進行状況をユーザーに知らせる。"

#. type: node
#: original_texis/display.texi:249 original_texis/display.texi:488
#, no-wrap
msgid "Logging Messages"
msgstr "Logging Messages"

#. type: menuentry
#: original_texis/display.texi:249
msgid "Echo area messages are logged for the user."
msgstr "ユーザー用にログされるエコーエリアメッセージ。"

#. type: subsection
#: original_texis/display.texi:249 original_texis/display.texi:541
#: original_texis/display.texi:542
#, no-wrap
msgid "Echo Area Customization"
msgstr "Echo Area Customization"

#. type: menuentry
#: original_texis/display.texi:249
msgid "Controlling the echo area."
msgstr "エコーエリアの制御。"

#. type: subsection
#: original_texis/display.texi:252
#, no-wrap
msgid "Displaying Messages in the Echo Area"
msgstr "Displaying Messages in the Echo Area"

#. type: cindex
#: original_texis/display.texi:253
#, no-wrap
msgid "display message in echo area"
msgstr "display message in echo area"

#. type: Plain text
#: original_texis/display.texi:257
msgid "This section describes the standard functions for displaying messages in the echo area."
msgstr "このセクションではエコーエリア内にメッセージを表示する標準的な関数を説明します。"

#. type: defun
#: original_texis/display.texi:258
#, no-wrap
msgid "message format-string &rest arguments"
msgstr "message format-string &rest arguments"

#. type: defun
#: original_texis/display.texi:267
msgid "This function displays a message in the echo area.  @var{format-string} is a format string, and @var{arguments} are the objects for its format specifications, like in the @code{format-message} function (@pxref{Formatting Strings}).  The resulting formatted string is displayed in the echo area; if it contains @code{face} text properties, it is displayed with the specified faces (@pxref{Faces}).  The string is also added to the @file{*Messages*} buffer, but without text properties (@pxref{Logging Messages})."
msgstr "この関数はエコーエリア内にメッセージを表示する。@code{format-message}関数(@ref{Formatting Strings}を参照)の場合と同じように@var{format-string}はフォーマット文字列、@var{arguments}はそのフォーマット仕様にたいするオブジェクトである。フォーマットされた結果文字列はエコーエリア内に表示される。それに@code{face}テキストプロパティが含まれる場合には指定されたフェイスにより表示される(@ref{Faces}を参照)。この文字列は@file{*Messages*}バッファーにも追加されるがテキストプロパティは含まれない(@ref{Logging Messages}を参照)。"

#. type: defun
#: original_texis/display.texi:272
msgid "Typically grave accent and apostrophe in the format translate to matching curved quotes, e.g., @t{\"Missing `%s'\"} might result in @t{\"Missing ‘foo’\"}.  @xref{Text Quoting Style}, for how to influence or inhibit this translation."
msgstr "フォーマット内のグレイヴアクセントとアポストロフィーは@t{\"Missing `%s'\"}から@t{\"Missing ‘foo’\"}のように、通常は対応するcurved quoteとして結果内に変換される。この変換に影響を与えたり抑制する方法については@ref{Text Quoting Style}を参照のこと。"

#. type: defun
#: original_texis/display.texi:275
msgid "In batch mode, the message is printed to the standard error stream, followed by a newline."
msgstr "バッチモードでは後に改行が付加されたメッセージが標準エラーストリームにプリントされる。"

#. type: defun
#: original_texis/display.texi:278
msgid "When @code{inhibit-message} is non-@code{nil}, no message will be displayed in the echo area, it will only be logged to @samp{*Messages*}."
msgstr "@code{inhibit-message}が非@code{nil}のときはエコーエリアにはメッセージを何も表示せずに@samp{*Messages*}へのロギングだけとなる。"

#. type: defun
#: original_texis/display.texi:284
msgid "If @var{format-string} is @code{nil} or the empty string, @code{message} clears the echo area; if the echo area has been expanded automatically, this brings it back to its normal size.  If the minibuffer is active, this brings the minibuffer contents back onto the screen immediately."
msgstr "@var{format-string}が@code{nil}か空文字列なら、@code{message}はエコーエリアをクリアーする。エコーエリアが自動的に拡張されていたら、これにより通常のサイズに復元される。ミニバッファーがアクティブなら、これによりスクリーン上に即座にミニバッファーのコンテンツが復元される。"

#. type: group
#: original_texis/display.texi:290
#, no-wrap
msgid ""
"(message \"Reverting `%s'...\" (buffer-name))\n"
" @print{} Reverting ‘subr.el’...\n"
"@result{} \"Reverting ‘subr.el’...\"\n"
msgstr ""
"(message \"Reverting `%s'...\" (buffer-name))\n"
" @print{} Reverting ‘subr.el’...\n"
"@result{} \"Reverting ‘subr.el’...\"\n"

#. type: group
#: original_texis/display.texi:296
#, no-wrap
msgid ""
"---------- Echo Area ----------\n"
"Reverting ‘subr.el’...\n"
"---------- Echo Area ----------\n"
msgstr ""
"---------- Echo Area ----------\n"
"Reverting ‘subr.el’...\n"
"---------- Echo Area ----------\n"

#. type: defun
#: original_texis/display.texi:301
msgid "To automatically display a message in the echo area or in a pop-buffer, depending on its size, use @code{display-message-or-buffer} (see below)."
msgstr "エコーエリアやポップバッファー内に自動的にメッセージを表示するには、そのサイズに応じて@code{display-message-or-buffer} (以下参照)を使用する。"

#. type: defun
#: original_texis/display.texi:307
msgid "@strong{Warning:} If you want to use your own string as a message verbatim, don't just write @code{(message @var{string})}.  If @var{string} contains @samp{%}, @samp{`}, or @samp{'} it may be reformatted, with undesirable results.  Instead, use @code{(message \"%s\" @var{string})}."
msgstr "@strong{警告:} 逐語的なメッセージとして独自の文字列を使用したければ、単に@code{(message @var{string})}と記述してはならない。@var{string}に@samp{%}、@samp{`}、@samp{'}が含まれていると望まぬ結果に再フォーマットされるかもしれない。かわりに@code{(message \"%s\" @var{string})}を使用すること。"

#. type: defvar
#: original_texis/display.texi:309
#, no-wrap
msgid "inhibit-message"
msgstr "inhibit-message"

#. type: defvar
#: original_texis/display.texi:312
msgid "When this variable is non-@code{nil}, @code{message} and related functions will not use the Echo Area to display messages."
msgstr "この変数が非@code{nil}なら、@code{message}および関連する関数はメッセージの表示にエコーエリアを使用しない。"

#. type: defmac
#: original_texis/display.texi:314
#, no-wrap
msgid "with-temp-message message &rest body"
msgstr "with-temp-message message &rest body"

#. type: defmac
#: original_texis/display.texi:319
msgid "This construct displays a message in the echo area temporarily, during the execution of @var{body}.  It displays @var{message}, executes @var{body}, then returns the value of the last body form while restoring the previous echo area contents."
msgstr "この構文は@var{body}実行の間にエコーエリア内にメッセージを一時的に表示する。これは@var{message}を表示して@var{body}を実行して、それからエコーエリアの前のコンテンツをリストアするとともにbodyの最後のフォームの値をリターンする。"

#. type: defun
#: original_texis/display.texi:321
#, no-wrap
msgid "message-or-box format-string &rest arguments"
msgstr "message-or-box format-string &rest arguments"

#. type: defun
#: original_texis/display.texi:330
msgid "This function displays a message like @code{message}, but may display it in a dialog box instead of the echo area.  If this function is called in a command that was invoked using the mouse---more precisely, if @code{last-nonmenu-event} (@pxref{Command Loop Info}) is either @code{nil} or a list---then it uses a dialog box or pop-up menu to display the message.  Otherwise, it uses the echo area.  (This is the same criterion that @code{y-or-n-p} uses to make a similar decision; see @ref{Yes-or-No Queries}.)"
msgstr "この関数は@code{message}と同様にメッセージを表示するが、エコーエリアではなくダイアログボックスにメッセージを表示するかもしれない。この関数があるコマンド内からマウスを使用して呼び出されると --- より正確には@code{last-nonmenu-event} (@ref{Command Loop Info}を参照)が@code{nil}かリストならメッセージの表示にダイアログボックスかポップアップメニュー、それ以外ならエコーエリアを使用する(これは@code{y-or-n-p}が同様の決定を行う際に使用する条件と同じ。@ref{Yes-or-No Queries}を参照)。"

#. type: defun
#: original_texis/display.texi:333
msgid "You can force use of the mouse or of the echo area by binding @code{last-nonmenu-event} to a suitable value around the call."
msgstr "呼び出しの前後で@code{last-nonmenu-event}を適切な値にバインドすることによりエコーエリアでのマウスの使用を強制できる。"

#. type: defun
#: original_texis/display.texi:335
#, no-wrap
msgid "message-box format-string &rest arguments"
msgstr "message-box format-string &rest arguments"

#. type: anchor{#1}
#: original_texis/display.texi:342
msgid "message-box"
msgstr "message-box"

#. type: defun
#: original_texis/display.texi:342
msgid "This function displays a message like @code{message}, but uses a dialog box (or a pop-up menu) whenever that is possible.  If it is impossible to use a dialog box or pop-up menu, because the terminal does not support them, then @code{message-box} uses the echo area, like @code{message}."
msgstr "この関数は@code{message}と同様にメッセージを表示するが、利用可能なら常にダイアログボックス(かポップアップメニュー)を使用する。端末がサポートしないためにダイアログボックスやポップアップメニューが使用できなければ、@code{message-box}は@code{message}と同様にエコーエリアを使用する。"

#. type: defun
#: original_texis/display.texi:344
#, no-wrap
msgid "display-message-or-buffer message &optional buffer-name action frame"
msgstr "display-message-or-buffer message &optional buffer-name action frame"

#. type: defun
#: original_texis/display.texi:350
msgid "This function displays the message @var{message}, which may be either a string or a buffer.  If it is shorter than the maximum height of the echo area, as defined by @code{max-mini-window-height}, it is displayed in the echo area, using @code{message}.  Otherwise, @code{display-buffer} is used to show it in a pop-up buffer."
msgstr "この関数はメッセージ@var{message}を表示する。@var{message}には文字列かバッファーを指定できる。これが@code{max-mini-window-height}で定義されるエコーエリアの最大高さより小さければ、@code{message}を使用してエコーエリアに表示される。それ以外ならメッセージを表示するために@code{display-buffer}はポップアップバッファーを使用する。"

#. type: defun
#: original_texis/display.texi:353
msgid "Returns either the string shown in the echo area, or when a pop-up buffer is used, the window used to display it."
msgstr "エコーエリアに表示したメッセージ、またはポップアップバッファー使用時はその表示に使用したウィンドウをリターンする。"

#. type: defun
#: original_texis/display.texi:359
msgid "If @var{message} is a string, then the optional argument @var{buffer-name} is the name of the buffer used to display it when a pop-up buffer is used, defaulting to @file{*Message*}.  In the case where @var{message} is a string and displayed in the echo area, it is not specified whether the contents are inserted into the buffer anyway."
msgstr "@var{message}が文字列ならオプション引数@var{buffer-name}はポップアップバッファー使用時にメッセージ表示に使用するバッファー名(デフォルトは@file{*Message*})。@var{message}が文字列でエコーエリアに表示されていれば、いずれにせよコンテンツをバッファーに挿入するかどうかは指定されない。"

#. type: defun
#: original_texis/display.texi:362
msgid "The optional arguments @var{action} and @var{frame} are as for @code{display-buffer}, and only used if a buffer is displayed."
msgstr "オプション引数@var{action}と@var{frame}は@code{display-buffer}の場合と同様に、バッファーが表示されている場合のみ使用される。"

#. type: defun
#: original_texis/display.texi:364
#, no-wrap
msgid "current-message"
msgstr "current-message"

#. type: defun
#: original_texis/display.texi:367
msgid "This function returns the message currently being displayed in the echo area, or @code{nil} if there is none."
msgstr "この関数はエコーエリア内にカレントで表示されているメッセージ、またはそれが存在しなければ@code{nil}をリターンする。"

#. type: subsection
#: original_texis/display.texi:370
#, no-wrap
msgid "Reporting Operation Progress"
msgstr "Reporting Operation Progress"

#. type: cindex
#: original_texis/display.texi:371
#, no-wrap
msgid "progress reporting"
msgstr "progress reporting"

#. type: Plain text
#: original_texis/display.texi:377
msgid "When an operation can take a while to finish, you should inform the user about the progress it makes.  This way the user can estimate remaining time and clearly see that Emacs is busy working, not hung.  A convenient way to do this is to use a @dfn{progress reporter}."
msgstr "処理の完了まで暫く時間を要するかもしれない際には、進行状況についてユーザーに通知するべきです。これによりユーザーが残り時間を予測するとともに、Emacsがhungしているのではなく処理中であることを明確に確認できます。@dfn{プログレスリポーター(progress reporter: 進行状況リポーター)}を使用するのが、これを行う便利な方法です。"

#. type: Plain text
#: original_texis/display.texi:379
msgid "Here is a working example that does nothing useful:"
msgstr "以下は何も有用なことを行わない実行可能な例です:"

#. type: smallexample
#: original_texis/display.texi:388
#, no-wrap
msgid ""
"(let ((progress-reporter\n"
"       (make-progress-reporter \"Collecting mana for Emacs...\"\n"
"                               0  500)))\n"
"  (dotimes (k 500)\n"
"    (sit-for 0.01)\n"
"    (progress-reporter-update progress-reporter k))\n"
"  (progress-reporter-done progress-reporter))\n"
msgstr ""
"(let ((progress-reporter\n"
"       (make-progress-reporter \"Collecting mana for Emacs...\"\n"
"                               0  500)))\n"
"  (dotimes (k 500)\n"
"    (sit-for 0.01)\n"
"    (progress-reporter-update progress-reporter k))\n"
"  (progress-reporter-done progress-reporter))\n"

#. type: defun
#: original_texis/display.texi:390
#, no-wrap
msgid "make-progress-reporter message &optional min-value max-value current-value min-change min-time"
msgstr "make-progress-reporter message &optional min-value max-value current-value min-change min-time"

#. type: defun
#: original_texis/display.texi:395
msgid "This function creates and returns a progress reporter object, which you will use as an argument for the other functions listed below.  The idea is to precompute as much data as possible to make progress reporting very fast."
msgstr "この関数は以下に挙げる他の関数の引数として使用されることになるプログレスリポーターオブジェクトを作成してリターンする。これはプログレスリポーターを高速にするように、可能なかぎり多くのデータを事前に計算するというアイデアが元となっている。"

#. type: defun
#: original_texis/display.texi:401
msgid "When this progress reporter is subsequently used, it will display @var{message} in the echo area, followed by progress percentage.  @var{message} is treated as a simple string.  If you need it to depend on a filename, for instance, use @code{format-message} before calling this function."
msgstr "この後にプログレスリポーターを使用する際には、進行状況のパーセンテージを後に付加して@var{message}が表示されるだろう。@var{message}は単なる文字列として扱われる。たとえばファイル名に依存させる必要があるなら、この関数の呼び出し前に@code{format-message}を使えばよい。"

#. type: defun
#: original_texis/display.texi:407
msgid "The arguments @var{min-value} and @var{max-value} should be numbers standing for the starting and final states of the operation.  For instance, an operation that scans a buffer should set these to the results of @code{point-min} and @code{point-max} correspondingly.  @var{max-value} should be greater than @var{min-value}."
msgstr "引数@var{min-value}と@var{max-value}は処理の開始と終了を意味する数値であること。たとえばバッファーをスキャンする処理なら、これらをそれぞれ@code{point-min}と@code{point-max}にセットするべきだろう。@var{max-value}は@var{min-value}より大であること。"

#. type: defun
#: original_texis/display.texi:412
msgid "Alternatively, you can set @var{min-value} and @var{max-value} to @code{nil}.  In that case, the progress reporter does not report process percentages; it instead displays a ``spinner'' that rotates a notch each time you update the progress reporter."
msgstr "かわりに@var{min-value}と@var{max-value}を@code{nil}にセットすることができる。この場合にはプログレスリポーターは進行状況のパーセンテージを報告しない。かわりにプログレスリポーターを更新するたびに刻み(notch)を回転する``スピナー(spinner)''を表示する。"

#. type: defun
#: original_texis/display.texi:416
msgid "If @var{min-value} and @var{max-value} are numbers, you can give the argument @var{current-value} a numerical value specifying the initial progress; if omitted, this defaults to @var{min-value}."
msgstr "@var{min-value}と@var{max-value}が数値なら、進行状況の初期の数値を与える引数@var{current-value}を与えることができる。省略時のデフォルトは@var{min-value}。"

#. type: defun
#: original_texis/display.texi:424
msgid "The remaining arguments control the rate of echo area updates.  The progress reporter will wait for at least @var{min-change} more percents of the operation to be completed before printing next message; the default is one percent.  @var{min-time} specifies the minimum time in seconds to pass between successive prints; the default is 0.2 seconds.  (On some operating systems, the progress reporter may handle fractions of seconds with varying precision)."
msgstr "残りの引数はエコーエリアの更新レートを制御する。プログレスリポーターは次のメッセージを表示する前に、その処理が少なくとも@var{min-change}パーセントより多く完了するまで待機する。デフォルトは1パーセント。@var{min-time}は連続するプリントの間に空ける最小時間をミリ秒単位で指定する(いくつかのオペレーティングシステムではプログレスリポーターは秒の少数部をさまざまな精度で処理するかもしれない)。"

#. type: defun
#: original_texis/display.texi:427
msgid "This function calls @code{progress-reporter-update}, so the first message is printed immediately."
msgstr "この関数は@code{progress-reporter-update}を呼び出すので、最初のメッセージは即座にプリントされる。"

#. type: defun
#: original_texis/display.texi:429
#, no-wrap
msgid "progress-reporter-update reporter &optional value"
msgstr "progress-reporter-update reporter &optional value"

#. type: defun
#: original_texis/display.texi:435
msgid "This function does the main work of reporting progress of your operation.  It displays the message of @var{reporter}, followed by progress percentage determined by @var{value}.  If percentage is zero, or close enough according to the @var{min-change} and @var{min-time} arguments, then it is omitted from the output."
msgstr "この関数は操作の進行状況報告に関する主要な機能を担う。これは@var{reporter}のメッセージと、その後に@var{value}により決定された進行状況のパーセンテージを表示する。パーセンテージが0、または引数@var{min-change}と@var{min-time}に比べて十分0に近ければ出力は省略される。"

#. type: defun
#: original_texis/display.texi:442
msgid "@var{reporter} must be the result of a call to @code{make-progress-reporter}.  @var{value} specifies the current state of your operation and must be between @var{min-value} and @var{max-value} (inclusive) as passed to @code{make-progress-reporter}.  For instance, if you scan a buffer, then @var{value} should be the result of a call to @code{point}."
msgstr "@var{reporter}は@code{make-progress-reporter}呼び出しがリターンした結果でなければならない。@var{value}は処理のカレント状況を指定して、@code{make-progress-reporter}に渡された@var{min-value}と@var{max-value}の間(両端を含む)でなければならない。たとえばバッファーのスキャンにおいては、@var{value}は@code{point}び呼び出し結果であるべきだろう。"

#. type: defun
#: original_texis/display.texi:448
msgid "This function respects @var{min-change} and @var{min-time} as passed to @code{make-progress-reporter} and so does not output new messages on every invocation.  It is thus very fast and normally you should not try to reduce the number of calls to it: resulting overhead will most likely negate your effort."
msgstr "この関数は@code{make-progress-reporter}に渡された@var{min-change}と@var{min-time}にしたがい、毎回の呼び出しで新たなメッセージを出力しない。したがってこれは非常に高速であり、通常はこれを呼び出す回数を減らすことを試みるべきではない。結果として生じるオーバーヘッドは、あなたの努力をほぼ否定するだろう。"

#. type: defun
#: original_texis/display.texi:450
#, no-wrap
msgid "progress-reporter-force-update reporter &optional value new-message"
msgstr "progress-reporter-force-update reporter &optional value new-message"

#. type: defun
#: original_texis/display.texi:453
msgid "This function is similar to @code{progress-reporter-update} except that it prints a message in the echo area unconditionally."
msgstr "この関数は@code{progress-reporter-update}と同様だが、これは無条件にメッセージをエコーエリアにプリントする点が異なる。"

#. type: defun
#: original_texis/display.texi:459
msgid "The first two arguments have the same meaning as for @code{progress-reporter-update}.  Optional @var{new-message} allows you to change the message of the @var{reporter}.  Since this function always updates the echo area, such a change will be immediately presented to the user."
msgstr "最初の2つの引数は@code{progress-reporter-update}の場合と同じ意味をもつ。オプションの@var{new-message}で@var{reporter}のメッセージを変更できる。この関数は常にエコーエリアを更新するので、そのような変更は即座にユーザーに示されるだろう。"

#. type: defun
#: original_texis/display.texi:461
#, no-wrap
msgid "progress-reporter-done reporter"
msgstr "progress-reporter-done reporter"

#. type: defun
#: original_texis/display.texi:465
msgid "This function should be called when the operation is finished.  It prints the message of @var{reporter} followed by word @samp{done} in the echo area."
msgstr "この関数は処理の完了時に呼び出されること。これはエコーエリア内に単語@samp{done}を付加した@var{reporter}のメッセージを表示する。"

#. type: defun
#: original_texis/display.texi:470
msgid "You should always call this function and not hope for @code{progress-reporter-update} to print @samp{100%}.  Firstly, it may never print it, there are many good reasons for this not to happen.  Secondly, @samp{done} is more explicit."
msgstr "@code{progress-reporter-update}に@samp{100%}とプリントさせようとせずに、常にこの関数を呼び出すこと。まずこの関数は決してそれをプリントしないだろうし、これが発生しないために多くの正当な理由がある。次に@samp{done}はより自明である。"

#. type: defmac
#: original_texis/display.texi:472
#, no-wrap
msgid "dotimes-with-progress-reporter (var count [result]) message body@dots{}"
msgstr "dotimes-with-progress-reporter (var count [result]) message body@dots{}"

#. type: defmac
#: original_texis/display.texi:476
msgid "This is a convenience macro that works the same way as @code{dotimes} does, but also reports loop progress using the functions described above.  It allows you to save some typing."
msgstr "これは@code{dotimes}と同じ方法で機能するが、上述の関数を使用してループ進行状況(loop progress)の報告も行う便利なマクロである。これによりタイプ量を幾分節約できる。"

#. type: defmac
#: original_texis/display.texi:479
msgid "You can rewrite the example in the beginning of this node using this macro this way:"
msgstr "以下の方法でこのマクロを使用することにより、このセクション冒頭の例を書き換えることができる:"

#. type: example
#: original_texis/display.texi:485
#, no-wrap
msgid ""
"(dotimes-with-progress-reporter\n"
"    (k 500)\n"
"    \"Collecting some mana for Emacs...\"\n"
"  (sit-for 0.01))\n"
msgstr ""
"(dotimes-with-progress-reporter\n"
"    (k 500)\n"
"    \"Collecting some mana for Emacs...\"\n"
"  (sit-for 0.01))\n"

#. type: subsection
#: original_texis/display.texi:489
#, no-wrap
msgid "Logging Messages in @file{*Messages*}"
msgstr "Logging Messages in @file{*Messages*}"

#. type: cindex
#: original_texis/display.texi:490
#, no-wrap
msgid "logging echo-area messages"
msgstr "logging echo-area messages"

#. type: Plain text
#: original_texis/display.texi:501
msgid "Almost all the messages displayed in the echo area are also recorded in the @file{*Messages*} buffer so that the user can refer back to them.  This includes all the messages that are output with @code{message}.  By default, this buffer is read-only and uses the major mode @code{messages-buffer-mode}.  Nothing prevents the user from killing the @file{*Messages*} buffer, but the next display of a message recreates it.  Any Lisp code that needs to access the @file{*Messages*} buffer directly and wants to ensure that it exists should use the function @code{messages-buffer}."
msgstr "エコーエリア内に表示されるほとんどすべてのメッセージは、ユーザーが後で参照できるように@file{*Messages*}バッファー内にも記録されます。これには@code{message}により出力されたメッセージも含まれます。デフォルトではこのバッファーは読み取り専用でメジャーモード@code{messages-buffer-mode}を使用します。ユーザーによる@file{*Messages*}バッファーのkillを妨げるものは何もありませんが、次回のメッセージ表示でバッファーは再作成されます。@file{*Messages*}バッファーに直接アクセスする必要があり、それが確実に存在するようにしたいLispコードは、すべて関数@code{messages-buffer}を使用するべきです。"

#. type: defun
#: original_texis/display.texi:502
#, no-wrap
msgid "messages-buffer"
msgstr "messages-buffer"

#. type: defun
#: original_texis/display.texi:505
msgid "This function returns the @file{*Messages*} buffer.  If it does not exist, it creates it, and switches it to @code{messages-buffer-mode}."
msgstr "この関数は@file{*Messages*}バッファーをリターンする。バッファーが存在しなければ作成してバッファーを@code{messages-buffer-mode}に切り替える。"

#. type: defopt
#: original_texis/display.texi:507
#, no-wrap
msgid "message-log-max"
msgstr "message-log-max"

#. type: defopt
#: original_texis/display.texi:512
msgid "This variable specifies how many lines to keep in the @file{*Messages*} buffer.  The value @code{t} means there is no limit on how many lines to keep.  The value @code{nil} disables message logging entirely.  Here's how to display a message and prevent it from being logged:"
msgstr "この変数は@file{*Messages*}バッファー内に保持するべき行数を指定する。値@code{t}は保持すべき行数に制限がないことを意味して、値@code{nil}はメッセージのロギングを完全に無効にする。以下はメッセージを表示して、それがロギングされることを防ぐ例:"

#. type: example
#: original_texis/display.texi:516
#, no-wrap
msgid ""
"(let (message-log-max)\n"
"  (message @dots{}))\n"
msgstr ""
"(let (message-log-max)\n"
"  (message @dots{}))\n"

#. type: Plain text
#: original_texis/display.texi:523
msgid "To make @file{*Messages*} more convenient for the user, the logging facility combines successive identical messages.  It also combines successive related messages for the sake of two cases: question followed by answer, and a series of progress messages."
msgstr "@file{*Messages*}にたいするユーザーの利便性を向上させるために、ロギング機能は連続する同じメッセージを結合します。さらに2つのケースのために連続する関連メッセージの結合も行います。2つのケースとは応答を後にともなう質問(question followed by answer)、および一連のプログレスメッセージ(series of progress messages)です。"

#. type: Plain text
#: original_texis/display.texi:529
msgid "A question followed by an answer has two messages like the ones produced by @code{y-or-n-p}: the first is @samp{@var{question}}, and the second is @samp{@var{question}...@var{answer}}.  The first message conveys no additional information beyond what's in the second, so logging the second message discards the first from the log."
msgstr "応答を後にともなう質問(question followed by an answer)とは、1つ目が@samp{@var{question}}、2つ目が@samp{@var{question}...@var{answer}}のように@code{y-or-n-p}が生成するような2つのメッセージをもつ応答です。1つ目のメッセージは2つ目のメッセージ以上の追加情報を伝えないので、2つ目のメッセージをロギングして1つ目のメッセージは破棄します。"

#. type: Plain text
#: original_texis/display.texi:535
msgid "A series of progress messages has successive messages like those produced by @code{make-progress-reporter}.  They have the form @samp{@var{base}...@var{how-far}}, where @var{base} is the same each time, while @var{how-far} varies.  Logging each message in the series discards the previous one, provided they are consecutive."
msgstr "一連のプログレスメッセージ(series of progress messages)は、@code{make-progress-reporter}が生成するような連続するメッセージをもちます。これらは@samp{@var{base}...@var{how-far}}のような形式であり、@var{how-far}は毎回異なりますが@var{base}は常に同じです。このシリーズ内の各メッセージのロギングでは、そのメッセージが前のメッセージと連続していれば前のメッセージを破棄します。"

#. type: Plain text
#: original_texis/display.texi:540
msgid "The functions @code{make-progress-reporter} and @code{y-or-n-p} don't have to do anything special to activate the message log combination feature.  It operates whenever two consecutive messages are logged that share a common prefix ending in @samp{...}."
msgstr "関数@code{make-progress-reporter}と@code{y-or-n-p}は、メッセージログ結合機能をアクティブにするために何ら特別なことを行う必要はありません。これは@samp{...}で終わる共通のプレフィックスを共有する連続する2つのメッセージをログする際には常にこの処理を行います。"

#. type: cindex
#: original_texis/display.texi:543
#, no-wrap
msgid "echo area customization"
msgstr "echo area customization"

#. type: Plain text
#: original_texis/display.texi:546
msgid "These variables control details of how the echo area works."
msgstr "以下の変数はエコーエリアが機能する方法の詳細を制御します。"

#. type: defvar
#: original_texis/display.texi:547
#, no-wrap
msgid "cursor-in-echo-area"
msgstr "cursor-in-echo-area"

#. type: defvar
#: original_texis/display.texi:552
msgid "This variable controls where the cursor appears when a message is displayed in the echo area.  If it is non-@code{nil}, then the cursor appears at the end of the message.  Otherwise, the cursor appears at point---not in the echo area at all."
msgstr "この変数はエコーエリア内にメッセージ表示時にカーソルを表示する場所を制御する。これが非@code{nil}ならカーソルはメッセージの終端、それ以外ならカーソルはエコーエリア内ではなくポイント位置に表示される。"

#. type: defvar
#: original_texis/display.texi:555
msgid "The value is normally @code{nil}; Lisp programs bind it to @code{t} for brief periods of time."
msgstr "この値は通常は@code{nil}。Lispプログラムは短時間の間、これを@code{t}にバインドする。"

#. type: defvar
#: original_texis/display.texi:557
#, no-wrap
msgid "echo-area-clear-hook"
msgstr "echo-area-clear-hook"

#. type: defvar
#: original_texis/display.texi:560
msgid "This normal hook is run whenever the echo area is cleared---either by @code{(message nil)} or for any other reason."
msgstr "このノーマルフックは@code{(message nil)}、または別の何らかの理由によりエコーエリアが作成されると常に実行される。"

#. type: defopt
#: original_texis/display.texi:562
#, no-wrap
msgid "echo-keystrokes"
msgstr "echo-keystrokes"

#. type: defopt
#: original_texis/display.texi:570
msgid "This variable determines how much time should elapse before command characters echo.  Its value must be a number, and specifies the number of seconds to wait before echoing.  If the user types a prefix key (such as @kbd{C-x}) and then delays this many seconds before continuing, the prefix key is echoed in the echo area.  (Once echoing begins in a key sequence, all subsequent characters in the same key sequence are echoed immediately.)"
msgstr "この変数はコマンド文字をエコーする前に、どれだけの時間を待機するかを決定する。この値は数字でなければならず、エコー前に待機する秒数を指定する。ユーザーが(@kbd{C-x}のような)プレフィックスキーをタイプしてから、継続してタイプを継続するのをこの秒数遅延した場合、エコーエリア内にそのプレフィックスキーがエコーされる(あるキーシーケンスで一度エコーが開始されると、同一のキーシーケンス内の後続するすべての文字は即座にエコーされる)。"

#. type: defopt
#: original_texis/display.texi:572
msgid "If the value is zero, then command input is not echoed."
msgstr "値が0ならコマンド入力はエコーされない。"

#. type: defvar
#: original_texis/display.texi:574
#, no-wrap
msgid "message-truncate-lines"
msgstr "message-truncate-lines"

#. type: defvar
#: original_texis/display.texi:579
msgid "Normally, displaying a long message resizes the echo area to display the entire message.  But if the variable @code{message-truncate-lines} is non-@code{nil}, the echo area does not resize, and the message is truncated to fit it."
msgstr "長いメッセージの表示により、そのメッセージ全体を表示するために、通常はエコーエリアはリサイズされる。しかし変数@code{message-truncate-lines}が非@code{nil}なら、エコーエリアをリサイズせずエコーエリアに収まるようメッセージは切り詰められる。"

#. type: Plain text
#: original_texis/display.texi:585
msgid "The variable @code{max-mini-window-height}, which specifies the maximum height for resizing minibuffer windows, also applies to the echo area (which is really a special use of the minibuffer window; @pxref{Minibuffer Windows})."
msgstr "ミニバッファーウィンドウのリサイズの最大高さを指定する変数@code{max-mini-window-height}はエコーエリアにも適用される(エコーエリアは真にミニバッファーウィンドウの特殊な使い方である。@ref{Minibuffer Windows}を参照)。"

#. type: section
#: original_texis/display.texi:587
#, no-wrap
msgid "Reporting Warnings"
msgstr "Reporting Warnings"

#. type: cindex
#: original_texis/display.texi:588
#, no-wrap
msgid "warnings"
msgstr "warnings"

#. type: Plain text
#: original_texis/display.texi:592
msgid "@dfn{Warnings} are a facility for a program to inform the user of a possible problem, but continue running."
msgstr "@dfn{警告(warnings)}とはプログラムがユーザーにたいして問題の可能性を知らせるが、実行は継続するための機能です。"

#. type: subsection
#: original_texis/display.texi:598 original_texis/display.texi:600
#: original_texis/display.texi:601
#, no-wrap
msgid "Warning Basics"
msgstr "Warning Basics"

#. type: menuentry
#: original_texis/display.texi:598
msgid "Warnings concepts and functions to report them."
msgstr "警告の概念と報告するための関数。"

#. type: subsection
#: original_texis/display.texi:598 original_texis/display.texi:669
#: original_texis/display.texi:670
#, no-wrap
msgid "Warning Variables"
msgstr "Warning Variables"

#. type: menuentry
#: original_texis/display.texi:598
msgid "Variables programs bind to customize their warnings."
msgstr "プログラムが警告をカスタマイズするためにバインドする変数。"

#. type: subsection
#: original_texis/display.texi:598 original_texis/display.texi:747
#: original_texis/display.texi:748
#, no-wrap
msgid "Warning Options"
msgstr "Warning Options"

#. type: menuentry
#: original_texis/display.texi:598
msgid "Variables users set to control display of warnings."
msgstr "ユーザーが警告の表示を制御するためにセットする変数。"

#. type: subsection
#: original_texis/display.texi:598 original_texis/display.texi:781
#: original_texis/display.texi:782
#, no-wrap
msgid "Delayed Warnings"
msgstr "Delayed Warnings"

#. type: menuentry
#: original_texis/display.texi:598
msgid "Deferring a warning until the end of a command."
msgstr "コマンド終了まで警告を延期する。"

#. type: cindex
#: original_texis/display.texi:602
#, no-wrap
msgid "severity level"
msgstr "severity level"

#. type: Plain text
#: original_texis/display.texi:608
msgid "Every warning has a textual message, which explains the problem for the user, and a @dfn{severity level} which is a symbol.  Here are the possible severity levels, in order of decreasing severity, and their meanings:"
msgstr "すべての警告は、ユーザーに問題を説明するためのテキストのメッセージと、@dfn{重大レベル(severity level)}をもっています。重大レベルはシンボルです。以下は可能性のある重大レベルとその意味を、重大度の降順でリストしたものです:"

#. type: item
#: original_texis/display.texi:610
#, no-wrap
msgid ":emergency"
msgstr ":emergency"

#. type: table
#: original_texis/display.texi:613
msgid "A problem that will seriously impair Emacs operation soon if you do not attend to it promptly."
msgstr "直ちに対処しなければEmacs処理が間もなく深刻に害される問題。"

#. type: item
#: original_texis/display.texi:613
#, no-wrap
msgid ":error"
msgstr ":error"

#. type: table
#: original_texis/display.texi:615
msgid "A report of data or circumstances that are inherently wrong."
msgstr "本質的に悪いデータや状況のリポート。"

#. type: item
#: original_texis/display.texi:615
#, no-wrap
msgid ":warning"
msgstr ":warning"

#. type: table
#: original_texis/display.texi:618
msgid "A report of data or circumstances that are not inherently wrong, but raise suspicion of a possible problem."
msgstr "本質的に悪くはないが、可能性のある問題を励起する恐れのあるデータや状況のリポート。"

#. type: item
#: original_texis/display.texi:618
#, no-wrap
msgid ":debug"
msgstr ":debug"

#. type: table
#: original_texis/display.texi:620
msgid "A report of information that may be useful if you are debugging."
msgstr "デバッグ中なら有用かもしれない情報のリポート。"

#. type: Plain text
#: original_texis/display.texi:634
msgid "When your program encounters invalid input data, it can either signal a Lisp error by calling @code{error} or @code{signal} or report a warning with severity @code{:error}.  Signaling a Lisp error is the easiest thing to do, but it means the program cannot continue processing.  If you want to take the trouble to implement a way to continue processing despite the bad data, then reporting a warning of severity @code{:error} is the right way to inform the user of the problem.  For instance, the Emacs Lisp byte compiler can report an error that way and continue compiling other functions.  (If the program signals a Lisp error and then handles it with @code{condition-case}, the user won't see the error message; it could show the message to the user by reporting it as a warning.)"
msgstr "あなたのプログラムが無効な入力データに遭遇した際には、@code{error}呼び出しによるLispエラーのシグナルするか、または重大度@code{:error}の警告をリポートすることができます。Lispエラーのシグナルはもっとも簡単に行えることですが、それはプログラムが処理を継続できないことを意味します。間違ったデータでも処理を継続するための方法を実装するためにトラブルを受け取めたい場合には、その問題をユーザーに知らせるために重大度@code{:error}の警告をリポートするのが正しい方法です。たとえばEmacs Lispバイトコンパイラーはこの方法によりエラーを報告して、他の関数のコンパイルを継続できます(プログラムがLispエラーをシグナルして@code{condition-case}でhandleしたならユーザーがそのエラーを確認することはないだろう。これは警告としてリポートすることによりユーザーにメッセージを示すことができる)。"

#. type: cindex
#: original_texis/display.texi:638
#, no-wrap
msgid "warning type"
msgstr "warning type"

#. type: Plain text
#: original_texis/display.texi:645
msgid "Each warning has a @dfn{warning type} to classify it.  The type is a list of symbols.  The first symbol should be the custom group that you use for the program's user options.  For example, byte compiler warnings use the warning type @code{(bytecomp)}.  You can also subcategorize the warnings, if you wish, by using more symbols in the list."
msgstr "クラス分けのために警告にはそれぞれ@dfn{警告タイプ(warning type)}があります。このタイプはシンボルのリストです。最初のシンボルはそのプログラムのユーザーオプションとして使用するカスタムグループであるべきです。たとえばバイトコンパイラーの警告は警告タイプ@code{(bytecomp)}を使用します。もし望むなら、このリスト内で更にシンボルを使用することにより警告をサブカテゴリー化することもできます。"

#. type: defun
#: original_texis/display.texi:646
#, no-wrap
msgid "display-warning type message &optional level buffer-name"
msgstr "display-warning type message &optional level buffer-name"

#. type: defun
#: original_texis/display.texi:650
msgid "This function reports a warning, using @var{message} as the message and @var{type} as the warning type.  @var{level} should be the severity level, with @code{:warning} being the default."
msgstr "この関数はメッセージとして@var{message}、警告タイプとして@var{type}を使用して警告をリポートする。@var{level}は重大レベルであること。デフォルトは@code{:warning}。"

#. type: defun
#: original_texis/display.texi:653
msgid "@var{buffer-name}, if non-@code{nil}, specifies the name of the buffer for logging the warning.  By default, it is @file{*Warnings*}."
msgstr "@var{buffer-name}が非@code{nil}なら、それは警告をロギングするためのバッファー名を指定する。デフォルトは@file{*Warnings*}。"

#. type: defun
#: original_texis/display.texi:655
#, no-wrap
msgid "lwarn type level message &rest args"
msgstr "lwarn type level message &rest args"

#. type: defun
#: original_texis/display.texi:659
msgid "This function reports a warning using the value of @code{(format-message @var{message} @var{args}...)} as the message in the @file{*Warnings*} buffer.  In other respects it is equivalent to @code{display-warning}."
msgstr "この関数は@file{*Warnings*}バッファー内のメッセージとして@code{(format-message @var{message} @var{args}...)}の値を使用して警告をリポートする。他の点ではこれは@code{display-warning}と同じ。"

#. type: defun
#: original_texis/display.texi:661
#, no-wrap
msgid "warn message &rest args"
msgstr "warn message &rest args"

#. type: defun
#: original_texis/display.texi:667
msgid "This function reports a warning using the value of @code{(format-message @var{message} @var{args}...)} as the message, @code{(emacs)} as the type, and @code{:warning} as the severity level.  It exists for compatibility only; we recommend not using it, because you should specify a specific warning type."
msgstr "この関数はメッセージとして@code{(format-message @var{message} @var{args}...)}の値、タイプとして@code{(emacs)}、重大レベルとして@code{:warning}を使用して警告をリポートする。これは互換性のためだけに存在する。固有な警告タイプを指定するべきであり、この関数の使用は推奨しない。"

#. type: cindex
#: original_texis/display.texi:671
#, no-wrap
msgid "warning variables"
msgstr "warning variables"

#. type: Plain text
#: original_texis/display.texi:675
msgid "Programs can customize how their warnings appear by binding the variables described in this section."
msgstr "このセクション内で説明する変数をバインドすることにより、プログラムは警告が表示される方法をカスタマイズできます。"

#. type: defvar
#: original_texis/display.texi:676
#, no-wrap
msgid "warning-levels"
msgstr "warning-levels"

#. type: defvar
#: original_texis/display.texi:680
msgid "This list defines the meaning and severity order of the warning severity levels.  Each element defines one severity level, and they are arranged in order of decreasing severity."
msgstr "このリストは警告の重大レベルの意味と重大度の順序を定義する。それぞれの要素は1つの重大レベルを定義して、それらを重大度の降順で配置した。"

#. type: defvar
#: original_texis/display.texi:687
msgid "Each element has the form @code{(@var{level} @var{string} @var{function})}, where @var{level} is the severity level it defines.  @var{string} specifies the textual description of this level.  @var{string} should use @samp{%s} to specify where to put the warning type information, or it can omit the @samp{%s} so as not to include that information."
msgstr "各要素は@code{(@var{level} @var{string} @var{function})}という形式をもち、@var{level}はその要素が定義する重大レベル。@var{string}はそのレベルのテキストによる説明。@var{string}は警告タイプ情報の配置箇所の指定に@samp{%s}を使用するか、さもなくばその情報を含まぬよう@samp{%s}を省略できる。"

#. type: defvar
#: original_texis/display.texi:690
msgid "The optional @var{function}, if non-@code{nil}, is a function to call with no arguments, to get the user's attention."
msgstr "オプションの@var{function}が非@code{nil}なら、これはユーザーの注目を得るために引数なしで呼び出される関数であること。"

#. type: defvar
#: original_texis/display.texi:692
msgid "Normally you should not change the value of this variable."
msgstr "通常はこの変数の値を変更しないこと。"

#. type: defvar
#: original_texis/display.texi:694
#, no-wrap
msgid "warning-prefix-function"
msgstr "warning-prefix-function"

#. type: defvar
#: original_texis/display.texi:700
msgid "If non-@code{nil}, the value is a function to generate prefix text for warnings.  Programs can bind the variable to a suitable function.  @code{display-warning} calls this function with the warnings buffer current, and the function can insert text in it.  That text becomes the beginning of the warning message."
msgstr "値が非@code{nil}なら、それは警告用にプレフィックスを生成する関数であること。プログラムはこの変数を適切な関数にバインドできる。@code{display-warning}はwarningsバッファーがカレントの状態でこの関数を呼び出して、関数はそのバッファーにテキストを挿入できる。そのテキストが警告メッセージの先頭になる。"

#. type: defvar
#: original_texis/display.texi:707
msgid "The function is called with two arguments, the severity level and its entry in @code{warning-levels}.  It should return a list to use as the entry (this value need not be an actual member of @code{warning-levels}).  By constructing this value, the function can change the severity of the warning, or specify different handling for a given severity level."
msgstr "この関数は重大レベル、および@code{warning-levels}内でのその重大レベルのエントリーという2つの引数で呼び出される。これはエントリーとして使用するためのリストをリターンすること(この値は@code{warning-levels}の実際のメンバーである必要はない)。この値を構築することにより関数はその警告の重大レベルを変更したり、与えられた重大レベルにたいして異なる処理を指定することができる。"

#. type: defvar
#: original_texis/display.texi:710
msgid "If the variable's value is @code{nil} then there is no function to call."
msgstr "この変数の値が@code{nil}なら呼び出される関数は存在しない。"

#. type: defvar
#: original_texis/display.texi:712
#, no-wrap
msgid "warning-series"
msgstr "warning-series"

#. type: defvar
#: original_texis/display.texi:719
msgid "Programs can bind this variable to @code{t} to say that the next warning should begin a series.  When several warnings form a series, that means to leave point on the first warning of the series, rather than keep moving it for each warning so that it appears on the last one.  The series ends when the local binding is unbound and @code{warning-series} becomes @code{nil} again."
msgstr "プログラムは次の警告がシリーズの開始であることを告げるために、この変数を@code{t}にバインドできる。複数の警告がシリーズを形成するということは、それぞれの警告にたいしてポイントが維持されるように移動して、最後の警告にポイントが表示されるのではなくシリーズの最初の警告にポイントを残すことを意味する。このシリーズは、そのローカルバインドが非バインドされて@code{warning-series}が再び@code{nil}になったときに終了する。"

#. type: defvar
#: original_texis/display.texi:725
msgid "The value can also be a symbol with a function definition.  That is equivalent to @code{t}, except that the next warning will also call the function with no arguments with the warnings buffer current.  The function can insert text which will serve as a header for the series of warnings."
msgstr "この値は関数定義をもつシンボルでもよい。これは次の警告によりwarningsバッファーがカレントの状態で、引数なしでその関数が呼び出されることを除き@code{t}と等価。この関数は警告シリーズのヘッダーの役目をもつであろうテキストを挿入できる。"

#. type: defvar
#: original_texis/display.texi:728
msgid "Once a series has begun, the value is a marker which points to the buffer position in the warnings buffer of the start of the series."
msgstr "あるシリーズが開始されると、その値はwarningsバッファー内でシリーズ開始となるバッファー位置を指すマーカーとなる。"

#. type: defvar
#: original_texis/display.texi:731
msgid "The variable's normal value is @code{nil}, which means to handle each warning separately."
msgstr "この変数の通常の値は@code{nil}で、これはそれぞれの警告を個別に処理することを意味する。"

#. type: defvar
#: original_texis/display.texi:733
#, no-wrap
msgid "warning-fill-prefix"
msgstr "warning-fill-prefix"

#. type: defvar
#: original_texis/display.texi:736
msgid "When this variable is non-@code{nil}, it specifies a fill prefix to use for filling each warning's text."
msgstr "この変数が非@code{nil}なら、それは各警告テキストのフィルに使用するフィルプレフィックスを指定する。"

#. type: defvar
#: original_texis/display.texi:738
#, no-wrap
msgid "warning-type-format"
msgstr "warning-type-format"

#. type: defvar
#: original_texis/display.texi:745
msgid "This variable specifies the format for displaying the warning type in the warning message.  The result of formatting the type this way gets included in the message under the control of the string in the entry in @code{warning-levels}.  The default value is @code{\" (%s)\"}.  If you bind it to @code{\"\"} then the warning type won't appear at all."
msgstr "この変数は警告メッセージ内の警告タイプを表示するためのフォーマットを指定する。この方法でフォーマットされたタイプは、@code{warning-levels}内のエントリー内の文字列制御下にあるメッセージに含まれることになる。デフォルト値は@code{\" (%s)\"}。これを@code{\"\"}にバインドすると警告タイプはまったく表示されなくなる。"

#. type: cindex
#: original_texis/display.texi:749
#, no-wrap
msgid "warning options"
msgstr "warning options"

#. type: Plain text
#: original_texis/display.texi:753
msgid "These variables are used by users to control what happens when a Lisp program reports a warning."
msgstr "以下の変数は何が発生したときにLispプログラムが警告をリポートするかをユーザーが制御するために使用されます。"

#. type: defopt
#: original_texis/display.texi:754
#, no-wrap
msgid "warning-minimum-level"
msgstr "warning-minimum-level"

#. type: defopt
#: original_texis/display.texi:759
msgid "This user option specifies the minimum severity level that should be shown immediately to the user.  The default is @code{:warning}, which means to immediately display all warnings except @code{:debug} warnings."
msgstr "このユーザーオプションはユーザーにたいして即座に表示されるべき最小の重大レベルを指定する。デフォルトは@code{:warning}であり、これは@code{:debug}警告を除くすべての警告が即座に表示されることを意味する。"

#. type: defopt
#: original_texis/display.texi:761
#, no-wrap
msgid "warning-minimum-log-level"
msgstr "warning-minimum-log-level"

#. type: defopt
#: original_texis/display.texi:765
msgid "This user option specifies the minimum severity level that should be logged in the warnings buffer.  The default is @code{:warning}, which means to log all warnings except @code{:debug} warnings."
msgstr "このユーザーオプションはwarningsバッファー内にログされるべき最小の重大レベルを指定する。デフォルトは@code{:warning}であり、これは@code{:debug}警告を除くすべての警告がログされることを意味する。"

#. type: defopt
#: original_texis/display.texi:767
#, no-wrap
msgid "warning-suppress-types"
msgstr "warning-suppress-types"

#. type: defopt
#: original_texis/display.texi:772
msgid "This list specifies which warning types should not be displayed immediately for the user.  Each element of the list should be a list of symbols.  If its elements match the first elements in a warning type, then that warning is not displayed immediately."
msgstr "このリストはユーザーにたいしてどの警告タイプを即座に表示するべきではないかを指定する。このリスト内の各要素はシンボルのリストであること。それの要素が警告タイプ内の最初の要素にマッチしたら警告は即座に表示されない。"

#. type: defopt
#: original_texis/display.texi:774
#, no-wrap
msgid "warning-suppress-log-types"
msgstr "warning-suppress-log-types"

#. type: defopt
#: original_texis/display.texi:779
msgid "This list specifies which warning types should not be logged in the warnings buffer.  Each element of the list should be a list of symbols.  If it matches the first few elements in a warning type, then that warning is not logged."
msgstr "このリストはユーザーにたいしてどの警告タイプがwarningsバッファーにログされるべきではないかを指定する。このリスト内の各要素はシンボルのリストであること。それの要素が警告タイプ内の最初の数要素にマッチしたら警告はログされない。"

#. type: cindex
#: original_texis/display.texi:783
#, no-wrap
msgid "delayed warnings"
msgstr "delayed warnings"

#. type: Plain text
#: original_texis/display.texi:788
msgid "Sometimes, you may wish to avoid showing a warning while a command is running, and only show it only after the end of the command.  You can use the variable @code{delayed-warnings-list} for this."
msgstr "コマンド実行中には警告の表示を避けてコマンドの終わりでのみ警告を表示したいことがあるかもしれません。これは変数@code{delayed-warnings-list}により行うことができます。"

#. type: defvar
#: original_texis/display.texi:789
#, no-wrap
msgid "delayed-warnings-list"
msgstr "delayed-warnings-list"

#. type: defvar
#: original_texis/display.texi:792
msgid "The value of this variable is a list of warnings to be displayed after the current command has finished.  Each element must be a list"
msgstr "この変数の値はカレントのコマンド完了後に表示される警告のリスト。各要素は以下のようなリストでなければならない:"

#. type: smallexample
#: original_texis/display.texi:795
#, no-wrap
msgid "(@var{type} @var{message} [@var{level} [@var{buffer-name}]])\n"
msgstr "(@var{type} @var{message} [@var{level} [@var{buffer-name}]])\n"

#. type: defvar
#: original_texis/display.texi:803
msgid "with the same form, and the same meanings, as the argument list of @code{display-warning} (@pxref{Warning Basics}).  Immediately after running @code{post-command-hook} (@pxref{Command Overview}), the Emacs command loop displays all the warnings specified by this variable, then resets it to @code{nil}."
msgstr "これらは@code{display-warning}の引数リストと同じ形式、同じ意味である(@ref{Warning Basics}を参照)。@code{post-command-hook} (@ref{Command Overview}を参照)の実行直後に、Emacsのコマンドループはこの変数で指定されたすべての警告を表示してから変数を@code{nil}にリセットする。"

#. type: Plain text
#: original_texis/display.texi:807
msgid "Programs which need to further customize the delayed warnings mechanism can change the variable @code{delayed-warnings-hook}:"
msgstr "遅延警告メカニズムをよりカスタマイズする必要があるプログラムは変数@code{delayed-warnings-hook}を変更することができます:"

#. type: defvar
#: original_texis/display.texi:808
#, no-wrap
msgid "delayed-warnings-hook"
msgstr "delayed-warnings-hook"

#. type: defvar
#: original_texis/display.texi:812
msgid "This is a normal hook which is run by the Emacs command loop, after @code{post-command-hook}, in order to process and display delayed warnings."
msgstr "これは遅延警告を処理して表示するために、@code{post-command-hook}の後にEmacsコマンドループが実行するノーマルフック。"

#. type: defvar
#: original_texis/display.texi:814
msgid "Its default value is a list of two functions:"
msgstr "デフォルト値は2つの関数からなるリスト:"

#. type: smallexample
#: original_texis/display.texi:817
#, no-wrap
msgid "(collapse-delayed-warnings display-delayed-warnings)\n"
msgstr "(collapse-delayed-warnings display-delayed-warnings)\n"

#. type: findex
#: original_texis/display.texi:819
#, no-wrap
msgid "collapse-delayed-warnings"
msgstr "collapse-delayed-warnings"

#. type: findex
#: original_texis/display.texi:820
#, no-wrap
msgid "display-delayed-warnings"
msgstr "display-delayed-warnings"

#. type: defvar
#: original_texis/display.texi:827
msgid "The function @code{collapse-delayed-warnings} removes repeated entries from @code{delayed-warnings-list}.  The function @code{display-delayed-warnings} calls @code{display-warning} on each of the entries in @code{delayed-warnings-list}, in turn, and then sets @code{delayed-warnings-list} to @code{nil}."
msgstr "関数@code{collapse-delayed-warnings}は@code{delayed-warnings-list}から重複するエントリーを削除する。関数@code{display-delayed-warnings}は@code{delayed-warnings-list}内の各要素にたいして順次@code{display-warning}を呼び出してから、@code{delayed-warnings-list}を@code{nil}にセットする。"

#. type: cindex
#: original_texis/display.texi:832
#, no-wrap
msgid "invisible text"
msgstr "invisible text"

#. type: Plain text
#: original_texis/display.texi:840
msgid "You can make characters @dfn{invisible}, so that they do not appear on the screen, with the @code{invisible} property.  This can be either a text property (@pxref{Text Properties}) or an overlay property (@pxref{Overlays}).  Cursor motion also partly ignores these characters; if the command loop finds that point is inside a range of invisible text after a command, it relocates point to the other side of the text."
msgstr "@code{invisible}プロパティにより、スクリーン上に表示されないように文字を@dfn{不可視(invisible)}にすることができます。これはテキストプロパティ(@ref{Text Properties}を参照)、またはオーバーレイプロパティ(@ref{Overlays}を参照)のいずれかで行うことができます。カーソル移動もこれらの文字を部分的に無視します。あるコマンドの後に不可視テキスト範囲内にポイントがあることをコマンドループが検知した場合には、コマンドループはポイントをそのテキストの別サイドへ再配置します。"

#. type: Plain text
#: original_texis/display.texi:847
msgid "In the simplest case, any non-@code{nil} @code{invisible} property makes a character invisible.  This is the default case---if you don't alter the default value of @code{buffer-invisibility-spec}, this is how the @code{invisible} property works.  You should normally use @code{t} as the value of the @code{invisible} property if you don't plan to set @code{buffer-invisibility-spec} yourself."
msgstr "もっともシンプルなケースでは、非@code{nil}の@code{invisible}プロパティにより文字は不可視になります。これがデフォルトのケースであり、もし@code{buffer-invisibility-spec}のデフォルト値を変更したくない場合には、これが@code{invisible}プロパティを機能させる方法です。自身で@code{buffer-invisibility-spec}をセットする予定がなければ、@code{invisible}プロパティの値として通常は@code{t}を使用するべきです。"

#. type: Plain text
#: original_texis/display.texi:854
msgid "More generally, you can use the variable @code{buffer-invisibility-spec} to control which values of the @code{invisible} property make text invisible.  This permits you to classify the text into different subsets in advance, by giving them different @code{invisible} values, and subsequently make various subsets visible or invisible by changing the value of @code{buffer-invisibility-spec}."
msgstr "より一般的にはどの@code{invisible}の値がテキストを不可視にするかを制御するために変数@code{buffer-invisibility-spec}を使用できます。テキストにたいして異なる@code{invisible}の値を与えることにより、事前に別のサブセットへテキストをクラス分けした後に@code{buffer-invisibility-spec}の値を変更して、さまざまなサブセットを可視や不可視にすることができます。"

#. type: Plain text
#: original_texis/display.texi:861
msgid "Controlling visibility with @code{buffer-invisibility-spec} is especially useful in a program to display the list of entries in a database.  It permits the implementation of convenient filtering commands to view just a part of the entries in the database.  Setting this variable is very fast, much faster than scanning all the text in the buffer looking for properties to change."
msgstr "特にデータベース内のエントリーのリストを表示するプログラム内では、@code{buffer-invisibility-spec}による可視性の制御は有用です。これによりデータベース内の一部だけを閲覧するフィルターコマンドを簡便に実装することが可能になります。この変数をセットするのは非常に高速であり、バッファー内のすべてのテキストにたいしてプロパティが変更されたかスキャンするよりはるかに高速です。"

#. type: defvar
#: original_texis/display.texi:862
#, no-wrap
msgid "buffer-invisibility-spec"
msgstr "buffer-invisibility-spec"

#. type: defvar
#: original_texis/display.texi:866
msgid "This variable specifies which kinds of @code{invisible} properties actually make a character invisible.  Setting this variable makes it buffer-local."
msgstr "この変数はどの種類の@code{invisible}プロパティが実際に文字を不可視にするかを指定する。この変数はセットすることによりバッファーローカルになる。"

#. type: code{#1}
#: original_texis/display.texi:868 original_texis/display.texi:2325
#: original_texis/display.texi:2363 original_texis/display.texi:2531
#, no-wrap
msgid "t"
msgstr "t"

#. type: table
#: original_texis/display.texi:871
msgid "A character is invisible if its @code{invisible} property is non-@code{nil}.  This is the default."
msgstr "@code{invisible}プロパティが非@code{nil}ならその文字は不可視になる。これがデフォルト。"

#. type: item
#: original_texis/display.texi:872 original_texis/display.texi:2536
#, no-wrap
msgid "a list"
msgstr "リスト"

#. type: table
#: original_texis/display.texi:876
msgid "Each element of the list specifies a criterion for invisibility; if a character's @code{invisible} property fits any one of these criteria, the character is invisible.  The list can have two kinds of elements:"
msgstr "このリスト内の各要素は不可視性の条件を指定する。ある文字の@code{invisible}プロパティがこれらの条件のいずれかに適合したら、その文字は不可視になる。このリストは2種類の要素をもつことができる:"

#. type: var{#1}
#: original_texis/display.texi:878
#, no-wrap
msgid "atom"
msgstr "atom"

#. type: table
#: original_texis/display.texi:882
msgid "A character is invisible if its @code{invisible} property value is @var{atom} or if it is a list with @var{atom} as a member; comparison is done with @code{eq}."
msgstr "@code{invisible}プロパティの値が@var{atom}、または@var{atom}をメンバーにもつリストならその文字は不可視になる。比較は@code{eq}により行われる。"

#. type: item
#: original_texis/display.texi:883
#, no-wrap
msgid "(@var{atom} . t)"
msgstr "(@var{atom} . t)"

#. type: table
#: original_texis/display.texi:888
msgid "A character is invisible if its @code{invisible} property value is @var{atom} or if it is a list with @var{atom} as a member; comparison is done with @code{eq}.  Moreover, a sequence of such characters displays as an ellipsis."
msgstr "@code{invisible}プロパティの値が@var{atom}、または@var{atom}をメンバーにもつリストならその文字は不可視になる。比較は@code{eq}により行われる。さらにそのような文字シーケンスは省略記号(ellipsis)として表示される。"

#. type: Plain text
#: original_texis/display.texi:894
msgid "Two functions are specifically provided for adding elements to @code{buffer-invisibility-spec} and removing elements from it."
msgstr "特に@code{buffer-invisibility-spec}への要素の追加と削除のために2つの関数が提供されています。"

#. type: defun
#: original_texis/display.texi:895
#, no-wrap
msgid "add-to-invisibility-spec element"
msgstr "add-to-invisibility-spec element"

#. type: defun
#: original_texis/display.texi:900
msgid "This function adds the element @var{element} to @code{buffer-invisibility-spec}.  If @code{buffer-invisibility-spec} was @code{t}, it changes to a list, @code{(t)}, so that text whose @code{invisible} property is @code{t} remains invisible."
msgstr "この関数は、@code{buffer-invisibility-spec}に要素@var{element}を追加する。@code{buffer-invisibility-spec}が@code{t}なら、これはリスト@code{(t)}に変更されて@code{invisible}プロパティが@code{t}のテキストは不可視のまま留まる。"

#. type: defun
#: original_texis/display.texi:902
#, no-wrap
msgid "remove-from-invisibility-spec element"
msgstr "remove-from-invisibility-spec element"

#. type: defun
#: original_texis/display.texi:906
msgid "This removes the element @var{element} from @code{buffer-invisibility-spec}.  This does nothing if @var{element} is not in the list."
msgstr "この関数は@code{buffer-invisibility-spec}から要素@var{element}を削除する。リスト内に@var{element}がなければ何も行わない。"

#. type: Plain text
#: original_texis/display.texi:912
msgid "A convention for use of @code{buffer-invisibility-spec} is that a major mode should use the mode's own name as an element of @code{buffer-invisibility-spec} and as the value of the @code{invisible} property:"
msgstr "@code{buffer-invisibility-spec}を使用するための規約として、メジャーモードは@code{buffer-invisibility-spec}の要素、および@code{invisible}プロパティの値として自身のモード名を使用することになっている。"

#. type: example
#: original_texis/display.texi:918
#, no-wrap
msgid ""
";; @r{If you want to display an ellipsis:}\n"
"(add-to-invisibility-spec '(my-symbol . t))\n"
";; @r{If you don't want ellipsis:}\n"
"(add-to-invisibility-spec 'my-symbol)\n"
"\n"
msgstr ""
";; @r{省略記号を表示したければ:}\n"
"(add-to-invisibility-spec '(my-symbol . t))\n"
";; @r{表示したくなければ:}\n"
"(add-to-invisibility-spec 'my-symbol)\n"
"\n"

#. type: example
#: original_texis/display.texi:921
#, no-wrap
msgid ""
"(overlay-put (make-overlay beginning end)\n"
"             'invisible 'my-symbol)\n"
"\n"
msgstr ""
"(overlay-put (make-overlay beginning end)\n"
"             'invisible 'my-symbol)\n"
"\n"

#. type: example
#: original_texis/display.texi:926
#, no-wrap
msgid ""
";; @r{When done with the invisibility:}\n"
"(remove-from-invisibility-spec '(my-symbol . t))\n"
";; @r{Or respectively:}\n"
"(remove-from-invisibility-spec 'my-symbol)\n"
msgstr ""
";; @r{不可視状態が終わったら:}\n"
"(remove-from-invisibility-spec '(my-symbol . t))\n"
";; @r{または各々を:}\n"
"(remove-from-invisibility-spec 'my-symbol)\n"

#. type: Plain text
#: original_texis/display.texi:929
msgid "You can check for invisibility using the following function:"
msgstr "以下の関数を使用することにより不可視性をチェックできます:"

#. type: defun
#: original_texis/display.texi:930
#, no-wrap
msgid "invisible-p pos-or-prop"
msgstr "invisible-p pos-or-prop"

#. type: defun
#: original_texis/display.texi:934
msgid "If @var{pos-or-prop} is a marker or number, this function returns a non-@code{nil} value if the text at that position is currently invisible."
msgstr "この関数は@var{pos-or-prop}がマーカーか数字の場合には、その位置のテキストがカレントで不可視なら非@code{nil}をリターンする。"

#. type: defun
#: original_texis/display.texi:940
msgid "If @var{pos-or-prop} is any other kind of Lisp object, that is taken to mean a possible value of the @code{invisible} text or overlay property.  In that case, this function returns a non-@code{nil} value if that value would cause text to become invisible, based on the current value of @code{buffer-invisibility-spec}."
msgstr "@var{pos-or-prop}が別の類のLispオブジェクトなら、テキストプロパティかオーバーレイプロパティとして可能な値を意味すると解釈される。この場合には@code{buffer-invisibility-spec}のカレント値にもとづき、もしその値がテキストを不可視とするようならこの関数は非@code{nil}をリターンする。"

#. type: defun
#: original_texis/display.texi:944
msgid "The return value of this function is @code{t} if the text would be completely hidden on display, or a non-@code{nil}, non-@code{t} value if the text would be replaced by an ellipsis."
msgstr "この関数のリターン値はテキストがディスプレー上で完全に非表示なら@code{t}、省略記号(ellipsis)で置き換えられていれば@code{nil}でも@code{t}でもない値となる。"

#. type: vindex
#: original_texis/display.texi:946
#, no-wrap
msgid "line-move-ignore-invisible"
msgstr "line-move-ignore-invisible"

#. type: Plain text
#: original_texis/display.texi:954
msgid "Ordinarily, functions that operate on text or move point do not care whether the text is invisible, they process invisible characters and visible characters alike.  The user-level line motion commands, such as @code{next-line}, @code{previous-line}, ignore invisible newlines if @code{line-move-ignore-invisible} is non-@code{nil} (the default), i.e., behave like these invisible newlines didn't exist in the buffer, but only because they are explicitly programmed to do so."
msgstr "テキストを操作したりポイントを移動する関数は、通常はそのテキストが不可視かどうかに注意を払わずに、可視と不可視のテキストを同様に処理します。@code{next-line}や@code{previous-line}のようなユーザーレベルの行移動関数は@code{line-move-ignore-invisible}が非@code{nil} (デフォルト)なら不可視な改行を無視します。これらの関数は不可視な改行がそのバッファーに存在しないかのように振る舞いますが、それはそう振る舞うように明示的にプログラムされているからです。"

#. type: Plain text
#: original_texis/display.texi:965
msgid "If a command ends with point inside or at the boundary of invisible text, the main editing loop relocates point to one of the two ends of the invisible text.  Emacs chooses the direction of relocation so that it is the same as the overall movement direction of the command; if in doubt, it prefers a position where an inserted char would not inherit the @code{invisible} property.  Additionally, if the text is not replaced by an ellipsis and the command only moved within the invisible text, then point is moved one extra character so as to try and reflect the command's movement by a visible movement of the cursor."
msgstr "あるコマンドが不可視テキストの境界内側のポイントで終了した場合には、メイン編集ループはその不可視テキストの両端のうちのいずれかにポイントを再配置します。そのコマンドの移動関数の全体的な方向と同じになるようにEmacsが再配置の方向を決定します。これに疑問がある場合には、挿入された文字が@code{invisible}プロパティを継承しないような位置を優先してください。加えてそのテキストが省略記号で置換されずに、コマンドが不可視テキスト内への移動のみを行う場合には、ポイントを1文字余計に移動して目に見えるようカーソルを移動することにより、そのコマンドの移動を反映するよう試みます。"

#. type: Plain text
#: original_texis/display.texi:971
msgid "Thus, if the command moved point back to an invisible range (with the usual stickiness), Emacs moves point back to the beginning of that range.  If the command moved point forward into an invisible range, Emacs moves point forward to the first visible character that follows the invisible text and then forward one more character."
msgstr "したがってコマンドが(通常のstickinessをもつ)不可視範囲に後方へとポイントを移動すると、Emacsはポイントをその範囲の先頭に後方へと移動します。コマンドが不可視範囲へ前方にポイントを移動した場合には、Emacsは不可視テキストの前にある最初の可視文字に前方へとポイントを移動して、その後さらに前方へ1文字余計に移動します。"

#. type: Plain text
#: original_texis/display.texi:975
msgid "These @dfn{adjustments} of point that ended up in the middle of invisible text can be disabled by setting @code{disable-point-adjustment} to a non-@code{nil} value.  @xref{Adjusting Point}."
msgstr "これら不可視テキスト中間で終了するポイントにたいするこれらの@dfn{調整(adjustments)}は、@code{disable-point-adjustment}を非@code{nil}にセットすることにより無効にできます。@ref{Adjusting Point}を参照してください。"

#. type: Plain text
#: original_texis/display.texi:983
msgid "Incremental search can make invisible overlays visible temporarily and/or permanently when a match includes invisible text.  To enable this, the overlay should have a non-@code{nil} @code{isearch-open-invisible} property.  The property value should be a function to be called with the overlay as an argument.  This function should make the overlay visible permanently; it is used when the match overlaps the overlay on exit from the search."
msgstr "インクリメンタル検索はマッチが不可視テキストを含む場合には、一時的および/または永続的に不可視オーバーレイを可視にすることができます。これを有効にするためには、そのオーバーレイが非@code{nil}の@code{isearch-open-invisible}プロパティをもつ必要があります。プロパティの値は、そのオーバーレイを引数として呼び出される関数であるべきです。その関数はオーバーレイを永続的に可視にする必要があります。これは検索からのexit時にマッチがそのオーバーレイに重なるときに使用されます。"

#. type: Plain text
#: original_texis/display.texi:991
msgid "During the search, such overlays are made temporarily visible by temporarily modifying their invisible and intangible properties.  If you want this to be done differently for a certain overlay, give it an @code{isearch-open-invisible-temporary} property which is a function.  The function is called with two arguments: the first is the overlay, and the second is @code{nil} to make the overlay visible, or @code{t} to make it invisible again."
msgstr "検索の間にそのようなオーバーレイのinvisible、およびintangibleプロパティを一時的に変更することによりオーバーレイは一時的に可視にされます。特定のオーバーレイにたいして異なる方法でこれを行いたいなら、それを@code{isearch-open-invisible-temporary}プロパティ(関数)に与えてください。その関数は2つの引数により呼び出されます。1つ目はそのオーバーレイ、2つ目は@code{nil}ならオーバーレイを可視、@code{t}なら再び不可視にします。"

#. type: Plain text
#: original_texis/display.texi:998
msgid "@dfn{Selective display} refers to a pair of related features for hiding certain lines on the screen."
msgstr "@dfn{選択的表示(selective display)}とはスクリーン上で特定の行を隠蔽する関連する機能ペアーを指します。"

#. type: cindex
#: original_texis/display.texi:999
#, no-wrap
msgid "explicit selective display"
msgstr "explicit selective display"

#. type: Plain text
#: original_texis/display.texi:1004
msgid "The first variant, explicit selective display, was designed for use in a Lisp program: it controls which lines are hidden by altering the text.  This kind of hiding is now obsolete; instead you can get the same effect with the @code{invisible} property (@pxref{Invisible Text})."
msgstr "1つ目の変種は明示的な選択的表示であり、これはLispプログラム内で使用するようにデザインされています。これはテキスト変更により、どの行を隠すかを制御します。この種の隠蔽は現在では時代遅れです。かわりに@code{invisible}プロパティで同じ効果を得ることができます(@ref{Invisible Text}を参照)。"

#. type: Plain text
#: original_texis/display.texi:1008
msgid "In the second variant, the choice of lines to hide is made automatically based on indentation.  This variant is designed to be a user-level feature."
msgstr "2つ目の変種はインデントにもとづいて隠す行の選択を自動的に行います。この変種はユーザーレベルの機能としてデザインされています。"

#. type: Plain text
#: original_texis/display.texi:1014
msgid "The way you control explicit selective display is by replacing a newline (control-j) with a carriage return (control-m).  The text that was formerly a line following that newline is now hidden.  Strictly speaking, it is temporarily no longer a line at all, since only newlines can separate lines; it is now part of the previous line."
msgstr "選択的表示を明示的に制御する方法では改行(control-j)を復帰(control-m)に置換します。これにより以前は行末に改行があった行は隠蔽されます。厳密に言うと改行だけが行を分離できるので、これはもはや一時的には行ではなく前の行の一部です。"

#. type: Plain text
#: original_texis/display.texi:1023
msgid "Selective display does not directly affect editing commands.  For example, @kbd{C-f} (@code{forward-char}) moves point unhesitatingly into hidden text.  However, the replacement of newline characters with carriage return characters affects some editing commands.  For example, @code{next-line} skips hidden lines, since it searches only for newlines.  Modes that use selective display can also define commands that take account of the newlines, or that control which parts of the text are hidden."
msgstr "選択的表示は編集コマンドに直接影響を与えません。たとえば@kbd{C-f} (@code{forward-char})は隠蔽された行へと気軽にポイントを移動します。しかし復帰文字による改行文字の置換は、いくつかの編集コマンドに影響を与えます。たとえば@code{next-line}は改行だけを検索するために、隠蔽された行をスキップします。選択的表示を使用するモードは改行を考慮するコマンドを定義したり、テキストのどの部分を隠すか制御することもできます。"

#. type: Plain text
#: original_texis/display.texi:1028
msgid "When you write a selectively displayed buffer into a file, all the control-m's are output as newlines.  This means that when you next read in the file, it looks OK, with nothing hidden.  The selective display effect is seen only within Emacs."
msgstr "選択的表示されたバッファーをファイルに書き込む際には、control-mはすべて改行として出力されます。これはファイル内のテキストを読み取る際には、すべて問題なく隠蔽されずに表示されることを意味します。選択的表示はEmacs内でのみ顕在する効果です。"

#. type: defvar
#: original_texis/display.texi:1029
#, no-wrap
msgid "selective-display"
msgstr "selective-display"

#. type: defvar
#: original_texis/display.texi:1032
msgid "This buffer-local variable enables selective display.  This means that lines, or portions of lines, may be made hidden."
msgstr "このバッファーローカル変数は選択的表示を有効にする。これは行、または行の一部を隠すことができることを意味する。"

#. type: itemize
#: original_texis/display.texi:1039
msgid "If the value of @code{selective-display} is @code{t}, then the character control-m marks the start of hidden text; the control-m, and the rest of the line following it, are not displayed.  This is explicit selective display."
msgstr "@code{selective-display}の値が@code{t}なら、文字control-mが隠蔽されたテキストの開始をマークする。control-mと後続する行の残りは表示されない。これは明示的な選択的表示である。"

#. type: itemize
#: original_texis/display.texi:1044
msgid "If the value of @code{selective-display} is a positive integer, then lines that start with more than that many columns of indentation are not displayed."
msgstr "@code{selective-display}の値が正の整数なら、それより多くの列によるインデントで始まる行は表示されない。"

#. type: defvar
#: original_texis/display.texi:1052
msgid "When some portion of a buffer is hidden, the vertical movement commands operate as if that portion did not exist, allowing a single @code{next-line} command to skip any number of hidden lines.  However, character movement commands (such as @code{forward-char}) do not skip the hidden portion, and it is possible (if tricky) to insert or delete text in an hidden portion."
msgstr "バッファーの一部が隠蔽されている際には、垂直移動コマンドはあたかもその部分を存在しないかのように処理して、1回の@code{next-line}コマンドで任意の行数の隠蔽された行をスキップできる。しかし(@code{forward-char}のような)文字移動コマンドは隠蔽された部分をスキップせずに、(注意すれば)隠蔽された部分にたいしてテキストの挿入と削除が可能である。"

#. type: defvar
#: original_texis/display.texi:1057
msgid "In the examples below, we show the @emph{display appearance} of the buffer @code{foo}, which changes with the value of @code{selective-display}.  The @emph{contents} of the buffer do not change."
msgstr "以下の例では@code{selective-display}の値の変更によるバッファー@code{foo}の@emph{外観表示}を示す。このバッファーの@emph{コンテンツ}は変更されない。"

#. type: group
#: original_texis/display.texi:1062
#, no-wrap
msgid ""
"(setq selective-display nil)\n"
"     @result{} nil\n"
"\n"
msgstr ""
"(setq selective-display nil)\n"
"     @result{} nil\n"
"\n"

#. type: group
#: original_texis/display.texi:1071
#, no-wrap
msgid ""
"---------- Buffer: foo ----------\n"
"1 on this column\n"
" 2on this column\n"
"  3n this column\n"
"  3n this column\n"
" 2on this column\n"
"1 on this column\n"
"---------- Buffer: foo ----------\n"
msgstr ""
"---------- Buffer: foo ----------\n"
"1 on this column\n"
" 2on this column\n"
"  3n this column\n"
"  3n this column\n"
" 2on this column\n"
"1 on this column\n"
"---------- Buffer: foo ----------\n"

#. type: group
#: original_texis/display.texi:1076
#, no-wrap
msgid ""
"(setq selective-display 2)\n"
"     @result{} 2\n"
"\n"
msgstr ""
"(setq selective-display 2)\n"
"     @result{} 2\n"
"\n"

#. type: group
#: original_texis/display.texi:1083
#, no-wrap
msgid ""
"---------- Buffer: foo ----------\n"
"1 on this column\n"
" 2on this column\n"
" 2on this column\n"
"1 on this column\n"
"---------- Buffer: foo ----------\n"
msgstr ""
"---------- Buffer: foo ----------\n"
"1 on this column\n"
" 2on this column\n"
" 2on this column\n"
"1 on this column\n"
"---------- Buffer: foo ----------\n"

#. type: defopt
#: original_texis/display.texi:1087
#, no-wrap
msgid "selective-display-ellipses"
msgstr "selective-display-ellipses"

#. type: defopt
#: original_texis/display.texi:1091
msgid "If this buffer-local variable is non-@code{nil}, then Emacs displays @samp{@dots{}} at the end of a line that is followed by hidden text.  This example is a continuation of the previous one."
msgstr "このバッファーローカル変数が非@code{nil}なら、Emacsは隠蔽されたテキストを後にともなう行の終端に@samp{@dots{}}を表示する。以下は前の例からの継続。"

#. type: group
#: original_texis/display.texi:1096
#, no-wrap
msgid ""
"(setq selective-display-ellipses t)\n"
"     @result{} t\n"
"\n"
msgstr ""
"(setq selective-display-ellipses t)\n"
"     @result{} t\n"
"\n"

#. type: group
#: original_texis/display.texi:1103
#, no-wrap
msgid ""
"---------- Buffer: foo ----------\n"
"1 on this column\n"
" 2on this column ...\n"
" 2on this column\n"
"1 on this column\n"
"---------- Buffer: foo ----------\n"
msgstr ""
"---------- Buffer: foo ----------\n"
"1 on this column\n"
" 2on this column ...\n"
" 2on this column\n"
"1 on this column\n"
"---------- Buffer: foo ----------\n"

#. type: defopt
#: original_texis/display.texi:1108
msgid "You can use a display table to substitute other text for the ellipsis (@samp{@dots{}}).  @xref{Display Tables}."
msgstr "省略記号(@samp{@dots{}})にたいして他のテキストを代替えするためにディスプレイテーブルを使用できる。@ref{Display Tables}を参照のこと。"

#. type: cindex
#: original_texis/display.texi:1112
#, no-wrap
msgid "temporary display"
msgstr "temporary display"

#. type: cindex
#: original_texis/display.texi:1113
#, no-wrap
msgid "temporary buffer display"
msgstr "temporary buffer display"

#. type: Plain text
#: original_texis/display.texi:1118
msgid "Temporary displays are used by Lisp programs to put output into a buffer and then present it to the user for perusal rather than for editing.  Many help commands use this feature."
msgstr "一時的表示(temporary display)は出力をバッファーに配置して編集用ではなく閲覧用としてユーザーに示すためにLispプログラムにより使用されます。多くのヘルプコマンドはこの機能を使用します。"

#. type: defmac
#: original_texis/display.texi:1119
#, no-wrap
msgid "with-output-to-temp-buffer buffer-name body@dots{}"
msgstr "with-output-to-temp-buffer buffer-name body@dots{}"

#. type: defmac
#: original_texis/display.texi:1125
msgid "This function executes the forms in @var{body} while arranging to insert any output they print into the buffer named @var{buffer-name}, which is first created if necessary, and put into Help mode.  (See the similar form @code{with-temp-buffer-window} below.)  Finally, the buffer is displayed in some window, but that window is not selected."
msgstr "この関数は@var{buffer-name}という名前のバッファー(必要なら最初に作成される)にプリントされた任意の出力が挿入されるようアレンジ、さらにバッファーをHelpモードにして@var{body}内のフォームを実行する(類似する以下のフォーム@code{with-temp-buffer-window}を参照)。最後にそのバッファーはいずれかのウィンドウに表示されるが、そのウィンドウは選択されない。"

#. type: defmac
#: original_texis/display.texi:1133
msgid "If the forms in @var{body} do not change the major mode in the output buffer, so that it is still Help mode at the end of their execution, then @code{with-output-to-temp-buffer} makes this buffer read-only at the end, and also scans it for function and variable names to make them into clickable cross-references.  @xref{Docstring hyperlinks, , Tips for Documentation Strings}, in particular the item on hyperlinks in documentation strings, for more details."
msgstr "@var{body}内のフォームが出力バッファーのメジャーモードを変更しないため、実行の最後においても依然としてHelpモードにあるなら、@code{with-output-to-temp-buffer}は最後にそのバッファーを読み取り専用するとともに、クリック可能なクロスリファレンスとなるように関数名と変数名のスキャンも行う。特にドキュメント文字列内のハイパーリンク上アイテムに関する詳細は@ref{Docstring hyperlinks, , Tips for Documentation Strings}を参照のこと。"

#. type: defmac
#: original_texis/display.texi:1138
msgid "The string @var{buffer-name} specifies the temporary buffer, which need not already exist.  The argument must be a string, not a buffer.  The buffer is erased initially (with no questions asked), and it is marked as unmodified after @code{with-output-to-temp-buffer} exits."
msgstr "文字列@var{buffer-name}は一時的なバッファーを指定して、これはあらかじめ存在する必要はない。引数はバッファーではなく文字列でなければならない。そのバッファーは最初に消去されて(確認なし)、@code{with-output-to-temp-buffer}のexit後は未変更(unmodified)とマークされる。"

#. type: defmac
#: original_texis/display.texi:1145
msgid "@code{with-output-to-temp-buffer} binds @code{standard-output} to the temporary buffer, then it evaluates the forms in @var{body}.  Output using the Lisp output functions within @var{body} goes by default to that buffer (but screen display and messages in the echo area, although they are ``output'' in the general sense of the word, are not affected).  @xref{Output Functions}."
msgstr "@code{with-output-to-temp-buffer}は@code{standard-output}を一時的バッファーにバインドして@var{body}内のフォームを評価する。@var{body}内のLisp出力関数を使用した出力のデフォルト出力先は、そのバッファーになる(しかしスクリーン表示やエコーエリア内のメッセージは一般的な世界の感覚では``出力''であるものの影響は受けない)。@ref{Output Functions}を参照のこと。"

#. type: defmac
#: original_texis/display.texi:1148
msgid "Several hooks are available for customizing the behavior of this construct; they are listed below."
msgstr "この構構文の振る舞いをカスタマイズするために利用できるフックがいくつかあり、それらは以下にリストしてある。"

#. type: defmac
#: original_texis/display.texi:1150
msgid "The value of the last form in @var{body} is returned."
msgstr "リターン値は@var{body}内の最後のフォームの値。"

#. type: group
#: original_texis/display.texi:1156
#, no-wrap
msgid ""
"---------- Buffer: foo ----------\n"
" This is the contents of foo.\n"
"---------- Buffer: foo ----------\n"
msgstr ""
"---------- Buffer: foo ----------\n"
" This is the contents of foo.\n"
"---------- Buffer: foo ----------\n"

#. type: group
#: original_texis/display.texi:1163
#, no-wrap
msgid ""
"(with-output-to-temp-buffer \"foo\"\n"
"    (print 20)\n"
"    (print standard-output))\n"
"@result{} #<buffer foo>\n"
"\n"
msgstr ""
"(with-output-to-temp-buffer \"foo\"\n"
"    (print 20)\n"
"    (print standard-output))\n"
"@result{} #<buffer foo>\n"
"\n"

#. type: group
#: original_texis/display.texi:1165
#, no-wrap
msgid ""
"---------- Buffer: foo ----------\n"
"\n"
msgstr ""
"---------- Buffer: foo ----------\n"
"\n"

#. type: group
#: original_texis/display.texi:1167
#, no-wrap
msgid ""
"20\n"
"\n"
msgstr ""
"20\n"
"\n"

#. type: group
#: original_texis/display.texi:1169
#, no-wrap
msgid ""
"#<buffer foo>\n"
"\n"
msgstr ""
"#<buffer foo>\n"
"\n"

#. type: group
#: original_texis/display.texi:1171
#, no-wrap
msgid "---------- Buffer: foo ----------\n"
msgstr "---------- Buffer: foo ----------\n"

#. type: defopt
#: original_texis/display.texi:1175
#, no-wrap
msgid "temp-buffer-show-function"
msgstr "temp-buffer-show-function"

#. type: defopt
#: original_texis/display.texi:1179
msgid "If this variable is non-@code{nil}, @code{with-output-to-temp-buffer} calls it as a function to do the job of displaying a help buffer.  The function gets one argument, which is the buffer it should display."
msgstr "この変数が非@code{nil}なら、@code{with-output-to-temp-buffer}はヘルプバッファーを表示する処理を行うためにその関数を呼び出す。この関数は表示すべきバッファーという1つの引数を受け取る。"

#. type: defopt
#: original_texis/display.texi:1184
msgid "It is a good idea for this function to run @code{temp-buffer-show-hook} just as @code{with-output-to-temp-buffer} normally would, inside of @code{save-selected-window} and with the chosen window and buffer selected."
msgstr "@code{with-output-to-temp-buffer}が通常行うように、@code{save-selected-window}内部や選択されたウィンドウ内でバッファーか選択された状態で@code{temp-buffer-show-hook}を実行するのは、この関数にとってよいアイデアである。"

#. type: defvar
#: original_texis/display.texi:1186
#, no-wrap
msgid "temp-buffer-setup-hook"
msgstr "temp-buffer-setup-hook"

#. type: defvar
#: original_texis/display.texi:1191
msgid "This normal hook is run by @code{with-output-to-temp-buffer} before evaluating @var{body}.  When the hook runs, the temporary buffer is current.  This hook is normally set up with a function to put the buffer in Help mode."
msgstr "このノーマルフックは@var{body}を評価する前に@code{with-output-to-temp-buffer}により実行される。フック実行時には一時的バッファーがカレントになる。このフックは通常はそのバッファーをHelpモードにするための関数にセットアップされる。"

#. type: defvar
#: original_texis/display.texi:1193
#, no-wrap
msgid "temp-buffer-show-hook"
msgstr "temp-buffer-show-hook"

#. type: defvar
#: original_texis/display.texi:1197
msgid "This normal hook is run by @code{with-output-to-temp-buffer} after displaying the temporary buffer.  When the hook runs, the temporary buffer is current, and the window it was displayed in is selected."
msgstr "このノーマルフックは一時的バッファー表示後に@code{with-output-to-temp-buffer}により実行される。フック実行時には一時的バッファーがカレントになり、それが表示されているウィンドウが選択される。"

#. type: defmac
#: original_texis/display.texi:1199
#, no-wrap
msgid "with-temp-buffer-window buffer-or-name action quit-function body@dots{}"
msgstr "with-temp-buffer-window buffer-or-name action quit-function body@dots{}"

#. type: defmac
#: original_texis/display.texi:1205
msgid "This macro is similar to @code{with-output-to-temp-buffer}.  Like that construct, it executes @var{body} while arranging to insert any output it prints into the buffer named @var{buffer-or-name} and displays that buffer in some window.  Unlike @code{with-output-to-temp-buffer}, however, it does not automatically switch that buffer to Help mode."
msgstr "このマクロは@code{with-output-to-temp-buffer}と類似している。@code{with-output-to-temp-buffer}構文と同様に、これはプリントされる任意の出力が@var{buffer-or-name}という名前のバッファーに挿入されるようにアレンジして@var{body}を実行して、そのバッファーをいずれかのウィンドウに表示する。しかし@code{with-output-to-temp-buffer}とは異なり、このマクロはそのバッファーを自動的にHelpモードに切り替えない。"

#. type: defmac
#: original_texis/display.texi:1211
msgid "The argument @var{buffer-or-name} specifies the temporary buffer.  It can be either a buffer, which must already exist, or a string, in which case a buffer of that name is created, if necessary.  The buffer is marked as unmodified and read-only when @code{with-temp-buffer-window} exits."
msgstr "引数@var{buffer-or-name}は一時的バッファーを指定する。これはバッファー(既存でなければならない)、または文字列を指定でき、文字列の場合には必要ならその名前のバッファーが作成される。そのバッファーは@code{with-temp-buffer-window}のexit時には、未変更かつ読み取り専用とマークされる。"

#. type: defmac
#: original_texis/display.texi:1215
msgid "This macro does not call @code{temp-buffer-show-function}.  Rather, it passes the @var{action} argument to @code{display-buffer} (@pxref{Choosing Window}) in order to display the buffer."
msgstr "このマクロは@code{temp-buffer-show-function}を呼び出さない。かわりにそのバッファーを表示するために@var{action}引数を@code{display-buffer} (@ref{Choosing Window}を参照)に渡す。"

#. type: defmac
#: original_texis/display.texi:1221
msgid "The value of the last form in @var{body} is returned, unless the argument @var{quit-function} is specified.  In that case, it is called with two arguments: the window showing the buffer and the result of @var{body}.  The final return value is then whatever @var{quit-function} returns."
msgstr "引数@var{quit-function}が指定されていなければ@var{body}内の最後のフォームの値がリターンされる。指定されている場合には、そのバッファーを表示するウィンドウと@var{body}の結果という2つの引数で呼び出される。その場合には、最終的なリターン値は何であれ@var{quit-function}がリターンした値となる。"

#. type: vindex
#: original_texis/display.texi:1222
#, no-wrap
msgid "temp-buffer-window-setup-hook"
msgstr "temp-buffer-window-setup-hook"

#. type: vindex
#: original_texis/display.texi:1223
#, no-wrap
msgid "temp-buffer-window-show-hook"
msgstr "temp-buffer-window-show-hook"

#. type: defmac
#: original_texis/display.texi:1227
msgid "This macro uses the normal hooks @code{temp-buffer-window-setup-hook} and @code{temp-buffer-window-show-hook} in place of the analogous hooks run by @code{with-output-to-temp-buffer}."
msgstr "このマクロは@code{with-output-to-temp-buffer}により実行される類似フックのかわりにノーマルフック@code{temp-buffer-window-setup-hook}と@code{temp-buffer-window-show-hook}を使用する。"

#. type: Plain text
#: original_texis/display.texi:1231
msgid "The two constructs described next are mostly identical to @code{with-temp-buffer-window} but differ from it as specified:"
msgstr "次の2つの構文は@code{with-temp-buffer-window}とほとんど同じですが、説明している点が異なります："

#. type: defmac
#: original_texis/display.texi:1232
#, no-wrap
msgid "with-current-buffer-window buffer-or-name action quit-function &rest body"
msgstr "with-current-buffer-window buffer-or-name action quit-function &rest body"

#. type: defmac
#: original_texis/display.texi:1236
msgid "This macro is like @code{with-temp-buffer-window} but unlike that makes the buffer specified by @var{buffer-or-name} current for running @var{body}."
msgstr "このマクロは@code{with-temp-buffer-window}と同様だが、@var{body}の実行に際して@var{buffer-or-name}で指定したバッファーをカレントにする点が異なる。"

#. type: defmac
#: original_texis/display.texi:1238
#, no-wrap
msgid "with-displayed-buffer-window buffer-or-name action quit-function &rest body"
msgstr "with-displayed-buffer-window buffer-or-name action quit-function &rest body"

#. type: defmac
#: original_texis/display.texi:1242
msgid "This macro is like @code{with-current-buffer-window} but unlike that displays the buffer specified by @var{buffer-or-name} @emph{before} running @var{body}."
msgstr "このマクロは@code{with-temp-buffer-window}と同様だが、@var{body}の実行の@emph{前}に@var{buffer-or-name}で指定したバッファーを表示する点が異なる。"

#. type: Plain text
#: original_texis/display.texi:1246
msgid "A window showing a temporary buffer can be fitted to the size of that buffer using the following mode:"
msgstr "一時バッファーを表示しているウィンドウは以下のモードを使用してそのバッファーにサイズを適合できます:"

#. type: defopt
#: original_texis/display.texi:1247
#, no-wrap
msgid "temp-buffer-resize-mode"
msgstr "temp-buffer-resize-mode"

#. type: defopt
#: original_texis/display.texi:1250
msgid "When this minor mode is enabled, windows showing a temporary buffer are automatically resized to fit their buffer's contents."
msgstr "このマイナーモードが有効なときは、一時的バッファーを表示しているウィンドウはバッファーのコンテンツにフィットするように自動的にリサイズされる。"

#. type: defopt
#: original_texis/display.texi:1257
msgid "A window is resized if and only if it has been specially created for the buffer.  In particular, windows that have shown another buffer before are not resized.  By default, this mode uses @code{fit-window-to-buffer} (@pxref{Resizing Windows}) for resizing.  You can specify a different function by customizing the options @code{temp-buffer-max-height} and @code{temp-buffer-max-width} below."
msgstr "そのバッファーにたいして特別に作成されたウィンドウの場合のみウィンドウはリサイズされる。特に前に別のバッファーを表示していたウィンドウはリサイズされない。デフォルトではこのモードはリサイズに@code{fit-window-to-buffer}を使用する(@ref{Resizing Windows}を参照)。以下のオプション@code{temp-buffer-max-height}と@code{temp-buffer-max-width}をカスタマイズして他の関数を指定できる。"

#. type: defopt
#: original_texis/display.texi:1259
#, no-wrap
msgid "temp-buffer-max-height"
msgstr "temp-buffer-max-height"

#. type: defopt
#: original_texis/display.texi:1266
msgid "This option specifies the maximum height (in lines) of a window displaying a temporary buffer when @code{temp-buffer-resize-mode} is enabled.  It can also be a function to be called to choose the height for such a buffer.  It gets one argument, the buffer, and should return a positive integer.  At the time the function is called, the window to be resized is selected."
msgstr "このオプションは@code{temp-buffer-resize-mode}が有効な際に一時的バッファーを表示するウィンドウの最大高さ(行数)を指定する。その種のバッファーの高さ選択のために呼び出す関数でもよい。これはバッファーを唯一の引数として受け取り、正の整数をリターンすること。関数の呼び出し時にはリサイズされるウィンドウが選択される。"

#. type: defopt
#: original_texis/display.texi:1268
#, no-wrap
msgid "temp-buffer-max-width"
msgstr "temp-buffer-max-width"

#. type: defopt
#: original_texis/display.texi:1275
msgid "This option specifies the maximum width of a window (in columns)  displaying a temporary buffer when @code{temp-buffer-resize-mode} is enabled.  It can also be a function to be called to choose the width for such a buffer.  It gets one argument, the buffer, and should return a positive integer.  At the time the function is called, the window to be resized is selected."
msgstr "このオプションは@code{temp-buffer-resize-mode}が有効な際に一時的バッファーを表示するウィンドウの最大幅(列数)を指定する。その種のバッファーの高さ選択のために呼び出す関数でもよい。これはバッファーを唯一の引数として受け取り、正の整数をリターンすること。関数の呼び出し時にはリサイズされるウィンドウが選択される。"

#. type: Plain text
#: original_texis/display.texi:1278
msgid "The following function uses the current buffer for temporary display:"
msgstr "以下の関数は一時的な表示にカレントバッファーを使用します:"

#. type: defun
#: original_texis/display.texi:1279
#, no-wrap
msgid "momentary-string-display string position &optional char message"
msgstr "momentary-string-display string position &optional char message"

#. type: defun
#: original_texis/display.texi:1283
msgid "This function momentarily displays @var{string} in the current buffer at @var{position}.  It has no effect on the undo list or on the buffer's modification status."
msgstr "この関数はカレントバッファー内の@var{position}に@var{string}を瞬間表示(momentarily display)する。これはundoリストやバッファーの変更状態(modification status)に影響を与えない。"

#. type: defun
#: original_texis/display.texi:1291
msgid "The momentary display remains until the next input event.  If the next input event is @var{char}, @code{momentary-string-display} ignores it and returns.  Otherwise, that event remains buffered for subsequent use as input.  Thus, typing @var{char} will simply remove the string from the display, while typing (say) @kbd{C-f} will remove the string from the display and later (presumably) move point forward.  The argument @var{char} is a space by default."
msgstr "瞬間表示は次の入力イベントまで留まる。次の入力イベントが@var{char}なら@code{momentary-string-display}はそれを無視してリターンする。それ以外ならそのイベントは後続の入力として使用するためにバッファリングされる。つまり@var{char}とタイプすると表示からその文字列を単に削除して、(たとえば) @var{char}ではない@kbd{C-f}とタイプすると表示からその文字列を削除して、その後に(おそらく)ポイントを前方へ移動するだろう。引数@var{char}のデフォルトはスペース。"

#. type: defun
#: original_texis/display.texi:1293
msgid "The return value of @code{momentary-string-display} is not meaningful."
msgstr "@code{momentary-string-display}のリターン値に意味はない。"

#. type: defun
#: original_texis/display.texi:1298
msgid "If the string @var{string} does not contain control characters, you can do the same job in a more general way by creating (and then subsequently deleting) an overlay with a @code{before-string} property.  @xref{Overlay Properties}."
msgstr "文字列@var{string}がコントロール文字を含まなければ、@code{before-string}プロパティでオーバーレイを作成(その後に削除)することで、同じことをより汎用的に行うことができる。@ref{Overlay Properties}を参照のこと。"

#. type: defun
#: original_texis/display.texi:1302
msgid "If @var{message} is non-@code{nil}, it is displayed in the echo area while @var{string} is displayed in the buffer.  If it is @code{nil}, a default message says to type @var{char} to continue."
msgstr "@var{message}が非@code{nil}なら、バッファー内に@var{string}が表示されている間はエコーエリアにそれが表示される。@code{nil}の場合のデフォルトは、継続するためには@var{char}をタイプするように告げるメッセージ。"

#. type: defun
#: original_texis/display.texi:1305
msgid "In this example, point is initially located at the beginning of the second line:"
msgstr "以下の例では最初はポイントは2行目の先頭に置かれている:"

#. type: group
#: original_texis/display.texi:1312
#, no-wrap
msgid ""
"---------- Buffer: foo ----------\n"
"This is the contents of foo.\n"
"@point{}Second line.\n"
"---------- Buffer: foo ----------\n"
msgstr ""
"---------- Buffer: foo ----------\n"
"This is the contents of foo.\n"
"@point{}Second line.\n"
"---------- Buffer: foo ----------\n"

#. type: group
#: original_texis/display.texi:1320
#, no-wrap
msgid ""
"(momentary-string-display\n"
"  \"**** Important Message! ****\"\n"
"  (point) ?\\r\n"
"  \"Type RET when done reading\")\n"
"@result{} t\n"
msgstr ""
"(momentary-string-display\n"
"  \"**** Important Message! ****\"\n"
"  (point) ?\\r\n"
"  \"Type RET when done reading\")\n"
"@result{} t\n"

#. type: group
#: original_texis/display.texi:1327
#, no-wrap
msgid ""
"---------- Buffer: foo ----------\n"
"This is the contents of foo.\n"
"**** Important Message! ****Second line.\n"
"---------- Buffer: foo ----------\n"
"\n"
msgstr ""
"---------- Buffer: foo ----------\n"
"This is the contents of foo.\n"
"**** Important Message! ****Second line.\n"
"---------- Buffer: foo ----------\n"
"\n"

#. type: group
#: original_texis/display.texi:1331
#, no-wrap
msgid ""
"---------- Echo Area ----------\n"
"Type RET when done reading\n"
"---------- Echo Area ----------\n"
msgstr ""
"---------- Echo Area ----------\n"
"Type RET when done reading\n"
"---------- Echo Area ----------\n"

#. type: cindex
#: original_texis/display.texi:1337
#, no-wrap
msgid "overlays"
msgstr "overlays"

#. type: Plain text
#: original_texis/display.texi:1345
msgid "You can use @dfn{overlays} to alter the appearance of a buffer's text on the screen, for the sake of presentation features.  An overlay is an object that belongs to a particular buffer, and has a specified beginning and end.  It also has properties that you can examine and set; these affect the display of the text within the overlay."
msgstr "バッファーのテキストのスクリーン上の見栄えを変更するために、 プレゼンテーション機能として@dfn{オーバーレイ(overlay)}を使用できます。オーバーレイとは個々のバッファーに属するオブジェクトであり、指定された開始と終了をもっています。確認したりセットすることができるプロパティももっています。それらはオーバーレイをもつテキストの表示に影響を与えます。"

#. type: cindex
#: original_texis/display.texi:1346
#, no-wrap
msgid "scalability of overlays"
msgstr "scalability of overlays"

#. type: cindex
#: original_texis/display.texi:1347
#, no-wrap
msgid "overlays, scalability"
msgstr "overlays, scalability"

#. type: Plain text
#: original_texis/display.texi:1354
msgid "The visual effect of an overlay is the same as of the corresponding text property (@pxref{Text Properties}).  However, due to a different implementation, overlays generally don't scale well (many operations take a time that is proportional to the number of overlays in the buffer).  If you need to affect the visual appearance of many portions in the buffer, we recommend using text properties."
msgstr "オーバーレイの視覚的効果は、対応するテキストプロパティと同様です(@ref{Text Properties}を参照)。しかし実装が異なるために、オーバーレイは一般的にスケーラブルではありません(処理数に応じてバッファー内のオーバーレイ数に比例した時間を要する)。バッファー内の多数の部分の視覚的外観に効果を及ぼす必要がある場合にはテキストプロパティの使用を推奨します。"

#. type: Plain text
#: original_texis/display.texi:1360
msgid "An overlay uses markers to record its beginning and end; thus, editing the text of the buffer adjusts the beginning and end of each overlay so that it stays with the text.  When you create the overlay, you can specify whether text inserted at the beginning should be inside the overlay or outside, and likewise for the end of the overlay."
msgstr "オーバーレイはその開始と終了を記録するためにマーカーを使用します。したがってバッファーのテキスト編集では、すべてのオーバーレイがそのテキストに留まるように開始と終了が調整されます。オーバーレイ作成時にはオーバーレイの先頭、または同様に終端にテキストが挿入された場合に、それがオーバーレイの内側(または外側)になるべきなのかを指定できます。"

#. type: subsection
#: original_texis/display.texi:1366 original_texis/display.texi:1368
#: original_texis/display.texi:1369
#, no-wrap
msgid "Managing Overlays"
msgstr "Managing Overlays"

#. type: menuentry
#: original_texis/display.texi:1366
msgid "Creating and moving overlays."
msgstr "オーバーレイの作成と変更。"

#. type: subsection
#: original_texis/display.texi:1366 original_texis/display.texi:1539
#: original_texis/display.texi:1540
#, no-wrap
msgid "Overlay Properties"
msgstr "Overlay Properties"

#. type: menuentry
#: original_texis/display.texi:1366
msgid "How to read and set properties.  What properties do to the screen display."
msgstr "プロパティ読み取りとセットの方法。どのプロパティがスクリーン表示に何を行うか。"

#. type: node
#: original_texis/display.texi:1366 original_texis/display.texi:1803
#, no-wrap
msgid "Finding Overlays"
msgstr "Finding Overlays"

#. type: menuentry
#: original_texis/display.texi:1366
msgid "Searching for overlays."
msgstr "オーバーレイにたいする検索。"

#. type: cindex
#: original_texis/display.texi:1370
#, no-wrap
msgid "managing overlays"
msgstr "managing overlays"

#. type: cindex
#: original_texis/display.texi:1371
#, no-wrap
msgid "overlays, managing"
msgstr "overlays, managing"

#. type: Plain text
#: original_texis/display.texi:1377
msgid "This section describes the functions to create, delete and move overlays, and to examine their contents.  Overlay changes are not recorded in the buffer's undo list, since the overlays are not part of the buffer's contents."
msgstr "このセクションではオーバーレイの作成、削除、移動、およびそれらのコンテンツを調べる関数を説明します。オーバーレイはバッファーのコンテンツの一部ではないので、その変更はバッファーのundoリストに記録されません。"

#. type: defun
#: original_texis/display.texi:1378
#, no-wrap
msgid "overlayp object"
msgstr "overlayp object"

#. type: defun
#: original_texis/display.texi:1380
msgid "This function returns @code{t} if @var{object} is an overlay."
msgstr "この関数は@var{object}がオーバーレイなら@code{t}をリターンする。"

#. type: defun
#: original_texis/display.texi:1382
#, no-wrap
msgid "make-overlay start end &optional buffer front-advance rear-advance"
msgstr "make-overlay start end &optional buffer front-advance rear-advance"

#. type: defun
#: original_texis/display.texi:1388
msgid "This function creates and returns an overlay that belongs to @var{buffer} and ranges from @var{start} to @var{end}.  Both @var{start} and @var{end} must specify buffer positions; they may be integers or markers.  If @var{buffer} is omitted, the overlay is created in the current buffer."
msgstr "この関数は@var{buffer}に属する、@var{start}から@var{end}の範囲のオーバーレイを作成してリターンする。@var{start}と@var{end}はいずれもバッファーの位置を指定しなければならず、整数かマーカーを指定できる。@var{buffer}が省略されると、そのオーバーレイはカレントバッファーに作成される。"

#. type: cindex
#: original_texis/display.texi:1389
#, no-wrap
msgid "empty overlay"
msgstr "empty overlay"

#. type: cindex
#: original_texis/display.texi:1390
#, no-wrap
msgid "overlay, empty"
msgstr "overlay, empty"

#. type: defun
#: original_texis/display.texi:1397
msgid "An overlay whose @var{start} and @var{end} specify the same buffer position is known as @dfn{empty}.  A non-empty overlay can become empty if the text between its @var{start} and @var{end} is deleted.  When that happens, the overlay is by default not deleted, but you can cause it to be deleted by giving it the @samp{evaporate} property (@pxref{Overlay Properties, evaporate property})."
msgstr "@var{start}と@var{end}が同一のバッファー位置を指定するオーバーレイは@dfn{空(empty)}のオーバーレイとして知られる。@var{start}と@var{end}の間のテキストが削除されれば、非空のオーバーレイも空になり得る。これが発生したとき、デフォルトではオーバーレイは削除されないが、@samp{evaporate}プロパティを与えることにより削除されるようにできる(@ref{Overlay Properties, evaporate property}を参照)。"

#. type: defun
#: original_texis/display.texi:1407
msgid "The arguments @var{front-advance} and @var{rear-advance} specify the marker insertion type for the start of the overlay and for the end of the overlay, respectively.  @xref{Marker Insertion Types}.  If they are both @code{nil}, the default, then the overlay extends to include any text inserted at the beginning, but not text inserted at the end.  If @var{front-advance} is non-@code{nil}, text inserted at the beginning of the overlay is excluded from the overlay.  If @var{rear-advance} is non-@code{nil}, text inserted at the end of the overlay is included in the overlay."
msgstr "引数@var{front-advance}と@var{rear-advance}はそれぞれオーバーレイの開始と終了にたいするマーカーの挿入タイプを指定する。@ref{Marker Insertion Types}を参照のこと。どちらも@code{nil} (デフォルト)なら、そのオーバーレイは先頭に挿入された任意のテキストを含むように拡張されるが、終端に挿入されたテキストにたいしては拡張されない。@var{front-advance}が非@code{nil}なら、オーバーレイの先頭に挿入されたテキストはオーバーレイから除外される。@var{rear-advance}が非@code{nil}なら、オーバーレイの終端に挿入されたテキストはオーバーレイに含まれる。"

#. type: defun
#: original_texis/display.texi:1409
#, no-wrap
msgid "overlay-start overlay"
msgstr "overlay-start overlay"

#. type: defun
#: original_texis/display.texi:1412
msgid "This function returns the position at which @var{overlay} starts, as an integer."
msgstr "この関数は@var{overlay}が開始する位置を整数でリターンする。"

#. type: defun
#: original_texis/display.texi:1414
#, no-wrap
msgid "overlay-end overlay"
msgstr "overlay-end overlay"

#. type: defun
#: original_texis/display.texi:1417
msgid "This function returns the position at which @var{overlay} ends, as an integer."
msgstr "この関数は@var{overlay}が終了する位置を整数でリターンする。"

#. type: defun
#: original_texis/display.texi:1419
#, no-wrap
msgid "overlay-buffer overlay"
msgstr "overlay-buffer overlay"

#. type: defun
#: original_texis/display.texi:1422
msgid "This function returns the buffer that @var{overlay} belongs to.  It returns @code{nil} if @var{overlay} has been deleted."
msgstr "この関数は@var{overlay}が所属するバッファーをリターンする。@var{overlay}が削除されていたら@code{nil}をリターンする。"

#. type: defun
#: original_texis/display.texi:1424
#, no-wrap
msgid "delete-overlay overlay"
msgstr "delete-overlay overlay"

#. type: defun
#: original_texis/display.texi:1429
msgid "This function deletes @var{overlay}.  The overlay continues to exist as a Lisp object, and its property list is unchanged, but it ceases to be attached to the buffer it belonged to, and ceases to have any effect on display."
msgstr "この関数は@var{overlay}を削除する。そのオーバーレイはLispオブジェクトとして存在し続けて、そのプロパティリストは変更されないがバッファーへの所属と表示にたいするすべての効果を失う。"

#. type: defun
#: original_texis/display.texi:1432
msgid "A deleted overlay is not permanently disconnected.  You can give it a position in a buffer again by calling @code{move-overlay}."
msgstr "削除済みオーバーレイが永続的に非接続という訳ではない。@code{move-overlay}を呼び出すことによりバッファー内の位置を与えることができる。"

#. type: defun
#: original_texis/display.texi:1434
#, no-wrap
msgid "move-overlay overlay start end &optional buffer"
msgstr "move-overlay overlay start end &optional buffer"

#. type: defun
#: original_texis/display.texi:1438
msgid "This function moves @var{overlay} to @var{buffer}, and places its bounds at @var{start} and @var{end}.  Both arguments @var{start} and @var{end} must specify buffer positions; they may be integers or markers."
msgstr "この関数は@var{overlay}を@var{buffer}に移動して、その境界を@var{start}と@var{end}に配置する。@var{start}と@var{end}の引数はいずれもバッファーの位置を指定しなければならず、整数かマーカーを指定できる。"

#. type: defun
#: original_texis/display.texi:1442
msgid "If @var{buffer} is omitted, @var{overlay} stays in the same buffer it was already associated with; if @var{overlay} was deleted, it goes into the current buffer."
msgstr "@var{buffer}が省略された場合、@var{overlay}はすでに関連付けられている同じバッファーに留まる。さらに@var{overlay}が削除されていたら、それをカレントバッファーに所属させる。"

#. type: defun
#: original_texis/display.texi:1444
msgid "The return value is @var{overlay}."
msgstr "リターン値は@var{overlay}。"

#. type: defun
#: original_texis/display.texi:1449
msgid "This is the only valid way to change the endpoints of an overlay.  Do not try modifying the markers in the overlay by hand, as that fails to update other vital data structures and can cause some overlays to be lost."
msgstr "これはオーバーレイの両端位置を変更する唯一の有効な方法である。手作業でオーバーレイ内のマーカーの変更を試みてはならない。それにより他の重要なデータ構造の更新が失敗して、いくつかのオーバーレイが失われる可能性がある。"

#. type: defun
#: original_texis/display.texi:1451
#, no-wrap
msgid "remove-overlays &optional start end name value"
msgstr "remove-overlays &optional start end name value"

#. type: defun
#: original_texis/display.texi:1455
msgid "This function removes all the overlays between @var{start} and @var{end} whose property @var{name} has the value @var{value}.  It can move the endpoints of the overlays in the region, or split them."
msgstr "この関数はプロパティ@var{name}が値@var{value}をもつような、@var{start}と@var{end}の間のすべてのオーバーレイを削除する。これによりオーバーレイの両端位置が変更されたり分割される可能がある。"

#. type: defun
#: original_texis/display.texi:1461
msgid "If @var{name} is omitted or @code{nil}, it means to delete all overlays in the specified region.  If @var{start} and/or @var{end} are omitted or @code{nil}, that means the beginning and end of the buffer respectively.  Therefore, @code{(remove-overlays)} removes all the overlays in the current buffer."
msgstr "@var{name}が省略か@code{nil}なら、それは指定されたリージョン内のすべてのオーバーレイを削除することを意味する。@var{start}および/または@var{end}が省略か@code{nil}なら、それぞれバッファーの先頭と終端を意味する。したがって@code{(remove-overlays)}はカレントバッファー内のすべてのオーバーレイを削除する。"

#. type: defun
#: original_texis/display.texi:1463
#, no-wrap
msgid "copy-overlay overlay"
msgstr "copy-overlay overlay"

#. type: defun
#: original_texis/display.texi:1469
msgid "This function returns a copy of @var{overlay}.  The copy has the same endpoints and properties as @var{overlay}.  However, the marker insertion type for the start of the overlay and for the end of the overlay are set to their default values (@pxref{Marker Insertion Types})."
msgstr "この関数は@var{overlay}のコピーをリターンする。このコピーは@var{overlay}と同じ両端位置とプロパティをもつ。しかしオーバーレイの開始と終了にたいするマーカー挿入タイプはデフォルト値にセットされる(@ref{Marker Insertion Types}を参照)。"

#. type: Plain text
#: original_texis/display.texi:1472
msgid "Here are some examples:"
msgstr "以下にいくつか例を示します:"

#. type: example
#: original_texis/display.texi:1522
#, no-wrap
msgid ""
";; @r{Create an overlay.}\n"
"(setq foo (make-overlay 1 10))\n"
"     @result{} #<overlay from 1 to 10 in display.texi>\n"
"(overlay-start foo)\n"
"     @result{} 1\n"
"(overlay-end foo)\n"
"     @result{} 10\n"
"(overlay-buffer foo)\n"
"     @result{} #<buffer display.texi>\n"
";; @r{Give it a property we can check later.}\n"
"(overlay-put foo 'happy t)\n"
"     @result{} t\n"
";; @r{Verify the property is present.}\n"
"(overlay-get foo 'happy)\n"
"     @result{} t\n"
";; @r{Move the overlay.}\n"
"(move-overlay foo 5 20)\n"
"     @result{} #<overlay from 5 to 20 in display.texi>\n"
"(overlay-start foo)\n"
"     @result{} 5\n"
"(overlay-end foo)\n"
"     @result{} 20\n"
";; @r{Delete the overlay.}\n"
"(delete-overlay foo)\n"
"     @result{} nil\n"
";; @r{Verify it is deleted.}\n"
"foo\n"
"     @result{} #<overlay in no buffer>\n"
";; @r{A deleted overlay has no position.}\n"
"(overlay-start foo)\n"
"     @result{} nil\n"
"(overlay-end foo)\n"
"     @result{} nil\n"
"(overlay-buffer foo)\n"
"     @result{} nil\n"
";; @r{Undelete the overlay.}\n"
"(move-overlay foo 1 20)\n"
"     @result{} #<overlay from 1 to 20 in display.texi>\n"
";; @r{Verify the results.}\n"
"(overlay-start foo)\n"
"     @result{} 1\n"
"(overlay-end foo)\n"
"     @result{} 20\n"
"(overlay-buffer foo)\n"
"     @result{} #<buffer display.texi>\n"
";; @r{Moving and deleting the overlay does not change its properties.}\n"
"(overlay-get foo 'happy)\n"
"     @result{} t\n"
msgstr ""
";; @r{オーバーレイの作成}\n"
"(setq foo (make-overlay 1 10))\n"
"     @result{} #<overlay from 1 to 10 in display.texi>\n"
"(overlay-start foo)\n"
"     @result{} 1\n"
"(overlay-end foo)\n"
"     @result{} 10\n"
"(overlay-buffer foo)\n"
"     @result{} #<buffer display.texi>\n"
";; @r{後でチェックできるようプロパティ付与}\n"
"(overlay-put foo 'happy t)\n"
"     @result{} t\n"
";; @r{プロパティが付与されたか検証}\n"
"(overlay-get foo 'happy)\n"
"     @result{} t\n"
";; @r{オーバーレイを移動}\n"
"(move-overlay foo 5 20)\n"
"     @result{} #<overlay from 5 to 20 in display.texi>\n"
"(overlay-start foo)\n"
"     @result{} 5\n"
"(overlay-end foo)\n"
"     @result{} 20\n"
";; @r{オーバーレイを削除}\n"
"(delete-overlay foo)\n"
"     @result{} nil\n"
";; @r{削除されたか検証}\n"
"foo\n"
"     @result{} #<overlay in no buffer>\n"
";; @r{削除済みオーバーレイは位置をもたない}\n"
"(overlay-start foo)\n"
"     @result{} nil\n"
"(overlay-end foo)\n"
"     @result{} nil\n"
"(overlay-buffer foo)\n"
"     @result{} nil\n"
";; @r{オーバーレイの削除取り消し}\n"
"(move-overlay foo 1 20)\n"
"     @result{} #<overlay from 1 to 20 in display.texi>\n"
";; @r{結果の検証}\n"
"(overlay-start foo)\n"
"     @result{} 1\n"
"(overlay-end foo)\n"
"     @result{} 20\n"
"(overlay-buffer foo)\n"
"     @result{} #<buffer display.texi>\n"
";; @r{オーバーレイの移動と削除では、オーバーレイのプロパティは変更されない}\n"
"(overlay-get foo 'happy)\n"
"     @result{} t\n"

#. type: Plain text
#: original_texis/display.texi:1529
msgid "Emacs stores the overlays of each buffer in two lists, divided around an arbitrary center position.  One list extends backwards through the buffer from that center position, and the other extends forwards from that center position.  The center position can be anywhere in the buffer."
msgstr "Emacsはそれぞれのバッファーのオーバーレイを任意の中心位置(center position)で分割される2つのリストに格納します。一方のリストはバッファーの中心位置から後方に拡張されて、もう一方は中心位置から前方へと拡張されます。中心位置はバッファーの任意の位置をとることができます。"

#. type: defun
#: original_texis/display.texi:1530
#, no-wrap
msgid "overlay-recenter pos"
msgstr "overlay-recenter pos"

#. type: defun
#: original_texis/display.texi:1534
msgid "This function recenters the overlays of the current buffer around position @var{pos}.  That makes overlay lookup faster for positions near @var{pos}, but slower for positions far away from @var{pos}."
msgstr "この関数はカレントバッファーのオーバーレイを位置@var{pos}の周辺に再センタリングする。これにより位置@var{pos}近傍のオーバーレイの照合は高速になるが、@var{pos}から離れた位置にたいしては低速になる。"

#. type: Plain text
#: original_texis/display.texi:1538
msgid "A loop that scans the buffer forwards, creating overlays, can run faster if you do @code{(overlay-recenter (point-max))} first."
msgstr "バッファーを前方にスキャンしてオーバーレイを作成するループは、最初に@code{(overlay-recenter (point-max))}を行うことにより高速になる可能性があります。"

#. type: cindex
#: original_texis/display.texi:1541
#, no-wrap
msgid "overlay properties"
msgstr "overlay properties"

#. type: Plain text
#: original_texis/display.texi:1546
msgid "Overlay properties are like text properties in that the properties that alter how a character is displayed can come from either source.  But in most respects they are different.  @xref{Text Properties}, for comparison."
msgstr "オーバーレイプロパティは文字が表示される方法をどちらのソースからも取得できるという点においてテキストプロパティと似ています。しかしほとんどの観点において両者は異なります。これらの比較は@ref{Text Properties}を参照してください。"

#. type: Plain text
#: original_texis/display.texi:1555
msgid "Text properties are considered a part of the text; overlays and their properties are specifically considered not to be part of the text.  Thus, copying text between various buffers and strings preserves text properties, but does not try to preserve overlays.  Changing a buffer's text properties marks the buffer as modified, while moving an overlay or changing its properties does not.  Unlike text property changes, overlay property changes are not recorded in the buffer's undo list."
msgstr "テキストプロパティはそのテキストの一部として考えることができます。オーバーレイとそのプロパティは特にテキストの一部とはみなされません。したがってさまざまなバッファーや文字列の間でテキストをコピーすると、テキストプロパティは保持されますがオーバーレイを保持しようとは試みません。バッファーのテキストプロパティの変更はバッファーを変更済みとマークしますが、オーバーレイの移動やプロパティの変更は違います。テキストプロパティの変更とは異なり、オーバーレイプロパティの変更はバッファーのundoリストに記録されません。"

#. type: Plain text
#: original_texis/display.texi:1560
msgid "Since more than one overlay can specify a property value for the same character, Emacs lets you specify a priority value of each overlay.  The priority value is used to decide which of the overlapping overlays will ``win''."
msgstr "複数のオーバーレイが同じ文字にたいしてプロパティ値を指定できるので、Emacsは各オーバーレイにたいして優先度の指定を促します。優先度の値はオーバーラップするオーバーレイのどちらが``勝つ''かを判断するために使用されます。"

#. type: Plain text
#: original_texis/display.texi:1562
msgid "These functions read and set the properties of an overlay:"
msgstr "以下の関数はオーバーレイのプロパティの読み取りとセットを行います:"

#. type: defun
#: original_texis/display.texi:1563
#, no-wrap
msgid "overlay-get overlay prop"
msgstr "overlay-get overlay prop"

#. type: defun
#: original_texis/display.texi:1569
msgid "This function returns the value of property @var{prop} recorded in @var{overlay}, if any.  If @var{overlay} does not record any value for that property, but it does have a @code{category} property which is a symbol, that symbol's @var{prop} property is used.  Otherwise, the value is @code{nil}."
msgstr "この関数は@var{overlay}内に記録されたプロパティ@var{prop}の値をリターンする。そのプロパティにたいして@var{overlay}が何も値を記録していないが、シンボルであるような@code{category}プロパティをもつ場合には、そのシンボルの@var{prop}プロパティが使用される。それ以外なら値は@code{nil}。"

#. type: defun
#: original_texis/display.texi:1571
#, no-wrap
msgid "overlay-put overlay prop value"
msgstr "overlay-put overlay prop value"

#. type: defun
#: original_texis/display.texi:1574
msgid "This function sets the value of property @var{prop} recorded in @var{overlay} to @var{value}.  It returns @var{value}."
msgstr "この関数は@var{overlay}内に記録されたプロパティ@var{prop}の値に@var{value}をセットする。リターン値は@var{value}。"

#. type: defun
#: original_texis/display.texi:1576
#, no-wrap
msgid "overlay-properties overlay"
msgstr "overlay-properties overlay"

#. type: defun
#: original_texis/display.texi:1578
msgid "This returns a copy of the property list of @var{overlay}."
msgstr "これは@var{overlay}のプロパティリストのコピーをリターンする。"

#. type: Plain text
#: original_texis/display.texi:1583
msgid "See also the function @code{get-char-property} which checks both overlay properties and text properties for a given character.  @xref{Examining Properties}."
msgstr "与えられた文字にたいしてテキストプロパティとオーバーレイプロパティの両方をチェックする関数@code{get-char-property}も参照してください。@ref{Examining Properties}を参照してください。"

#. type: Plain text
#: original_texis/display.texi:1586
msgid "Many overlay properties have special meanings; here is a table of them:"
msgstr "多くのオーバーレイプロパティには特別な意味があります。以下はそれらのテーブルです:"

#. type: item
#: original_texis/display.texi:1588
#, no-wrap
msgid "priority"
msgstr "priority"

#. type: kindex
#: original_texis/display.texi:1589
#, no-wrap
msgid "priority @r{(overlay property)}"
msgstr "priority @r{(overlay property)}"

#. type: table
#: original_texis/display.texi:1593
msgid "This property's value determines the priority of the overlay.  If you want to specify a priority value, use either @code{nil} (or zero), or a positive integer.  Any other value has undefined behavior."
msgstr "このプロパティの値はオーバーレイの優先度を決定する。優先度にたいして値を指定したければ@code{nil} (か0)、または正の整数を使用すること。それ以外のすべての値にたいする動作は未定義。"

#. type: table
#: original_texis/display.texi:1604
msgid "The priority matters when two or more overlays cover the same character and both specify the same property; the one whose @code{priority} value is larger overrides the other.  (For the @code{face} property, the higher priority overlay's value does not completely override the other value; instead, its face attributes override the face attributes of the lower priority @code{face} property.)  If two overlays have the same priority value, and one is nested in the other, then the inner one will prevail over the outer one.  If neither is nested in the other then you should not make assumptions about which overlay will prevail."
msgstr "2つ以上のオーバーレイが同じ文字をカバーし、いずれもが同じプロパティを指定する場合には、優先度が重要になる。他より@code{priority}の値が大きいほうが他をオーバーライドする。(@code{face}プロパティにたいしては、より高い優先度のオーバーレイの値は他の値を完全にはオーバーライドしない。かわりに高い優先度のface属性がより低い優先度の@code{face}プロパティのface属性をオーバーライドする)。2つのオーバーレイが同じ優先値をもち、一方がもう一方にネストされている場合には、内側のオーバーレイが外側のオーバーレイより優先される。いずれのオーバーレイも他方にネストされていなければ、どちらのオーバーレイが優先するかを仮定しないこと。"

#. type: table
#: original_texis/display.texi:1606
msgid "Currently, all overlays take priority over text properties."
msgstr "現在のところ、すべてのオーバーレイはテキストプロパティより優先される。"

#. type: table
#: original_texis/display.texi:1618
msgid "Note that Emacs sometimes uses non-numeric priority values for some of its internal overlays, so do not try to do arithmetic on the priority of an overlay (unless it is one that you created).  In particular, the overlay used for showing the region uses a priority value of the form @w{@code{(@var{primary} . @var{secondary})}}, where the @var{primary} value is used as described above, and @var{secondary} is the fallback value used when @var{primary} and the nesting considerations fail to resolve the precedence between overlays.  However, you are advised not to design Lisp programs based on this implementation detail; if you need to put overlays in priority order, use the @var{sorted} argument of @code{overlays-at}.  @xref{Finding Overlays}."
msgstr "Emacsは内部的ないくつかのオーバーレイに非数値の優先値を使用するときがあるので、(自分が作成したものでなければ)オーバーレイの優先度にたいして数値演算を試みてはならない。特にリージョンの表示に使用されるオーバーレイは@w{@code{(@var{primary} . @var{secondary})}} (@var{primary}は上述のように使用されて、@var{secondary}は@var{primary}とネストを考慮したオーバーレイ間の優先度の解決が失敗した際に使用される)という形式の優先値を使用する。しかしあなたにはこの実装の詳細にもとづいてLispプログラムをデザインしないようにアドバイスした。優先順にオーバーレイを配置する必要があるなら@code{overlays-at}の@var{sorted}引数を使用すること。@ref{Finding Overlays}を参照のこと。"

#. type: item
#: original_texis/display.texi:1619
#, no-wrap
msgid "window"
msgstr "window"

#. type: kindex
#: original_texis/display.texi:1620
#, no-wrap
msgid "window @r{(overlay property)}"
msgstr "window @r{(overlay property)}"

#. type: table
#: original_texis/display.texi:1623
msgid "If the @code{window} property is non-@code{nil}, then the overlay applies only on that window."
msgstr "@code{window}プロパティが非@code{nil}ならオーバーレイはそのウィンドウだけに適用される。"

#. type: item
#: original_texis/display.texi:1624
#, no-wrap
msgid "category"
msgstr "category"

#. type: kindex
#: original_texis/display.texi:1625
#, no-wrap
msgid "category @r{(overlay property)}"
msgstr "category @r{(overlay property)}"

#. type: table
#: original_texis/display.texi:1629
msgid "If an overlay has a @code{category} property, we call it the @dfn{category} of the overlay.  It should be a symbol.  The properties of the symbol serve as defaults for the properties of the overlay."
msgstr "オーバーレイが@code{category}プロパティをもつなら、それをオーバーレイの@dfn{カテゴリー(category)}と呼ぶ。これはシンボルであること。そのシンボルのプロパティはオーバーレイのプロパティにたいしてデフォルトの役割を果たす。"

#. type: item
#: original_texis/display.texi:1630 original_texis/display.texi:6155
#, no-wrap
msgid "face"
msgstr "face"

#. type: kindex
#: original_texis/display.texi:1631
#, no-wrap
msgid "face @r{(overlay property)}"
msgstr "face @r{(overlay property)}"

#. type: table
#: original_texis/display.texi:1634
msgid "This property controls the appearance of the text (@pxref{Faces}).  The value of the property can be the following:"
msgstr "このプロパティはテキストの外観を制御する(@ref{Faces}を参照)。プロパティの値は以下のいずれか:"

#. type: itemize
#: original_texis/display.texi:1638
msgid "A face name (a symbol or string)."
msgstr "フェイス名(シンボルか文字列)。"

#. type: itemize
#: original_texis/display.texi:1643
msgid "An anonymous face: a property list of the form @code{(@var{keyword} @var{value} @dots{})}, where each @var{keyword} is a face attribute name and @var{value} is a value for that attribute."
msgstr "anonymousフェイス: @code{(@var{keyword} @var{value} @dots{})}という形式のプロパティリストであり@var{keyword}はフェイス属性名、@var{value}はその属性の値。"

#. type: itemize
#: original_texis/display.texi:1649
msgid "A list of faces.  Each list element should be either a face name or an anonymous face.  This specifies a face which is an aggregate of the attributes of each of the listed faces.  Faces occurring earlier in the list have higher priority."
msgstr "フェイスのリスト。リストの要素はそれぞれフェイス名かanonymousフェイスのいずれかであること。これはリストされた各フェイスの属性を集約するフェイスを指定する。このリスト内で先に出現するフェイスが、より高い優先度をもつ。"

#. type: itemize
#: original_texis/display.texi:1657
msgid "A cons cell of the form @code{(foreground-color . @var{color-name})} or @code{(background-color . @var{color-name})}.  This specifies the foreground or background color, similar to @code{(:foreground @var{color-name})} or @code{(:background @var{color-name})}.  This form is supported for backward compatibility only, and should be avoided."
msgstr "@code{(foreground-color . @var{color-name})}か@code{(background-color . @var{color-name})}という形式のコンスセル。これは@code{(:foreground @var{color-name})}や@code{(:background @var{color-name})}と同じように、フォアグラウンドとバックグラウンドのカラーを指定する。この形式は後方互換性のためだけにサポートされており、使用は避けること。"

#. type: item
#: original_texis/display.texi:1659 original_texis/display.texi:6160
#, no-wrap
msgid "mouse-face"
msgstr "mouse-face"

#. type: kindex
#: original_texis/display.texi:1660
#, no-wrap
msgid "mouse-face @r{(overlay property)}"
msgstr "mouse-face @r{(overlay property)}"

#. type: table
#: original_texis/display.texi:1666
msgid "This property is used instead of @code{face} when the mouse is within the range of the overlay.  However, Emacs ignores all face attributes from this property that alter the text size (e.g., @code{:height}, @code{:weight}, and @code{:slant}).  Those attributes are always the same as in the unhighlighted text."
msgstr "このプロパティはマウスがオーバーレイ範囲内にあるときに、@code{face}のかわりに使用される。しかしEmacsはこのプロパティに由来するテキストのサイズを変更するようなフェイス属性(@code{:height}、@code{:weight}、@code{:slant})をすべて無視する。これらの属性はハイライトされていないテキストでは常に同一である。"

#. type: item
#: original_texis/display.texi:1667
#, no-wrap
msgid "display"
msgstr "display"

#. type: kindex
#: original_texis/display.texi:1668
#, no-wrap
msgid "display @r{(overlay property)}"
msgstr "display @r{(overlay property)}"

#. type: table
#: original_texis/display.texi:1673
msgid "This property activates various features that change the way text is displayed.  For example, it can make text appear taller or shorter, higher or lower, wider or narrower, or replaced with an image.  @xref{Display Property}."
msgstr "このプロパティはテキストが表示される方法を変更するさまざまな機能をアクティブにする。たとえばこれはテキストの外観を縦長(taller)や横長(shorter)にしたり、高く(higher)したり低く(lower)したり、イメージによる置き換えを行う。@ref{Display Property}を参照のこと。"

#. type: item
#: original_texis/display.texi:1674 original_texis/display.texi:6177
#, no-wrap
msgid "help-echo"
msgstr "help-echo"

#. type: kindex
#: original_texis/display.texi:1675
#, no-wrap
msgid "help-echo @r{(overlay property)}"
msgstr "help-echo @r{(overlay property)}"

#. type: table
#: original_texis/display.texi:1680
msgid "If an overlay has a @code{help-echo} property, then when you move the mouse onto the text in the overlay, Emacs displays a help string in the echo area, or in the tooltip window.  For details see @ref{Text help-echo}."
msgstr "あるオーバーレイが@code{help-echo}プロパティをもつなら、そのオーバーレイ内のテキスト上にマウスを移動した際に、Emacsはエコーエリアかツールチップウィンドウにヘルプ文字列を表示する。詳細は@ref{Text help-echo}を参照のこと。"

#. type: item
#: original_texis/display.texi:1681
#, no-wrap
msgid "field"
msgstr "field"

#. type: kindex
#: original_texis/display.texi:1682
#, no-wrap
msgid "field @r{(overlay property)}"
msgstr "field @r{(overlay property)}"

#. type: table
#: original_texis/display.texi:1688
msgid "Consecutive characters with the same @code{field} property constitute a @emph{field}.  Some motion functions including @code{forward-word} and @code{beginning-of-line} stop moving at a field boundary.  @xref{Fields}."
msgstr "同じ@code{field}プロパティをもつ連続する文字は@emph{フィールド(field)}を形成する。@code{forward-word}や@code{beginning-of-line}を含むいくつかの移動関数はフィールド境界で移動を停止する。@ref{Fields}を参照のこと。"

#. type: item
#: original_texis/display.texi:1689
#, no-wrap
msgid "modification-hooks"
msgstr "modification-hooks"

#. type: kindex
#: original_texis/display.texi:1690
#, no-wrap
msgid "modification-hooks @r{(overlay property)}"
msgstr "modification-hooks @r{(overlay property)}"

#. type: table
#: original_texis/display.texi:1694
msgid "This property's value is a list of functions to be called if any character within the overlay is changed or if text is inserted strictly within the overlay."
msgstr "このプロパティの値はオーバーレイ内の任意の文字の変更、またはオーバーレイの厳密に内側にテキストが挿入された場合に呼び出される関数のリスト。"

#. type: table
#: original_texis/display.texi:1699
msgid "The hook functions are called both before and after each change.  If the functions save the information they receive, and compare notes between calls, they can determine exactly what change has been made in the buffer text."
msgstr "このフックの関数は各変更の前後両方で呼び出される。これらの関数が受け取った情報を保存して呼び出し間で記録を比較すれば、バッファー内のテキストでどのような変更が行われたかを正確に判断できる。"

#. type: table
#: original_texis/display.texi:1703
msgid "When called before a change, each function receives four arguments: the overlay, @code{nil}, and the beginning and end of the text range to be modified."
msgstr "変更前に呼び出された際にはオーバーレイ、@code{nil}、変更されたテキスト範囲の開始と終了という4つの引数を各関数は受け取る。"

#. type: table
#: original_texis/display.texi:1710
msgid "When called after a change, each function receives five arguments: the overlay, @code{t}, the beginning and end of the text range just modified, and the length of the pre-change text replaced by that range.  (For an insertion, the pre-change length is zero; for a deletion, that length is the number of characters deleted, and the post-change beginning and end are equal.)"
msgstr "変更後に呼び出された際にはオーバーレイ、@code{t}、変更されたテキスト範囲の開始と終了、およびその範囲により置き換えられた変更前のテキスト長という5つの引数を各関数は受け取る(変更前の長さは挿入では0、削除では削除された文字数であり、変更後の先頭と終端が等しくなる)。"

#. type: table
#: original_texis/display.texi:1714
msgid "If these functions modify the buffer, they should bind @code{inhibit-modification-hooks} to @code{t} around doing so, to avoid confusing the internal mechanism that calls these hooks."
msgstr "これらの関数がバッファーを変更する場合には、これらのフックを呼び出す内部的メカニズムの混乱を避けるために、それを行う前後で@code{inhibit-modification-hooks}を@code{t}にバインドすること。"

#. type: table
#: original_texis/display.texi:1717
msgid "Text properties also support the @code{modification-hooks} property, but the details are somewhat different (@pxref{Special Properties})."
msgstr "テキストプロパティも@code{modification-hooks}プロパティをサポートするが詳細は幾分異なる(@ref{Special Properties}を参照)。"

#. type: item
#: original_texis/display.texi:1718
#, no-wrap
msgid "insert-in-front-hooks"
msgstr "insert-in-front-hooks"

#. type: kindex
#: original_texis/display.texi:1719
#, no-wrap
msgid "insert-in-front-hooks @r{(overlay property)}"
msgstr "insert-in-front-hooks @r{(overlay property)}"

#. type: table
#: original_texis/display.texi:1723
msgid "This property's value is a list of functions to be called before and after inserting text right at the beginning of the overlay.  The calling conventions are the same as for the @code{modification-hooks} functions."
msgstr "このプロパティの値はオーバーレイ先頭へのテキスト挿入前後に呼び出される関数のリスト。呼び出し方は@code{modification-hooks}の関数と同様。"

#. type: item
#: original_texis/display.texi:1724
#, no-wrap
msgid "insert-behind-hooks"
msgstr "insert-behind-hooks"

#. type: kindex
#: original_texis/display.texi:1725
#, no-wrap
msgid "insert-behind-hooks @r{(overlay property)}"
msgstr "insert-behind-hooks @r{(overlay property)}"

#. type: table
#: original_texis/display.texi:1729
msgid "This property's value is a list of functions to be called before and after inserting text right at the end of the overlay.  The calling conventions are the same as for the @code{modification-hooks} functions."
msgstr "このプロパティの値はオーバーレイ終端へのテキスト挿入前後に呼び出される関数のリスト。呼び出し方は@code{modification-hooks}の関数と同様。"

#. type: item
#: original_texis/display.texi:1730
#, no-wrap
msgid "invisible"
msgstr "invisible"

#. type: kindex
#: original_texis/display.texi:1731
#, no-wrap
msgid "invisible @r{(overlay property)}"
msgstr "invisible @r{(overlay property)}"

#. type: table
#: original_texis/display.texi:1735
msgid "The @code{invisible} property can make the text in the overlay invisible, which means that it does not appear on the screen.  @xref{Invisible Text}, for details."
msgstr "@code{invisible}プロパティによりオーバーレイ内のテキストを不可視にできる。これはそのテキストがスクリーン上に表示されないことを意味する。詳細は@ref{Invisible Text}を下さいのこと。"

#. type: item
#: original_texis/display.texi:1736
#, no-wrap
msgid "intangible"
msgstr "intangible"

#. type: kindex
#: original_texis/display.texi:1737
#, no-wrap
msgid "intangible @r{(overlay property)}"
msgstr "intangible @r{(overlay property)}"

#. type: table
#: original_texis/display.texi:1741
msgid "The @code{intangible} property on an overlay works just like the @code{intangible} text property.  It is obsolete.  @xref{Special Properties}, for details."
msgstr "オーバーレイの@code{intangible}プロパティは正に@code{intangible}テキストプロパティと同様に機能する。これは時代遅れである。詳細は@xref{Special Properties}を参照のこと。"

#. type: item
#: original_texis/display.texi:1742
#, no-wrap
msgid "isearch-open-invisible"
msgstr "isearch-open-invisible"

#. type: table
#: original_texis/display.texi:1746
msgid "This property tells incremental search how to make an invisible overlay visible, permanently, if the final match overlaps it.  @xref{Invisible Text}."
msgstr "このプロパティはインクリメンタル検索にたいして最後のマッチがそのオーバーレイに重なる場合に、不可視なオーバーレイを永続的に可視にする方法を告げる。@ref{Invisible Text}を参照のこと。"

#. type: item
#: original_texis/display.texi:1747
#, no-wrap
msgid "isearch-open-invisible-temporary"
msgstr "isearch-open-invisible-temporary"

#. type: table
#: original_texis/display.texi:1750
msgid "This property tells incremental search how to make an invisible overlay visible, temporarily, during the search.  @xref{Invisible Text}."
msgstr "このプロパティはインクリメンタル検索にたいして、検索の間に不可視なオーバーレイを一時的に可視にする方法を告げる。@ref{Invisible Text}を参照のこと。"

#. type: item
#: original_texis/display.texi:1751
#, no-wrap
msgid "before-string"
msgstr "before-string"

#. type: kindex
#: original_texis/display.texi:1752
#, no-wrap
msgid "before-string @r{(overlay property)}"
msgstr "before-string @r{(overlay property)}"

#. type: table
#: original_texis/display.texi:1756
msgid "This property's value is a string to add to the display at the beginning of the overlay.  The string does not appear in the buffer in any sense---only on the screen."
msgstr "このプロパティの値はオーバーレイ先頭に表示するために追加する文字列。この文字列はいかなる意味においてもバッファー内には出現せずにスクリーン上にのみ表れる。"

#. type: item
#: original_texis/display.texi:1757
#, no-wrap
msgid "after-string"
msgstr "after-string"

#. type: kindex
#: original_texis/display.texi:1758
#, no-wrap
msgid "after-string @r{(overlay property)}"
msgstr "after-string @r{(overlay property)}"

#. type: table
#: original_texis/display.texi:1762
msgid "This property's value is a string to add to the display at the end of the overlay.  The string does not appear in the buffer in any sense---only on the screen."
msgstr "このプロパティの値はオーバーレイ終端に表示するために追加する文字列。この文字列はいかなる意味においてもバッファー内には出現せずにスクリーン上にのみ表れる。"

#. type: table
#: original_texis/display.texi:1766
msgid "This property specifies a display spec to prepend to each non-continuation line at display-time.  @xref{Truncation}."
msgstr "このプロパティは表示時にそれぞれの非継続行の後に追加するディスプレイ仕様(display spec)を指定する。@ref{Truncation}を参照のこと。"

#. type: table
#: original_texis/display.texi:1770
msgid "This property specifies a display spec to prepend to each continuation line at display-time.  @xref{Truncation}."
msgstr "このプロパティは表示時にそれぞれの継続行の前に追加するディスプレイ仕様(display spec)を指定する。@ref{Truncation}を参照のこと。"

#. type: item
#: original_texis/display.texi:1771
#, no-wrap
msgid "evaporate"
msgstr "evaporate"

#. type: kindex
#: original_texis/display.texi:1772
#, no-wrap
msgid "evaporate @r{(overlay property)}"
msgstr "evaporate @r{(overlay property)}"

#. type: table
#: original_texis/display.texi:1780
msgid "If this property is non-@code{nil}, the overlay is deleted automatically if it becomes empty (i.e., if its length becomes zero).  If you give an empty overlay (@pxref{Managing Overlays, empty overlay}) a non-@code{nil} @code{evaporate} property, that deletes it immediately.  Note that, unless an overlay has this property, it will not be deleted when the text between its starting and ending positions is deleted from the buffer."
msgstr "このプロパティが非@code{nil}の場合には、そのオーバーレイが空(長さが0)になったら自動的に削除される。空のオーバーレイ(@ref{Managing Overlays, empty overlay}を参照)にたいして非@code{nil}の@code{evaporate}プロパティを与えた場合には即座に削除される。オーバーレイがこのプロパティをもたなければ、バッファーからオーバーレイの開始位置と終了位置の間のテキストが削除された際に削除されないことに注意。"

#. type: item
#: original_texis/display.texi:1781 original_texis/display.texi:6166
#, no-wrap
msgid "keymap"
msgstr "keymap"

#. type: cindex
#: original_texis/display.texi:1782
#, no-wrap
msgid "keymap of character (and overlays)"
msgstr "keymap of character (and overlays)"

#. type: kindex
#: original_texis/display.texi:1783
#, no-wrap
msgid "keymap @r{(overlay property)}"
msgstr "keymap @r{(overlay property)}"

#. type: table
#: original_texis/display.texi:1787
msgid "If this property is non-@code{nil}, it specifies a keymap for a portion of the text.  This keymap is used when the character after point is within the overlay, and takes precedence over most other keymaps.  @xref{Active Keymaps}."
msgstr "このプロパティが@code{nil}なら、そのテキスト範囲にたいしてキーマップを指定する。このキーマップはポイントの後の文字がそのオーバーレイ内にあるときに使用されて、他のほとんどのキーマップより優先される。@ref{Active Keymaps}を参照のこと。"

#. type: item
#: original_texis/display.texi:1788
#, no-wrap
msgid "local-map"
msgstr "local-map"

#. type: kindex
#: original_texis/display.texi:1789
#, no-wrap
msgid "local-map @r{(overlay property)}"
msgstr "local-map @r{(overlay property)}"

#. type: table
#: original_texis/display.texi:1793
msgid "The @code{local-map} property is similar to @code{keymap} but replaces the buffer's local map rather than augmenting existing keymaps.  This also means it has lower precedence than minor mode keymaps."
msgstr "@code{local-map}プロパティは@code{keymap}プロパティと同様だが、既存のキーマップに付け加えるのではなくバッファーのローカルマップを置き換える点が異なる。これはそのキーマップがマイナーモードキーマップより低い優先度をもつことも意味する。"

#. type: Plain text
#: original_texis/display.texi:1802
msgid "The @code{keymap} and @code{local-map} properties do not affect a string displayed by the @code{before-string}, @code{after-string}, or @code{display} properties.  This is only relevant for mouse clicks and other mouse events that fall on the string, since point is never on the string.  To bind special mouse events for the string, assign it a @code{keymap} or @code{local-map} text property.  @xref{Special Properties}."
msgstr "@code{keymap}と@code{local-map}プロパティは@code{before-string}、@code{after-string}、@code{display}プロパティにより表示された文字列には影響しません。これはポイントがその文字列上にない場合のマウスクリックや、その文字列に関する他のマウスイベントにのみ関係があります。その文字列に特別なマウスイベントをバインドするには、そのイベントを@code{keymap}か@code{local-map}プロパティに割り当てます。@ref{Special Properties}を参照してください。"

#. type: subsection
#: original_texis/display.texi:1804
#, no-wrap
msgid "Searching for Overlays"
msgstr "Searching for Overlays"

#. type: cindex
#: original_texis/display.texi:1805
#, no-wrap
msgid "searching for overlays"
msgstr "searching for overlays"

#. type: cindex
#: original_texis/display.texi:1806
#, no-wrap
msgid "overlays, searching for"
msgstr "overlays, searching for"

#. type: defun
#: original_texis/display.texi:1808
#, no-wrap
msgid "overlays-at pos &optional sorted"
msgstr "overlays-at pos &optional sorted"

#. type: defun
#: original_texis/display.texi:1814
msgid "This function returns a list of all the overlays that cover the character at position @var{pos} in the current buffer.  If @var{sorted} is non-@code{nil}, the list is in decreasing order of priority, otherwise it is in no particular order.  An overlay contains position @var{pos} if it begins at or before @var{pos}, and ends after @var{pos}."
msgstr "この関数はカレントバッファー内の位置@var{pos}にある文字をカバーするすべてオーバーレイのリストをリターンする。@var{sorted}が非@code{nil}ならリストは優先度降順、それ以外なら特定の順にはソートされない。オーバーレイが@var{pos}、またはそれより前から始まり、かつ@var{pos}の後で終わるなら位置@var{pos}はオーバーレイに含まれる。"

#. type: defun
#: original_texis/display.texi:1817
msgid "To illustrate usage, here is a Lisp function that returns a list of the overlays that specify property @var{prop} for the character at point:"
msgstr "以下はポイント位置の文字にたいしてプロパティ@var{prop}を指定するオーバーレイのリストをリターンするLisp関数の使用例:"

#. type: smallexample
#: original_texis/display.texi:1828
#, no-wrap
msgid ""
"(defun find-overlays-specifying (prop)\n"
"  (let ((overlays (overlays-at (point)))\n"
"        found)\n"
"    (while overlays\n"
"      (let ((overlay (car overlays)))\n"
"        (if (overlay-get overlay prop)\n"
"            (setq found (cons overlay found))))\n"
"      (setq overlays (cdr overlays)))\n"
"    found))\n"
msgstr ""
"(defun find-overlays-specifying (prop)\n"
"  (let ((overlays (overlays-at (point)))\n"
"        found)\n"
"    (while overlays\n"
"      (let ((overlay (car overlays)))\n"
"        (if (overlay-get overlay prop)\n"
"            (setq found (cons overlay found))))\n"
"      (setq overlays (cdr overlays)))\n"
"    found))\n"

#. type: defun
#: original_texis/display.texi:1831
#, no-wrap
msgid "overlays-in beg end"
msgstr "overlays-in beg end"

#. type: defun
#: original_texis/display.texi:1838
msgid "This function returns a list of the overlays that overlap the region @var{beg} through @var{end}.  An overlay overlaps with a region if it contains one or more characters in the region; empty overlays (@pxref{Managing Overlays, empty overlay}) overlap if they are at @var{beg}, strictly between @var{beg} and @var{end}, or at @var{end} when @var{end} denotes the position at the end of the buffer."
msgstr "この関数は@var{beg}から@var{end}のリージョンと重複(overlap)するオーバーレイのリストをリターンする。オーバーレイがリージョン内の文字を少なくとも1つ含めば、オーバーレイとリージョンは重複している。空のオーバーレイ(@ref{Managing Overlays, empty overlay}を参照)が@var{beg}にある場合、厳密には@var{beg}と@var{beg}の間、または@var{end}がバッファー終端の位置を意味するときは@var{end}にある場合には重複している。"

#. type: defun
#: original_texis/display.texi:1840
#, no-wrap
msgid "next-overlay-change pos"
msgstr "next-overlay-change pos"

#. type: defun
#: original_texis/display.texi:1844
msgid "This function returns the buffer position of the next beginning or end of an overlay, after @var{pos}.  If there is none, it returns @code{(point-max)}."
msgstr "この関数は@var{pos}の後にあるオーバーレイの開始か終了となるバッファー位置をリターンする。それが存在しなければ@code{(point-max)}をリターンする。"

#. type: defun
#: original_texis/display.texi:1846
#, no-wrap
msgid "previous-overlay-change pos"
msgstr "previous-overlay-change pos"

#. type: defun
#: original_texis/display.texi:1850
msgid "This function returns the buffer position of the previous beginning or end of an overlay, before @var{pos}.  If there is none, it returns @code{(point-min)}."
msgstr "この関数は@var{pos}の前にあるオーバーレイの開始か終了となるバッファー位置をリターンする。それが存在しなければ@code{(point-min)}をリターンする。"

#. type: Plain text
#: original_texis/display.texi:1858
msgid "As an example, here's a simplified (and inefficient) version of the primitive function @code{next-single-char-property-change} (@pxref{Property Search}).  It searches forward from position @var{pos} for the next position where the value of a given property @code{prop}, as obtained from either overlays or text properties, changes."
msgstr "以下に例としてプリミティブ関数@code{next-single-char-property-change} (@ref{Property Search}を参照)の単純化(かつ非効率的)したバージョンを示します。これは位置@var{pos}から前方へ与えられたプロパティ@code{prop}にたいして、オーバーレイプロパティまたはテキストプロパティのいずれかの値が変化した次の位置を検索します。"

#. type: smallexample
#: original_texis/display.texi:1869
#, no-wrap
msgid ""
"(defun next-single-char-property-change (position prop)\n"
"  (save-excursion\n"
"    (goto-char position)\n"
"    (let ((propval (get-char-property (point) prop)))\n"
"      (while (and (not (eobp))\n"
"                  (eq (get-char-property (point) prop) propval))\n"
"        (goto-char (min (next-overlay-change (point))\n"
"                        (next-single-property-change (point) prop)))))\n"
"    (point)))\n"
msgstr ""
"(defun next-single-char-property-change (position prop)\n"
"  (save-excursion\n"
"    (goto-char position)\n"
"    (let ((propval (get-char-property (point) prop)))\n"
"      (while (and (not (eobp))\n"
"                  (eq (get-char-property (point) prop) propval))\n"
"        (goto-char (min (next-overlay-change (point))\n"
"                        (next-single-property-change (point) prop)))))\n"
"    (point)))\n"

#. type: cindex
#: original_texis/display.texi:1873
#, no-wrap
msgid "size of text on display"
msgstr "size of text on display"

#. type: cindex
#: original_texis/display.texi:1874
#, no-wrap
msgid "character width on display"
msgstr "character width on display"

#. type: Plain text
#: original_texis/display.texi:1879
msgid "Since not all characters have the same width, these functions let you check the width of a character.  @xref{Primitive Indent}, and @ref{Screen Lines}, for related functions."
msgstr "すべての文字が同じ幅をもつ訳ではありませんが、以下の関数により文字の幅をチェックできます。関連する関数については@ref{Primitive Indent}と@ref{Screen Lines}を参照してください。"

#. type: defun
#: original_texis/display.texi:1880
#, no-wrap
msgid "char-width char"
msgstr "char-width char"

#. type: defun
#: original_texis/display.texi:1886
msgid "This function returns the width in columns of the character @var{char}, if it were displayed in the current buffer (i.e., taking into account the buffer's display table, if any; @pxref{Display Tables}).  The width of a tab character is usually @code{tab-width} (@pxref{Usual Display})."
msgstr "この関数は文字@var{char}がカレントバッファーに表示された場合(つまりそのバッファーのディスプレイテーブルがあれば考慮に入れる。@ref{Display Tables}を参照)の幅を列数でリターンする。タブ文字の幅、通常は@code{tab-width} (@ref{Usual Display}を参照)。"

#. type: defun
#: original_texis/display.texi:1888
#, no-wrap
msgid "string-width string"
msgstr "string-width string"

#. type: defun
#: original_texis/display.texi:1891
msgid "This function returns the width in columns of the string @var{string}, if it were displayed in the current buffer and the selected window."
msgstr "この関数は文字列@var{string}がカレントバッファーおよび選択されたウィンドウに表示された場合の幅を列数でリターンする。"

#. type: defun
#: original_texis/display.texi:1893
#, no-wrap
msgid "truncate-string-to-width string width &optional start-column padding ellipsis"
msgstr "truncate-string-to-width string width &optional start-column padding ellipsis"

#. type: defun
#: original_texis/display.texi:1896
msgid "This function returns the part of @var{string} that fits within @var{width} columns, as a new string."
msgstr "この関数は@var{string}の一部を列数@var{width}にフィット新たな文字列としてリターンする。"

#. type: defun
#: original_texis/display.texi:1902
msgid "If @var{string} does not reach @var{width}, then the result ends where @var{string} ends.  If one multi-column character in @var{string} extends across the column @var{width}, that character is not included in the result.  Thus, the result can fall short of @var{width} but cannot go beyond it."
msgstr "@var{string}が@var{width}に満たなければ文字列終端が結果の終端となる。@var{string}内の1つの複数列文字が列@var{width}を超えて跨がるようなら、その文字は結果に含まれない。つまり結果は@var{width}より短くなるかもしれないが超えることはできない。"

#. type: defun
#: original_texis/display.texi:1908
msgid "The optional argument @var{start-column} specifies the starting column.  If this is non-@code{nil}, then the first @var{start-column} columns of the string are omitted from the value.  If one multi-column character in @var{string} extends across the column @var{start-column}, that character is not included."
msgstr "オプション引数@var{start-column}は開始列を指定する。これが非@code{nil}なら、その文字列の最初の@var{start-column}列は値から省かれる。@var{string}内の1つの複数列文字が列@var{start-column}を超えて跨がるようなら、その文字は結果に含まれない。"

#. type: defun
#: original_texis/display.texi:1915
msgid "The optional argument @var{padding}, if non-@code{nil}, is a padding character added at the beginning and end of the result string, to extend it to exactly @var{width} columns.  The padding character is used at the end of the result if it falls short of @var{width}.  It is also used at the beginning of the result if one multi-column character in @var{string} extends across the column @var{start-column}."
msgstr "オプション引数@var{padding}が非@code{nil}なら、結果となる文字列の幅を正確に@var{width}列に拡張するためにパディング文字が追加される。結果文字列が@var{width}より短ければ結果文字列の終端にパディング文字が使用される。@var{string}内の1つの複数列文字が列@var{start-column}を跨ぐ場合は先頭にもパディング文字が使用される。"

#. type: vindex
#: original_texis/display.texi:1916
#, no-wrap
msgid "truncate-string-ellipsis"
msgstr "truncate-string-ellipsis"

#. type: defun
#: original_texis/display.texi:1923
msgid "If @var{ellipsis} is non-@code{nil}, it should be a string which will replace the end of @var{string} (including any padding) if it extends beyond @var{width}, unless the display width of @var{string} is equal to or less than the display width of @var{ellipsis}.  If @var{ellipsis} is non-@code{nil} and not a string, it stands for the value of the variable @code{truncate-string-ellipsis}."
msgstr "@var{ellipsis}が非@code{nil}なら、それは@var{string}の表示幅が@var{ellipsis}の表示幅以下でなければ@var{width}を超えてしまう場合に、@var{string}の終端(任意のパディングを含む)を置き換える文字列であること。@var{ellipsis}が非@code{nil}かつ文字列以外なら、それは変数@code{truncate-string-ellipsis}の値を意味する。"

#. type: example
#: original_texis/display.texi:1929
#, no-wrap
msgid ""
"(truncate-string-to-width \"\\tab\\t\" 12 4)\n"
"     @result{} \"ab\"\n"
"(truncate-string-to-width \"\\tab\\t\" 12 4 ?\\s)\n"
"     @result{} \"    ab  \"\n"
msgstr ""
"(truncate-string-to-width \"\\tab\\t\" 12 4)\n"
"     @result{} \"ab\"\n"
"(truncate-string-to-width \"\\tab\\t\" 12 4 ?\\s)\n"
"     @result{} \"    ab  \"\n"

#. type: Plain text
#: original_texis/display.texi:1937
msgid "The following function returns the size in pixels of text as if it were displayed in a given window.  This function is used by @code{fit-window-to-buffer} and @code{fit-frame-to-buffer} (@pxref{Resizing Windows}) to make a window exactly as large as the text it contains."
msgstr "以下の関数は与えられたウィンドウにあるテキストを表示したときのサイズをピクセル単位でリターンします。この関数はテキストを含むためにウィンドウを十分大きくするために@code{fit-window-to-buffer}と@code{fit-frame-to-buffer} (@ref{Resizing Windows}を参照)により使用されます。"

#. type: defun
#: original_texis/display.texi:1938
#, no-wrap
msgid "window-text-pixel-size &optional window from to x-limit y-limit mode-and-header-line"
msgstr "window-text-pixel-size &optional window from to x-limit y-limit mode-and-header-line"

#. type: defun
#: original_texis/display.texi:1943
msgid "This function returns the size of the text of @var{window}'s buffer in pixels.  @var{window} must be a live window and defaults to the selected one.  The return value is a cons of the maximum pixel-width of any text line and the maximum pixel-height of all text lines."
msgstr "この関数は@var{window}のバッファーのテキストサイズをピクセル単位でリターンする。@var{window}は生きたウィンドウでなければならずデフォルトは選択されたウィンドウ。リターン値は任意のテキスト行の最大ピクセル幅と、すべてのテキスト行の最大ピクセル高さのコンス。"

#. type: defun
#: original_texis/display.texi:1952
msgid "The optional argument @var{from}, if non-@code{nil}, specifies the first text position to consider and defaults to the minimum accessible position of the buffer.  If @var{from} is @code{t}, it uses the minimum accessible position that is not a newline character.  The optional argument @var{to}, if non-@code{nil}, specifies the last text position to consider and defaults to the maximum accessible position of the buffer.  If @var{to} is @code{t}, it uses the maximum accessible position that is not a newline character."
msgstr "オプション引数@var{from}が非@code{nil}なら、それは考慮すべき最初のテキスト位置を指定する。デフォルトはそのバッファーのアクセス可能な最小の位置。@var{from}が@code{t}なら改行文字ではないアクセス可能な最小位置を使用する。オプション引数@var{to}が非@code{nil}なら、それは考慮すべき最後のテキスト位置を指定する。デフォルトはそのバッファーのアクセス可能な最大の位置。@var{to}が@code{t}なら改行文字ではないアクセス可能な最大位置を使用する。"

#. type: defun
#: original_texis/display.texi:1963
msgid "The optional argument @var{x-limit}, if non-@code{nil}, specifies the maximum pixel-width that can be returned.  @var{x-limit} @code{nil} or omitted, means to use the pixel-width of @var{window}'s body (@pxref{Window Sizes}); this is useful when the caller does not intend to change the width of @var{window}.  Otherwise, the caller should specify here the maximum width @var{window}'s body may assume.  Text whose x-coordinate is beyond @var{x-limit} is ignored.  Since calculating the width of long lines can take some time, it's always a good idea to make this argument as small as needed; in particular, if the buffer might contain long lines that will be truncated anyway."
msgstr "オプション引数@var{x-limit}が非@code{nil}なら、それはリターンされ得る最大ピクセル幅を指定する。@var{x-limit}が@code{nil}または省略された場合には、@var{window}のbody(@ref{Window Sizes}を参照)のピクセル幅を使用する。これは呼び出し側が@var{window}の幅の変更を意図しない場合に有用。それ以外なら呼び出し側はここで想定される@var{window}のbodyの最大幅を指定すること。X座標を超えるテキストの@var{x-limit}は無視される。長い行の幅の計算には多くの時間を要する可能性があるので、いずれにせよ切り詰められるであろう長い行を含むバッファーの場合には、特に必要に応じてこの引数の値を小さくすることはよいアイデアである。"

#. type: defun
#: original_texis/display.texi:1970
msgid "The optional argument @var{y-limit}, if non-@code{nil}, specifies the maximum pixel-height that can be returned.  Text lines whose y-coordinate is beyond @var{y-limit} are ignored.  Since calculating the pixel-height of a large buffer can take some time, it makes sense to specify this argument; in particular, if the caller does not know the size of the buffer."
msgstr "オプション引数@var{y-limit}が非@code{nil}なら、それはリターンされ得る最大ピクセル高さを指定する。Y座標を超えるテキストの@var{y-limit}は無視される。大きなバッファーのピクセル高さの計算には多くの時間を要する可能性があるので、特に呼び出し側がバッファーのサイズを知らない場合におけるこの変数の指定は合理的である。"

#. type: defun
#: original_texis/display.texi:1977
msgid "The optional argument @var{mode-and-header-line} @code{nil} or omitted means to not include the height of the mode- or header-line of @var{window} in the return value.  If it is either the symbol @code{mode-line} or @code{header-line}, include only the height of that line, if present, in the return value.  If it is @code{t}, include the height of both, if present, in the return value."
msgstr "オプション引数@var{mode-and-header-line}が@code{nil}または省略された場合には、リターン値に@var{window}のモードラインとヘッダーラインの高さを含めないことを意味する。これがシンボル@code{mode-line}か@code{header-line}のいずれかなら、それらが存在する場合にはリターン値にそのラインの高さだけを含める。これが@code{t}なら存在する場合は両方の高さをリターン値に含める。"

#. type: Plain text
#: original_texis/display.texi:1982
msgid "@code{window-text-pixel-size} treats the text displayed in a window as a whole and does not care about the size of individual lines.  The following function does."
msgstr "@code{window-text-pixel-size}はウィンドウ内に表示されているテキスト全体を扱い、個々の行サイズには留意しません。それは以下の関数が行います。"

#. type: defun
#: original_texis/display.texi:1983
#, no-wrap
msgid "window-lines-pixel-dimensions &optional window first last body inverse left"
msgstr "window-lines-pixel-dimensions &optional window first last body inverse left"

#. type: defun
#: original_texis/display.texi:1993
msgid "This function calculates the pixel dimensions of each line displayed in the specified @var{window}.  It does so by walking @var{window}'s current glyph matrix---a matrix storing the glyph (@pxref{Glyphs}) of each buffer character currently displayed in @var{window}.  If successful, it returns a list of cons pairs representing the x- and y-coordinates of the lower right corner of the last character of each line.  Coordinates are measured in pixels from an origin (0, 0) at the top-left corner of @var{window}.  @var{window} must be a live window and defaults to the selected one."
msgstr "この関数は指定した@var{window}に表示された各行のピクセルサイズを計算する。これは@var{window}のカレントグリフマトリクス( @var{window}にカレントで表示されている各バッファー文字のグリフを格納するマトリクス。@ref{Glyphs}を参照)を調べることにより機能する。成功したら各行末文字の右下隅のX座標とY座標を表すコンスペアのリストをリターンする。これらの座標は@var{window}の左上隅にある原点(0, 0)からピクセル単位で計測される。@var{window}は生きたウィンドウでなければならずデフォルトは選択されたウィンドウ。"

#. type: defun
#: original_texis/display.texi:2003
msgid "If the optional argument @var{first} is an integer, it denotes the index (starting with 0) of the first line of @var{window}'s glyph matrix to be returned.  Note that if @var{window} has a header line, the line with index 0 is that header line.  If @var{first} is @code{nil}, the first line to be considered is determined by the value of the optional argument @var{body}: If @var{body} is non-@code{nil}, this means to start with the first line of @var{window}'s body, skipping any header line, if present.  Otherwise, this function will start with the first line of @var{window}'s glyph matrix, possibly the header line."
msgstr "オプション引数@var{first}が整数なら、リターンする@var{window}のグリフマトリクスの最初の行のインデックス(0から開始)を示す。@var{window}にヘッダーラインがあればインデックス0の行はヘッダーラインになることに注意。@var{first}が@code{nil}なら考慮する最初の行はオプション引数@var{body}の値で判断される。@var{body}が非@code{nil}なら、(もしあれば)ヘッダーラインをすべてスキップして@var{window}のbodyの最初の行から開始することを意味する。それ以外なら@var{window}のグリフマトリクスの最初の行(ヘッダーラインかもしれない)から開始することを意味する。"

#. type: defun
#: original_texis/display.texi:2011
msgid "If the optional argument @var{last} is an integer, it denotes the index of the last line of @var{window}'s glyph matrix that shall be returned.  If @var{last} is @code{nil}, the last line to be considered is determined by the value of @var{body}: If @var{body} is non-@code{nil}, this means to use the last line of @var{window}'s body, omitting @var{window}'s mode line, if present.  Otherwise, this means to use the last line of @var{window} which may be the mode line."
msgstr "オプション引数@var{last}が整数なら、リターンする@var{window}のグリフマトリクスの最後の行のインデックスを示す。@var{last}が@code{nil}なら考慮する最初の行はオプション引数@var{body}の値で判断される。@var{body}が非@code{nil}なら、@var{window}のモードラインを省略して@var{window}のbodyの最後の行を使用することを意味する。それ以外なら@var{window}のグリフマトリクスの最後の行(モードラインかもしれない)を使用することを意味する。"

#. type: defun
#: original_texis/display.texi:2021
msgid "The optional argument @var{inverse}, if @code{nil}, means that the y-pixel value returned for any line specifies the distance in pixels from the left edge (body edge if @var{body} is non-@code{nil}) of @var{window} to the right edge of the last glyph of that line.  @var{inverse} non-@code{nil} means that the y-pixel value returned for any line specifies the distance in pixels from the right edge of the last glyph of that line to the right edge (body edge if @var{body} is non-@code{nil}) of @var{window}.  This is useful for determining the amount of slack space at the end of each line."
msgstr "オプション引数@var{inverse}が@code{nil}なら、リターンされる任意の行にたいするYピクセル値が@var{window}の左エッジ(@var{body}が非@code{nil}なら左bodyエッジ)から、その行の最後のグリフの右エッジまでのピクセル単位の距離を指定することを意味する。非@code{nil}の@var{inverse}は、リターンされる任意の行にたいするYピクセル値がその行の最後のグリフの右エッジから右エッジ(@var{body}が非@code{nil}なら右bodyエッジ)までのピクセル単位の距離を指定することを意味する。これは各行末の未使用スペースの量を判断するために有用。"

#. type: defun
#: original_texis/display.texi:2026
msgid "The optional argument @var{left}, if non-@code{nil} means to return the x- and y-coordinates of the lower left corner of the leftmost character on each line.  This is the value that should be used for windows that mostly display text from right to left."
msgstr "オプション引数@var{left}が非@code{nil}なら各行左端文字の左下隅のX座標とY座標をリターンすることを意味する。これは主に右から左にテキストを表示にたいして使用されるべき値である。"

#. type: defun
#: original_texis/display.texi:2036
msgid "If @var{left} is non-@code{nil} and @var{inverse} is @code{nil}, this means that the y-pixel value returned for any line specifies the distance in pixels from the left edge of the last (leftmost) glyph of that line to the right edge (body edge if @var{body} is non-@code{nil})  of @var{window}.  If @var{left} and @var{inverse} are both non-@code{nil}, the y-pixel value returned for any line specifies the distance in pixels from the left edge (body edge if @var{body} is non-@code{nil}) of @var{window} to the left edge of the last (leftmost)  glyph of that line."
msgstr "@var{left}が非@code{nil}で@var{inverse}が@code{nil}なら、リターンされる任意の行にたいするYピクセル値がその行の最後(左端)のグリフの左エッジから、@var{window}の右エッジ( @var{body}が非@code{nil}なら右bodyエッジ)までのピクセル単位の距離を指定することを意味する。@var{left}と@var{inverse}がいずれも非@code{nil}なら、リターンされる任意の行にたいするYピクセル値が@var{window}の左エッジ( @var{body}が非@code{nil}なら左bodyエッジ)から、その行の最後(左端)のグリフの左エッジまでのピクセル単位の距離を指定することを意味する。"

#. type: defun
#: original_texis/display.texi:2042
msgid "This function returns @code{nil} if the current glyph matrix of @var{window} is not up-to-date which usually happens when Emacs is busy, for example, when processing a command.  The value should be retrievable though when this function is run from an idle timer with a delay of zero seconds."
msgstr "この関数は@var{window}のカレントグリフマトリクスが最新でなければ@code{nil}をリターンする。これはたとえばコマンドの処理中のようにEmacsがbusyな際に通常は発生する。これは遅延が0秒であるようなアイドルタイマーからこの関数が実行された際に取得され得る値である。"

#. type: defun
#: original_texis/display.texi:2044
#, no-wrap
msgid "line-pixel-height"
msgstr "line-pixel-height"

#. type: defun
#: original_texis/display.texi:2048
msgid "This function returns the height in pixels of the line at point in the selected window.  The value includes the line spacing of the line (@pxref{Line Height})."
msgstr "この関数は選択されたウィンドウのポイント位置にある行の高さをピクセル単位でリターンする。値にはその行の行スペーシングが含まれる(@ref{Line Height}を参照)。"

#. type: Plain text
#: original_texis/display.texi:2055
msgid "When a buffer is displayed with line numbers (@pxref{Display Custom,,, emacs, The GNU Emacs Manual}), it is sometimes useful to know the width taken for displaying the line numbers.  The following function is for Lisp programs which need this information for layout calculations."
msgstr "行番号(@ref{Display Custom,,, emacs, The GNU Emacs Manual}を参照)とともにバッファーを表示している際には、行番号の表示に必要な幅が解ると便利なときがあります。以下はレイアウト計算用にこの情報を必要とするLispプログラムのための関数です。"

#. type: defun
#: original_texis/display.texi:2056
#, no-wrap
msgid "line-number-display-width &optional pixelwise"
msgstr "line-number-display-width &optional pixelwise"

#. type: defun
#: original_texis/display.texi:2069
msgid "This function returns the width used for displaying the line numbers in the selected window.  If the optional argument @var{pixelwise} is the symbol @code{columns}, the return value is a float number of the frame's canonical columns; if @var{pixelwise} is @code{t} or any other non-@code{nil} value, the value is an integer and is measured in pixels.  If @var{pixelwise} is omitted or @code{nil}, the value is the integer number of columns of the font defined for the @code{line-number} face, and doesn't include the 2 columns used to pad the numbers on display.  If line numbers are not displayed in the selected window, the value is zero regardless of the value of @var{pixelwise}.  Use @code{with-selected-window} (@pxref{Selecting Windows}) if you need this information about another window."
msgstr "この関数は選択されたウィンドウで行番号の表示に使用される幅をリターンする。オプション引数@var{pixelwise}がシンボル@code{columns}なら、リターン値はフレームの正準列(清純文字幅)にたいする浮動小数点数となる。@var{pixelwise}が@code{t}やそれ以外の非@code{nil}値なら、値はピクセルで計測した整数となる。@var{pixelwise}が省略か@code{nil}なら、値は@code{line-number}フェイスにたいして定義されたフォントによる列数を表す整数となる。この場合には値には番号の表示の間隙を埋めるために使用する2列分は含まれない。選択されたウィンドウに行番号が表示されていなければ、@var{pixelwise}の値にかかわらず値は0になる。別のウィンドウにたいしてこの情報が必要なら@code{with-selected-window}を使用すること(@ref{Selecting Windows}を参照)。"

#. type: cindex
#: original_texis/display.texi:2074
#, no-wrap
msgid "line height"
msgstr "line height"

#. type: cindex
#: original_texis/display.texi:2075
#, no-wrap
msgid "height of a line"
msgstr "height of a line"

#. type: Plain text
#: original_texis/display.texi:2080
msgid "The total height of each display line consists of the height of the contents of the line, plus optional additional vertical line spacing above or below the display line."
msgstr "各ディスプレイ行のトータル高さは、その行のコンテンツ高さにディスプレイ上部や下部にオプションで追加される垂直行スペーシングを加えて構成されます。"

#. type: Plain text
#: original_texis/display.texi:2087
msgid "The height of the line contents is the maximum height of any character or image on that display line, including the final newline if there is one.  (A display line that is continued doesn't include a final newline.)  That is the default line height, if you do nothing to specify a greater height.  (In the most common case, this equals the height of the corresponding frame's default font, see @ref{Frame Font}.)"
msgstr "行のコンテンツ高さは、もしあれば最後の改行を含む、そのディスプレイ行の文字またはイメージの最大高さです(継続されるディスプレイ行には最後の改行が含まれない)。特にこれより大きい高さを指定しなければ、これがデフォルトの行高さになります(これは一般的には対応するフレームのデフォルトのフォント高さに等しい。@ref{Frame Font}を参照)。"

#. type: Plain text
#: original_texis/display.texi:2092
msgid "There are several ways to explicitly specify a larger line height, either by specifying an absolute height for the display line, or by specifying vertical space.  However, no matter what you specify, the actual line height can never be less than the default."
msgstr "より大きい行高さを明示的に指定するためにはディスプレイ行の絶対高さ、または垂直スペースを指定する複数の方法が存在します。しかし何を指定したかに関わらず、実際の行高さがデフォルトの高さより小さくなることはありません。"

#. type: kindex
#: original_texis/display.texi:2093
#, no-wrap
msgid "line-height @r{(text property)}"
msgstr "line-height @r{(text property)}"

#. type: Plain text
#: original_texis/display.texi:2097
msgid "A newline can have a @code{line-height} text or overlay property that controls the total height of the display line ending in that newline."
msgstr "改行はその改行で終わるディスプレイ行のトータル高さを制御するテキストプロパティとオーバーレイプロパティ@code{line-height}をもつことができます。"

#. type: Plain text
#: original_texis/display.texi:2104
msgid "If the property value is @code{t}, the newline character has no effect on the displayed height of the line---the visible contents alone determine the height.  The @code{line-spacing} property, described below, is also ignored in this case.  This is useful for tiling small images (or image slices) without adding blank areas between the images."
msgstr "プロパティの値が@code{t}なら改行文字はその行の表示高さにたいして効果をもたず、可視なコンテンツだけが高さを決定します。この場合には以下で説明する@code{line-spacing}プロパティも無視されます。これはイメージ間に追加のブランク領域をもたない、小さなイメージ(やイメージスライス)にたいして有用です。"

#. type: Plain text
#: original_texis/display.texi:2111
msgid "If the property value is a list of the form @code{(@var{height} @var{total})}, that adds extra space @emph{below} the display line.  First Emacs uses @var{height} as a height spec to control extra space @emph{above} the line; then it adds enough space @emph{below} the line to bring the total line height up to @var{total}.  In this case, any value of @code{line-spacing} property for the newline is ignored."
msgstr "プロパティの値が@code{(@var{height} @var{total})}という形式のリストなら、これはディスプレイ行の@emph{下部}に余分なスペースを追加します。最初にEmacsは、その行の@emph{上部}の余分なスペースを制御するための高さspecとして、@var{height}を使用します。それから行のトータル高さを@var{total}にするために、行の@emph{下部}に必要なスペースを追加します。この場合には、改行にたいする@code{line-spacing}プロパティのすべての値は無視されます。"

#. type: cindex
#: original_texis/display.texi:2112
#, no-wrap
msgid "height spec"
msgstr "height spec"

#. type: Plain text
#: original_texis/display.texi:2116
msgid "Any other kind of property value is a height spec, which translates into a number---the specified line height.  There are several ways to write a height spec; here's how each of them translates into a number:"
msgstr "他の種類のプロパティ値は高さspec(height spec)です。これは行の高さを指定する数値に変換されます。高さspecを記述するためには複数の方法があります。以下はそれらが数値に変換される方法です:"

#. type: var{#1}
#: original_texis/display.texi:2118
#, no-wrap
msgid "integer"
msgstr "integer"

#. type: table
#: original_texis/display.texi:2120
msgid "If the height spec is a positive integer, the height value is that integer."
msgstr "高さspecが正の整数なら高さの値はその整数。"

#. type: var{#1}
#: original_texis/display.texi:2120
#, no-wrap
msgid "float"
msgstr "float"

#. type: table
#: original_texis/display.texi:2123
msgid "If the height spec is a float, @var{float}, the numeric height value is @var{float} times the frame's default line height."
msgstr "高さspecが浮動小数点数@var{float}なら高さ数値はそのフレームのデフォルト行高さの@var{float}倍。"

#. type: item
#: original_texis/display.texi:2123
#, no-wrap
msgid "(@var{face} . @var{ratio})"
msgstr "(@var{face} . @var{ratio})"

#. type: table
#: original_texis/display.texi:2128
msgid "If the height spec is a cons of the format shown, the numeric height is @var{ratio} times the height of face @var{face}.  @var{ratio} can be any type of number, or @code{nil} which means a ratio of 1.  If @var{face} is @code{t}, it refers to the current face."
msgstr "高さspecがこのフォーマットのコンスなら、高さ数値はフェイス@var{face}の高さの@var{ratio}倍。@var{ratio}には任意の型の数値を指定でき、@code{nil}は1のratioを意味する。@var{face}が@code{t}ならカレントフェイスを参照する。"

#. type: item
#: original_texis/display.texi:2128
#, no-wrap
msgid "(nil . @var{ratio})"
msgstr "(nil . @var{ratio})"

#. type: table
#: original_texis/display.texi:2131
msgid "If the height spec is a cons of the format shown, the numeric height is @var{ratio} times the height of the contents of the line."
msgstr "高さspecがこのフォーマットのコンスなら高さ数値はその行のコンテンツ高さの@var{ratio}倍。"

#. type: Plain text
#: original_texis/display.texi:2137
msgid "Thus, any valid height spec determines the height in pixels, one way or another.  If the line contents' height is less than that, Emacs adds extra vertical space above the line to achieve the specified total height."
msgstr "したがって任意の有効な種々の高さspecによりピクセル単位で高さが決定されます。行のコンテンツ高さがこれより小さければ、Emacsは指定されたトータル高さになるように余分な垂直スペースを行の上部に追加します。"

#. type: Plain text
#: original_texis/display.texi:2142
msgid "If you don't specify the @code{line-height} property, the line's height consists of the contents' height plus the line spacing.  There are several ways to specify the line spacing for different parts of Emacs text."
msgstr "@code{line-height}プロパティを指定しない場合には、その行の高さは行のコンテンツ高さとに行スペーシングを追加して構成されます。Emacsの異なるさまざまな部分のテキストにたいして、行スペーシングを指定する複数の方法が存在します。"

#. type: Plain text
#: original_texis/display.texi:2150
msgid "On graphical terminals, you can specify the line spacing for all lines in a frame, using the @code{line-spacing} frame parameter (@pxref{Layout Parameters}).  However, if the default value of @code{line-spacing} is non-@code{nil}, it overrides the frame's @code{line-spacing} parameter.  An integer specifies the number of pixels put below lines.  A floating-point number specifies the spacing relative to the frame's default line height."
msgstr "グラフィカルなディスプレイではフレームパラメーター@code{line-spacing} (@ref{Layout Parameters}を参照)を使用することにより、フレーム内のすべての行にたいして行スペーシングを指定できます。しかし@code{line-spacing}のデフォルト値が非@code{nil}なら、それはそのフレームのフレームパラメーター@code{line-spacing}をオーバーライドします。整数は行の下部に配するピクセル数を指定します。浮動小数点数はフレームのデフォルト行高さに相対的にスペーシングを指定します。"

#. type: vindex
#: original_texis/display.texi:2151
#, no-wrap
msgid "line-spacing"
msgstr "line-spacing"

#. type: Plain text
#: original_texis/display.texi:2157
msgid "You can specify the line spacing for all lines in a buffer via the buffer-local @code{line-spacing} variable.  An integer specifies the number of pixels put below lines.  A floating-point number specifies the spacing relative to the default frame line height.  This overrides line spacings specified for the frame."
msgstr "バッファーローカル変数@code{line-spacing}を通じて、バッファー内のすべての行の行スペーシングを指定できます。整数は行の下部に配するピクセル数を指定します。浮動小数点数はデフォルトフレーム行高さに相対的にスペーシングを指定します。これはそのフレームにたいして指定された行スペーシングをオーバーライドします。"

#. type: kindex
#: original_texis/display.texi:2158
#, no-wrap
msgid "line-spacing @r{(text property)}"
msgstr "line-spacing @r{(text property)}"

#. type: Plain text
#: original_texis/display.texi:2164
msgid "Finally, a newline can have a @code{line-spacing} text or overlay property that can enlarge the default frame line spacing and the buffer local @code{line-spacing} variable: if its value is larger than the buffer or frame defaults, that larger value is used instead, for the display line ending in that newline."
msgstr "最後に改行は改行で終わるディスプレイ行にたいしてデフォルトフレーム行スペーシングを広くできるテキストプロパティとオーバーレイプロパティ@code{line-spacing}、および変数@code{line-spacing}をもつことができます。その値がバッファーやフレームのデフォルトより大きければ、その改行で終端されるディスプレイ行にはかわりにその値が使用されます。"

#. type: Plain text
#: original_texis/display.texi:2170
msgid "One way or another, these mechanisms specify a Lisp value for the spacing of each line.  The value is a height spec, and it translates into a Lisp value as described above.  However, in this case the numeric height value specifies the line spacing, rather than the line height."
msgstr "種々の方法によりこれらのメカニズムは各行のスペーシングにたいするLisp値を指定します。値は高さspecで、これは上述したLisp値に変換されます。しかしこの場合には高さ数値は行高さではなく行スペーシングを指定します。"

#. type: Plain text
#: original_texis/display.texi:2172
msgid "On text terminals, the line spacing cannot be altered."
msgstr "テキスト端末では行スペーシングは変更できません。"

#. type: cindex
#: original_texis/display.texi:2175
#, no-wrap
msgid "faces"
msgstr "faces"

#. type: Plain text
#: original_texis/display.texi:2181
msgid "A @dfn{face} is a collection of graphical attributes for displaying text: font, foreground color, background color, optional underlining, etc.  Faces control how Emacs displays text in buffers, as well as other parts of the frame such as the mode line."
msgstr "@dfn{フェイス(face)}とはフォント、フォアグラウンドカラー、バックグラウンドカラー、オプションのアンダーライン等のテキストを表示するためのグラフィカルな属性のコレクションのことです。フェイスはEmacsがバッファー内や、同様にモードラインのようなフレームの他の部分でテキストを表示する方法を制御します。"

#. type: cindex
#: original_texis/display.texi:2182
#, no-wrap
msgid "anonymous face"
msgstr "anonymous face"

#. type: Plain text
#: original_texis/display.texi:2189
msgid "One way to represent a face is as a property list of attributes, like @code{(:foreground \"red\" :weight bold)}.  Such a list is called an @dfn{anonymous face}.  For example, you can assign an anonymous face as the value of the @code{face} text property, and Emacs will display the underlying text with the specified attributes.  @xref{Special Properties}."
msgstr "フェイスを表現する1つの方法として@code{(:foreground \"red\" :weight bold)}のような属性のプロパティリストがあります。このようなリストは@dfn{anonymousフェイス(anonymous face)}と呼ばれます。たとえば@code{face}テキストプロパティとしてanonymousフェイスを割り当てることができ、Emacsは指定された属性でテキストを表示するでしょう。@ref{Special Properties}を参照してください。"

#. type: cindex
#: original_texis/display.texi:2190
#, no-wrap
msgid "face name"
msgstr "face name"

#. type: Plain text
#: original_texis/display.texi:2197
msgid "More commonly, a face is referred to via a @dfn{face name}: a Lisp symbol associated with a set of face attributes@footnote{For backward compatibility, you can also use a string to specify a face name; that is equivalent to a Lisp symbol with the same name.}.  Named faces are defined using the @code{defface} macro (@pxref{Defining Faces}).  Emacs comes with several standard named faces (@pxref{Basic Faces})."
msgstr "より一般的にはフェイスは@dfn{フェイス名(face name)}を通じて参照されます。これはフェイス属性のセットに関連付けられたLispシンボル@footnote{後方互換のため、フェイス名の指定に文字列も使用できます。これは同名のLispシンボルと等価です。}です。名前つきフェイスは@code{defface}マクロを使用して定義できます(@ref{Defining Faces}を参照)。Emacsにはいくつかの標準名前つきフェイスが同梱されています(@ref{Basic Faces}を参照)。"

#. type: Plain text
#: original_texis/display.texi:2203
msgid "Many parts of Emacs require named faces, and do not accept anonymous faces.  These include the functions documented in @ref{Attribute Functions}, and the variable @code{font-lock-keywords} (@pxref{Search-based Fontification}).  Unless otherwise stated, we will use the term @dfn{face} to refer only to named faces."
msgstr "Emacsの多くの箇所で名前つきフェイスが要求されており、anonymousフェイスは受け入れられません。これらには@ref{Attribute Functions}に記述される関数、および変数@code{font-lock-keywords} (@ref{Search-based Fontification}を参照)が含まれます。特に明記しないかぎり名前つきフェイスの参照だけに用語@dfn{フェイス}を使用することにします。"

#. type: defun
#: original_texis/display.texi:2204
#, no-wrap
msgid "facep object"
msgstr "facep object"

#. type: defun
#: original_texis/display.texi:2208
msgid "This function returns a non-@code{nil} value if @var{object} is a named face: a Lisp symbol or string which serves as a face name.  Otherwise, it returns @code{nil}."
msgstr "この関数は@var{object}が名前つきフェイス(フェイス名の役目をもつLispシンボルか文字列)なら非@code{nil}、それ以外なら@code{nil}をリターンする。"

#. type: subsection
#: original_texis/display.texi:2225 original_texis/display.texi:2227
#: original_texis/display.texi:2228
#, no-wrap
msgid "Face Attributes"
msgstr "Face Attributes"

#. type: menuentry
#: original_texis/display.texi:2225
msgid "What is in a face?"
msgstr "フェイスとは?"

#. type: subsection
#: original_texis/display.texi:2225 original_texis/display.texi:2462
#: original_texis/display.texi:2463
#, no-wrap
msgid "Defining Faces"
msgstr "Defining Faces"

#. type: menuentry
#: original_texis/display.texi:2225
msgid "How to define a face."
msgstr "フェイスを定義する方法。"

#. type: node
#: original_texis/display.texi:2225 original_texis/display.texi:2641
#, no-wrap
msgid "Attribute Functions"
msgstr "Attribute Functions"

#. type: menuentry
#: original_texis/display.texi:2225
msgid "Functions to examine and set face attributes."
msgstr "フェイス属性の確認やセットを行う関数。"

#. type: subsection
#: original_texis/display.texi:2225 original_texis/display.texi:2850
#: original_texis/display.texi:2851
#, no-wrap
msgid "Displaying Faces"
msgstr "Displaying Faces"

#. type: menuentry
#: original_texis/display.texi:2225
msgid "How Emacs combines the faces specified for a character."
msgstr "ある文字にたいして指定されたフェイスをEmacsが組み合わせる方法。"

#. type: subsection
#: original_texis/display.texi:2225 original_texis/display.texi:2917
#: original_texis/display.texi:2918
#, no-wrap
msgid "Face Remapping"
msgstr "Face Remapping"

#. type: menuentry
#: original_texis/display.texi:2225
msgid "Remapping faces to alternative definitions."
msgstr "フェイスを別の定義にリマップする。"

#. type: node
#: original_texis/display.texi:2225 original_texis/display.texi:3031
#, no-wrap
msgid "Face Functions"
msgstr "Face Functions"

#. type: menuentry
#: original_texis/display.texi:2225
msgid "How to define and examine faces."
msgstr "フェイスの定義と確認を行う方法。"

#. type: node
#: original_texis/display.texi:2225 original_texis/display.texi:3080
#, no-wrap
msgid "Auto Faces"
msgstr "Auto Faces"

#. type: menuentry
#: original_texis/display.texi:2225
msgid "Hook for automatic face assignment."
msgstr "自動的にフェイスを割り当てるフック。"

#. type: subsection
#: original_texis/display.texi:2225 original_texis/display.texi:3115
#: original_texis/display.texi:3116
#, no-wrap
msgid "Basic Faces"
msgstr "Basic Faces"

#. type: menuentry
#: original_texis/display.texi:2225
msgid "Faces that are defined by default."
msgstr "デフォルトで定義されるフェイス。"

#. type: subsection
#: original_texis/display.texi:2225 original_texis/display.texi:3177
#: original_texis/display.texi:3178
#, no-wrap
msgid "Font Selection"
msgstr "Font Selection"

#. type: menuentry
#: original_texis/display.texi:2225
msgid "Finding the best available font for a face."
msgstr "あるフェイスに最適なフォントを見つける。"

#. type: node
#: original_texis/display.texi:2225 original_texis/display.texi:3287
#, no-wrap
msgid "Font Lookup"
msgstr "Font Lookup"

#. type: menuentry
#: original_texis/display.texi:2225
msgid "Looking up the names of available fonts and information about them."
msgstr "利用可能なフォント名とそれらの情報の照会。"

#. type: subsection
#: original_texis/display.texi:2225 original_texis/display.texi:3346
#: original_texis/display.texi:3347
#, no-wrap
msgid "Fontsets"
msgstr "Fontsets"

#. type: menuentry
#: original_texis/display.texi:2225
msgid "A fontset is a collection of fonts that handle a range of character sets."
msgstr "フォントセットは文字セットの範囲を処理するフォントコレクション。"

#. type: node
#: original_texis/display.texi:2225 original_texis/display.texi:3506
#, no-wrap
msgid "Low-Level Font"
msgstr "Low-Level Font"

#. type: menuentry
#: original_texis/display.texi:2225
msgid "Lisp representation for character display fonts."
msgstr "文字表示フォントのLisp表現。"

#. type: cindex
#: original_texis/display.texi:2229
#, no-wrap
msgid "face attributes"
msgstr "face attributes"

#. type: Plain text
#: original_texis/display.texi:2234
msgid "@dfn{Face attributes} determine the visual appearance of a face.  The following table lists all the face attributes, their possible values, and their effects."
msgstr "@dfn{フェイス属性(Face attributes)}は、フェイスの視覚的外観を決定します。以下はすべてのフェイス属性と、それらの可能な値と効果に関するテーブルです。"

#. type: Plain text
#: original_texis/display.texi:2242
msgid "Apart from the values given below, each face attribute can have the value @code{unspecified}.  This special value means that the face doesn't specify that attribute directly.  An @code{unspecified} attribute tells Emacs to refer instead to a parent face (see the description @code{:inherit} attribute below); or, failing that, to an underlying face (@pxref{Displaying Faces}).  The @code{default} face must specify all attributes."
msgstr "以下の値とは別に各フェイス属性は値@code{unspecified}をもつことができます。この特殊な値はフェイスがその属性を直接指定しないことを意味します。@code{unspecified}属性はEmacsにかわりに親フェイス(以下の@code{:inherit}属性の記述を参照)を参照して、それに失敗したら基礎フェイス(@ref{Displaying Faces}を参照)を参照することを指示します。@code{default}フェイスはすべての属性を指定しなければなりません。"

#. type: Plain text
#: original_texis/display.texi:2246
msgid "Some of these attributes are meaningful only on certain kinds of displays.  If your display cannot handle a certain attribute, the attribute is ignored."
msgstr "これらの属性のいくつかは特定の種類のディスプレイにおいてのみ意味があります。ディスプレイが特定の属性を処理できなければ、その属性は無視されます。"

#. type: item
#: original_texis/display.texi:2248 original_texis/display.texi:3556
#, no-wrap
msgid ":family"
msgstr ":family"

#. type: table
#: original_texis/display.texi:2253
msgid "Font family name (a string).  @xref{Fonts,,, emacs, The GNU Emacs Manual}, for more information about font families.  The function @code{font-family-list} (see below) returns a list of available family names."
msgstr "フォントファミリー名(文字列)。フォントファミリーに関する詳細は@ref{Fonts,,, emacs, The GNU Emacs Manual}を参照のこと。関数@code{font-family-list} (以下参照)は利用可能なファミリー名のリストをリターンする。"

#. type: itemx
#: original_texis/display.texi:2254 original_texis/display.texi:3557
#, no-wrap
msgid ":foundry"
msgstr ":foundry"

#. type: table
#: original_texis/display.texi:2258
msgid "The name of the @dfn{font foundry} for the font family specified by the @code{:family} attribute (a string).  @xref{Fonts,,, emacs, The GNU Emacs Manual}."
msgstr "@code{:family}属性により指定されるフォントファミリーにたいする@dfn{フォントfoundry} (文字列)。@ref{Fonts,,, emacs, The GNU Emacs Manual}を参照のこと。"

#. type: itemx
#: original_texis/display.texi:2259 original_texis/display.texi:3560
#, no-wrap
msgid ":width"
msgstr ":width"

#. type: table
#: original_texis/display.texi:2264
msgid "Relative character width.  This should be one of the symbols @code{ultra-condensed}, @code{extra-condensed}, @code{condensed}, @code{semi-condensed}, @code{normal}, @code{semi-expanded}, @code{expanded}, @code{extra-expanded}, or @code{ultra-expanded}."
msgstr "相対的な文字幅。これはシンボル@code{ultra-condensed}、@code{extra-condensed}、@code{condensed}、@code{semi-condensed}、@code{normal}、@code{semi-expanded}、@code{expanded}、@code{extra-expanded}、@code{ultra-expanded}のいずれかであること。"

#. type: item
#: original_texis/display.texi:2265
#, no-wrap
msgid ":height"
msgstr ":height"

#. type: table
#: original_texis/display.texi:2268
msgid "The height of the font.  In the simplest case, this is an integer in units of 1/10 point."
msgstr "フォントの高さ。もっともシンプルなケースでは1/10ポイントを単位とする整数。"

#. type: table
#: original_texis/display.texi:2277
msgid "The value can also be floating point or a function, which specifies the height relative to an @dfn{underlying face} (@pxref{Displaying Faces}).  A floating-point value specifies the amount by which to scale the height of the underlying face.  A function value is called with one argument, the height of the underlying face, and returns the height of the new face.  If the function is passed an integer argument, it must return an integer."
msgstr "値には@dfn{基礎フェイス(underlying face)}にたいして相対的に高さを指定する浮動小数点数、または関数も指定できる(@ref{Displaying Faces}を参照)。浮動小数点数は基礎フェイスの高さをスケーリングする量を指定する。関数値は基礎フェイスの高さを単一の引数として呼び出されて、新たなフェイスの高さをリターンする。関数が整数を引数として渡された場合には整数をリターンしなければならない。"

#. type: table
#: original_texis/display.texi:2280
msgid "The height of the default face must be specified using an integer; floating point and function values are not allowed."
msgstr "デフォルトフェイスの高さは整数を使用して指定しなければならない。浮動小数点数や関数は受け入れられない。"

#. type: itemx
#: original_texis/display.texi:2281 original_texis/display.texi:3558
#, no-wrap
msgid ":weight"
msgstr ":weight"

#. type: table
#: original_texis/display.texi:2289
msgid "Font weight---one of the symbols (from densest to faintest)  @code{ultra-bold}, @code{extra-bold}, @code{bold}, @code{semi-bold}, @code{normal}, @code{semi-light}, @code{light}, @code{extra-light}, or @code{ultra-light}.  On text terminals which support variable-brightness text, any weight greater than normal is displayed as extra bright, and any weight less than normal is displayed as half-bright."
msgstr "フォントのweight。シンボル@code{ultra-bold}、@code{extra-bold}、@code{bold}、@code{semi-bold}、@code{normal}、@code{semi-light}、@code{light}、@code{extra-light}、@code{ultra-light} (太字から細字順)のいずれか。可変輝度テキストをサポートするテキスト端末では、normalより大なweightはより高輝度、小なweightはより低輝度で表示される。"

#. type: cindex
#: original_texis/display.texi:2290
#, no-wrap
msgid "italic text"
msgstr "italic text"

#. type: itemx
#: original_texis/display.texi:2291 original_texis/display.texi:3559
#, no-wrap
msgid ":slant"
msgstr ":slant"

#. type: table
#: original_texis/display.texi:2296
msgid "Font slant---one of the symbols @code{italic}, @code{oblique}, @code{normal}, @code{reverse-italic}, or @code{reverse-oblique}.  On text terminals that support variable-brightness text, slanted text is displayed as half-bright."
msgstr "フォントのslant。シンボル@code{italic}、@code{oblique}、@code{normal}、@code{reverse-italic}、@code{reverse-oblique}のいずれか。可変輝度テキストをサポートするテキスト端末ではslantされたテキストはhalf-brightで表示される。"

#. type: item
#: original_texis/display.texi:2297
#, no-wrap
msgid ":foreground"
msgstr ":foreground"

#. type: table
#: original_texis/display.texi:2302
msgid "Foreground color, a string.  The value can be a system-defined color name, or a hexadecimal color specification.  @xref{Color Names}.  On black-and-white displays, certain shades of gray are implemented by stipple patterns."
msgstr "フォアグラウンドカラー(文字列)。値にはシステム定義済みカラー、または16進カラー仕様を指定できる。@ref{Color Names}を参照のこと。白黒ディスプレイでは特定のグレー色調が点描パターンで実装されている。"

#. type: item
#: original_texis/display.texi:2303
#, no-wrap
msgid ":distant-foreground"
msgstr ":distant-foreground"

#. type: table
#: original_texis/display.texi:2311
msgid "Alternative foreground color, a string.  This is like @code{:foreground} but the color is only used as a foreground when the background color is near to the foreground that would have been used.  This is useful for example when marking text (i.e., the region face).  If the text has a foreground that is visible with the region face, that foreground is used.  If the foreground is near the region face background, @code{:distant-foreground} is used instead so the text is readable."
msgstr "代替えのフォアグラウンドカラー(文字列)。これは@code{:foreground}と似ているが、使用されるであろうフォアグラウンドカラーがバックグラウンドカラーに近いときのみフォアグラウンドカラーとして使用される点が異なる。これはたとえばテキストをマーク時(リージョンフェイス)に有用。そのテキストがリージョンフェイスとして可視なフォアグラウンドをもつ場合には、そのフォアグラウンドが使用される。フォアグラウンドがリージョンフェイスのバックグラウンドに近ければ、テキストを可読にするために@code{:distant-foreground}が使用される。"

#. type: item
#: original_texis/display.texi:2312
#, no-wrap
msgid ":background"
msgstr ":background"

#. type: table
#: original_texis/display.texi:2315
msgid "Background color, a string.  The value can be a system-defined color name, or a hexadecimal color specification.  @xref{Color Names}."
msgstr "バックグラウンドカラー(文字列)。値にはシステム定義済みカラー、または16進カラー仕様を指定できる。@ref{Color Names}を参照のこと。"

#. type: cindex
#: original_texis/display.texi:2316
#, no-wrap
msgid "underlined text"
msgstr "underlined text"

#. type: item
#: original_texis/display.texi:2317
#, no-wrap
msgid ":underline"
msgstr ":underline"

#. type: table
#: original_texis/display.texi:2320
msgid "Whether or not characters should be underlined, and in what way.  The possible values of the @code{:underline} attribute are:"
msgstr "文字にアンダーラインを引くべきか否か、およびその方法。@code{:underline}属性として可能な値は以下のとおり:"

#. type: item
#: original_texis/display.texi:2322 original_texis/display.texi:2360
#: original_texis/display.texi:3952 original_texis/display.texi:7130
#: original_texis/display.texi:7163 original_texis/display.texi:7309
#, no-wrap
msgid "nil"
msgstr "nil"

#. type: table
#: original_texis/display.texi:2324
msgid "Don't underline."
msgstr "アンダーラインを引かない。"

#. type: table
#: original_texis/display.texi:2327
msgid "Underline with the foreground color of the face."
msgstr "そのフェイスのフォアグラウンドカラーでアンダーラインを引く。"

#. type: var{#1}
#: original_texis/display.texi:2328 original_texis/display.texi:2366
#, no-wrap
msgid "color"
msgstr "color"

#. type: table
#: original_texis/display.texi:2330
msgid "Underline in color @var{color}, a string specifying a color."
msgstr "文字列@var{color}で指定されたカラーでアンダーラインを引く。"

#. type: code{#1}
#: original_texis/display.texi:2331
#, no-wrap
msgid "(:color @var{color} :style @var{style})"
msgstr "(:color @var{color} :style @var{style})"

#. type: table
#: original_texis/display.texi:2338
msgid "@var{color} is either a string, or the symbol @code{foreground-color}, meaning the foreground color of the face.  Omitting the attribute @code{:color} means to use the foreground color of the face.  @var{style} should be a symbol @code{line} or @code{wave}, meaning to use a straight or wavy line.  Omitting the attribute @code{:style} means to use a straight line."
msgstr "@var{color}は文字列、またはそのフェイスのフォアグラウンドカラーを意味するシンボル@code{foreground-color}。属性@code{:color}の省略はフェイスのフォアグラウンドカラーの使用を意味する。@var{style}は直線を意味する@code{line}、または波線を意味する@code{wave}いずれかのシンボルであること。属性@code{:style}の省略は直線を意味する。"

#. type: cindex
#: original_texis/display.texi:2340
#, no-wrap
msgid "overlined text"
msgstr "overlined text"

#. type: item
#: original_texis/display.texi:2341
#, no-wrap
msgid ":overline"
msgstr ":overline"

#. type: table
#: original_texis/display.texi:2346
msgid "Whether or not characters should be overlined, and in what color.  If the value is @code{t}, overlining uses the foreground color of the face.  If the value is a string, overlining uses that color.  The value @code{nil} means do not overline."
msgstr "文字にオーバーラインを引くべきか否か、およびそのカラー。値が@code{t}ならフェイスのフォアグラウンドカラーを使用してオーバーラインを引く。値が文字列ならそのカラーを使用してオーバーラインを引く。値@code{nil}はオーバーラインを引かないことを意味する。"

#. type: cindex
#: original_texis/display.texi:2347
#, no-wrap
msgid "strike-through text"
msgstr "strike-through text"

#. type: item
#: original_texis/display.texi:2348
#, no-wrap
msgid ":strike-through"
msgstr ":strike-through"

#. type: table
#: original_texis/display.texi:2351
msgid "Whether or not characters should be strike-through, and in what color.  The value is used like that of @code{:overline}."
msgstr "文字に取り消し線を引くべきか否か、およびそのカラー。値は@code{:overline}で使用される値と同じ。"

#. type: cindex
#: original_texis/display.texi:2352
#, no-wrap
msgid "2D box"
msgstr "2D box"

#. type: cindex
#: original_texis/display.texi:2353
#, no-wrap
msgid "3D box"
msgstr "3D box"

#. type: item
#: original_texis/display.texi:2354
#, no-wrap
msgid ":box"
msgstr ":box"

#. type: table
#: original_texis/display.texi:2358
msgid "Whether or not a box should be drawn around characters, its color, the width of the box lines, and 3D appearance.  Here are the possible values of the @code{:box} attribute, and what they mean:"
msgstr "文字周囲に枠(box)を描画するか否か、そのカラー、枠線の幅、および3D外観。以下は@code{:box}の可能な値と意味:"

#. type: table
#: original_texis/display.texi:2362
msgid "Don't draw a box."
msgstr "枠を描画しない。"

#. type: table
#: original_texis/display.texi:2365
msgid "Draw a box with lines of width 1, in the foreground color."
msgstr "幅1のフォアグラウンドカラーで枠線を描画する。"

#. type: table
#: original_texis/display.texi:2368
msgid "Draw a box with lines of width 1, in color @var{color}."
msgstr "幅1のカラー@var{color}で枠線を描画する。"

#. type: code{#1}
#: original_texis/display.texi:2369
#, no-wrap
msgid "(:line-width @var{width} :color @var{color} :style @var{style})"
msgstr "(:line-width @var{width} :color @var{color} :style @var{style})"

#. type: table
#: original_texis/display.texi:2375
msgid "This way you can explicitly specify all aspects of the box.  The value @var{width} specifies the width of the lines to draw; it defaults to 1.  A negative width @var{-n} means to draw a line of width @var{n} whose top and bottom parts occupy the space of the underlying text, thus avoiding any increase in the character height."
msgstr "この方法では枠のすべての形相を明示的に指定できる。値@var{width}は描画する線の幅を指定し、デフォルトは1。負の幅@var{-n}は上端と下端の部分が基礎テキストのスペースを占有する線幅@var{n}を意味し、文字高さの増加を避けることができる。"

#. type: table
#: original_texis/display.texi:2379
msgid "The value @var{color} specifies the color to draw with.  The default is the foreground color of the face for simple boxes, and the background color of the face for 3D boxes."
msgstr "値@var{color}は描画するカラーを指定する。シンプルな枠線ではフェイスのフォアグラウンドカラー、3D枠線ではフェイスのバックグラウンドカラーがデフォルト。"

#. type: table
#: original_texis/display.texi:2385
msgid "The value @var{style} specifies whether to draw a 3D box.  If it is @code{released-button}, the box looks like a 3D button that is not being pressed.  If it is @code{pressed-button}, the box looks like a 3D button that is being pressed.  If it is @code{nil} or omitted, a plain 2D box is used."
msgstr "値@var{style}は3D枠線を描画するか否かを指定する。@code{released-button}なら押下された3Dボタンのような外観、@code{pressed-button}なら押下されていない3Dボタンのような外観、@code{nil}または省略された場合には2D枠線が使用される。"

#. type: item
#: original_texis/display.texi:2387
#, no-wrap
msgid ":inverse-video"
msgstr ":inverse-video"

#. type: table
#: original_texis/display.texi:2390
msgid "Whether or not characters should be displayed in inverse video.  The value should be @code{t} (yes) or @code{nil} (no)."
msgstr "文字が反転表示されて表示されるべきか否か。値は@code{t} (反転表示する)か@code{nil} (反転表示しない)のいずれか。"

#. type: item
#: original_texis/display.texi:2391
#, no-wrap
msgid ":stipple"
msgstr ":stipple"

#. type: table
#: original_texis/display.texi:2393
msgid "The background stipple, a bitmap."
msgstr "バックグラウンドの点描(ビットマップ)。"

#. type: table
#: original_texis/display.texi:2397
msgid "The value can be a string; that should be the name of a file containing external-format X bitmap data.  The file is found in the directories listed in the variable @code{x-bitmap-file-path}."
msgstr "値には文字列を指定できる。外部形式Xビットマップデータを含むファイルの名前であること。ファイルは変数@code{x-bitmap-file-path}にリストされるディレクトリー内で検索される。"

#. type: table
#: original_texis/display.texi:2405
msgid "Alternatively, the value can specify the bitmap directly, with a list of the form @code{(@var{width} @var{height} @var{data})}.  Here, @var{width} and @var{height} specify the size in pixels, and @var{data} is a string containing the raw bits of the bitmap, row by row.  Each row occupies @math{(@var{width} + 7) / 8} consecutive bytes in the string (which should be a unibyte string for best results).  This means that each row always occupies at least one whole byte."
msgstr "かわりに@code{(@var{width} @var{height} @var{data})}という形式のリストによりビットマップで直接値を指定できる。ここで@var{width}と@var{height}はピクセル単位によるサイズ、@var{data}は行単位でビットマップのrawビットを含む文字列。各行は文字列内で連続する@math{(@var{width} + 7) / 8}バイトを占める(最善の結果を得るためにはユニバイト文字列であること)。これは各行が常に少なくとも1バイト全体を占めることを意味する。"

#. type: table
#: original_texis/display.texi:2407
msgid "If the value is @code{nil}, that means use no stipple pattern."
msgstr "値が@code{nil}なら点描パターンを使用しないことを意味する。"

#. type: table
#: original_texis/display.texi:2410
msgid "Normally you do not need to set the stipple attribute, because it is used automatically to handle certain shades of gray."
msgstr "これは特定のグレー色調を処理するために自動的に使用されるので、通常はstipple属性のセットは必要ない。"

#. type: item
#: original_texis/display.texi:2411
#, no-wrap
msgid ":font"
msgstr ":font"

#. type: table
#: original_texis/display.texi:2416
msgid "The font used to display the face.  Its value should be a font object or a fontset.  @xref{Low-Level Font}, for information about font objects, font specs, and font entities.  @xref{Fontsets}, for information about fontsets."
msgstr "そのフェイスの表示に使用されるフォント。値はフォントオブジェクトかフォントセットであること。フォントオブジェクト、フォントスペース、フォントエンティティーに関する情報は@ref{Low-Level Font}、フォントセットに関する情報は@ref{Fontsets}を参照のこと。"

#. type: table
#: original_texis/display.texi:2427
msgid "When specifying this attribute using @code{set-face-attribute} (@pxref{Attribute Functions}), you may also supply a font spec, a font entity, or a string.  Emacs converts such values to an appropriate font object, and stores that font object as the actual attribute value.  If you specify a string, the contents of the string should be a font name (@pxref{Fonts,,, emacs, The GNU Emacs Manual}); if the font name is an XLFD containing wildcards, Emacs chooses the first font matching those wildcards.  Specifying this attribute also changes the values of the @code{:family}, @code{:foundry}, @code{:width}, @code{:height}, @code{:weight}, and @code{:slant} attributes."
msgstr "@code{set-face-attribute} (@ref{Attribute Functions}を参照)を使用してこの属性を指定する際にはフォントspec、フォントエンティティー、または文字列を与えることもできる。Emacsはそのような値を適切なフォントオブジェクトに変換して、実際の属性値としてそのフォントオブジェクトを格納する。文字列を指定する場合には、その文字列のコンテンツはフォント名であること(@ref{Fonts,,, emacs, The GNU Emacs Manual}を参照)。フォント名がワイルドカードを含むXLFDなら、Emacsはそれらのワイルドカードに最初にマッチするフォントを選択する。この属性の指定により@code{:family}、@code{:foundry}、@code{:width}、@code{:height}、@code{:weight}、@code{:slant}の属性値も変更される。"

#. type: cindex
#: original_texis/display.texi:2428
#, no-wrap
msgid "inheritance, for faces"
msgstr "inheritance, for faces"

#. type: item
#: original_texis/display.texi:2429
#, no-wrap
msgid ":inherit"
msgstr ":inherit"

#. type: table
#: original_texis/display.texi:2438
msgid "The name of a face from which to inherit attributes, or a list of face names.  Attributes from inherited faces are merged into the face like an underlying face would be, with higher priority than underlying faces (@pxref{Displaying Faces}).  If the face to inherit from is @code{unspecified}, it is treated the same as @code{nil}, since Emacs never merges @code{:inherit} attributes.  If a list of faces is used, attributes from faces earlier in the list override those from later faces."
msgstr "属性を継承するフェイス名、またはフェイス名のリスト。継承フェイス由来の属性は基礎フェイスより高い優先度で、基礎フェイスの場合と同じような方法でマージされる(@ref{Displaying Faces}を参照)。継承元のフェイスが@code{unspecified}ならEmacsは@code{:inherit}属性を決してマージしないので@code{nil}と同様に扱われる。フェイスのリストが使用された場合には、リスト内先頭側フェイスの属性が末尾側フェイスの属性をオーバーライドする。"

#. type: defun
#: original_texis/display.texi:2440
#, no-wrap
msgid "font-family-list &optional frame"
msgstr "font-family-list &optional frame"

#. type: defun
#: original_texis/display.texi:2444
msgid "This function returns a list of available font family names.  The optional argument @var{frame} specifies the frame on which the text is to be displayed; if it is @code{nil}, the selected frame is used."
msgstr "この関数は利用可能なフォントファミリー名のリストをリターンする。オプション引数@var{frame}はそのテキストが表示されるフレームを指定する。これが@code{nil}なら選択されたフレームが使用される。"

#. type: defopt
#: original_texis/display.texi:2446
#, no-wrap
msgid "underline-minimum-offset"
msgstr "underline-minimum-offset"

#. type: defopt
#: original_texis/display.texi:2449
msgid "This variable specifies the minimum distance between the baseline and the underline, in pixels, when displaying underlined text."
msgstr "この変数はアンダーラインが引かれたテキスト表示時に、ベースラインとアンダーライン間の最小距離をピクセル単位で指定する。"

#. type: defopt
#: original_texis/display.texi:2451
#, no-wrap
msgid "x-bitmap-file-path"
msgstr "x-bitmap-file-path"

#. type: defopt
#: original_texis/display.texi:2454
msgid "This variable specifies a list of directories for searching for bitmap files, for the @code{:stipple} attribute."
msgstr "この変数は@code{:stipple}属性のビットマップファイルを検索するディレクトリーのリストを指定する。"

#. type: defun
#: original_texis/display.texi:2456
#, no-wrap
msgid "bitmap-spec-p object"
msgstr "bitmap-spec-p object"

#. type: defun
#: original_texis/display.texi:2460
msgid "This returns @code{t} if @var{object} is a valid bitmap specification, suitable for use with @code{:stipple} (see above).  It returns @code{nil} otherwise."
msgstr "これは@var{object}、@code{:stipple} (上記参照)での使用に適した有効なビットマップ仕様なら@code{t}、それ以外なら@code{nil}をリターンする。"

#. type: cindex
#: original_texis/display.texi:2464
#, no-wrap
msgid "defining faces"
msgstr "defining faces"

#. type: cindex
#: original_texis/display.texi:2466
#, no-wrap
msgid "face spec"
msgstr "face spec"

#. type: Plain text
#: original_texis/display.texi:2473
msgid "The usual way to define a face is through the @code{defface} macro.  This macro associates a face name (a symbol) with a default @dfn{face spec}.  A face spec is a construct which specifies what attributes a face should have on any given terminal; for example, a face spec might specify one foreground color on high-color terminals, and a different foreground color on low-color terminals."
msgstr "フェイスを定義する通常の方法は@code{defface}マクロを通じて定義する方法です。このマクロはフェイス名(シンボル)をデフォルトの@dfn{フェイスspec(face spec)}と関連付けます。フェイスspecとは任意の与えられた端末上でフェイスがどの属性をもつべきかを指定する構文です。たとえばあるフェイスspecは高カラー端末ではあるフォアグラウンドカラーし、低カラー端末では異なるフォアグラウンドカラーを指定するかもしれません。"

#. type: Plain text
#: original_texis/display.texi:2478
msgid "People are sometimes tempted to create a variable whose value is a face name.  In the vast majority of cases, this is not necessary; the usual procedure is to define a face with @code{defface}, and then use its name directly."
msgstr "値がフェイス名であるような変数を作りたがる人がいます。ほとんどの場合には、これは必要ありません。通常の手順は@code{defface}でフェイスを定義して、その名前を直接使用することです。"

#. type: defmac
#: original_texis/display.texi:2479
#, no-wrap
msgid "defface face spec doc [keyword value]@dots{}"
msgstr "defface face spec doc [keyword value]@dots{}"

#. type: defmac
#: original_texis/display.texi:2486
msgid "This macro declares @var{face} as a named face whose default face spec is given by @var{spec}.  You should not quote the symbol @var{face}, and it should not end in @samp{-face} (that would be redundant).  The argument @var{doc} is a documentation string for the face.  The additional @var{keyword} arguments have the same meanings as in @code{defgroup} and @code{defcustom} (@pxref{Common Keywords})."
msgstr "このマクロは@var{spec}によりデフォルトフェイスspecが与えられるような名前つきフェイスとして@var{face}を宣言する。シンボル@var{face}はクォートせずに@samp{-face}で終わらないこと(冗長かもしれない)。引数@var{doc}はフェイスにたいするドキュメント文字列。追加の@var{keyword}引数は@code{defgroup}や@code{defcustom}の場合と同じ意味をもつ(@ref{Common Keywords}を参照)。"

#. type: defmac
#: original_texis/display.texi:2489
msgid "If @var{face} already has a default face spec, this macro does nothing."
msgstr "@var{face}がすでにデフォルトフェイスspecをもつ場合には、このマクロは何も行わない。"

#. type: defmac
#: original_texis/display.texi:2498
msgid "The default face spec determines @var{face}'s appearance when no customizations are in effect (@pxref{Customization}).  If @var{face} has already been customized (via Custom themes or via customizations read from the init file), its appearance is determined by the custom face spec(s), which override the default face spec @var{spec}.  However, if the customizations are subsequently removed, the appearance of @var{face} will again be determined by its default face spec."
msgstr "デフォルトフェイスspecは何もカスタマイゼーション(@ref{Customization}を参照)の効果がないときの@var{face}の外観を決定する。@var{face}が(Customテーマやinitファイルから読み込んだカスタマイズにより)すでにカスタマイズ済みなら、その外観はデフォルトフェイスspecの@var{spec}をオーバーライドするカスタムフェイスspecにより決定される。しかしその後カスタマイゼーションが削除されたら、@var{face}の外観は再びそのデフォルトフェイスspecにより決定されるだろう。"

#. type: defmac
#: original_texis/display.texi:2503
msgid "As an exception, if you evaluate a @code{defface} form with @kbd{C-M-x} in Emacs Lisp mode (@code{eval-defun}), a special feature of @code{eval-defun} overrides any custom face specs on the face, causing the face to reflect exactly what the @code{defface} says."
msgstr "例外としてEmacs Lispモードで@kbd{C-M-x} (@code{eval-defun})から@code{defface}を評価した場合には、@code{eval-defun}の特別な機能により@code{defface}が何を指示するかをフェイスが正確に反映するように、そのフェイス上の任意のカスタムフェイスをオーバーライドする。"

#. type: defmac
#: original_texis/display.texi:2507
msgid "The @var{spec} argument is a @dfn{face spec}, which states how the face should appear on different kinds of terminals.  It should be an alist whose elements each have the form"
msgstr "@var{spec}引数は異なる種別の端末上でそのフェイスがどのような外観で表示されるべきかを示す@dfn{フェイスspec}。これは各要素が以下の形式であるようなalistであること"

#. type: example
#: original_texis/display.texi:2510
#, no-wrap
msgid "(@var{display} . @var{plist})\n"
msgstr "(@var{display} . @var{plist})\n"

#. type: defmac
#: original_texis/display.texi:2517
msgid "@var{display} specifies a class of terminals (see below).  @var{plist} is a property list of face attributes and their values, specifying how the face appears on such terminals.  For backward compatibility, you can also write an element as @code{(@var{display} @var{plist})}."
msgstr "@var{display}は端末のクラス(以下参照)を指定する。@var{plist}はそのような端末上でフェイスがどのような外観かを指定するフェイス属性とその値からなるプロパティリストであること。後方互換性のために@code{(@var{display} @var{plist})}のように要素を記述することもできる。"

#. type: defmac
#: original_texis/display.texi:2523
msgid "The @var{display} part of an element of @var{spec} determines which terminals the element matches.  If more than one element of @var{spec} matches a given terminal, the first element that matches is the one used for that terminal.  There are three possibilities for @var{display}:"
msgstr "@var{spec}の要素の@var{display}の部分は、その要素がマッチする端末を決定する。与えられた端末にたいして複数の要素がマッチした場合には、最初にマッチした要素がその端末にたいして使用される。@var{display}には以下の3つが可能:"

#. type: item
#: original_texis/display.texi:2525 original_texis/display.texi:3132
#, no-wrap
msgid "default"
msgstr "default"

#. type: table
#: original_texis/display.texi:2530
msgid "This element of @var{spec} doesn't match any terminal; instead, it specifies defaults that apply to all terminals.  This element, if used, must be the first element of @var{spec}.  Each of the following elements can override any or all of these defaults."
msgstr "@var{spec}のこの要素はどの端末にもマッチしない。かわりにすべての端末に適用されるデフォルトを指定する。この要素が使用する場合には、@var{spec}の最初の要素でなければならない。この後の要素はこれらのデフォルトの一部、またはすべてをオーバーライドできる。"

#. type: table
#: original_texis/display.texi:2535
msgid "This element of @var{spec} matches all terminals.  Therefore, any subsequent elements of @var{spec} are never used.  Normally @code{t} is used in the last (or only) element of @var{spec}."
msgstr "@var{spec}のこの要素はすべての端末にマッチする。したがって@var{spec}の後続要素が使用されることはない。@code{t}は通常は@var{spec}の最後(か唯一)の要素として使用される。"

#. type: table
#: original_texis/display.texi:2542
msgid "If @var{display} is a list, each element should have the form @code{(@var{characteristic} @var{value}@dots{})}.  Here @var{characteristic} specifies a way of classifying terminals, and the @var{value}s are possible classifications which @var{display} should apply to.  Here are the possible values of @var{characteristic}:"
msgstr "@var{display}がリストなら各要素は@code{(@var{characteristic} @var{value}@dots{})}という形式をもつこと。ここで@var{characteristic}は端末をクラス分けする方法、@var{value}は@var{display}に適用されるべき可能なクラス分類。@var{characteristic}に利用可能な値は:"

#. type: item
#: original_texis/display.texi:2544 original_texis/display.texi:6173
#, no-wrap
msgid "type"
msgstr "type"

#. type: table
#: original_texis/display.texi:2549
msgid "The kind of window system the terminal uses---either @code{graphic} (any graphics-capable display), @code{x}, @code{pc} (for the MS-DOS console), @code{w32} (for MS Windows 9X/NT/2K/XP), or @code{tty} (a non-graphics-capable display).  @xref{Window Systems, window-system}."
msgstr "その端末が使用するウィンドウシステムの種類で@code{graphic} (任意のグラフィック対応ディスプレイ)、@code{x}、@code{pc} (MS-DOSコンソール)、@code{w32} (MS Windows 9X/NT/2K/XP)、または@code{tty} (グラフィック非対応ディスプレイ)のいずれか。@ref{Window Systems, window-system}を参照のこと。"

#. type: item
#: original_texis/display.texi:2550
#, no-wrap
msgid "class"
msgstr "class"

#. type: table
#: original_texis/display.texi:2553
msgid "What kinds of colors the terminal supports---either @code{color}, @code{grayscale}, or @code{mono}."
msgstr "その端末がサポートするカラーの種類であり@code{color}、@code{grayscale}か@code{mono}のいずれか。"

#. type: item
#: original_texis/display.texi:2554
#, no-wrap
msgid "background"
msgstr "background"

#. type: table
#: original_texis/display.texi:2556
msgid "The kind of background---either @code{light} or @code{dark}."
msgstr "バックグラウンドの種類であり@code{light}か@code{dark}のいずれか。"

#. type: item
#: original_texis/display.texi:2557
#, no-wrap
msgid "min-colors"
msgstr "min-colors"

#. type: table
#: original_texis/display.texi:2561
msgid "An integer that represents the minimum number of colors the terminal should support.  This matches a terminal if its @code{display-color-cells} value is at least the specified integer."
msgstr "その端末がサポートするべき最小カラー数を表す整数。端末の@code{display-color-cells}の値が少なくとも指定された整数ならその端末にマッチ。"

#. type: item
#: original_texis/display.texi:2562
#, no-wrap
msgid "supports"
msgstr "supports"

#. type: table
#: original_texis/display.texi:2567
msgid "Whether or not the terminal can display the face attributes given in @var{value}@dots{} (@pxref{Face Attributes}).  @xref{Display Face Attribute Testing}, for more information on exactly how this testing is done."
msgstr "その端末が@var{value}@dots{}で与えられたフェイス属性を表示可能か否か(@ref{Face Attributes}を参照)。このテストがどのように行われるかについてのより正確な情報は@ref{Display Face Attribute Testing}を参照のこと。"

#. type: table
#: original_texis/display.texi:2575
msgid "If an element of @var{display} specifies more than one @var{value} for a given @var{characteristic}, any of those values is acceptable.  If @var{display} has more than one element, each element should specify a different @var{characteristic}; then @emph{each} characteristic of the terminal must match one of the @var{value}s specified for it in @var{display}."
msgstr "与えられた@var{characteristic}にたいして@var{display}の要素が複数の@var{value}を指定する場合には、いずれの値も許容され得る。@var{display}が複数の要素をもつ場合には、各要素は異なる@var{characteristic}を指定すること。その端末の@emph{それぞれ}のcharacteristicは@var{display}内で指定された値のいずれか1つとマッチしなければならない。"

#. type: Plain text
#: original_texis/display.texi:2580
msgid "For example, here's the definition of the standard face @code{highlight}:"
msgstr "たとえば以下は標準フェイス@code{highlight}の定義です:"

#. type: example
#: original_texis/display.texi:2596
#, no-wrap
msgid ""
"(defface highlight\n"
"  '((((class color) (min-colors 88) (background light))\n"
"     :background \"darkseagreen2\")\n"
"    (((class color) (min-colors 88) (background dark))\n"
"     :background \"darkolivegreen\")\n"
"    (((class color) (min-colors 16) (background light))\n"
"     :background \"darkseagreen2\")\n"
"    (((class color) (min-colors 16) (background dark))\n"
"     :background \"darkolivegreen\")\n"
"    (((class color) (min-colors 8))\n"
"     :background \"green\" :foreground \"black\")\n"
"    (t :inverse-video t))\n"
"  \"Basic face for highlighting.\"\n"
"  :group 'basic-faces)\n"
msgstr ""
"(defface highlight\n"
"  '((((class color) (min-colors 88) (background light))\n"
"     :background \"darkseagreen2\")\n"
"    (((class color) (min-colors 88) (background dark))\n"
"     :background \"darkolivegreen\")\n"
"    (((class color) (min-colors 16) (background light))\n"
"     :background \"darkseagreen2\")\n"
"    (((class color) (min-colors 16) (background dark))\n"
"     :background \"darkolivegreen\")\n"
"    (((class color) (min-colors 8))\n"
"     :background \"green\" :foreground \"black\")\n"
"    (t :inverse-video t))\n"
"  \"Basic face for highlighting.\"\n"
"  :group 'basic-faces)\n"

#. type: Plain text
#: original_texis/display.texi:2607
msgid "Internally, Emacs stores each face's default spec in its @code{face-defface-spec} symbol property (@pxref{Symbol Properties}).  The @code{saved-face} property stores any face spec saved by the user using the customization buffer; the @code{customized-face} property stores the face spec customized for the current session, but not saved; and the @code{theme-face} property stores an alist associating the active customization settings and Custom themes with the face specs for that face.  The face's documentation string is stored in the @code{face-documentation} property."
msgstr "内部的にはEmacsはフェイスのシンボルプロパティ@code{face-defface-spec}内にそれぞれのフェイスのデフォルトspecを格納します(@ref{Symbol Properties}を参照)。@code{saved-face}プロパティはカスタマイゼーションバッファーを使用してユーザーが保存した任意のフェイスspecを格納します。@code{customized-face}プロパティはカレントセッションにたいしてカスタマイズされた保存されていないフェイスspecを格納します。そして@code{theme-face}プロパティはそのフェイスにたいするアクティブなカスタマイゼーションセッティングと、フェイスspecをもつCustomテーマを関連付けるalistです。そのフェイスのドキュメント文字列は@code{face-documentation}プロパティ内に格納されます。"

#. type: Plain text
#: original_texis/display.texi:2615
msgid "Normally, a face is declared just once, using @code{defface}, and any further changes to its appearance are applied using the Customize framework (e.g., via the Customize user interface or via the @code{custom-set-faces} function; @pxref{Applying Customizations}), or by face remapping (@pxref{Face Remapping}).  In the rare event that you need to change a face spec directly from Lisp, you can use the @code{face-spec-set} function."
msgstr "フェイスは通常は@code{defface}を使用して1回だけ宣言されて、その外観にたいするそれ以上の変更はCustomizeフレームワーク(Customizeユーザーインターフェースか@code{custom-set-faces}関数を通じて。@ref{Applying Customizations}を参照)、またはフェイスリマッピング(@ref{Face Remapping}を参照)により行われます。Lispから直接フェイスspec変更を要する稀な状況では@code{face-spec-set}関数を使用できます。"

#. type: defun
#: original_texis/display.texi:2616
#, no-wrap
msgid "face-spec-set face spec &optional spec-type"
msgstr "face-spec-set face spec &optional spec-type"

#. type: defun
#: original_texis/display.texi:2620
msgid "This function applies @var{spec} as a face spec for @code{face}.  @var{spec} should be a face spec, as described in the above documentation for @code{defface}."
msgstr "この関数は@code{face}にたいするフェイスspecとして@var{spec}を適用する。@var{spec}は上述した@code{defface}にたいするフェイスspecであること。"

#. type: defun
#: original_texis/display.texi:2623
msgid "This function also defines @var{face} as a valid face name if it is not already one, and (re)calculates its attributes on existing frames."
msgstr "この関数はもし@var{face}が既存のものでなければ有効なフェイス名として@var{face}を定義して、既存フレームのその属性の(再)計算も行う。"

#. type: cindex
#: original_texis/display.texi:2624
#, no-wrap
msgid "override spec @r{(for a face)}"
msgstr "override spec @r{(for a face)}"

#. type: defun
#: original_texis/display.texi:2639
msgid "The optional argument @var{spec-type} determines which spec to set.  If it is omitted or @code{nil} or @code{face-override-spec}, this function sets the @dfn{override spec}, which overrides face specs on @var{face} of all the other types mentioned below.  This is useful when calling this function outside of Custom code.  If @var{spec-type} is @code{customized-face} or @code{saved-face}, this function sets the customized spec or the saved custom spec, respectively.  If it is @code{face-defface-spec}, this function sets the default face spec (the same one set by @code{defface}).  If it is @code{reset}, this function clears out all customization specs and override specs from @var{face} (in this case, the value of @var{spec} is ignored).  The effect of any other value of @var{spec-type} on the face specs is reserved for internal use, but the function will still define @var{face} itself and recalculate its attributes, as described above."
msgstr "オプション引数@var{spec-type}はどのspecをセットするかを決定する。これが省略か@code{nil}、または@code{face-override-spec}なら、この関数は@dfn{オーバーライドspec(override spec)}をセットする。これは後述する@var{face}上の他のすべてのフェイスspecをオーバーライドする。これはCustomのコード外部からこの関数を呼び出す際に有用。@var{spec-type}が@code{customized-face}か@code{saved-face}なら、この関数はカスタマイズされたspec、または保存されたカスタムspecをセットする。@code{face-defface-spec}なら、この関数はデフォルトフェイスspec(@code{defface}によりセットされるものと同一)をセットする。@code{reset}なら、この関数は@var{face}からすべてのカスタマイゼーションspecとオーバーライドspecをクリアーする(この場合には@var{spec}の値は無視される)。@var{spec-type}の他の任意の値がフェイスspecに及ぼす効果は内部的な使用のために予約済みだが、それでも後述するようにこの関数は@var{face}自体の定義を行い属性を再計算する。"

#. type: subsection
#: original_texis/display.texi:2642
#, no-wrap
msgid "Face Attribute Functions"
msgstr "Face Attribute Functions"

#. type: cindex
#: original_texis/display.texi:2643
#, no-wrap
msgid "face attributes, access and modification"
msgstr "face attributes, access and modification"

#. type: Plain text
#: original_texis/display.texi:2647
msgid "This section describes functions for directly accessing and modifying the attributes of a named face."
msgstr "このセクションでは名前つきフェイスの属性に直接アクセスしたり変更する関数を説明します。"

#. type: defun
#: original_texis/display.texi:2648
#, no-wrap
msgid "face-attribute face attribute &optional frame inherit"
msgstr "face-attribute face attribute &optional frame inherit"

#. type: defun
#: original_texis/display.texi:2651
msgid "This function returns the value of the @var{attribute} attribute for @var{face} on @var{frame}."
msgstr "この関数は@var{frame}上の@var{face}にたいする属性@var{attribute}の値をリターンする。"

#. type: defun
#: original_texis/display.texi:2657
msgid "If @var{frame} is omitted or @code{nil}, that means the selected frame (@pxref{Input Focus}).  If @var{frame} is @code{t}, this function returns the value of the specified attribute for newly-created frames (this is normally @code{unspecified}, unless you have specified some value using @code{set-face-attribute}; see below)."
msgstr "@var{frame}が省略か@code{nil}なら選択されたフレームを意味する(@ref{Input Focus}を参照)。@var{frame}が@code{t}なら、この関数は新たに作成されるフレームにたいして指定された属性の値をリターンする(これは下記の@code{set-face-attribute}を使用して何らかの値を指定していなければ通常は@code{unspecified})。"

#. type: defun
#: original_texis/display.texi:2667
msgid "If @var{inherit} is @code{nil}, only attributes directly defined by @var{face} are considered, so the return value may be @code{unspecified}, or a relative value.  If @var{inherit} is non-@code{nil}, @var{face}'s definition of @var{attribute} is merged with the faces specified by its @code{:inherit} attribute; however the return value may still be @code{unspecified} or relative.  If @var{inherit} is a face or a list of faces, then the result is further merged with that face (or faces), until it becomes specified and absolute."
msgstr "@var{inherit}が@code{nil}なら@var{face}により定義される属性だけが考慮されるのでリターンされる値は@code{unspecified}、または相対的な値かもしれない。@var{inherit}が非@code{nil}なら@var{face}の@var{attribute}の定義が、@code{:inherit}属性で指定されたフェイスとマージされる。しかしリターンされる値は依然として@code{unspecified}、または相対的な値かもしれない。@var{inherit}がフェイスかフェイスのリストなら、指定された絶対的な値になるまで結果はそのフェイス(1つ以上)と更にマージされる。"

#. type: defun
#: original_texis/display.texi:2672
msgid "To ensure that the return value is always specified and absolute, use a value of @code{default} for @var{inherit}; this will resolve any unspecified or relative values by merging with the @code{default} face (which is always completely specified)."
msgstr "リターン値が指定されていて、かつ絶対的であることを保証するためには@var{inherit}にたいして@code{default}の値を使用すること。(常に完全に指定される)@code{default}フェイスとマージすることにより、すべての未指定や相対的な値は解決されるだろう。"

#. type: defun
#: original_texis/display.texi:2674
msgid "For example,"
msgstr "たとえば"

#. type: example
#: original_texis/display.texi:2678
#, no-wrap
msgid ""
"(face-attribute 'bold :weight)\n"
"     @result{} bold\n"
msgstr ""
"(face-attribute 'bold :weight)\n"
"     @result{} bold\n"

#. type: defun
#: original_texis/display.texi:2682
#, no-wrap
msgid "face-attribute-relative-p attribute value"
msgstr "face-attribute-relative-p attribute value"

#. type: defun
#: original_texis/display.texi:2688
msgid "This function returns non-@code{nil} if @var{value}, when used as the value of the face attribute @var{attribute}, is relative.  This means it would modify, rather than completely override, any value that comes from a subsequent face in the face list or that is inherited from another face."
msgstr "この関数は@var{value}がフェイス属性@var{attribute}の値として使用された際に相対的なら非@code{nil}をリターンする。これはフェイスリスト内の後続のフェイス、または継承した他のフェイスが由来となる任意の値で完全にオーバーライドするのではなく、それが変更されるであろうことを意味する。"

#. type: defun
#: original_texis/display.texi:2691
msgid "@code{unspecified} is a relative value for all attributes.  For @code{:height}, floating point and function values are also relative."
msgstr "すべての属性にたいして@code{unspecified}は相対的な値。@code{:height}にたいしては浮動小数点数と関数値も相対的である。"

#. type: defun
#: original_texis/display.texi:2693
msgid "For example:"
msgstr "たとえば:"

#. type: example
#: original_texis/display.texi:2697
#, no-wrap
msgid ""
"(face-attribute-relative-p :height 2.0)\n"
"     @result{} t\n"
msgstr ""
"(face-attribute-relative-p :height 2.0)\n"
"     @result{} t\n"

#. type: defun
#: original_texis/display.texi:2700
#, no-wrap
msgid "face-all-attributes face &optional frame"
msgstr "face-all-attributes face &optional frame"

#. type: defun
#: original_texis/display.texi:2707
msgid "This function returns an alist of attributes of @var{face}.  The elements of the result are name-value pairs of the form @w{@code{(@var{attr-name} . @var{attr-value})}}.  Optional argument @var{frame} specifies the frame whose definition of @var{face} to return; if omitted or @code{nil}, the returned value describes the default attributes of @var{face} for newly created frames."
msgstr "この関数は@var{face}の属性のalistをリターンする。結果の要素は@w{@code{(@var{attr-name} . @var{attr-value})}}という形式の名前/値ペアー。オプション引数@var{frame}はリターンするべき@var{face}の定義をもつフレームを指定する。省略か@code{nil}ならリターン値には新たに作成されるフレームにたいする@var{face}のデフォルト属性が記述される。"

#. type: defun
#: original_texis/display.texi:2709
#, no-wrap
msgid "merge-face-attribute attribute value1 value2"
msgstr "merge-face-attribute attribute value1 value2"

#. type: defun
#: original_texis/display.texi:2714
msgid "If @var{value1} is a relative value for the face attribute @var{attribute}, returns it merged with the underlying value @var{value2}; otherwise, if @var{value1} is an absolute value for the face attribute @var{attribute}, returns @var{value1} unchanged."
msgstr "@var{value1}がフェイス属性@var{attribute}にたいして相対的な値なら、基礎的な値@var{value2}とマージしてリターンする。それ以外の場合には@var{value1}がフェイス属性@var{attribute}にたいして絶対的な値なら@var{value1}を変更せずにリターンする。"

#. type: Plain text
#: original_texis/display.texi:2721
msgid "Normally, Emacs uses the face specs of each face to automatically calculate its attributes on each frame (@pxref{Defining Faces}).  The function @code{set-face-attribute} can override this calculation by directly assigning attributes to a face, either on a specific frame or for all frames.  This function is mostly intended for internal usage."
msgstr "Emacsは通常は各フレームのフェイス属性を自動的に計算するために、各フェイスのフェイスspecを使用します(@ref{Defining Faces}を参照)。関数@code{set-face-attribute}は特定またはすべてのフレームのフェイスに直接属性を割り当てることにより、この計算をオーバーライドできます。この関数は主として内部的な使用を意図したものです。"

#. type: defun
#: original_texis/display.texi:2722
#, no-wrap
msgid "set-face-attribute face frame &rest arguments"
msgstr "set-face-attribute face frame &rest arguments"

#. type: defun
#: original_texis/display.texi:2726
msgid "This function sets one or more attributes of @var{face} for @var{frame}.  The attributes specifies in this way override the face spec(s) belonging to @var{face}."
msgstr "この関数は@var{frame}にたいする@var{face}の1つ以上の属性をセットする。この方法で指定された属性は@var{face}に属するフェイスspec(1つ以上)をオーバーライドする。"

#. type: defun
#: original_texis/display.texi:2730
msgid "The extra arguments @var{arguments} specify the attributes to set, and the values for them.  They should consist of alternating attribute names (such as @code{:family} or @code{:underline}) and values.  Thus,"
msgstr "余分の引数@var{arguments}はセットするべき属性と値を指定する。これらは(@code{:family}や@code{:underline}のような)属性名と値が交互になるように構成されていること。つまり、"

#. type: example
#: original_texis/display.texi:2733
#, no-wrap
msgid "(set-face-attribute 'foo nil :weight 'bold :slant 'italic)\n"
msgstr "(set-face-attribute 'foo nil :weight 'bold :slant 'italic)\n"

#. type: defun
#: original_texis/display.texi:2738
msgid "sets the attribute @code{:weight} to @code{bold} and the attribute @code{:slant} to @code{italic}."
msgstr "これは属性@code{:weight}を@code{bold}、.属性@code{:slant}を@code{italic}にセットする。"

#. type: defun
#: original_texis/display.texi:2744
msgid "If @var{frame} is @code{t}, this function sets the default attributes for newly created frames.  If @var{frame} is @code{nil}, this function sets the attributes for all existing frames, as well as for newly created frames."
msgstr "@var{frame}が@code{t}ならこの関数は新たに作成されるフレームにたいするデフォルト属性をセットする。@var{frame}が@code{nil}ならこの関数はすべての既存フレーム、同様に新たに作成されるフレームにたいしてその属性をセットする。"

#. type: Plain text
#: original_texis/display.texi:2752
msgid "The following commands and functions mostly provide compatibility with old versions of Emacs.  They work by calling @code{set-face-attribute}.  Values of @code{t} and @code{nil} (or omitted) for their @var{frame} argument are handled just like @code{set-face-attribute} and @code{face-attribute}.  The commands read their arguments using the minibuffer, if called interactively."
msgstr "以下のコマンドと関数は主として古いバージョンのEmacsにたいする互換性のために提供されます。これらは@code{set-face-attribute}を呼び出すことにより機能します。これらの@var{frame}引数にたいする値@code{t}と@code{nil} (や省略)は@code{set-face-attribute}や@code{face-attribute}の場合と同様に処理されます。コマンドがインタラクティブに呼び出されるとミニバッファーを使用して引数を読み取ります。"

#. type: deffn
#: original_texis/display.texi:2753
#, no-wrap
msgid "Command set-face-foreground face color &optional frame"
msgstr "Command set-face-foreground face color &optional frame"

#. type: deffnx
#: original_texis/display.texi:2754
#, no-wrap
msgid "Command set-face-background face color &optional frame"
msgstr "Command set-face-background face color &optional frame"

#. type: deffn
#: original_texis/display.texi:2757
msgid "These set the @code{:foreground} attribute (or @code{:background} attribute, respectively) of @var{face} to @var{color}."
msgstr "これらはそれぞれ@var{face}の@code{:foreground}属性、または@code{:background}属性に@var{color}をセットする。"

#. type: deffn
#: original_texis/display.texi:2759
#, no-wrap
msgid "Command set-face-stipple face pattern &optional frame"
msgstr "Command set-face-stipple face pattern &optional frame"

#. type: deffn
#: original_texis/display.texi:2762
msgid "This sets the @code{:stipple} attribute of @var{face} to @var{pattern}."
msgstr "これは@var{face}の@code{:stipple}属性に@var{pattern}をセットする。"

#. type: deffn
#: original_texis/display.texi:2764
#, no-wrap
msgid "Command set-face-font face font &optional frame"
msgstr "Command set-face-font face font &optional frame"

#. type: deffn
#: original_texis/display.texi:2766
msgid "This sets the @code{:font} attribute of @var{face} to @var{font}."
msgstr "これは@var{face}の@code{:font}属性に@var{font}をセットする。"

#. type: defun
#: original_texis/display.texi:2768
#, no-wrap
msgid "set-face-bold face bold-p &optional frame"
msgstr "set-face-bold face bold-p &optional frame"

#. type: defun
#: original_texis/display.texi:2771
msgid "This sets the @code{:weight} attribute of @var{face} to @var{normal} if @var{bold-p} is @code{nil}, and to @var{bold} otherwise."
msgstr "これは@var{face}の@code{:weight}属性にたいして@var{bold-p}が@code{nil}なら@var{normal}、それ以外なら@var{bold}をセットする。"

#. type: defun
#: original_texis/display.texi:2773
#, no-wrap
msgid "set-face-italic face italic-p &optional frame"
msgstr "set-face-italic face italic-p &optional frame"

#. type: defun
#: original_texis/display.texi:2776
msgid "This sets the @code{:slant} attribute of @var{face} to @var{normal} if @var{italic-p} is @code{nil}, and to @var{italic} otherwise."
msgstr "これは@var{face}の@code{:slant}属性にたいして@var{italic-p}が@code{nil}なら@var{normal}、それ以外なら@var{italic}をセットする。"

#. type: deffn
#: original_texis/display.texi:2778
#, no-wrap
msgid "Command set-face-underline face underline &optional frame"
msgstr "Command set-face-underline face underline &optional frame"

#. type: deffn
#: original_texis/display.texi:2781
msgid "This sets the @code{:underline} attribute of @var{face} to @var{underline}."
msgstr "これは@var{face}の@code{:underline}属性に@var{underline}をセットする。"

#. type: deffn
#: original_texis/display.texi:2783
#, no-wrap
msgid "Command set-face-inverse-video face inverse-video-p &optional frame"
msgstr "Command set-face-inverse-video face inverse-video-p &optional frame"

#. type: deffn
#: original_texis/display.texi:2786
msgid "This sets the @code{:inverse-video} attribute of @var{face} to @var{inverse-video-p}."
msgstr "これは@var{face}の@code{:inverse-video}属性に@var{inverse-video-p}をセットする。"

#. type: deffn
#: original_texis/display.texi:2788
#, no-wrap
msgid "Command invert-face face &optional frame"
msgstr "Command invert-face face &optional frame"

#. type: deffn
#: original_texis/display.texi:2790
msgid "This swaps the foreground and background colors of face @var{face}."
msgstr "これはフェイス@var{face}のフォアグラウンドカラーとバックグラウンドカラーを交換する。"

#. type: Plain text
#: original_texis/display.texi:2804
msgid "The following functions examine the attributes of a face.  They mostly provide compatibility with old versions of Emacs.  If you don't specify @var{frame}, they refer to the selected frame; @code{t} refers to the default data for new frames.  They return @code{unspecified} if the face doesn't define any value for that attribute.  If @var{inherit} is @code{nil}, only an attribute directly defined by the face is returned.  If @var{inherit} is non-@code{nil}, any faces specified by its @code{:inherit} attribute are considered as well, and if @var{inherit} is a face or a list of faces, then they are also considered, until a specified attribute is found.  To ensure that the return value is always specified, use a value of @code{default} for @var{inherit}."
msgstr "以下はフェイスの属性を調べる関数です。これらは主として古いバージョンのEmacsとの互換性のために提供されます。これらにたいして@var{frame}を指定しなければ選択されたフレーム、@code{t}なら新たなフレームにたいするデフォルトデータを参照します。フェイスがその属性にたいして何の値も定義していなければ@code{unspecified}がリターンされます。@var{inherit}が@code{nil}ならそのフェイスにより直接定義された属性だけがリターンされます。@var{inherit}が非@code{nil}ならそのフェイスの@code{:inherit}属性により指定される任意のフェイス、@var{inherit}がフェイスまたはフェイスのリストなら指定された属性が見つかるまでそれらも考慮します。リターンされる値が常に指定された値であることを保証するためには@var{inherit}に値@code{default}を使用してください。"

#. type: defun
#: original_texis/display.texi:2805
#, no-wrap
msgid "face-font face &optional frame character"
msgstr "face-font face &optional frame character"

#. type: defun
#: original_texis/display.texi:2807
msgid "This function returns the name of the font of face @var{face}."
msgstr "この関数はフェイス@var{face}のフォント名をリターンする。"

#. type: defun
#: original_texis/display.texi:2813
msgid "If the optional argument @var{frame} is specified, it returns the name of the font of @var{face} for that frame.  If @var{frame} is omitted or @code{nil}, the selected frame is used.  And, in this case, if the optional third argument @var{character} is supplied, it returns the font name used for @var{character}."
msgstr "オプション引数@var{frame}が指定されたら、そのフレームの@var{face}のフォント名をリターンする。@var{frame}が省略か@code{nil}なら選択されたフレームを使用する。そしてこの場合には、オプションの3つ目の引数@var{character}が与えられると、@var{character}にたいして使用されるフォント名をリターンする。"

#. type: defun
#: original_texis/display.texi:2815
#, no-wrap
msgid "face-foreground face &optional frame inherit"
msgstr "face-foreground face &optional frame inherit"

#. type: defunx
#: original_texis/display.texi:2816
#, no-wrap
msgid "face-background face &optional frame inherit"
msgstr "face-background face &optional frame inherit"

#. type: defun
#: original_texis/display.texi:2820
msgid "These functions return the foreground color (or background color, respectively) of face @var{face}, as a string.  If the color is unspecified, they return @code{nil}."
msgstr "これらの関数はそれぞれフェイス@var{face}のフォアグラウンドカラーまたはバックグラウンドカラーを文字列としてリターンする。カラーが未指定ならをリターンする。"

#. type: defun
#: original_texis/display.texi:2822
#, no-wrap
msgid "face-stipple face &optional frame inherit"
msgstr "face-stipple face &optional frame inherit"

#. type: defun
#: original_texis/display.texi:2825
msgid "This function returns the name of the background stipple pattern of face @var{face}, or @code{nil} if it doesn't have one."
msgstr "この関数はフェイス@var{face}のバックグラウンド点描パターンの名前、もしなければ@code{nil}をリターンする。"

#. type: defun
#: original_texis/display.texi:2827
#, no-wrap
msgid "face-bold-p face &optional frame inherit"
msgstr "face-bold-p face &optional frame inherit"

#. type: defun
#: original_texis/display.texi:2832
msgid "This function returns a non-@code{nil} value if the @code{:weight} attribute of @var{face} is bolder than normal (i.e., one of @code{semi-bold}, @code{bold}, @code{extra-bold}, or @code{ultra-bold}).  Otherwise, it returns @code{nil}."
msgstr "この関数は@var{face}の@code{:weight}属性がnormalよりbold寄り(@code{semi-bold}、@code{bold}、@code{extra-bold}、@code{ultra-bold}のいずれか)なら非@code{nil}、それ以外なら@code{nil}をリターンする。"

#. type: defun
#: original_texis/display.texi:2834
#, no-wrap
msgid "face-italic-p face &optional frame inherit"
msgstr "face-italic-p face &optional frame inherit"

#. type: defun
#: original_texis/display.texi:2838
msgid "This function returns a non-@code{nil} value if the @code{:slant} attribute of @var{face} is @code{italic} or @code{oblique}, and @code{nil} otherwise."
msgstr "この関数は@var{face}の@code{:slant}属性が@code{italic}か@code{oblique}なら非@code{nil}、それ以外なら@code{nil}をリターンする。"

#. type: defun
#: original_texis/display.texi:2840
#, no-wrap
msgid "face-underline-p face &optional frame inherit"
msgstr "face-underline-p face &optional frame inherit"

#. type: defun
#: original_texis/display.texi:2843
msgid "This function returns non-@code{nil} if face @var{face} specifies a non-@code{nil} @code{:underline} attribute."
msgstr "この関数はフェイス@var{face}が非@code{nil}の@code{:underline}属性を指定すれば非@code{nil}をリターンする。"

#. type: defun
#: original_texis/display.texi:2845
#, no-wrap
msgid "face-inverse-video-p face &optional frame inherit"
msgstr "face-inverse-video-p face &optional frame inherit"

#. type: defun
#: original_texis/display.texi:2848
msgid "This function returns non-@code{nil} if face @var{face} specifies a non-@code{nil} @code{:inverse-video} attribute."
msgstr "この関数はフェイス@var{face}が非@code{nil}の@code{:inverse-video}属性を指定すれば非@code{nil}をリターンする。"

#. type: cindex
#: original_texis/display.texi:2852
#, no-wrap
msgid "displaying faces"
msgstr "displaying faces"

#. type: cindex
#: original_texis/display.texi:2853
#, no-wrap
msgid "face merging"
msgstr "face merging"

#. type: Plain text
#: original_texis/display.texi:2861
msgid "When Emacs displays a given piece of text, the visual appearance of the text may be determined by faces drawn from different sources.  If these various sources together specify more than one face for a particular character, Emacs merges the attributes of the various faces.  Here is the order in which Emacs merges the faces, from highest to lowest priority:"
msgstr "Emacsが与えられたテキスト断片を表示する際には、そのテキストの視覚的外観は異なるソースから描画されるフェイスにより決定されるかもしれません。これら種々のソースが特定の文字にいたいして複数のフェイスを指定する場合には、Emacsはそれらのさまざまなフェイスの属性をマージします。以下にEmacsがフェイスをマージする順序を優先度順に記します:"

#. type: itemize
#: original_texis/display.texi:2866
msgid "If the text consists of a special glyph, the glyph can specify a particular face.  @xref{Glyphs}."
msgstr "そのテキストが特別なグリフで構成される場合には、そのグリフは特定のフェイスを指定できる。@ref{Glyphs}を参照のこと。"

#. type: itemize
#: original_texis/display.texi:2871
msgid "If the text lies within an active region, Emacs highlights it using the @code{region} face.  @xref{Standard Faces,,, emacs, The GNU Emacs Manual}."
msgstr "アクティブなリージョンにテキストがある場合には、Emacsは@code{region}フェイスを使用してそれをハイライトする。@ref{Standard Faces,,, emacs, The GNU Emacs Manual}を参照のこと。"

#. type: itemize
#: original_texis/display.texi:2879
msgid "If the text lies within an overlay with a non-@code{nil} @code{face} property, Emacs applies the face(s) specified by that property.  If the overlay has a @code{mouse-face} property and the mouse is near enough to the overlay, Emacs applies the face or face attributes specified by the @code{mouse-face} property instead.  @xref{Overlay Properties}."
msgstr "非@code{nil}の@code{face}属性をもつオーバーレイにテキストがある場合には、Emacsはそのプロパティにより指定されるフェイス(1つ以上)を適用する。そのオーバーレイが@code{mouse-face}プロパティをもち、マウスがそのオーバーレイに十分に近ければEmacsはかわりに@code{mouse-face}で指定されるフェイスかフェイス属性を適用する。@ref{Overlay Properties}を参照のこと。"

#. type: itemize
#: original_texis/display.texi:2882
msgid "When multiple overlays cover one character, an overlay with higher priority overrides those with lower priority.  @xref{Overlays}."
msgstr "1つの文字を複数のオーバーレイがカバーする場合には、高優先度のオーバーレイが低優先度のオーバーレイをオーバーライドする。@ref{Overlays}を参照のこと。"

#. type: itemize
#: original_texis/display.texi:2888
msgid "If the text contains a @code{face} or @code{mouse-face} property, Emacs applies the specified faces and face attributes.  @xref{Special Properties}.  (This is how Font Lock mode faces are applied.  @xref{Font Lock Mode}.)"
msgstr "そのテキストが@code{face}や@code{mouse-face}プロパティを含む場合には、Emacsは指定されたフェイスやフェイス属性を適用する。@ref{Special Properties}を参照のこと(これはFont Lockモードのフェイス適用方法。@ref{Font Lock Mode}を参照)。"

#. type: itemize
#: original_texis/display.texi:2894
msgid "If the text lies within the mode line of the selected window, Emacs applies the @code{mode-line} face.  For the mode line of a non-selected window, Emacs applies the @code{mode-line-inactive} face.  For a header line, Emacs applies the @code{header-line} face."
msgstr "そのテキストが選択されたウィンドウのモードラインにある場合には、Emacsは@code{mode-line}フェイスを適用する。選択されていないウィンドウのモードラインではEmacsは@code{mode-line-inactive}フェイスを使用する。ヘッダーラインにたいしてはEmacsは@code{header-line}フェイスを適用する。"

#. type: itemize
#: original_texis/display.texi:2904
msgid "If the text comes from an overlay string via @code{before-string} or @code{after-string} properties (@pxref{Overlay Properties}), or from a display string (@pxref{Other Display Specs}), and the string doesn't contain a @code{face} or @code{mouse-face} property, but the buffer text affected by the overlay/display property does define a face, Emacs applies the face attributes of the ``underlying'' buffer text.  Note that this is so even if the overlay or display string is displayed in the display margins (@pxref{Display Margins})."
msgstr "@code{before-string}や@code{after-string}プロパティを介したオーバーレイ文字列(@ref{Overlay Properties}を参照)、あるいはディスプレイ文字列(@ref{Other Display Specs}を参照)に由来するテキストであり、かつ文字列に@code{face}や@code{mouse-face}プロパティが含まれないが、バッファーのテキストがフェイスを定義するディスプレイプロパティやオーバーレイプロパティの影響を受ける場合には、Emacsは``基礎''にあるバッファーテキストのフェイス属性を適用する。これはたとえオーバーレイ文字列やディスプレイ文字列がマージン内に表示されている場合も同様であることに注意(@ref{Display Margins}を参照)。"

#. type: itemize
#: original_texis/display.texi:2908
msgid "If any given attribute has not been specified during the preceding steps, Emacs applies the attribute of the @code{default} face."
msgstr "先行ステップの間に与えられた属性が指定されなければ、Emacsは@code{default}フェイスの属性を適用する。"

#. type: Plain text
#: original_texis/display.texi:2916
msgid "At each stage, if a face has a valid @code{:inherit} attribute, Emacs treats any attribute with an @code{unspecified} value as having the corresponding value drawn from the parent face(s).  @pxref{Face Attributes}.  Note that the parent face(s) may also leave the attribute unspecified; in that case, the attribute remains unspecified at the next level of face merging."
msgstr "各ステージにおいてフェイスが有効な@code{:inherit}属性をもつ場合には、Emacsは値@code{unspecified}をもつすべての属性が、親フェイス(1つ以上)由来で描画に使用される対応する値をもつものとして扱います。@ref{Face Attributes}を参照してください。親フェイスでも属性がunspecifiedのままかもしれないことに注意してください。その場合にはフェイスマージの次レベルでもその属性はunspecifiedのままです。"

#. type: cindex
#: original_texis/display.texi:2919
#, no-wrap
msgid "face remapping"
msgstr "face remapping"

#. type: Plain text
#: original_texis/display.texi:2925
msgid "The variable @code{face-remapping-alist} is used for buffer-local or global changes in the appearance of a face.  For instance, it is used to implement the @code{text-scale-adjust} command (@pxref{Text Scale,,, emacs, The GNU Emacs Manual})."
msgstr "変数@code{face-remapping-alist}はあるフェイスの外観のバッファーローカル、またはグローバルな変更にたいして使用されます。たとえばこれは@code{text-scale-adjust}コマンド(@ref{Text Scale,,, emacs, The GNU Emacs Manual}を参照)の実装に使用されています。"

#. type: defvar
#: original_texis/display.texi:2926
#, no-wrap
msgid "face-remapping-alist"
msgstr "face-remapping-alist"

#. type: defvar
#: original_texis/display.texi:2931
msgid "The value of this variable is an alist whose elements have the form @code{(@var{face} . @var{remapping})}.  This causes Emacs to display any text having the face @var{face} with @var{remapping}, rather than the ordinary definition of @var{face}."
msgstr "この変数の値は要素が@code{(@var{face} . @var{remapping})}という形式をもつalist。これによりEmacsはフェイス@var{face}をもつ任意のテキストを、通常の@var{face}の定義ではなく@var{remapping}で表示する。"

#. type: defvar
#: original_texis/display.texi:2939
msgid "@var{remapping} may be any face spec suitable for a @code{face} text property: either a face (i.e., a face name or a property list of attribute/value pairs), or a list of faces.  For details, see the description of the @code{face} text property in @ref{Special Properties}.  @var{remapping} serves as the complete specification for the remapped face---it replaces the normal definition of @var{face}, instead of modifying it."
msgstr "@var{remapping}にはテキストプロパティ@code{face}にたいして適切な任意のフェイスspec、すなわちフェイス(フェイス名か属性/値ペアーのプロパティリスト)、またはフェイスのリストのいずれかを指定できる。詳細は@ref{Special Properties}の@code{face}テキストプロパティの記述を参照のこと。@var{remapping}はリマップされるフェイスにたいる完全な仕様としての役目をもつ。これは通常の@var{face}を変更せずに置き換える。"

#. type: defvar
#: original_texis/display.texi:2942
msgid "If @code{face-remapping-alist} is buffer-local, its local value takes effect only within that buffer."
msgstr "@code{face-remapping-alist}がバッファーローカルなら、そのローカル値はそのバッファーでのみ効果をもつ。"

#. type: defvar
#: original_texis/display.texi:2949
msgid "Note: face remapping is non-recursive.  If @var{remapping} references the same face name @var{face}, either directly or via the @code{:inherit} attribute of some other face in @var{remapping}, that reference uses the normal definition of @var{face}.  For instance, if the @code{mode-line} face is remapped using this entry in @code{face-remapping-alist}:"
msgstr "注意: フェイスのリマッピングは再帰的ではない。@var{remapping}が同じフェイス名@var{face}を参照する場合には、直接または@var{remapping}内の他の何らかのフェイスの@code{:inherit}属性を通じて、その参照は@var{face}の通常の定義を使用する。たとえば@code{mode-line}フェイスが@code{face-remapping-alist}内の以下のエントリーでリマップされるなら:"

#. type: example
#: original_texis/display.texi:2952
#, no-wrap
msgid "(mode-line italic mode-line)\n"
msgstr "(mode-line italic mode-line)\n"

#. type: defvar
#: original_texis/display.texi:2958
msgid "then the new definition of the @code{mode-line} face inherits from the @code{italic} face, and the @emph{normal} (non-remapped) definition of @code{mode-line} face."
msgstr "@code{mode-line}フェイスの新たな定義は@code{italic}フェイス、および(リマップされていない)@emph{通常}の@code{mode-line}フェイスの定義から継承される。"

#. type: cindex
#: original_texis/display.texi:2960
#, no-wrap
msgid "relative remapping, faces"
msgstr "relative remapping, faces"

#. type: cindex
#: original_texis/display.texi:2961
#, no-wrap
msgid "base remapping, faces"
msgstr "base remapping, faces"

#. type: Plain text
#: original_texis/display.texi:2969
msgid "The following functions implement a higher-level interface to @code{face-remapping-alist}.  Most Lisp code should use these functions instead of setting @code{face-remapping-alist} directly, to avoid trampling on remappings applied elsewhere.  These functions are intended for buffer-local remappings, so they all make @code{face-remapping-alist} buffer-local as a side-effect.  They manage @code{face-remapping-alist} entries of the form"
msgstr "以下の関数は@code{face-remapping-alist}にたいする高レベルなインターフェースを実装します。ほとんどのLispコードはリマッピングが他の場所に適用されてしまうのを避けるために、@code{face-remapping-alist}を直接セットするのではなくこれらの関数を使用するべきです。これらの関数はバッファーローカルなリマッピングを意図しており、すべてが副作用として@code{face-remapping-alist}をバッファーローカルにします。これらは以下の形式の@code{face-remapping-alist}エントリーを管理します"

#. type: example
#: original_texis/display.texi:2972
#, no-wrap
msgid "  (@var{face} @var{relative-spec-1} @var{relative-spec-2} @var{...} @var{base-spec})\n"
msgstr "  (@var{face} @var{relative-spec-1} @var{relative-spec-2} @var{...} @var{base-spec})\n"

#. type: Plain text
#: original_texis/display.texi:2985
msgid "where, as explained above, each of the @var{relative-spec-N} and @var{base-spec} is either a face name, or a property list of attribute/value pairs.  Each of the @dfn{relative remapping} entries, @var{relative-spec-N}, is managed by the @code{face-remap-add-relative} and @code{face-remap-remove-relative} functions; these are intended for simple modifications like changing the text size.  The @dfn{base remapping} entry, @var{base-spec}, has the lowest priority and is managed by the @code{face-remap-set-base} and @code{face-remap-reset-base} functions; it is intended for major modes to remap faces in the buffers they control."
msgstr "上述したように@var{relative-spec-N}と@var{base-spec}はそれぞれフェイス名か属性/値ペアーのプロパティリストです。@dfn{相対的リマッピング(relative remapping)}エントリー@var{relative-spec-N}はそれぞれ関数@code{face-remap-add-relative}と@code{face-remap-remove-relative}により管理されます。これらはテキストサイズ変更のような単純な変更を意図しています。@dfn{ベースリマッピング(base remapping)}エントリー@var{base-spec}は最低の優先度をもち、関数@code{face-remap-set-base}と@code{face-remap-reset-base}により管理されます。これはメジャーモードが制御下のバッファーでフェイスをリマップするために用いることを意図しています。"

#. type: defun
#: original_texis/display.texi:2986
#, no-wrap
msgid "face-remap-add-relative face &rest specs"
msgstr "face-remap-add-relative face &rest specs"

#. type: defun
#: original_texis/display.texi:2991
msgid "This function adds the face spec in @var{specs} as relative remappings for face @var{face} in the current buffer.  The remaining arguments, @var{specs}, should form either a list of face names, or a property list of attribute/value pairs."
msgstr "この関数はカレントバッファー内のフェイス@var{face}にたいして、相対的リマッピングとして@var{specs}内にフェイスspecを追加する。残りの引数@var{specs}はフェイス名のリスト、または属性/値ペアーのプロパティリストのいずれかの形式であること。"

#. type: defun
#: original_texis/display.texi:2995
msgid "The return value is a Lisp object that serves as a cookie; you can pass this object as an argument to @code{face-remap-remove-relative} if you need to remove the remapping later."
msgstr "リターン値はcookieとしての役目をもつLispオブジェクト。後でそのリマッピングの削除を要する場合には、引数として@code{face-remap-remove-relative}にこのオブジェクトを渡すことができる。"

#. type: example
#: original_texis/display.texi:3000
#, no-wrap
msgid ""
";; Remap the 'escape-glyph' face into a combination\n"
";; of the 'highlight' and 'italic' faces:\n"
"(face-remap-add-relative 'escape-glyph 'highlight 'italic)\n"
"\n"
msgstr ""
";; 'escape-glyph'フェイスを'highlight'と'italic'\n"
";; を組み合わせたフェイスにリマップする\n"
"(face-remap-add-relative 'escape-glyph 'highlight 'italic)\n"
"\n"

#. type: example
#: original_texis/display.texi:3003
#, no-wrap
msgid ""
";; Increase the size of the 'default' face by 50%:\n"
"(face-remap-add-relative 'default :height 1.5)\n"
msgstr ""
";; 'default'フェイスのサイズを50%増加:\n"
"(face-remap-add-relative 'default :height 1.5)\n"

#. type: defun
#: original_texis/display.texi:3006
#, no-wrap
msgid "face-remap-remove-relative cookie"
msgstr "face-remap-remove-relative cookie"

#. type: defun
#: original_texis/display.texi:3011
msgid "This function removes a relative remapping previously added by @code{face-remap-add-relative}.  @var{cookie} should be the Lisp object returned by @code{face-remap-add-relative} when the remapping was added."
msgstr "この関数は以前@code{face-remap-add-relative}で追加された相対的リマッピングを削除する。@var{cookie}はリマッピングが追加されたときに@code{face-remap-add-relative}がリターンしたLispオブジェクトであること。"

#. type: defun
#: original_texis/display.texi:3013
#, no-wrap
msgid "face-remap-set-base face &rest specs"
msgstr "face-remap-set-base face &rest specs"

#. type: defun
#: original_texis/display.texi:3020
msgid "This function sets the base remapping of @var{face} in the current buffer to @var{specs}.  If @var{specs} is empty, the default base remapping is restored, similar to calling @code{face-remap-reset-base} (see below); note that this is different from @var{specs} containing a single value @code{nil}, which has the opposite result (the global definition of @var{face} is ignored)."
msgstr "この関数はカレントバッファー内の@var{face}のベースリマッピングを@var{specs}にセットする。@var{specs}が空なら@code{face-remap-reset-base}(以下参照)を呼び出したようにデフォルトベースリマッピングがリストアされる。これは単一の値@code{nil}を含む@var{specs}とは異なることに注意。これは逆の結果をもたらす(@var{face}のグローバル定義は無視される)。"

#. type: defun
#: original_texis/display.texi:3024
msgid "This overwrites the default @var{base-spec}, which inherits the global face definition, so it is up to the caller to add such inheritance if so desired."
msgstr "これはグローバルなフェイス定義を継承したデフォルトの@var{base-spec}を上書きするので、必要ならそのような継承を追加するのは呼び出し側の責任である。"

#. type: defun
#: original_texis/display.texi:3026
#, no-wrap
msgid "face-remap-reset-base face"
msgstr "face-remap-reset-base face"

#. type: defun
#: original_texis/display.texi:3029
msgid "This function sets the base remapping of @var{face} to its default value, which inherits from @var{face}'s global definition."
msgstr "この関数は@var{face}のベースリマッピングに、@var{face}のグローバル定義から継承したデフォルト値にセットする。"

#. type: subsection
#: original_texis/display.texi:3032
#, no-wrap
msgid "Functions for Working with Faces"
msgstr "Functions for Working with Faces"

#. type: Plain text
#: original_texis/display.texi:3035
msgid "Here are additional functions for creating and working with faces."
msgstr "以下はフェイスの作成や処理を行う追加の関数です。"

#. type: defun
#: original_texis/display.texi:3036
#, no-wrap
msgid "face-list"
msgstr "face-list"

#. type: defun
#: original_texis/display.texi:3038
msgid "This function returns a list of all defined face names."
msgstr "この関数はすべての定義済みフェイス名のリストをリターンする。"

#. type: defun
#: original_texis/display.texi:3040
#, no-wrap
msgid "face-id face"
msgstr "face-id face"

#. type: defun
#: original_texis/display.texi:3044
msgid "This function returns the @dfn{face number} of face @var{face}.  This is a number that uniquely identifies a face at low levels within Emacs.  It is seldom necessary to refer to a face by its face number."
msgstr "この関数はフェイス@var{face}の@dfn{フェイス番号(face number)}をリターンする。これはEmacs内の低レベルでフェイスを一意に識別する番号。フェイス番号によるフェイス参照を要するのは稀である。"

#. type: defun
#: original_texis/display.texi:3046
#, no-wrap
msgid "face-documentation face"
msgstr "face-documentation face"

#. type: defun
#: original_texis/display.texi:3049
msgid "This function returns the documentation string of face @var{face}, or @code{nil} if none was specified for it."
msgstr "この関数はフェイス@var{face}のドキュメント文字列、指定されていなければ@code{nil}をリターンする。"

#. type: defun
#: original_texis/display.texi:3051
#, no-wrap
msgid "face-equal face1 face2 &optional frame"
msgstr "face-equal face1 face2 &optional frame"

#. type: defun
#: original_texis/display.texi:3054
msgid "This returns @code{t} if the faces @var{face1} and @var{face2} have the same attributes for display."
msgstr "これはフェイス@var{face1}とフェイス@var{face2}が表示にたいして同じ属性をもつなら@code{t}をリターンする。"

#. type: defun
#: original_texis/display.texi:3056
#, no-wrap
msgid "face-differs-from-default-p face &optional frame"
msgstr "face-differs-from-default-p face &optional frame"

#. type: defun
#: original_texis/display.texi:3059
msgid "This returns non-@code{nil} if the face @var{face} displays differently from the default face."
msgstr "これはフェイス@var{face}の表示がデフォルトフェイスと異なるなら非@code{nil}をリターンする。"

#. type: cindex
#: original_texis/display.texi:3061
#, no-wrap
msgid "face alias"
msgstr "face alias"

#. type: cindex
#: original_texis/display.texi:3062
#, no-wrap
msgid "alias, for faces"
msgstr "alias, for faces"

#. type: Plain text
#: original_texis/display.texi:3067
msgid "A @dfn{face alias} provides an equivalent name for a face.  You can define a face alias by giving the alias symbol the @code{face-alias} property, with a value of the target face name.  The following example makes @code{modeline} an alias for the @code{mode-line} face."
msgstr "@dfn{フェイスエイリアス(face alias)}はあるフェイスにたいして等価な名前を提供します。エイリアスシンボルの@code{face-alias}プロパティに対象となるフェイス名を与えることによってフェイスエイリアスを定義できます。以下の例では@code{mode-line}フェイスにたいするエイリアスとして@code{modeline}を作成します。"

#. type: example
#: original_texis/display.texi:3070
#, no-wrap
msgid "(put 'modeline 'face-alias 'mode-line)\n"
msgstr "(put 'modeline 'face-alias 'mode-line)\n"

#. type: defmac
#: original_texis/display.texi:3072
#, no-wrap
msgid "define-obsolete-face-alias obsolete-face current-face when"
msgstr "define-obsolete-face-alias obsolete-face current-face when"

#. type: defmac
#: original_texis/display.texi:3078
msgid "This macro defines @code{obsolete-face} as an alias for @var{current-face}, and also marks it as obsolete, indicating that it may be removed in future.  @var{when} should be a string indicating when @code{obsolete-face} was made obsolete (usually a version number string)."
msgstr "このマクロは@var{current-face}のエイリアスとして@code{obsolete-face}を定義するとともに、将来に削除されるかもしれないことを示すためにobsolete(時代遅れ)とマークする。@var{when}は@code{obsolete-face}がobsoleteになる時期を示す文字列であること(通常はバージョン番号文字列)。"

#. type: subsection
#: original_texis/display.texi:3081
#, no-wrap
msgid "Automatic Face Assignment"
msgstr "Automatic Face Assignment"

#. type: cindex
#: original_texis/display.texi:3082
#, no-wrap
msgid "automatic face assignment"
msgstr "automatic face assignment"

#. type: cindex
#: original_texis/display.texi:3083
#, no-wrap
msgid "faces, automatic choice"
msgstr "faces, automatic choice"

#. type: Plain text
#: original_texis/display.texi:3088
msgid "This hook is used for automatically assigning faces to text in the buffer.  It is part of the implementation of Jit-Lock mode, used by Font-Lock."
msgstr "以下のフックはバッファー内のテキストに自動的にフェイスを割り当てるために使用されます。これはJit-Lockモードの実装の一部でありFont-Lockにより使用されます。"

#. type: defvar
#: original_texis/display.texi:3089
#, no-wrap
msgid "fontification-functions"
msgstr "fontification-functions"

#. type: defvar
#: original_texis/display.texi:3094
msgid "This variable holds a list of functions that are called by Emacs redisplay as needed, just before doing redisplay.  They are called even when Font Lock Mode isn't enabled.  When Font Lock Mode is enabled, this variable usually holds just one function, @code{jit-lock-function}."
msgstr "この変数は再表示を行う直前にEmacsの再表示により呼び出される関数のリストを保持する。これらはFont Lockが有効でないときでも呼び出される。Font Lockモードが有効なら、この変数は通常は単一の関数@code{jit-lock-function}だけを保持する。"

#. type: defvar
#: original_texis/display.texi:3098
msgid "The functions are called in the order listed, with one argument, a buffer position @var{pos}.  Collectively they should attempt to assign faces to the text in the current buffer starting at @var{pos}."
msgstr "関数はバッファー位置@var{pos}を単一の引数としてリストされた順に呼び出される。これらはカレントバッファー内の@var{pos}で開始されるテキストにたいして集合的にフェイスの割り当てを試みること。"

#. type: defvar
#: original_texis/display.texi:3104
msgid "The functions should record the faces they assign by setting the @code{face} property.  They should also add a non-@code{nil} @code{fontified} property to all the text they have assigned faces to.  That property tells redisplay that faces have been assigned to that text already."
msgstr "関数は@code{face}プロパティをセットすることにより割り当てるフェイスを記録すること。またフェイスを割り当てたすべてのテキストに非@code{nil}の@code{fontified}プロパティも追加すること。このプロパティは再表示にたいして、そのテキストにたいしてそのフェイスがすでに割り当て済みであることを告げる。"

#. type: defvar
#: original_texis/display.texi:3110
msgid "It is probably a good idea for the functions to do nothing if the character after @var{pos} already has a non-@code{nil} @code{fontified} property, but this is not required.  If one function overrides the assignments made by a previous one, the properties after the last function finishes are the ones that really matter."
msgstr "@var{pos}の後の文字がすでに非@code{nil}の@code{fontified}プロパティをもつがフォント表示化を要さない場合には、何も行わない関数を追加するのがおそらくよいアイデアである。ある関数が前の関数による割り当てをオーバーライドする場合には、実際に問題となるのは最後の関数終了後のプロパティである。"

#. type: defvar
#: original_texis/display.texi:3113
msgid "For efficiency, we recommend writing these functions so that they usually assign faces to around 400 to 600 characters at each call."
msgstr "効率化のために通常は各呼び出しにおいて400から600前後の文字にフェイスを割り当てるように、これらの関数を記述することを推奨する。"

#. type: cindex
#: original_texis/display.texi:3117
#, no-wrap
msgid "basic faces"
msgstr "basic faces"

#. type: Plain text
#: original_texis/display.texi:3124
msgid "If your Emacs Lisp program needs to assign some faces to text, it is often a good idea to use certain existing faces or inherit from them, rather than defining entirely new faces.  This way, if other users have customized the basic faces to give Emacs a certain look, your program will fit in without additional customization."
msgstr "テキストにたいしてEmacs Lispプログラムが何らかのフェイス割り当てを要する場合には、完全に新たなフェイスを定義するより特定の既存フェイス、またはそれらを継承したフェイスを使用するほうがよいアイデアである場合がしばしばあります。Emacsに特定の外観を与えるために別のユーザーが基本フェイス(basic face)をカスタマイズしていても、この方法なら追加のカスタマイズなしでプログラムは適合することでしょう。"

#. type: Plain text
#: original_texis/display.texi:3130
msgid "Some of the basic faces defined in Emacs are listed below.  In addition to these, you might want to make use of the Font Lock faces for syntactic highlighting, if highlighting is not already handled by Font Lock mode, or if some Font Lock faces are not in use.  @xref{Faces for Font Lock}."
msgstr "以下にEmacsが定義する基本フェイスのいくつかをリストしました。これらに加えて、ハイライトがFont Lockモードによりまだ処理されていなかったり、いくつかのFont Lockフェイスが使用されていなければ、構文的ハイライトのためにFont Lockフェイスを使うようにしたいと思うかもしれません。@ref{Faces for Font Lock}を参照してください。"

#. type: table
#: original_texis/display.texi:3136
msgid "The default face, whose attributes are all specified.  All other faces implicitly inherit from it: any unspecified attribute defaults to the attribute on this face (@pxref{Face Attributes})."
msgstr "属性がすべて指定されたデフォルトフェイス。他のすべてのフェイスは暗にこのフェイスを継承する。未指定(unspecified)な任意の属性は、このフェイスの属性をデフォルトとする(@ref{Face Attributes}を参照)。"

#. type: item
#: original_texis/display.texi:3137
#, no-wrap
msgid "bold"
msgstr "bold"

#. type: itemx
#: original_texis/display.texi:3138
#, no-wrap
msgid "italic"
msgstr "italic"

#. type: itemx
#: original_texis/display.texi:3139
#, no-wrap
msgid "bold-italic"
msgstr "bold-italic"

#. type: itemx
#: original_texis/display.texi:3140
#, no-wrap
msgid "underline"
msgstr "underline"

#. type: itemx
#: original_texis/display.texi:3141
#, no-wrap
msgid "fixed-pitch"
msgstr "fixed-pitch"

#. type: itemx
#: original_texis/display.texi:3142
#, no-wrap
msgid "fixed-pitch-serif"
msgstr "fixed-pitch-serif"

#. type: itemx
#: original_texis/display.texi:3143
#, no-wrap
msgid "variable-pitch"
msgstr "variable-pitch"

#. type: table
#: original_texis/display.texi:3147
msgid "These have the attributes indicated by their names (e.g., @code{bold} has a bold @code{:weight} attribute), with all other attributes unspecified (and so given by @code{default})."
msgstr "これらは名前に示されるような属性をもち(@code{bold}はboldの@code{:weight}属性をもつ)、それ以外のすべての属性は未指定(そのために@code{default}により与えられる)。"

#. type: item
#: original_texis/display.texi:3148
#, no-wrap
msgid "shadow"
msgstr "shadow"

#. type: table
#: original_texis/display.texi:3152
msgid "For dimmed-out text.  For example, it is used for the ignored part of a filename in the minibuffer (@pxref{Minibuffer File,, Minibuffers for File Names, emacs, The GNU Emacs Manual})."
msgstr "テキストの淡色表示(dimmed out)用。たとえばこれはミニバッファー内で無視されるファイル名部分に使用される(@ref{Minibuffer File,, Minibuffers for File Names, emacs, The GNU Emacs Manual}を参照)。"

#. type: item
#: original_texis/display.texi:3153
#, no-wrap
msgid "link"
msgstr "link"

#. type: itemx
#: original_texis/display.texi:3154
#, no-wrap
msgid "link-visited"
msgstr "link-visited"

#. type: table
#: original_texis/display.texi:3157
msgid "For clickable text buttons that send the user to a different buffer or location."
msgstr "ユーザーを別のバッファーや位置へと送るクリック可能テキストボタン用。"

#. type: item
#: original_texis/display.texi:3158
#, no-wrap
msgid "highlight"
msgstr "highlight"

#. type: table
#: original_texis/display.texi:3162
msgid "For stretches of text that should temporarily stand out.  For example, it is commonly assigned to the @code{mouse-face} property for cursor highlighting (@pxref{Special Properties})."
msgstr "一時的に強調するべきテキスト範囲用。たとえば一般的にカーソルのハイライトには@code{mouse-face}プロパティが割り当てられる(@ref{Special Properties}を参照)。"

#. type: item
#: original_texis/display.texi:3163
#, no-wrap
msgid "match"
msgstr "match"

#. type: itemx
#: original_texis/display.texi:3164
#, no-wrap
msgid "isearch"
msgstr "isearch"

#. type: itemx
#: original_texis/display.texi:3165
#, no-wrap
msgid "lazy-highlight"
msgstr "lazy-highlight"

#. type: table
#: original_texis/display.texi:3169
msgid "For text matching (respectively) permanent search matches, interactive search matches, and lazy highlighting other matches than the current interactive one."
msgstr "それぞれ定型検索(permanent search)のマッチ、インタラクティブ検索のマッチ、カレントのインタラクティブな検索のマッチ以外のlazyハイライトにたいするテキスト用。"

#. type: item
#: original_texis/display.texi:3170
#, no-wrap
msgid "error"
msgstr "error"

#. type: itemx
#: original_texis/display.texi:3171
#, no-wrap
msgid "warning"
msgstr "warning"

#. type: itemx
#: original_texis/display.texi:3172
#, no-wrap
msgid "success"
msgstr "success"

#. type: table
#: original_texis/display.texi:3175
msgid "For text concerning errors, warnings, or successes.  For example, these are used for messages in @file{*Compilation*} buffers."
msgstr "エラー、警告、成功に関するテキスト用。たとえば@file{*Compilation*}内のメッセージにたいして使用される。"

#. type: cindex
#: original_texis/display.texi:3179
#, no-wrap
msgid "font selection"
msgstr "font selection"

#. type: cindex
#: original_texis/display.texi:3180
#, no-wrap
msgid "selecting a font"
msgstr "selecting a font"

#. type: Plain text
#: original_texis/display.texi:3194
msgid "Before Emacs can draw a character on a graphical display, it must select a @dfn{font} for that character@footnote{In this context, the term @dfn{font} has nothing to do with Font Lock (@pxref{Font Lock Mode}).}.  @xref{Fonts,,, emacs, The GNU Emacs Manual}.  Normally, Emacs automatically chooses a font based on the faces assigned to that character---specifically, the face attributes @code{:family}, @code{:weight}, @code{:slant}, and @code{:width} (@pxref{Face Attributes}).  The choice of font also depends on the character to be displayed; some fonts can only display a limited set of characters.  If no available font exactly fits the requirements, Emacs looks for the @dfn{closest matching font}.  The variables in this section control how Emacs makes this selection."
msgstr "Emacsがグラフィカルなディスプレイ上で文字を描画可能になる前に、まずその文字にたいする@dfn{フォント(font)}を選択しなければなりません@footnote{このコンテキストでは用語@dfn{font}はFont Lock(@ref{Font Lock Mode}を参照)にたいして何も行いません。}。@ref{Fonts,,, emacs, The GNU Emacs Manual}を参照してください。Emacsは通常はその文字に割り当てられたフェイス、特にフェイス属性@code{:family}、@code{:weight}、@code{:slant}、@code{:width}(@ref{Face Attributes}を参照)にもとづいて自動的にフォントを選択します。フォントの選択は表示される文字にも依存します。表示できるのは文字セットが限定されているフォントもいくつかあります。利用可能なフォントがこの要件を完全に満たさなければEmacsは@dfn{もっとも近いフォント(closest matching font)}を探します。このセクション内の変数はEmacsがこの選択を行う方法を制御します。"

#. type: defopt
#: original_texis/display.texi:3195
#, no-wrap
msgid "face-font-family-alternatives"
msgstr "face-font-family-alternatives"

#. type: defopt
#: original_texis/display.texi:3199
msgid "If a given family is specified but does not exist, this variable specifies alternative font families to try.  Each element should have this form:"
msgstr "あるfamilyが指定されたが存在しなければ、この変数は試みるべき代替えのフォントファミリーを指定する。各要素は以下の形式をもつ:"

#. type: example
#: original_texis/display.texi:3202
#, no-wrap
msgid "(@var{family} @var{alternate-families}@dots{})\n"
msgstr "(@var{family} @var{alternate-families}@dots{})\n"

#. type: defopt
#: original_texis/display.texi:3207
msgid "If @var{family} is specified but not available, Emacs will try the other families given in @var{alternate-families}, one by one, until it finds a family that does exist."
msgstr "@var{family}が指定されたが利用できなければ、Emacsは@var{alternate-families}で与えられるファミリーで存在するものが見つかるまで1つずつファミリーを試みる。"

#. type: defopt
#: original_texis/display.texi:3209
#, no-wrap
msgid "face-font-selection-order"
msgstr "face-font-selection-order"

#. type: defopt
#: original_texis/display.texi:3217
msgid "If there is no font that exactly matches all desired face attributes (@code{:width}, @code{:height}, @code{:weight}, and @code{:slant}), this variable specifies the order in which these attributes should be considered when selecting the closest matching font.  The value should be a list containing those four attribute symbols, in order of decreasing importance.  The default is @code{(:width :height :weight :slant)}."
msgstr "希望するすべてのフェイス属性(@code{:width}、@code{:height}、@code{:weight}、@code{:slant})に完全にマッチするフォントが存在しなければ、この変数はもっとも近いフォントの選択時に考慮すべきこれらの属性の順序を指定する。値はこれらの属性シンボルを重要度降順で含むリストであること。デフォルトは@code{(:width :height :weight :slant)}。"

#. type: defopt
#: original_texis/display.texi:3222
msgid "Font selection first finds the best available matches for the first attribute in the list; then, among the fonts which are best in that way, it searches for the best matches in the second attribute, and so on."
msgstr "フォント選択はまずこのリスト内の最初の属性にたいして利用可能な最適マッチを探す。その後に、この方法で最適なフォントの中から2つ目の属性にたいして最適なマッチを検索、...のように選択を行う。"

#. type: defopt
#: original_texis/display.texi:3228
msgid "The attributes @code{:weight} and @code{:width} have symbolic values in a range centered around @code{normal}.  Matches that are more extreme (farther from @code{normal}) are somewhat preferred to matches that are less extreme (closer to @code{normal}); this is designed to ensure that non-normal faces contrast with normal ones, whenever possible."
msgstr "属性@code{:weight}と@code{:width}は@code{normal}を中心とする範囲のようなシンボリック値をもつ。より極端(@code{normal}から離れた)なマッチは、より極端ではない(@code{normal}に近い)マッチより幾分優先される。これは可能なかぎり非normalなフェイスが、normalなフェイスとは対照的になることを保証するようにデザインされている。"

#. type: defopt
#: original_texis/display.texi:3235
msgid "One example of a case where this variable makes a difference is when the default font has no italic equivalent.  With the default ordering, the @code{italic} face will use a non-italic font that is similar to the default one.  But if you put @code{:slant} before @code{:height}, the @code{italic} face will use an italic font, even if its height is not quite right."
msgstr "この変数が違いを生むケースの例はデフォルトフォントに等価なイタリックがない場合である。デフォルトの順では@code{italic}フェイスはデフォルトのフォントに類似した非イタリックのフォントを使用するだろう。しかし@code{:height}の前に@code{:slant}を配置すると、@code{italic}フェイスはたとえheightが同じでなくともイタリックフォントを使用するだろう。"

#. type: defopt
#: original_texis/display.texi:3237
#, no-wrap
msgid "face-font-registry-alternatives"
msgstr "face-font-registry-alternatives"

#. type: defopt
#: original_texis/display.texi:3241
msgid "This variable lets you specify alternative font registries to try, if a given registry is specified and doesn't exist.  Each element should have this form:"
msgstr "この変数はregistryが指定されたがそれが存在しない場合に試みるべき代替えのフォントレジストリーを指定する。各要素は以下の形式をもつ:"

#. type: example
#: original_texis/display.texi:3244
#, no-wrap
msgid "(@var{registry} @var{alternate-registries}@dots{})\n"
msgstr "(@var{registry} @var{alternate-registries}@dots{})\n"

#. type: defopt
#: original_texis/display.texi:3249
msgid "If @var{registry} is specified but not available, Emacs will try the other registries given in @var{alternate-registries}, one by one, until it finds a registry that does exist."
msgstr "@var{registry}が指定されたが利用できなければ、Emacsは@var{alternate-registries}内で存在するレジストリーが見つかるまで他のレジストリーを1つずつ試みる。"

#. type: cindex
#: original_texis/display.texi:3251
#, no-wrap
msgid "scalable fonts"
msgstr "scalable fonts"

#. type: Plain text
#: original_texis/display.texi:3254
msgid "Emacs can make use of scalable fonts, but by default it does not use them."
msgstr "Emacsがスケーラブルフォントを使用するようにできますがデフォルトではそれらを使用しないようになっています。"

#. type: defopt
#: original_texis/display.texi:3255
#, no-wrap
msgid "scalable-fonts-allowed"
msgstr "scalable-fonts-allowed"

#. type: defopt
#: original_texis/display.texi:3259
msgid "This variable controls which scalable fonts to use.  A value of @code{nil}, the default, means do not use scalable fonts.  @code{t} means to use any scalable font that seems appropriate for the text."
msgstr "この変数はどのスケーラブルフォントを使用するかを制御する。値@code{nil} (デフォルト)はスケーラブルフォントを使用しないことを意味する。@code{t}はそのテキストにたいして適切と思われる任意のスケーラブルフォントを使用することを意味する。"

#. type: defopt
#: original_texis/display.texi:3263
msgid "Otherwise, the value must be a list of regular expressions.  Then a scalable font is enabled for use if its name matches any regular expression in the list.  For example,"
msgstr "それ以外なら値は正規表現のリストであること。その場合には名前がこのリスト内の正規表現にマッチする任意のスケーラブルフォントの使用が有効になる。たとえば、"

#. type: example
#: original_texis/display.texi:3266
#, no-wrap
msgid "(setq scalable-fonts-allowed '(\"iso10646-1$\"))\n"
msgstr "(setq scalable-fonts-allowed '(\"iso10646-1$\"))\n"

#. type: defopt
#: original_texis/display.texi:3270
msgid "allows the use of scalable fonts with registry @code{iso10646-1}."
msgstr "これはレジストリーが@code{iso10646-1}のようなスケーラブルフォントの使用を可能にする。"

#. type: defvar
#: original_texis/display.texi:3272
#, no-wrap
msgid "face-font-rescale-alist"
msgstr "face-font-rescale-alist"

#. type: defvar
#: original_texis/display.texi:3275
msgid "This variable specifies scaling for certain faces.  Its value should be a list of elements of the form"
msgstr "この変数は特定のフォントにたいするスケーリングを指定する。値は以下の形式の要素をもつリストであること"

#. type: example
#: original_texis/display.texi:3278
#, no-wrap
msgid "(@var{fontname-regexp} . @var{scale-factor})\n"
msgstr "(@var{fontname-regexp} . @var{scale-factor})\n"

#. type: defvar
#: original_texis/display.texi:3285
msgid "If @var{fontname-regexp} matches the font name that is about to be used, this says to choose a larger similar font according to the factor @var{scale-factor}.  You would use this feature to normalize the font size if certain fonts are bigger or smaller than their nominal heights and widths would suggest."
msgstr "使用しようとするフォントの名前が@var{fontname-regexp}にマッチする場合には、これはファクター@var{scale-factor}に対応した同様な大きさのフォントの選択を指示する。特定のフォントが提示する通常のheightやwidthが大きい、または小さい場合にフォントサイズを正規化するためにこの機能を使用できるだろう。"

#. type: subsection
#: original_texis/display.texi:3288
#, no-wrap
msgid "Looking Up Fonts"
msgstr "Looking Up Fonts"

#. type: cindex
#: original_texis/display.texi:3289
#, no-wrap
msgid "font lookup"
msgstr "font lookup"

#. type: cindex
#: original_texis/display.texi:3290
#, no-wrap
msgid "looking up fonts"
msgstr "looking up fonts"

#. type: defun
#: original_texis/display.texi:3292
#, no-wrap
msgid "x-list-fonts name &optional reference-face frame maximum width"
msgstr "x-list-fonts name &optional reference-face frame maximum width"

#. type: defun
#: original_texis/display.texi:3300
msgid "This function returns a list of available font names that match @var{name}.  @var{name} should be a string containing a font name in either the Fontconfig, GTK+, or XLFD format (@pxref{Fonts,,, emacs, The GNU Emacs Manual}).  Within an XLFD string, wildcard characters may be used: the @samp{*} character matches any substring, and the @samp{?} character matches any single character.  Case is ignored when matching font names."
msgstr "この関数は@var{name}にマッチする利用可能なフォント名のリストをリターンする。@var{name}はFontconfig、GTK+、またはXLFDのいずれかのフォーマットによるフォント名を含む文字列であること(@ref{Fonts,,, emacs, The GNU Emacs Manual}を参照)。XLFD文字列ではワイルドカード文字が使用できる。@samp{*}文字は任意の部分文字列、@samp{?}は任意の単一文字にマッチする。フォント名のマッチングではcase(大文字小文字)の違いは無視される。"

#. type: defun
#: original_texis/display.texi:3305
msgid "If the optional arguments @var{reference-face} and @var{frame} are specified, the returned list includes only fonts that are the same size as @var{reference-face} (a face name) currently is on the frame @var{frame}."
msgstr "オプション引数@var{reference-face}と@var{frame}が指定された場合には、リターンされるリストにはその時点でフレーム@var{frame}上での@var{reference-face} (フェイス名)と同じサイズのフォントだけが含まれる。"

#. type: defun
#: original_texis/display.texi:3311
msgid "The optional argument @var{maximum} sets a limit on how many fonts to return.  If it is non-@code{nil}, then the return value is truncated after the first @var{maximum} matching fonts.  Specifying a small value for @var{maximum} can make this function much faster, in cases where many fonts match the pattern."
msgstr "オプション引数@var{maximum}はリターンされるフォント数の制限をセットする。これが非@code{nil}ならリターン値は最初にマッチした@var{maximum}個のフォントの後が切り捨てられる。@var{maximum}に小さい値を指定すれば、そのパターンに多くのフォントがマッチするような場合に関数をより高速にできる。"

#. type: defun
#: original_texis/display.texi:3316
msgid "The optional argument @var{width} specifies a desired font width.  If it is non-@code{nil}, the function only returns those fonts whose characters are (on average) @var{width} times as wide as @var{reference-face}."
msgstr "オプション引数@var{width}は希望するフォントの幅を指定する。これが非@code{nil}なら、この関数は文字の幅(平均)が@var{reference-face}の@var{width}倍の幅であるようなフォントだけをリターンする。"

#. type: defun
#: original_texis/display.texi:3318
#, no-wrap
msgid "x-family-fonts &optional family frame"
msgstr "x-family-fonts &optional family frame"

#. type: defun
#: original_texis/display.texi:3324
msgid "This function returns a list describing the available fonts for family @var{family} on @var{frame}.  If @var{family} is omitted or @code{nil}, this list applies to all families, and therefore, it contains all available fonts.  Otherwise, @var{family} must be a string; it may contain the wildcards @samp{?} and @samp{*}."
msgstr "この関数は@var{frame}上のファミリー@var{family}にたいして利用可能なフォントを記述するリストをリターンする。@var{family}が省略か@code{nil}ならこのリストはすべてのファミリーに適用されて、それはすなわち利用可能なすべてのフォントを含む。それ以外なら@var{family}は文字列であること。これにはワイルドカード@samp{?}と@samp{*}を含めることができる。"

#. type: defun
#: original_texis/display.texi:3328
msgid "The list describes the display that @var{frame} is on; if @var{frame} is omitted or @code{nil}, it applies to the selected frame's display (@pxref{Input Focus})."
msgstr "このリストは@var{frame}のあるディスプレイを記述する。@var{frame}が省略か@code{nil}なら、これは選択されたフレームのディスプレイに適用される(@ref{Input Focus}を参照)。"

#. type: defun
#: original_texis/display.texi:3330
msgid "Each element in the list is a vector of the following form:"
msgstr "このリスト内の各要素は以下の形式のベクターであること:"

#. type: example
#: original_texis/display.texi:3334
#, no-wrap
msgid ""
"[@var{family} @var{width} @var{point-size} @var{weight} @var{slant}\n"
" @var{fixed-p} @var{full} @var{registry-and-encoding}]\n"
msgstr ""
"[@var{family} @var{width} @var{point-size} @var{weight} @var{slant}\n"
" @var{fixed-p} @var{full} @var{registry-and-encoding}]\n"

#. type: defun
#: original_texis/display.texi:3338
msgid "The first five elements correspond to face attributes; if you specify these attributes for a face, it will use this font."
msgstr "最初の5つの要素はフェイス属性に対応する。あるフェイスにたいしてこれらの属性を指定した場合には、そのフォントが使用されるだろう。"

#. type: defun
#: original_texis/display.texi:3344
msgid "The last three elements give additional information about the font.  @var{fixed-p} is non-@code{nil} if the font is fixed-pitch.  @var{full} is the full name of the font, and @var{registry-and-encoding} is a string giving the registry and encoding of the font."
msgstr "最後の3つの要素は、そのフォントに関する追加の情報を与える。そのフォントが固定ピッチ(fixed-pitch)でなければ@var{fixed-p}は非@code{nil}。@var{full}はそのフォントのフルネーム、@var{registry-and-encoding}はそのフォントのレジストリーとエンコーディングを与える。"

#. type: cindex
#: original_texis/display.texi:3348
#, no-wrap
msgid "fontset"
msgstr "fontset"

#. type: Plain text
#: original_texis/display.texi:3356
msgid "A @dfn{fontset} is a list of fonts, each assigned to a range of character codes.  An individual font cannot display the whole range of characters that Emacs supports, but a fontset can.  Fontsets have names, just as fonts do, and you can use a fontset name in place of a font name when you specify the font for a frame or a face.  Here is information about defining a fontset under Lisp program control."
msgstr "@dfn{フォントセット(fontset)}とは、それぞれが文字コードの範囲に割り当てられるフォントのリストのことです。個々のフォントではEmacsがサポートする文字の全範囲を表示できませんが、フォントセットであれば表示することができます。フォントのようにフォントセットは名前をもつことができ、フレームやフェイスにたいしてフォントを指定する際に、フォント名としてフォントセット名を使用できます。以下はLispプログラム制御下でのフォントセット定義に関する情報です。"

#. type: defun
#: original_texis/display.texi:3357
#, no-wrap
msgid "create-fontset-from-fontset-spec fontset-spec &optional style-variant-p noerror"
msgstr "create-fontset-from-fontset-spec fontset-spec &optional style-variant-p noerror"

#. type: defun
#: original_texis/display.texi:3360
msgid "This function defines a new fontset according to the specification string @var{fontset-spec}.  The string should have this format:"
msgstr "この関数は仕様文字列@var{fontset-spec}に応じて新たなフォントセットを定義する。この文字列は以下のような形式であること:"

#. type: smallexample
#: original_texis/display.texi:3363
#, no-wrap
msgid "@var{fontpattern}, @r{[}@var{charset}:@var{font}@r{]@dots{}}\n"
msgstr "@var{fontpattern}, @r{[}@var{charset}:@var{font}@r{]@dots{}}\n"

#. type: defun
#: original_texis/display.texi:3367
msgid "Whitespace characters before and after the commas are ignored."
msgstr "カンマの前後の空白文字は無視される。"

#. type: defun
#: original_texis/display.texi:3371
msgid "The first part of the string, @var{fontpattern}, should have the form of a standard X font name, except that the last two fields should be @samp{fontset-@var{alias}}."
msgstr "この文字列の最初の部分@var{fontpattern}は、最後の2つのフィールドが@samp{fontset-@var{alias}}であることを除外して標準Xフォント名形式をもつこと。"

#. type: defun
#: original_texis/display.texi:3378
msgid "The new fontset has two names, one long and one short.  The long name is @var{fontpattern} in its entirety.  The short name is @samp{fontset-@var{alias}}.  You can refer to the fontset by either name.  If a fontset with the same name already exists, an error is signaled, unless @var{noerror} is non-@code{nil}, in which case this function does nothing."
msgstr "新たなフォントセットはlong名とshort名という2つの名前をもつ。long名はそれ全体が@var{fontpattern}、short名は@samp{fontset-@var{alias}}。いずれの名前でもこのフォントセットを参照できる。同じ名前がすでに存在するフォントセットでは@var{noerror}が@code{nil}ならエラーがシグナルされ、@var{noerror}が非@code{nil}ならこの関数は何も行わない。"

#. type: defun
#: original_texis/display.texi:3384
msgid "If optional argument @var{style-variant-p} is non-@code{nil}, that says to create bold, italic and bold-italic variants of the fontset as well.  These variant fontsets do not have a short name, only a long one, which is made by altering @var{fontpattern} to indicate the bold and/or italic status."
msgstr "オプション引数@var{style-variant-p}が非@code{nil}なら、そのフォントセットのbold、italic、およびbold-italicも同様に作成するよう指示する。これらの変種フォントセットはshort名をもたずbold、および/またはitalicを示すように@var{fontpattern}を変更して作成したlong名だけをもつ。"

#. type: defun
#: original_texis/display.texi:3387
msgid "The specification string also says which fonts to use in the fontset.  See below for the details."
msgstr "仕様文字列はそのフォントセット内でどのフォントを使用するかも宣言する。詳細は以下を参照。"

#. type: Plain text
#: original_texis/display.texi:3394
msgid "The construct @samp{@var{charset}:@var{font}} specifies which font to use (in this fontset) for one particular character set.  Here, @var{charset} is the name of a character set, and @var{font} is the font to use for that character set.  You can use this construct any number of times in the specification string."
msgstr "構文@samp{@var{charset}:@var{font}}はある特定の文字セットにたいして、(このフォントセット内の)どのフォントを使用するかを指定します。ここで@var{charset}は文字セットの名前、@var{font}はその文字セットにたいして使用するフォントです。仕様文字列内ではこの構文を任意の回数使用できます。"

#. type: Plain text
#: original_texis/display.texi:3400
msgid "For the remaining character sets, those that you don't specify explicitly, Emacs chooses a font based on @var{fontpattern}: it replaces @samp{fontset-@var{alias}} with a value that names one character set.  For the @acronym{ASCII} character set, @samp{fontset-@var{alias}} is replaced with @samp{ISO8859-1}."
msgstr "明示的に指定しなかった残りの文字セットにたいして、Emacsは@var{fontpattern}にもとづいてフォントを選択します。これは@samp{fontset-@var{alias}}をその文字セットを命名する値に置き換えます。文字セット@acronym{ASCII}にたいしては、@samp{fontset-@var{alias}}は@samp{ISO8859-1}に置き換えられます。"

#. type: Plain text
#: original_texis/display.texi:3406
msgid "In addition, when several consecutive fields are wildcards, Emacs collapses them into a single wildcard.  This is to prevent use of auto-scaled fonts.  Fonts made by scaling larger fonts are not usable for editing, and scaling a smaller font is not useful because it is better to use the smaller font in its own size, which Emacs does."
msgstr "加えて後続の複数フィールドがワイルドカードなら、Emacsはそれらを1つのワイルドカードにまとめます。これは自動スケールフォント(auto-scaled fonts)の使用を防ぐためです。フォントを大きくスケーリングすることにより作成されたフォントは編集に使用できず、小さくスケーリングされたフォントは、それ自身のサイズがより小さいフォントを使用する(Emacsが行う方法)ほうがよいので有用ではありません。"

#. type: Plain text
#: original_texis/display.texi:3408
msgid "Thus if @var{fontpattern} is this,"
msgstr "つまり以下のような@var{fontpattern}なら"

#. type: example
#: original_texis/display.texi:3411
#, no-wrap
msgid "-*-fixed-medium-r-normal-*-24-*-*-*-*-*-fontset-24\n"
msgstr "-*-fixed-medium-r-normal-*-24-*-*-*-*-*-fontset-24\n"

#. type: Plain text
#: original_texis/display.texi:3415
msgid "the font specification for @acronym{ASCII} characters would be this:"
msgstr "@acronym{ASCII}にたいするフォントspecは以下のようになるでしょう:"

#. type: example
#: original_texis/display.texi:3418
#, no-wrap
msgid "-*-fixed-medium-r-normal-*-24-*-ISO8859-1\n"
msgstr "-*-fixed-medium-r-normal-*-24-*-ISO8859-1\n"

#. type: Plain text
#: original_texis/display.texi:3422
msgid "and the font specification for Chinese GB2312 characters would be this:"
msgstr "またChinese GB2312文字にたいするフォントspecは以下のようになるでしょう:"

#. type: example
#: original_texis/display.texi:3425
#, no-wrap
msgid "-*-fixed-medium-r-normal-*-24-*-gb2312*-*\n"
msgstr "-*-fixed-medium-r-normal-*-24-*-gb2312*-*\n"

#. type: Plain text
#: original_texis/display.texi:3431
msgid "You may not have any Chinese font matching the above font specification.  Most X distributions include only Chinese fonts that have @samp{song ti} or @samp{fangsong ti} in the @var{family} field.  In such a case, @samp{Fontset-@var{n}} can be specified as below:"
msgstr "上記のフォントspecにマッチするChineseフォントをもっていないかもしれません。ほとんどのXディストリビューションには、@var{family}フィールドに@samp{song ti}か@samp{fangsong ti}をもつChineseフォントだけが含まれます。そのような場合には以下のように@samp{Fontset-@var{n}}を指定できます:"

#. type: smallexample
#: original_texis/display.texi:3435
#, no-wrap
msgid ""
"Emacs.Fontset-0: -*-fixed-medium-r-normal-*-24-*-*-*-*-*-fontset-24,\\\n"
"        chinese-gb2312:-*-*-medium-r-normal-*-24-*-gb2312*-*\n"
msgstr ""
"Emacs.Fontset-0: -*-fixed-medium-r-normal-*-24-*-*-*-*-*-fontset-24,\\\n"
"        chinese-gb2312:-*-*-medium-r-normal-*-24-*-gb2312*-*\n"

#. type: Plain text
#: original_texis/display.texi:3442
msgid "Then, the font specifications for all but Chinese GB2312 characters have @samp{fixed} in the @var{family} field, and the font specification for Chinese GB2312 characters has a wild card @samp{*} in the @var{family} field."
msgstr "この場合にはChinese GB2312以外のすべての文にたいするフォントspecは@var{family}フィールドに@samp{fixed}をもち、Chinese GB2312にたいするフォントspecは@var{family}フィールドにワイルドカード@samp{*}をもちます。"

#. type: defun
#: original_texis/display.texi:3443
#, no-wrap
msgid "set-fontset-font name character font-spec &optional frame add"
msgstr "set-fontset-font name character font-spec &optional frame add"

#. type: defun
#: original_texis/display.texi:3446
msgid "This function modifies the existing fontset @var{name} to use the font matching with @var{font-spec} for the specified @var{character}."
msgstr "この関数は指定された@var{character}にたいして、@var{font-spec}のフォントマッチングを使用するように既存のフォントセット@var{name}を変更する。"

#. type: defun
#: original_texis/display.texi:3450
msgid "If @var{name} is @code{nil}, this function modifies the fontset of the selected frame or that of @var{frame} if @var{frame} is not @code{nil}."
msgstr "@var{name}が@code{nil}ならこの関数は@var{frame}のフォントセット、@var{frame}が@code{nil}なら選択されたフレームのフォントセットを変更する。"

#. type: defun
#: original_texis/display.texi:3453
msgid "If @var{name} is @code{t}, this function modifies the default fontset, whose short name is @samp{fontset-default}."
msgstr "@var{name}が@code{t}ならこの関数はshort名が@samp{fontset-default}であるようなデフォルトフォントセットを変更する。"

#. type: defun
#: original_texis/display.texi:3458
msgid "In addition to specifying a single codepoint, @var{character} may be a cons @code{(@var{from} . @var{to})}, where @var{from} and @var{to} are character codepoints.  In that case, use @var{font-spec} for all the characters in the range @var{from} and @var{to} (inclusive)."
msgstr "@var{character}には@code{(@var{from} . @var{to})}のようなコンスを指定できる。ここで@var{from}と@var{to}は文字コードポイント。この場合には範囲@var{from}から@var{to} (両端を含む)までのすべての文字にたいして@var{font-spec}を使用する。"

#. type: defun
#: original_texis/display.texi:3461
msgid "@var{character} may be a charset.  In that case, use @var{font-spec} for all character in the charsets."
msgstr "@var{character}には文字セットも指定できる。この場合にはその文字セット内のすべての文字にたいして@var{font-spec}を使用する。"

#. type: defun
#: original_texis/display.texi:3464
msgid "@var{character} may be a script name.  In that case, use @var{font-spec} for all character in the charsets."
msgstr "@var{character}にはスクリプト名も指定できる。この場合にはその文字セット内のすべての文字にたいして@var{font-spec}を使用する。"

#. type: defun
#: original_texis/display.texi:3467
msgid "@var{font-spec} may be a font-spec object created by the function @code{font-spec} (@pxref{Low-Level Font})."
msgstr "@var{font-spec}は関数@code{font-spec}が作成したfont-specオブジェクトかもしれない(@ref{Low-Level Font}を参照)。"

#. type: defun
#: original_texis/display.texi:3472
msgid "@var{font-spec} may be a cons; @code{(@var{family} . @var{registry})}, where @var{family} is a family name of a font (possibly including a foundry name at the head), @var{registry} is a registry name of a font (possibly including an encoding name at the tail)."
msgstr "@var{font-spec}にはコンス@code{(@var{family} . @var{registry})}を指定できる。ここで@var{family}はフォントのファミリー名(先頭にfoundry名が含まれるかもしれない)、@var{registry}はフォントのレジストリー名(末尾にエンコーディング名が含まれるかもしれない)。"

#. type: defun
#: original_texis/display.texi:3474
msgid "@var{font-spec} may be a font name string."
msgstr "@var{font-spec}にはフォント名文字列も指定できる。"

#. type: defun
#: original_texis/display.texi:3480
msgid "@var{font-spec} may be @code{nil}, which explicitly specifies that there's no font for the specified @var{character}.  This is useful, for example, to avoid expensive system-wide search for fonts for characters that have no glyphs, like those from the Unicode Private Use Area (PUA)."
msgstr "@var{font-spec}には、指定された@var{character}にたいするフォントが存在しないことを明示的に指定する@code{nil}を指定できる。これはたとえばUnicodeのPUA(Private Use Area)由来のようなグリフをもたない文字のフォントにたいするシステムワイドの高価な検索を避けるために有用。"

#. type: defun
#: original_texis/display.texi:3486
msgid "The optional argument @var{add}, if non-@code{nil}, specifies how to add @var{font-spec} to the font specifications previously set.  If it is @code{prepend}, @var{font-spec} is prepended.  If it is @code{append}, @var{font-spec} is appended.  By default, @var{font-spec} overrides the previous settings."
msgstr "オプション引数@var{add}が非@code{nil}なら以前セットされたフォントspecに@var{font-spec}を追加する方法を指定する。@code{prepend}なら@var{font-spec}は先頭、@code{append}なら@var{font-spec}は末尾に追加される。デフォルトでは@var{font-spec}は以前のセッティングをオーバーライドする。"

#. type: defun
#: original_texis/display.texi:3490
msgid "For instance, this changes the default fontset to use a font of which family name is @samp{Kochi Gothic} for all characters belonging to the charset @code{japanese-jisx0208}."
msgstr "たとえば以下は文字セット@code{japanese-jisx0208}に属するすえての文字にたいして、ファミリー名が@samp{Kochi Gothic}であるようなフォントを使用するようにデフォルトフォントセットを変更する。"

#. type: smallexample
#: original_texis/display.texi:3494
#, no-wrap
msgid ""
"(set-fontset-font t 'japanese-jisx0208\n"
"                  (font-spec :family \"Kochi Gothic\"))\n"
msgstr ""
"(set-fontset-font t 'japanese-jisx0208\n"
"                  (font-spec :family \"Kochi Gothic\"))\n"

#. type: defun
#: original_texis/display.texi:3497
#, no-wrap
msgid "char-displayable-p char"
msgstr "char-displayable-p char"

#. type: defun
#: original_texis/display.texi:3501
msgid "This function returns @code{t} if Emacs ought to be able to display @var{char}.  More precisely, if the selected frame's fontset has a font to display the character set that @var{char} belongs to."
msgstr "この関数はEmacsが@var{char}を表示できるようなら@code{t}をリターンする。より正確には選択されたフレームのフォントセットが、@var{char}が属する文字セットを表示するためのフォントをもてば@code{t}をリターンする。"

#. type: defun
#: original_texis/display.texi:3504
msgid "Fontsets can specify a font on a per-character basis; when the fontset does that, this function's value may not be accurate."
msgstr "フォントセットは文字単位でフォントを指定できる。フォントセットがこれを行う場合には、この関数の値は正確ではないかもしれない。"

#. type: subsection
#: original_texis/display.texi:3507
#, no-wrap
msgid "Low-Level Font Representation"
msgstr "Low-Level Font Representation"

#. type: cindex
#: original_texis/display.texi:3508
#, no-wrap
msgid "font property"
msgstr "font property"

#. type: Plain text
#: original_texis/display.texi:3512
msgid "Normally, it is not necessary to manipulate fonts directly.  In case you need to do so, this section explains how."
msgstr "通常はフォントを直接扱う必要はありません。これを行う必要がある場合にはこのセクションでその方法を説明します。"

#. type: Plain text
#: original_texis/display.texi:3516
msgid "In Emacs Lisp, fonts are represented using three different Lisp object types: @dfn{font objects}, @dfn{font specs}, and @dfn{font entities}."
msgstr "Emacs Lispではフォントは@dfn{フォントオブジェクト(font objects)}、@dfn{フォントspec(font specs)}、@dfn{フォントエンティティー(font entities)}という3つの異なるLispオブジェクトを使用して表現されます。"

#. type: defun
#: original_texis/display.texi:3517
#, no-wrap
msgid "fontp object &optional type"
msgstr "fontp object &optional type"

#. type: defun
#: original_texis/display.texi:3520
msgid "Return @code{t} if @var{object} is a font object, font spec, or font entity.  Otherwise, return @code{nil}."
msgstr "@var{object}がフォントオブジェクト、フォントspec、フォントエンティティーなら@code{t}、それ以外なら@code{nil}をリターンする。"

#. type: defun
#: original_texis/display.texi:3525
msgid "The optional argument @var{type}, if non-@code{nil}, determines the exact type of Lisp object to check for.  In that case, @var{type} should be one of @code{font-object}, @code{font-spec}, or @code{font-entity}."
msgstr "オプション引数@var{type}が非@code{nil}なら、チェックするLispオブジェクトの正確なタイプを決定する。この場合には@var{type}は@code{font-object}、@code{font-spec}、@code{font-entity}のいずれかであること。"

#. type: cindex
#: original_texis/display.texi:3527
#, no-wrap
msgid "font object"
msgstr "font object"

#. type: Plain text
#: original_texis/display.texi:3531
msgid "A font object is a Lisp object that represents a font that Emacs has @dfn{opened}.  Font objects cannot be modified in Lisp, but they can be inspected."
msgstr "フォントオブジェクトはEmacsが@dfn{オープンした}フォントを表します。Lispでフォントオブジェクトは変更できませんが調べることはできます。"

#. type: defun
#: original_texis/display.texi:3532
#, no-wrap
msgid "font-at position &optional window string"
msgstr "font-at position &optional window string"

#. type: defun
#: original_texis/display.texi:3539
msgid "Return the font object that is being used to display the character at position @var{position} in the window @var{window}.  If @var{window} is @code{nil}, it defaults to the selected window.  If @var{string} is @code{nil}, @var{position} specifies a position in the current buffer; otherwise, @var{string} should be a string, and @var{position} specifies a position in that string."
msgstr "ウィンドウ@var{window}内の位置@var{position}にある文字を表示するために使用されているフォントオブジェクトをリターンする。@var{window}が@code{nil}の場合のデフォルトは選択されたウィンドウ。@var{string}が@code{nil}なら@var{position}はカレントバッファー内の位置を指定する。それ以外なら@var{string}は文字列、@var{position}はその文字列内での位置を指定すること。"

#. type: cindex
#: original_texis/display.texi:3541
#, no-wrap
msgid "font spec"
msgstr "font spec"

#. type: Plain text
#: original_texis/display.texi:3545
msgid "A font spec is a Lisp object that contains a set of specifications that can be used to find a font.  More than one font may match the specifications in a font spec."
msgstr "フォントspecはフォントを探すために使用できる仕様セットを含むLispオブジェクトです。フォントspec内の仕様にたいして1つ以上のフォントがマッチすることができます。"

#. type: defun
#: original_texis/display.texi:3546
#, no-wrap
msgid "font-spec &rest arguments"
msgstr "font-spec &rest arguments"

#. type: defun
#: original_texis/display.texi:3550
msgid "Return a new font spec using the specifications in @var{arguments}, which should come in @code{property}-@code{value} pairs.  The possible specifications are as follows:"
msgstr "@var{arguments}内の仕様を使用して新たなフォントspecをリターンする。これは@code{property}-@code{value}のペアーであること。可能な仕様は以下のとおり:"

#. type: item
#: original_texis/display.texi:3552
#, no-wrap
msgid ":name"
msgstr ":name"

#. type: table
#: original_texis/display.texi:3555
msgid "The font name (a string), in either XLFD, Fontconfig, or GTK+ format.  @xref{Fonts,,, emacs, The GNU Emacs Manual}."
msgstr "XLFD、Fontconfig、GTK+いずれかのフォーマットによるフォント名(文字列)。@ref{Fonts,,, emacs, The GNU Emacs Manual}を参照のこと。"

#. type: table
#: original_texis/display.texi:3563
msgid "These have the same meanings as the face attributes of the same name.  @xref{Face Attributes}."
msgstr "これらは同名のフェイス属性と同じ意味をもつ。@ref{Face Attributes}を参照のこと。"

#. type: item
#: original_texis/display.texi:3564
#, no-wrap
msgid ":size"
msgstr ":size"

#. type: table
#: original_texis/display.texi:3567
msgid "The font size---either a non-negative integer that specifies the pixel size, or a floating-point number that specifies the point size."
msgstr "フォントサイズ。非負の整数はピクセル単位、浮動小数点数ならポイントサイズを指定する。"

#. type: item
#: original_texis/display.texi:3568
#, no-wrap
msgid ":adstyle"
msgstr ":adstyle"

#. type: table
#: original_texis/display.texi:3571
msgid "Additional typographic style information for the font, such as @samp{sans}.  The value should be a string or a symbol."
msgstr "@samp{sans}のような、そのフォントにたいするタイポグラフィックスタイル(typographic style)の追加情報。値は文字列かシンボルであること。"

#. type: cindex
#: original_texis/display.texi:3572
#, no-wrap
msgid "font registry"
msgstr "font registry"

#. type: item
#: original_texis/display.texi:3573
#, no-wrap
msgid ":registry"
msgstr ":registry"

#. type: table
#: original_texis/display.texi:3576
msgid "The charset registry and encoding of the font, such as @samp{iso8859-1}.  The value should be a string or a symbol."
msgstr "@samp{iso8859-1}のようなフォントの文字セットレジストリーとエンコーディング。値は文字列かシンボルであること。"

#. type: item
#: original_texis/display.texi:3577
#, no-wrap
msgid ":script"
msgstr ":script"

#. type: table
#: original_texis/display.texi:3579
msgid "The script that the font must support (a symbol)."
msgstr "そのフォントがサポートしなければならないスクリプト(シンボル)。"

#. type: item
#: original_texis/display.texi:3580
#, no-wrap
msgid ":lang"
msgstr ":lang"

#. type: table
#: original_texis/display.texi:3588
msgid "The language that the font should support.  The value should be a symbol whose name is a two-letter ISO-639 language name.  On X, the value is matched against the ``Additional Style'' field of the XLFD name of a font, if it is non-empty.  On MS-Windows, fonts matching the spec are required to support codepages needed for the language.  Currently, only a small set of CJK languages is supported with this property: @samp{ja}, @samp{ko}, and @samp{zh}."
msgstr "そのフォントがサポートするべき言語。値は名前が2文字のISO-639言語名であるようなシンボルであること。Xでは値は(もし空でなければ)フォントのXLFD名の``Additional Style''フィールドにたいしてマッチされる。MS-Windowsではそのspecにマッチするフォントにはその言語にたいして必要なコードページのサポートが要求される。現在のところこのプロパティでは@samp{ja}、@samp{ko}、@samp{zh}というCJK言語の小セットだけがサポートされる。"

#. type: item
#: original_texis/display.texi:3589
#, no-wrap
msgid ":otf"
msgstr ":otf"

#. type: cindex
#: original_texis/display.texi:3590
#, no-wrap
msgid "OpenType font"
msgstr "OpenType font"

#. type: table
#: original_texis/display.texi:3595
msgid "The font must be an OpenType font that supports these OpenType features, provided Emacs is compiled with a library, such as @samp{libotf} on GNU/Linux, that supports complex text layout for scripts which need that.  The value must be a list of the form"
msgstr "複雑なテキストレイアウトを必要とするスクリプトをサポートするGNU/Linux上の@samp{libotf}のようなライブラリーとともにEmacsがコンパイルされているような場合には、そのフォントはそれらのOpenType機能をサポートするOpenTypeフォントでなければならない。値は以下の形式のリストでなければならない"

#. type: smallexample
#: original_texis/display.texi:3598
#, no-wrap
msgid "@code{(@var{script-tag} @var{langsys-tag} @var{gsub} @var{gpos})}\n"
msgstr "@code{(@var{script-tag} @var{langsys-tag} @var{gsub} @var{gpos})}\n"

#. type: table
#: original_texis/display.texi:3609
msgid "where @var{script-tag} is the OpenType script tag symbol; @var{langsys-tag} is the OpenType language system tag symbol, or @code{nil} to use the default language system; @code{gsub} is a list of OpenType GSUB feature tag symbols, or @code{nil} if none is required; and @code{gpos} is a list of OpenType GPOS feature tag symbols, or @code{nil} if none is required.  If @code{gsub} or @code{gpos} is a list, a @code{nil} element in that list means that the font must not match any of the remaining tag symbols.  The @code{gpos} element may be omitted."
msgstr "ここで@var{script-tag}はOpenTypeスクリプトタグシンボル、@var{langsys-tag}はOpenType言語システムタグシンボル(@code{nil}ならデフォルト言語システムを使用)、@code{gsub}はOpenType GSUB機能タグシンボル(何も要求されなければ@code{nil})、@code{gpos}はOpenType GPOS機能タグシンボルのリスト(何も要求されなければ@code{nil})。@code{gsub}や@code{gpos}がリストなら、そのリスト内の@code{nil}要素は、そのフォントが残りすべてのタグシンボルにマッチしてはならないことを意味する。@code{gpos}は省略可。"

#. type: defun
#: original_texis/display.texi:3612
#, no-wrap
msgid "font-put font-spec property value"
msgstr "font-put font-spec property value"

#. type: defun
#: original_texis/display.texi:3615
msgid "Set the font property @var{property} in the font-spec @var{font-spec} to @var{value}."
msgstr "フォントspec @var{font-spec}内のプロパティ@var{property}に@var{value}をセットする。"

#. type: cindex
#: original_texis/display.texi:3617
#, no-wrap
msgid "font entity"
msgstr "font entity"

#. type: Plain text
#: original_texis/display.texi:3625
msgid "A font entity is a reference to a font that need not be open.  Its properties are intermediate between a font object and a font spec: like a font object, and unlike a font spec, it refers to a single, specific font.  Unlike a font object, creating a font entity does not load the contents of that font into computer memory.  Emacs may open multiple font objects of different sizes from a single font entity referring to a scalable font."
msgstr "フォントエンティティーはオープンする必要がないフォントへの参照です。フォントオブジェクトとフォントspecの中間的な性質をもちフォントspecとは異なり、フォントオブジェクトと同じように単一かつ特定のフォントを参照します。フォントオブジェクトとは異なりフォントエンティティーの作成では、そのフォントのコンテンツはコンピューターへのメモリーにロードされません。Emacsはスケーラブルフォントを参照するために単一のフォントエンティティーから複数の異なるサイズのフォントオブジェクトをオープンするかもしれません。"

#. type: defun
#: original_texis/display.texi:3626
#, no-wrap
msgid "find-font font-spec &optional frame"
msgstr "find-font font-spec &optional frame"

#. type: defun
#: original_texis/display.texi:3630
msgid "This function returns a font entity that best matches the font spec @var{font-spec} on frame @var{frame}.  If @var{frame} is @code{nil}, it defaults to the selected frame."
msgstr "この関数はフレーム@var{frame}上のフォントspec @var{font-spec}にもっともマッチするフォントエンティティーをリターンする。@var{frame}が@code{nil}の場合のデフォルトは選択されたフレーム。"

#. type: defun
#: original_texis/display.texi:3632
#, no-wrap
msgid "list-fonts font-spec &optional frame num prefer"
msgstr "list-fonts font-spec &optional frame num prefer"

#. type: defun
#: original_texis/display.texi:3635
msgid "This function returns a list of all font entities that match the font spec @var{font-spec}."
msgstr "この関数はフォントspec @var{font-spec}にマッチするすべてのフォントエンティティーのリストをリターンする。"

#. type: defun
#: original_texis/display.texi:3644
msgid "The optional argument @var{frame}, if non-@code{nil}, specifies the frame on which the fonts are to be displayed.  The optional argument @var{num}, if non-@code{nil}, should be an integer that specifies the maximum length of the returned list.  The optional argument @var{prefer}, if non-@code{nil}, should be another font spec, which is used to control the order of the returned list; the returned font entities are sorted in order of decreasing closeness to that font spec."
msgstr "オプション引数@var{frame}が非@code{nil}なら、そのフォントが表示されるフレームを指定する。オプション引数@var{num}が非@code{nil}なら、それはリターンされるリストの最大長を指定する整数だること。オプション引数@var{prefer}が非@code{nil}なら、それはリターンされるリスト順を制御するために使用する別のフォントspecであること。リターンされるフォントspecはそのフォントspecにもっとも近い降順にソートされて格納される。"

#. type: Plain text
#: original_texis/display.texi:3651
msgid "If you call @code{set-face-attribute} and pass a font spec, font entity, or font name string as the value of the @code{:font} attribute, Emacs opens the best matching font that is available for display.  It then stores the corresponding font object as the actual value of the @code{:font} attribute for that face."
msgstr "@code{:font}属性の値としてフォントspec、フォントエンティティー、フォント名文字列を渡して@code{set-face-attribute}を呼び出すと、Emacsは表示に利用可能なもっともマッチするフォントをオープンします。そしてそのフェイスにたいする@code{:font}属性の実際の値として、対応するフォントオブジェクトを格納します。"

#. type: Plain text
#: original_texis/display.texi:3655
msgid "The following functions can be used to obtain information about a font.  For these functions, the @var{font} argument can be a font object, a font entity, or a font spec."
msgstr "以下の関数はフォントに関する情報を取得するために使用できます。これらの関数の@var{font}引数にはフォントオブジェクト、フォントエンティティー、またはフォントspecを指定できます。"

#. type: defun
#: original_texis/display.texi:3656
#, no-wrap
msgid "font-get font property"
msgstr "font-get font property"

#. type: defun
#: original_texis/display.texi:3659
msgid "This function returns the value of the font property @var{property} for @var{font}."
msgstr "この関数は@var{font}にたいするフォントプロパティ@var{property}の値をリターンする。"

#. type: defun
#: original_texis/display.texi:3664
msgid "If @var{font} is a font spec and the font spec does not specify @var{property}, the return value is @code{nil}.  If @var{font} is a font object or font entity, the value for the @var{:script} property may be a list of scripts supported by the font."
msgstr "@var{font}がフォントspecであり、そのフォントspecが@var{property}を指定しなければリターン値は@code{nil}。@var{font}がフォントオブジェクトかフォントエンティティーなら、@var{:script}プロパティにたいする値はそのフォントがサポートするスクリプトのリストかもしれない。"

#. type: defun
#: original_texis/display.texi:3666
#, no-wrap
msgid "font-face-attributes font &optional frame"
msgstr "font-face-attributes font &optional frame"

#. type: defun
#: original_texis/display.texi:3671
msgid "This function returns a list of face attributes corresponding to @var{font}.  The optional argument @var{frame} specifies the frame on which the font is to be displayed.  If it is @code{nil}, the selected frame is used.  The return value has the form"
msgstr "この関数は@var{font}に対応するフェイス属性のリストをリターンする。オプション引数@var{frame}はフォントが表示されるフレームを指定する。これが@code{nil}なら選択されたフレームが使用される。リターン値は以下の形式"

#. type: smallexample
#: original_texis/display.texi:3675
#, no-wrap
msgid ""
"(:family @var{family} :height @var{height} :weight @var{weight}\n"
"   :slant @var{slant} :width @var{width})\n"
msgstr ""
"(:family @var{family} :height @var{height} :weight @var{weight}\n"
"   :slant @var{slant} :width @var{width})\n"

#. type: defun
#: original_texis/display.texi:3681
msgid "where the values of @var{family}, @var{height}, @var{weight}, @var{slant}, and @var{width} are face attribute values.  Some of these key-attribute pairs may be omitted from the list if they are not specified by @var{font}."
msgstr "ここで@var{family}、@var{height}、@var{weight}、@var{slant}、@var{width}の値はフェイス属性の値。@var{font}により指定されない場合には、いくつかのキー/属性ペアーはこのリストから省略されるかもしれない。"

#. type: defun
#: original_texis/display.texi:3683
#, no-wrap
msgid "font-xlfd-name font &optional fold-wildcards"
msgstr "font-xlfd-name font &optional fold-wildcards"

#. type: defun
#: original_texis/display.texi:3688
msgid "This function returns the XLFD (X Logical Font Descriptor), a string, matching @var{font}.  @xref{Fonts,,, emacs, The GNU Emacs Manual}, for information about XLFDs.  If the name is too long for an XLFD (which can contain at most 255 characters), the function returns @code{nil}."
msgstr "この関数は@var{font}にマッチするXLFD((X Logical Font Descriptor))を文字列としてリターンする。XLFDに関する情報は@ref{Fonts,,, emacs, The GNU Emacs Manual}を参照のこと。その名前がXLFD(最大255文字を含むことが可能)にたいして長すぎれば、この関数は@code{nil}をリターンする。"

#. type: defun
#: original_texis/display.texi:3691
msgid "If the optional argument @var{fold-wildcards} is non-@code{nil}, consecutive wildcards in the XLFD are folded into one."
msgstr "オプション引数@var{fold-wildcards}が非@code{nil}なら連続するワイルドカードは1つにまとめられる。"

#. type: Plain text
#: original_texis/display.texi:3694
msgid "The following two functions return important information about a font."
msgstr "以下の2つの関数はフォントに関して重要な情報をリターンします。"

#. type: defun
#: original_texis/display.texi:3695
#, no-wrap
msgid "font-info name &optional frame"
msgstr "font-info name &optional frame"

#. type: defun
#: original_texis/display.texi:3699
msgid "This function returns information about a font specified by its @var{name}, a string, as it is used on @var{frame}.  If @var{frame} is omitted or @code{nil}, it defaults to the selected frame."
msgstr "この関数は@var{frame}で使用されるような文字列@var{name}で指定されたフォントに関する情報をリターンする。@var{frame}が省略か@code{nil}の場合のデフォルトは選択されたフレーム。"

#. type: defun
#: original_texis/display.texi:3706
msgid "The value returned by the function is a vector of the form @code{[@var{opened-name} @var{full-name} @var{size} @var{height} @var{baseline-offset} @var{relative-compose} @var{default-ascent} @var{max-width} @var{ascent} @var{descent} @var{space-width} @var{average-width} @var{filename} @var{capability}]}.  Here's the description of each components of this vector:"
msgstr "この関数は@code{[@var{opened-name} @var{full-name} @var{size} @var{height} @var{baseline-offset} @var{relative-compose} @var{default-ascent} @var{max-width} @var{ascent} @var{descent} @var{space-width} @var{average-width} @var{filename} @var{capability}]}という形式のベクターによる値をリターンする。以下はこのベクターの各コンポーネントの意味:"

#. type: item
#: original_texis/display.texi:3708
#, no-wrap
msgid "opened-name"
msgstr "opened-name"

#. type: table
#: original_texis/display.texi:3710
msgid "The name used to open the font, a string."
msgstr "フォントのオープンに使用された名前(文字列)。"

#. type: item
#: original_texis/display.texi:3711
#, no-wrap
msgid "full-name"
msgstr "full-name"

#. type: table
#: original_texis/display.texi:3713
msgid "The full name of the font, a string."
msgstr "フォントの完全名(文字列)。"

#. type: item
#: original_texis/display.texi:3714
#, no-wrap
msgid "size"
msgstr "size"

#. type: table
#: original_texis/display.texi:3716
msgid "The pixel size of the font."
msgstr "フォントのピクセルサイズ。"

#. type: item
#: original_texis/display.texi:3717
#, no-wrap
msgid "height"
msgstr "height"

#. type: table
#: original_texis/display.texi:3719
msgid "The height of the font in pixels."
msgstr "フォント高さ(ピクセル単位)。"

#. type: item
#: original_texis/display.texi:3720
#, no-wrap
msgid "baseline-offset"
msgstr "baseline-offset"

#. type: table
#: original_texis/display.texi:3723
msgid "The offset in pixels from the @acronym{ASCII} baseline, positive upward."
msgstr "@acronym{ASCII}ベースラインからのピクセル単位のオフセット(上方が正)。"

#. type: item
#: original_texis/display.texi:3724
#, no-wrap
msgid "relative-compose"
msgstr "relative-compose"

#. type: itemx
#: original_texis/display.texi:3725
#, no-wrap
msgid "default-ascent"
msgstr "default-ascent"

#. type: table
#: original_texis/display.texi:3727
msgid "Numbers controlling how to compose characters."
msgstr "文字の組み合わせ(compose)の方式を制御する数値。"

#. type: item
#: original_texis/display.texi:3728 original_texis/display.texi:3784
#, no-wrap
msgid "ascent"
msgstr "ascent"

#. type: itemx
#: original_texis/display.texi:3729 original_texis/display.texi:3785
#, no-wrap
msgid "descent"
msgstr "descent"

#. type: table
#: original_texis/display.texi:3732
msgid "The ascent and descent of this font.  The sum of these two numbers should be equal to the value of @var{height} above."
msgstr "このフォントのアセント(ascent)とディセント(descent)。これら2つの数値の合計は上述の@var{height}と等しくなること。"

#. type: item
#: original_texis/display.texi:3733 original_texis/display.texi:3789
#, no-wrap
msgid "space-width"
msgstr "space-width"

#. type: table
#: original_texis/display.texi:3735 original_texis/display.texi:3791
msgid "The width, in pixels, of the font's space character."
msgstr "そのフォントのスペース文字の幅(ピクセル単位)。"

#. type: item
#: original_texis/display.texi:3736 original_texis/display.texi:3792
#, no-wrap
msgid "average-width"
msgstr "average-width"

#. type: table
#: original_texis/display.texi:3740 original_texis/display.texi:3796
msgid "The average width of the font characters.  If this is zero, Emacs uses the value of @var{space-width} instead, when it calculates text layout on display."
msgstr "そのフォントの文字の平均幅。これが0ならEmacsは表示のテキストレイアウト計算時にかわりに@var{space-width}の値を使用する。"

#. type: item
#: original_texis/display.texi:3741 original_texis/display.texi:3774
#, no-wrap
msgid "filename"
msgstr "filename"

#. type: table
#: original_texis/display.texi:3744 original_texis/display.texi:3777
msgid "The file name of the font as a string.  This can be @code{nil} if the font back-end does not provide a way to find out the font's file name."
msgstr "フォントのファイル名(文字列)。フォントのバックエンドがフォントのファイル名を見つける手段を提供しなければ@code{nil}もあり得る。"

#. type: item
#: original_texis/display.texi:3745 original_texis/display.texi:3797
#, no-wrap
msgid "capability"
msgstr "capability"

#. type: table
#: original_texis/display.texi:3756 original_texis/display.texi:3808
msgid "A list whose first element is a symbol representing the font type, one of @code{x}, @code{opentype}, @code{truetype}, @code{type1}, @code{pcf}, or @code{bdf}.  For OpenType fonts, the list includes 2 additional elements describing the @sc{gsub} and @sc{gpos} features supported by the font.  Each of these elements is a list of the form @code{((@var{script} (@var{langsys} @var{feature} @dots{}) @dots{})  @dots{})}, where @var{script} is a symbol representing an OpenType script tag, @var{langsys} is a symbol representing an OpenType langsys tag (or @code{nil}, which stands for the default langsys), and each @var{feature} is a symbol representing an OpenType feature tag."
msgstr "最初の要素がフォントタイプを表す@code{x}、@code{opentype}、@code{truetype}、@code{type1}、@code{pcf}、@code{bdf}のいずれかのシンボルであるようなリスト。OpenTypeフォントでは、フォントによりサポートされる機能@sc{gsub}と@sc{gpos}の2つの要素が含まれる。これらの要素はそれぞれ@code{((@var{script} (@var{langsys} @var{feature} @dots{}) @dots{})  @dots{})}という形式のリストであり、ここで@var{script}はOpenTypeのscriptタグを表すシンボル、@var{langsys}はOpenTypeのlangsysタグを表すシンボル(またはデフォルトのlangsysを表す@code{nil})、そよび@var{feature}はそれぞれOpenTypeのfeatureタグを表す。"

#. type: defun
#: original_texis/display.texi:3759
#, no-wrap
msgid "query-font font-object"
msgstr "query-font font-object"

#. type: defun
#: original_texis/display.texi:3763
msgid "This function returns information about a @var{font-object}.  (This is in contrast to @code{font-info}, which takes the font name, a string, as its argument.)"
msgstr "この関数は@var{font-object}に関する情報をリターンする(これは引数としてフォント名を文字列で受け取る@code{font-info}とは対照的)。"

#. type: defun
#: original_texis/display.texi:3769
msgid "The value returned by the function is a vector of the form @code{[@var{name} @var{filename} @var{pixel-size} @var{max-width} @var{ascent} @var{descent} @var{space-width} @var{average-width} @var{capability}]}.  Here's the description of each components of this vector:"
msgstr "この関数は@code{[@var{name} @var{filename} @var{pixel-size} @var{max-width} @var{ascent} @var{descent} @var{space-width} @var{average-width} @var{capability}]}という形式のベクターで値をリターンする。以下はこのベクターの各要素の意味:"

#. type: item
#: original_texis/display.texi:3771
#, no-wrap
msgid "name"
msgstr "name"

#. type: table
#: original_texis/display.texi:3773
msgid "The font name, a string."
msgstr "フォント名(文字列)。"

#. type: item
#: original_texis/display.texi:3778
#, no-wrap
msgid "pixel-size"
msgstr "pixel-size"

#. type: table
#: original_texis/display.texi:3780
msgid "The pixel size of the font used to open the font."
msgstr "フォントをオープンするために使用されたフォントのピクセルサイズ。"

#. type: item
#: original_texis/display.texi:3781
#, no-wrap
msgid "max-width"
msgstr "max-width"

#. type: table
#: original_texis/display.texi:3783
msgid "The maximum advance width of the font."
msgstr "フォントの最大のアドバンス幅。"

#. type: table
#: original_texis/display.texi:3788
msgid "The ascent and descent of this font.  The sum of these two numbers gives the font height."
msgstr "このフォントのアセント(ascent)とディセント(descent)。これら2つの数値の合計はフォントの高さを与える。"

#. type: cindex
#: original_texis/display.texi:3811
#, no-wrap
msgid "font information for layout"
msgstr "font information for layout"

#. type: Plain text
#: original_texis/display.texi:3817
msgid "The following four functions return size information about fonts used by various faces, allowing various layout considerations in Lisp programs.  These functions take face remapping into consideration, returning information about the remapped face, if the face in question was remapped.  @xref{Face Remapping}."
msgstr "以下の4つの関数はさまざまなフェイスにより使用されるフォントに関するサイズ情報をリターンして、Lispプログラム内でのさまざまなレイアウトの検討を可能にします。これらの関数は問い合わせられたフェイスがリマップされていたら、リマップされたフェイスに関する情報をリターンすることによりフェイスのシマップを考慮します。@ref{Face Remapping}を参照してください。"

#. type: defun
#: original_texis/display.texi:3818
#, no-wrap
msgid "default-font-width"
msgstr "default-font-width"

#. type: defun
#: original_texis/display.texi:3821
msgid "This function returns the average width in pixels of the font used by the current buffer's default face."
msgstr "この関数はカレントバッファーのデフォルトフェイスで使用されるフォントの平均幅をピクセル単位でリターンする。"

#. type: defun
#: original_texis/display.texi:3823
#, no-wrap
msgid "default-font-height"
msgstr "default-font-height"

#. type: defun
#: original_texis/display.texi:3826
msgid "This function returns the height in pixels of the font used by the current buffer's default face."
msgstr "この関数はカレントバッファーのデフォルトフェイスで使用されるフォントの高さをピクセル単位でリターンする。"

#. type: defun
#: original_texis/display.texi:3828
#, no-wrap
msgid "window-font-width &optional window face"
msgstr "window-font-width &optional window face"

#. type: defun
#: original_texis/display.texi:3834
msgid "This function returns the average width in pixels for the font used by @var{face} in @var{window}.  The specified @var{window} must be a live window.  If @code{nil} or omitted, @var{window} defaults to the selected window, and @var{face} defaults to the default face in @var{window}."
msgstr "この関数は@var{window}内の@var{face}で使用されるフォントの平均幅をピクセル単位でリターンする。@var{window}には生きたウィンドウを指定しなければならない。@code{nil}か省略なら@var{window}のデフォルトは選択されたウィンドウ、@var{face}のデフォルトは@var{window}内のデフォルトフェイス。"

#. type: defun
#: original_texis/display.texi:3836
#, no-wrap
msgid "window-font-height &optional window face"
msgstr "window-font-height &optional window face"

#. type: defun
#: original_texis/display.texi:3842
msgid "This function returns the height in pixels for the font used by @var{face} in @var{window}.  The specified @var{window} must be a live window.  If @code{nil} or omitted, @var{window} defaults to the selected window, and @var{face} defaults to the default face in @var{window}."
msgstr "この関数は@var{window}内の@var{face}で使用されるフォントの高さをピクセル単位でリターンする。@var{window}には生きたウィンドウを指定しなければならない。@code{nil}か省略なら@var{window}のデフォルトは選択されたウィンドウ、@var{face}のデフォルトは@var{window}内のデフォルトフェイス。"

#. type: cindex
#: original_texis/display.texi:3846
#, no-wrap
msgid "fringes"
msgstr "fringes"

#. type: Plain text
#: original_texis/display.texi:3851
msgid "On graphical displays, Emacs draws @dfn{fringes} next to each window: thin vertical strips down the sides which can display bitmaps indicating truncation, continuation, horizontal scrolling, and so on."
msgstr "グラフィカルなディスプレイではEmacsは各ウィンドウに隣接して@dfn{フリンジ(fringes)}を描画します。これは切り詰め(truncation)、継続(continuation)、水平スクロールを示すビットマップを表示できる側面の細い垂直ストリップです。"

#. type: node
#: original_texis/display.texi:3859 original_texis/display.texi:3861
#, no-wrap
msgid "Fringe Size/Pos"
msgstr "Fringe Size/Pos"

#. type: menuentry
#: original_texis/display.texi:3859
msgid "Specifying where to put the window fringes."
msgstr "ウィンドウフリンジの配置場所を指定する。"

#. type: subsection
#: original_texis/display.texi:3859 original_texis/display.texi:3920
#: original_texis/display.texi:3921
#, no-wrap
msgid "Fringe Indicators"
msgstr "Fringe Indicators"

#. type: menuentry
#: original_texis/display.texi:3859
msgid "Displaying indicator icons in the window fringes."
msgstr "ウィンドウフリンジ内にインジケーターアイコンを表示する。"

#. type: subsection
#: original_texis/display.texi:3859 original_texis/display.texi:4028
#: original_texis/display.texi:4029
#, no-wrap
msgid "Fringe Cursors"
msgstr "Fringe Cursors"

#. type: menuentry
#: original_texis/display.texi:3859
msgid "Displaying cursors in the right fringe."
msgstr "右フリンジ内にカーソルを表示する。"

#. type: subsection
#: original_texis/display.texi:3859 original_texis/display.texi:4075
#: original_texis/display.texi:4076
#, no-wrap
msgid "Fringe Bitmaps"
msgstr "Fringe Bitmaps"

#. type: menuentry
#: original_texis/display.texi:3859
msgid "Specifying bitmaps for fringe indicators."
msgstr "フリンジインジケーターにたいしてビットマップを指定する。"

#. type: node
#: original_texis/display.texi:3859 original_texis/display.texi:4159
#, no-wrap
msgid "Customizing Bitmaps"
msgstr "Customizing Bitmaps"

#. type: menuentry
#: original_texis/display.texi:3859
msgid "Specifying your own bitmaps to use in the fringes."
msgstr "フリンジ内で使用する独自ビットマップの指定。"

#. type: node
#: original_texis/display.texi:3859 original_texis/display.texi:4206
#, no-wrap
msgid "Overlay Arrow"
msgstr "Overlay Arrow"

#. type: menuentry
#: original_texis/display.texi:3859
msgid "Display of an arrow to indicate position."
msgstr "位置を示す矢印の表示。"

#. type: subsection
#: original_texis/display.texi:3862
#, no-wrap
msgid "Fringe Size and Position"
msgstr "Fringe Size and Position"

#. type: Plain text
#: original_texis/display.texi:3866
msgid "The following buffer-local variables control the position and width of fringes in windows showing that buffer."
msgstr "以下のバッファーローカル変数はバッファーを表示するウィンドウのフリンジの位置と幅を制御します。"

#. type: defvar
#: original_texis/display.texi:3867
#, no-wrap
msgid "fringes-outside-margins"
msgstr "fringes-outside-margins"

#. type: defvar
#: original_texis/display.texi:3871
msgid "The fringes normally appear between the display margins and the window text.  If the value is non-@code{nil}, they appear outside the display margins.  @xref{Display Margins}."
msgstr "フリンジは通常はディスプレイマージンとウィンドウテキストの間に表示される。この値が非@code{nil}ならフリンジはディスプレイマージンの外側に表示される。@ref{Display Margins}を参照のこと。"

#. type: defvar
#: original_texis/display.texi:3873
#, no-wrap
msgid "left-fringe-width"
msgstr "left-fringe-width"

#. type: defvar
#: original_texis/display.texi:3877
msgid "This variable, if non-@code{nil}, specifies the width of the left fringe in pixels.  A value of @code{nil} means to use the left fringe width from the window's frame."
msgstr "この変数が非@code{nil}なら、それは左フリンジの幅をピクセル単位で指定する。値@code{nil}はそのウィンドウのフレームの左フリンジ幅を使用することを意味する。"

#. type: defvar
#: original_texis/display.texi:3879
#, no-wrap
msgid "right-fringe-width"
msgstr "right-fringe-width"

#. type: defvar
#: original_texis/display.texi:3883
msgid "This variable, if non-@code{nil}, specifies the width of the right fringe in pixels.  A value of @code{nil} means to use the right fringe width from the window's frame."
msgstr "この変数が非@code{nil}なら、それは右フリンジの幅をピクセル単位で指定する。値@code{nil}はそのウィンドウのフレームの右フリンジ幅を使用することを意味する。"

#. type: Plain text
#: original_texis/display.texi:3888
msgid "Any buffer which does not specify values for these variables uses the values specified by the @code{left-fringe} and @code{right-fringe} frame parameters (@pxref{Layout Parameters})."
msgstr "これらの変数にたいして値を指定しないすべてのバッファーは、フレームパラメーター@code{left-fringe}および@code{right-fringe}で指定された値を使用します(@ref{Layout Parameters}を参照)。"

#. type: Plain text
#: original_texis/display.texi:3896
msgid "The above variables actually take effect via the function @code{set-window-buffer} (@pxref{Buffers and Windows}), which calls @code{set-window-fringes} as a subroutine.  If you change one of these variables, the fringe display is not updated in existing windows showing the buffer, unless you call @code{set-window-buffer} again in each affected window.  You can also use @code{set-window-fringes} to control the fringe display in individual windows."
msgstr "上記の変数はサブルーチンとして@code{set-window-fringes}を呼び出す関数@code{set-window-buffer} (@ref{Buffers and Windows}を参照)を通じて実際に効果をもちます。これらの変数のいずれかを変更しても影響を受ける各ウィンドウで@code{set-window-buffer}を呼び出さなければ、そのバッファーを表示する既存のウィンドウのフリンジ表示は更新されません。個別のウィンドウでのフリンジ表示を制御するために@code{set-window-fringes}を使用することもできます。"

#. type: defun
#: original_texis/display.texi:3897
#, no-wrap
msgid "set-window-fringes window left &optional right outside-margins"
msgstr "set-window-fringes window left &optional right outside-margins"

#. type: defun
#: original_texis/display.texi:3900
msgid "This function sets the fringe widths of window @var{window}.  If @var{window} is @code{nil}, the selected window is used."
msgstr "この関数はウィンドウ@var{window}のフリンジ幅をセットする。@var{window}が@code{nil}なら選択されたウィンドウが使用される。"

#. type: defun
#: original_texis/display.texi:3906
msgid "The argument @var{left} specifies the width in pixels of the left fringe, and likewise @var{right} for the right fringe.  A value of @code{nil} for either one stands for the default width.  If @var{outside-margins} is non-@code{nil}, that specifies that fringes should appear outside of the display margins."
msgstr "引数@var{left}は左フリンジ、同様に@var{right}は右フリンジにたいしてピクセル単位で幅を指定する。いずれかにたいする値@code{nil}はデフォルトの幅を意味する。@var{outside-margins}が非@code{nil}ならフリンジをディスプレイマージンの外側に表示することを指定する。"

#. type: defun
#: original_texis/display.texi:3910 original_texis/display.texi:4331
#: original_texis/display.texi:4910
msgid "The values specified here may be later overridden by invoking @code{set-window-buffer} (@pxref{Buffers and Windows}) on @var{window} with its @var{keep-margins} argument @code{nil} or omitted."
msgstr "ここで指定した値は@var{window}にたいする引数@var{keep-margins}が@code{nil}か省略した@code{set-window-buffer} (@ref{Buffers and Windows}を参照)の呼び出しにより後からオーバーライドされるかもしれない。"

#. type: defun
#: original_texis/display.texi:3912
#, no-wrap
msgid "window-fringes &optional window"
msgstr "window-fringes &optional window"

#. type: defun
#: original_texis/display.texi:3917
msgid "This function returns information about the fringes of a window @var{window}.  If @var{window} is omitted or @code{nil}, the selected window is used.  The value has the form @code{(@var{left-width} @var{right-width} @var{outside-margins})}."
msgstr "この関数はウィンドウ@var{window}のフリンジに関する情報をリターンする。@var{window}が省略か@code{nil}なら選択されたウィンドウが使用される。値は@code{(@var{left-width} @var{right-width} @var{outside-margins})}という形式。"

#. type: cindex
#: original_texis/display.texi:3922
#, no-wrap
msgid "fringe indicators"
msgstr "fringe indicators"

#. type: cindex
#: original_texis/display.texi:3923
#, no-wrap
msgid "indicators, fringe"
msgstr "indicators, fringe"

#. type: Plain text
#: original_texis/display.texi:3928
msgid "@dfn{Fringe indicators} are tiny icons displayed in the window fringe to indicate truncated or continued lines, buffer boundaries, etc."
msgstr "@dfn{フリンジインジケーター(Fringe indicators)}は行の切り詰めや継続、バッファー境界などを示すウィンドウフリンジ内に表示される小さいアイコンのことです。"

#. type: defopt
#: original_texis/display.texi:3929
#, no-wrap
msgid "indicate-empty-lines"
msgstr "indicate-empty-lines"

#. type: cindex
#: original_texis/display.texi:3930
#, no-wrap
msgid "fringes, and empty line indication"
msgstr "fringes, and empty line indication"

#. type: cindex
#: original_texis/display.texi:3931
#, no-wrap
msgid "empty lines, indicating"
msgstr "empty lines, indicating"

#. type: defopt
#: original_texis/display.texi:3936
msgid "When this is non-@code{nil}, Emacs displays a special glyph in the fringe of each empty line at the end of the buffer, on graphical displays.  @xref{Fringes}.  This variable is automatically buffer-local in every buffer."
msgstr "これが非@code{nil}ならEmacsはグラフィカルなディスプレイ上で、バッファー終端にある空行それぞれにたいしてフリンジ内に特別なグリフを表示する。@ref{Fringes}を参照のこと。この変数はすべてのバッファーにおいて自動的にバッファーローカルになる。"

#. type: defopt
#: original_texis/display.texi:3938
#, no-wrap
msgid "indicate-buffer-boundaries"
msgstr "indicate-buffer-boundaries"

#. type: cindex
#: original_texis/display.texi:3939
#, no-wrap
msgid "buffer boundaries, indicating"
msgstr "buffer boundaries, indicating"

#. type: defopt
#: original_texis/display.texi:3942
msgid "This buffer-local variable controls how the buffer boundaries and window scrolling are indicated in the window fringes."
msgstr "このバッファーローカル変数はウィンドウフリンジ内でバッファー境界とウィンドウのスクロールを示す方法を制御する。"

#. type: defopt
#: original_texis/display.texi:3948
msgid "Emacs can indicate the buffer boundaries---that is, the first and last line in the buffer---with angle icons when they appear on the screen.  In addition, Emacs can display an up-arrow in the fringe to show that there is text above the screen, and a down-arrow to show there is text below the screen."
msgstr "Emacsはバッファー境界(そのバッファーの最初の行と最後の行)がスクリーン上に表示された際には、それを三角アイコン(angle icon)で示すことができる。加えてスクリーンより上にテキストが存在すれば上矢印(up-arrow)、スクリーンの下にテキストが存在すれば下矢印(down-arrow)をフリンジ内に表示してそれを示すことができる。"

#. type: defopt
#: original_texis/display.texi:3950
msgid "There are three kinds of basic values:"
msgstr "基本的な値として3つの値がある:"

#. type: table
#: original_texis/display.texi:3954
msgid "Don't display any of these fringe icons."
msgstr "これらのフリンジアイコンを何も表示しない。"

#. type: code{#1}
#: original_texis/display.texi:3954
#, no-wrap
msgid "left"
msgstr "left"

#. type: table
#: original_texis/display.texi:3956
msgid "Display the angle icons and arrows in the left fringe."
msgstr "左フリンジに三角アイコンと矢印を表示する。"

#. type: code{#1}
#: original_texis/display.texi:3956
#, no-wrap
msgid "right"
msgstr "right"

#. type: table
#: original_texis/display.texi:3958
msgid "Display the angle icons and arrows in the right fringe."
msgstr "右フリンジに三角アイコンと矢印を表示する。"

#. type: item
#: original_texis/display.texi:3958
#, no-wrap
msgid "any non-alist"
msgstr "その他の非alist"

#. type: table
#: original_texis/display.texi:3961
msgid "Display the angle icons in the left fringe and don't display the arrows."
msgstr "左フリンジに三角アイコンを表示して矢印を表示しない。"

#. type: defopt
#: original_texis/display.texi:3970
msgid "Otherwise the value should be an alist that specifies which fringe indicators to display and where.  Each element of the alist should have the form @code{(@var{indicator} . @var{position})}.  Here, @var{indicator} is one of @code{top}, @code{bottom}, @code{up}, @code{down}, and @code{t} (which covers all the icons not yet specified), while @var{position} is one of @code{left}, @code{right} and @code{nil}."
msgstr "値がそれ以外ならどのフリンジインジケーターをどこに表示するかを指定するalistであること。alistの各要素は@code{(@var{indicator} . @var{position})}のような形式をもつ。ここで@var{indicator}は@code{top}、@code{bottom}、@code{up}、@code{down}、または@code{t} (指定されていないすべてのアイコンをカバーする)のいずれかであり@var{position}は@code{left}、@code{right}、または@code{nil}のいずれか。"

#. type: defopt
#: original_texis/display.texi:3975
msgid "For example, @code{((top . left) (t . right))} places the top angle bitmap in left fringe, and the bottom angle bitmap as well as both arrow bitmaps in right fringe.  To show the angle bitmaps in the left fringe, and no arrow bitmaps, use @code{((top .  left) (bottom . left))}."
msgstr "たとえば@code{((top . left) (t . right))}は左フリンジにtop angleビットマップを、右フリンジにbottom angleビットマップと両arrowビットマップを配置する。左フリンジにangleビットマップを表示してarrowビットマップを表示しないようにするには@code{((top .  left) (bottom . left))}を使用する。"

#. type: defvar
#: original_texis/display.texi:3977
#, no-wrap
msgid "fringe-indicator-alist"
msgstr "fringe-indicator-alist"

#. type: defvar
#: original_texis/display.texi:3984
msgid "This buffer-local variable specifies the mapping from logical fringe indicators to the actual bitmaps displayed in the window fringes.  The value is an alist of elements @code{(@var{indicator} . @var{bitmaps})}, where @var{indicator} specifies a logical indicator type and @var{bitmaps} specifies the fringe bitmaps to use for that indicator."
msgstr "このバッファーローカル変数は論理的ロジカルフリンジインジケーターから、ウィンドウフリンジ内に実際に表示されるビットマップへのマッピングを指定する。値は@code{(@var{indicator} . @var{bitmaps})}のような要素をもつalist。ここで@var{indicator}は論理的インジケータータイプ、@var{bitmaps}はそのインジケーターに使用するフリンジビットマップを指定する。"

#. type: defvar
#: original_texis/display.texi:3986
msgid "Each @var{indicator} should be one of the following symbols:"
msgstr "@var{indicator}はそれぞれ以下のシンボルのいずれかであること:"

#. type: item
#: original_texis/display.texi:3988
#, no-wrap
msgid "@code{truncation}, @code{continuation}."
msgstr "@code{truncation}、@code{continuation}。"

#. type: table
#: original_texis/display.texi:3990
msgid "Used for truncation and continuation lines."
msgstr "行の切り詰めと継続に使用される。"

#. type: item
#: original_texis/display.texi:3991
#, no-wrap
msgid "@code{up}, @code{down}, @code{top}, @code{bottom}, @code{top-bottom}"
msgstr "@code{up}、@code{down}、@code{top}、@code{bottom}、@code{top-bottom}"

#. type: table
#: original_texis/display.texi:3997
msgid "Used when @code{indicate-buffer-boundaries} is non-@code{nil}: @code{up} and @code{down} indicate a buffer boundary lying above or below the window edge; @code{top} and @code{bottom} indicate the topmost and bottommost buffer text line; and @code{top-bottom} indicates where there is just one line of text in the buffer."
msgstr "@code{indicate-buffer-boundaries}が非@code{nil}の際に使用される。@code{up}と@code{down}は、そのウィンドウ端より上と下にあるバッファー境界を示す。@code{top}と@code{bottom}はバッファーの最上端と最下端のテキスト行を示す。@code{top-bottom}はバッファー内にテキスト行1行だけが存在することを示す。"

#. type: code{#1}
#: original_texis/display.texi:3998
#, no-wrap
msgid "empty-line"
msgstr "empty-line"

#. type: table
#: original_texis/display.texi:4001
msgid "Used to indicate empty lines when @code{indicate-empty-lines} is non-@code{nil}."
msgstr "@code{indicate-empty-lines}が非@code{nil}の際に空行を示すために使用される。"

#. type: code{#1}
#: original_texis/display.texi:4002
#, no-wrap
msgid "overlay-arrow"
msgstr "overlay-arrow"

#. type: table
#: original_texis/display.texi:4007
msgid "Used for overlay arrows (@pxref{Overlay Arrow})."
msgstr "オーバーレイ矢印に使用される(@ref{Overlay Arrow}を参照)。"

#. type: defvar
#: original_texis/display.texi:4017
msgid "Each @var{bitmaps} value may be a list of symbols @code{(@var{left} @var{right} [@var{left1} @var{right1}])}.  The @var{left} and @var{right} symbols specify the bitmaps shown in the left and/or right fringe, for the specific indicator.  @var{left1} and @var{right1} are specific to the @code{bottom} and @code{top-bottom} indicators, and are used to indicate that the last text line has no final newline.  Alternatively, @var{bitmaps} may be a single symbol which is used in both left and right fringes."
msgstr "各@var{bitmaps}の値にはシンボルのリスト@code{(@var{left} @var{right} [@var{left1} @var{right1}])}を指定できる。シンボル@var{left}と@var{right}は特定のインジケーターにたいして左および/または右フリンジに表示するビットマップを指定する。@var{left1}と@var{right1}はインジケーター@code{bottom}と@code{top-bottom}に固有であり、最後の改行をもたない最後のテキスト行を示すために使用される。かわりに@var{bitmaps}に左フリンジと右フリンジの両方で使用される単一のシンボルを指定することもできる。"

#. type: defvar
#: original_texis/display.texi:4021
msgid "@xref{Fringe Bitmaps}, for a list of standard bitmap symbols and how to define your own.  In addition, @code{nil} represents the empty bitmap (i.e., an indicator that is not shown)."
msgstr "標準のビットマップシンボルのリストと自身で定義する方法については@ref{Fringe Bitmaps}を参照のこと。加えて@code{nil}は空ビットマップ(表示されないインジケーター)を表す。"

#. type: defvar
#: original_texis/display.texi:4026
msgid "When @code{fringe-indicator-alist} has a buffer-local value, and there is no bitmap defined for a logical indicator, or the bitmap is @code{t}, the corresponding value from the default value of @code{fringe-indicator-alist} is used."
msgstr "@code{fringe-indicator-alist}がバッファーローカルな値をもち、論理的インジケーターにたいしてビットマップが定義されていないかビットマップが@code{t}ならば、@code{fringe-indicator-alist}のデフォルト値から対応する値が使用される。"

#. type: cindex
#: original_texis/display.texi:4030
#, no-wrap
msgid "fringe cursors"
msgstr "fringe cursors"

#. type: cindex
#: original_texis/display.texi:4031
#, no-wrap
msgid "cursor, fringe"
msgstr "cursor, fringe"

#. type: Plain text
#: original_texis/display.texi:4037
msgid "When a line is exactly as wide as the window, Emacs displays the cursor in the right fringe instead of using two lines.  Different bitmaps are used to represent the cursor in the fringe depending on the current buffer's cursor type."
msgstr "ある行がウィンドウと正確に同じ幅なとき、2行を使用するかわりにEmacsは右フリンジ内にカーソルを表示します。フリンジ内のカーソルを表すために使用されるビットマップの違いはカレントバッファーのカーソルタイプに依存します。"

#. type: defopt
#: original_texis/display.texi:4038
#, no-wrap
msgid "overflow-newline-into-fringe"
msgstr "overflow-newline-into-fringe"

#. type: defopt
#: original_texis/display.texi:4043
msgid "If this is non-@code{nil}, lines exactly as wide as the window (not counting the final newline character) are not continued.  Instead, when point is at the end of the line, the cursor appears in the right fringe."
msgstr "これが非@code{nil}なら、ウィンドウと正確に同じ幅の(最後の改行文字に継続されない)行は継続されない。ポイントが行端に達した際には、カーソルはかわりに右フリンジに表示される。"

#. type: defvar
#: original_texis/display.texi:4045
#, no-wrap
msgid "fringe-cursor-alist"
msgstr "fringe-cursor-alist"

#. type: defvar
#: original_texis/display.texi:4051
msgid "This variable specifies the mapping from logical cursor type to the actual fringe bitmaps displayed in the right fringe.  The value is an alist where each element has the form @code{(@var{cursor-type} . @var{bitmap})}, which means to use the fringe bitmap @var{bitmap} to display cursors of type @var{cursor-type}."
msgstr "この変数は論理的カーソルタイプから、右フリンジ内に実際に表示されるフリンジビットマップへのマッピングを指定する。値は各要素が@code{(@var{cursor-type} . @var{bitmap})}のような形式をもつようなalist。ここで@var{bitmap}は使用するフリンジビットマップ、@var{cursor-type}は表示するカーソルタイプ。"

#. type: defvar
#: original_texis/display.texi:4058
msgid "Each @var{cursor-type} should be one of @code{box}, @code{hollow}, @code{bar}, @code{hbar}, or @code{hollow-small}.  The first four have the same meanings as in the @code{cursor-type} frame parameter (@pxref{Cursor Parameters}).  The @code{hollow-small} type is used instead of @code{hollow} when the normal @code{hollow-rectangle} bitmap is too tall to fit on a specific display line."
msgstr "@var{cursor-type}はそれぞれ@code{box}、@code{hollow}、@code{bar}、@code{hbar}、@code{hollow-small}のいずれかであること。最初の4つはフレームパラメーター@code{cursor-type}の場合と同じ意味をもつ(@ref{Cursor Parameters}を参照)。@code{hollow-small}タイプは特定のディスプレイ行にたいして通常の@code{hollow-rectangle}が高すぎる際に@code{hollow}のかわりに使用される。"

#. type: defvar
#: original_texis/display.texi:4061
msgid "Each @var{bitmap} should be a symbol specifying the fringe bitmap to be displayed for that logical cursor type."
msgstr "@var{bitmap}はそれぞれ、その論理的カーソルタイプにたいして表示されるフリンジビットマップを指定するシンボルであること。"

#. type: iftex
#: original_texis/display.texi:4063
msgid "See the next subsection for details."
msgstr "詳細は次のサブセクションを参照のこと。"

#. type: ifnottex
#: original_texis/display.texi:4066
msgid "@xref{Fringe Bitmaps}."
msgstr "詳細は@ref{Fringe Bitmaps}を参照のこと。"

#. type: defvar
#: original_texis/display.texi:4073
msgid "When @code{fringe-cursor-alist} has a buffer-local value, and there is no bitmap defined for a cursor type, the corresponding value from the default value of @code{fringes-indicator-alist} is used."
msgstr "@code{fringe-cursor-alist}がバッファーローカルな値をもち、カーソルタイプにたいして定義されたビットマップが存在しなければ、@code{fringes-indicator-alist}のデフォルト値の対応する値が使用される。"

#. type: cindex
#: original_texis/display.texi:4077
#, no-wrap
msgid "fringe bitmaps"
msgstr "fringe bitmaps"

#. type: cindex
#: original_texis/display.texi:4078
#, no-wrap
msgid "bitmaps, fringe"
msgstr "bitmaps, fringe"

#. type: Plain text
#: original_texis/display.texi:4084
msgid "The @dfn{fringe bitmaps} are the actual bitmaps which represent the logical fringe indicators for truncated or continued lines, buffer boundaries, overlay arrows, etc.  Each bitmap is represented by a symbol."
msgstr "@dfn{フリンジビットマップ(fringe bitmaps)}は行の切り詰めや継続、バッファー境界、オーバーレイ矢印等にたいする論理的フリンジインジケーターを表現する実際のビットマップです。それぞれのビットマップはシンボルにより表されます。"

#. type: iftex
#: original_texis/display.texi:4088
msgid "These symbols are referred to by the variables @code{fringe-indicator-alist} and @code{fringe-cursor-alist}, described in the previous subsections."
msgstr "これらのシンボルは前のサブセクションで説明した変数@code{fringe-indicator-alist}と@code{fringe-cursor-alist}から参照されます。"

#. type: ifnottex
#: original_texis/display.texi:4095
msgid "These symbols are referred to by the variable @code{fringe-indicator-alist}, which maps fringe indicators to bitmaps (@pxref{Fringe Indicators}), and the variable @code{fringe-cursor-alist}, which maps fringe cursors to bitmaps (@pxref{Fringe Cursors})."
msgstr "これらのシンボルはフリンジインジケーターからビットマップへのマッピングを行う変数@code{fringe-indicator-alist} (@ref{Fringe Indicators}を参照)、およびフリンジカーソルからビットマップへのマッピングを行う変数@code{fringe-cursor-alist} (@ref{Fringe Cursors}を参照)から参照されます。"

#. type: Plain text
#: original_texis/display.texi:4101
msgid "Lisp programs can also directly display a bitmap in the left or right fringe, by using a @code{display} property for one of the characters appearing in the line (@pxref{Other Display Specs}).  Such a display specification has the form"
msgstr "Lispプログラムも行内に出現する文字の1つに@code{display}プロパティを使用することにより、左フリンジまたは右フリンジ内にビットマップを直接表示することができます。そのような表示指定は以下の形式をもちます"

#. type: example
#: original_texis/display.texi:4104
#, no-wrap
msgid "(@var{fringe} @var{bitmap} [@var{face}])\n"
msgstr "(@var{fringe} @var{bitmap} [@var{face}])\n"

#. type: Plain text
#: original_texis/display.texi:4112
msgid "@var{fringe} is either the symbol @code{left-fringe} or @code{right-fringe}.  @var{bitmap} is a symbol identifying the bitmap to display.  The optional @var{face} names a face whose foreground color is used to display the bitmap; this face is automatically merged with the @code{fringe} face."
msgstr "@var{fringe}は、@code{left-fringe}か@code{right-fringe}いずれかのシンボルです。@var{bitmap}は表示するビットマップを識別するシンボルです。オプションの@var{face}は、そのフォアグラウンドカラーをビットマップの表示に使用するフェイスの名前です。このフェイスは自動的に@code{fringe}フェイスにマージされます。"

#. type: Plain text
#: original_texis/display.texi:4116
msgid "Here is a list of the standard fringe bitmaps defined in Emacs, and how they are currently used in Emacs (via @code{fringe-indicator-alist} and @code{fringe-cursor-alist}):"
msgstr "以下はEmacsが定義する標準的なフリンジビットマップと、(@code{fringe-indicator-alist}と@code{fringe-cursor-alist}を通じて)Emacs内で現在それらが使用される方法のリストです。"

#. type: item
#: original_texis/display.texi:4118
#, no-wrap
msgid "@code{left-arrow}, @code{right-arrow}"
msgstr "@code{left-arrow}、@code{right-arrow}"

#. type: table
#: original_texis/display.texi:4120
msgid "Used to indicate truncated lines."
msgstr "切り詰められた行を示すために使用される。"

#. type: item
#: original_texis/display.texi:4121
#, no-wrap
msgid "@code{left-curly-arrow}, @code{right-curly-arrow}"
msgstr "@code{left-curly-arrow}、@code{right-curly-arrow}"

#. type: table
#: original_texis/display.texi:4123
msgid "Used to indicate continued lines."
msgstr "継続された行を示すために使用される。"

#. type: item
#: original_texis/display.texi:4124
#, no-wrap
msgid "@code{right-triangle}, @code{left-triangle}"
msgstr "@code{right-triangle}、@code{left-triangle}"

#. type: table
#: original_texis/display.texi:4126
msgid "The former is used by overlay arrows.  The latter is unused."
msgstr "前者はオーバーレイ矢印により使用され、後者は使用されない。"

#. type: item
#: original_texis/display.texi:4127
#, no-wrap
msgid "@code{up-arrow}, @code{down-arrow}, @code{top-left-angle} @code{top-right-angle}"
msgstr "@code{up-arrow}、@code{down-arrow}、@code{top-left-angle} @code{top-right-angle}"

#. type: itemx
#: original_texis/display.texi:4128
#, no-wrap
msgid "@code{bottom-left-angle}, @code{bottom-right-angle}"
msgstr "@code{bottom-left-angle}、@code{bottom-right-angle}"

#. type: itemx
#: original_texis/display.texi:4129
#, no-wrap
msgid "@code{top-right-angle}, @code{top-left-angle}"
msgstr "@code{top-right-angle}、@code{top-left-angle}"

#. type: itemx
#: original_texis/display.texi:4130
#, no-wrap
msgid "@code{left-bracket}, @code{right-bracket}, @code{top-right-angle}, @code{top-left-angle}"
msgstr "@code{left-bracket}、@code{right-bracket}、@code{top-right-angle}、@code{top-left-angle}"

#. type: table
#: original_texis/display.texi:4132
msgid "Used to indicate buffer boundaries."
msgstr "バッファー境界を示すために使用される。"

#. type: item
#: original_texis/display.texi:4133
#, no-wrap
msgid "@code{filled-rectangle}, @code{hollow-rectangle}"
msgstr "@code{filled-rectangle}、@code{hollow-rectangle}"

#. type: itemx
#: original_texis/display.texi:4134
#, no-wrap
msgid "@code{filled-square}, @code{hollow-square}"
msgstr "@code{filled-square}、@code{hollow-square}"

#. type: itemx
#: original_texis/display.texi:4135
#, no-wrap
msgid "@code{vertical-bar}, @code{horizontal-bar}"
msgstr "@code{vertical-bar}、@code{horizontal-bar}"

#. type: table
#: original_texis/display.texi:4137
msgid "Used for different types of fringe cursors."
msgstr "フリンジカーソルの異なるタイプにたいして使用される。"

#. type: item
#: original_texis/display.texi:4138
#, no-wrap
msgid "@code{empty-line}, @code{exclamation-mark}, @code{question-mark}, @code{exclamation-mark}"
msgstr "@code{empty-line}、@code{exclamation-mark}、@code{question-mark}、@code{exclamation-mark}"

#. type: table
#: original_texis/display.texi:4140
msgid "Not used by core Emacs features."
msgstr "Emacsの中核機能では使用されない。"

#. type: Plain text
#: original_texis/display.texi:4144
msgid "The next subsection describes how to define your own fringe bitmaps."
msgstr "次のサブセクションではフリンジビットマップを独自に定義する方法を説明します。"

#. type: defun
#: original_texis/display.texi:4145
#, no-wrap
msgid "fringe-bitmaps-at-pos &optional pos window"
msgstr "fringe-bitmaps-at-pos &optional pos window"

#. type: defun
#: original_texis/display.texi:4152
msgid "This function returns the fringe bitmaps of the display line containing position @var{pos} in window @var{window}.  The return value has the form @code{(@var{left} @var{right} @var{ov})}, where @var{left} is the symbol for the fringe bitmap in the left fringe (or @code{nil} if no bitmap), @var{right} is similar for the right fringe, and @var{ov} is non-@code{nil} if there is an overlay arrow in the left fringe."
msgstr "この関数はウィンドウ@var{window}内の位置@var{pos}を含むディスプレイ行のフリンジビットマップをリターンする。リターン値は@code{(@var{left} @var{right} @var{ov})}という形式をもつ。ここで@var{left}は左フリンジ内のフリンジビットマップにたいするシンボル(ビットマップなしなら@code{nil})、@var{right}は同様に右フリンジにたいして、@var{ov}が非@code{nil}なら左フリンジにオーバーレイ矢印が存在することを意味する。"

#. type: defun
#: original_texis/display.texi:4157
msgid "The value is @code{nil} if @var{pos} is not visible in @var{window}.  If @var{window} is @code{nil}, that stands for the selected window.  If @var{pos} is @code{nil}, that stands for the value of point in @var{window}."
msgstr "@var{window}内で@var{pos}が可視でなければ値は@code{nil}。@var{window}が@code{nil}なら選択されたウィンドウを意味する。@var{pos}が@code{nil}なら@var{window}内のポイントの値を意味する。"

#. type: subsection
#: original_texis/display.texi:4160
#, no-wrap
msgid "Customizing Fringe Bitmaps"
msgstr "Customizing Fringe Bitmaps"

#. type: cindex
#: original_texis/display.texi:4161
#, no-wrap
msgid "fringe bitmaps, customizing"
msgstr "fringe bitmaps, customizing"

#. type: defun
#: original_texis/display.texi:4163
#, no-wrap
msgid "define-fringe-bitmap bitmap bits &optional height width align"
msgstr "define-fringe-bitmap bitmap bits &optional height width align"

#. type: defun
#: original_texis/display.texi:4166
msgid "This function defines the symbol @var{bitmap} as a new fringe bitmap, or replaces an existing bitmap with that name."
msgstr "この関数はシンボル@var{bitmap}を新たなフリンジビットマップとして定義、またはその名前の既存のビットマップを置き換える。"

#. type: defun
#: original_texis/display.texi:4172
msgid "The argument @var{bits} specifies the image to use.  It should be either a string or a vector of integers, where each element (an integer) corresponds to one row of the bitmap.  Each bit of an integer corresponds to one pixel of the bitmap, where the low bit corresponds to the rightmost pixel of the bitmap."
msgstr "引数@var{bits}は使用するイメージを指定する。これは各要素(整数)が対応するビットマップの1行を指定する文字列か整数ベクターであること。整数の各ビットはそのビットマップの1ピクセル、低位ビットはそのビットマップの最右ピクセルに対応する。"

#. type: defun
#: original_texis/display.texi:4177
msgid "The height is normally the length of @var{bits}.  However, you can specify a different height with non-@code{nil} @var{height}.  The width is normally 8, but you can specify a different width with non-@code{nil} @var{width}.  The width must be an integer between 1 and 16."
msgstr "高さは通常は@var{bits}の長さ。しかし非@code{nil}の@var{height}により異なる高さを指定できる。幅は通常は8だが非@code{nil}の@var{width}により異なる幅を指定できる。widthは1から16の整数でなければならない。"

#. type: defun
#: original_texis/display.texi:4182
msgid "The argument @var{align} specifies the positioning of the bitmap relative to the range of rows where it is used; the default is to center the bitmap.  The allowed values are @code{top}, @code{center}, or @code{bottom}."
msgstr "引数@var{align}はそのビットマップが使用される行範囲に相対的なビットマップの位置を指定する。デフォルトはそのビットマップの中央。指定できる値は@code{top}、@code{center}、@code{bottom}。"

#. type: defun
#: original_texis/display.texi:4188
msgid "The @var{align} argument may also be a list @code{(@var{align} @var{periodic})} where @var{align} is interpreted as described above.  If @var{periodic} is non-@code{nil}, it specifies that the rows in @code{bits} should be repeated enough times to reach the specified height."
msgstr "@var{align}引数にはリスト@code{(@var{align} @var{periodic})}も指定できて、@var{align}は上述のように解釈される。@var{periodic}が非@code{nil}なら、それは@code{bits}内の行が指定される高さに達するのに十分な回数繰り返されるべきであることを指定する。"

#. type: defun
#: original_texis/display.texi:4190
#, no-wrap
msgid "destroy-fringe-bitmap bitmap"
msgstr "destroy-fringe-bitmap bitmap"

#. type: defun
#: original_texis/display.texi:4195
msgid "This function destroy the fringe bitmap identified by @var{bitmap}.  If @var{bitmap} identifies a standard fringe bitmap, it actually restores the standard definition of that bitmap, instead of eliminating it entirely."
msgstr "この関数は@var{bitmap}により識別されるフリンジビットマップを破棄する。@var{bitmap}が標準フリンジビットマップを識別する場合には、それを完全に消去するかわりに実際にはそのビットマップの標準定義をリストアする。"

#. type: defun
#: original_texis/display.texi:4197
#, no-wrap
msgid "set-fringe-bitmap-face bitmap &optional face"
msgstr "set-fringe-bitmap-face bitmap &optional face"

#. type: defun
#: original_texis/display.texi:4201
msgid "This sets the face for the fringe bitmap @var{bitmap} to @var{face}.  If @var{face} is @code{nil}, it selects the @code{fringe} face.  The bitmap's face controls the color to draw it in."
msgstr "これはフリンジビットマップ@var{bitmap}にたいするフェイスに@var{face}をセットする。@var{face}が@code{nil}なら@code{fringe}フェイスを選択する。ビットマップのフェイスはそれを描画するカラーを制御する。"

#. type: defun
#: original_texis/display.texi:4204
msgid "@var{face} is merged with the @code{fringe} face, so normally @var{face} should specify only the foreground color."
msgstr "@var{face}は@code{fringe}にマージされるため@var{face}は通常はフォアグラウンドカラーだけを指定すること。"

#. type: subsection
#: original_texis/display.texi:4207
#, no-wrap
msgid "The Overlay Arrow"
msgstr "The Overlay Arrow"

#. type: Plain text
#: original_texis/display.texi:4215
msgid "The @dfn{overlay arrow} is useful for directing the user's attention to a particular line in a buffer.  For example, in the modes used for interface to debuggers, the overlay arrow indicates the line of code about to be executed.  This feature has nothing to do with @dfn{overlays} (@pxref{Overlays})."
msgstr "@dfn{オーバーレイ矢印(overlay arrow)}は、バッファー内の特定の行にたいしてユーザーに注意を促すために有用です。たとえばデバッガーでのインターフェースに使用されるモードでは、オーバーレイ矢印は実行されているコード行を示します。この機能は@dfn{オーバーレイ(overlays)}にたいして何も行いません(@ref{Overlays}を参照)。"

#. type: defvar
#: original_texis/display.texi:4216
#, no-wrap
msgid "overlay-arrow-string"
msgstr "overlay-arrow-string"

#. type: defvar
#: original_texis/display.texi:4221
msgid "This variable holds the string to display to call attention to a particular line, or @code{nil} if the arrow feature is not in use.  On a graphical display the contents of the string are ignored; instead a glyph is displayed in the fringe area to the left of the display area."
msgstr "この変数は特定の行にたいして注意を喚起するために表示する文字列、または矢印機能が使用されていなければ@code{nil}を保持する。グラフィカルなディスプレイではこの文字列のコンテンツは無視され、かわりにフリンジ領域からディスプレイ領域左側にグリフが表示される。"

#. type: defvar
#: original_texis/display.texi:4223
#, no-wrap
msgid "overlay-arrow-position"
msgstr "overlay-arrow-position"

#. type: defvar
#: original_texis/display.texi:4231
msgid "This variable holds a marker that indicates where to display the overlay arrow.  It should point at the beginning of a line.  On a non-graphical display the arrow text appears at the beginning of that line, overlaying any text that would otherwise appear.  Since the arrow is usually short, and the line usually begins with indentation, normally nothing significant is overwritten."
msgstr "この変数はオーバーレイ矢印を表示する箇所を示すマーカーを保持する。これは行の先頭となるポイントであること。非グラフィカルなディスプレイではその行の先頭に矢印テキストが表示され、矢印テキストが表示されないときに表示されるべきテキストがオーバーレイされる。その矢印は通常は短く行は普通はインデントで開始されるので、上書きが問題となることは通常はない。"

#. type: defvar
#: original_texis/display.texi:4241
msgid "The overlay-arrow string is displayed in any given buffer if the value of @code{overlay-arrow-position} in that buffer points into that buffer.  Thus, it is possible to display multiple overlay arrow strings by creating buffer-local bindings of @code{overlay-arrow-position}.  However, it is usually cleaner to use @code{overlay-arrow-variable-list} to achieve this result."
msgstr "オーバーレイ矢印の文字列は、そのバッファーの@code{overlay-arrow-position}の値がバッファー内を指せば与えられた任意のバッファーで表示される。したがって@code{overlay-arrow-position}のバッファーローカルなバインディングを作成することにより、複数のオーバーレイ矢印の表示が可能である。しかしこれを達成するためには、@code{overlay-arrow-variable-list}を使用するほうが通常はより明快。"

#. type: Plain text
#: original_texis/display.texi:4245
msgid "You can do a similar job by creating an overlay with a @code{before-string} property.  @xref{Overlay Properties}."
msgstr "@code{before-string}プロパティをもつオーバーレイを作成することにより同様のことを行うことができます。@ref{Overlay Properties}を参照してください。"

#. type: Plain text
#: original_texis/display.texi:4248
msgid "You can define multiple overlay arrows via the variable @code{overlay-arrow-variable-list}."
msgstr "変数@code{overlay-arrow-variable-list}を通じて複数のオーバーレイ矢印を定義できます。"

#. type: defvar
#: original_texis/display.texi:4249
#, no-wrap
msgid "overlay-arrow-variable-list"
msgstr "overlay-arrow-variable-list"

#. type: defvar
#: original_texis/display.texi:4254
msgid "This variable's value is a list of variables, each of which specifies the position of an overlay arrow.  The variable @code{overlay-arrow-position} has its normal meaning because it is on this list."
msgstr "この変数の値は、それぞれがオーバーレイ矢印の位置を指定する変数のリスト。変数@code{overlay-arrow-position}はこのリスト上にあるために通常の意味をもつ。"

#. type: Plain text
#: original_texis/display.texi:4263
msgid "Each variable on this list can have properties @code{overlay-arrow-string} and @code{overlay-arrow-bitmap} that specify an overlay arrow string (for text terminals) or fringe bitmap (for graphical terminals) to display at the corresponding overlay arrow position.  If either property is not set, the default @code{overlay-arrow-string} or @code{overlay-arrow} fringe indicator is used."
msgstr "このリスト上の各変数は対応するオーバーレイ矢印位置に表示するためのオーバーレイ矢印文字列を指定する@code{overlay-arrow-string}プロパティ(テキスト端末用)、およびフリンジビットマップを指定する@code{overlay-arrow-bitmap}プロパティ(グラフィカル端末用)をもつことができます。これらのプロパティがセットされていなければデフォルトのフリンジインジケーター@code{overlay-arrow-string}と@code{overlay-arrow}が使用されます。"

#. type: cindex
#: original_texis/display.texi:4267
#, no-wrap
msgid "scroll bars"
msgstr "scroll bars"

#. type: Plain text
#: original_texis/display.texi:4274
msgid "Normally the frame parameter @code{vertical-scroll-bars} controls whether the windows in the frame have vertical scroll bars, and whether they are on the left or right.  The frame parameter @code{scroll-bar-width} specifies how wide they are (@code{nil} meaning the default)."
msgstr "フレームパラメーター@code{vertical-scroll-bars}はそのフレーム内のウィンドウが垂直スクロールバーをもつべきかと、それらが左か右のいずれかに配置されるべきかを通常は制御します。フレームパラメーター@code{scroll-bar-width}はそれらの幅を指定します(@code{nil}はデフォルトを意味する)。"

#. type: Plain text
#: original_texis/display.texi:4279
msgid "The frame parameter @code{horizontal-scroll-bars} controls whether the windows in the frame have horizontal scroll bars.  The frame parameter @code{scroll-bar-height} specifies how high they are (@code{nil} meaning the default).  @xref{Layout Parameters}."
msgstr "フレームパラメーター@code{horizontal-scroll-bars}はフレーム内のウィンドウが水平スクロールバーをもつかどうかを制御します。フレームパラメーター@code{scroll-bar-height}はそれらの高さを指定します(@code{nil}はデフォルトを意味する)。@ref{Layout Parameters}を参照のしてください。"

#. type: vindex
#: original_texis/display.texi:4280
#, no-wrap
msgid "horizontal-scroll-bars-available-p"
msgstr "horizontal-scroll-bars-available-p"

#. type: Plain text
#: original_texis/display.texi:4284
msgid "Horizontal scroll bars are not available on all platforms.  The function @code{horizontal-scroll-bars-available-p} which takes no argument returns non-@code{nil} if they are available on your system."
msgstr "水平スクロールバーはすべてのプラットフォームで利用可能ではありません。引数を受け取らない関数@code{horizontal-scroll-bars-available-p}は、システム上で水平スクロールバーが利用可能なら非@code{nil}をリターンします。"

#. type: Plain text
#: original_texis/display.texi:4287
msgid "The following three functions take as argument a live frame which defaults to the selected one."
msgstr "以下の3つの関数は引数として生きたフレームを受け取り、デフォルトは選択されたフレームです。"

#. type: defun
#: original_texis/display.texi:4288
#, no-wrap
msgid "frame-current-scroll-bars &optional frame"
msgstr "frame-current-scroll-bars &optional frame"

#. type: defun
#: original_texis/display.texi:4295
msgid "This function reports the scroll bar types for frame @var{frame}.  The value is a cons cell @code{(@var{vertical-type} .@: @var{horizontal-type})}, where @var{vertical-type} is either @code{left}, @code{right}, or @code{nil} (which means no vertical scroll bar.)  @var{horizontal-type} is either @code{bottom} or @code{nil} (which means no horizontal scroll bar)."
msgstr "この関数はフレーム@var{frame}のスクロールバーのタイプを報告する。値はコンスセル@code{(@var{vertical-type} .@: @var{horizontal-type})}。ここで@var{vertical-type}は@code{left}、@code{right}、または@code{nil} (スクロールバーなしを意味する)のいずれか。@var{horizontal-type}は@code{bottom}か@code{nil} (水平スクロールバーなしを意味する)のいずれか。"

#. type: defun
#: original_texis/display.texi:4297
#, no-wrap
msgid "frame-scroll-bar-width &optional frame"
msgstr "frame-scroll-bar-width &optional frame"

#. type: defun
#: original_texis/display.texi:4300
msgid "This function returns the width of vertical scroll bars of @var{frame} in pixels."
msgstr "この関数はウィンドウ@var{window}にたいして垂直スクロールバーの幅をピクセル単位でリターンする。"

#. type: defun
#: original_texis/display.texi:4302
#, no-wrap
msgid "frame-scroll-bar-height &optional frame"
msgstr "frame-scroll-bar-height &optional frame"

#. type: defun
#: original_texis/display.texi:4305
msgid "This function returns the height of horizontal scroll bars of @var{frame} in pixels."
msgstr "この関数は@var{frame}の水平スクロールバーの高さをピクセル単位でリターンする。"

#. type: Plain text
#: original_texis/display.texi:4309
msgid "You can override the frame specific settings for individual windows by using the following function:"
msgstr "以下の関数を使用することにより、特定のウィンドウにたいするフレーム固有のセッティングをオーバーライドできます:"

#. type: defun
#: original_texis/display.texi:4310
#, no-wrap
msgid "set-window-scroll-bars window &optional width vertical-type height horizontal-type"
msgstr "set-window-scroll-bars window &optional width vertical-type height horizontal-type"

#. type: defun
#: original_texis/display.texi:4314
msgid "This function sets the width and/or height and the types of scroll bars for window @var{window}.  If @var{window} is @code{nil}, the selected window is used."
msgstr "この関数はウィンドウ@var{window}のスクロールバーの幅および/または高さ、およびタイプをセットする。@var{window}が@code{nil}なら選択されたウィンドウが使用される。"

#. type: defun
#: original_texis/display.texi:4321
msgid "@var{width} specifies the width of the vertical scroll bar in pixels (@code{nil} means use the width specified for the frame).  @var{vertical-type} specifies whether to have a vertical scroll bar and, if so, where.  The possible values are @code{left}, @code{right}, @code{t}, which means to use the frame's default, and @code{nil} for no vertical scroll bar."
msgstr "@var{width}はピクセル単位で垂直スクロールバーの幅を指定する(@code{nil}はそのフレームにたいして指定された幅の使用を意味する)。@var{vertical-type}は垂直スクロールバーをもつかどうか、もつ場合にはその位置を指定する。可能な値は@code{left}、@code{right}、@code{t} (フレームのデフォルトの使用を意味する)、垂直スクロールバーなしなら@code{nil}のいずれか。"

#. type: defun
#: original_texis/display.texi:4327
msgid "@var{height} specifies the height of the horizontal scroll bar in pixels (@code{nil} means use the height specified for the frame).  @var{horizontal-type} specifies whether to have a horizontal scroll bar.  The possible values are @code{bottom}, @code{t}, which means to use the frame's default, and @code{nil} for no horizontal scroll bar."
msgstr "@var{height}はピクセル単位で水平スクロールバーの高さを指定する(@code{nil}はそのフレームにたいして指定された高さの使用を意味する)。@var{horizontal-type}は水平スクロールバーをもつかどうかを指定する。可能な値は@code{bottom}、@code{t} (フレームのデフォルトの使用を意味する)、水平スクロールバーなしなら@code{nil}のいずれか。"

#. type: Plain text
#: original_texis/display.texi:4335
msgid "The following four functions take as argument a live window which defaults to the selected one."
msgstr "以下の4つの関数は引数として生きたウィンドウを受け取り、デフォルトは選択されたウィンドウです。"

#. type: defun
#: original_texis/display.texi:4336
#, no-wrap
msgid "window-scroll-bars &optional window"
msgstr "window-scroll-bars &optional window"

#. type: defun
#: original_texis/display.texi:4340
msgid "This function returns a list of the form @code{(@var{width} @var{columns} @var{vertical-type} @var{height} @var{lines} @var{horizontal-type})}."
msgstr "この関数は@code{(@var{width} @var{columns} @var{vertical-type} @var{height} @var{lines} @var{horizontal-type})}という形式のリストをリターンする。"

#. type: defun
#: original_texis/display.texi:4345
msgid "The value @var{width} is the value that was specified for the width of the vertical scroll bar (which may be @code{nil}); @var{columns} is the (possibly rounded) number of columns that the vertical scroll bar actually occupies."
msgstr "値@var{width}は垂直スクロールバーの幅に指定された値(@code{nil}もあり得る)。@var{columns}は垂直スクロールバーが実際に占有する列数(丸められているかもしれない)。"

#. type: defun
#: original_texis/display.texi:4350
msgid "The value @var{height} is the value that was specified for the height of the horizontal scroll bar (which may be @code{nil}); @var{lines} is the (possibly rounded) number of lines that the horizontally scroll bar actually occupies."
msgstr "値@var{height}は水平スクロールバーの高さに指定された値(@code{nil}もあり得る)。@var{lines}は水平スクロールバーが実際に占有する行数(丸められているかもしれない)。"

#. type: defun
#: original_texis/display.texi:4352
#, no-wrap
msgid "window-current-scroll-bars &optional window"
msgstr "window-current-scroll-bars &optional window"

#. type: defun
#: original_texis/display.texi:4358
msgid "This function reports the scroll bar type for window @var{window}.  The value is a cons cell @code{(@var{vertical-type} .@: @var{horizontal-type})}.  Unlike @code{window-scroll-bars}, this reports the scroll bar type actually used, once frame defaults and @code{scroll-bar-mode} are taken into account."
msgstr "この関数はウィンドウ@var{window}にたいするスクロールバータイプを報告する。値はコンスセル@code{(@var{vertical-type} .@: @var{horizontal-type})}。@code{window-scroll-bars}とは異なりフレームのデフォルトと@code{scroll-bar-mode}を考慮して実際に使用されているスクロールバータイプを報告する。"

#. type: defun
#: original_texis/display.texi:4360
#, no-wrap
msgid "window-scroll-bar-width &optional window"
msgstr "window-scroll-bar-width &optional window"

#. type: defun
#: original_texis/display.texi:4363
msgid "This function returns the width in pixels of @var{window}'s vertical scrollbar."
msgstr "この関数は@var{window}の垂直スクロールバーの幅をピクセル単位でリターンする。"

#. type: defun
#: original_texis/display.texi:4365
#, no-wrap
msgid "window-scroll-bar-height &optional window"
msgstr "window-scroll-bar-height &optional window"

#. type: defun
#: original_texis/display.texi:4368
msgid "This function returns the height in pixels of @var{window}'s horizontal scrollbar."
msgstr "この関数は、@var{window}の水平スクロールバーの高さをピクセル単位でリターンする。"

#. type: Plain text
#: original_texis/display.texi:4379
msgid "If you don't specify these values for a window with @code{set-window-scroll-bars}, the buffer-local variables @code{vertical-scroll-bar}, @code{horizontal-scroll-bar}, @code{scroll-bar-width} and @code{scroll-bar-height} in the buffer being displayed control the window's scroll bars.  The function @code{set-window-buffer} examines these variables.  If you change them in a buffer that is already visible in a window, you can make the window take note of the new values by calling @code{set-window-buffer} specifying the same buffer that is already displayed."
msgstr "あるウィンドウにたいして@code{set-window-scroll-bars}でこれらの値を指定しない場合には、表示されようとするバッファーのバッファーローカル変数@code{vertical-scroll-bar}、@code{horizontal-scroll-bar}、@code{scroll-bar-width}、@code{scroll-bar-height}がウィンドウのスクロールバーを制御します。@code{set-window-buffer}はこれらの変数を調べる関数です。あるウィンドウですでに可視なバッファーでこれらを変更した場合には、すでに表示されているのと同じバッファーを指定して@code{set-window-buffer}を呼び出すことにより、そのウィンドウに新たな値を記録させることができます。"

#. type: Plain text
#: original_texis/display.texi:4383
msgid "You can control the appearance of scroll bars for a particular buffer by setting the following variables which automatically become buffer-local when set."
msgstr "以下の変数をセット(セットにより自動的にバッファーローカルになる)することにより、特定のバッファーのスクロールバーの外観を制御できます。"

#. type: defvar
#: original_texis/display.texi:4384
#, no-wrap
msgid "vertical-scroll-bar"
msgstr "vertical-scroll-bar"

#. type: defvar
#: original_texis/display.texi:4388
msgid "This variable specifies the location of the vertical scroll bar.  The possible values are @code{left}, @code{right}, @code{t}, which means to use the frame's default, and @code{nil} for no scroll bar."
msgstr "この変数は垂直スクロールバーの配置を指定する。可能な値は@code{left}、@code{right}、そのフレームのデフォルトの使用を意味する@code{t}、スクロールバーなしの@code{nil}のいずれか。"

#. type: defvar
#: original_texis/display.texi:4390
#, no-wrap
msgid "horizontal-scroll-bar"
msgstr "horizontal-scroll-bar"

#. type: defvar
#: original_texis/display.texi:4394
msgid "This variable specifies the location of the horizontal scroll bar.  The possible values are @code{bottom}, @code{t}, which means to use the frame's default, and @code{nil} for no scroll bar."
msgstr "この変数は水平スクロールバーの配置を指定する。可能な値は@code{bottom}、そのフレームのデフォルトの使用を意味する@code{t}、スクロールバーなしの@code{nil}のいずれか。"

#. type: defvar
#: original_texis/display.texi:4396
#, no-wrap
msgid "scroll-bar-width"
msgstr "scroll-bar-width"

#. type: defvar
#: original_texis/display.texi:4400
msgid "This variable specifies the width of the buffer's vertical scroll bars, measured in pixels.  A value of @code{nil} means to use the value specified by the frame."
msgstr "この変数はそのバッファーの垂直スクロールバーをピクセル単位で量った幅を指定する。値@code{nil}はフレームにより指定された値の使用を意味する。"

#. type: defvar
#: original_texis/display.texi:4402
#, no-wrap
msgid "scroll-bar-height"
msgstr "scroll-bar-height"

#. type: defvar
#: original_texis/display.texi:4406
msgid "This variable specifies the height of the buffer's horizontal scroll bar, measured in pixels.  A value of @code{nil} means to use the value specified by the frame."
msgstr "この変数はそのバッファーの水平スクロールバーをピクセル単位で量った高さを指定する。値@code{nil}はフレームにより指定された値の使用を意味する。"

#. type: Plain text
#: original_texis/display.texi:4411
msgid "Finally you can toggle the display of scroll bars on all frames by customizing the variables @code{scroll-bar-mode} and @code{horizontal-scroll-bar-mode}."
msgstr "最後に変数@code{scroll-bar-mode}と@code{horizontal-scroll-bar-mode}をカスタマイズすることにより、すべてのフレームでのスクロールバーの表示を切り替えることができます。"

#. type: defopt
#: original_texis/display.texi:4412
#, no-wrap
msgid "scroll-bar-mode"
msgstr "scroll-bar-mode"

#. type: defopt
#: original_texis/display.texi:4417
msgid "This variable controls whether and where to put vertical scroll bars in all frames.  The possible values are @code{nil} for no scroll bars, @code{left} to put scroll bars on the left and @code{right} to put scroll bars on the right."
msgstr "この変数はすべてのフレームに垂直スクロールバーを配置するべきかと、その場所を制御する。可能な値は、スクロールバーなしの@code{nil}、左にスクロールバーを配置する@code{left}、右にスクロールバーを配置する@code{right}のいずれか。"

#. type: defopt
#: original_texis/display.texi:4419
#, no-wrap
msgid "horizontal-scroll-bar-mode"
msgstr "horizontal-scroll-bar-mode"

#. type: defopt
#: original_texis/display.texi:4422
msgid "This variable controls whether to display horizontal scroll bars on all frames."
msgstr "この変数はすべてのフレームに水平スクロールバーを表示するかどうかを制御する。"

#. type: cindex
#: original_texis/display.texi:4427
#, no-wrap
msgid "window dividers"
msgstr "window dividers"

#. type: cindex
#: original_texis/display.texi:4428
#, no-wrap
msgid "right dividers"
msgstr "right dividers"

#. type: cindex
#: original_texis/display.texi:4429
#, no-wrap
msgid "bottom dividers"
msgstr "bottom dividers"

#. type: Plain text
#: original_texis/display.texi:4439
msgid "Window dividers are bars drawn between a frame's windows.  A right divider is drawn between a window and any adjacent windows on the right.  Its width (thickness) is specified by the frame parameter @code{right-divider-width}.  A bottom divider is drawn between a window and adjacent windows on the bottom or the echo area.  Its width is specified by the frame parameter @code{bottom-divider-width}.  In either case, specifying a width of zero means to not draw such dividers.  @xref{Layout Parameters}."
msgstr "ウィンドウディバイダーとはフレームのウィンドウ間に描画されるバーのことです。右(right)ディバイダーはあるウィンドウと、その右に隣接する任意のウィンドウの間に描画されます。その幅(厚さ)はフレームパラメーター@code{right-divider-width}で指定されます。下(bottom)ディバイダーはあるウィンドウと、その下に隣接するウィンドウやエコーエリアとの間に描画されます。その幅はフレームパラメーター@code{bottom-divider-width}で指定されます。いずれの場合でも幅に0を指定すると、そのようなディバイダーを描画しないことを意味します。@ref{Layout Parameters}を参照してください。"

#. type: Plain text
#: original_texis/display.texi:4448
msgid "Technically, a right divider belongs to the window on its left, which means that its width contributes to the total width of that window.  A bottom divider belongs to the window above it, which means that its width contributes to the total height of that window.  @xref{Window Sizes}.  When a window has both, a right and a bottom divider, the bottom divider prevails.  This means that a bottom divider is drawn over the full total width of its window while the right divider ends above the bottom divider."
msgstr "技術的には右ディバイダーはそれの左にあるウィンドウに所属して、その幅がそのウィンドウのトータル幅に寄与することを意味します。下ディバイダーは上にあるウィンドウに所属して、その幅がそのウィンドウのトータル高さに寄与することを意味します。@ref{Window Sizes}を参照してください。あるウィンドウが右ディバイダーと左ディバイダーの両方をもつ場合には下ディバイダーが優勢になります。これは右ディバイダーが下ディバイダーの上で終端されるのに比べて、下ディバイダーはそのウィンドウの完全なトータル幅で描画されることを意味しています。"

#. type: Plain text
#: original_texis/display.texi:4454
msgid "Dividers can be dragged with the mouse and are therefore useful for adjusting the sizes of adjacent windows with the mouse.  They also serve to visually set apart adjacent windows when no scroll bars or mode lines are present.  The following three faces allow the customization of the appearance of dividers:"
msgstr "ディバイダーはマウスでドラッグできるのでマウスで隣接するウィンドウのサイズを調整するために有用です。これらはスクロールバーやモードラインが表示されていないときに隣接するウィンドウを視覚的に分離する役目もあります。以下の3つのフェイスによりディバイダーの外観をカスタマイズできます:"

#. type: item
#: original_texis/display.texi:4456
#, no-wrap
msgid "window-divider"
msgstr "window-divider"

#. type: table
#: original_texis/display.texi:4460
msgid "When a divider is less than three pixels wide, it is drawn solidly with the foreground of this face.  For larger dividers this face is used for the inner part only, excluding the first and last pixel."
msgstr "ディバイダーの幅が3ピクセル未満のときは、このフェイスのフォアグラウンドカラーで塗りつぶしで描画される。これより広いディバイダーでは、最初と最後のピクセルを除いた内部にたいしてのみこのフェイスが使用される。"

#. type: item
#: original_texis/display.texi:4461
#, no-wrap
msgid "window-divider-first-pixel"
msgstr "window-divider-first-pixel"

#. type: table
#: original_texis/display.texi:4465
msgid "This is the face used for drawing the first pixel of a divider that is at least three pixels wide.  To obtain a solid appearance, set this to the same value used for the @code{window-divider} face."
msgstr "これは少なくとも幅が3ピクセルあるディバイダーの最初のピクセルを描画するために使用される。塗りつぶし(solid)の外観を得るためには@code{window-divider}フェイスに使用されるのと同じ値をセットすること。"

#. type: item
#: original_texis/display.texi:4466
#, no-wrap
msgid "window-divider-last-pixel"
msgstr "window-divider-last-pixel"

#. type: table
#: original_texis/display.texi:4470
msgid "This is the face used for drawing the last pixel of a divider that is at least three pixels wide.  To obtain a solid appearance, set this to the same value used for the @code{window-divider} face."
msgstr "これは少なくとも幅が3ピクセルあるディバイダーの最後のピクセルを描画するために使用される。塗りつぶし(solid)の外観を得るためには@code{window-divider}フェイスに使用されるのと同じ値をセットすること。"

#. type: Plain text
#: original_texis/display.texi:4474
msgid "You can get the sizes of the dividers of a specific window with the following two functions."
msgstr "以下の2つの関数により特定のウィンドウのディバイダーのサイズを取得できます。"

#. type: defun
#: original_texis/display.texi:4475
#, no-wrap
msgid "window-right-divider-width &optional window"
msgstr "window-right-divider-width &optional window"

#. type: defun
#: original_texis/display.texi:4479
msgid "Return the width (thickness) in pixels of @var{window}'s right divider.  @var{window} must be a live window and defaults to the selected one.  The return value is always zero for a rightmost window."
msgstr "@var{window}の右ディバイダーの幅(厚さ)をピクセル単位でリターンする。@var{window}は生きたウィンドウでなければならずデフォルトは選択されたウィンドウ。最右ウィンドウにたいするリターン値は常に0。"

#. type: defun
#: original_texis/display.texi:4481
#, no-wrap
msgid "window-bottom-divider-width &optional window"
msgstr "window-bottom-divider-width &optional window"

#. type: defun
#: original_texis/display.texi:4486
msgid "Return the width (thickness) in pixels of @var{window}'s bottom divider.  @var{window} must be a live window and defaults to the selected one.  The return value is zero for the minibuffer window or a bottommost window on a minibuffer-less frame."
msgstr "@var{window}の下ディバイダーの幅(厚さ)をピクセル単位でリターンする。@var{window}は生きたウィンドウでなければならずデフォルトは選択されたウィンドウ。ミニバッファーウィンドウやミニバッファーがないフレームの最下ウィンドウにたいするリターン値は常に0。"

#. type: section
#: original_texis/display.texi:4490
#, no-wrap
msgid "The @code{display} Property"
msgstr "The @code{display} Property"

#. type: cindex
#: original_texis/display.texi:4491
#, no-wrap
msgid "display specification"
msgstr "display specification"

#. type: kindex
#: original_texis/display.texi:4492
#, no-wrap
msgid "display @r{(text property)}"
msgstr "display @r{(text property)}"

#. type: Plain text
#: original_texis/display.texi:4500
msgid "The @code{display} text property (or overlay property) is used to insert images into text, and to control other aspects of how text displays.  The value of the @code{display} property should be a display specification, or a list or vector containing several display specifications.  Display specifications in the same @code{display} property value generally apply in parallel to the text they cover."
msgstr "テキストプロパティ(またはオーバーレイプロパティ)の@code{display}はテキストへのイメージ挿入、およびテキスト表示のその他の事相を制御します。@code{display}プロパティの値はディスプレイ仕様、または複数のディスプレイ仕様を含むリストかベクターであるべきです。同じ@code{display}プロパティ値内のディスプレイ仕様は、一般的にはそれらがカバーするテキストにたいして並行して適用されます。"

#. type: Plain text
#: original_texis/display.texi:4505
msgid "If several sources (overlays and/or a text property) specify values for the @code{display} property, only one of the values takes effect, following the rules of @code{get-char-property}.  @xref{Examining Properties}."
msgstr "複数のソース(オーバーレイおよび/またはテキストプロパティ)が@code{display}プロパティにたいして値を指定しますが1つの値だけが効果をもち、それは@code{get-char-property}のルールにしたがいます。@ref{Examining Properties}を参照してください。"

#. type: cindex
#: original_texis/display.texi:4506
#, no-wrap
msgid "display property, unsafe evaluation"
msgstr "display property, unsafe evaluation"

#. type: cindex
#: original_texis/display.texi:4507
#, no-wrap
msgid "security, and display specifications"
msgstr "security, and display specifications"

#. type: Plain text
#: original_texis/display.texi:4516
msgid "Some of the display specifications allow inclusion of Lisp forms, which are evaluated at display time.  This could be unsafe in certain situations, e.g., when the display specification was generated by some external program/agent.  Wrapping a display specification in a list that begins with the special symbol @code{disable-eval}, as in @w{@code{('disable-eval @var{spec})}}, will disable evaluation of any Lisp in @var{spec}, while still supporting all the other display property features."
msgstr "いくつかのディスプレイ仕様には、表示時に評価されるLispフォームを含めることができます。これは特定の状況では安全ではないかもしれません(ディスプレイ仕様が何らかの外部のプログラムやエージェントにより生成されたとき等)。@w{@code{('disable-eval @var{spec})}}のように特別なシンボル@code{disable-eval}で始まるリスト内にディスプレイ仕様をラップすることにより、他のすべてのディスプレイプロパティ機能をサポートしつつ、@var{spec}内の任意のLisp評価が無効になります。"

#. type: Plain text
#: original_texis/display.texi:4519
msgid "The rest of this section describes several kinds of display specifications and what they mean."
msgstr "このセクションの残りの部分では、複数の種類のディスプレイ仕様とそれらの意味を説明します。"

#. type: node
#: original_texis/display.texi:4527 original_texis/display.texi:4529
#, no-wrap
msgid "Replacing Specs"
msgstr "Replacing Specs"

#. type: menuentry
#: original_texis/display.texi:4527
msgid "Display specs that replace the text."
msgstr "テキストを置換するディスプレイspec。"

#. type: node
#: original_texis/display.texi:4527 original_texis/display.texi:4576
#, no-wrap
msgid "Specified Space"
msgstr "Specified Space"

#. type: menuentry
#: original_texis/display.texi:4527
msgid "Displaying one space with a specified width."
msgstr "指定された幅に1つのスペースを表示する。"

#. type: node
#: original_texis/display.texi:4527 original_texis/display.texi:4645
#, no-wrap
msgid "Pixel Specification"
msgstr "Pixel Specification"

#. type: menuentry
#: original_texis/display.texi:4527
msgid "Specifying space width or height in pixels."
msgstr "ピクセル単位でスペースの幅や高さを指定する。"

#. type: node
#: original_texis/display.texi:4527 original_texis/display.texi:4731
#, no-wrap
msgid "Other Display Specs"
msgstr "Other Display Specs"

#. type: menuentry
#: original_texis/display.texi:4527
msgid "Displaying an image; adjusting the height, spacing, and other properties of text."
msgstr "イメージの表示。高さ、スペーシング、その他のテキストプロパティの調整。"

#. type: node
#: original_texis/display.texi:4527 original_texis/display.texi:4844
#, no-wrap
msgid "Display Margins"
msgstr "Display Margins"

#. type: menuentry
#: original_texis/display.texi:4527
msgid "Displaying text or images to the side of the main text."
msgstr "メインテキスト側面へのテキストやイメージの表示。"

#. type: subsection
#: original_texis/display.texi:4530
#, no-wrap
msgid "Display Specs That Replace The Text"
msgstr "Display Specs That Replace The Text"

#. type: cindex
#: original_texis/display.texi:4531
#, no-wrap
msgid "replacing display specs"
msgstr "replacing display specs"

#. type: Plain text
#: original_texis/display.texi:4538
msgid "Some kinds of display specifications specify something to display instead of the text that has the property.  These are called @dfn{replacing} display specifications.  Emacs does not allow the user to interactively move point into the middle of buffer text that is replaced in this way."
msgstr "ある種のディスプレイ仕様は、そのプロパティをもつテキストのかわりに表示する何かを指定します。これらは@dfn{置換(replacing)}ディスプレイ仕様と呼ばれます。Emacsはユーザーにたいして、この方法で置換されたバッファーテキストの中間への対話的なポイント移動を許可しません。"

#. type: Plain text
#: original_texis/display.texi:4543
msgid "If a list of display specifications includes more than one replacing display specification, the first overrides the rest.  Replacing display specifications make most other display specifications irrelevant, since those don't apply to the replacement."
msgstr "ディスプレイ仕様のリストに1つ以上の置換ディスプレイ仕様が含まれる場合には、最初の置換ディスプレイ仕様が残りをオーバーライドします。置換ディスプレイ仕様は他のほとんどのディスプレイ仕様は置換を許容しないので、それらとは無関係です。"

#. type: Plain text
#: original_texis/display.texi:4550
msgid "For replacing display specifications, @dfn{the text that has the property} means all the consecutive characters that have the same Lisp object as their @code{display} property; these characters are replaced as a single unit.  If two characters have different Lisp objects as their @code{display} properties (i.e., objects which are not @code{eq}), they are handled separately."
msgstr "置換ディスプレイ仕様では、@dfn{そのプロパティをもつテキスト}とは、@code{display}プロパティとして同一のLispオブジェクトをもつ連続したすべての文字を意味します。これらの文字は単一の単位として置換されます。@code{display}プロパティに異なるLispオブジェクト(@code{eq}ではないオブジェクト)をもつ2つの文字は個別に処理されます。"

#. type: Plain text
#: original_texis/display.texi:4555
msgid "Here is an example which illustrates this point.  A string serves as a replacing display specification, which replaces the text that has the property with the specified string (@pxref{Other Display Specs}).  Consider the following function:"
msgstr "以下はこの要点を示すための例です。文字列が置換ディスプレイ仕様としての役割をもち、指定された文字列のプロパティをもつテキストを置換します(@ref{Other Display Specs}を参照)。以下の関数を考えてみてください:"

#. type: smallexample
#: original_texis/display.texi:4563
#, no-wrap
msgid ""
"(defun foo ()\n"
"  (dotimes (i 5)\n"
"    (let ((string (concat \"A\"))\n"
"          (start (+ i i (point-min))))\n"
"      (put-text-property start (1+ start) 'display string)\n"
"      (put-text-property start (+ 2 start) 'display string))))\n"
msgstr ""
"(defun foo ()\n"
"  (dotimes (i 5)\n"
"    (let ((string (concat \"A\"))\n"
"          (start (+ i i (point-min))))\n"
"      (put-text-property start (1+ start) 'display string)\n"
"      (put-text-property start (+ 2 start) 'display string))))\n"

#. type: Plain text
#: original_texis/display.texi:4575
msgid "This function gives each of the first ten characters in the buffer a @code{display} property which is a string @code{\"A\"}, but they don't all get the same string object.  The first two characters get the same string object, so they are replaced with one @samp{A}; the fact that the display property was assigned in two separate calls to @code{put-text-property} is irrelevant.  Similarly, the next two characters get a second string (@code{concat} creates a new string object), so they are replaced with one @samp{A}; and so on.  Thus, the ten characters appear as five A's."
msgstr "この関数はバッファー内の最初の10文字それぞれにたいして文字列@code{\"A\"}であるような@code{display}プロパティを与えますが、これらはすべて同じ文字列オブジェクトを取得しません。最初の2文字は同じ文字列オブジェクトなので1つの@samp{A}に置換されます。2つの別々の@code{put-text-property}呼び出しでそのディスプレイプロパティが割り当てられたという事実は無関係です。同様に次の2文字は2つ目の文字列(@code{concat}により新たに作成された文字列オブジェクト)を取得するので1つの@samp{A}で置換されて、...となります。したがって10文字は5つのAで表示されます。"

#. type: subsection
#: original_texis/display.texi:4577
#, no-wrap
msgid "Specified Spaces"
msgstr "Specified Spaces"

#. type: cindex
#: original_texis/display.texi:4578
#, no-wrap
msgid "spaces, specified height or width"
msgstr "spaces, specified height or width"

#. type: cindex
#: original_texis/display.texi:4579
#, no-wrap
msgid "variable-width spaces"
msgstr "variable-width spaces"

#. type: Plain text
#: original_texis/display.texi:4588
msgid "To display a space of specified width and/or height, use a display specification of the form @code{(space . @var{props})}, where @var{props} is a property list (a list of alternating properties and values).  You can put this property on one or more consecutive characters; a space of the specified height and width is displayed in place of @emph{all} of those characters.  These are the properties you can use in @var{props} to specify the weight of the space:"
msgstr "指定された幅および/または高さのスペースを表示するためには@code{(space . @var{props})}という形式のディスプレイ仕様を使用します。このプロパティを1つ以上の連続する文字にputすることができます。これら@emph{すべて}の文字のかわりに指定された高さと幅のスペースが表示されます。以下はスペースのウェイトを指定するために@var{props}内で使用できるプロパティです:"

#. type: item
#: original_texis/display.texi:4590 original_texis/display.texi:5260
#, no-wrap
msgid ":width @var{width}"
msgstr ":width @var{width}"

#. type: table
#: original_texis/display.texi:4595
msgid "If @var{width} is a number, it specifies that the space width should be @var{width} times the normal character width.  @var{width} can also be a @dfn{pixel width} specification (@pxref{Pixel Specification})."
msgstr "@var{width}が数字なら、それはスペースの幅が通常の文字幅の@var{width}倍であるべきかを指定する。@var{width}は@dfn{ピクセル幅(pixel width)}仕様でも可(@ref{Pixel Specification}を参照)。"

#. type: item
#: original_texis/display.texi:4596
#, no-wrap
msgid ":relative-width @var{factor}"
msgstr ":relative-width @var{factor}"

#. type: table
#: original_texis/display.texi:4603
msgid "Specifies that the width of the stretch should be computed from the first character in the group of consecutive characters that have the same @code{display} property.  The space width is the pixel width of that character, multiplied by @var{factor}.  (On text-mode terminals, the ``pixel width'' of a character is usually 1, but it could be more for TABs and double-width CJK characters.)"
msgstr "幅の広さは同じ@code{display}プロパティをもつ連続する文字のグループ内の最初の文字から計算される必要があることを指定する。スペースの幅はその文字のピクセル幅に@var{factor}を乗じた幅である(テキストモード端末では文字の``ピクセル幅''は通常は1だがTAB文字や2倍の幅をもつCJK文字では1以上になり得る)。"

#. type: item
#: original_texis/display.texi:4604
#, no-wrap
msgid ":align-to @var{hpos}"
msgstr ":align-to @var{hpos}"

#. type: table
#: original_texis/display.texi:4609
msgid "Specifies that the space should be wide enough to reach @var{hpos}.  If @var{hpos} is a number, it is measured in units of the normal character width.  @var{hpos} can also be a @dfn{pixel width} specification (@pxref{Pixel Specification})."
msgstr "スペースが@var{hpos}に達するほど十分に広くあるべきことを指定する。@var{hpos}が数字なら通常の文字幅の単位で量られる。@var{hpos}は@dfn{ピクセル幅(pixel width)}仕様でも可(@ref{Pixel Specification}を参照)。"

#. type: Plain text
#: original_texis/display.texi:4613
msgid "You should use one and only one of the above properties.  You can also specify the height of the space, with these properties:"
msgstr "上記プロパティのいずれか1つだけを使用するべきです。以下のプロパティでスペースの高さも指定できます:"

#. type: item
#: original_texis/display.texi:4615 original_texis/display.texi:5263
#, no-wrap
msgid ":height @var{height}"
msgstr ":height @var{height}"

#. type: table
#: original_texis/display.texi:4621
msgid "Specifies the height of the space.  If @var{height} is a number, it specifies that the space height should be @var{height} times the normal character height.  The @var{height} may also be a @dfn{pixel height} specification (@pxref{Pixel Specification})."
msgstr "スペースの高さを指定する。@var{height}が数字ならスペースの高さが通常の文字高さの@var{height}倍であるべきことを指定する。@var{height}は@dfn{ピクセル高さ仕様(pixel height)}でも可(@ref{Pixel Specification}を参照)。"

#. type: item
#: original_texis/display.texi:4622
#, no-wrap
msgid ":relative-height @var{factor}"
msgstr ":relative-height @var{factor}"

#. type: table
#: original_texis/display.texi:4625
msgid "Specifies the height of the space, multiplying the ordinary height of the text having this display specification by @var{factor}."
msgstr "このディスプレイ仕様をもつテキストの通常の高さに@var{factor}を乗じることによりスペースの高さを指定する。"

#. type: item
#: original_texis/display.texi:4626 original_texis/display.texi:5047
#, no-wrap
msgid ":ascent @var{ascent}"
msgstr ":ascent @var{ascent}"

#. type: table
#: original_texis/display.texi:4632
msgid "If the value of @var{ascent} is a non-negative number no greater than 100, it specifies that @var{ascent} percent of the height of the space should be considered as the ascent of the space---that is, the part above the baseline.  The ascent may also be specified in pixel units with a @dfn{pixel ascent} specification (@pxref{Pixel Specification})."
msgstr "@var{ascent}の値が非負の100以下の数字ならスペースの高さの@var{ascent}パーセントをスペースのアセント(ascent: 上方)、すなわちベースラインより上の部分とみなす。@dfn{ピクセルアセント(pixel ascent)}仕様によりアセントをピクセル単位で指定することも可(@ref{Pixel Specification}を参照)。"

#. type: Plain text
#: original_texis/display.texi:4636
msgid "Don't use both @code{:height} and @code{:relative-height} together."
msgstr "@code{:height}と@code{:relative-height}を両方同時に使用しないでください。"

#. type: Plain text
#: original_texis/display.texi:4640
msgid "The @code{:width} and @code{:align-to} properties are supported on non-graphic terminals, but the other space properties in this section are not."
msgstr "@code{:width}と@code{:align-to}プロパティは非グラフィック端末でサポートされますが、このセクションのその他のスペースプロパティはサポートされません。"

#. type: Plain text
#: original_texis/display.texi:4644
msgid "Note that space properties are treated as paragraph separators for the purposes of reordering bidirectional text for display.  @xref{Bidirectional Display}, for the details."
msgstr "スペースプロパティは双方向テキスト表示の並べ替えのためのパラグラフ区切りとして扱われます。詳細は@ref{Bidirectional Display}を参照してください。"

#. type: subsection
#: original_texis/display.texi:4646
#, no-wrap
msgid "Pixel Specification for Spaces"
msgstr "Pixel Specification for Spaces"

#. type: cindex
#: original_texis/display.texi:4647
#, no-wrap
msgid "spaces, pixel specification"
msgstr "spaces, pixel specification"

#. type: Plain text
#: original_texis/display.texi:4653
msgid "The value of the @code{:width}, @code{:align-to}, @code{:height}, and @code{:ascent} properties can be a special kind of expression that is evaluated during redisplay.  The result of the evaluation is used as an absolute number of pixels."
msgstr "プロパティ@code{:width}、@code{:align-to}、@code{:height}、@code{:ascent}の値は再表示の間に評価される特別な種類の式です。その評価の結果はピクセルの絶対数として使用されます。"

#. type: Plain text
#: original_texis/display.texi:4655
msgid "The following expressions are supported:"
msgstr "以下の式がサポートされています:"

#. type: group
#: original_texis/display.texi:4661
#, no-wrap
msgid ""
"  @var{expr} ::= @var{num} | (@var{num}) | @var{unit} | @var{elem} | @var{pos} | @var{image} | @var{xwidget} | @var{form}\n"
"  @var{num}  ::= @var{integer} | @var{float} | @var{symbol}\n"
"  @var{unit} ::= in | mm | cm | width | height\n"
msgstr ""
"  @var{expr} ::= @var{num} | (@var{num}) | @var{unit} | @var{elem} | @var{pos} | @var{image} | @var{xwidget} | @var{form}\n"
"  @var{num}  ::= @var{integer} | @var{float} | @var{symbol}\n"
"  @var{unit} ::= in | mm | cm | width | height\n"

#. type: group
#: original_texis/display.texi:4668
#, no-wrap
msgid ""
"  @var{elem} ::= left-fringe | right-fringe | left-margin | right-margin\n"
"        |  scroll-bar | text\n"
"  @var{pos}  ::= left | center | right\n"
"  @var{form} ::= (@var{num} . @var{expr}) | (@var{op} @var{expr} ...)\n"
"  @var{op}   ::= + | -\n"
msgstr ""
"  @var{elem} ::= left-fringe | right-fringe | left-margin | right-margin\n"
"        |  scroll-bar | text\n"
"  @var{pos}  ::= left | center | right\n"
"  @var{form} ::= (@var{num} . @var{expr}) | (@var{op} @var{expr} ...)\n"
"  @var{op}   ::= + | -\n"

#. type: Plain text
#: original_texis/display.texi:4678
msgid "The form @var{num} specifies a fraction of the default frame font height or width.  The form @code{(@var{num})} specifies an absolute number of pixels.  If @var{num} is a symbol, @var{symbol}, its buffer-local variable binding is used; that binding can be either a number or a cons cell of the forms shown above (including yet another cons cell whose @code{car} is a symbol that has a buffer-local binding)."
msgstr "フォーム@var{num}はデフォルトフレームフォントの高さか幅、フォーム@code{(@var{num})}は絶対ピクセル数を指定します。@var{num}がシンボル@var{symbol}なら、それのバッファーローカルな変数バインディングが使用されます。このバインディングには数字か上述の形式のコンスセル(他にもバッファーローカルなバインディングをもつシンボルが@code{car}であるような他のコンスセルも含む)が可能です。"

#. type: Plain text
#: original_texis/display.texi:4688
msgid "The @code{in}, @code{mm}, and @code{cm} units specify the number of pixels per inch, millimeter, and centimeter, respectively.  The @code{width} and @code{height} units correspond to the default width and height of the current face.  An image specification of the form @w{@code{(image . @var{props})}} (@pxref{Image Descriptors})  corresponds to the width or height of the specified image.  Similarly, an xwidget specification of the form @w{@code{(xwidget . @var{props})}} stands for the width or height of the specified xwidget.  @xref{Xwidgets}."
msgstr "単位@code{in}、@code{mm}、@code{cm}はそれぞれインチ、ミリメートル、センチメートルごとのピクセル数を指定します。単位@code{width}と@code{height}はそれぞれカレントフェイスのデフォルトの幅と高さに対応します。@w{@code{(image . @var{props})}}という形式のイメージ仕様は、指定されたイメージの幅や高さに対応します(@ref{Image Descriptors}を参照)。同様に@w{@code{(xwidget . @var{props})}}という形式のxwidget仕様は指定されたxwidgetび幅や高さを意味します。@ref{Xwidgets}を参照してください。"

#. type: Plain text
#: original_texis/display.texi:4695
msgid "The elements @code{left-fringe}, @code{right-fringe}, @code{left-margin}, @code{right-margin}, @code{scroll-bar}, and @code{text} specify the width of the corresponding area of the window.  When the window displays line numbers (@pxref{Size of Displayed Text}), the width of the @code{text} area is decreased by the screen space taken by the line-number display."
msgstr "要素@code{left-fringe}、@code{right-fringe}、@code{left-margin}、@code{right-margin}、@code{scroll-bar}、@code{text}はそのウィンドウの対応する領域の幅を指定します。そのウィンドウで行番号(@ref{Size of Displayed Text}を参照)を表示している際にはテキストエリアの幅は行番号の表示に要するスクリーンスペースで減じられます。"

#. type: Plain text
#: original_texis/display.texi:4702
msgid "The @code{left}, @code{center}, and @code{right} positions can be used with @code{:align-to} to specify a position relative to the left edge, center, or right edge of the text area.  When the window displays line numbers, the @code{left} and the @code{center} positions are offset to account for the screen space taken by the line-number display."
msgstr "位置@code{left}、@code{center}、@code{right}はテキストエリアの左端、中央、右端から相対的に位置を指定するために@code{:align-to}とともに使用できます。ウィンドウで行番号を表示している際の@code{left}と@code{center}の位置は、行番号の表示に要するスクリーンスペースを考慮したオフセットになります。"

#. type: Plain text
#: original_texis/display.texi:4710
msgid "Any of the above window elements (except @code{text}) can also be used with @code{:align-to} to specify that the position is relative to the left edge of the given area.  Once the base offset for a relative position has been set (by the first occurrence of one of these symbols), further occurrences of these symbols are interpreted as the width of the specified area.  For example, to align to the center of the left-margin, use"
msgstr "(@code{text}を除いた)上記ウィンドウ要素は与えられたエリアの左端から相対的に位置を指定するために@code{:align-to}とともに使用することもできます。(最初に出現するこれらシンボルのいずれかにより)相対的位置にたいするベースオフセットが一度セットがされると、残りのシンボルは指定されたエリアの幅として解釈されます。たとえば左マージンの中央に位置揃えするには以下のようにします"

#. type: example
#: original_texis/display.texi:4713
#, no-wrap
msgid ":align-to (+ left-margin (0.5 . left-margin))\n"
msgstr ":align-to (+ left-margin (0.5 . left-margin))\n"

#. type: Plain text
#: original_texis/display.texi:4720
msgid "If no specific base offset is set for alignment, it is always relative to the left edge of the text area.  For example, @samp{:align-to 0} in a header-line aligns with the first text column in the text area.  When the window displays line numbers, the text is considered to start where the space used for line-number display ends."
msgstr "位置揃えにたいしてベースオフセットが何も指定されなければ、テキストエリア左端にたいして常に相対的になります。たとえばヘッダーライン内の@samp{:align-to 0}はテキストエリアの最初のテキスト行に位置揃えします。ウィンドウで行番号を表示している際には、テキストは行番号表示の終了に使用されるスペースから開始するとみなされます。"

#. type: Plain text
#: original_texis/display.texi:4726
msgid "A value of the form @code{(@var{num} . @var{expr})} stands for the product of the values of @var{num} and @var{expr}.  For example, @code{(2 . in)} specifies a width of 2 inches, while @code{(0.5 .  @var{image})} specifies half the width (or height) of the specified @var{image} (which should be given by its image spec)."
msgstr "@code{(@var{num} . @var{expr})}という形式の値は、@var{num}と@var{expr}により生成される値を意味します。たとえば@code{(2 . in)}は2インチの幅、@code{(0.5 .  @var{image})}は指定された@var{image} (それのイメージspecにより与えられる必要がある)の幅(または高さ)の半分を指定します。"

#. type: Plain text
#: original_texis/display.texi:4730
msgid "The form @code{(+ @var{expr} ...)} adds up the value of the expressions.  The form @code{(- @var{expr} ...)} negates or subtracts the value of the expressions."
msgstr "フォーム@code{(+ @var{expr} ...)}は式の値を合計します。フォーム@code{(- @var{expr} ...)}は式の値を符号反転または減算します。"

#. type: subsection
#: original_texis/display.texi:4732
#, no-wrap
msgid "Other Display Specifications"
msgstr "Other Display Specifications"

#. type: Plain text
#: original_texis/display.texi:4736
msgid "Here are the other sorts of display specifications that you can use in the @code{display} text property."
msgstr "以下は@code{display}テキストプロパティ内で使用できる他のディスプレイ仕様です。"

#. type: var{#1}
#: original_texis/display.texi:4738
#, no-wrap
msgid "string"
msgstr "string"

#. type: table
#: original_texis/display.texi:4740
msgid "Display @var{string} instead of the text that has this property."
msgstr "このプロパティをもつテキストのかわりに@var{string}を表示する。"

#. type: table
#: original_texis/display.texi:4743
msgid "Recursive display specifications are not supported---@var{string}'s @code{display} properties, if any, are not used."
msgstr "再帰的なディスプレイ仕様はサポートされない。つまり@var{string}の@code{display}プロパティがあっても使用されない。"

#. type: item
#: original_texis/display.texi:4744
#, no-wrap
msgid "(image . @var{image-props})"
msgstr "(image . @var{image-props})"

#. type: table
#: original_texis/display.texi:4748
msgid "This kind of display specification is an image descriptor (@pxref{Images}).  When used as a display specification, it means to display the image instead of the text that has the display specification."
msgstr "この種のディスプレイ仕様はイメージディスクリプタである(@ref{Images}を参照)。ディスプレイ仕様として使用時には、そのディスプレイ仕様をもつテキストのかわりに表示するイメージを意味する。"

#. type: item
#: original_texis/display.texi:4749
#, no-wrap
msgid "(slice @var{x} @var{y} @var{width} @var{height})"
msgstr "(slice @var{x} @var{y} @var{width} @var{height})"

#. type: table
#: original_texis/display.texi:4757
msgid "This specification together with @code{image} specifies a @dfn{slice} (a partial area) of the image to display.  The elements @var{y} and @var{x} specify the top left corner of the slice, within the image; @var{width} and @var{height} specify the width and height of the slice.  Integers are numbers of pixels.  A floating-point number in the range 0.0--1.0 stands for that fraction of the width or height of the entire image."
msgstr "この仕様は@code{image}とともに、表示するイメージの@dfn{スライス(slice: イメージの特定の領域)}を指定する。要素@var{y}と@var{x}はイメージ内での左上隅、@var{width}と@var{height}はそのスライスの幅と高さを指定する。整数はピクセル数、0.0から1.0までの浮動小数点数はイメージ全体の幅や高さの割合を意味する。"

#. type: item
#: original_texis/display.texi:4758
#, no-wrap
msgid "((margin nil) @var{string})"
msgstr "((margin nil) @var{string})"

#. type: table
#: original_texis/display.texi:4764
msgid "A display specification of this form means to display @var{string} instead of the text that has the display specification, at the same position as that text.  It is equivalent to using just @var{string}, but it is done as a special case of marginal display (@pxref{Display Margins})."
msgstr "この形式のディスプレイ仕様は、このディスプレイ仕様をもつテキストのかわりにテキストと同じ位置に表示する@var{string}を意味する。これは単に@var{string}を使用するのと同じだが、マージン表示(@ref{Display Margins}を参照)の特殊なケースとして行われる点が異なる。"

#. type: item
#: original_texis/display.texi:4765
#, no-wrap
msgid "(left-fringe @var{bitmap} @r{[}@var{face}@r{]})"
msgstr "(left-fringe @var{bitmap} @r{[}@var{face}@r{]})"

#. type: itemx
#: original_texis/display.texi:4766
#, no-wrap
msgid "(right-fringe @var{bitmap} @r{[}@var{face}@r{]})"
msgstr "(right-fringe @var{bitmap} @r{[}@var{face}@r{]})"

#. type: table
#: original_texis/display.texi:4772
msgid "This display specification on any character of a line of text causes the specified @var{bitmap} be displayed in the left or right fringes for that line, instead of the characters that have the display specification.  The optional @var{face} specifies the colors to be used for the bitmap.  @xref{Fringe Bitmaps}, for the details."
msgstr "テキスト行の任意の文字がこのディスプレイ仕様をもつ場合には、その文字のかわりにその行の左や右のフリンジに表示する@var{bitmap}を指定する。オプションの@var{face}はビットマップにたいして使用するカラーを指定する。詳細は@ref{Fringe Bitmaps}を参照のこと。"

#. type: item
#: original_texis/display.texi:4773
#, no-wrap
msgid "(space-width @var{factor})"
msgstr "(space-width @var{factor})"

#. type: table
#: original_texis/display.texi:4779
msgid "This display specification affects all the space characters within the text that has the specification.  It displays all of these spaces @var{factor} times as wide as normal.  The element @var{factor} should be an integer or float.  Characters other than spaces are not affected at all; in particular, this has no effect on tab characters."
msgstr "このディスプレイ仕様は、この仕様をもつテキスト内のすべてのスペース文字に効果を及ぼす。これらすべてのスペースは通常の幅の@var{factor}倍の幅で表示される。要素@var{factor}は整数か浮動小数点数であること。スペース以外の文字は影響を受けない。特にこれはタブ文字に影響を与えない。"

#. type: item
#: original_texis/display.texi:4780
#, no-wrap
msgid "(height @var{height})"
msgstr "(height @var{height})"

#. type: table
#: original_texis/display.texi:4783
msgid "This display specification makes the text taller or shorter.  Here are the possibilities for @var{height}:"
msgstr "このディスプレイ仕様はテキストを高く(taller)、または低く(shorter)する。@var{height}には以下を指定できる:"

#. type: code{#1}
#: original_texis/display.texi:4785
#, no-wrap
msgid "(+ @var{n})"
msgstr "(+ @var{n})"

#. type: table
#: original_texis/display.texi:4792
msgid "This means to use a font that is @var{n} steps larger.  A @dfn{step} is defined by the set of available fonts---specifically, those that match what was otherwise specified for this text, in all attributes except height.  Each size for which a suitable font is available counts as another step.  @var{n} should be an integer."
msgstr "これは@var{n}ステップ大きいフォントの使用を意味する。@dfn{ステップ}は利用可能なフォントのセットから定義される。利用可能なフォントとは、具体的には、このような場合でなければ、heightを除いてそのテキストに指定されたすべての属性にマッチするフォント。適切なフォントの各サイズは別のステップとして利用可能とみなされる。@var{n}は整数であること。"

#. type: code{#1}
#: original_texis/display.texi:4793
#, no-wrap
msgid "(- @var{n})"
msgstr "(- @var{n})"

#. type: table
#: original_texis/display.texi:4795
msgid "This means to use a font that is @var{n} steps smaller."
msgstr "これは@var{n}ステップ小さいフォントの使用を意味する。"

#. type: item
#: original_texis/display.texi:4796
#, no-wrap
msgid "a number, @var{factor}"
msgstr "@var{factor} (数値)"

#. type: table
#: original_texis/display.texi:4799
msgid "A number, @var{factor}, means to use a font that is @var{factor} times as tall as the default font."
msgstr "数値@var{factor}はデフォルトフォントの@var{factor}倍高いフォントの使用を意味する。"

#. type: item
#: original_texis/display.texi:4800
#, no-wrap
msgid "a symbol, @var{function}"
msgstr "@var{function} (シンボル)"

#. type: table
#: original_texis/display.texi:4803
msgid "A symbol is a function to compute the height.  It is called with the current height as argument, and should return the new height to use."
msgstr "高さを計算する関数。この関数はカレントの高さを引数として呼び出されて、使用する新たな高さをリターンすること。"

#. type: item
#: original_texis/display.texi:4804
#, no-wrap
msgid "anything else, @var{form}"
msgstr "@var{form} (上記以外)"

#. type: table
#: original_texis/display.texi:4808
msgid "If the @var{height} value doesn't fit the previous possibilities, it is a form.  Emacs evaluates it to get the new height, with the symbol @code{height} bound to the current specified font height."
msgstr "@var{height}の値が上記のいずれにもマッチしなければ、それはフォームである。Emacsは@code{height}をカレントで指定されたフォントの高さにバインドして新たな高さを取得するためにフォームを評価する。"

#. type: item
#: original_texis/display.texi:4810
#, no-wrap
msgid "(raise @var{factor})"
msgstr "(raise @var{factor})"

#. type: table
#: original_texis/display.texi:4814
msgid "This kind of display specification raises or lowers the text it applies to, relative to the baseline of the line.  It is mainly meant to support display of subscripts and superscripts."
msgstr "この種のディスプレイ仕様は、その行のベースラインに相対的にテキストを上(raise)、または下(lower)に指定する。これは主に上付き文字と下付き文字を意図している。"

#. type: table
#: original_texis/display.texi:4819
msgid "The @var{factor} must be a number, which is interpreted as a multiple of the height of the affected text.  If it is positive, that means to display the characters raised.  If it is negative, that means to display them lower down."
msgstr "@var{factor}は影響を受けるテキストの高さにたいする乗数として解釈される数値でなければならない。これが正なら上、負なら下に文字を表示することを意味する。"

#. type: table
#: original_texis/display.texi:4827
msgid "Note that if the text also has a @code{height} display specification, which was specified before (i.e.@: to the left of) @code{raise}, the latter will affect the amount of raising or lowering in pixels, because that is based on the height of the text being raised.  Therefore, if you want to display a sub- or superscript that is smaller than the normal text height, consider specifying @code{raise} before @code{height}."
msgstr "テキストが@code{raise}より前(左)に指定された@code{height}ディスプレイ仕様をもつ場合には、テキストが上下される量はテキストの高さにもとづくので、上下されるピクセル数には@code{raise}が効果をもつ。したがって通常のテキスト高さより小さい上付きや下付きで表示したければ、@code{height}の前に@code{raise}を指定することを考慮するべきである。"

#. type: Plain text
#: original_texis/display.texi:4843
msgid "You can make any display specification conditional.  To do that, package it in another list of the form @code{(when @var{condition} . @var{spec})}.  Then the specification @var{spec} applies only when @var{condition} evaluates to a non-@code{nil} value.  During the evaluation, @code{object} is bound to the string or buffer having the conditional @code{display} property.  @code{position} and @code{buffer-position} are bound to the position within @code{object} and the buffer position where the @code{display} property was found, respectively.  Both positions can be different when @code{object} is a string."
msgstr "任意のディスプレイ仕様にたいして条件を作成できます。これを行うには、@code{(when @var{condition} . @var{spec})}という形式の別リスト内にパッケージします。この場合には、仕様@var{spec}は@var{condition}が非@code{nil}値に評価されたときだけ適用されます。この評価の間に@code{object}は条件つき@code{display}プロパティをもつ文字列、またはバッファーにバインドされます。@code{position}と@code{buffer-position}はそれぞれ@code{object}内の位置、および@code{display}プロパティが見つかったバッファー位置にバインドされます。@code{object}が文字列の際には両者の位置は異なるかもしれません。"

#. type: subsection
#: original_texis/display.texi:4845
#, no-wrap
msgid "Displaying in the Margins"
msgstr "Displaying in the Margins"

#. type: cindex
#: original_texis/display.texi:4846
#, no-wrap
msgid "display margins"
msgstr "display margins"

#. type: cindex
#: original_texis/display.texi:4847
#, no-wrap
msgid "margins, display"
msgstr "margins, display"

#. type: Plain text
#: original_texis/display.texi:4854
msgid "A buffer can have blank areas called @dfn{display margins} on the left and on the right.  Ordinary text never appears in these areas, but you can put things into the display margins using the @code{display} property.  There is currently no way to make text or images in the margin mouse-sensitive."
msgstr "バッファーはその左側と右側に@dfn{ディスプレイマージン(display margins)}と呼ばれるブランクエリアをもつことができます。それらのエリア内には通常はテキストが出現することはありませんが、@code{display}プロパティを使用してディスプレイマージン内に何かを配置することができます。現在のところマージン内のテキストやイメージをマウスセンシティブにする方法はありません。"

#. type: Plain text
#: original_texis/display.texi:4860
msgid "The way to display something in the margins is to specify it in a margin display specification in the @code{display} property of some text.  This is a replacing display specification, meaning that the text you put it on does not get displayed; the margin display appears, but that text does not."
msgstr "マージン内に何かを表示するにはテキストの@code{display}プロパティのマージン表示仕様(margin display specification)で指定します。これは配置したテキストが表示されないことを意味する置換表示仕様です。マージン表示は表示されますがそのテキストは表示されません。"

#. type: Plain text
#: original_texis/display.texi:4866
msgid "A margin display specification looks like @code{((margin right-margin) @var{spec})} or @code{((margin left-margin) @var{spec})}.  Here, @var{spec} is another display specification that says what to display in the margin.  Typically it is a string of text to display, or an image descriptor."
msgstr "マージン表示仕様とは@code{((margin right-margin) @var{spec})}や@code{((margin left-margin) @var{spec})}のようなものです。ここで@var{spec}はマージン内に何を表示するかを告げる別の表示仕様です。典型的にはこれは表示するテキスト文字列やイメージディスクリプタです。"

#. type: Plain text
#: original_texis/display.texi:4871
msgid "To display something in the margin @emph{in association with} certain buffer text, without altering or preventing the display of that text, put a @code{before-string} property on the text and put the margin display specification on the contents of the before-string."
msgstr "特定のバッファーテキストに@emph{割り当てられた}マージンに何かを表示するためには、そのテキストに@code{before-string}プロパティを付してコンテンツとしてマージン表示仕様をputします。"

#. type: Plain text
#: original_texis/display.texi:4878
msgid "Note that if the string to be displayed in the margin doesn't specify a face, its face is determined using the same rules and priorities as it is for strings displayed in the text area (@pxref{Displaying Faces}).  If this results in undesirable ``leaking'' of faces into the margin, make sure the string has an explicit face specified for it."
msgstr "マージン内に表示する文字列がフェイスを指定しなければ、テキストエリア内に表示される文字列に準じたいくつかの規則と優先度によりフェイスが決定されることに注意してください(@ref{Displaying Faces}を参照)。これが望ましくないマージンへのフェイスの``漏洩''をもたらすようなら、文字列が文字列用に明示的なフェイスを確実にもつようにしてください。"

#. type: Plain text
#: original_texis/display.texi:4882
msgid "Before the display margins can display anything, you must give them a nonzero width.  The usual way to do that is to set these variables:"
msgstr "ディスプレイマージンが何かを表示可能になる前に、それらに非0の幅を与えなければなりません。これを行う通常の方法は以下の変数をセットする方法です:"

#. type: defvar
#: original_texis/display.texi:4883
#, no-wrap
msgid "left-margin-width"
msgstr "left-margin-width"

#. type: defvar
#: original_texis/display.texi:4887
msgid "This variable specifies the width of the left margin, in character cell (a.k.a.@: ``column'') units.  It is buffer-local in all buffers.  A value of @code{nil} means no left marginal area."
msgstr "この変数は左マージンの幅を文字セル(別名は``列'')単位で指定する。これ、すべてのバッファーでバッファーローカルである。値@code{nil}は左マージンエリアなしを意味する。"

#. type: defvar
#: original_texis/display.texi:4889
#, no-wrap
msgid "right-margin-width"
msgstr "right-margin-width"

#. type: defvar
#: original_texis/display.texi:4893
msgid "This variable specifies the width of the right margin, in character cell units.  It is buffer-local in all buffers.  A value of @code{nil} means no right marginal area."
msgstr "この変数は右マージンの幅を文字セル単位で指定する。これはすべてのバッファーでバッファーローカルである。値@code{nil}は右マージンエリアなしを意味する。"

#. type: Plain text
#: original_texis/display.texi:4899
msgid "Setting these variables does not immediately affect the window.  These variables are checked when a new buffer is displayed in the window.  Thus, you can make changes take effect by calling @code{set-window-buffer}."
msgstr "これらの変数をセットしてもウィンドウには即座には反映されません。これらの変数はウィンドウ内に新たなバッファーを表示する際にチェックされます。したがって@code{set-window-buffer}を呼び出すことにより変更を反映することができます。"

#. type: Plain text
#: original_texis/display.texi:4901
msgid "You can also set the margin widths immediately."
msgstr "マージン幅を即座にセットすることもできます。"

#. type: defun
#: original_texis/display.texi:4902
#, no-wrap
msgid "set-window-margins window left &optional right"
msgstr "set-window-margins window left &optional right"

#. type: defun
#: original_texis/display.texi:4906
msgid "This function specifies the margin widths for window @var{window}, in character cell units.  The argument @var{left} controls the left margin, and @var{right} controls the right margin (default @code{0})."
msgstr "この関数はウィンドウ@var{window}のマージン幅、文字セル単位で指定する。引数@var{left}は左マージン、@var{right}は右マージン(デフォルトは@code{0})を制御する。"

#. type: defun
#: original_texis/display.texi:4912
#, no-wrap
msgid "window-margins &optional window"
msgstr "window-margins &optional window"

#. type: defun
#: original_texis/display.texi:4919
msgid "This function returns the width of the left and right margins of @var{window} as a cons cell of the form @w{@code{(@var{left} . @var{right})}}.  If one of the two marginal areas does not exist, its width is returned as @code{nil}; if neither of the two margins exist, the function returns @code{(nil)}.  If @var{window} is @code{nil}, the selected window is used."
msgstr "この関数は@var{window}の左マージンと右マージンの幅を@w{@code{(@var{left} . @var{right})}}という形式のコンスセルでリターンする。2つのマージンエリアのいずれか一方が存在しなければ幅は@code{nil}でリターンされる。2つのマージンがどちらも存在しなければ、この関数は@code{(nil)}をリターンする。@var{window}が@code{nil}なら選択されたウィンドウが使用される。"

#. type: cindex
#: original_texis/display.texi:4923
#, no-wrap
msgid "images in buffers"
msgstr "images in buffers"

#. type: Plain text
#: original_texis/display.texi:4928
msgid "To display an image in an Emacs buffer, you must first create an image descriptor, then use it as a display specifier in the @code{display} property of text that is displayed (@pxref{Display Property})."
msgstr "Emacsバッファー内にイメージを表示するためには最初にイメージディスクリプタを作成して、それを表示されるテキストの@code{display}プロパティ(@ref{Display Property}を参照)内のディスプレイ指定子として使用しなければなりません。"

#. type: Plain text
#: original_texis/display.texi:4935
msgid "Emacs is usually able to display images when it is run on a graphical terminal.  Images cannot be displayed in a text terminal, on certain graphical terminals that lack the support for this, or if Emacs is compiled without image support.  You can use the function @code{display-images-p} to determine if images can in principle be displayed (@pxref{Display Feature Testing})."
msgstr "Emacsはグラフィカルな端末で実行時には、通常はイメージの表示が可能です。テキスト端末、イメージサポートを欠く特定のグラフィカル端末、またはイメージサポートなしでコンパイルされたEmacsではイメージを表示できません。原則的にイメージが表示可能か判断するためには関数@code{display-images-p}を使用できます(@ref{Display Feature Testing}を参照)。"

#. type: subsection
#: original_texis/display.texi:4948 original_texis/display.texi:4950
#: original_texis/display.texi:4951
#, no-wrap
msgid "Image Formats"
msgstr "Image Formats"

#. type: menuentry
#: original_texis/display.texi:4948
msgid "Supported image formats."
msgstr "サポートされるイメージフォーマット。"

#. type: subsection
#: original_texis/display.texi:4948 original_texis/display.texi:4998
#: original_texis/display.texi:4999
#, no-wrap
msgid "Image Descriptors"
msgstr "Image Descriptors"

#. type: menuentry
#: original_texis/display.texi:4948
msgid "How to specify an image for use in @code{:display}."
msgstr "@code{:display}内で使用されるイメージの指定方法。"

#. type: subsection
#: original_texis/display.texi:4948 original_texis/display.texi:5208
#: original_texis/display.texi:5209
#, no-wrap
msgid "XBM Images"
msgstr "XBM Images"

#. type: menuentry
#: original_texis/display.texi:4948
msgid "Special features for XBM format."
msgstr "XBMフォーマット用の特別な機能。"

#. type: subsection
#: original_texis/display.texi:4948 original_texis/display.texi:5267
#: original_texis/display.texi:5268
#, no-wrap
msgid "XPM Images"
msgstr "XPM Images"

#. type: menuentry
#: original_texis/display.texi:4948
msgid "Special features for XPM format."
msgstr "XPMフォーマット用の特別な機能。"

#. type: subsection
#: original_texis/display.texi:4948 original_texis/display.texi:5283
#: original_texis/display.texi:5284
#, no-wrap
msgid "ImageMagick Images"
msgstr "ImageMagick Images"

#. type: menuentry
#: original_texis/display.texi:4948
msgid "Special features available through ImageMagick."
msgstr "ImageMagickを通じて利用できる特別な機能。"

#. type: subsection
#: original_texis/display.texi:4948 original_texis/display.texi:5393
#: original_texis/display.texi:5394
#, no-wrap
msgid "SVG Images"
msgstr "SVG Images"

#. type: menuentry
#: original_texis/display.texi:4948
msgid "Creating and manipulating SVG images."
msgstr "SVGイメージの作成と操作。"

#. type: subsection
#: original_texis/display.texi:4948 original_texis/display.texi:5551
#: original_texis/display.texi:5552
#, no-wrap
msgid "Other Image Types"
msgstr "Other Image Types"

#. type: menuentry
#: original_texis/display.texi:4948
msgid "Various other formats are supported."
msgstr "サポートされる他のさまざまなフォーマット。"

#. type: subsection
#: original_texis/display.texi:4948 original_texis/display.texi:5592
#: original_texis/display.texi:5593
#, no-wrap
msgid "Defining Images"
msgstr "Defining Images"

#. type: menuentry
#: original_texis/display.texi:4948
msgid "Convenient ways to define an image for later use."
msgstr "後で使用するためにイメージを定義する便利な方法。"

#. type: subsection
#: original_texis/display.texi:4948 original_texis/display.texi:5733
#: original_texis/display.texi:5734
#, no-wrap
msgid "Showing Images"
msgstr "Showing Images"

#. type: menuentry
#: original_texis/display.texi:4948
msgid "Convenient ways to display an image once it is defined."
msgstr "一度定義されたイメージを表示するための便利な方法。"

#. type: subsection
#: original_texis/display.texi:4948 original_texis/display.texi:5862
#: original_texis/display.texi:5863
#, no-wrap
msgid "Multi-Frame Images"
msgstr "Multi-Frame Images"

#. type: menuentry
#: original_texis/display.texi:4948
msgid "Some images contain more than one frame."
msgstr "1つ以上のフレームを含むイメージ。"

#. type: subsection
#: original_texis/display.texi:4948 original_texis/display.texi:5925
#: original_texis/display.texi:5926
#, no-wrap
msgid "Image Cache"
msgstr "Image Cache"

#. type: menuentry
#: original_texis/display.texi:4948
msgid "Internal mechanisms of image display."
msgstr "イメージ表示の内部的メカニズム。"

#. type: cindex
#: original_texis/display.texi:4952
#, no-wrap
msgid "image formats"
msgstr "image formats"

#. type: cindex
#: original_texis/display.texi:4953
#, no-wrap
msgid "image types"
msgstr "image types"

#. type: Plain text
#: original_texis/display.texi:4961
msgid "Emacs can display a number of different image formats.  Some of these image formats are supported only if particular support libraries are installed.  On some platforms, Emacs can load support libraries on demand; if so, the variable @code{dynamic-library-alist} can be used to modify the set of known names for these dynamic libraries.  @xref{Dynamic Libraries}."
msgstr "Emacsはいくつかの異なるフォーマットのイメージを表示できます。これらのイメージフォーマットのいくつかは、特定のサポートライブラリーがインストールされている場合のみサポートされます。いくつかのプラットフォームではEmacsはオンデマンドでサポートライブラリーをロードできます。そのような場合には、それらの動的ライブラリーにたいする既知の名前セットを変更するために変数@code{dynamic-library-alist}を使用できます。@ref{Dynamic Libraries}を参照してください。"

#. type: Plain text
#: original_texis/display.texi:4967
msgid "Supported image formats (and the required support libraries) include PBM and XBM (which do not depend on support libraries and are always available), XPM (@code{libXpm}), GIF (@code{libgif} or @code{libungif}), JPEG (@code{libjpeg}), TIFF (@code{libtiff}), PNG (@code{libpng}), and SVG (@code{librsvg})."
msgstr "サポートされるイメージフォーマット(と要求されるサポートライブラリー)にはPBMとXBM(サポートライブラリーに依存せず常に利用可能)、XPM (@code{libXpm})、GIF (@code{libgif}か@code{libungif})、JPEG (@code{libjpeg})、TIFF (@code{libtiff})、PNG (@code{libpng})、SVG (@code{librsvg})が含まれます。"

#. type: Plain text
#: original_texis/display.texi:4972
msgid "Each of these image formats is associated with an @dfn{image type symbol}.  The symbols for the above formats are, respectively, @code{pbm}, @code{xbm}, @code{xpm}, @code{gif}, @code{jpeg}, @code{tiff}, @code{png}, and @code{svg}."
msgstr "これらのイメージフォーマットはそれぞれ@dfn{イメージタイプシンボル(image type symbol)}に関連付けられます。上記のフォーマットにたいするシンボルは順に@code{pbm}、@code{xbm}、@code{xpm}、@code{gif}、@code{jpeg}、@code{tiff}、@code{png}、@code{svg}になります。"

#. type: Plain text
#: original_texis/display.texi:4977
msgid "Furthermore, if you build Emacs with ImageMagick (@code{libMagickWand}) support, Emacs can display any image format that ImageMagick can.  @xref{ImageMagick Images}.  All images displayed via ImageMagick have type symbol @code{imagemagick}."
msgstr "さらにImageMagick(@code{libMagickWand})のサポートつきでEmacsをビルドした場合には、EmacsはImageMagickが表示可能なイメージフォーマットを表示できます。@ref{ImageMagick Images}を参照してください。ImageMagickを通じて表示されるすべてのイメージはタイプシンボル@code{imagemagick}をもちます。"

#. type: defvar
#: original_texis/display.texi:4978
#, no-wrap
msgid "image-types"
msgstr "image-types"

#. type: defvar
#: original_texis/display.texi:4981
msgid "This variable contains a list of type symbols for image formats which are potentially supported in the current configuration."
msgstr "この変数はカレント構成で潜在的にサポートされるイメージフォーマットにたいするタイプシンボルのリストを含む。"

#. type: defvar
#: original_texis/display.texi:4986
msgid "``Potentially'' means that Emacs knows about the image types, not necessarily that they can be used (for example, they could depend on unavailable dynamic libraries).  To know which image types are really available, use @code{image-type-available-p}."
msgstr "``潜在的''とはEmacsがそのイメージタイプを知っていることを意味しており、実際に使用可能である必要はない(たとえば動的ライブラリーが利用できないせいかもしれない)。どのイメージタイプが実際に利用できるか知るためには@code{image-type-available-p}を使用すること。"

#. type: defun
#: original_texis/display.texi:4988
#, no-wrap
msgid "image-type-available-p type"
msgstr "image-type-available-p type"

#. type: defun
#: original_texis/display.texi:4991
msgid "This function returns non-@code{nil} if images of type @var{type} can be loaded and displayed.  @var{type} must be an image type symbol."
msgstr "この関数はタイプ@var{type}のイメージのロードと表示が可能なら非@code{nil}をリターンする。@var{type}はイメージタイプシンボルであること。"

#. type: defun
#: original_texis/display.texi:4996
msgid "For image types whose support libraries are statically linked, this function always returns @code{t}.  For image types whose support libraries are dynamically loaded, it returns @code{t} if the library could be loaded and @code{nil} otherwise."
msgstr "サポートライブラリーが静的にリンクされたイメージタイプにたいして、この関数は常に@code{t}をリターンする。サポートライブラリーが動的にロードされるイメージタイプにたいしてはライブラリーがロード可能なら@code{t}、それ以外なら@code{nil}をリターンする。"

#. type: cindex
#: original_texis/display.texi:5000
#, no-wrap
msgid "image descriptor"
msgstr "image descriptor"

#. type: Plain text
#: original_texis/display.texi:5007
msgid "An @dfn{image descriptor} is a list which specifies the underlying data for an image, and how to display it.  It is typically used as the value of a @code{display} overlay or text property (@pxref{Other Display Specs}); but @xref{Showing Images}, for convenient helper functions to insert images into buffers."
msgstr "@dfn{イメージディスクリプタ(image descriptor)}とは、イメージにたいする基礎的なデータと表示する方法を指定するリストです。これは通常はオーバーレイプロパティかテキストプロパティ@code{display}(@ref{Other Display Specs}を参照)の値を通じて使用されますが、バッファーにイメージを挿入する便利なヘルパー関数については@ref{Showing Images}を参照してください。"

#. type: Plain text
#: original_texis/display.texi:5012
msgid "Each image descriptor has the form @code{(image . @var{props})}, where @var{props} is a property list of alternating keyword symbols and values, including at least the pair @code{:type @var{type}} that specifies the image type."
msgstr "イメージディスクリプタはそれぞれ@code{(image . @var{props})}という形式をもちます。ここで@var{props}はキーワードシンボルと値のペアーからなるプロパティリストであり、少なくともそのイメージタイプを指定するペアー@code{:type @var{type}}を含みます。"

#. type: Plain text
#: original_texis/display.texi:5016
msgid "The following is a list of properties that are meaningful for all image types (there are also properties which are meaningful only for certain image types, as documented in the following subsections):"
msgstr "以下はすべてのイメージタイプにたいして意味のあるプロパティのリストです(以降のサブセクションで説明するように特定のイメージタイプにたいしてのみ意味があるプロパティも存在する):"

#. type: item
#: original_texis/display.texi:5018
#, no-wrap
msgid ":type @var{type}"
msgstr ":type @var{type}"

#. type: table
#: original_texis/display.texi:5020
msgid "The image type."
msgstr "イメージタイプ。"

#. type: ifnottex
#: original_texis/display.texi:5022
msgid "@xref{Image Formats}."
msgstr "@ref{Image Formats}を参照のこと。"

#. type: table
#: original_texis/display.texi:5024
msgid "Every image descriptor must include this property."
msgstr "すべてのイメージディスクリプタは。このプロパティを含まなければならない。"

#. type: item
#: original_texis/display.texi:5025
#, no-wrap
msgid ":file @var{file}"
msgstr ":file @var{file}"

#. type: table
#: original_texis/display.texi:5028
msgid "This says to load the image from file @var{file}.  If @var{file} is not an absolute file name, it is expanded in @code{data-directory}."
msgstr "これはファイル@var{file}からイメージをロードすることを意味する。@var{file}が絶対ファイル名でなければ@code{data-directory}内で展開される。"

#. type: item
#: original_texis/display.texi:5029 original_texis/display.texi:5236
#, no-wrap
msgid ":data @var{data}"
msgstr ":data @var{data}"

#. type: table
#: original_texis/display.texi:5032
msgid "This specifies the raw image data.  Each image descriptor must have either @code{:data} or @code{:file}, but not both."
msgstr "これはrawイメージデータを指定する。すべてのイメージディスクリプタは@code{:data}か@code{:file}のいずれかをもたなければならないが両方もつことはできない。"

#. type: table
#: original_texis/display.texi:5038
msgid "For most image types, the value of a @code{:data} property should be a string containing the image data.  Some image types do not support @code{:data}; for some others, @code{:data} alone is not enough, so you need to use other image properties along with @code{:data}.  See the following subsections for details."
msgstr "ほとんどのイメージタイプにたいして、@code{:data}プロパティの値はイメージデータを含む文字列であること。いくつかのイメージタイプは@code{:data}をサポートしない。それ以外のイメージタイプにたいしては@code{:data}単独では不十分であり、@code{:data}とともに他のイメージプロパティを使用する必要がある。詳細は以下のサブセクションを参照のこと。"

#. type: item
#: original_texis/display.texi:5039
#, no-wrap
msgid ":margin @var{margin}"
msgstr ":margin @var{margin}"

#. type: table
#: original_texis/display.texi:5046
msgid "This specifies how many pixels to add as an extra margin around the image.  The value, @var{margin}, must be a non-negative number, or a pair @code{(@var{x} . @var{y})} of such numbers.  If it is a pair, @var{x} specifies how many pixels to add horizontally, and @var{y} specifies how many pixels to add vertically.  If @code{:margin} is not specified, the default is zero."
msgstr "これはイメージ周囲に余分なマージンとして何ピクセル追加するかを指定する。値@var{margin}は非負の数値か、そのような数値のペアー@code{(@var{x} . @var{y})}でなければならない。ペアーなら@var{x}は水平方向に追加するピクセル数、@var{y}は垂直方向に追加するピクセル数を指定する。@code{:margin}が指定されない場合のデフォルトは0。"

#. type: table
#: original_texis/display.texi:5052
msgid "This specifies the amount of the image's height to use for its ascent---that is, the part above the baseline.  The value, @var{ascent}, must be a number in the range 0 to 100, or the symbol @code{center}."
msgstr "これはイメージのアセント(ベースラインの上の部分)に使用するイメージの高さの分量を指定する。値@var{ascent}は0から100の数値かシンボル@code{center}でなければならない。"

#. type: table
#: original_texis/display.texi:5055
msgid "If @var{ascent} is a number, that percentage of the image's height is used for its ascent."
msgstr "@var{ascent}が数値ならアセントに使用するイメージの高さのパーセンテージであること。"

#. type: table
#: original_texis/display.texi:5060
msgid "If @var{ascent} is @code{center}, the image is vertically centered around a centerline which would be the vertical centerline of text drawn at the position of the image, in the manner specified by the text properties and overlays that apply to the image."
msgstr "@var{ascent}が@code{center}なら、イメージにたいしてテキストプロパティやオーバーレイプロパティにより指定される方法で、センターライン(そのイメージ位置にテキストを描画する際の垂直方向のセンターライン)の垂直方向中心にイメージが配置される。"

#. type: table
#: original_texis/display.texi:5062
msgid "If this property is omitted, it defaults to 50."
msgstr "このプロパティが省略された場合のデフォルトは50。"

#. type: item
#: original_texis/display.texi:5063
#, no-wrap
msgid ":relief @var{relief}"
msgstr ":relief @var{relief}"

#. type: table
#: original_texis/display.texi:5068
msgid "This adds a shadow rectangle around the image.  The value, @var{relief}, specifies the width of the shadow lines, in pixels.  If @var{relief} is negative, shadows are drawn so that the image appears as a pressed button; otherwise, it appears as an unpressed button."
msgstr "これはイメージ周辺にシャドー矩形を追加する。値@var{relief}はシャドーライン幅をピクセルで指定する。@var{relief}が負ならボタンを押下した状態、それ以外はボタンを押下していない状態のイメージでシャドーを描画する。"

#. type: item
#: original_texis/display.texi:5069
#, no-wrap
msgid ":conversion @var{algorithm}"
msgstr ":conversion @var{algorithm}"

#. type: table
#: original_texis/display.texi:5073
msgid "This specifies a conversion algorithm that should be applied to the image before it is displayed; the value, @var{algorithm}, specifies which algorithm."
msgstr "これはイメージを表示する前に適用するべき変換アルゴリズムを指定する。値@var{algorithm}は何のアルゴリズムかを指定する。"

#. type: item
#: original_texis/display.texi:5075
#, no-wrap
msgid "laplace"
msgstr "laplace"

#. type: itemx
#: original_texis/display.texi:5076
#, no-wrap
msgid "emboss"
msgstr "emboss"

#. type: table
#: original_texis/display.texi:5081
msgid "Specifies the Laplace edge detection algorithm, which blurs out small differences in color while highlighting larger differences.  People sometimes consider this useful for displaying the image for a disabled button."
msgstr "カラーの大きな差異を強調して小さな差異を不鮮明にするラプラスエッジ検出アルゴリズム(Laplace edge detection algorithm)を指定する。無効なボタンのイメージ表示に、これが役立つと考える人もいます。"

#. type: item
#: original_texis/display.texi:5082
#, no-wrap
msgid "(edge-detection :matrix @var{matrix} :color-adjust @var{adjust})"
msgstr "(edge-detection :matrix @var{matrix} :color-adjust @var{adjust})"

#. type: cindex
#: original_texis/display.texi:5083
#, no-wrap
msgid "edge detection, images"
msgstr "edge detection, images"

#. type: table
#: original_texis/display.texi:5092
msgid "Specifies a general edge-detection algorithm.  @var{matrix} must be either a nine-element list or a nine-element vector of numbers.  A pixel at position @math{x/y} in the transformed image is computed from original pixels around that position.  @var{matrix} specifies, for each pixel in the neighborhood of @math{x/y}, a factor with which that pixel will influence the transformed pixel; element @math{0} specifies the factor for the pixel at @math{x-1/y-1}, element @math{1} the factor for the pixel at @math{x/y-1} etc., as shown below:"
msgstr "一般的なエッジ検出アルゴリズムを指定する。@var{matrix}は数値からなる9要素のリストかベクターでなければならない。変換されたイメージ内の位置@math{x/y}にあるピクセルは、その位置周辺にある元のピクセルから計算される。@var{matrix}は@math{x/y}に近接する各ピクセルにたいして、そのピクセルが変換先ピクセルに影響するファクター(factor: 要因)を指定する。以下のように要素@math{0}は@math{x-1/y-1}にあるピクセルのファクター、要素@math{1}は@math{x/y-1}にあるピクセルにたいするファクター、...を指定する。"

#. type: tex
#: original_texis/display.texi:5097
#, no-wrap
msgid ""
"$$\\pmatrix{x-1/y-1 & x/y-1  & x+1/y-1 \\cr\n"
"   x-1/y  &   x/y &    x+1/y \\cr\n"
"   x-1/y+1&   x/y+1 &  x+1/y+1 \\cr}$$\n"
msgstr ""
"$$\\pmatrix{x-1/y-1 & x/y-1  & x+1/y-1 \\cr\n"
"   x-1/y  &   x/y &    x+1/y \\cr\n"
"   x-1/y+1&   x/y+1 &  x+1/y+1 \\cr}$$\n"

#. type: display
#: original_texis/display.texi:5104
#, no-wrap
msgid ""
"  (x-1/y-1  x/y-1  x+1/y-1\n"
"   x-1/y    x/y    x+1/y\n"
"   x-1/y+1  x/y+1  x+1/y+1)\n"
msgstr ""
"  (x-1/y-1  x/y-1  x+1/y-1\n"
"   x-1/y    x/y    x+1/y\n"
"   x-1/y+1  x/y+1  x+1/y+1)\n"

#. type: table
#: original_texis/display.texi:5111
msgid "The resulting pixel is computed from the color intensity of the color resulting from summing up the RGB values of surrounding pixels, multiplied by the specified factors, and dividing that sum by the sum of the factors' absolute values."
msgstr "結果となるピクセルは周辺ピクセルのRGB値を合計したカラーを指定されたファクターで乗じて、その合計をファクター絶対値の合計で除した色強度から計算される。"

#. type: table
#: original_texis/display.texi:5113
msgid "Laplace edge-detection currently uses a matrix of"
msgstr "ラプラスエッジ検出は現在のところは以下のマトリクス"

#. type: tex
#: original_texis/display.texi:5118
#, no-wrap
msgid ""
"$$\\pmatrix{1 & 0 & 0 \\cr\n"
"   0&  0 &  0 \\cr\n"
"   0 & 0 & -1 \\cr}$$\n"
msgstr ""
"$$\\pmatrix{1 & 0 & 0 \\cr\n"
"   0&  0 &  0 \\cr\n"
"   0 & 0 & -1 \\cr}$$\n"

#. type: display
#: original_texis/display.texi:5125
#, no-wrap
msgid ""
"  (1  0  0\n"
"   0  0  0\n"
"   0  0 -1)\n"
msgstr ""
"  (1  0  0\n"
"   0  0  0\n"
"   0  0 -1)\n"

#. type: table
#: original_texis/display.texi:5129
msgid "Emboss edge-detection uses a matrix of"
msgstr "エンボスエッジ検出(Emboss edge-detection)は以下のマトリクスを使用する"

#. type: tex
#: original_texis/display.texi:5134
#, no-wrap
msgid ""
"$$\\pmatrix{ 2 & -1 &  0 \\cr\n"
"   -1 &  0 &  1 \\cr\n"
"    0  & 1 & -2 \\cr}$$\n"
msgstr ""
"$$\\pmatrix{ 2 & -1 &  0 \\cr\n"
"   -1 &  0 &  1 \\cr\n"
"    0  & 1 & -2 \\cr}$$\n"

#. type: display
#: original_texis/display.texi:5141
#, no-wrap
msgid ""
"  ( 2 -1  0\n"
"   -1  0  1\n"
"    0  1 -2)\n"
msgstr ""
"  ( 2 -1  0\n"
"   -1  0  1\n"
"    0  1 -2)\n"

#. type: item
#: original_texis/display.texi:5144
#, no-wrap
msgid "disabled"
msgstr "disabled"

#. type: table
#: original_texis/display.texi:5146
msgid "Specifies transforming the image so that it looks disabled."
msgstr "イメージが無効(disabled)に見えるよう変換することを指定する。"

#. type: item
#: original_texis/display.texi:5148
#, no-wrap
msgid ":mask @var{mask}"
msgstr ":mask @var{mask}"

#. type: table
#: original_texis/display.texi:5157
msgid "If @var{mask} is @code{heuristic} or @code{(heuristic @var{bg})}, build a clipping mask for the image, so that the background of a frame is visible behind the image.  If @var{bg} is not specified, or if @var{bg} is @code{t}, determine the background color of the image by looking at the four corners of the image, assuming the most frequently occurring color from the corners is the background color of the image.  Otherwise, @var{bg} must be a list @code{(@var{red} @var{green} @var{blue})} specifying the color to assume for the background of the image."
msgstr "@var{mask}が@code{heuristic}か@code{(heuristic @var{bg})}なら、フレームのバックグラウンドがイメージ背後に見えるようにイメージのクリッピングマスクを構築する。@var{bg}が未指定か@code{t}なら、イメージ4隅に最頻するカラーをそのイメージのバックグラウンドカラーとみなしてバックグラウンドカラーを決定する。それ以外なら@var{bg}はイメージのバックグラウンドとみなすべきカラーを指定するリスト@code{(@var{red} @var{green} @var{blue})}でなければならない。"

#. type: table
#: original_texis/display.texi:5161
msgid "If @var{mask} is @code{nil}, remove a mask from the image, if it has one.  Images in some formats include a mask which can be removed by specifying @code{:mask nil}."
msgstr "@var{mask}が@code{nil}なら、イメージがマスクをもつ場合にはマスクを削除する。マスクを含むフォーマットのイメージは@code{:mask nil}を指定することにより削除される可能性がある。"

#. type: item
#: original_texis/display.texi:5162
#, no-wrap
msgid ":pointer @var{shape}"
msgstr ":pointer @var{shape}"

#. type: table
#: original_texis/display.texi:5165
msgid "This specifies the pointer shape when the mouse pointer is over this image.  @xref{Pointer Shape}, for available pointer shapes."
msgstr "これはマウスポインターがそのイメージ上にある際のポインターシェイプを指定する。利用可能なポインターシェイプについては@ref{Pointer Shape}を参照のこと。"

#. type: item
#: original_texis/display.texi:5166
#, no-wrap
msgid ":map @var{map}"
msgstr ":map @var{map}"

#. type: cindex
#: original_texis/display.texi:5167
#, no-wrap
msgid "image maps"
msgstr "image maps"

#. type: table
#: original_texis/display.texi:5169
msgid "This associates an image map of @dfn{hot spots} with this image."
msgstr "これはイメージに@dfn{ホットスポット(hot spots)}のイメージマップを関連付ける。"

#. type: table
#: original_texis/display.texi:5173
msgid "An image map is an alist where each element has the format @code{(@var{area} @var{id} @var{plist})}.  An @var{area} is specified as either a rectangle, a circle, or a polygon."
msgstr "イメージマップは各要素が@code{(@var{area} @var{id} @var{plist})}という形式をもつalist。@var{area}にはrectangle(矩形)、circle(円)、またはpolygon(ポリゴン、多角形)のいずれかを指定する。"

#. type: table
#: original_texis/display.texi:5178
msgid "A rectangle is a cons @code{(rect . ((@var{x0} . @var{y0}) . (@var{x1} . @var{y1})))} which specifies the pixel coordinates of the upper left and bottom right corners of the rectangle area."
msgstr "rectangleは矩形エリアの左上隅と右下隅のピクセル座標を指定するコンス@code{(rect . ((@var{x0} . @var{y0}) . (@var{x1} . @var{y1})))}。"

#. type: table
#: original_texis/display.texi:5183
msgid "A circle is a cons @code{(circle . ((@var{x0} . @var{y0}) . @var{r}))} which specifies the center and the radius of the circle; @var{r} may be a float or integer."
msgstr "circleは円の中心と半径を指定するコンス@code{(circle . ((@var{x0} . @var{y0}) . @var{r}))}。@var{r}は整数か浮動小数点数。"

#. type: table
#: original_texis/display.texi:5187
msgid "A polygon is a cons @code{(poly . [@var{x0} @var{y0} @var{x1} @var{y1} ...])} where each pair in the vector describes one corner in the polygon."
msgstr "polygonは各ペアーが多角形の1つの頂点を記述するコンス@code{(poly . [@var{x0} @var{y0} @var{x1} @var{y1} ...])}。"

#. type: table
#: original_texis/display.texi:5194
msgid "When the mouse pointer lies on a hot-spot area of an image, the @var{plist} of that hot-spot is consulted; if it contains a @code{help-echo} property, that defines a tool-tip for the hot-spot, and if it contains a @code{pointer} property, that defines the shape of the mouse cursor when it is on the hot-spot.  @xref{Pointer Shape}, for available pointer shapes."
msgstr "マウスポインターがホットスポット上にある際には、ホットスポットの@var{plist}が参照される。これが@code{help-echo}プロパティを含むならそのホットスポットのツールチップ、@code{pointer}プロパティを含む場合はマウスカーソルがホットスポット上にあるときのマウスカーソルのシェイプを指定する。利用可能なポインターシェイプについては@ref{Pointer Shape}を参照のこと。"

#. type: table
#: original_texis/display.texi:5199
msgid "When you click the mouse when the mouse pointer is over a hot-spot, an event is composed by combining the @var{id} of the hot-spot with the mouse event; for instance, @code{[area4 mouse-1]} if the hot-spot's @var{id} is @code{area4}."
msgstr "マウスポインターがホットスポット上にあるときにマウスをクリックしたときのイベントは、ホットスポットの@var{id}とマウスイベントを組み合わせて構成される。たとえばホットスポットの@var{id}が@code{area4}なら@code{[area4 mouse-1]}。"

#. type: defun
#: original_texis/display.texi:5201
#, no-wrap
msgid "image-mask-p spec &optional frame"
msgstr "image-mask-p spec &optional frame"

#. type: defun
#: original_texis/display.texi:5206
msgid "This function returns @code{t} if image @var{spec} has a mask bitmap.  @var{frame} is the frame on which the image will be displayed.  @var{frame} @code{nil} or omitted means to use the selected frame (@pxref{Input Focus})."
msgstr "この関数はイメージ@var{spec}がマスクビットマップをもつなら@code{t}をリターンする。@var{frame}はそのイメージが表示されるフレーム。@var{frame}が@code{nil}か省略された場合には選択されたフレームが使用される(@ref{Input Focus}を参照)。"

#. type: cindex
#: original_texis/display.texi:5210
#, no-wrap
msgid "XBM"
msgstr "XBM"

#. type: Plain text
#: original_texis/display.texi:5215
msgid "To use XBM format, specify @code{xbm} as the image type.  This image format doesn't require an external library, so images of this type are always supported."
msgstr "XBMフォーマットを使用するにはイメージタイプとして@code{xbm}を指定します。このイメージフォーマットは外部ライブラリーを要求せず、このタイプのイメージは常にサポートされます。"

#. type: Plain text
#: original_texis/display.texi:5217
msgid "Additional image properties supported for the @code{xbm} image type are:"
msgstr "@code{xbm}イメージタイプにたいして追加のイメージプロパティがサポートされます:"

#. type: item
#: original_texis/display.texi:5219 original_texis/display.texi:5560
#, no-wrap
msgid ":foreground @var{foreground}"
msgstr ":foreground @var{foreground}"

#. type: table
#: original_texis/display.texi:5224
msgid "The value, @var{foreground}, should be a string specifying the image foreground color, or @code{nil} for the default color.  This color is used for each pixel in the XBM that is 1.  The default is the frame's foreground color."
msgstr "値@var{foreground}はそのイメージのフォアグラウンドカラーを指定する文字列、またはデフォルトカラーを指定する@code{nil}であること。このカラーはXBM内の1の各ピクセルに使用される。デフォルトはフレームのフォアグラウンドカラー。"

#. type: item
#: original_texis/display.texi:5225 original_texis/display.texi:5338
#: original_texis/display.texi:5566
#, no-wrap
msgid ":background @var{background}"
msgstr ":background @var{background}"

#. type: table
#: original_texis/display.texi:5230
msgid "The value, @var{background}, should be a string specifying the image background color, or @code{nil} for the default color.  This color is used for each pixel in the XBM that is 0.  The default is the frame's background color."
msgstr "値@var{background}はそのイメージのバックグラウンドカラーを指定する文字列、またはデフォルトカラーを指定する@code{nil}であること。このカラーはXBM内の0の各ピクセルに使用される。デフォルトはフレームのバックグラウンドカラー。"

#. type: Plain text
#: original_texis/display.texi:5234
msgid "If you specify an XBM image using data within Emacs instead of an external file, use the following three properties:"
msgstr "外部ファイルのかわりにEmacs内のデータを指定してXBMイメージを指定するには以下の3つのプロパティを使用する:"

#. type: table
#: original_texis/display.texi:5239
msgid "The value, @var{data}, specifies the contents of the image.  There are three formats you can use for @var{data}:"
msgstr "値@var{data}はイメージのコンテンツを指定する。@var{data}として使用できる3つのフォーマットが存在する:"

#. type: itemize
#: original_texis/display.texi:5244
msgid "A vector of strings or bool-vectors, each specifying one line of the image.  Do specify @code{:height} and @code{:width}."
msgstr "それぞれがイメージの1ラインを指定するような文字列ベクターかboolベクター。@code{:height}と@code{:width}を指定する。"

#. type: itemize
#: original_texis/display.texi:5250
msgid "A string containing the same byte sequence as an XBM file would contain.  You must not specify @code{:height} and @code{:width} in this case, because omitting them is what indicates the data has the format of an XBM file.  The file contents specify the height and width of the image."
msgstr "文字列ならXBMファイルが含むのと同じバイトシーケンスを含む。この場合は@code{:height}と@code{:width}を指定してはならない。これらを省略することが、そのデータがXBMファイルのフォーマットをもつことを示すからである。イメージの高さと幅はファイルのコンテンツにより指定される。"

#. type: itemize
#: original_texis/display.texi:5258
msgid "A string or a bool-vector containing the bits of the image (plus perhaps some extra bits at the end that will not be used).  It should contain at least @var{width} * @code{height} bits.  In this case, you must specify @code{:height} and @code{:width}, both to indicate that the string contains just the bits rather than a whole XBM file, and to specify the size of the image."
msgstr "イメージのビットを含む文字列かboolベクター(終端の使用されない余分なビットを含むかもしれない)。少なくとも@var{width} * @code{height}ビットを含むこと。この場合にはその文字列がXBMファイル全体ではなく、単にビットだけを含むことを示すとともに、そのイメージのサイズを指定するために@code{:height}と@code{:width}を指定しなければならない。"

#. type: table
#: original_texis/display.texi:5262
msgid "The value, @var{width}, specifies the width of the image, in pixels."
msgstr "値@var{width}はピクセル単位でイメージの幅を指定する。"

#. type: table
#: original_texis/display.texi:5265
msgid "The value, @var{height}, specifies the height of the image, in pixels."
msgstr "値@var{height}はピクセル単位でイメージの高さを指定する。"

#. type: cindex
#: original_texis/display.texi:5269
#, no-wrap
msgid "XPM"
msgstr "XPM"

#. type: Plain text
#: original_texis/display.texi:5274
msgid "To use XPM format, specify @code{xpm} as the image type.  The additional image property @code{:color-symbols} is also meaningful with the @code{xpm} image type:"
msgstr "XPMフォーマットを使用するにはイメージタイプに@code{xpm}を指定します。@code{xpm}イメージタイプでは追加のプロパティ@code{:color-symbols}にも意味があります。"

#. type: item
#: original_texis/display.texi:5276
#, no-wrap
msgid ":color-symbols @var{symbols}"
msgstr ":color-symbols @var{symbols}"

#. type: table
#: original_texis/display.texi:5281
msgid "The value, @var{symbols}, should be an alist whose elements have the form @code{(@var{name} . @var{color})}.  In each element, @var{name} is the name of a color as it appears in the image file, and @var{color} specifies the actual color to use for displaying that name."
msgstr "値@var{symbols}は要素が@code{(@var{name} . @var{color})}という形式をもつようなalistであること。各要素において@var{name}はイメージファイル内に出現するカラー名、@var{color}はそのカラー名の実際の表示に使用するカラーを指定する。"

#. type: cindex
#: original_texis/display.texi:5285
#, no-wrap
msgid "ImageMagick images"
msgstr "ImageMagick images"

#. type: cindex
#: original_texis/display.texi:5286
#, no-wrap
msgid "images, support for more formats"
msgstr "images, support for more formats"

#. type: Plain text
#: original_texis/display.texi:5293
msgid "If your Emacs build has ImageMagick support, you can use the ImageMagick library to load many image formats (@pxref{File Conveniences,,, emacs, The GNU Emacs Manual}).  The image type symbol for images loaded via ImageMagick is @code{imagemagick}, regardless of the actual underlying image format."
msgstr "ImageMagickのサポートつきのEmacsビルドでは、多くくのイメージフォーマットをロードするためにImageMagickライブラリーを使用できます(@ref{File Conveniences,,, emacs, The GNU Emacs Manual}を参照)。ImageMagickを通じてロードしたイメージのイメージタイプシンボルは、基礎となる実際のイメージフォーマットとは無関係に@code{imagemagick}になります。"

#. type: Plain text
#: original_texis/display.texi:5295
msgid "To check for ImageMagick support, use the following:"
msgstr "ImageMagickサポートをチェックするには以下を使用してください:"

#. type: lisp
#: original_texis/display.texi:5298
#, no-wrap
msgid "(image-type-available-p 'imagemagick)\n"
msgstr "(image-type-available-p 'imagemagick)\n"

#. type: defun
#: original_texis/display.texi:5300
#, no-wrap
msgid "imagemagick-types"
msgstr "imagemagick-types"

#. type: defun
#: original_texis/display.texi:5305
msgid "This function returns a list of image file extensions supported by the current ImageMagick installation.  Each list element is a symbol representing an internal ImageMagick name for an image type, such as @code{BMP} for @file{.bmp} images."
msgstr "この関数はカレントのImageMagickインストールによりサポートされるイメージファイル拡張子のリストをリターンする。リストの各要素は@file{.bmp}イメージは@code{BMP}のような、イメージタイプにたいして内部的なImageMagick名を表すシンボル。"

#. type: defopt
#: original_texis/display.texi:5307
#, no-wrap
msgid "imagemagick-enabled-types"
msgstr "imagemagick-enabled-types"

#. type: defopt
#: original_texis/display.texi:5315
msgid "The value of this variable is a list of ImageMagick image types which Emacs may attempt to render using ImageMagick.  Each list element should be one of the symbols in the list returned by @code{imagemagick-types}, or an equivalent string.  Alternatively, a value of @code{t} enables ImageMagick for all possible image types.  Regardless of the value of this variable, @code{imagemagick-types-inhibit} (see below) takes precedence."
msgstr "この変数の値はEmacsがImageMagickを使用してレンダリングを試みるかもしれないImageMagickイメージタイプのリスト。リストの各要素は@code{imagemagick-types}がリターンするリスト内のシンボルのいずれか、または等価な文字列。もしくは値@code{t}はImageMagickにたいして利用できるすべてのイメージタイプを有効にする。この変数の値とは関係なく@code{imagemagick-types-inhibit} (以下参照)が優先される。"

#. type: defopt
#: original_texis/display.texi:5317
#, no-wrap
msgid "imagemagick-types-inhibit"
msgstr "imagemagick-types-inhibit"

#. type: defopt
#: original_texis/display.texi:5322
msgid "The value of this variable lists the ImageMagick image types which should never be rendered using ImageMagick, regardless of the value of @code{imagemagick-enabled-types}.  A value of @code{t} disables ImageMagick entirely."
msgstr "この変数の値は@code{imagemagick-enabled-types}の値とは無関係に、ImageMagickを使用して決してレンダリングされることのないImageMagickイメージタイプのリスト。値@code{t}はImageMagickを完全に無効にする。"

#. type: defvar
#: original_texis/display.texi:5324
#, no-wrap
msgid "image-format-suffixes"
msgstr "image-format-suffixes"

#. type: defvar
#: original_texis/display.texi:5332
msgid "This variable is an alist mapping image types to file name extensions.  Emacs uses this in conjunction with the @code{:format} image property (see below) to give a hint to the ImageMagick library as to the type of an image.  Each element has the form @code{(@var{type} @var{extension})}, where @var{type} is a symbol specifying an image content-type, and @var{extension} is a string that specifies the associated file name extension."
msgstr "この変数はイメージタイプをファイル名拡張子にマッピングするalist。EmacsはImageMagickライブラリーにイメージのタイプに関するヒントを与えるために、この変数と@code{:format}イメージプロパティ(以下参照)を組み合わせて使用する。各要素は@code{(@var{type} @var{extension})}という形式をもち@var{type}はイメージのcontent-typeを指定するシンボル、@var{extension}は関連付けられるファイル名拡張子を指定する文字列。"

#. type: Plain text
#: original_texis/display.texi:5336
msgid "Images loaded with ImageMagick support the following additional image descriptor properties:"
msgstr "ImageMagickによりロードされたイメージは、追加で以下のイメージディスクリプタプロパティをサポートします:"

#. type: table
#: original_texis/display.texi:5343
msgid "@var{background}, if non-@code{nil}, should be a string specifying a color, which is used as the image's background color if the image supports transparency.  If the value is @code{nil}, it defaults to the frame's background color."
msgstr "@var{background}が非@code{nil}なら、カラーを指定する文字列であること。これはイメージが透明度をサポートする場合に、イメージのバックグラウンドカラーとして使用される。値が@code{nil}の場合のデフォルトはフレームのバックグラウンドカラー。"

#. type: item
#: original_texis/display.texi:5344
#, no-wrap
msgid ":width @var{width}, :height @var{height}"
msgstr ":width @var{width}, :height @var{height}"

#. type: table
#: original_texis/display.texi:5349
msgid "The @code{:width} and @code{:height} keywords are used for scaling the image.  If only one of them is specified, the other one will be calculated so as to preserve the aspect ratio.  If both are specified, aspect ratio may not be preserved."
msgstr "キーワード@code{:width}と@code{:height}はイメージのスケーリングに使用される。いずれか一方のみが指定された場合には、アスペクト比を保つためにもう一方が算出される。両方が指定された場合にはアスペクト比は保たれないかもしれない。"

#. type: item
#: original_texis/display.texi:5350
#, no-wrap
msgid ":max-width @var{max-width}, :max-height @var{max-height}"
msgstr ":max-width @var{max-width}, :max-height @var{max-height}"

#. type: table
#: original_texis/display.texi:5358
msgid "The @code{:max-width} and @code{:max-height} keywords are used for scaling if the size of the image of the image exceeds these values.  If @code{:width} is set it will have precedence over @code{max-width}, and if @code{:height} is set it will have precedence over @code{max-height}, but you can otherwise mix these keywords as you wish.  @code{:max-width} and @code{:max-height} will always preserve the aspect ratio."
msgstr "キーワード@code{:max-width}と@code{:max-height}は、イメージのサイズがこれらの値を超過した場合のスケーリングに使用される。@code{:width}がセットされた場合には@code{max-width}より優先されて、@code{:height}がセットされた場合には@code{max-height}より優先されるだろうが、それ以外ではこれらのキーワードを望むように混交できる。@code{:max-width}と@code{:max-height}は常にアスペクト比を保つであろう。"

#. type: table
#: original_texis/display.texi:5369
msgid "If both @code{:width} and @code{:max-height} has been set (but @code{:height} has not been set), then @code{:max-height} will have precedence.  The same is the case for the opposite combination: The ``max'' keyword has precedence.  That is, if you have a 200x100 image and specify that @code{:width} should be 400 and @code{:max-height} should be 150, you'll end up with an image that is 300x150: Preserving the aspect ratio and not exceeding the ``max'' setting.  This combination of parameters is a useful way of saying ``display this image as large as possible, but no larger than the available display area''."
msgstr "@code{:width}と@code{:max-height}がいずれもセットされている(が@code{:height}がセットされていない)場合には@code{:max-height}が優先される。逆の組み合わせの場合も同様で、キーワード``max''が優先される。つまり200x100のイメージがあり@code{:width}を400、@code{:max-height}を150に指定すると、アスペクト比を保持しつつ``max''のセッティングを超過しないようにイメージは最終的には300x150になる。このパラメーターの組み合わせは、``可能なかぎり大きく、ただし利用可能なディスプレイエリア以下でこのイメージを表示せよ''のように指示する簡便な手段である。"

#. type: item
#: original_texis/display.texi:5370
#, no-wrap
msgid ":scale @var{scale}"
msgstr ":scale @var{scale}"

#. type: table
#: original_texis/display.texi:5379
msgid "This should be a number, where values higher than 1 means to increase the size, and lower means to decrease the size.  For instance, a value of 0.25 will make the image a quarter size of what it originally was.  If the scaling makes the image larger than specified by @code{:max-width} or @code{:max-height}, the resulting size will not exceed those two values.  If both @code{:scale} and @code{:height}/@code{:width} are specified, the height/width will be adjusted by the specified scaling factor."
msgstr "これは数字であること。1より大きい値はサイズの増加、小さい値はサイズの減少を意味する。たとえば値0.25はイメージをオリジナルの1/4のサイズにするだろう。このスケーリングにより@code{:max-width}や@code{:max-height}で指定されたイメージの元のサイズより大きくなる場合でも、結果サイズがこれら2つの値を超過することはない。@code{:scale}および@code{:height}/@code{:width}の両方が指定されたら、高さ/幅は指定されたスケーリング倍率に調整される。"

#. type: item
#: original_texis/display.texi:5380
#, no-wrap
msgid ":format @var{type}"
msgstr ":format @var{type}"

#. type: table
#: original_texis/display.texi:5385
msgid "The value, @var{type}, should be a symbol specifying the type of the image data, as found in @code{image-format-suffixes}.  This is used when the image does not have an associated file name, to provide a hint to ImageMagick to help it detect the image type."
msgstr "値@var{type}は@code{image-format-suffixes}で見られるような、イメージのタイプを指定するシンボルであること。これはイメージが関連付けられたファイル名をもたない際に、イメージタイプを検出する助けとなるヒントをImageMagickに提供する。"

#. type: item
#: original_texis/display.texi:5386
#, no-wrap
msgid ":rotation @var{angle}"
msgstr ":rotation @var{angle}"

#. type: table
#: original_texis/display.texi:5388
msgid "Specifies a rotation angle in degrees."
msgstr "回転角度を度数で指定する。"

#. type: item
#: original_texis/display.texi:5389
#, no-wrap
msgid ":index @var{frame}"
msgstr ":index @var{frame}"

#. type: table
#: original_texis/display.texi:5391
msgid "@xref{Multi-Frame Images}."
msgstr "@ref{Multi-Frame Images}を参照のこと。"

#. type: cindex
#: original_texis/display.texi:5395
#, no-wrap
msgid "SVG images"
msgstr "SVG images"

#. type: Plain text
#: original_texis/display.texi:5400
msgid "SVG (Scalable Vector Graphics) is an XML format for specifying images.  If your Emacs build has SVG support, you can create and manipulate these images with the following functions."
msgstr "SVG (Scalable Vector Graphics)はイメージ指定用のXMLフォーマットです。EmacsビルドにSVGサポートがあれば以下の関数でこれらのイメージの作成と操作が可能です。"

#. type: defun
#: original_texis/display.texi:5401
#, no-wrap
msgid "svg-create width height &rest args"
msgstr "svg-create width height &rest args"

#. type: defun
#: original_texis/display.texi:5404
msgid "Create a new, empty SVG image with the specified dimensions.  @var{args} is an argument plist with you can specify following:"
msgstr "指定したサイズで新たにSVGイメージを作成する。@var{args}はplist引数であり、以下を指定できる:"

#. type: item
#: original_texis/display.texi:5406 original_texis/display.texi:5439
#, no-wrap
msgid ":stroke-width"
msgstr ":stroke-width"

#. type: table
#: original_texis/display.texi:5408
msgid "The default width (in pixels) of any lines created."
msgstr "作成するすべてのラインのデフォルト幅(ピクセル単位)。"

#. type: item
#: original_texis/display.texi:5409
#, no-wrap
msgid ":stroke"
msgstr ":stroke"

#. type: table
#: original_texis/display.texi:5411
msgid "The default stroke color on any lines created."
msgstr "作成するすべてのラインのデフォルトのストロークカラー。"

#. type: defun
#: original_texis/display.texi:5415
msgid "This function returns an SVG structure, and all the following functions work on that structure."
msgstr "この関数はSVG構造(SVG structure)をリターンする。以下のすべての関数はこの構造にたいして機能する。"

#. type: defun
#: original_texis/display.texi:5417
#, no-wrap
msgid "svg-gradient svg id type stops"
msgstr "svg-gradient svg id type stops"

#. type: defun
#: original_texis/display.texi:5421
msgid "Create a gradient in @var{svg} with identifier @var{id}.  @var{type} specifies the gradient type, and can be either @code{linear} or @code{radial}.  @var{stops} is a list of percentage/color pairs."
msgstr "@var{svg}に識別子@var{id}でグラデーションを作成する。@var{type}はグラデーションタイプで@code{linear}か@code{radial}のいずれかを指定する。@var{stops}はパーセント割合/カラーのペアからなるリスト。"

#. type: defun
#: original_texis/display.texi:5424
msgid "The following will create a linear gradient that goes from red at the start, to green 25% of the way, to blue at the end:"
msgstr "以下は最初の赤から25%の緑、最後は青に至る線形グラデーションを作成する:"

#. type: lisp
#: original_texis/display.texi:5428
#, no-wrap
msgid ""
"(svg-gradient svg \"gradient1\" 'linear\n"
"              '((0 . \"red\") (25 . \"green\") (100 . \"blue\")))\n"
msgstr ""
"(svg-gradient svg \"gradient1\" 'linear\n"
"              '((0 . \"red\") (25 . \"green\") (100 . \"blue\")))\n"

#. type: defun
#: original_texis/display.texi:5432
msgid "The gradient created (and inserted into the SVG object) can later be used by all functions that create shapes."
msgstr "作成(およびSVGオブジェクトに挿入)されたグラデーションは、後でシェイプを作成するすべての関数で使用できる。"

#. type: Plain text
#: original_texis/display.texi:5437
msgid "All the following functions take an optional list of keyword parameters that alter the various attributes from their default values.  Valid attributes include:"
msgstr "以下の関数はすべてさまざまな属性のデフォルト値を変更するオプションのキーワードパラメーターを受け取ります。有効な属性には以下が含まれます:"

#. type: table
#: original_texis/display.texi:5442
msgid "The width (in pixels) of lines drawn, and outlines around solid shapes."
msgstr "ラインとソリッドシェイプ枠線の描画幅(ピクセル単位)。"

#. type: item
#: original_texis/display.texi:5443
#, no-wrap
msgid ":stroke-color"
msgstr ":stroke-color"

#. type: table
#: original_texis/display.texi:5445
msgid "The color of lines drawn, and outlines around solid shapes."
msgstr "ラインとソリッドシェイプ枠線の描画カラー。"

#. type: item
#: original_texis/display.texi:5446
#, no-wrap
msgid ":fill-color"
msgstr ":fill-color"

#. type: table
#: original_texis/display.texi:5448
msgid "The color used for solid shapes."
msgstr "ラインとソリッドシェイプに使用するカラー。"

#. type: item
#: original_texis/display.texi:5449
#, no-wrap
msgid ":id"
msgstr ":id"

#. type: table
#: original_texis/display.texi:5451
msgid "The identified of the shape."
msgstr "シェイプの識別子。"

#. type: item
#: original_texis/display.texi:5452
#, no-wrap
msgid ":gradient"
msgstr ":gradient"

#. type: table
#: original_texis/display.texi:5455
msgid "If given, this should be the identifier of a previously defined gradient object."
msgstr "与えられた場合には以前に定義されたグラデーションオブジェクトの識別子であること。"

#. type: defun
#: original_texis/display.texi:5457
#, no-wrap
msgid "svg-rectangle svg x y width height &rest args"
msgstr "svg-rectangle svg x y width height &rest args"

#. type: defun
#: original_texis/display.texi:5460
msgid "Add a rectangle to @var{svg} where the upper left corner is at position @var{x}/@var{y} and is of size @var{width}/@var{height}."
msgstr "左上隅の位置が@var{x}/@var{y}でサイズが@var{width}/@var{height}の矩形を@var{svg}に追加する。"

#. type: lisp
#: original_texis/display.texi:5463
#, no-wrap
msgid "(svg-rectangle svg 100 100 500 500 :gradient \"gradient1\")\n"
msgstr "(svg-rectangle svg 100 100 500 500 :gradient \"gradient1\")\n"

#. type: defun
#: original_texis/display.texi:5466
#, no-wrap
msgid "svg-circle svg x y radius &rest args"
msgstr "svg-circle svg x y radius &rest args"

#. type: defun
#: original_texis/display.texi:5469
msgid "Add a circle to @var{svg} where the center is at @var{x}/@var{y} and the radius is @var{radius}."
msgstr "中心が@var{x}/@var{y}で半径が@var{radius}の円を@var{svg}に追加する。"

#. type: defun
#: original_texis/display.texi:5471
#, no-wrap
msgid "svg-ellipse svg x y x-radius y-radius &rest args"
msgstr "svg-ellipse svg x y x-radius y-radius &rest args"

#. type: defun
#: original_texis/display.texi:5475
msgid "Add a circle to @var{svg} where the center is at @var{x}/@var{y} and the horizontal radius is @var{x-radius} and the vertical radius is @var{y-radius}."
msgstr "中心が@var{x}/@var{y}で水平半径@var{x-radius}、垂直半径@var{y-radius}の円を@var{svg}に追加する。"

#. type: defun
#: original_texis/display.texi:5477
#, no-wrap
msgid "svg-line svg x1 y1 x2 y2 &rest args"
msgstr "svg-line svg x1 y1 x2 y2 &rest args"

#. type: defun
#: original_texis/display.texi:5480
msgid "Add a line to @var{svg} that starts at @var{x1}/@var{y1} and extends to @var{x2}/@var{y2}."
msgstr "@var{x1}/@var{y1}から@var{x2}/@var{y2}までの線を@var{svg}に追加する。"

#. type: defun
#: original_texis/display.texi:5482
#, no-wrap
msgid "svg-polyline svg points &rest args"
msgstr "svg-polyline svg points &rest args"

#. type: defun
#: original_texis/display.texi:5485
msgid "Add a multiple segment line to @var{svg} that goes through @var{points}, which is a list of X/Y position pairs."
msgstr "位置XとYのペアからなるリストであるような@var{points}を通過する複数セグメントの線を@var{svg}に追加する。"

#. type: lisp
#: original_texis/display.texi:5489
#, no-wrap
msgid ""
"(svg-polyline svg '((200 . 100) (500 . 450) (80 . 100))\n"
"              :stroke-color \"green\")\n"
msgstr ""
"(svg-polyline svg '((200 . 100) (500 . 450) (80 . 100))\n"
"              :stroke-color \"green\")\n"

#. type: defun
#: original_texis/display.texi:5492
#, no-wrap
msgid "svg-polygon svg points &rest args"
msgstr "svg-polygon svg points &rest args"

#. type: defun
#: original_texis/display.texi:5495
msgid "Add a polygon to @var{svg} where @var{points} is a list of X/Y pairs that describe the outer circumference of the polygon."
msgstr "ポリゴン外周の位置XとYのペアからなるリストであるような@var{points}により記述されるポリゴンを@var{svg}に追加する。"

#. type: lisp
#: original_texis/display.texi:5499
#, no-wrap
msgid ""
"(svg-polygon svg '((100 . 100) (200 . 150) (150 . 90))\n"
"             :stroke-color \"blue\" :fill-color \"red\"\")\n"
msgstr ""
"(svg-polygon svg '((100 . 100) (200 . 150) (150 . 90))\n"
"             :stroke-color \"blue\" :fill-color \"red\"\")\n"

#. type: defun
#: original_texis/display.texi:5502
#, no-wrap
msgid "svg-text svg text &rest args"
msgstr "svg-text svg text &rest args"

#. type: defun
#: original_texis/display.texi:5504
msgid "Add a text to @var{svg}."
msgstr "@var{svg}.<にテキストを追加する。"

#. type: lisp
#: original_texis/display.texi:5517
#, no-wrap
msgid ""
"(svg-text\n"
" svg \"This is a text\"\n"
" :font-size \"40\"\n"
" :font-weight \"bold\"\n"
" :stroke \"black\"\n"
" :fill \"white\"\n"
" :font-family \"impact\"\n"
" :letter-spacing \"4pt\"\n"
" :x 300\n"
" :y 400\n"
" :stroke-width 1)\n"
msgstr ""
"(svg-text\n"
" svg \"This is a text\"\n"
" :font-size \"40\"\n"
" :font-weight \"bold\"\n"
" :stroke \"black\"\n"
" :fill \"white\"\n"
" :font-family \"impact\"\n"
" :letter-spacing \"4pt\"\n"
" :x 300\n"
" :y 400\n"
" :stroke-width 1)\n"

#. type: defun
#: original_texis/display.texi:5520
#, no-wrap
msgid "svg-embed svg image image-type datap &rest args"
msgstr "svg-embed svg image image-type datap &rest args"

#. type: defun
#: original_texis/display.texi:5525
msgid "Add an embedded (raster) image to @var{svg}.  If @var{datap} is @code{nil}, @var{IMAGE} should be a file name; if not, it should be a binary string containing the image data.  @var{image-type} should be a @acronym{MIME} image type, for instance @samp{\"image/jpeg\"}."
msgstr "@var{svg}に埋め込みイメージ(ラスターイメージ)を追加する。@var{datap}が@code{nil}なら@var{IMAGE}はファイル名、それ以外ならイメージデータを含むバイナリ文字列であること。@var{image-type}はたとえば@samp{\"image/jpeg\"}のような@acronym{MIME}イメージタイプであること。"

#. type: lisp
#: original_texis/display.texi:5530
#, no-wrap
msgid ""
"(svg-embed svg \"~/rms.jpg\" \"image/jpeg\" nil\n"
"           :width \"100px\" :height \"100px\"\n"
"           :x \"50px\" :y \"75px\")\n"
msgstr ""
"(svg-embed svg \"~/rms.jpg\" \"image/jpeg\" nil\n"
"           :width \"100px\" :height \"100px\"\n"
"           :x \"50px\" :y \"75px\")\n"

#. type: defun
#: original_texis/display.texi:5533
#, no-wrap
msgid "svg-remove svg id"
msgstr "svg-remove svg id"

#. type: defun
#: original_texis/display.texi:5535
msgid "Remove the element with identifier @code{id} from the @code{svg}."
msgstr "@code{svg}から識別子@code{id}の要素を取り除く。"

#. type: Plain text
#: original_texis/display.texi:5541
msgid "Finally, the @code{svg-image} takes an SVG object as its parameter and returns an image object suitable for use in functions like @code{insert-image}.  Here's a complete example that creates and inserts an image with a circle:"
msgstr "最後に@code{svg-image}はパラメーターとしてSVGオブジェクトを受け取り、@code{insert-image}のような関数での使用に適したイメージオブジェクトをリターンします。以下は円のイメージを作成して挿入する完全な例です:"

#. type: lisp
#: original_texis/display.texi:5548
#, no-wrap
msgid ""
"(let ((svg (svg-create 400 400 :stroke-width 10)))\n"
"  (svg-gradient svg \"gradient1\" 'linear '((0 . \"red\") (100 . \"blue\")))\n"
"  (svg-circle svg 200 200 100 :gradient \"gradient1\"\n"
"                  :stroke-color \"green\")\n"
"  (insert-image (svg-image svg)))\n"
msgstr ""
"(let ((svg (svg-create 400 400 :stroke-width 10)))\n"
"  (svg-gradient svg \"gradient1\" 'linear '((0 . \"red\") (100 . \"blue\")))\n"
"  (svg-circle svg 200 200 100 :gradient \"gradient1\"\n"
"                  :stroke-color \"green\")\n"
"  (insert-image (svg-image svg)))\n"

#. type: cindex
#: original_texis/display.texi:5553
#, no-wrap
msgid "PBM"
msgstr "PBM"

#. type: Plain text
#: original_texis/display.texi:5558
msgid "For PBM images, specify image type @code{pbm}.  Color, gray-scale and monochromatic images are supported.  For mono PBM images, two additional image properties are supported."
msgstr "PBMイメージにはイメージタイプ@code{pbm}を指定します。カラー、グレースケール、およびモノクロのイメージがサポートされます。モノクロのPBMイメージにたいしては、2つの追加イメージプロパティがサポートされます。"

#. type: table
#: original_texis/display.texi:5565
msgid "The value, @var{foreground}, should be a string specifying the image foreground color, or @code{nil} for the default color.  This color is used for each pixel in the PBM that is 1.  The default is the frame's foreground color."
msgstr "値@var{foreground}はイメージのフォアグラウンドカラーを指定する文字列、またはデフォルトカラーなら@code{nil}であること。このカラーはPBM内の1であるようなピクセルすべてに使用される。デフォルトはフレームのフォアグラウンドカラー。"

#. type: table
#: original_texis/display.texi:5571
msgid "The value, @var{background}, should be a string specifying the image background color, or @code{nil} for the default color.  This color is used for each pixel in the PBM that is 0.  The default is the frame's background color."
msgstr "値@var{background}はイメージのバックグラウンドカラーを指定する文字列、またはデフォルトカラーなら@code{nil}であること。このカラーはPBM内の0であるようなピクセルすべてに使用される。デフォルトはフレームのバックグラウンドカラー。"

#. type: Plain text
#: original_texis/display.texi:5575
msgid "The remaining image types that Emacs can support are:"
msgstr "Emacsがサポート可能な残りのイメージタイプは以下のとおり:"

#. type: item
#: original_texis/display.texi:5577
#, no-wrap
msgid "GIF"
msgstr "GIF"

#. type: table
#: original_texis/display.texi:5580
msgid "Image type @code{gif}.  Supports the @code{:index} property.  @xref{Multi-Frame Images}."
msgstr "イメージタイプ@code{gif}。@code{:index}プロパティをサポートする。@ref{Multi-Frame Images}を参照のこと。"

#. type: item
#: original_texis/display.texi:5581
#, no-wrap
msgid "JPEG"
msgstr "JPEG"

#. type: table
#: original_texis/display.texi:5583
msgid "Image type @code{jpeg}."
msgstr "イメージタイプ@code{jpeg}。"

#. type: item
#: original_texis/display.texi:5584
#, no-wrap
msgid "PNG"
msgstr "PNG"

#. type: table
#: original_texis/display.texi:5586
msgid "Image type @code{png}."
msgstr "イメージタイプ@code{png}。"

#. type: item
#: original_texis/display.texi:5587
#, no-wrap
msgid "TIFF"
msgstr "TIFF"

#. type: table
#: original_texis/display.texi:5590
msgid "Image type @code{tiff}.  Supports the @code{:index} property.  @xref{Multi-Frame Images}."
msgstr "イメージタイプ@code{tiff}。@code{:index}プロパティをサポートする。@ref{Multi-Frame Images}を参照のこと。"

#. type: cindex
#: original_texis/display.texi:5594
#, no-wrap
msgid "define image"
msgstr "define image"

#. type: Plain text
#: original_texis/display.texi:5598
msgid "The functions @code{create-image}, @code{defimage} and @code{find-image} provide convenient ways to create image descriptors."
msgstr "関数@code{create-image}、@code{defimage}、@code{find-image}はイメージディスクリプタを作成するための便利な手段を提供します。"

#. type: defun
#: original_texis/display.texi:5599
#, no-wrap
msgid "create-image file-or-data &optional type data-p &rest props"
msgstr "create-image file-or-data &optional type data-p &rest props"

#. type: defun
#: original_texis/display.texi:5604
msgid "This function creates and returns an image descriptor which uses the data in @var{file-or-data}.  @var{file-or-data} can be a file name or a string containing the image data; @var{data-p} should be @code{nil} for the former case, non-@code{nil} for the latter case."
msgstr "この関数は@var{file-or-data}内のデータを使用するイメージディスクリプタを作成してリターンする。@var{file-or-data}はファイル名、またはイメージデータを含む文字列を指定できる。前者なら@var{data-p}は@code{nil}、後者なら非@code{nil}であること。"

#. type: defun
#: original_texis/display.texi:5609
msgid "The optional argument @var{type} is a symbol specifying the image type.  If @var{type} is omitted or @code{nil}, @code{create-image} tries to determine the image type from the file's first few bytes, or else from the file's name."
msgstr "オプション引数@var{type}はイメージタイプを指定するシンボル。@var{type}が省略か@code{nil}なら、@code{create-image}はファイル先頭の数バイトかファイル名からイメージタイプの判断を試みる。"

#. type: defun
#: original_texis/display.texi:5612
msgid "The remaining arguments, @var{props}, specify additional image properties---for example,"
msgstr "残りの引数@var{props}は追加のイメージプロパティを指定する。たとえば、"

#. type: example
#: original_texis/display.texi:5616
#, no-wrap
msgid "(create-image \"foo.xpm\" 'xpm nil :heuristic-mask t)\n"
msgstr "(create-image \"foo.xpm\" 'xpm nil :heuristic-mask t)\n"

#. type: defun
#: original_texis/display.texi:5620
msgid "The function returns @code{nil} if images of this type are not supported.  Otherwise it returns an image descriptor."
msgstr "この関数はそのタイプのイメージがサポートされていなければ@code{nil}、それ以外ならイメージディスクリプタをリターンする。"

#. type: defmac
#: original_texis/display.texi:5622
#, no-wrap
msgid "defimage symbol specs &optional doc"
msgstr "defimage symbol specs &optional doc"

#. type: defmac
#: original_texis/display.texi:5626
msgid "This macro defines @var{symbol} as an image name.  The arguments @var{specs} is a list which specifies how to display the image.  The third argument, @var{doc}, is an optional documentation string."
msgstr "このマクロはイメージマクロとして@var{symbol}を定義する。引数@var{specs}はイメージの表示方法を指定するリストである。3つ目の引数@var{doc}はオプションのドキュメント文字列。"

#. type: defmac
#: original_texis/display.texi:5634
msgid "Each argument in @var{specs} has the form of a property list, and each one should specify at least the @code{:type} property and either the @code{:file} or the @code{:data} property.  The value of @code{:type} should be a symbol specifying the image type, the value of @code{:file} is the file to load the image from, and the value of @code{:data} is a string containing the actual image data.  Here is an example:"
msgstr "@var{specs}内の各要素はプロパティリストの形式をもち、それぞれが少なくとも@code{:type}プロパティと、@code{:file}か@code{:data}いずれかのプロパティをもつこと。@code{:type}の値はイメージタイプを指定するシンボル、@code{:file}の値はイメージをロードするファイル、@code{:data}の値は実際のイメージデータを含む文字列であること。以下は例:"

#. type: example
#: original_texis/display.texi:5639
#, no-wrap
msgid ""
"(defimage test-image\n"
"  ((:type xpm :file \"~/test1.xpm\")\n"
"   (:type xbm :file \"~/test1.xbm\")))\n"
msgstr ""
"(defimage test-image\n"
"  ((:type xpm :file \"~/test1.xpm\")\n"
"   (:type xbm :file \"~/test1.xbm\")))\n"

#. type: defmac
#: original_texis/display.texi:5645
msgid "@code{defimage} tests each argument, one by one, to see if it is usable---that is, if the type is supported and the file exists.  The first usable argument is used to make an image descriptor which is stored in @var{symbol}."
msgstr "@code{defimage}はそれが使用可能か、つまりそのタイプがサポートされているかとファイルが存在するかを確認するために各要素を1つずつテストする。最初に使用可能な引数が@var{symbol}内に格納するイメージディスクリプタを作成するために使用される。"

#. type: defmac
#: original_texis/display.texi:5648
msgid "If none of the alternatives will work, then @var{symbol} is defined as @code{nil}."
msgstr "機能する候補がなければ@var{symbol}は@code{nil}として定義される。"

#. type: defun
#: original_texis/display.texi:5650
#, no-wrap
msgid "image-property image property"
msgstr "image-property image property"

#. type: defun
#: original_texis/display.texi:5654
msgid "Return the value of @var{property} in @var{image}.  Properties can be set by using @code{setf}.  Setting a property to @code{nil} will remove the property from the image."
msgstr "@var{image}の@var{property}の値をリターンする。プロパティは@code{setf}を使用してセットできる。プロパティに@code{nil}をセットすることによりイメージからプロパティを削除できる。"

#. type: defun
#: original_texis/display.texi:5656
#, no-wrap
msgid "find-image specs"
msgstr "find-image specs"

#. type: defun
#: original_texis/display.texi:5659
msgid "This function provides a convenient way to find an image satisfying one of a list of image specifications @var{specs}."
msgstr "この関数はイメージ仕様@var{specs}のリストの1つを満足するイメージを探すための、便利な手段を提供する。"

#. type: defun
#: original_texis/display.texi:5669
msgid "Each specification in @var{specs} is a property list with contents depending on image type.  All specifications must at least contain the properties @code{:type @var{type}} and either @w{@code{:file @var{file}}} or @w{@code{:data @var{data}}}, where @var{type} is a symbol specifying the image type, e.g., @code{xbm}, @var{file} is the file to load the image from, and @var{data} is a string containing the actual image data.  The first specification in the list whose @var{type} is supported, and @var{file} exists, is used to construct the image specification to be returned.  If no specification is satisfied, @code{nil} is returned."
msgstr "@var{specs}内の各仕様はイメージタイプに応じた内容のプロパティリストである。すべての仕様は少なくとも@code{:type @var{type}}、および@w{@code{:file @var{file}}}か@w{@code{:data @var{data}}}のいずれかのプロパティを含まなければならない。ここで@var{type}は@code{xbm}のようにイメージタイプを指定するシンボル、@var{file}はイメージをロードするファイル、@var{data}は実際のイメージデータを含む文字列。このリスト内で@var{type}がサポートされていて、かつ@var{file}が存在する最初の仕様が、リターンされるイメージ仕様の構築に使用される。満足する仕様がなければ@code{nil}がリターンされる。"

#. type: defun
#: original_texis/display.texi:5671
msgid "The image is looked for in @code{image-load-path}."
msgstr "イメージは@code{image-load-path}内で検索される。"

#. type: defopt
#: original_texis/display.texi:5673
#, no-wrap
msgid "image-load-path"
msgstr "image-load-path"

#. type: defopt
#: original_texis/display.texi:5679
msgid "This variable's value is a list of locations in which to search for image files.  If an element is a string or a variable symbol whose value is a string, the string is taken to be the name of a directory to search.  If an element is a variable symbol whose value is a list, that is taken to be a list of directories to search."
msgstr "この変数の値はイメージファイルを検索する場所のリスト。要素が文字列か値が文字列であるような変数シンボルなら、その文字列が検索を行うディレクトリーの名前になる。値がリストであるような変数シンボルの場合、それは検索を行うディレクトリーのリストとなる。"

#. type: defopt
#: original_texis/display.texi:5688
msgid "The default is to search in the @file{images} subdirectory of the directory specified by @code{data-directory}, then the directory specified by @code{data-directory}, and finally in the directories in @code{load-path}.  Subdirectories are not automatically included in the search, so if you put an image file in a subdirectory, you have to supply the subdirectory explicitly.  For example, to find the image @file{images/foo/bar.xpm} within @code{data-directory}, you should specify the image as follows:"
msgstr "デフォルトでは@code{data-directory}で指定されたディレクトリーのサブディレクトリー@file{images}、次に@code{data-directory}で指定されたディレクトリー、最後に@code{load-path}で指定されたディレクトリー内を検索する。サブディレクトリーは自動的には検索に含まれないので、イメージファイルをサブディレクトリー内に配置した場合には、サブディレクトリーを明示的に与える必要がある。たとえば@code{data-directory}内でイメージ@file{images/foo/bar.xpm}を見つけるには以下のようにそのイメージを指定すること:"

#. type: example
#: original_texis/display.texi:5691
#, no-wrap
msgid "(defimage foo-image '((:type xpm :file \"foo/bar.xpm\")))\n"
msgstr "(defimage foo-image '((:type xpm :file \"foo/bar.xpm\")))\n"

#. type: defun
#: original_texis/display.texi:5694
#, no-wrap
msgid "image-load-path-for-library library image &optional path no-error"
msgstr "image-load-path-for-library library image &optional path no-error"

#. type: defun
#: original_texis/display.texi:5697
msgid "This function returns a suitable search path for images used by the Lisp package @var{library}."
msgstr "この関数はLispパッケージ@var{library}により使用されるイメージにたいして適切な検索パスをリターンする。"

#. type: defun
#: original_texis/display.texi:5704
msgid "The function searches for @var{image} first using @code{image-load-path}, excluding @file{@code{data-directory}/images}, and then in @code{load-path}, followed by a path suitable for @var{library}, which includes @file{../../etc/images} and @file{../etc/images} relative to the library file itself, and finally in @file{@code{data-directory}/images}."
msgstr "この関数はまず@code{image-load-path} (@file{@code{data-directory}/images}を除外)を使用し、次に@code{load-path}の後に@var{library}にとって適切なパス(ライブラリーファイル自身にたいする相対パス@file{../../etc/images}と@file{../etc/images}を含む)を補い、最後に@file{@code{data-directory}/images}から@var{image}を検索する。"

#. type: defun
#: original_texis/display.texi:5709
msgid "Then this function returns a list of directories which contains first the directory in which @var{image} was found, followed by the value of @code{load-path}.  If @var{path} is given, it is used instead of @code{load-path}."
msgstr "それからこの関数は先頭に@var{image}が見つかったディレクトリー、その後に@code{load-path}の値が続くディレクトリーのリストをリターンする。@var{path}が与えられたら@code{load-path}のかわりに使用する。"

#. type: defun
#: original_texis/display.texi:5713
msgid "If @var{no-error} is non-@code{nil} and a suitable path can't be found, don't signal an error.  Instead, return a list of directories as before, except that @code{nil} appears in place of the image directory."
msgstr "@var{no-error}が非@code{nil}、かつ適切なパスが見つからない場合にはエラーをシグナルしない。かわりに前記のディレクトリーリストをリターンするが、イメージのディレクトリーの箇所に@code{nil}が出現する点が異なる。"

#. type: defun
#: original_texis/display.texi:5715
msgid "Here is an example of using @code{image-load-path-for-library}:"
msgstr "以下は@code{image-load-path-for-library}の使用例:"

#. type: example
#: original_texis/display.texi:5723
#, no-wrap
msgid ""
"(defvar image-load-path) ; shush compiler\n"
"(let* ((load-path (image-load-path-for-library\n"
"                    \"mh-e\" \"mh-logo.xpm\"))\n"
"       (image-load-path (cons (car load-path)\n"
"                              image-load-path)))\n"
"  (mh-tool-bar-folder-buttons-init))\n"
msgstr ""
"(defvar image-load-path) ; shush compiler\n"
"(let* ((load-path (image-load-path-for-library\n"
"                    \"mh-e\" \"mh-logo.xpm\"))\n"
"       (image-load-path (cons (car load-path)\n"
"                              image-load-path)))\n"
"  (mh-tool-bar-folder-buttons-init))\n"

#. type: vindex
#: original_texis/display.texi:5726
#, no-wrap
msgid "image-scaling-factor"
msgstr "image-scaling-factor"

#. type: Plain text
#: original_texis/display.texi:5732
msgid "Images are automatically scaled when created based on the @code{image-scaling-factor} variable.  The value is either a floating point number (where numbers higher than 1 means to increase the size and lower means to shrink the size), or the symbol @code{auto}, which will compute a scaling factor based on the font pixel size."
msgstr "イメージは@code{image-scaling-factor}変数にもとづいて作成時に自動的にスケーリングされます。この値は浮動小数点数(1より大きい値はサイズの拡大、小さい値はサイズの縮小を意味する)、またはフォントのピクセルサイズにもとづいたスケーリング倍率で計算を行うシンボル@code{auto}のいずれかです。"

#. type: cindex
#: original_texis/display.texi:5735
#, no-wrap
msgid "show image"
msgstr "show image"

#. type: Plain text
#: original_texis/display.texi:5740
msgid "You can use an image descriptor by setting up the @code{display} property yourself, but it is easier to use the functions in this section."
msgstr "自分で@code{display}プロパティをセットアップしてイメージディスクリプタを使用できますが、このセクションの関数を使用するほうがより簡単です。"

#. type: defun
#: original_texis/display.texi:5741
#, no-wrap
msgid "insert-image image &optional string area slice"
msgstr "insert-image image &optional string area slice"

#. type: defun
#: original_texis/display.texi:5748
msgid "This function inserts @var{image} in the current buffer at point.  The value @var{image} should be an image descriptor; it could be a value returned by @code{create-image}, or the value of a symbol defined with @code{defimage}.  The argument @var{string} specifies the text to put in the buffer to hold the image.  If it is omitted or @code{nil}, @code{insert-image} uses @code{\" \"} by default."
msgstr "この関数はカレントバッファーのポイント位置に@var{image}を挿入する。@var{image}はイメージディスクリプタであること。これは@code{create-image}によりリターンされた値、または@code{defimage}で定義されたシンボルの値を使用できる。引数@var{string}はイメージを保持するためにバッファー内に配置するテキストを指定する。これが省略か@code{nil}なら、@code{insert-image}はデフォルトで@code{\" \"}を使用する。"

#. type: defun
#: original_texis/display.texi:5754 original_texis/display.texi:5797
msgid "The argument @var{area} specifies whether to put the image in a margin.  If it is @code{left-margin}, the image appears in the left margin; @code{right-margin} specifies the right margin.  If @var{area} is @code{nil} or omitted, the image is displayed at point within the buffer's text."
msgstr "引数@var{area}はマージン内にイメージを置くかどうかを指定する。これが@code{left-margin}なら左マージンにイメージが表示され、@code{right-margin}なら右マージンを指定する。@var{area}が@code{nil}か省略なら、イメージはバッファーのテキスト内のポイント位置に表示される。"

#. type: defun
#: original_texis/display.texi:5763
msgid "The argument @var{slice} specifies a slice of the image to insert.  If @var{slice} is @code{nil} or omitted the whole image is inserted.  Otherwise, @var{slice} is a list @code{(@var{x} @var{y} @var{width} @var{height})} which specifies the @var{x} and @var{y} positions and @var{width} and @var{height} of the image area to insert.  Integer values are in units of pixels.  A floating-point number in the range 0.0--1.0 stands for that fraction of the width or height of the entire image."
msgstr "引数@var{slice}は挿入するイメージのスライスを指定する。@var{slice}が@code{nil}か省略された場に合はイメージ全体が挿入される。それ以外では、@var{slice}がリスト@code{(@var{x} @var{y} @var{width} @var{height})}なら@var{x}と@var{y}は位置、@var{width}と@var{height}は挿入するイメージの領域を指定する。整数値はピクセル単位。0.0から1.0までの浮動小数点数はイメージ全体の幅や高さにたいする割合を指定する。"

#. type: defun
#: original_texis/display.texi:5767
msgid "Internally, this function inserts @var{string} in the buffer, and gives it a @code{display} property which specifies @var{image}.  @xref{Display Property}."
msgstr "この関数は内部的にはバッファー内に@var{string}を挿入して、@var{image}を指定する@code{display}プロパティにそれを渡す。@ref{Display Property}を参照のこと。"

#. type: cindex
#: original_texis/display.texi:5769
#, no-wrap
msgid "slice, image"
msgstr "slice, image"

#. type: cindex
#: original_texis/display.texi:5770
#, no-wrap
msgid "image slice"
msgstr "image slice"

#. type: defun
#: original_texis/display.texi:5771
#, no-wrap
msgid "insert-sliced-image image &optional string area rows cols"
msgstr "insert-sliced-image image &optional string area rows cols"

#. type: defun
#: original_texis/display.texi:5775
msgid "This function inserts @var{image} in the current buffer at point, like @code{insert-image}, but splits the image into @var{rows}x@var{cols} equally sized slices."
msgstr "この関数は@code{insert-image}と同様にカレントバッファー内に@var{image}を挿入するが、イメージを@var{rows}✕@var{cols}の同一サイズのスライスに分割する点が異なる。"

#. type: defun
#: original_texis/display.texi:5780
msgid "Emacs displays each slice as a separate image, and allows more intuitive scrolling up/down, instead of jumping up/down the entire image when paging through a buffer that displays (large) images."
msgstr "Emacsは各スライスを個別のイメージとして表示して、(巨大な)イメージを表示するバッファーのページングの際にイメージ全体を上下にジャンプするのではなく、より直感的な上下スクロールが可能になる。"

#. type: defun
#: original_texis/display.texi:5782
#, no-wrap
msgid "put-image image pos &optional string area"
msgstr "put-image image pos &optional string area"

#. type: defun
#: original_texis/display.texi:5788
msgid "This function puts image @var{image} in front of @var{pos} in the current buffer.  The argument @var{pos} should be an integer or a marker.  It specifies the buffer position where the image should appear.  The argument @var{string} specifies the text that should hold the image as an alternative to the default."
msgstr "この関数はカレントバッファー内の@var{pos}の前にイメージ@var{image}を配置する。引数@var{pos}は整数かマーカーであること。これはイメージが表示されるべきバッファー位置を指定する。引数@var{string}は代替として表示されるべきデフォルトのイメージを保持するテキストであること。"

#. type: defun
#: original_texis/display.texi:5791
msgid "The argument @var{image} must be an image descriptor, perhaps returned by @code{create-image} or stored by @code{defimage}."
msgstr "引数@var{image}はイメージディスクリプタでなければならず、それは@code{create-image}がリターンされたか、あるいは@code{defimage}により格納されたイメージディスクリプタかもしれない。"

#. type: defun
#: original_texis/display.texi:5801
msgid "Internally, this function creates an overlay, and gives it a @code{before-string} property containing text that has a @code{display} property whose value is the image.  (Whew!)"
msgstr "内部的には、この関数はオーバーレイを作成して、値がそのイメージであるような@code{display}プロパティをもつテキストを含む、@code{before-string}プロパティをそのオーバーレイに与えている(なんと!)。"

#. type: defun
#: original_texis/display.texi:5803
#, no-wrap
msgid "remove-images start end &optional buffer"
msgstr "remove-images start end &optional buffer"

#. type: defun
#: original_texis/display.texi:5807
msgid "This function removes images in @var{buffer} between positions @var{start} and @var{end}.  If @var{buffer} is omitted or @code{nil}, images are removed from the current buffer."
msgstr "この関数は@var{buffer}の位置@var{start}と@var{end}の間のイメージを削除する。@var{buffer}が省略か@code{nil}ならカレントバッファーからイメージを削除する。"

#. type: defun
#: original_texis/display.texi:5811
msgid "This removes only images that were put into @var{buffer} the way @code{put-image} does it, not images that were inserted with @code{insert-image} or in other ways."
msgstr "これは@code{put-image}が行う方法で@var{buffer}に配置されたイメージだけを削除して、@code{insert-image}や他の方法で挿入されたイメージは削除しない。"

#. type: defun
#: original_texis/display.texi:5813
#, no-wrap
msgid "image-size spec &optional pixels frame"
msgstr "image-size spec &optional pixels frame"

#. type: cindex
#: original_texis/display.texi:5814
#, no-wrap
msgid "size of image"
msgstr "size of image"

#. type: defun
#: original_texis/display.texi:5822
msgid "This function returns the size of an image as a pair @w{@code{(@var{width} . @var{height})}}.  @var{spec} is an image specification.  @var{pixels} non-@code{nil} means return sizes measured in pixels, otherwise return sizes measured in the default character size of @var{frame} (@pxref{Frame Font}).  @var{frame} is the frame on which the image will be displayed.  @var{frame} null or omitted means use the selected frame (@pxref{Input Focus})."
msgstr "この関数はペアー@w{@code{(@var{width} . @var{height})}}としてイメージのサイズをリターンする。@var{spec}はイメージ仕様。@var{pixels}が非@code{nil}ならピクセル単位、それ以外なら@var{frame}のデフォルトの文字サイズの単位で量ったサイズをリターンする。@var{frame}はイメージが表示されるフレーム。@var{frame}が@code{nil}か省略された場合はに選択されたフレームを使用する(@ref{Input Focus}を参照)。"

#. type: defvar
#: original_texis/display.texi:5824
#, no-wrap
msgid "max-image-size"
msgstr "max-image-size"

#. type: defvar
#: original_texis/display.texi:5828
msgid "This variable is used to define the maximum size of image that Emacs will load.  Emacs will refuse to load (and display) any image that is larger than this limit."
msgstr "この変数はEmacsがロードするイメージの最大サイズを定義するために使用される。Emacsはこの制限より大きいイメージのロード(と表示)を拒絶するだろう。"

#. type: defvar
#: original_texis/display.texi:5834
msgid "If the value is an integer, it directly specifies the maximum image height and width, measured in pixels.  If it is floating point, it specifies the maximum image height and width as a ratio to the frame height and width.  If the value is non-numeric, there is no explicit limit on the size of images."
msgstr "値が整数ならピクセル単位で量ったイメージの最大の高さと幅を直接指定する。浮動小数点数ならフレームの高さと幅にたいする比率として、イメージの最大の高さと幅を指定する。値が数値でなければイメージサイズにたいする明示的な制限は存在しない。"

#. type: defvar
#: original_texis/display.texi:5840
msgid "The purpose of this variable is to prevent unreasonably large images from accidentally being loaded into Emacs.  It only takes effect the first time an image is loaded.  Once an image is placed in the image cache, it can always be displayed, even if the value of @code{max-image-size} is subsequently changed (@pxref{Image Cache})."
msgstr "この変数の目的は意図せずEmacsに不当に大きなイメージがロードされるとを防ぐことである。これはイメージの初回ロード時だけ効果がある。イメージが一度イメージキャッシュに置かれると、その後に@code{max-image-size}の値が変更されても、そのイメージは常に表示可能である(@ref{Image Cache}を参照)。"

#. type: Plain text
#: original_texis/display.texi:5845
msgid "Images inserted with the insertion functions above also get a local keymap installed in the text properties (or overlays) that span the displayed image.  This keymap defines the following commands:"
msgstr "上記の挿入関数で挿入されたイメージは、表示されたイメージを横断するテキスト(またはオーバーレイ)のプロパティ内にインストールされたローカルキーマップも取得します。このキーマップは以下のコマンドを定義します。"

#. type: item
#: original_texis/display.texi:5847
#, no-wrap
msgid "+"
msgstr "+"

#. type: table
#: original_texis/display.texi:5850
msgid "Increase the image size (@code{image-increase-size}).  A prefix value of @samp{4} means to increase the size by 40%.  The default is 20%."
msgstr "イメージサイズを拡大する(@code{image-increase-size})。@samp{4}というプレフィクス値は40%のサイズ拡大を意味する。デフォルトは20%。"

#. type: item
#: original_texis/display.texi:5851
#, no-wrap
msgid "-"
msgstr "-"

#. type: table
#: original_texis/display.texi:5854
msgid "Decrease the image size (@code{image-increase-size}).  A prefix value of @samp{4} means to decrease the size by 40%.  The default is 20%."
msgstr "イメージサイズを縮小する(@code{image-increase-size})。@samp{4}というプレフィクス値は40%のサイズ縮小を意味する。デフォルトは20%。"

#. type: item
#: original_texis/display.texi:5855
#, no-wrap
msgid "r"
msgstr "r"

#. type: table
#: original_texis/display.texi:5857
msgid "Rotate the image by 90 degrees (@code{image-rotate})."
msgstr "イメージを90度で回転する(@code{image-rotate})。"

#. type: item
#: original_texis/display.texi:5858
#, no-wrap
msgid "o"
msgstr "o"

#. type: table
#: original_texis/display.texi:5860
msgid "Save the image to a file (@code{image-save})."
msgstr "イメージをファイルに保存する(@code{image-save})。"

#. type: cindex
#: original_texis/display.texi:5864
#, no-wrap
msgid "multi-frame images"
msgstr "multi-frame images"

#. type: cindex
#: original_texis/display.texi:5866
#, no-wrap
msgid "animation"
msgstr "animation"

#. type: cindex
#: original_texis/display.texi:5867
#, no-wrap
msgid "image animation"
msgstr "image animation"

#. type: cindex
#: original_texis/display.texi:5868
#, no-wrap
msgid "image frames"
msgstr "image frames"

#. type: Plain text
#: original_texis/display.texi:5873
msgid "Some image files can contain more than one image.  We say that there are multiple ``frames'' in the image.  At present, Emacs supports multiple frames for GIF, TIFF, and certain ImageMagick formats such as DJVM@."
msgstr "複数のイメージを含むことができるイメージファイルがいくつかあります。わたしたちはこのような場合には、イメージ内に複数の``フレーム''があると表現しています。現在のところEmacsはGIF、TIFF、およびDJVMのような特定のImageMagickフォーマットにたいする複数フレームをサポートします。"

#. type: Plain text
#: original_texis/display.texi:5877
msgid "The frames can be used either to represent multiple pages (this is usually the case with multi-frame TIFF files, for example), or to create animation (usually the case with multi-frame GIF files)."
msgstr "フレームは複数のページを表現するため(通常はたとえばマルチフレームTIFFのケースが該当)、あるいはアニメーションを作成するため(通常はマルチフレームGIFファイルのケースが該当)に使用できます。"

#. type: Plain text
#: original_texis/display.texi:5880
msgid "A multi-frame image has a property @code{:index}, whose value is an integer (counting from 0) that specifies which frame is being displayed."
msgstr "マルチフレームイメージは、表示されるフレームを指定する整数値(0から数える)が値であるようなプロパティ@code{:index}をもっています。"

#. type: defun
#: original_texis/display.texi:5881
#, no-wrap
msgid "image-multi-frame-p image"
msgstr "image-multi-frame-p image"

#. type: defun
#: original_texis/display.texi:5889
msgid "This function returns non-@code{nil} if @var{image} contains more than one frame.  The actual return value is a cons @code{(@var{nimages} . @var{delay})}, where @var{nimages} is the number of frames and @var{delay} is the delay in seconds between them, or @code{nil} if the image does not specify a delay.  Images that are intended to be animated usually specify a frame delay, whereas ones that are intended to be treated as multiple pages do not."
msgstr "この関数は@var{image}が2つ以上のフレームを含めば非@code{nil}をリターンする。実際のリターン値はコンス@code{(@var{nimages} . @var{delay})}であり@var{nimages}はフレーム数、@var{delay}はフレーム間の遅延秒数、イメージが遅延を指定しなければ@code{nil}。通常はアニメーションを意図されたイメージはフレームの遅延を指定して、複数ページとして扱われることを意図したイメージは指定しない。"

#. type: defun
#: original_texis/display.texi:5891
#, no-wrap
msgid "image-current-frame image"
msgstr "image-current-frame image"

#. type: defun
#: original_texis/display.texi:5894
msgid "This function returns the index of the current frame number for @var{image}, counting from 0."
msgstr "この関数は@var{image}にたいして0から数えたカレントフレーム番号のインデックスをリターンする。"

#. type: defun
#: original_texis/display.texi:5896
#, no-wrap
msgid "image-show-frame image n &optional nocheck"
msgstr "image-show-frame image n &optional nocheck"

#. type: defun
#: original_texis/display.texi:5902
msgid "This function switches @var{image} to frame number @var{n}.  It replaces a frame number outside the valid range with that of the end of the range, unless @var{nocheck} is non-@code{nil}.  If @var{image} does not contain a frame with the specified number, the image displays as a hollow box."
msgstr "この関数は@var{image}をフレーム番号@var{n}とスイッチする。@var{nocheck}が@code{nil}なら有効範囲外のフレーム番号を範囲終端に置き換える。@var{image}が指定された番号のフレームを含まなければイメージは中抜きの四角(hollow box)で表示される。"

#. type: defun
#: original_texis/display.texi:5904
#, no-wrap
msgid "image-animate image &optional index limit"
msgstr "image-animate image &optional index limit"

#. type: defun
#: original_texis/display.texi:5910
msgid "This function animates @var{image}.  The optional integer @var{index} specifies the frame from which to start (default 0).  The optional argument @var{limit} controls the length of the animation.  If omitted or @code{nil}, the image animates once only; if @code{t} it loops forever; if a number animation stops after that many seconds."
msgstr "この関数は@var{image}をアニメーション表示する。オプションの整数@var{index}は開始するフレームを指定する(デフォルトは0)。オプション引数@var{limit}はアニメーションの長さを制御する。これが省略か@code{nil}ならアニメーション回数は1回、@code{t}なら永久にループ表示する。数値ならその秒数後にアニメーションは停止する。"

#. type: vindex
#: original_texis/display.texi:5912
#, no-wrap
msgid "image-minimum-frame-delay"
msgstr "image-minimum-frame-delay"

#. type: vindex
#: original_texis/display.texi:5913
#, no-wrap
msgid "image-default-frame-delay"
msgstr "image-default-frame-delay"

# texinfoコマンド単体でない行を処理できないバグに対応するため別途shで対応
#. type: Plain text
#: original_texis/display.texi:5918
msgid "minimum frame delay of 0.01 (@code{image-minimum-frame-delay}) seconds.  If the image itself does not specify a delay, Emacs uses @code{image-default-frame-delay}."
msgstr "アニメーションはタイマーにより処理されます。Emacsは最小のフレーム遅延を0.01秒( @code{image-minimum-frame-delay}の値)とすることに注意してください。そのイメージ自身が遅延を指定しなければEmacsは@code{image-default-frame-delay}を使用します。"

#. type: defun
#: original_texis/display.texi:5919
#, no-wrap
msgid "image-animate-timer image"
msgstr "image-animate-timer image"

#. type: defun
#: original_texis/display.texi:5922
msgid "This function returns the timer responsible for animating @var{image}, if there is one."
msgstr "この関数はもし存在すれば@var{image}のアニメーションに責任をもつタイマーをリターンする。"

#. type: cindex
#: original_texis/display.texi:5927
#, no-wrap
msgid "image cache"
msgstr "image cache"

#. type: Plain text
#: original_texis/display.texi:5934
msgid "Emacs caches images so that it can display them again more efficiently.  When Emacs displays an image, it searches the image cache for an existing image specification @code{equal} to the desired specification.  If a match is found, the image is displayed from the cache.  Otherwise, Emacs loads the image normally."
msgstr "Emacsはイメージをより効果的に再表示できるようにイメージをキャッシュします。Emacsがイメージを表示する際には、既存のイメージ仕様が望む仕様と@code{equal}なイメージキャッシュを検索します。マッチが見つかったらイメージはキャッシュから表示され、それ以外ではイメージは通常のようにロードされます。"

#. type: defun
#: original_texis/display.texi:5935
#, no-wrap
msgid "image-flush spec &optional frame"
msgstr "image-flush spec &optional frame"

#. type: defun
#: original_texis/display.texi:5941
msgid "This function removes the image with specification @var{spec} from the image cache of frame @var{frame}.  Image specifications are compared using @code{equal}.  If @var{frame} is @code{nil}, it defaults to the selected frame.  If @var{frame} is @code{t}, the image is flushed on all existing frames."
msgstr "この関数はフレーム@var{frame}のイメージキャッシュから仕様@var{spec}のイメージを削除する。イメージ仕様の比較には@code{equal}を使用する。@var{frame}が@code{nil}の場合のデフォルトは選択されたフレーム。@var{frame}が@code{t}ならイメージはすべての既存フレームでフラッシュされる。"

#. type: defun
#: original_texis/display.texi:5946
msgid "In Emacs's current implementation, each graphical terminal possesses an image cache, which is shared by all the frames on that terminal (@pxref{Multiple Terminals}).  Thus, refreshing an image in one frame also refreshes it in all other frames on the same terminal."
msgstr "Emacsの現実装では各グラフィカル端末はイメージキャッシュを処理して、それはその端末上のすべてのフレームにより共有される(@ref{Multiple Terminals}を参照)。つまりあるフレームでイメージをリフレッシュすると、同一端末上の他のすべてのフレームでもリフレッシュされる。"

#. type: Plain text
#: original_texis/display.texi:5955
msgid "One use for @code{image-flush} is to tell Emacs about a change in an image file.  If an image specification contains a @code{:file} property, the image is cached based on the file's contents when the image is first displayed.  Even if the file subsequently changes, Emacs continues displaying the old version of the image.  Calling @code{image-flush} flushes the image from the cache, forcing Emacs to re-read the file the next time it needs to display that image."
msgstr "@code{image-flush}の1つの用途はEmacsにイメージファイルの変更を伝えることです。イメージ仕様が@code{:file}プロパティを含む場合には、そのイメージの初回表示時にファイルコンテンツにもとづいてイメージがキャッシュされます。たとえその後にファイルが変更されても、Emacsはそのイメージの古いバージョンを表示し続けます。@code{image-flush}を呼び出すことによりそのイメージはキャッシュからフラッシュされて、イメージの表示が次回必要になった際にEmacsにファイルの再読み込みを強制します。"

#. type: Plain text
#: original_texis/display.texi:5961
msgid "Another use for @code{image-flush} is for memory conservation.  If your Lisp program creates a large number of temporary images over a period much shorter than @code{image-cache-eviction-delay} (see below), you can opt to flush unused images yourself, instead of waiting for Emacs to do it automatically."
msgstr "@code{image-flush}の他の用途はメモリー節約です。Lispプログラムで@code{image-cache-eviction-delay} (以下参照)より遥かに短い期間に多数の一時イメージを作成する場合には、Emacsが自動的に行うことを待たずに自身で使用されていないイメージのフラッシュを選択できます。"

#. type: defun
#: original_texis/display.texi:5962
#, no-wrap
msgid "clear-image-cache &optional filter"
msgstr "clear-image-cache &optional filter"

#. type: defun
#: original_texis/display.texi:5970
msgid "This function clears an image cache, removing all the images stored in it.  If @var{filter} is omitted or @code{nil}, it clears the cache for the selected frame.  If @var{filter} is a frame, it clears the cache for that frame.  If @var{filter} is @code{t}, all image caches are cleared.  Otherwise, @var{filter} is taken to be a file name, and all images associated with that file name are removed from all image caches."
msgstr "この関数はイメージキャッシュ内に格納されたすべてのイメージを削除してイメージキャッシュをクリアーする。@var{filter}が省略か@code{nil}なら選択されたフレームにたいしてキャッシュをクリアーする。@var{filter}がフレームなら、そのフレームにたいしてキャッシュをクリアーする。@var{filter}が@code{t}なら、すべてのイメージキャッシュをクリアーする。それ以外なら@var{filter}はファイル名として解釈されて、すべてのイメージキャッシュからそのファイル名に関連付けられたすべてのイメージを削除する。"

#. type: Plain text
#: original_texis/display.texi:5975
msgid "If an image in the image cache has not been displayed for a specified period of time, Emacs removes it from the cache and frees the associated memory."
msgstr "イメージキャッシュ内のイメージが指定された期間内に表示されなければ、Emacsはそれをキャッシュから削除して割り当てられたメモリーを解放します。"

#. type: defvar
#: original_texis/display.texi:5976
#, no-wrap
msgid "image-cache-eviction-delay"
msgstr "image-cache-eviction-delay"

#. type: defvar
#: original_texis/display.texi:5980
msgid "This variable specifies the number of seconds an image can remain in the cache without being displayed.  When an image is not displayed for this length of time, Emacs removes it from the image cache."
msgstr "この変数は表示されることなくイメージがキャッシュ内に残留できる秒数を指定する。あるイメージがこの秒数の間に表示されなければ、Emacsはそれをイメージキャッシュから削除する。"

#. type: defvar
#: original_texis/display.texi:5983
msgid "Under some circumstances, if the number of images in the cache grows too large, the actual eviction delay may be shorter than this."
msgstr "ある状況下では、もしキャッシュ内のイメージ数が大きくなり過ぎた場合には実際の立ち退き遅延(eviction delay)はこれより短くなり得る。"

#. type: defvar
#: original_texis/display.texi:5987
msgid "If the value is @code{nil}, Emacs does not remove images from the cache except when you explicitly clear it.  This mode can be useful for debugging."
msgstr "値が@code{nil}なら明示的にキャッシュをクリアーした場合を除き、Emacsはキャッシュからイメージを削除しない。このモードはデバッグ時に有用かもしれない。"

#. type: section
#: original_texis/display.texi:5990
#, no-wrap
msgid "Embedded Native Widgets"
msgstr "Embedded Native Widgets"

#. type: cindex
#: original_texis/display.texi:5991
#, no-wrap
msgid "xwidget"
msgstr "xwidget"

#. type: cindex
#: original_texis/display.texi:5992
#, no-wrap
msgid "embedded widgets"
msgstr "embedded widgets"

#. type: cindex
#: original_texis/display.texi:5993
#, no-wrap
msgid "webkit browser widget"
msgstr "webkit browser widget"

#. type: Plain text
#: original_texis/display.texi:6000
msgid "Emacs is able to display native widgets, such as GTK+ WebKit widgets, in Emacs buffers when it was built with the necessary support libraries and is running on a graphical terminal.  To test whether Emacs supports display of embedded widgets, check that the @code{xwidget-internal} feature is available (@pxref{Named Features})."
msgstr "必要なサポートライブラリーつきでEmacsがビルドされていて、かつグラフィカル端末上で実行されていれば、Emacsバッファー内にGTK+ WebKitウィジェットのようなネイティブウィジェットを表示することができます。Emacsが埋め込みウィジェットを表示可能かテストするには、@code{xwidget-internal}機能が利用可能かどうかをチェックします(@ref{Named Features}を参照)。"

#. type: Plain text
#: original_texis/display.texi:6005
msgid "To display an embedded widget in a buffer, you must first create an xwidget object, and then use that object as the display specifier in a @code{display} text or overlay property (@pxref{Display Property})."
msgstr "Emacsバッファー内に埋め込みウィジェットを表示するためには、最初にxwidgetオブジェクトを作成して、テキストプロパティまたはオーバーレイプロパティ@code{display}内のディスプレイ仕様としてそのオブジェクトを使用します(@ref{Display Property}を参照)。"

#. type: defun
#: original_texis/display.texi:6006
#, no-wrap
msgid "make-xwidget type title width height arguments &optional buffer"
msgstr "make-xwidget type title width height arguments &optional buffer"

#. type: defun
#: original_texis/display.texi:6012
msgid "This creates and returns an xwidget object.  If @var{buffer} is omitted or @code{nil}, it defaults to the current buffer.  If @var{buffer} names a buffer that doesn't exist, it will be created.  The @var{type} identifies the type of the xwidget component, it can be one of the following:"
msgstr "これはxwidgetオブジェクトを作成してリターンする。@var{buffer}が省略か@code{nil}の場合のデフォルトはカレントバッファー。@var{buffer}が存在しないバッファーの名前を指定する場合には作成する。@var{type}はxwidgetコンポーネントを識別するもので以下のいずれかが可能："

#. type: item
#: original_texis/display.texi:6014
#, no-wrap
msgid "webkit"
msgstr "webkit"

#. type: table
#: original_texis/display.texi:6016
msgid "The WebKit component."
msgstr "WebKitコンポーネント。"

#. type: defun
#: original_texis/display.texi:6020
msgid "The @var{width} and @var{height} arguments specify the widget size in pixels, and @var{title}, a string, specifies its title."
msgstr "引数@var{width}と@var{height}はウィジェットのサイズをピクセル単位で指定して、@var{title}はそのタイトルを指定する文字列。"

#. type: defun
#: original_texis/display.texi:6022
#, no-wrap
msgid "xwidgetp object"
msgstr "xwidgetp object"

#. type: defun
#: original_texis/display.texi:6025
msgid "This function returns @code{t} if @var{object} is an xwidget, @code{nil} otherwise."
msgstr "この関数は@var{object}がxwidgetなら@code{t}、それ以外は@code{nil}をリターンする。"

#. type: defun
#: original_texis/display.texi:6027
#, no-wrap
msgid "xwidget-plist xwidget"
msgstr "xwidget-plist xwidget"

#. type: defun
#: original_texis/display.texi:6029
msgid "This function returns the property list of @var{xwidget}."
msgstr "この関数は@var{xwidget}のプロパティリストをリターンする。"

#. type: defun
#: original_texis/display.texi:6031
#, no-wrap
msgid "set-xwidget-plist xwidget plist"
msgstr "set-xwidget-plist xwidget plist"

#. type: defun
#: original_texis/display.texi:6034
msgid "This function replaces the property list of @var{xwidget} with a new property list given by @var{plist}."
msgstr "この関数は@var{plist}で与えられた新たなプロパティリストで@var{xwidget}のプロパティリストを置き換える。"

#. type: defun
#: original_texis/display.texi:6036
#, no-wrap
msgid "xwidget-buffer xwidget"
msgstr "xwidget-buffer xwidget"

#. type: defun
#: original_texis/display.texi:6038
msgid "This function returns the buffer of @var{xwidget}."
msgstr "この関数は@var{xwidget}のバッファーをリターンする。"

#. type: defun
#: original_texis/display.texi:6040
#, no-wrap
msgid "get-buffer-xwidgets buffer"
msgstr "get-buffer-xwidgets buffer"

#. type: defun
#: original_texis/display.texi:6045
msgid "This function returns a list of xwidget objects associated with the @var{buffer}, which can be specified as a buffer object or a name of an existing buffer, a string.  The value is @code{nil} if @var{buffer} contains no xwidgets."
msgstr "この関数は@var{buffer}に関連付けられたxwidgetオブジェクトのリストをリターンする。@var{buffer}はバッファーオブジェクトか既存のバッファー名(文字列)を指定できる。@var{buffer}にxwidgetが含まれなければ値は@code{nil}。"

#. type: defun
#: original_texis/display.texi:6047
#, no-wrap
msgid "xwidget-webkit-goto-uri xwidget uri"
msgstr "xwidget-webkit-goto-uri xwidget uri"

#.  FIXME: What else can a URI specify in this context?
#. type: defun
#: original_texis/display.texi:6051
msgid "This function browses the specified @var{uri} in the given @var{xwidget}.  The @var{uri} is a string that specifies the name of a file or a URL."
msgstr "この関数は与えられた@var{xwidget}内で指定した@var{uri}をブラウズ(browse:  閲覧)する。@var{uri}はファイルかURLを指定する文字列。"

#. type: defun
#: original_texis/display.texi:6053
#, no-wrap
msgid "xwidget-webkit-execute-script xwidget script"
msgstr "xwidget-webkit-execute-script xwidget script"

#. type: defun
#: original_texis/display.texi:6056
msgid "This function causes the browser widget specified by @var{xwidget} to execute the specified JavaScript @code{script}."
msgstr "この関数は@var{xwidget}で指定されるブラウザウィジェットに、@code{script}で指定するJavaScriptを実行させる。"

#. type: defun
#: original_texis/display.texi:6058
#, no-wrap
msgid "xwidget-webkit-execute-script-rv xwidget script &optional default"
msgstr "xwidget-webkit-execute-script-rv xwidget script &optional default"

#. type: defun
#: original_texis/display.texi:6064
msgid "This function executes the specified @var{script} like @code{xwidget-webkit-execute-script} does, but it also returns the script's return value as a string.  If @var{script} doesn't return a value, this function returns @var{default}, or @code{nil} if @var{default} was omitted."
msgstr "この関数は@code{xwidget-webkit-execute-script}と同様に指定した@var{script}を実行するが、スクリプトのリターン値も文字列としてリターンする。この関数は@var{script}が値をリターンしなければ@var{default}、@var{default}が省略されたら@code{nil}をリターンする。"

#. type: defun
#: original_texis/display.texi:6066
#, no-wrap
msgid "xwidget-webkit-get-title xwidget"
msgstr "xwidget-webkit-get-title xwidget"

#. type: defun
#: original_texis/display.texi:6068
msgid "This function returns the title of @var{xwidget} as a string."
msgstr "この関数は@var{xwidget}のタイトルを文字列としてリターンする。"

#. type: defun
#: original_texis/display.texi:6070
#, no-wrap
msgid "xwidget-resize xwidget width height"
msgstr "xwidget-resize xwidget width height"

#. type: defun
#: original_texis/display.texi:6073
msgid "This function resizes the specified @var{xwidget} to the size @var{width}x@var{height} pixels."
msgstr "この関数は指定した@var{xwidget}を@var{width}x@var{height}のサイズ(ピクセル単位)にリサイズする。"

#. type: defun
#: original_texis/display.texi:6075
#, no-wrap
msgid "xwidget-size-request xwidget"
msgstr "xwidget-size-request xwidget"

#. type: defun
#: original_texis/display.texi:6079
msgid "This function returns the desired size of @var{xwidget} as a list of the form @code{(@var{width} @var{height})}.  The dimensions are in pixels."
msgstr "この関数は@var{xwidget}のサイズを@code{(@var{width} @var{height})}という形式のリストでリターンする。単位はピクセル。"

#. type: defun
#: original_texis/display.texi:6081
#, no-wrap
msgid "xwidget-info xwidget"
msgstr "xwidget-info xwidget"

#. type: defun
#: original_texis/display.texi:6086
msgid "This function returns the attributes of @var{xwidget} as a vector of the form @code{[@var{type} @var{title} @var{width} @var{height}]}.  The attributes are usually determined by @code{make-xwidget} when the xwidget is created."
msgstr "この関数は@code{[@var{type} @var{title} @var{width} @var{height}]}という形式のベクターで@var{xwidget}の属性をリターンする。属性は通常はxwidgetの作成時に@code{make-xwidget}で決定される。"

#. type: defun
#: original_texis/display.texi:6088
#, no-wrap
msgid "set-xwidget-query-on-exit-flag xwidget flag"
msgstr "set-xwidget-query-on-exit-flag xwidget flag"

#. type: defun
#: original_texis/display.texi:6093
msgid "This function allows you to arrange that Emacs will ask the user for confirmation before exiting or before killing a buffer that has @var{xwidget} associated with it.  If @var{flag} is non-@code{nil}, Emacs will query the user, otherwise it will not."
msgstr "この関数はEmacsが@var{xwidget}に関連付けられたバッファーのexitやkillの前にユーザーに確認を求めるようにアレンジすることを可能にする。@var{flag}が非@code{nil}ならEmacsはユーザーに確認を求めて、それ以外なら確認を求めない。"

#. type: defun
#: original_texis/display.texi:6095
#, no-wrap
msgid "xwidget-query-on-exit-flag xwidget"
msgstr "xwidget-query-on-exit-flag xwidget"

#. type: defun
#: original_texis/display.texi:6098
msgid "This function returns the current setting of @var{xwidget}s query-on-exit flag, either @code{t} or @code{nil}."
msgstr "この関数は@var{xwidget}のquery-on-exitフラグのカレントセッティングを@code{t}か@code{nil}のいずれかでリターンする。"

#. type: cindex
#: original_texis/display.texi:6102
#, no-wrap
msgid "buttons in buffers"
msgstr "buttons in buffers"

#. type: cindex
#: original_texis/display.texi:6103
#, no-wrap
msgid "clickable buttons in buffers"
msgstr "clickable buttons in buffers"

#. type: Plain text
#: original_texis/display.texi:6109
msgid "The Button package defines functions for inserting and manipulating @dfn{buttons} that can be activated with the mouse or via keyboard commands.  These buttons are typically used for various kinds of hyperlinks."
msgstr "Buttonパッケージはマウスやキーボードコマンドでアクティブ化することができる、@dfn{ボタン(buttons)}の挿入と操作に関する関数を定義します。これらのボタンは典型的には種々のハイパーリンクに使用されます。"

#. type: Plain text
#: original_texis/display.texi:6117
msgid "A button is essentially a set of text or overlay properties, attached to a stretch of text in a buffer.  These properties are called @dfn{button properties}.  One of these properties, the @dfn{action property}, specifies a function which is called when the user invokes the button using the keyboard or the mouse.  The action function may examine the button and use its other properties as desired."
msgstr "本質的にボタンとはバッファー内のテキスト範囲にアタッチされたテキストプロパティやオーバーレイのプロパティのセットです。これらのプロパティは@dfn{ボタンプロパティ(button properties)}と呼ばれます。これらのプロパティのうちの1つは@dfn{アクションプロパティ(action property)}であり、これはユーザーがキーボードかマウスを使用してボタンを呼び出した際に呼び出される関数を指定します。アクション関数はボタンを調べ、必要に応じて他のプロパティを使用できます。"

#. type: Plain text
#: original_texis/display.texi:6123
msgid "In some ways, the Button package duplicates the functionality in the Widget package.  @xref{Top, , Introduction, widget, The Emacs Widget Library}.  The advantage of the Button package is that it is faster, smaller, and simpler to program.  From the point of view of the user, the interfaces produced by the two packages are very similar."
msgstr "いくつかの機能面でButtonパッケージとWidgetパッケージは重複しています。@ref{Top, , Introduction, widget, The Emacs Widget Library}を参照してください。Buttonパッケージの利点は、より高速で小さくプログラムにたいしてよりシンプルであることです。ユーザーの観点からは、2つのパッケージが提供するインターフェイスは非常に類似しています。"

#. type: subsection
#: original_texis/display.texi:6130 original_texis/display.texi:6132
#: original_texis/display.texi:6133
#, no-wrap
msgid "Button Properties"
msgstr "Button Properties"

#. type: menuentry
#: original_texis/display.texi:6130
msgid "Button properties with special meanings."
msgstr "特別な意味をもつボタンプロパティ。"

#. type: subsection
#: original_texis/display.texi:6130 original_texis/display.texi:6197
#: original_texis/display.texi:6198
#, no-wrap
msgid "Button Types"
msgstr "Button Types"

#. type: menuentry
#: original_texis/display.texi:6130
msgid "Defining common properties for classes of buttons."
msgstr "ボタンのクラスにたいして一般的なプロパティを定義する。"

#. type: subsection
#: original_texis/display.texi:6130 original_texis/display.texi:6227
#: original_texis/display.texi:6228
#, no-wrap
msgid "Making Buttons"
msgstr "Making Buttons"

#. type: menuentry
#: original_texis/display.texi:6130
msgid "Adding buttons to Emacs buffers."
msgstr "Emacsバッファーへのボタンの追加。"

#. type: subsection
#: original_texis/display.texi:6130 original_texis/display.texi:6284
#: original_texis/display.texi:6285
#, no-wrap
msgid "Manipulating Buttons"
msgstr "Manipulating Buttons"

#. type: menuentry
#: original_texis/display.texi:6130
msgid "Getting and setting properties of buttons."
msgstr "ボタンプロパティの取得とセット。"

#. type: subsection
#: original_texis/display.texi:6130 original_texis/display.texi:6354
#: original_texis/display.texi:6355
#, no-wrap
msgid "Button Buffer Commands"
msgstr "Button Buffer Commands"

#. type: menuentry
#: original_texis/display.texi:6130
msgid "Buffer-wide commands and bindings for buttons."
msgstr "ボタンにたいするバッファー規模のコマンドとバインディング。"

#. type: cindex
#: original_texis/display.texi:6134
#, no-wrap
msgid "button properties"
msgstr "button properties"

#. type: Plain text
#: original_texis/display.texi:6140
msgid "Each button has an associated list of properties defining its appearance and behavior, and other arbitrary properties may be used for application specific purposes.  The following properties have special meaning to the Button package:"
msgstr "ボタンはその外観と振る舞いを定義するプロパティの連想リスト(associated list)をもち、アプリケーションの特別な目的のために他の任意のプロパティを使用できます。以下のプロパティはButtonパッケージにたいして特別な意味をもちます:"

#. type: item
#: original_texis/display.texi:6142
#, no-wrap
msgid "action"
msgstr "action"

#. type: kindex
#: original_texis/display.texi:6143
#, no-wrap
msgid "action @r{(button property)}"
msgstr "action @r{(button property)}"

#. type: table
#: original_texis/display.texi:6147
msgid "The function to call when the user invokes the button, which is passed the single argument @var{button}.  By default this is @code{ignore}, which does nothing."
msgstr "ユーザーがボタンを呼び出した際に呼び出す関数であり、単一の引数@var{button}を渡して呼び出される。デフォルトではこれは何も行わない@code{ignore}。"

#. type: item
#: original_texis/display.texi:6148
#, no-wrap
msgid "mouse-action"
msgstr "mouse-action"

#. type: kindex
#: original_texis/display.texi:6149
#, no-wrap
msgid "mouse-action @r{(button property)}"
msgstr "mouse-action @r{(button property)}"

#. type: table
#: original_texis/display.texi:6154
msgid "This is similar to @code{action}, and when present, will be used instead of @code{action} for button invocations resulting from mouse-clicks (instead of the user hitting @key{RET}).  If not present, mouse-clicks use @code{action} instead."
msgstr "これは@code{action}と似ているが与えられた際には、(@key{RET}押下のかわりに)マウスクリックによりボタンが呼び出された場合ｎ@code{action}のかわりに使用される。与えられなければマウスクリックはかわりに@code{action}を使用する。"

#. type: kindex
#: original_texis/display.texi:6156
#, no-wrap
msgid "face @r{(button property)}"
msgstr "face @r{(button property)}"

#. type: table
#: original_texis/display.texi:6159
msgid "This is an Emacs face controlling how buttons of this type are displayed; by default this is the @code{button} face."
msgstr "このタイプのボタンが表示される方法を制御するEmacsフェイス。デフォルトは@code{button}フェイス。"

#. type: kindex
#: original_texis/display.texi:6161
#, no-wrap
msgid "mouse-face @r{(button property)}"
msgstr "mouse-face @r{(button property)}"

#. type: table
#: original_texis/display.texi:6165
msgid "This is an additional face which controls appearance during mouse-overs (merged with the usual button face); by default this is the usual Emacs @code{highlight} face."
msgstr "ボタン上にマウスがある際の外観を制御する追加のフェイス(通常のbuttonフェイスとマージされる)。デフォルトはEmacsの通常の@code{highlight}フェイス。"

#. type: kindex
#: original_texis/display.texi:6167
#, no-wrap
msgid "keymap @r{(button property)}"
msgstr "keymap @r{(button property)}"

#. type: table
#: original_texis/display.texi:6172
msgid "The button's keymap, defining bindings active within the button region.  By default this is the usual button region keymap, stored in the variable @code{button-map}, which defines @key{RET} and @key{mouse-2} to invoke the button."
msgstr "そのボタンリージョン(button region)でアクティブなバインディングを定義するボタンのキーマップ。デフォルトは変数@code{button-map}に格納された通常のボタンリージョンキーマップであり、これはボタン呼び出しにたいして@key{RET}と@key{mouse-2}を定義している。"

#. type: kindex
#: original_texis/display.texi:6174
#, no-wrap
msgid "type @r{(button property)}"
msgstr "type @r{(button property)}"

#. type: table
#: original_texis/display.texi:6176
msgid "The button type.  @xref{Button Types}."
msgstr "ボタンのタイプ。@ref{Button Types}を参照のこと。"

#. type: kindex
#: original_texis/display.texi:6178
#, no-wrap
msgid "help-index @r{(button property)}"
msgstr "help-index @r{(button property)}"

#. type: table
#: original_texis/display.texi:6181
msgid "A string displayed by the Emacs tool-tip help system; by default, @code{\"mouse-2, RET: Push this button\"}."
msgstr "Emacsのツールチップヘルプシステムにより表示あれる文字列。デフォルトは@code{\"mouse-2, RET: Push this button\"}。"

#. type: item
#: original_texis/display.texi:6182
#, no-wrap
msgid "follow-link"
msgstr "follow-link"

#. type: kindex
#: original_texis/display.texi:6183
#, no-wrap
msgid "follow-link @r{(button property)}"
msgstr "follow-link @r{(button property)}"

#. type: table
#: original_texis/display.texi:6186
msgid "The follow-link property, defining how a @key{mouse-1} click behaves on this button, @xref{Clickable Text}."
msgstr "このボタンにたいして@key{mouse-1}クリックが振る舞う方法を定義するfollow-linkプロパティ。@ref{Clickable Text}を参照のこと。"

#. type: item
#: original_texis/display.texi:6187
#, no-wrap
msgid "button"
msgstr "button"

#. type: kindex
#: original_texis/display.texi:6188
#, no-wrap
msgid "button @r{(button property)}"
msgstr "button @r{(button property)}"

#. type: table
#: original_texis/display.texi:6192
msgid "All buttons have a non-@code{nil} @code{button} property, which may be useful in finding regions of text that comprise buttons (which is what the standard button functions do)."
msgstr "すべてのボタンは非@code{nil}の@code{button}プロパティをもち、これはボタンを含むテキストリージョンを探すのに有用かもしれない(標準的なボタン関数はこれを行う)。"

#. type: Plain text
#: original_texis/display.texi:6196
msgid "There are other properties defined for the regions of text in a button, but these are not generally interesting for typical uses."
msgstr "ボタン内のテキストリージョンにたいして定義された他のプロパティも存在しますが、それらは典型的な用途にたいしては一般的には無関係でしょう。"

#. type: cindex
#: original_texis/display.texi:6199
#, no-wrap
msgid "button types"
msgstr "button types"

#. type: Plain text
#: original_texis/display.texi:6206
msgid "Every button has a @dfn{button type}, which defines default values for the button's properties.  Button types are arranged in a hierarchy, with specialized types inheriting from more general types, so that it's easy to define special-purpose types of buttons for specific tasks."
msgstr "すべてのボタンはボタンのプロパティにたいするデフォルト値を定義する@dfn{ボタンタイプ(button type)}をもっています。ボタンタイプは、より汎用的なタイプから特化したタイプへと継承される階層構造で構成されており、特定のタスクにたいして特殊用途のボタンを簡単に定義できます。"

#. type: defun
#: original_texis/display.texi:6207
#, no-wrap
msgid "define-button-type name &rest properties"
msgstr "define-button-type name &rest properties"

#. type: defun
#: original_texis/display.texi:6214
msgid "Define a button type called @var{name} (a symbol).  The remaining arguments form a sequence of @var{property value} pairs, specifying default property values for buttons with this type (a button's type may be set by giving it a @code{type} property when creating the button, using the @code{:type} keyword argument)."
msgstr "@var{name} (シンボル)と呼ばれるボタンタイプを定義する。残りの引数は@var{property value}ペアーのシーケンスを形成する。これはそのタイプのボタンにたいするデフォルトのプロパティ値を指定する(ボタンのタイプはキーワード引数@code{:type}を使用してボタン作成時にそれを@code{type}プロパティに与えることによりセット可能)。"

#. type: defun
#: original_texis/display.texi:6220
msgid "In addition, the keyword argument @code{:supertype} may be used to specify a button-type from which @var{name} inherits its default property values.  Note that this inheritance happens only when @var{name} is defined; subsequent changes to a supertype are not reflected in its subtypes."
msgstr "加えて@var{name}がデフォルトプロパティ値を継承するボタンタイプ指定するためにキーワード引数@code{:supertype}を使用できる。この継承は@var{name}の定義時のみ発生することに注意。その後にsupertypeに行われた変更はsubtypeには反映されない。"

#. type: Plain text
#: original_texis/display.texi:6226
msgid "Using @code{define-button-type} to define default properties for buttons is not necessary---buttons without any specified type use the built-in button-type @code{button}---but it is encouraged, since doing so usually makes the resulting code clearer and more efficient."
msgstr "@code{define-button-type}を使用してボタンのデフォルトプロパティを定義するのは必須ではありません --- 特定のタイプをもたないボタンはビルトインのボタンタイプ@code{button}を使用します --- が推奨しません。これを行うことにより通常はコードがより明快かつ効果的になるからです。"

#. type: cindex
#: original_texis/display.texi:6229
#, no-wrap
msgid "making buttons"
msgstr "making buttons"

#. type: Plain text
#: original_texis/display.texi:6238
msgid "Buttons are associated with a region of text, using an overlay or text properties to hold button-specific information, all of which are initialized from the button's type (which defaults to the built-in button type @code{button}).  Like all Emacs text, the appearance of the button is governed by the @code{face} property; by default (via the @code{face} property inherited from the @code{button} button-type)  this is a simple underline, like a typical web-page link."
msgstr "ボタンはボタン固有の情報を保持するために、オーバーレイプロパティかテキストプロパティを使用してテキストのリージョンに関連付けられます。これらはすべてボタンのタイプ(デフォルトはビルトインのボタンタイプ@code{button})から初期化されます。すべてのEmacsテキストと同じようにボタンの外観は@code{face}プロパティにより制御されます。(ボタンタイプ@code{button}から継承された@code{face}プロパティを通じることにより)デフォルトでは典型的なウェブページリンクのようなシンプルなアンダーラインです。"

#. type: Plain text
#: original_texis/display.texi:6243
msgid "For convenience, there are two sorts of button-creation functions, those that add button properties to an existing region of a buffer, called @code{make-...button}, and those that also insert the button text, called @code{insert-...button}."
msgstr "簡便さのために2種類のボタン作成関数があります。1つはバッファーの既存リージョンにボタンプロパティを追加する@code{make-...button}と呼ばれる関数、もう1つはボタンテキストを挿入する@code{insert-...button}と呼ばれる関数です。"

#. type: Plain text
#: original_texis/display.texi:6252
msgid "The button-creation functions all take the @code{&rest} argument @var{properties}, which should be a sequence of @var{property value} pairs, specifying properties to add to the button; see @ref{Button Properties}.  In addition, the keyword argument @code{:type} may be used to specify a button-type from which to inherit other properties; see @ref{Button Types}.  Any properties not explicitly specified during creation will be inherited from the button's type (if the type defines such a property)."
msgstr "すべてのボタン作成関数は@code{&rest}引数の@var{properties}を受け取ります。これはボタンに追加するプロパティを指定する@var{property value}ペアーのシーケンスである必要があります。@ref{Button Properties}を参照してください。これに加えて他のプロパティの継承元となるボタンタイプの指定にキーワード引数@code{:type}を使用できます。@ref{Button Types}を参照してください。作成の間に明示的に指定されなかったプロパティは、(そのタイプがそのようなプロパティを定義していれば)そのボタンのタイプから継承されます。"

#. type: Plain text
#: original_texis/display.texi:6255
msgid "The following functions add a button using an overlay (@pxref{Overlays}) to hold the button properties:"
msgstr "以下の関数はボタンプロパティを保持するためにオーバーレイを使用してボタンを追加します(@ref{Overlays}を参照)。"

#. type: defun
#: original_texis/display.texi:6256
#, no-wrap
msgid "make-button beg end &rest properties"
msgstr "make-button beg end &rest properties"

#. type: defun
#: original_texis/display.texi:6259
msgid "This makes a button from @var{beg} to @var{end} in the current buffer, and returns it."
msgstr "これはカレントバッファー内の@var{beg}から@var{end}にボタンを作成してリターンする。"

#. type: defun
#: original_texis/display.texi:6261
#, no-wrap
msgid "insert-button label &rest properties"
msgstr "insert-button label &rest properties"

#. type: defun
#: original_texis/display.texi:6264
msgid "This insert a button with the label @var{label} at point, and returns it."
msgstr "これはポイント位置にラベル@var{label}のボタンを挿入してリターンする。"

#. type: Plain text
#: original_texis/display.texi:6273
msgid "The following functions are similar, but using text properties (@pxref{Text Properties}) to hold the button properties.  Such buttons do not add markers to the buffer, so editing in the buffer does not slow down if there is an extremely large numbers of buttons.  However, if there is an existing face text property on the text (e.g., a face assigned by Font Lock mode), the button face may not be visible.  Both of these functions return the starting position of the new button."
msgstr "以下の関数も同様ですが、ボタンプロパティを保持するためにテキストプロパティを使用します(@ref{Text Properties}を参照)。この種のボタンはバッファーにマーカーを追加しないので、非常に多数のボタンが存在してもバッファーでの編集が低速になることはありません。しかしそのテキストに既存のfaceテキストプロパティが存在する場合(たとえばFont Lockモードにより割り当てられたフェイス)には、そのボタンのフェイスは可視にならないかもしれません。これらの関数はいずれも新たなボタンの開始位置をリターンします。"

#. type: defun
#: original_texis/display.texi:6274
#, no-wrap
msgid "make-text-button beg end &rest properties"
msgstr "make-text-button beg end &rest properties"

#. type: defun
#: original_texis/display.texi:6277
msgid "This makes a button from @var{beg} to @var{end} in the current buffer, using text properties."
msgstr "これはテキストプロパティを使用してカレントバッファー内の@var{beg}から@var{end}にボタンを作成する。"

#. type: defun
#: original_texis/display.texi:6279
#, no-wrap
msgid "insert-text-button label &rest properties"
msgstr "insert-text-button label &rest properties"

#. type: defun
#: original_texis/display.texi:6282
msgid "This inserts a button with the label @var{label} at point, using text properties."
msgstr "これはテキストプロパティを使用してポイント位置にラベル@var{label}のボタンを挿入する。"

#. type: cindex
#: original_texis/display.texi:6286
#, no-wrap
msgid "manipulating buttons"
msgstr "manipulating buttons"

#. type: Plain text
#: original_texis/display.texi:6291
msgid "These are functions for getting and setting properties of buttons.  Often these are used by a button's invocation function to determine what to do."
msgstr "ボタンのプロパティの取得やセットを行う関数が存在します。これらは何を行うかを判断するためにボタンが呼び出す関数からよく使用される関数です。"

#. type: Plain text
#: original_texis/display.texi:6297
msgid "Where a @var{button} parameter is specified, it means an object referring to a specific button, either an overlay (for overlay buttons), or a buffer-position or marker (for text property buttons).  Such an object is passed as the first argument to a button's invocation function when it is invoked."
msgstr "@var{button}パラメーターが指定された場合にはオーバーレイ(オーバーレイボタンの場合)、またはバッファー位置やマーカー(テキストプロパティボタンの場合)いずれかという、特定のボタンを参照するオブジェクトを意味します。そのようなオブジェクトはボタンが関数を呼び出す際に1つ目の引数として渡されます。"

#. type: defun
#: original_texis/display.texi:6298
#, no-wrap
msgid "button-start button"
msgstr "button-start button"

#. type: defun
#: original_texis/display.texi:6300
msgid "Return the position at which @var{button} starts."
msgstr "@var{button}が開始される位置をリターンする。"

#. type: defun
#: original_texis/display.texi:6302
#, no-wrap
msgid "button-end button"
msgstr "button-end button"

#. type: defun
#: original_texis/display.texi:6304
msgid "Return the position at which @var{button} ends."
msgstr "@var{button}が終了する位置をリターンする。"

#. type: defun
#: original_texis/display.texi:6306
#, no-wrap
msgid "button-get button prop"
msgstr "button-get button prop"

#. type: defun
#: original_texis/display.texi:6308
msgid "Get the property of button @var{button} named @var{prop}."
msgstr "ボタン@var{button}の@var{prop}という名前のプロパティを取得する。"

#. type: defun
#: original_texis/display.texi:6310
#, no-wrap
msgid "button-put button prop val"
msgstr "button-put button prop val"

#. type: defun
#: original_texis/display.texi:6312
msgid "Set @var{button}'s @var{prop} property to @var{val}."
msgstr "@var{button}の@var{prop}プロパティに@var{val}をセットする。"

#. type: defun
#: original_texis/display.texi:6314
#, no-wrap
msgid "button-activate button &optional use-mouse-action"
msgstr "button-activate button &optional use-mouse-action"

#. type: defun
#: original_texis/display.texi:6321
msgid "Call @var{button}'s @code{action} property (i.e., invoke the function that is the value of that property, passing it the single argument @var{button}).  If @var{use-mouse-action} is non-@code{nil}, try to invoke the button's @code{mouse-action} property instead of @code{action}; if the button has no @code{mouse-action} property, use @code{action} as normal."
msgstr "@var{button}の@code{action}プロパティを呼び出す(単一の引数@var{button}を渡してプロパティの値である関数を呼び出す)。@var{use-mouse-action}が非@code{nil}なら、@code{action}のかわりにそのボタンの@code{mouse-action}プロパティの呼び出しを試みる。ボタンが@code{mouse-action}プロパティをもたなければ通常どおり@code{action}を使用する。"

#. type: defun
#: original_texis/display.texi:6323
#, no-wrap
msgid "button-label button"
msgstr "button-label button"

#. type: defun
#: original_texis/display.texi:6325
msgid "Return @var{button}'s text label."
msgstr "@var{button}のテキストラベルをリターンする。"

#. type: defun
#: original_texis/display.texi:6327
#, no-wrap
msgid "button-type button"
msgstr "button-type button"

#. type: defun
#: original_texis/display.texi:6329
msgid "Return @var{button}'s button-type."
msgstr "@var{button}のボタンタイプをリターンする。"

#. type: defun
#: original_texis/display.texi:6331
#, no-wrap
msgid "button-has-type-p button type"
msgstr "button-has-type-p button type"

#. type: defun
#: original_texis/display.texi:6334
msgid "Return @code{t} if @var{button} has button-type @var{type}, or one of @var{type}'s subtypes."
msgstr "@var{button}がボタンタイプ@var{type}、または@var{type}のsubtypeのいずれかをもつなら@code{t}をリターンする。"

#. type: defun
#: original_texis/display.texi:6336
#, no-wrap
msgid "button-at pos"
msgstr "button-at pos"

#. type: defun
#: original_texis/display.texi:6340
msgid "Return the button at position @var{pos} in the current buffer, or @code{nil}.  If the button at @var{pos} is a text property button, the return value is a marker pointing to @var{pos}."
msgstr "カレントバッファー内の位置@var{pos}にあるボタン、または@code{nil}をリターンする。@var{pos}にあるボタンがテキストプロパティボタンならリターン値は@var{pos}を指すマーカー。"

#. type: defun
#: original_texis/display.texi:6342
#, no-wrap
msgid "button-type-put type prop val"
msgstr "button-type-put type prop val"

#. type: defun
#: original_texis/display.texi:6344
msgid "Set the button-type @var{type}'s @var{prop} property to @var{val}."
msgstr "ボタンタイプ@var{type}の@var{prop}プロパティに@var{val}をセットする。"

#. type: defun
#: original_texis/display.texi:6346
#, no-wrap
msgid "button-type-get type prop"
msgstr "button-type-get type prop"

#. type: defun
#: original_texis/display.texi:6348
msgid "Get the property of button-type @var{type} named @var{prop}."
msgstr "ボタンタイプ@var{type}の@var{prop}という名前のプロパティを取得する。"

#. type: defun
#: original_texis/display.texi:6350
#, no-wrap
msgid "button-type-subtype-p type supertype"
msgstr "button-type-subtype-p type supertype"

#. type: defun
#: original_texis/display.texi:6352
msgid "Return @code{t} if button-type @var{type} is a subtype of @var{supertype}."
msgstr "ボタンタイプ@var{type}が@var{supertype}のsubtypeなら@code{t}をリターンする。"

#. type: cindex
#: original_texis/display.texi:6356
#, no-wrap
msgid "button buffer commands"
msgstr "button buffer commands"

#. type: Plain text
#: original_texis/display.texi:6360
msgid "These are commands and functions for locating and operating on buttons in an Emacs buffer."
msgstr "Emacsバッファー内にボタンの配置や操作を行うコマンドや関数が存在します。"

#. type: Plain text
#: original_texis/display.texi:6369
msgid "@code{push-button} is the command that a user uses to actually push a button, and is bound by default in the button itself to @key{RET} and to @key{mouse-2} using a local keymap in the button's overlay or text properties.  Commands that are useful outside the buttons itself, such as @code{forward-button} and @code{backward-button} are additionally available in the keymap stored in @code{button-buffer-map}; a mode which uses buttons may want to use @code{button-buffer-map} as a parent keymap for its keymap."
msgstr "@code{push-button}はユーザーが実際にボタンを押下(push)するために使用するコマンドであり、そのボタンのオーバーレイプロパティかテキストプロパティを使用することにより、そのボタンの@key{RET}と@key{mouse-2}にデフォルトでバインドされます。ボタン自身の外部で有用な@code{forward-button}や@code{backward-button}のようなコマンドは、@code{button-buffer-map}に格納されたキーマップ内で追加で利用可能です。ボタンを使用するモードはそのキーマップの親キーマップとして@code{button-buffer-map}の使用を望むかもしれません。"

#. type: Plain text
#: original_texis/display.texi:6374
msgid "If the button has a non-@code{nil} @code{follow-link} property, and @code{mouse-1-click-follows-link} is set, a quick @key{mouse-1} click will also activate the @code{push-button} command.  @xref{Clickable Text}."
msgstr "ボタンが非@code{nil}の@code{follow-link}プロパティをもち、かつ@code{mouse-1-click-follows-link}がセットされている場合には、素早い@key{mouse-1}クリックにより@code{push-button}コマンドもアクティブになるでしょう。@ref{Clickable Text}を参照してください。"

#. type: deffn
#: original_texis/display.texi:6375
#, no-wrap
msgid "Command push-button &optional pos use-mouse-action"
msgstr "Command push-button &optional pos use-mouse-action"

#. type: deffn
#: original_texis/display.texi:6386
msgid "Perform the action specified by a button at location @var{pos}.  @var{pos} may be either a buffer position or a mouse-event.  If @var{use-mouse-action} is non-@code{nil}, or @var{pos} is a mouse-event (@pxref{Mouse Events}), try to invoke the button's @code{mouse-action} property instead of @code{action}; if the button has no @code{mouse-action} property, use @code{action} as normal.  @var{pos} defaults to point, except when @code{push-button} is invoked interactively as the result of a mouse-event, in which case, the mouse event's position is used.  If there's no button at @var{pos}, do nothing and return @code{nil}, otherwise return @code{t}."
msgstr "位置@var{pos}にあるボタンが指定するアクションを行う。@var{pos}はバッファー位置、またはマウスイベントのいずれか。@var{use-mouse-action}が非@code{nil}、または@var{pos}がマウスイベントなら@code{action}のかわりにそのボタンの@code{mouse-action}プロパティの呼び出しを試みて、ボタンに@code{mouse-action}プロパティがなければ通常のように@code{action}を使用する。@code{push-button}がマウスイベントの結果としてインタラクティブに呼び出されたときはそのマウスイベントの位置、それ以外ではポイントの位置が@var{pos}のデフォルトになる。@var{pos}にボタンがなければ何もせずに@code{nil}をリターンして、それ以外なら@code{t}をリターンする。"

#. type: deffn
#: original_texis/display.texi:6388
#, no-wrap
msgid "Command forward-button n &optional wrap display-message"
msgstr "Command forward-button n &optional wrap display-message"

#. type: deffn
#: original_texis/display.texi:6396
msgid "Move to the @var{n}th next button, or @var{n}th previous button if @var{n} is negative.  If @var{n} is zero, move to the start of any button at point.  If @var{wrap} is non-@code{nil}, moving past either end of the buffer continues from the other end.  If @var{display-message} is non-@code{nil}, the button's help-echo string is displayed.  Any button with a non-@code{nil} @code{skip} property is skipped over.  Returns the button found."
msgstr "次の@var{n}番目、@var{n}が負なら前の@var{n}番目のボタンに移動する。@var{n}が0ならポイント位置にある任意のボタンの開始に移動する。@var{wrap}が非@code{nil}ならバッファーの先頭または終端を超えてもう一方の端へ移動を継続する。@var{display-message}が非@code{nil}ならボタンのhelp-echo文字列が表示される。非@code{nil}の@code{skip}プロパティをもつボタンはすべてスキップされる。見つかったボタンをリターンする。"

#. type: deffn
#: original_texis/display.texi:6398
#, no-wrap
msgid "Command backward-button n &optional wrap display-message"
msgstr "Command backward-button n &optional wrap display-message"

#. type: deffn
#: original_texis/display.texi:6406
msgid "Move to the @var{n}th previous button, or @var{n}th next button if @var{n} is negative.  If @var{n} is zero, move to the start of any button at point.  If @var{wrap} is non-@code{nil}, moving past either end of the buffer continues from the other end.  If @var{display-message} is non-@code{nil}, the button's help-echo string is displayed.  Any button with a non-@code{nil} @code{skip} property is skipped over.  Returns the button found."
msgstr "前の@var{n}番目、@var{n}が負なら次の@var{n}番目のボタンに移動する。@var{n}が0ならポイント位置にある任意のボタンの開始に移動する。@var{wrap}が非@code{nil}ならバッファーの先頭または終端を超えて、もう一方の端へ移動を継続する。@var{display-message}が非@code{nil}ならボタンのhelp-echo文字列が表示される。非@code{nil}の@code{skip}プロパティをもつボタンはすべてスキップされる。見つかったボタンをリターンする。"

#. type: defun
#: original_texis/display.texi:6408
#, no-wrap
msgid "next-button pos &optional count-current"
msgstr "next-button pos &optional count-current"

#. type: defunx
#: original_texis/display.texi:6409
#, no-wrap
msgid "previous-button pos &optional count-current"
msgstr "previous-button pos &optional count-current"

#. type: defun
#: original_texis/display.texi:6414
msgid "Return the next button after (for @code{next-button}) or before (for @code{previous-button}) position @var{pos} in the current buffer.  If @var{count-current} is non-@code{nil}, count any button at @var{pos} in the search, instead of starting at the next button."
msgstr "カレントバッファー内の位置@var{pos}の次(@code{next-button}の場合)、または前(@code{previous-button}の場合)のボタンをリターンする。@var{count-current}が非@code{nil}なら、次のボタンから検索を開始するかわりに@var{pos}にある任意のボタンを考慮する。"

#. type: cindex
#: original_texis/display.texi:6418
#, no-wrap
msgid "ewoc"
msgstr "ewoc"

#. type: cindex
#: original_texis/display.texi:6419
#, no-wrap
msgid "display, abstract"
msgstr "display, abstract"

#. type: cindex
#: original_texis/display.texi:6420
#, no-wrap
msgid "display, arbitrary objects"
msgstr "display, arbitrary objects"

#. type: cindex
#: original_texis/display.texi:6421
#, no-wrap
msgid "model/view/controller"
msgstr "model/view/controller"

#. type: cindex
#: original_texis/display.texi:6422
#, no-wrap
msgid "view part, model/view/controller"
msgstr "view part, model/view/controller"

#. type: Plain text
#: original_texis/display.texi:6429
msgid "The Ewoc package constructs buffer text that represents a structure of Lisp objects, and updates the text to follow changes in that structure.  This is like the ``view'' component in the ``model--view--controller'' design paradigm.  Ewoc means ``Emacs's Widget for Object Collections''."
msgstr "EwocパッケージはLispオブジェクトの構造を表すバッファーテキストを構成して、その構造体の変更にしたがってテキストを更新します。これはデザインパラダイム``model--view--controller''内の``view''コンポーネントと似ています。Ewocは``Emacs's Widget for Object Collections(オブジェクトコレクション用Emacsウィジェット)''を意味します。"

#. type: Plain text
#: original_texis/display.texi:6436
msgid "An @dfn{ewoc} is a structure that organizes information required to construct buffer text that represents certain Lisp data.  The buffer text of the ewoc has three parts, in order: first, fixed @dfn{header} text; next, textual descriptions of a series of data elements (Lisp objects that you specify); and last, fixed @dfn{footer} text.  Specifically, an ewoc contains information on:"
msgstr "@dfn{ewoc}は特定のLispデータを表現するバッファーテキストの構築に要される情報を組織化します。ewocのバッファーテキストは順番に、まず固定された@dfn{header}テキスト、次に一連のデータ要素のテキスト記述(あなたが指定するLispオブジェクト)、最後に固定された@dfn{footer}テキストという3つのパートをもっています。具体的にはewocは以下の情報を含んでいます:"

#. type: itemize
#: original_texis/display.texi:6440
msgid "The buffer which its text is generated in."
msgstr "そのテキストが生成されたバッファー。"

#. type: itemize
#: original_texis/display.texi:6443
msgid "The text's start position in the buffer."
msgstr "バッファー内でのそのテキストの開始位置。"

#. type: itemize
#: original_texis/display.texi:6446
msgid "The header and footer strings."
msgstr "ヘッダー文字列とフッター文字列。"

#. type: cindex
#: original_texis/display.texi:6448
#, no-wrap
msgid "node, ewoc"
msgstr "node, ewoc"

#. type: itemize
#: original_texis/display.texi:6451
msgid "A doubly-linked chain of @dfn{nodes}, each of which contains:"
msgstr "2重リンクされた@dfn{ノード(nodes)}のチェーン。各ノードは以下を含む:"

#. type: itemize
#: original_texis/display.texi:6455
msgid "A @dfn{data element}, a single Lisp object."
msgstr "@dfn{データ要素(data element)}。単一のLispオブジェクト。"

#. type: itemize
#: original_texis/display.texi:6458
msgid "Links to the preceding and following nodes in the chain."
msgstr "そのチェーン内で先行と後続のノードへのリンク。"

#. type: itemize
#: original_texis/display.texi:6464
msgid "A @dfn{pretty-printer} function which is responsible for inserting the textual representation of a data element value into the current buffer."
msgstr "カレントバッファー内にデータ要素値のテキスト表現を挿入する責務をもつ@dfn{pretty-printer}関数。"

#. type: Plain text
#: original_texis/display.texi:6473
msgid "Typically, you define an ewoc with @code{ewoc-create}, and then pass the resulting ewoc structure to other functions in the Ewoc package to build nodes within it, and display it in the buffer.  Once it is displayed in the buffer, other functions determine the correspondence between buffer positions and nodes, move point from one node's textual representation to another, and so forth.  @xref{Abstract Display Functions}."
msgstr "通常は@code{ewoc-create}によりewocを定義して、その結果のewoc構造体内にノードを構築するためにEwocパッケージ内の別の関数に渡してバッファー内に表示します。バッファー内でこれが一度表示されれば、他の関数はバッファー位置とノードの対応を判断したり、あるノードのテキスト表現から別のノードのテキスト表現への移動等を行います。@ref{Abstract Display Functions}を参照してください。"

#. type: cindex
#: original_texis/display.texi:6474
#, no-wrap
msgid "encapsulation, ewoc"
msgstr "encapsulation, ewoc"

#. type: Plain text
#: original_texis/display.texi:6480
msgid "A node @dfn{encapsulates} a data element much the way a variable holds a value.  Normally, encapsulation occurs as a part of adding a node to the ewoc.  You can retrieve the data element value and place a new value in its place, like so:"
msgstr "ノードは変数が値を保持するのと同じ方法でデータ要素を@dfn{カプセル化(encapsulate)}します。カプセル化は通常はewocへのノード追加の一部として発生します。以下のようにデータ要素値を取得して、その場所に新たな値を配置することができます:"

#. type: lisp
#: original_texis/display.texi:6484
#, no-wrap
msgid ""
"(ewoc-data @var{node})\n"
"@result{} value\n"
"\n"
msgstr ""
"(ewoc-data @var{node})\n"
"@result{} value\n"
"\n"

#. type: lisp
#: original_texis/display.texi:6487
#, no-wrap
msgid ""
"(ewoc-set-data @var{node} @var{new-value})\n"
"@result{} @var{new-value}\n"
msgstr ""
"(ewoc-set-data @var{node} @var{new-value})\n"
"@result{} @var{new-value}\n"

#. type: Plain text
#: original_texis/display.texi:6494
msgid "You can also use, as the data element value, a Lisp object (list or vector) that is a container for the real value, or an index into some other structure.  The example (@pxref{Abstract Display Example})  uses the latter approach."
msgstr "データ要素値として実際の値のコンテナーであるようなLispオブジェクト(リストまたはベクター)、または他の構造体へのインデックスも使用できます。例(@ref{Abstract Display Example}を参照)では後者のアプローチを使用しています。"

#. type: Plain text
#: original_texis/display.texi:6502
msgid "When the data changes, you will want to update the text in the buffer.  You can update all nodes by calling @code{ewoc-refresh}, or just specific nodes using @code{ewoc-invalidate}, or all nodes satisfying a predicate using @code{ewoc-map}.  Alternatively, you can delete invalid nodes using @code{ewoc-delete} or @code{ewoc-filter}, and add new nodes in their place.  Deleting a node from an ewoc deletes its associated textual description from buffer, as well."
msgstr "データが変更された際にはバッファー内のテキストを更新したいでしょう。@code{ewoc-refresh}呼び出しにより全ノード、@code{ewoc-invalidate}を使用して特定のノード、または@code{ewoc-map}を使用して述語を満足するすべてのノードを更新できます。あるいは@code{ewoc-delete}を使用して無効なノードを削除したり、その場所に新たなノードを追加できます。ewocからのノード削除はバッファーからそれに関連付けられたテキスト記述も同様に削除します。"

#. type: subsection
#: original_texis/display.texi:6506 original_texis/display.texi:6508
#: original_texis/display.texi:6509
#, no-wrap
msgid "Abstract Display Functions"
msgstr "Abstract Display Functions"

#. type: menuentry
#: original_texis/display.texi:6506
msgid "Functions in the Ewoc package."
msgstr "Ewocパッケージ内の関数。"

#. type: subsection
#: original_texis/display.texi:6506 original_texis/display.texi:6643
#: original_texis/display.texi:6644
#, no-wrap
msgid "Abstract Display Example"
msgstr "Abstract Display Example"

#. type: menuentry
#: original_texis/display.texi:6506
msgid "Example of using Ewoc."
msgstr "Ewocの使用例。"

#. type: Plain text
#: original_texis/display.texi:6514
msgid "In this subsection, @var{ewoc} and @var{node} stand for the structures described above (@pxref{Abstract Display}), while @var{data} stands for an arbitrary Lisp object used as a data element."
msgstr "このセクションでは、@var{ewoc}と@var{node}は上述(@ref{Abstract Display}を参照)の構造体を、@var{data}はデータ要素として使用される任意のLispオブジェクトを意味します。"

#. type: defun
#: original_texis/display.texi:6515
#, no-wrap
msgid "ewoc-create pretty-printer &optional header footer nosep"
msgstr "ewoc-create pretty-printer &optional header footer nosep"

#. type: defun
#: original_texis/display.texi:6522
msgid "This constructs and returns a new ewoc, with no nodes (and thus no data elements).  @var{pretty-printer} should be a function that takes one argument, a data element of the sort you plan to use in this ewoc, and inserts its textual description at point using @code{insert} (and never @code{insert-before-markers}, because that would interfere with the Ewoc package's internal mechanisms)."
msgstr "これはノード(とデータ要素)をもたない新たなewocを構築してリターンする。@var{pretty-printer}は1つの引数を受け取る関数であること。この引数は当該ewoc内で使用を計画する類のデータ要素であり、@code{insert}を使用してポイント位置にそのテキスト記述を挿入する(Ewocパッケージの内部的メカニズムと干渉するために@code{insert-before-markers}は決して使用しない)。"

#. type: defun
#: original_texis/display.texi:6529
msgid "Normally, a newline is automatically inserted after the header, the footer and every node's textual description.  If @var{nosep} is non-@code{nil}, no newline is inserted.  This may be useful for displaying an entire ewoc on a single line, for example, or for making nodes invisible by arranging for @var{pretty-printer} to do nothing for those nodes."
msgstr "ヘッダー、フッター、およびすべてのノードのテキスト記述の後には、通常は自動的に改行が挿入される。@var{nosep}が非@code{nil}なら改行は何も挿入されない。これはewoc全体を単一行に表示したり、これらのノードにたいして何も行わないように@var{pretty-printer}をアレンジすることによりノードを不可視にするために有用かもしれない。"

#. type: defun
#: original_texis/display.texi:6533
msgid "An ewoc maintains its text in the buffer that is current when you create it, so switch to the intended buffer before calling @code{ewoc-create}."
msgstr "ewocは作成時にカレントだったバッファー内のテキストを保守するので、@code{ewoc-create}呼び出し前に意図するバッファーへ切り替えること。"

#. type: defun
#: original_texis/display.texi:6535
#, no-wrap
msgid "ewoc-buffer ewoc"
msgstr "ewoc-buffer ewoc"

#. type: defun
#: original_texis/display.texi:6537
msgid "This returns the buffer where @var{ewoc} maintains its text."
msgstr "これは、@var{ewoc}がそのテキストを保守するバッファーをリターンする。"

#. type: defun
#: original_texis/display.texi:6539
#, no-wrap
msgid "ewoc-get-hf ewoc"
msgstr "ewoc-get-hf ewoc"

#. type: defun
#: original_texis/display.texi:6542
msgid "This returns a cons cell @code{(@var{header} . @var{footer})} made from @var{ewoc}'s header and footer."
msgstr "これは@var{ewoc}のヘッダーとフッターから作成されたコンスセル@code{(@var{header} . @var{footer})}をリターンする。"

#. type: defun
#: original_texis/display.texi:6544
#, no-wrap
msgid "ewoc-set-hf ewoc header footer"
msgstr "ewoc-set-hf ewoc header footer"

#. type: defun
#: original_texis/display.texi:6547
msgid "This sets the header and footer of @var{ewoc} to the strings @var{header} and @var{footer}, respectively."
msgstr "これは@var{ewoc}のヘッダーとフッターに文字列@var{header}と@var{footer}をセットする。"

#. type: defun
#: original_texis/display.texi:6549
#, no-wrap
msgid "ewoc-enter-first ewoc data"
msgstr "ewoc-enter-first ewoc data"

#. type: defunx
#: original_texis/display.texi:6550
#, no-wrap
msgid "ewoc-enter-last ewoc data"
msgstr "ewoc-enter-last ewoc data"

#. type: defun
#: original_texis/display.texi:6553
msgid "These add a new node encapsulating @var{data}, putting it, respectively, at the beginning or end of @var{ewoc}'s chain of nodes."
msgstr "これらはそれぞれ@var{data}を新たなノードにカプセル化して、それを@var{ewoc}のチェーンノードの先頭または終端に配置する。"

#. type: defun
#: original_texis/display.texi:6555
#, no-wrap
msgid "ewoc-enter-before ewoc node data"
msgstr "ewoc-enter-before ewoc node data"

#. type: defunx
#: original_texis/display.texi:6556
#, no-wrap
msgid "ewoc-enter-after ewoc node data"
msgstr "ewoc-enter-after ewoc node data"

#. type: defun
#: original_texis/display.texi:6559
msgid "These add a new node encapsulating @var{data}, adding it to @var{ewoc} before or after @var{node}, respectively."
msgstr "これらはそれぞれ@var{data}を新たなノードにカプセル化して、それを@var{ewoc}の@var{node}の前または後に追加する。"

#. type: defun
#: original_texis/display.texi:6561
#, no-wrap
msgid "ewoc-prev ewoc node"
msgstr "ewoc-prev ewoc node"

#. type: defunx
#: original_texis/display.texi:6562
#, no-wrap
msgid "ewoc-next ewoc node"
msgstr "ewoc-next ewoc node"

#. type: defun
#: original_texis/display.texi:6565
msgid "These return, respectively, the previous node and the next node of @var{node} in @var{ewoc}."
msgstr "これらはそれぞれ@var{ewoc}内の@var{node}の前または次のノードをリターンする。"

#. type: defun
#: original_texis/display.texi:6567
#, no-wrap
msgid "ewoc-nth ewoc n"
msgstr "ewoc-nth ewoc n"

#. type: defun
#: original_texis/display.texi:6571
msgid "This returns the node in @var{ewoc} found at zero-based index @var{n}.  A negative @var{n} means count from the end.  @code{ewoc-nth} returns @code{nil} if @var{n} is out of range."
msgstr "これは@var{ewoc}内で0基準のインデックス@var{n}で見つかったノードをリターンする。負の@var{n}は終端から数えることを意味する。@var{n}が範囲外なら@code{ewoc-nth}は@code{nil}をリターンする。"

#. type: defun
#: original_texis/display.texi:6573
#, no-wrap
msgid "ewoc-data node"
msgstr "ewoc-data node"

#. type: defun
#: original_texis/display.texi:6575
msgid "This extracts the data encapsulated by @var{node} and returns it."
msgstr "これは@var{node}にカプセル化されたデータを抽出してリターンする。"

#. type: defun
#: original_texis/display.texi:6577
#, no-wrap
msgid "ewoc-set-data node data"
msgstr "ewoc-set-data node data"

#. type: defun
#: original_texis/display.texi:6579
msgid "This sets the data encapsulated by @var{node} to @var{data}."
msgstr "これは@var{node}にカプセル化されるデータとして@var{data}をセットする。"

#. type: defun
#: original_texis/display.texi:6581
#, no-wrap
msgid "ewoc-locate ewoc &optional pos guess"
msgstr "ewoc-locate ewoc &optional pos guess"

#. type: defun
#: original_texis/display.texi:6589
msgid "This determines the node in @var{ewoc} which contains point (or @var{pos} if specified), and returns that node.  If @var{ewoc} has no nodes, it returns @code{nil}.  If @var{pos} is before the first node, it returns the first node; if @var{pos} is after the last node, it returns the last node.  The optional third arg @var{guess} should be a node that is likely to be near @var{pos}; this doesn't alter the result, but makes the function run faster."
msgstr "これはポイント(指定された場合は@var{pos})を含む@var{ewoc}内のノードを判断して、そのノードをリターンする。@var{ewoc}がノードをもたなければ、@code{nil}をリターンする。@var{pos}が最初のノードの前なら最初のノード、最後のノードの後なら最後のノードをリターンする。オプションの3つ目の引数@var{guess}は、@var{pos}近傍にあると思われるノードであること。これは結果を変更しないが、関数の実行を高速にする。"

#. type: defun
#: original_texis/display.texi:6591
#, no-wrap
msgid "ewoc-location node"
msgstr "ewoc-location node"

#. type: defun
#: original_texis/display.texi:6593
msgid "This returns the start position of @var{node}."
msgstr "これは@var{node}の開始位置をリターンする。"

#. type: defun
#: original_texis/display.texi:6595
#, no-wrap
msgid "ewoc-goto-prev ewoc arg"
msgstr "ewoc-goto-prev ewoc arg"

#. type: defunx
#: original_texis/display.texi:6596
#, no-wrap
msgid "ewoc-goto-next ewoc arg"
msgstr "ewoc-goto-next ewoc arg"

#. type: defun
#: original_texis/display.texi:6602
msgid "These move point to the previous or next, respectively, @var{arg}th node in @var{ewoc}.  @code{ewoc-goto-prev} does not move if it is already at the first node or if @var{ewoc} is empty, whereas @code{ewoc-goto-next} moves past the last node, returning @code{nil}.  Excepting this special case, these functions return the node moved to."
msgstr "これらはそれぞれ@var{ewoc}内の前または次の@var{arg}番目のノードにポイントを移動する。すでに最初のノードにポイントがある場合、または@var{ewoc}が空の場合には@code{ewoc-goto-prev}は移動しない。また@code{ewoc-goto-next}が最後のノードを超えて移動すると結果は@code{nil}。この特殊なケースを除き、これらの関数は移動先のノードをリターンする。"

#. type: defun
#: original_texis/display.texi:6604
#, no-wrap
msgid "ewoc-goto-node ewoc node"
msgstr "ewoc-goto-node ewoc node"

#. type: defun
#: original_texis/display.texi:6606
msgid "This moves point to the start of @var{node} in @var{ewoc}."
msgstr "これは@var{ewoc}内の@var{node}の開始にポイントを移動する。"

#. type: defun
#: original_texis/display.texi:6608
#, no-wrap
msgid "ewoc-refresh ewoc"
msgstr "ewoc-refresh ewoc"

#. type: defun
#: original_texis/display.texi:6613
msgid "This function regenerates the text of @var{ewoc}.  It works by deleting the text between the header and the footer, i.e., all the data elements' representations, and then calling the pretty-printer function for each node, one by one, in order."
msgstr "この関数は@var{ewoc}のテキストを再生成する。これはヘッダーとフッターの間のテキスト、すなわちすべてのデータ要素の表現を削除して、各ノードにたいして1つずつ順にpretty-printer関数を呼び出すことによりすることにより機能する。"

#. type: defun
#: original_texis/display.texi:6615
#, no-wrap
msgid "ewoc-invalidate ewoc &rest nodes"
msgstr "ewoc-invalidate ewoc &rest nodes"

#. type: defun
#: original_texis/display.texi:6618
msgid "This is similar to @code{ewoc-refresh}, except that only @var{nodes} in @var{ewoc} are updated instead of the entire set."
msgstr "これは@code{ewoc-refresh}と似ているが、@var{ewoc}内のノードセット全体ではなく@var{nodes}だけを対象とする点が異なる。"

#. type: defun
#: original_texis/display.texi:6620
#, no-wrap
msgid "ewoc-delete ewoc &rest nodes"
msgstr "ewoc-delete ewoc &rest nodes"

#. type: defun
#: original_texis/display.texi:6622
msgid "This deletes each node in @var{nodes} from @var{ewoc}."
msgstr "これは@var{ewoc}から@var{nodes}内の各要素を削除する。"

#. type: defun
#: original_texis/display.texi:6624
#, no-wrap
msgid "ewoc-filter ewoc predicate &rest args"
msgstr "ewoc-filter ewoc predicate &rest args"

#. type: defun
#: original_texis/display.texi:6628
msgid "This calls @var{predicate} for each data element in @var{ewoc} and deletes those nodes for which @var{predicate} returns @code{nil}.  Any @var{args} are passed to @var{predicate}."
msgstr "これは@var{ewoc}内の各データ要素にたいして@var{predicate}を呼び出して、@var{predicate}が@code{nil}をリターンしたノードを削除する。任意の@var{args}を@var{predicate}に渡すことができる。"

#. type: defun
#: original_texis/display.texi:6630
#, no-wrap
msgid "ewoc-collect ewoc predicate &rest args"
msgstr "ewoc-collect ewoc predicate &rest args"

#. type: defun
#: original_texis/display.texi:6635
msgid "This calls @var{predicate} for each data element in @var{ewoc} and returns a list of those elements for which @var{predicate} returns non-@code{nil}.  The elements in the list are ordered as in the buffer.  Any @var{args} are passed to @var{predicate}."
msgstr "これは@var{ewoc}内の各データ要素にたいして@var{predicate}を呼び出して、@var{predicate}が非@code{nil}をリターンしたノードのリストをリターンする。リスト内の要素はバッファー内での順序になる。任意の@var{args}を@var{predicate}に渡すことができる。"

#. type: defun
#: original_texis/display.texi:6637
#, no-wrap
msgid "ewoc-map map-function ewoc &rest args"
msgstr "ewoc-map map-function ewoc &rest args"

#. type: defun
#: original_texis/display.texi:6641
msgid "This calls @var{map-function} for each data element in @var{ewoc} and updates those nodes for which @var{map-function} returns non-@code{nil}.  Any @var{args} are passed to @var{map-function}."
msgstr "これは@var{ewoc}内の各データ要素にたいして@var{map-function}を呼び出して、@var{map-function}が非@code{nil}をリターンしたノードを更新する。任意の@var{args}を@var{map-function}に渡すことができる。"

#. type: Plain text
#: original_texis/display.texi:6650
msgid "Here is a simple example using functions of the ewoc package to implement a @dfn{color components} display, an area in a buffer that represents a vector of three integers (itself representing a 24-bit RGB value) in various ways."
msgstr "以下は3つの整数からなるベクターを表すバッファー内の領域である@dfn{カラー構成(color components)}表示をewocパッケージ内の関数を使用して、さまざまな方法で実装するシンプルな例です。"

#. type: example
#: original_texis/display.texi:6656
#, no-wrap
msgid ""
"(setq colorcomp-ewoc nil\n"
"      colorcomp-data nil\n"
"      colorcomp-mode-map nil\n"
"      colorcomp-labels [\"Red\" \"Green\" \"Blue\"])\n"
"\n"
msgstr ""
"(setq colorcomp-ewoc nil\n"
"      colorcomp-data nil\n"
"      colorcomp-mode-map nil\n"
"      colorcomp-labels [\"Red\" \"Green\" \"Blue\"])\n"
"\n"

#. type: example
#: original_texis/display.texi:6674
#, no-wrap
msgid ""
"(defun colorcomp-pp (data)\n"
"  (if data\n"
"      (let ((comp (aref colorcomp-data data)))\n"
"        (insert (aref colorcomp-labels data) \"\\t: #x\"\n"
"                (format \"%02X\" comp) \" \"\n"
"                (make-string (ash comp -2) ?#) \"\\n\"))\n"
"    (let ((cstr (format \"#%02X%02X%02X\"\n"
"                        (aref colorcomp-data 0)\n"
"                        (aref colorcomp-data 1)\n"
"                        (aref colorcomp-data 2)))\n"
"          (samp \" (sample text) \"))\n"
"      (insert \"Color\\t: \"\n"
"              (propertize samp 'face\n"
"                          `(foreground-color . ,cstr))\n"
"              (propertize samp 'face\n"
"                          `(background-color . ,cstr))\n"
"              \"\\n\"))))\n"
"\n"
msgstr ""
"(defun colorcomp-pp (data)\n"
"  (if data\n"
"      (let ((comp (aref colorcomp-data data)))\n"
"        (insert (aref colorcomp-labels data) \"\\t: #x\"\n"
"                (format \"%02X\" comp) \" \"\n"
"                (make-string (ash comp -2) ?#) \"\\n\"))\n"
"    (let ((cstr (format \"#%02X%02X%02X\"\n"
"                        (aref colorcomp-data 0)\n"
"                        (aref colorcomp-data 1)\n"
"                        (aref colorcomp-data 2)))\n"
"          (samp \" (sample text) \"))\n"
"      (insert \"Color\\t: \"\n"
"              (propertize samp 'face\n"
"                          `(foreground-color . ,cstr))\n"
"              (propertize samp 'face\n"
"                          `(background-color . ,cstr))\n"
"              \"\\n\"))))\n"
"\n"

#. type: example
#: original_texis/display.texi:6703
#, no-wrap
msgid ""
"(defun colorcomp (color)\n"
"  \"Allow fiddling with COLOR in a new buffer.\n"
"The buffer is in Color Components mode.\"\n"
"  (interactive \"sColor (name or #RGB or #RRGGBB): \")\n"
"  (when (string= \"\" color)\n"
"    (setq color \"green\"))\n"
"  (unless (color-values color)\n"
"    (error \"No such color: %S\" color))\n"
"  (switch-to-buffer\n"
"   (generate-new-buffer (format \"originally: %s\" color)))\n"
"  (kill-all-local-variables)\n"
"  (setq major-mode 'colorcomp-mode\n"
"        mode-name \"Color Components\")\n"
"  (use-local-map colorcomp-mode-map)\n"
"  (erase-buffer)\n"
"  (buffer-disable-undo)\n"
"  (let ((data (apply 'vector (mapcar (lambda (n) (ash n -8))\n"
"                                     (color-values color))))\n"
"        (ewoc (ewoc-create 'colorcomp-pp\n"
"                           \"\\nColor Components\\n\\n\"\n"
"                           (substitute-command-keys\n"
"                            \"\\n\\\\@{colorcomp-mode-map@}\"))))\n"
"    (set (make-local-variable 'colorcomp-data) data)\n"
"    (set (make-local-variable 'colorcomp-ewoc) ewoc)\n"
"    (ewoc-enter-last ewoc 0)\n"
"    (ewoc-enter-last ewoc 1)\n"
"    (ewoc-enter-last ewoc 2)\n"
"    (ewoc-enter-last ewoc nil)))\n"
msgstr ""
"(defun colorcomp (color)\n"
"  \"新たなバッファー内でCOLORの編集を許可する。\n"
"そのバッファーはColor Componentsモードになる。\"\n"
"  (interactive \"sColor (name or #RGB or #RRGGBB): \")\n"
"  (when (string= \"\" color)\n"
"    (setq color \"green\"))\n"
"  (unless (color-values color)\n"
"    (error \"No such color: %S\" color))\n"
"  (switch-to-buffer\n"
"   (generate-new-buffer (format \"originally: %s\" color)))\n"
"  (kill-all-local-variables)\n"
"  (setq major-mode 'colorcomp-mode\n"
"        mode-name \"Color Components\")\n"
"  (use-local-map colorcomp-mode-map)\n"
"  (erase-buffer)\n"
"  (buffer-disable-undo)\n"
"  (let ((data (apply 'vector (mapcar (lambda (n) (ash n -8))\n"
"                                     (color-values color))))\n"
"        (ewoc (ewoc-create 'colorcomp-pp\n"
"                           \"\\nColor Components\\n\\n\"\n"
"                           (substitute-command-keys\n"
"                            \"\\n\\\\@{colorcomp-mode-map@}\"))))\n"
"    (set (make-local-variable 'colorcomp-data) data)\n"
"    (set (make-local-variable 'colorcomp-ewoc) ewoc)\n"
"    (ewoc-enter-last ewoc 0)\n"
"    (ewoc-enter-last ewoc 1)\n"
"    (ewoc-enter-last ewoc 2)\n"
"    (ewoc-enter-last ewoc nil)))\n"

#. type: cindex
#: original_texis/display.texi:6705
#, no-wrap
msgid "controller part, model/view/controller"
msgstr "controller part, model/view/controller"

#. type: Plain text
#: original_texis/display.texi:6711
msgid "This example can be extended to be a color selection widget (in other words, the ``controller'' part of the ``model--view--controller'' design paradigm) by defining commands to modify @code{colorcomp-data} and to finish the selection process, and a keymap to tie it all together conveniently."
msgstr "この例は@code{colorcomp-data}の変更して選択プロセスを``完了''して、それらを互いに簡便に結ぶキーマップを定義することにより(言い換えると``model/view/controller''デザインパラダイムのcontroller部分)、``color selection widget''への拡張が可能です。"

#. type: smallexample
#: original_texis/display.texi:6721
#, no-wrap
msgid ""
"(defun colorcomp-mod (index limit delta)\n"
"  (let ((cur (aref colorcomp-data index)))\n"
"    (unless (= limit cur)\n"
"      (aset colorcomp-data index (+ cur delta)))\n"
"    (ewoc-invalidate\n"
"     colorcomp-ewoc\n"
"     (ewoc-nth colorcomp-ewoc index)\n"
"     (ewoc-nth colorcomp-ewoc -1))))\n"
"\n"
msgstr ""
"(defun colorcomp-mod (index limit delta)\n"
"  (let ((cur (aref colorcomp-data index)))\n"
"    (unless (= limit cur)\n"
"      (aset colorcomp-data index (+ cur delta)))\n"
"    (ewoc-invalidate\n"
"     colorcomp-ewoc\n"
"     (ewoc-nth colorcomp-ewoc index)\n"
"     (ewoc-nth colorcomp-ewoc -1))))\n"
"\n"

#. type: smallexample
#: original_texis/display.texi:6728
#, no-wrap
msgid ""
"(defun colorcomp-R-more () (interactive) (colorcomp-mod 0 255 1))\n"
"(defun colorcomp-G-more () (interactive) (colorcomp-mod 1 255 1))\n"
"(defun colorcomp-B-more () (interactive) (colorcomp-mod 2 255 1))\n"
"(defun colorcomp-R-less () (interactive) (colorcomp-mod 0 0 -1))\n"
"(defun colorcomp-G-less () (interactive) (colorcomp-mod 1 0 -1))\n"
"(defun colorcomp-B-less () (interactive) (colorcomp-mod 2 0 -1))\n"
"\n"
msgstr ""
"(defun colorcomp-R-more () (interactive) (colorcomp-mod 0 255 1))\n"
"(defun colorcomp-G-more () (interactive) (colorcomp-mod 1 255 1))\n"
"(defun colorcomp-B-more () (interactive) (colorcomp-mod 2 255 1))\n"
"(defun colorcomp-R-less () (interactive) (colorcomp-mod 0 0 -1))\n"
"(defun colorcomp-G-less () (interactive) (colorcomp-mod 1 0 -1))\n"
"(defun colorcomp-B-less () (interactive) (colorcomp-mod 2 0 -1))\n"
"\n"

#. type: smallexample
#: original_texis/display.texi:6738
#, no-wrap
msgid ""
"(defun colorcomp-copy-as-kill-and-exit ()\n"
"  \"Copy the color components into the kill ring and kill the buffer.\n"
"The string is formatted #RRGGBB (hash followed by six hex digits).\"\n"
"  (interactive)\n"
"  (kill-new (format \"#%02X%02X%02X\"\n"
"                    (aref colorcomp-data 0)\n"
"                    (aref colorcomp-data 1)\n"
"                    (aref colorcomp-data 2)))\n"
"  (kill-buffer nil))\n"
"\n"
msgstr ""
"(defun colorcomp-copy-as-kill-and-exit ()\n"
"  \"color componentsをkillリングにコピーしてバッファーをkill。\n"
"文字列は#RRGGBB(6桁16進が付加されたハッシュ)にフォーマットされる。\"\n"
"  (interactive)\n"
"  (kill-new (format \"#%02X%02X%02X\"\n"
"                    (aref colorcomp-data 0)\n"
"                    (aref colorcomp-data 1)\n"
"                    (aref colorcomp-data 2)))\n"
"  (kill-buffer nil))\n"
"\n"

#. type: smallexample
#: original_texis/display.texi:6750
#, no-wrap
msgid ""
"(setq colorcomp-mode-map\n"
"      (let ((m (make-sparse-keymap)))\n"
"        (suppress-keymap m)\n"
"        (define-key m \"i\" 'colorcomp-R-less)\n"
"        (define-key m \"o\" 'colorcomp-R-more)\n"
"        (define-key m \"k\" 'colorcomp-G-less)\n"
"        (define-key m \"l\" 'colorcomp-G-more)\n"
"        (define-key m \",\" 'colorcomp-B-less)\n"
"        (define-key m \".\" 'colorcomp-B-more)\n"
"        (define-key m \" \" 'colorcomp-copy-as-kill-and-exit)\n"
"        m))\n"
msgstr ""
"(setq colorcomp-mode-map\n"
"      (let ((m (make-sparse-keymap)))\n"
"        (suppress-keymap m)\n"
"        (define-key m \"i\" 'colorcomp-R-less)\n"
"        (define-key m \"o\" 'colorcomp-R-more)\n"
"        (define-key m \"k\" 'colorcomp-G-less)\n"
"        (define-key m \"l\" 'colorcomp-G-more)\n"
"        (define-key m \",\" 'colorcomp-B-less)\n"
"        (define-key m \".\" 'colorcomp-B-more)\n"
"        (define-key m \" \" 'colorcomp-copy-as-kill-and-exit)\n"
"        m))\n"

#. type: Plain text
#: original_texis/display.texi:6755
msgid "Note that we never modify the data in each node, which is fixed when the ewoc is created to be either @code{nil} or an index into the vector @code{colorcomp-data}, the actual color components."
msgstr "わたしたちが決して各ノード内のデータを変更していないことに注意してください。それらのデータはewoc作成時に@code{nil}、または実際のカラーコンポーネントであるベクター@code{colorcomp-data}にたいするインデックスに固定されています。"

#. type: section
#: original_texis/display.texi:6757
#, no-wrap
msgid "Blinking Parentheses"
msgstr "Blinking Parentheses"

#. type: cindex
#: original_texis/display.texi:6758
#, no-wrap
msgid "parenthesis matching"
msgstr "parenthesis matching"

#. type: cindex
#: original_texis/display.texi:6759
#, no-wrap
msgid "blinking parentheses"
msgstr "blinking parentheses"

#. type: cindex
#: original_texis/display.texi:6760
#, no-wrap
msgid "balancing parentheses"
msgstr "balancing parentheses"

#. type: Plain text
#: original_texis/display.texi:6764
msgid "This section describes the mechanism by which Emacs shows a matching open parenthesis when the user inserts a close parenthesis."
msgstr "このセクションではユーザーが閉カッコを挿入した際に、マッチする開カッコをEmacsが示すメカニズムを説明します。"

#. type: defvar
#: original_texis/display.texi:6765
#, no-wrap
msgid "blink-paren-function"
msgstr "blink-paren-function"

#. type: defvar
#: original_texis/display.texi:6770
msgid "The value of this variable should be a function (of no arguments) to be called whenever a character with close parenthesis syntax is inserted.  The value of @code{blink-paren-function} may be @code{nil}, in which case nothing is done."
msgstr "この変数の値は閉カッコ構文(close parenthesis syntax)の文字が挿入された際に常に呼び出される関数(引数なし)であること。@code{blink-paren-function}の値は@code{nil}も可能であり、この場合は何も行わない。"

#. type: defopt
#: original_texis/display.texi:6772
#, no-wrap
msgid "blink-matching-paren"
msgstr "blink-matching-paren"

#. type: defopt
#: original_texis/display.texi:6775
msgid "If this variable is @code{nil}, then @code{blink-matching-open} does nothing."
msgstr "この変数が@code{nil}なら@code{blink-matching-open}は何も行わない。"

#. type: defopt
#: original_texis/display.texi:6777
#, no-wrap
msgid "blink-matching-paren-distance"
msgstr "blink-matching-paren-distance"

#. type: defopt
#: original_texis/display.texi:6780
msgid "This variable specifies the maximum distance to scan for a matching parenthesis before giving up."
msgstr "この変数はギブアップする前にマッチするカッコをスキャンする最大の距離を指定する。"

#. type: defopt
#: original_texis/display.texi:6782
#, no-wrap
msgid "blink-matching-delay"
msgstr "blink-matching-delay"

#. type: defopt
#: original_texis/display.texi:6786
msgid "This variable specifies the number of seconds to keep indicating the matching parenthesis.  A fraction of a second often gives good results, but the default is 1, which works on all systems."
msgstr "この変数はマッチするカッコを示し続ける秒数を指定する。分数の秒も良好な結果をもたらすことがあるが、デフォルトはすべてのシステムで機能する1である。"

#. type: deffn
#: original_texis/display.texi:6788
#, no-wrap
msgid "Command blink-matching-open"
msgstr "Command blink-matching-open"

#. type: deffn
#: original_texis/display.texi:6796
msgid "This function is the default value of @code{blink-paren-function}.  It assumes that point follows a character with close parenthesis syntax and applies the appropriate effect momentarily to the matching opening character.  If that character is not already on the screen, it displays the character's context in the echo area.  To avoid long delays, this function does not search farther than @code{blink-matching-paren-distance} characters."
msgstr "この関数は@code{blink-paren-function}のデフォルト値である。この関数は閉カッコ構文の文字の後にポイントがあると仮定して、マッチする開カッコに瞬時適切な効果を適用する。その文字がまだスクリーン上になければ、エコーエリア内にその文字のコンテキストを表示する。長い遅延を避けるために、この関数は文字数@code{blink-matching-paren-distance}より遠くを検索しない。"

#. type: deffn
#: original_texis/display.texi:6798
msgid "Here is an example of calling this function explicitly."
msgstr "以下はこの関数を明示的に呼び出す例。"

#. type: group
#: original_texis/display.texi:6804
#, no-wrap
msgid ""
"(defun interactive-blink-matching-open ()\n"
"  \"Indicate momentarily the start of parenthesized sexp before point.\"\n"
"  (interactive)\n"
msgstr ""
"(defun interactive-blink-matching-open ()\n"
"  \"ポイント前のカッコによるsexp開始を瞬時示す\"\n"
"  (interactive)\n"

#. type: group
#: original_texis/display.texi:6810
#, no-wrap
msgid ""
"  (let ((blink-matching-paren-distance\n"
"         (buffer-size))\n"
"        (blink-matching-paren t))\n"
"    (blink-matching-open)))\n"
msgstr ""
"  (let ((blink-matching-paren-distance\n"
"         (buffer-size))\n"
"        (blink-matching-paren t))\n"
"    (blink-matching-open)))\n"

#. type: Plain text
#: original_texis/display.texi:6826
msgid "This section describes how characters are actually displayed by Emacs.  Typically, a character is displayed as a @dfn{glyph} (a graphical symbol which occupies one character position on the screen), whose appearance corresponds to the character itself.  For example, the character @samp{a} (character code 97) is displayed as @samp{a}.  Some characters, however, are displayed specially.  For example, the formfeed character (character code 12) is usually displayed as a sequence of two glyphs, @samp{^L}, while the newline character (character code 10) starts a new screen line."
msgstr "このセクションでは文字がEmacsにより実際に表示される方法について説明します。文字は通常は@dfn{グリフ(glyph)}として表示されます。グリフとはスクリーン上で1文字の位置を占めるグラフィカルなシンボルであり、その外観はその文字自身に対応します。たとえば文字@samp{a} (文字コード97)は@samp{a}と表示されます。しかしいくつかの文字は特別な方法で表示されます。たとえば改頁文字(文字コード12)は通常は2つのグリフのシーケンス@samp{^L}で表示されて、改行文字(文字コード10)は新たなスクリーン行を開始します。"

#. type: Plain text
#: original_texis/display.texi:6830
msgid "You can modify how each character is displayed by defining a @dfn{display table}, which maps each character code into a sequence of glyphs.  @xref{Display Tables}."
msgstr "@dfn{ディスプレイテーブル(display table)}を定義することにより、各文字が表示される方法を変更できます。これはそれぞれの文字をグリフのシーケンスにマップするテーブルです。@ref{Display Tables}を参照してください。"

#. type: node
#: original_texis/display.texi:6837 original_texis/display.texi:6839
#, no-wrap
msgid "Usual Display"
msgstr "Usual Display"

#. type: menuentry
#: original_texis/display.texi:6837
msgid "The usual conventions for displaying characters."
msgstr "文字の表示にたいする通常の慣習。"

#. type: subsection
#: original_texis/display.texi:6837 original_texis/display.texi:6935
#: original_texis/display.texi:6936
#, no-wrap
msgid "Display Tables"
msgstr "Display Tables"

#. type: menuentry
#: original_texis/display.texi:6837
msgid "What a display table consists of."
msgstr "ディスプレイテーブルの構成要素。"

#. type: subsection
#: original_texis/display.texi:6837 original_texis/display.texi:7043
#: original_texis/display.texi:7044
#, no-wrap
msgid "Active Display Table"
msgstr "Active Display Table"

#. type: menuentry
#: original_texis/display.texi:6837
msgid "How Emacs selects a display table to use."
msgstr "使用するディスプレイテーブルをEmacsが選択する方法。"

#. type: subsection
#: original_texis/display.texi:6837 original_texis/display.texi:7087
#: original_texis/display.texi:7088
#, no-wrap
msgid "Glyphs"
msgstr "Glyphs"

#. type: menuentry
#: original_texis/display.texi:6837
msgid "How to define a glyph, and what glyphs mean."
msgstr "グリフの定義方法とグリフの意味。"

#. type: node
#: original_texis/display.texi:6837 original_texis/display.texi:7145
#, no-wrap
msgid "Glyphless Chars"
msgstr "Glyphless Chars"

#. type: menuentry
#: original_texis/display.texi:6837
msgid "How glyphless characters are drawn."
msgstr "グリフなしの文字の描画方法。"

#. type: subsection
#: original_texis/display.texi:6840
#, no-wrap
msgid "Usual Display Conventions"
msgstr "Usual Display Conventions"

#. type: Plain text
#: original_texis/display.texi:6844
msgid "Here are the conventions for displaying each character code (in the absence of a display table, which can override these"
msgstr "以下は各文字コードの表示にたいする慣習です(ディスプレイテーブルが存在しなければこれらの慣習をオーバーライドできる"

#. type: iftex
#: original_texis/display.texi:6846
msgid "conventions)."
msgstr ")。"

#. type: ifnottex
#: original_texis/display.texi:6849
msgid "conventions; @pxref{Display Tables})."
msgstr "。@ref{Display Tables})を参照)。"

#. type: cindex
#: original_texis/display.texi:6851
#, no-wrap
msgid "printable ASCII characters"
msgstr "printable ASCII characters"

#. type: itemize
#: original_texis/display.texi:6857
msgid "The @dfn{printable @acronym{ASCII} characters}, character codes 32 through 126 (consisting of numerals, English letters, and symbols like @samp{#}) are displayed literally."
msgstr "コード32から126の@dfn{プリント可能@acronym{ASCII}文字(printable @acronym{ASCII} characters: 数字、英文字、および@samp{#}のようなシンボル)}は文字通りそのまま表示される。"

#. type: itemize
#: original_texis/display.texi:6863
msgid "The tab character (character code 9) displays as whitespace stretching up to the next tab stop column.  @xref{Text Display,,, emacs, The GNU Emacs Manual}.  The variable @code{tab-width} controls the number of spaces per tab stop (see below)."
msgstr "タブ文字(文字コード9)は次のタブストップ列まで伸長された空白文字として表示される。@ref{Text Display,,, emacs, The GNU Emacs Manual}を参照のこと。変数@code{tab-width}はタブストップごとのスペース数を制御する(以下参照)。"

#. type: itemize
#: original_texis/display.texi:6867
msgid "The newline character (character code 10) has a special effect: it ends the preceding line and starts a new line."
msgstr "改行文字(文字コード10)は特殊効果をもつ。これは先行する行を終端して新たな行を開始する。"

#. type: cindex
#: original_texis/display.texi:6868
#, no-wrap
msgid "ASCII control characters"
msgstr "ASCII control characters"

#. type: itemize
#: original_texis/display.texi:6878
msgid "The non-printable @dfn{@acronym{ASCII} control characters}---character codes 0 through 31, as well as the @key{DEL} character (character code 127)---display in one of two ways according to the variable @code{ctl-arrow}.  If this variable is non-@code{nil} (the default), these characters are displayed as sequences of two glyphs, where the first glyph is @samp{^} (a display table can specify a glyph to use instead of @samp{^}); e.g., the @key{DEL} character is displayed as @samp{^?}."
msgstr "非プリント可能@dfn{@acronym{ASCII}制御文字(@acronym{ASCII} control characters)} --- 文字コード0から31と@key{DEL}文字(文字コード127) --- は変数@code{ctl-arrow}に応じて2つの方法のいずれかで表示される。この変数が非@code{nil} (デフォルト)なら、たとえば@key{DEL}にたいしては@samp{^?}のように、これらの文字は1つ目のグリフが@samp{^} (@samp{^}のかわりに使用する文字をディスプレイテーブルで指定できる)のような2つのグリフのシーケンスとして表示される。"

#. type: itemize
#: original_texis/display.texi:6881
msgid "If @code{ctl-arrow} is @code{nil}, these characters are displayed as octal escapes (see below)."
msgstr "@code{ctl-arrow}が@code{nil}なら、これらの文字は8進エスケープとして表示される(以下参照)。"

#. type: itemize
#: original_texis/display.texi:6886
msgid "This rule also applies to carriage return (character code 13), if that character appears in the buffer.  But carriage returns usually do not appear in buffer text; they are eliminated as part of end-of-line conversion (@pxref{Coding System Basics})."
msgstr "このルールはバッファー内に復帰文字(CR: carriage return、文字コード13)があればそれにも適用される。しかし復帰文字は通常はバッファーテキスト内には存在しない。これらは行末変換(end-of-line conversion)の一部として除去される(@ref{Coding System Basics}を参照)。"

#. type: cindex
#: original_texis/display.texi:6887
#, no-wrap
msgid "octal escapes"
msgstr "octal escapes"

#. type: itemize
#: original_texis/display.texi:6895
msgid "@dfn{Raw bytes} are non-@acronym{ASCII} characters with codes 128 through 255 (@pxref{Text Representations}).  These characters display as @dfn{octal escapes}: sequences of four glyphs, where the first glyph is the @acronym{ASCII} code for @samp{\\}, and the others are digit characters representing the character code in octal.  (A display table can specify a glyph to use instead of @samp{\\}.)"
msgstr "@dfn{rawバイト(raw bytes)}とはコード128から255の非@acronym{ASCII}文字である。これらの文字は@dfn{8進エスケープ(octal escapes)}として表示される。これは1つ目が@samp{\\}にたいする@acronym{ASCII}コードのグリフで、残りがその文字のコードを8進で表した数字である(ディスプレイテーブルで@samp{\\}のかわりに使用するグリフを指定できる)。"

#. type: itemize
#: original_texis/display.texi:6904
msgid "Each non-@acronym{ASCII} character with code above 255 is displayed literally, if the terminal supports it.  If the terminal does not support it, the character is said to be @dfn{glyphless}, and it is usually displayed using a placeholder glyph.  For example, if a graphical terminal has no font for a character, Emacs usually displays a box containing the character code in hexadecimal.  @xref{Glyphless Chars}."
msgstr "255を超える非@acronym{ASCII}文字は、端末がサポートしていればそのまま表示される。端末がサポートしない場合には、その文字は@dfn{グリフなし(glyphless)}と呼ばれて、通常はプレースホルダーグリフを使用して表示される。たとえばある文字にたいしてグラフィカル端末がフォントをもたなければ、Emacsは通常は16進文字コードを含むボックスを表示する。@ref{Glyphless Chars}を参照のこと。"

#. type: Plain text
#: original_texis/display.texi:6910
msgid "The above display conventions apply even when there is a display table, for any character whose entry in the active display table is @code{nil}.  Thus, when you set up a display table, you need only specify the characters for which you want special behavior."
msgstr "上記の表示慣習はたとえディスプレイテーブルがあっても、アクティブディスプレイテーブル内のエントリーが@code{nil}であるようなすべての文字にたいして適用されます。したがってディスプレイテーブルのセットアップ時に指定が必要なのは特別な振る舞いを望む文字だけです。"

#. type: Plain text
#: original_texis/display.texi:6917
msgid "The following variables affect how certain characters are displayed on the screen.  Since they change the number of columns the characters occupy, they also affect the indentation functions.  They also affect how the mode line is displayed; if you want to force redisplay of the mode line using the new values, call the function @code{force-mode-line-update} (@pxref{Mode Line Format})."
msgstr "以下の変数はスクリーン上で特定の文字が表示される方法に影響します。これらはその文字が占める列数を変更するのでインデント関数にも影響を与えます。またモードラインが表示される方法にも影響があります。新たな値を使用してモードラインを強制的に再表示するには関数@code{force-mode-line-update}を呼び出してください(@ref{Mode Line Format}を参照)。"

#. type: defopt
#: original_texis/display.texi:6918
#, no-wrap
msgid "ctl-arrow"
msgstr "ctl-arrow"

#. type: cindex
#: original_texis/display.texi:6919
#, no-wrap
msgid "control characters in display"
msgstr "control characters in display"

#. type: defopt
#: original_texis/display.texi:6925
msgid "This buffer-local variable controls how control characters are displayed.  If it is non-@code{nil}, they are displayed as a caret followed by the character: @samp{^A}.  If it is @code{nil}, they are displayed as octal escapes: a backslash followed by three octal digits, as in @samp{\\001}."
msgstr "このバッファーローカル変数はコントロール文字が表示される方法を制御する。非@code{nil}なら@samp{^A}のようにカレットとその文字、@code{nil}なら@samp{\\001}のようにバックスラッシュと8進3桁のように8進エスケープとして表示される。"

#. type: defopt
#: original_texis/display.texi:6927
#, no-wrap
msgid "tab-width"
msgstr "tab-width"

#. type: defopt
#: original_texis/display.texi:6933
msgid "The value of this buffer-local variable is the spacing between tab stops used for displaying tab characters in Emacs buffers.  The value is in units of columns, and the default is 8.  Note that this feature is completely independent of the user-settable tab stops used by the command @code{tab-to-tab-stop}.  @xref{Indent Tabs}."
msgstr "このバッファーローカル変数の値はEmacsバッファー内でのタブ文字表示で使用するタブストップ間のスペース数。値は列単位でデフォルトは8。この機能はコマンド@code{tab-to-tab-stop}で使用されるユーザー設定可能なタブストップとは完全に無関係であることに注意。@ref{Indent Tabs}を参照のこと。"

#. type: cindex
#: original_texis/display.texi:6938
#, no-wrap
msgid "display table"
msgstr "display table"

#. type: Plain text
#: original_texis/display.texi:6944
msgid "A display table is a special-purpose char-table (@pxref{Char-Tables}), with @code{display-table} as its subtype, which is used to override the usual character display conventions.  This section describes how to make, inspect, and assign elements to a display table object."
msgstr "ディスプレイテーブルとはサブタイプとして@code{display-table}をもつ特殊用途の文字テーブル(@ref{Char-Tables}を参照)であり、文字の通常の表示慣習をオーバーライドするために使用されます。このセクションではディスプレイテーブルオブジェクトの作成と調査、および要素を割り当てる方法について説明します。"

#. type: defun
#: original_texis/display.texi:6945
#, no-wrap
msgid "make-display-table"
msgstr "make-display-table"

#. type: defun
#: original_texis/display.texi:6948
msgid "This creates and returns a display table.  The table initially has @code{nil} in all elements."
msgstr "これはディスプレイテーブルを作成してリターンする。テーブルは初期状態ではすべての要素に@code{nil}をもつ。"

#. type: Plain text
#: original_texis/display.texi:6956
msgid "The ordinary elements of the display table are indexed by character codes; the element at index @var{c} says how to display the character code @var{c}.  The value should be @code{nil} (which means to display the character @var{c} according to the usual display conventions; @pxref{Usual Display}), or a vector of glyph codes (which means to display the character @var{c} as those glyphs; @pxref{Glyphs})."
msgstr "ディスプレイテーブルの通常の要素は文字コードによりインデックス付けされます。インデックス@var{c}の要素はコード@var{c}の表示方法を示します。値は@code{nil} (これは通常の表示慣習に応じて文字@var{c}を表示することを意味する。@ref{Usual Display}を参照)、またはグリフコードのベクター(これらのグリフとして文字@var{c}を表示することを意味する。@ref{Glyphs}を参照)のいずれかです。"

#. type: Plain text
#: original_texis/display.texi:6960
msgid "@strong{Warning:} if you use the display table to change the display of newline characters, the whole buffer will be displayed as one long line."
msgstr "@strong{警告:} 改行文字の表示を変更するためにディスプレイテーブルを使用すると、バッファー全体が1つの長い行として表示されるでしょう。"

#. type: Plain text
#: original_texis/display.texi:6964
msgid "The display table also has six @dfn{extra slots} which serve special purposes.  Here is a table of their meanings; @code{nil} in any slot means to use the default for that slot, as stated below."
msgstr "ディスプレイテーブルは特殊用途向け6つの@dfn{エクストラスロット(extra slots)}をもつこともできます。以下はそれらの意味についてのテーブルです。@code{nil}のスロットは以下で示すそのスロットにたいするデフォルトの使用を意味します。"

#. type: item
#: original_texis/display.texi:6966
#, no-wrap
msgid "0"
msgstr "0"

#. type: table
#: original_texis/display.texi:6972
msgid "The glyph for the end of a truncated screen line (the default for this is @samp{$}).  @xref{Glyphs}.  On graphical terminals, Emacs by default uses arrows in the fringes to indicate truncation, so the display table has no effect, unless you disable the fringes (@pxref{Fringes,, Window Fringes, emacs, the GNU Emacs Manual})."
msgstr "切り詰められたスクリーン行終端のグリフ(デフォルトでは@samp{$})。@ref{Glyphs}を参照のこと。グラフィカルな端末ではフリンジを無効にしていなれば(@ref{Fringes,, Window Fringes, emacs, the GNU Emacs Manual}を参照)、Emacsはデフォルトでは切り詰められたことをフリンジ内の矢印で示し、ディスプレイテーブルは使用しない。"

#. type: item
#: original_texis/display.texi:6973
#, no-wrap
msgid "1"
msgstr "1"

#. type: table
#: original_texis/display.texi:6978
msgid "The glyph for the end of a continued line (the default is @samp{\\}).  On graphical terminals, Emacs by default uses curved arrows in the fringes to indicate continuation, so the display table has no effect, unless you disable the fringes."
msgstr "継続行終端のグリフ(デフォルトは@samp{\\})。グラフィカルな端末ではフリンジを無効にしていなれば、デフォルトではEmacsは継続ををフリンジ内の曲矢印で示し、ディスプレイテーブルは使用しない。"

#. type: item
#: original_texis/display.texi:6979
#, no-wrap
msgid "2"
msgstr "2"

#. type: table
#: original_texis/display.texi:6982
msgid "The glyph for indicating a character displayed as an octal character code (the default is @samp{\\})."
msgstr "8進文字コードとして表示される文字を示すグリフ(デフォルトは@samp{\\})。"

#. type: item
#: original_texis/display.texi:6983
#, no-wrap
msgid "3"
msgstr "3"

#. type: table
#: original_texis/display.texi:6985
msgid "The glyph for indicating a control character (the default is @samp{^})."
msgstr "コントロール文字を示す(デフォルトは@samp{^})。"

#. type: item
#: original_texis/display.texi:6986
#, no-wrap
msgid "4"
msgstr "4"

#. type: table
#: original_texis/display.texi:6989
msgid "A vector of glyphs for indicating the presence of invisible lines (the default is @samp{...}).  @xref{Selective Display}."
msgstr "不可視行があることを示すグリフのベクター(デフォルトは@samp{...})。@ref{Selective Display}を参照のこと。"

#. type: item
#: original_texis/display.texi:6990
#, no-wrap
msgid "5"
msgstr "5"

#. type: table
#: original_texis/display.texi:6998
msgid "The glyph used to draw the border between side-by-side windows (the default is @samp{|}).  @xref{Splitting Windows}.  This currently has effect only on text terminals; on graphical terminals, if vertical scroll bars are supported and in use, a scroll bar separates the two windows, and if there are no vertical scroll bars and no dividers (@pxref{Window Dividers}), Emacs uses a thin line to indicate the border."
msgstr "横並びのウィンドウ間のボーダー描画に使用されるグリフ(デフォルトは@samp{|})。@ref{Splitting Windows}を参照のこと。これは現在のところテキスト端末でのみ効果がある。グラフィカル端末では垂直スクロールバーがサポートされていて使用中ならスクロールバーが2つのウィンドウを分割する。垂直スクロールバーとディバイダー(@ref{Window Dividers}を参照)がなければ、Emacsは境界を示すために細いラインを使用する。"

#. type: Plain text
#: original_texis/display.texi:7003
msgid "For example, here is how to construct a display table that mimics the effect of setting @code{ctl-arrow} to a non-@code{nil} value (@pxref{Glyphs}, for the function @code{make-glyph-code}):"
msgstr "たとえば以下は関数@code{make-glyph-code}にたいして@code{ctl-arrow}に非@code{nil}をセットして得られる効果を模倣するディスプレイテーブル(@ref{Glyphs}を参照のこと)を構築する例です:"

#. type: example
#: original_texis/display.texi:7015
#, no-wrap
msgid ""
"(setq disptab (make-display-table))\n"
"(dotimes (i 32)\n"
"  (or (= i ?\\t)\n"
"      (= i ?\\n)\n"
"      (aset disptab i\n"
"            (vector (make-glyph-code ?^ 'escape-glyph)\n"
"                    (make-glyph-code (+ i 64) 'escape-glyph)))))\n"
"(aset disptab 127\n"
"      (vector (make-glyph-code ?^ 'escape-glyph)\n"
"              (make-glyph-code ?? 'escape-glyph)))))\n"
msgstr ""
"(setq disptab (make-display-table))\n"
"(dotimes (i 32)\n"
"  (or (= i ?\\t)\n"
"      (= i ?\\n)\n"
"      (aset disptab i\n"
"            (vector (make-glyph-code ?^ 'escape-glyph)\n"
"                    (make-glyph-code (+ i 64) 'escape-glyph)))))\n"
"(aset disptab 127\n"
"      (vector (make-glyph-code ?^ 'escape-glyph)\n"
"              (make-glyph-code ?? 'escape-glyph)))))\n"

#. type: defun
#: original_texis/display.texi:7017
#, no-wrap
msgid "display-table-slot display-table slot"
msgstr "display-table-slot display-table slot"

#. type: defun
#: original_texis/display.texi:7023
msgid "This function returns the value of the extra slot @var{slot} of @var{display-table}.  The argument @var{slot} may be a number from 0 to 5 inclusive, or a slot name (symbol).  Valid symbols are @code{truncation}, @code{wrap}, @code{escape}, @code{control}, @code{selective-display}, and @code{vertical-border}."
msgstr "この関数は@var{display-table}のエクストラスロット@var{slot}の値をリターンする。引数@var{slot}には0から5の数字(両端を含む)、またはスロット名(シンボル)を指定できる。有効なシンボルは@code{truncation}、@code{wrap}、@code{escape}、@code{control}、@code{selective-display}、@code{vertical-border}。"

#. type: defun
#: original_texis/display.texi:7025
#, no-wrap
msgid "set-display-table-slot display-table slot value"
msgstr "set-display-table-slot display-table slot value"

#. type: defun
#: original_texis/display.texi:7031
msgid "This function stores @var{value} in the extra slot @var{slot} of @var{display-table}.  The argument @var{slot} may be a number from 0 to 5 inclusive, or a slot name (symbol).  Valid symbols are @code{truncation}, @code{wrap}, @code{escape}, @code{control}, @code{selective-display}, and @code{vertical-border}."
msgstr "この関数は@var{display-table}のエクストラスロット@var{slot}に@var{value}を格納する。引数@var{slot}には0から5の数字(両端を含む)、またはスロット名(シンボル)を指定できる。有効なシンボルは@code{truncation}、@code{wrap}、@code{escape}、@code{control}、@code{selective-display}、@code{vertical-border}。"

#. type: defun
#: original_texis/display.texi:7033
#, no-wrap
msgid "describe-display-table display-table"
msgstr "describe-display-table display-table"

#. type: defun
#: original_texis/display.texi:7036
msgid "This function displays a description of the display table @var{display-table} in a help buffer."
msgstr "この関数はヘルプバッファーにディスプレイテーブル@var{display-table}の説明を表示する。"

#. type: deffn
#: original_texis/display.texi:7038
#, no-wrap
msgid "Command describe-current-display-table"
msgstr "Command describe-current-display-table"

#. type: deffn
#: original_texis/display.texi:7041
msgid "This command displays a description of the current display table in a help buffer."
msgstr "このコマンドはヘルプバッファーにカレントディスプレイテーブルの説明を表示する。"

#. type: cindex
#: original_texis/display.texi:7045
#, no-wrap
msgid "active display table"
msgstr "active display table"

#. type: Plain text
#: original_texis/display.texi:7052
msgid "Each window can specify a display table, and so can each buffer.  The window's display table, if there is one, takes precedence over the buffer's display table.  If neither exists, Emacs tries to use the standard display table; if that is @code{nil}, Emacs uses the usual character display conventions (@pxref{Usual Display})."
msgstr "ウィンドウはそれぞれディスプレイテーブルを指定でき、各バッファーもディスプレイテーブルを指定できます。もしウィンドウにディスプレイテーブルがあれば、それはバッファーのディスプレイテーブルより優先されます。ウィンドウとバッファーがいずれもディスプレイテーブルをもたなければ、Emacsは標準的なディスプレイテーブルの使用を試みます。標準ディスプレイテーブルが@code{nil}ならEmacsは通常の文字表示慣習を使用します(@ref{Usual Display}を参照)。"

#. type: Plain text
#: original_texis/display.texi:7056
msgid "Note that display tables affect how the mode line is displayed, so if you want to force redisplay of the mode line using a new display table, call @code{force-mode-line-update} (@pxref{Mode Line Format})."
msgstr "ディスプレイテーブルはモードラインが表示される方法に影響を与えるので、新たなディスプレイテーブルを使用してモードラインを強制的に再表示するには@code{force-mode-line-update}を使用することに注意してください(@ref{Mode Line Format}を参照)。"

#. type: defun
#: original_texis/display.texi:7057
#, no-wrap
msgid "window-display-table &optional window"
msgstr "window-display-table &optional window"

#. type: defun
#: original_texis/display.texi:7060
msgid "This function returns @var{window}'s display table, or @code{nil} if there is none.  The default for @var{window} is the selected window."
msgstr "この関数は@var{window}のディスプレイテーブル、ディスプレイテーブルがなければ@code{nil}をリターンする。@var{window}のデフォルトは選択されたウィンドウ。"

#. type: defun
#: original_texis/display.texi:7062
#, no-wrap
msgid "set-window-display-table window table"
msgstr "set-window-display-table window table"

#. type: defun
#: original_texis/display.texi:7066
msgid "This function sets the display table of @var{window} to @var{table}.  The argument @var{table} should be either a display table or @code{nil}."
msgstr "この関数は@var{window}のディスプレイテーブルに@var{table}をセットする。引数@var{table}はディスプレイテーブルか@code{nil}のいずれかであること。"

#. type: defvar
#: original_texis/display.texi:7068
#, no-wrap
msgid "buffer-display-table"
msgstr "buffer-display-table"

#. type: defvar
#: original_texis/display.texi:7072
msgid "This variable is automatically buffer-local in all buffers; its value specifies the buffer's display table.  If it is @code{nil}, there is no buffer display table."
msgstr "この変数はすべてのバッファーにおいて自動的にバッファーローカルになる。変数の値はバッファーのディスプレイテーブルを指定する。これが@code{nil}ならバッファーのディスプレイテーブルは存在しない。"

#. type: defvar
#: original_texis/display.texi:7074
#, no-wrap
msgid "standard-display-table"
msgstr "standard-display-table"

#. type: defvar
#: original_texis/display.texi:7082
msgid "The value of this variable is the standard display table, which is used when Emacs is displaying a buffer in a window with neither a window display table nor a buffer display table defined, or when Emacs is outputting text to the standard output or error streams.  Although its default is typically @code{nil}, in an interactive session if the terminal cannot display curved quotes, its default maps curved quotes to ASCII approximations.  @xref{Text Quoting Style}."
msgstr "この変数の値はウィンドウ内にバッファーを表示する際、ウィンドウディスプレイテーブルとバッファーディスプレイテーブルのいずれも定義されていないとき、またはEmacsがテキストを標準出力やエラーストリームに出力しているときににEmacsが使用する標準ディスプレイテーブル(standard display table)。デフォルトが通常は@code{nil}だとしても、curved quotesを表示できない端末でのインタラクティブなセッションでは、デフォルトでcurved quotesをASCII近似文字にマップする。@ref{Text Quoting Style}を参照のこと。"

#. type: Plain text
#: original_texis/display.texi:7086
msgid "The @file{disp-table} library defines several functions for changing the standard display table."
msgstr "@file{disp-table}ライブラリーでは、標準ディスプレイテーブルを変更するために、いくつかの関数を定義されています。"

#. type: cindex
#: original_texis/display.texi:7089
#, no-wrap
msgid "glyph"
msgstr "glyph"

#. type: cindex
#: original_texis/display.texi:7091
#, no-wrap
msgid "glyph code"
msgstr "glyph code"

#. type: Plain text
#: original_texis/display.texi:7098
msgid "A @dfn{glyph} is a graphical symbol which occupies a single character position on the screen.  Each glyph is represented in Lisp as a @dfn{glyph code}, which specifies a character and optionally a face to display it in (@pxref{Faces}).  The main use of glyph codes is as the entries of display tables (@pxref{Display Tables}).  The following functions are used to manipulate glyph codes:"
msgstr "@dfn{グリフ(glyph)}とはスクリーン上で1文字を占めるグラフィカルなシンボルです。各グリフはLisp内で@dfn{グリフコード(glyph code)}として表現されます。これは文字と、表示するフェイスをオプションで指定します(@ref{Faces}を参照)。ディスプレイテーブル内でのエントリーとしての使用がグリフコードの主な用途です(@ref{Display Tables}を参照)。以下の関数はグリフコードを操作するために使用されます:"

#. type: defun
#: original_texis/display.texi:7099
#, no-wrap
msgid "make-glyph-code char &optional face"
msgstr "make-glyph-code char &optional face"

#. type: defun
#: original_texis/display.texi:7105
msgid "This function returns a glyph code representing char @var{char} with face @var{face}.  If @var{face} is omitted or @code{nil}, the glyph uses the default face; in that case, the glyph code is an integer.  If @var{face} is non-@code{nil}, the glyph code is not necessarily an integer object."
msgstr "この関数は文字@var{char}を表すグリフをフェイス@var{face}でリターンする。@var{face}が省略か@code{nil}ならグリフはデフォルトフェイスを使用して、その場合にはグリフコードは整数。@var{face}が非@code{nil}ならグリフコードが整数オブジェクトである必要はない。"

#. type: defun
#: original_texis/display.texi:7107
#, no-wrap
msgid "glyph-char glyph"
msgstr "glyph-char glyph"

#. type: defun
#: original_texis/display.texi:7109
msgid "This function returns the character of glyph code @var{glyph}."
msgstr "この関数はグリフコード@var{glyph}の文字をリターンする。"

#. type: defun
#: original_texis/display.texi:7111
#, no-wrap
msgid "glyph-face glyph"
msgstr "glyph-face glyph"

#. type: defun
#: original_texis/display.texi:7114
msgid "This function returns face of glyph code @var{glyph}, or @code{nil} if @var{glyph} uses the default face."
msgstr "この関数はグリフコード@var{glyph}のフェイス、または@var{glyph}がデフォルトフェイスを使用する場合には@code{nil}をリターンする。"

#. type: ifnottex
#: original_texis/display.texi:7120
msgid "You can set up a @dfn{glyph table} to change how glyph codes are actually displayed on text terminals.  This feature is semi-obsolete; use @code{glyphless-char-display} instead (@pxref{Glyphless Chars})."
msgstr "テキスト端末上で実際にどのようにグリフコードを表示するかを変更するために@dfn{glyph table}をセットアップできる。この機能は半ば時代遅れであり、かわりに@code{glyphless-char-display}を使用すること(@ref{Glyphless Chars}を参照)。"

#. type: defvar
#: original_texis/display.texi:7121
#, no-wrap
msgid "glyph-table"
msgstr "glyph-table"

#. type: defvar
#: original_texis/display.texi:7128
msgid "The value of this variable, if non-@code{nil}, is the current glyph table.  It takes effect only on character terminals; on graphical displays, all glyphs are displayed literally.  The glyph table should be a vector whose @var{g}th element specifies how to display glyph code @var{g}, where @var{g} is the glyph code for a glyph whose face is unspecified.  Each element should be one of the following:"
msgstr "この変数の値が非@code{nil}なら、それはカレントグリフテーブルである。これは文字端末上でのみ効果があり、グラフィカルディスプレイ上ではすべてのグリフはそのままliteralに表示される。グリフテーブルは@var{g}番目の要素がグリフコード@var{g}の表示方法を指定するようなベクターであること。ここで@var{g}はフェイス未指定なグリフにたいするグリフコード。要素はそれぞれ以下のいずれかであること:"

#. type: table
#: original_texis/display.texi:7132
msgid "Display this glyph literally."
msgstr "そのグリフをそのままliteralに表示する。"

#. type: item
#: original_texis/display.texi:7133
#, no-wrap
msgid "a string"
msgstr "文字列"

#. type: table
#: original_texis/display.texi:7135
msgid "Display this glyph by sending the specified string to the terminal."
msgstr "指定された文字列を端末に送信することによりグリフを表示する。"

#. type: item
#: original_texis/display.texi:7136
#, no-wrap
msgid "a glyph code"
msgstr "グリフコード"

#. type: table
#: original_texis/display.texi:7138
msgid "Display the specified glyph code instead."
msgstr "指定されたグリフコードをかわりに表示する。"

#. type: defvar
#: original_texis/display.texi:7142
msgid "Any integer glyph code greater than or equal to the length of the glyph table is displayed literally."
msgstr "グリフテーブルのテーブル長以上の整数グリフコードは、そのままliteralに表示される。"

#. type: subsection
#: original_texis/display.texi:7146
#, no-wrap
msgid "Glyphless Character Display"
msgstr "Glyphless Character Display"

#. type: cindex
#: original_texis/display.texi:7147
#, no-wrap
msgid "glyphless characters"
msgstr "glyphless characters"

#. type: Plain text
#: original_texis/display.texi:7156
msgid "@dfn{Glyphless characters} are characters which are displayed in a special way, e.g., as a box containing a hexadecimal code, instead of being displayed literally.  These include characters which are explicitly defined to be glyphless, as well as characters for which there is no available font (on a graphical display), and characters which cannot be encoded by the terminal's coding system (on a text terminal)."
msgstr "@dfn{グリフ無し文字(glyphless characters)}とはliteralに表示されるのではなく特別な方法、すなわち16進コードを中に含むボックスとして表示される文字です。これらの文字にはグリフが無いと明示的に定義された文字や、利用可能なフォントがない文字(グラフィカルなディスプレイ)、その端末のコーディングシステムではエンコードできない文字(テキスト端末)が同様に含まれます。"

#. type: defvar
#: original_texis/display.texi:7157
#, no-wrap
msgid "glyphless-char-display"
msgstr "glyphless-char-display"

#. type: defvar
#: original_texis/display.texi:7161
msgid "The value of this variable is a char-table which defines glyphless characters and how they are displayed.  Each entry must be one of the following display methods:"
msgstr "この変数の値はグリフ無し文字と表示方法を定義する文字テーブル。エントリーはそれぞれ以下の表示メソッドのいずれかでなければならない:"

#. type: table
#: original_texis/display.texi:7165
msgid "Display the character in the usual way."
msgstr "通常の方法でその文字を表示する。"

#. type: code{#1}
#: original_texis/display.texi:7166
#, no-wrap
msgid "zero-width"
msgstr "zero-width"

#. type: table
#: original_texis/display.texi:7168
msgid "Don't display the character."
msgstr "その文字を表示しない。"

#. type: code{#1}
#: original_texis/display.texi:7169
#, no-wrap
msgid "thin-space"
msgstr "thin-space"

#. type: table
#: original_texis/display.texi:7172
msgid "Display a thin space, 1-pixel wide on graphical displays, or 1-character wide on text terminals."
msgstr "グラフィカルな端末では幅が1ピクセル、テキスト端末では幅が1文字の狭いスペース。"

#. type: code{#1}
#: original_texis/display.texi:7173
#, no-wrap
msgid "empty-box"
msgstr "empty-box"

#. type: table
#: original_texis/display.texi:7175
msgid "Display an empty box."
msgstr "空のボックスを表示する。"

#. type: code{#1}
#: original_texis/display.texi:7176
#, no-wrap
msgid "hex-code"
msgstr "hex-code"

#. type: table
#: original_texis/display.texi:7179
msgid "Display a box containing the Unicode codepoint of the character, in hexadecimal notation."
msgstr "その文字のUnicodeコードポイントの16進表記を含むボックスを表示する。"

#. type: item
#: original_texis/display.texi:7180
#, no-wrap
msgid "an @acronym{ASCII} string"
msgstr "@acronym{ASCII}文字列"

#. type: table
#: original_texis/display.texi:7183
msgid "Display a box containing that string.  The string should contain at most 6 @acronym{ASCII} characters."
msgstr "その文字列を含むボックスを表示する。文字列には最大で6文字が含まれること。"

#. type: item
#: original_texis/display.texi:7184
#, no-wrap
msgid "a cons cell @code{(@var{graphical} . @var{text})}"
msgstr "コンスセル @code{(@var{graphical} . @var{text})}"

#. type: table
#: original_texis/display.texi:7188
msgid "Display with @var{graphical} on graphical displays, and with @var{text} on text terminals.  Both @var{graphical} and @var{text} must be one of the display methods described above."
msgstr "グラフィカルな端末では@var{graphical}、テキスト端末では@var{text}をで表示する。@var{graphical}と@var{text}はいずれも上述した表示メソッドのいずれかでなければならない。"

#. type: defvar
#: original_texis/display.texi:7195
msgid "The @code{thin-space}, @code{empty-box}, @code{hex-code}, and @acronym{ASCII} string display methods are drawn with the @code{glyphless-char} face.  On text terminals, a box is emulated by square brackets, @samp{[]}."
msgstr "@code{thin-space}、@code{empty-box}、@code{hex-code}、および@acronym{ASCII}文字列は@code{glyphless-char}フェイスで描画される。テキスト端末ではボックスはsquare brackets @samp{[]}でエミュレートされる。"

#. type: defvar
#: original_texis/display.texi:7200
msgid "The char-table has one extra slot, which determines how to display any character that cannot be displayed with any available font, or cannot be encoded by the terminal's coding system.  Its value should be one of the above display methods, except @code{zero-width} or a cons cell."
msgstr "文字テーブルには利用可能なすべてのフォントでも表示できない、またはその端末のコーディングシステムでエンコードできないすべての文字の表示方法を定義する余分なスロットが1つある。その値は上述した表示メソッドのうち@code{zero-width}とコンスセル以外のいずれかでなければならない。"

#. type: defvar
#: original_texis/display.texi:7204
msgid "If a character has a non-@code{nil} entry in an active display table, the display table takes effect; in this case, Emacs does not consult @code{glyphless-char-display} at all."
msgstr "アクティブなディスプレイテーブル内に非@code{nil}なエントリーをもつ文字では、そのディスプレイテーブルが効果をもつ。この場合にはEmacsは@code{glyphless-char-display}をまったく参照しない。"

#. type: defopt
#: original_texis/display.texi:7206
#, no-wrap
msgid "glyphless-char-display-control"
msgstr "glyphless-char-display-control"

#. type: defopt
#: original_texis/display.texi:7212
msgid "This user option provides a convenient way to set @code{glyphless-char-display} for groups of similar characters.  Do not set its value directly from Lisp code; the value takes effect only via a custom @code{:set} function (@pxref{Variable Definitions}), which updates @code{glyphless-char-display}."
msgstr "このユーザーオプションは似かよった文字のグループにたいして@code{glyphless-char-display}をセットする便利な手段を提供する。Lispコードからこの値を直接セットしてはならない。@code{glyphless-char-display}更新するカスタム関数@code{:set}を通じた場合のみ値は効果をもつ。"

#. type: defopt
#: original_texis/display.texi:7217
msgid "Its value should be an alist of elements @code{(@var{group} . @var{method})}, where @var{group} is a symbol specifying a group of characters, and @var{method} is a symbol specifying how to display them."
msgstr "この値は要素が@code{(@var{group} . @var{method})}であるようなalistであること。ここで@var{group}は文字のグループを指定するシンボル、@var{method}はそれらを表示する方法を指定するシンボル。"

#. type: defopt
#: original_texis/display.texi:7219
msgid "@var{group} should be one of the following:"
msgstr "@var{group}は以下のいずれかであること:"

#. type: item
#: original_texis/display.texi:7221
#, no-wrap
msgid "c0-control"
msgstr "c0-control"

#. type: table
#: original_texis/display.texi:7226
msgid "@acronym{ASCII} control characters @code{U+0000} to @code{U+001F}, excluding the newline and tab characters (normally displayed as escape sequences like @samp{^A}; @pxref{Text Display,, How Text Is Displayed, emacs, The GNU Emacs Manual})."
msgstr "改行文字とタブ文字を除く@code{U+0000}から@code{U+001F}までの@acronym{ASCII}コントロール文字(通常は@samp{^A}のようなエスケープシーケンスとして表示される。@ref{Text Display,, How Text Is Displayed, emacs, The GNU Emacs Manual}を参照)。"

#. type: item
#: original_texis/display.texi:7227
#, no-wrap
msgid "c1-control"
msgstr "c1-control"

#. type: table
#: original_texis/display.texi:7231
msgid "Non-@acronym{ASCII}, non-printing characters @code{U+0080} to @code{U+009F} (normally displayed as octal escape sequences like @samp{\\230})."
msgstr "@code{U+0080}から@code{U+009F}までの非@acronym{ASCII}、非プリント文字(通常は@samp{\\230}のような8進エスケープシーケンスとして表示される)。"

#. type: item
#: original_texis/display.texi:7232
#, no-wrap
msgid "format-control"
msgstr "format-control"

#. type: table
#: original_texis/display.texi:7236
msgid "Characters of Unicode General Category [Cf], such as @samp{U+200E} (Left-to-Right Mark), but excluding characters that have graphic images, such as @samp{U+00AD} (Soft Hyphen)."
msgstr "@samp{U+200E}のようなUnicode General Category [Cf]の文字だが、@samp{U+00AD}(Soft Hyphen)のようにグラフィックイメージをもつ文字を除く。"

#. type: item
#: original_texis/display.texi:7237
#, no-wrap
msgid "no-font"
msgstr "no-font"

#. type: table
#: original_texis/display.texi:7240
msgid "Characters for which there is no suitable font, or which cannot be encoded by the terminal's coding system."
msgstr "適切なフォントが存在しない、あるいはその端末のコーディングシステムではエンコードできない文字。"

#. type: defopt
#: original_texis/display.texi:7248
msgid "The @var{method} symbol should be one of @code{zero-width}, @code{thin-space}, @code{empty-box}, or @code{hex-code}.  These have the same meanings as in @code{glyphless-char-display}, above."
msgstr "@var{method}シンボルは@code{zero-width}、@code{thin-space}、@code{empty-box}、@code{hex-code}のいずれかであること。これらは上述の@code{glyphless-char-display}での場合と同様の意味をもつ。"

#. type: cindex
#: original_texis/display.texi:7252
#, no-wrap
msgid "bell"
msgstr "bell"

#. type: Plain text
#: original_texis/display.texi:7259
msgid "This section describes how to make Emacs ring the bell (or blink the screen) to attract the user's attention.  Be conservative about how often you do this; frequent bells can become irritating.  Also be careful not to use just beeping when signaling an error is more appropriate (@pxref{Errors})."
msgstr "このセクションではユーザーの注意を喚起するために、Emacsでベルを鳴らす方法を説明します。これを行う頻度は控え目にしてください。頻繁なベルは刺激過剰になる恐れがあります。同様にエラーのシグナル時に過度にビープ音を使用しないよう注意してください。"

#. type: defun
#: original_texis/display.texi:7260
#, no-wrap
msgid "ding &optional do-not-terminate"
msgstr "ding &optional do-not-terminate"

#. type: cindex
#: original_texis/display.texi:7261
#, no-wrap
msgid "keyboard macro termination"
msgstr "keyboard macro termination"

#. type: defun
#: original_texis/display.texi:7265
msgid "This function beeps, or flashes the screen (see @code{visible-bell} below).  It also terminates any keyboard macro currently executing unless @var{do-not-terminate} is non-@code{nil}."
msgstr "この関数はビープ音を鳴らす、またはスクリーンをフラッシュする(後述の@code{visible-bell}を参照)。@var{do-not-terminate}が@code{nil}なら、この関数はカレントで実行中のキーボードマクロも終了する。"

#. type: defun
#: original_texis/display.texi:7267
#, no-wrap
msgid "beep &optional do-not-terminate"
msgstr "beep &optional do-not-terminate"

#. type: defun
#: original_texis/display.texi:7269
msgid "This is a synonym for @code{ding}."
msgstr "これは@code{ding}のシノニム。"

#. type: defopt
#: original_texis/display.texi:7271
#, no-wrap
msgid "visible-bell"
msgstr "visible-bell"

#. type: defopt
#: original_texis/display.texi:7277
msgid "This variable determines whether Emacs should flash the screen to represent a bell.  Non-@code{nil} means yes, @code{nil} means no.  This is effective on graphical displays, and on text terminals provided the terminal's Termcap entry defines the visible bell capability (@samp{vb})."
msgstr "この変数はベルを表すためにスクリーンをフラッシュすべきかどうかを決定する。非@code{nil}ならフラッシュして、@code{nil}ならフラッシュしない。これはグラフィカルなディスプレイで効果的であり、テキスト端末ではその端末のTermcapエントリーが可視ベル(visible bell) @samp{vb}の能力を定義する。"

#. type: defopt
#: original_texis/display.texi:7279
#, no-wrap
msgid "ring-bell-function"
msgstr "ring-bell-function"

#. type: defopt
#: original_texis/display.texi:7284
msgid "If this is non-@code{nil}, it specifies how Emacs should ring the bell.  Its value should be a function of no arguments.  If this is non-@code{nil}, it takes precedence over the @code{visible-bell} variable."
msgstr "これが非@code{nil}ならEmacsがどのようにベルを鳴らすかを定義すること。値は引数なしの関数であること。これが非@code{nil}なら@code{visible-bell}より優先される。"

#. type: Plain text
#: original_texis/display.texi:7293
msgid "Emacs works with several window systems, most notably the X Window System.  Both Emacs and X use the term ``window'', but use it differently.  An Emacs frame is a single window as far as X is concerned; the individual Emacs windows are not known to X at all."
msgstr "Emacsは複数のウィンドウシステムで機能しますが、特にXウィンドウシステムにおいてもっとも機能します。EmacsとXはどちらも``ウィンドウ''を使用しますが異なる使い方をします。EmacsのフレームはXにおいては単一のウィンドウです。Emacsの個々のウィンドウについては、Xはまったく関知しません。"

#. type: defvar
#: original_texis/display.texi:7294
#, no-wrap
msgid "window-system"
msgstr "window-system"

#. type: defvar
#: original_texis/display.texi:7297
msgid "This terminal-local variable tells Lisp programs what window system Emacs is using for displaying the frame.  The possible values are"
msgstr "この端末ローカルな変数は、Emacsがフレームを表示するのに何のウィンドウシステムを使用しているかを示す。可能な値は、"

#. type: item
#: original_texis/display.texi:7299
#, no-wrap
msgid "x"
msgstr "x"

#. type: cindex
#: original_texis/display.texi:7300
#, no-wrap
msgid "X Window System"
msgstr "X Window System"

#. type: table
#: original_texis/display.texi:7302
msgid "Emacs is displaying the frame using X."
msgstr "EmacsはXを使用してフレームを表示している。"

#. type: item
#: original_texis/display.texi:7302
#, no-wrap
msgid "w32"
msgstr "w32"

#. type: table
#: original_texis/display.texi:7304
msgid "Emacs is displaying the frame using native MS-Windows GUI."
msgstr "EmacsはネイティブMS-Windows GUIを使用してフレームを表示している。"

#. type: item
#: original_texis/display.texi:7304
#, no-wrap
msgid "ns"
msgstr "ns"

#. type: table
#: original_texis/display.texi:7307
msgid "Emacs is displaying the frame using the Nextstep interface (used on GNUstep and macOS)."
msgstr "EmacsはNextstepインターフェイスを使用してフレームを表示している(GNUstepとmacOSで使用されている)。"

#. type: item
#: original_texis/display.texi:7307
#, no-wrap
msgid "pc"
msgstr "pc"

#. type: table
#: original_texis/display.texi:7309
msgid "Emacs is displaying the frame using MS-DOS direct screen writes."
msgstr "EmacsはMS-DOSのスクリーン直接書き込みを使用してフレームを表示している。"

#. type: table
#: original_texis/display.texi:7311
msgid "Emacs is displaying the frame on a character-based terminal."
msgstr "Emacsは文字ベース端末を使用してフレームを表示している。"

#. type: defvar
#: original_texis/display.texi:7314
#, no-wrap
msgid "initial-window-system"
msgstr "initial-window-system"

#. type: defvar
#: original_texis/display.texi:7321
msgid "This variable holds the value of @code{window-system} used for the first frame created by Emacs during startup.  (When Emacs is invoked as a daemon, it does not create any initial frames, so @code{initial-window-system} is @code{nil}, except on MS-Windows, where it is still @code{w32}.  @xref{Initial Options, daemon,, emacs, The GNU Emacs Manual}.)"
msgstr "この変数はスタートアップの間にEmacsが作成する最初のフレームにたいして使用される@code{window-system}の値を保持する(デーモンとしてEmacsを呼び出し時には初期フレームを作成しないので、@code{w32}のMS-Windowsを除き@code{initial-window-system}は@code{nil}。@ref{Initial Options, daemon,, emacs, The GNU Emacs Manual}を参照)。"

#. type: defun
#: original_texis/display.texi:7323
#, no-wrap
msgid "window-system &optional frame"
msgstr "window-system &optional frame"

#. type: defun
#: original_texis/display.texi:7328
msgid "This function returns a symbol whose name tells what window system is used for displaying @var{frame} (which defaults to the currently selected frame).  The list of possible symbols it returns is the same one documented for the variable @code{window-system} above."
msgstr "この関数は@var{frame}を表示するために使用されているウィンドウシステムを示す名前のシンボルをリターンする。この関数がリターンし得るシンボルのリストは変数@code{window-system}の記述と同様。"

#. type: Plain text
#: original_texis/display.texi:7337
msgid "Do @emph{not} use @code{window-system} and @code{initial-window-system} as predicates or boolean flag variables, if you want to write code that works differently on text terminals and graphic displays.  That is because @code{window-system} is not a good indicator of Emacs capabilities on a given display type.  Instead, use @code{display-graphic-p} or any of the other @code{display-*-p} predicates described in @ref{Display Feature Testing}."
msgstr "テキスト端末とグラフィカルなディスプレイで異なる処理を行うコードを記述したいときは、@code{window-system}と@code{initial-window-system}を述語やブーリーンフラグ変数として@emph{使用しないでください}。これは与えられたディスプレイタイプでのEmacsの能力指標として@code{window-system}が適していないからです。かわりに@code{display-graphic-p}、または@ref{Display Feature Testing}で説明しているその他の述語@code{display-*-p}を使用してください。"

#. type: cindex
#: original_texis/display.texi:7340
#, no-wrap
msgid "tooltips"
msgstr "tooltips"

#. type: Plain text
#: original_texis/display.texi:7347
msgid "@dfn{Tooltips} are special frames (@pxref{Frames}) that are used to display helpful hints (a.k.a.@: ``tips'') related to the current position of the mouse pointer.  Emacs uses tooltips to display help strings about active portions of text (@pxref{Special Properties}) and about various UI elements, such as menu items (@pxref{Extended Menu Items}) and tool-bar buttons (@pxref{Tool Bar})."
msgstr "@dfn{ツールチップ(Tooltips)}はマウスポインターのカレント位置に関連するヘルプ的なヒント(別名``tips'')の表示に使用される特別なフレームです(@ref{Frames}を参照)。Emacsはテキストのアクティブ範囲(@ref{Special Properties}を参照)、およびメニューアイテム(@ref{Extended Menu Items}を参照)やツールバーのボタン(@ref{Tool Bar}を参照)のような種々のUI要素に関するヘルプ文字列の表示にツールチップを使用します。"

#. type: defun
#: original_texis/display.texi:7348
#, no-wrap
msgid "tooltip-mode"
msgstr "tooltip-mode"

#. type: defun
#: original_texis/display.texi:7353
msgid "Tooltip Mode is a minor mode that enables display of tooltips.  Turning off this mode causes the tooltips be displayed in the echo area.  On text-mode (a.k.a.@: ``TTY'') frames, tooltips are always displayed in the echo area."
msgstr "Tooltipモードはツールチップの表示を有効にするマイナーモード。このモードをオフにするとツールチップはエコーエリアに表示される。テキストモード(別名``TTY'')のフレームでは、ツールチップは常にエコーエリアに表示される。"

#. type: vindex
#: original_texis/display.texi:7355
#, no-wrap
msgid "x-gtk-use-system-tooltips"
msgstr "x-gtk-use-system-tooltips"

#. type: Plain text
#: original_texis/display.texi:7362
msgid "When Emacs is built with GTK+ support, it by default displays tooltips using GTK+ functions, and the appearance of the tooltips is then controlled by GTK+ settings.  GTK+ tooltips can be disabled by changing the value of the variable @code{x-gtk-use-system-tooltips} to @code{nil}.  The rest of this subsection describes how to control non-GTK+ tooltips, which are presented by Emacs itself."
msgstr "GTK+サポート付きでEmacsがビルドされた際にはデフォルトでGTK+関数を使用してツールチップを表示して、ツールチップの外観はGTK+のセッティングにより制御されます。GTK+ツールチップは変数@code{x-gtk-use-system-tooltips}の値を@code{nil}に変更して無効にできます。このセクションの残りではEmacs自身が提供する非GTK+ツールチップを制御する方法を説明します。"

#. type: cindex
#: original_texis/display.texi:7363
#, no-wrap
msgid "tooltip frames"
msgstr "tooltip frames"

#. type: Plain text
#: original_texis/display.texi:7368
msgid "Tooltips are displayed in special frames called tooltip frames, which have their own frame parameters (@pxref{Frame Parameters}).  Unlike other frames, the default parameters for tooltip frames are stored in a special variable."
msgstr "ツールチップは独自のパラメーターをもつツールチップフレームと呼ばれる特別なフレームに表示されます(@ref{Frame Parameters}を参照)。他のフレームとは異なり、ツールチップフレームのデフォルトパラメターは特別な変数に格納されています。"

#. type: defopt
#: original_texis/display.texi:7369
#, no-wrap
msgid "tooltip-frame-parameters"
msgstr "tooltip-frame-parameters"

#. type: defopt
#: original_texis/display.texi:7379
msgid "This customizable option holds the default frame parameters used for displaying tooltips.  Any font and color parameters are ignored, and the corresponding attributes of the @code{tooltip} face are used instead.  If @code{left} or @code{top} parameters are included, they are used as absolute frame-relative coordinates where the tooltip should be shown.  (Mouse-relative position of the tooltip can be customized using the variables described in @ref{Tooltips,,, emacs, The GNU Emacs Manual}.)  Note that the @code{left} and @code{top} parameters, if present, override the values of mouse-relative offsets."
msgstr "このカスタマイズ可能なオプションはツールチップ表示に使用するデフォルトのフレームパラメーターを保持する。フォントとカラーに関するパラメーターは無視して、@code{tooltip}フェイスの対応する属性をかわりに使用する。@code{left}や@code{top}のパラメーターが含まれていれば、ツールチップを表示すべきフレームに相対的な絶対座標として使用する(@ref{Tooltips,,, emacs, The GNU Emacs Manual}に記された変数を使用すればマウスに相対的なツールチップをカスタマイズできる)。@code{left}と@code{top}のパラメーターが与えられた場合にはマウスに相対的なオフセットをオーバーラードすることに注意。"

#. type: vindex
#: original_texis/display.texi:7381
#, no-wrap
msgid "tooltip@r{ face}"
msgstr "tooltip@r{ face}"

#. type: Plain text
#: original_texis/display.texi:7385
msgid "The @code{tooltip} face determines the appearance of text shown in tooltips.  It should generally use a variable-pitch font of size that is preferably smaller than the default frame font."
msgstr "@code{tooltip}フェイスはツールチップ内に表示されるテキストの見栄えを決定します。デフォルトのフレームフォントより一般的にはサイズの小さい可変ピッチフォントの使用が必要になります。"

#. type: findex
#: original_texis/display.texi:7386
#, no-wrap
msgid "tooltip-help-tips"
msgstr "tooltip-help-tips"

#. type: defvar
#: original_texis/display.texi:7387
#, no-wrap
msgid "tooltip-functions"
msgstr "tooltip-functions"

#. type: defvar
#: original_texis/display.texi:7395
msgid "This abnormal hook is a list of functions to call when Emacs needs to display a tooltip.  Each function is called with a single argument @var{event} which is a copy of the last mouse movement event.  If a function on this list actually displays the tooltip, it should return non-@code{nil}, and then the rest of the functions will not be called.  The default value of this variable is a single function @code{tooltip-help-tips}."
msgstr "これはEmacsがツールチップの表示を必要とする際に呼び出す関数のリストであるようなアブノーマルフック。関数はそれぞれ最後のマウス移動イベントである@var{event}を単一の引数として呼び出される。このリスト上の関数が実際にツールチップを表示するなら非@code{nil}をリターンして、残りの関数は呼び出されない。この変数のデフォルト値は@code{tooltip-help-tips}という1つの関数。"

#. type: Plain text
#: original_texis/display.texi:7401
msgid "If you write your own function to be put on the @code{tooltip-functions} list, you may need to know the buffer of the mouse event that triggered the tooltip display.  The following function provides that information."
msgstr "@code{tooltip-functions}のリストに配置する関数を独自に記述する場合には、ツールチップの表示をトリガーしたマウスイベントのバッファーを知る必要があるかもしれません。以下はこの情報を提供する関数です。"

#. type: defun
#: original_texis/display.texi:7402
#, no-wrap
msgid "tooltip-event-buffer event"
msgstr "tooltip-event-buffer event"

#. type: defun
#: original_texis/display.texi:7409
msgid "This function returns the buffer over which @var{event} occurred.  Call it with the argument of the function from @code{tooltip-functions} to obtain the buffer whose text triggered the tooltip.  Note that the event might occur not over a buffer (e.g., over the tool bar), in which case this function will return @code{nil}."
msgstr "この関数は@var{event}が発生したバッファーをリターンする。テキストがツールチップをトリガーしたバッファーを取得するために、これを@code{tooltip-functions}の関数の引数で呼び出す。イベントはバッファーではないところ(たとえばツールバー)で発生したかもしれず、そのような場合にはこの関数は@code{nil}をリターンする。"

#. type: Plain text
#: original_texis/display.texi:7414
msgid "Other aspects of tooltip display are controlled by several customizable settings; see @ref{Tooltips,,, emacs, The GNU Emacs Manual}."
msgstr "ツールチップ表示に関する他の側面は、いくつかのカスタマイズ可能なセッティングにより制御されます。@ref{Tooltips,,, emacs, The GNU Emacs Manual}を参照してください。"

#. type: cindex
#: original_texis/display.texi:7417
#, no-wrap
msgid "bidirectional display"
msgstr "bidirectional display"

#. type: cindex
#: original_texis/display.texi:7418
#, no-wrap
msgid "right-to-left text"
msgstr "right-to-left text"

#. type: Plain text
#: original_texis/display.texi:7430
msgid "Emacs can display text written in scripts, such as Arabic, Farsi, and Hebrew, whose natural ordering for horizontal text display runs from right to left.  Furthermore, segments of Latin script and digits embedded in right-to-left text are displayed left-to-right, while segments of right-to-left script embedded in left-to-right text (e.g., Arabic or Hebrew text in comments or strings in a program source file) are appropriately displayed right-to-left.  We call such mixtures of left-to-right and right-to-left text @dfn{bidirectional text}.  This section describes the facilities and options for editing and displaying bidirectional text."
msgstr "Emacsはアラビア語、ペルシア語、ヘブライ語のような水平方向テキストの自然な表示順がR2L(right-to-left: 右から左)に実行されるようなスクリプトで記述されたテキストを表示できます。さらにL2R(right-to-left: 左から右)のテキストに埋め込まれたR2Lスクリプト(例: プログラムソースファイル内のアラビア語やヘブライ語のコメント)は適宜右から左にR2Lに表示される一方、ラテンスクリプト部やR2Lテキストに埋め込まれた数字はL2Rで表示されます。そのようなL2RとR2Lが混交されたテキストを、わたしたちは@dfn{双方向テキスト(bidirectional text)}と呼んでいます。このセクションでは双方向テキストの編集と表示にたいする機能とオプションについて説明します。"

#. type: cindex
#: original_texis/display.texi:7431
#, no-wrap
msgid "logical order"
msgstr "logical order"

#. type: cindex
#: original_texis/display.texi:7432
#, no-wrap
msgid "reading order"
msgstr "reading order"

#. type: cindex
#: original_texis/display.texi:7433
#, no-wrap
msgid "visual order"
msgstr "visual order"

#. type: cindex
#: original_texis/display.texi:7434
#, no-wrap
msgid "unicode bidirectional algorithm"
msgstr "unicode bidirectional algorithm"

#. type: cindex
#: original_texis/display.texi:7435
#, no-wrap
msgid "UBA"
msgstr "UBA"

#. type: cindex
#: original_texis/display.texi:7436
#, no-wrap
msgid "bidirectional reordering"
msgstr "bidirectional reordering"

#. type: cindex
#: original_texis/display.texi:7437
#, no-wrap
msgid "reordering, of bidirectional text"
msgstr "reordering, of bidirectional text"

#. type: Plain text
#: original_texis/display.texi:7454
msgid "Text is stored in Emacs buffers and strings in @dfn{logical} (or @dfn{reading}) order, i.e., the order in which a human would read each character.  In right-to-left and bidirectional text, the order in which characters are displayed on the screen (called @dfn{visual order}) is not the same as logical order; the characters' screen positions do not increase monotonically with string or buffer position.  In performing this @dfn{bidirectional reordering}, Emacs follows the Unicode Bidirectional Algorithm (a.k.a.@: @acronym{UBA}), which is described in Annex #9 of the Unicode standard (@url{http://www.unicode.org/reports/tr9/}).  Emacs provides a ``Full Bidirectionality'' class implementation of the @acronym{UBA}, consistent with the requirements of the Unicode Standard v9.0.  Note, however, that the way Emacs displays continuation lines when text direction is opposite to the base paragraph direction deviates from the UBA, which requires to perform line wrapping before reordering text for display."
msgstr "テキストは@dfn{ロジカル}な順序(または@dfn{読込順})、すなわち人間が各文字を読み込むであろう順序でテキストをEmacsバッファーや文字列に格納します。R2Lおよび双方向テキストでは、スクリーン上で文字が表示される順序(@dfn{ビジュアル順}と呼ばれる)はロジカル順と同一ではありません。それら各文字のスクリーン位置は文字列やバッファー位置により単調に増加しません。この@dfn{双方向の並べ替え(bidirectional reordering)}を処理を行う際に、EmacsはUnicode双方向アルゴリズム(@acronym{UBA}： Unicode Bidirectional Algorithm)にしたがいます(@url{http://www.unicode.org/reports/tr9/})。EmacsはUnicode Standard v9.0の要件に合致する@acronym{UBA}の``Full Bidirectionality(完全な双方向性)''を提供します。とはいえテキストがパラグラフの基本方向と逆方向なときにEmacsが継続行を表示する方法は、表示するテキストの再並び換えの前に行の折り返しを要求するUBAからは逸脱していることに注意してください。"

#. type: defvar
#: original_texis/display.texi:7455
#, no-wrap
msgid "bidi-display-reordering"
msgstr "bidi-display-reordering"

#. type: defvar
#: original_texis/display.texi:7463
msgid "If the value of this buffer-local variable is non-@code{nil} (the default), Emacs performs bidirectional reordering for display.  The reordering affects buffer text, as well as display strings and overlay strings from text and overlay properties in the buffer (@pxref{Overlay Properties}, and @pxref{Display Property}).  If the value is @code{nil}, Emacs does not perform bidirectional reordering in the buffer."
msgstr "このバッファーローカル変数の値が非@code{nil} (デフォルト)なら、Emacsは表示で双方向の並べ替えを行う。この並べ替えはバッファーテキスト、同様に文字列表示やバッファー内のテキストプロパティやオーバーレイプロパティ由来のオーバーレイ文字列に効果を及ぼす(@ref{Overlay Properties}および@ref{Display Property}を参照)。値が@code{nil}ならEmacsはバッファー内での双方向の並べ替えを行わない。"

#. type: defvar
#: original_texis/display.texi:7468
msgid "The default value of @code{bidi-display-reordering} controls the reordering of strings which are not directly supplied by a buffer, including the text displayed in mode lines (@pxref{Mode Line Format})  and header lines (@pxref{Header Lines})."
msgstr "@code{bidi-display-reordering}のデフォルト値は、モードライン内に表示されるテキスト(@ref{Mode Line Format}を参照)、およびヘッダー行(@ref{Header Lines}を参照)を含む、バッファーにより直接提供されない文字列の並べ替えを制御する。"

#. type: cindex
#: original_texis/display.texi:7470
#, no-wrap
msgid "unibyte buffers, and bidi reordering"
msgstr "unibyte buffers, and bidi reordering"

#. type: Plain text
#: original_texis/display.texi:7478
msgid "Emacs never reorders the text of a unibyte buffer, even if @code{bidi-display-reordering} is non-@code{nil} in the buffer.  This is because unibyte buffers contain raw bytes, not characters, and thus lack the directionality properties required for reordering.  Therefore, to test whether text in a buffer will be reordered for display, it is not enough to test the value of @code{bidi-display-reordering} alone.  The correct test is this:"
msgstr "たとえバッファーの@code{bidi-display-reordering}が非@code{nil}でも、Emacsがユニバイトバッファーのテキストの並べ替えを行うことはありません。これはユニバイトバッファーに含まれるのが文字ではなくrawバイトであり、並べ替えに要する方向的なプロパティを欠くからです。したがってあるバッファーのテキストが並べ替えられるかどうかテストするには、@code{bidi-display-reordering}のテスト単独では不十分です。正しいテストは以下のようになります:"

#. type: example
#: original_texis/display.texi:7484
#, no-wrap
msgid ""
" (if (and enable-multibyte-characters\n"
"          bidi-display-reordering)\n"
"     ;; Buffer is being reordered for display\n"
"   )\n"
msgstr ""
" (if (and enable-multibyte-characters\n"
"          bidi-display-reordering)\n"
"     ;; 表示時にバッファーは並べ替えられるだろう\n"
"   )\n"

#. type: Plain text
#: original_texis/display.texi:7491
msgid "However, unibyte display and overlay strings @emph{are} reordered if their parent buffer is reordered.  This is because plain-@sc{ascii} strings are stored by Emacs as unibyte strings.  If a unibyte display or overlay string includes non-@sc{ascii} characters, these characters are assumed to have left-to-right direction."
msgstr "とはいえ親バッファーが並べ替えられた際には、ユニバイト表示やオーバーレイ文字列は@emph{並べ替えられます}。これはEmacsによりプレーン@sc{ascii}文字列がユニバイト文字列に格納されるからです。ユニバイト表示やオーバーレイ文字列が非@sc{ascii}文字列を含むなら、それらの文字はL2Rの方向をもつとみなされます。"

#. type: cindex
#: original_texis/display.texi:7492
#, no-wrap
msgid "display properties, and bidi reordering of text"
msgstr "display properties, and bidi reordering of text"

#. type: Plain text
#: original_texis/display.texi:7506
msgid "Text covered by @code{display} text properties, by overlays with @code{display} properties whose value is a string, and by any other properties that replace buffer text, is treated as a single unit when it is reordered for display.  That is, the entire chunk of text covered by these properties is reordered together.  Moreover, the bidirectional properties of the characters in such a chunk of text are ignored, and Emacs reorders them as if they were replaced with a single character @code{U+FFFC}, known as the @dfn{Object Replacement Character}.  This means that placing a display property over a portion of text may change the way that the surrounding text is reordered for display.  To prevent this unexpected effect, always place such properties on text whose directionality is identical with text that surrounds it."
msgstr "テキストプロパティ@code{display}、値が文字列であるような@code{display}プロパティによるオーバーレイ、バッファーテキストを置換するその他任意のプロパティにカバーされたテキストは表示時の並べ替えの際には単一の単位として扱われます。つまりこれらのプロパティにカバーされたテキストのchunk全体が一緒に並べ替えられます。さらにそのようなテキストchunk内の文字の双方向的なプロパティは無視されて、Emacsはあたかもそれらが@dfn{オブジェクト置換文字(Object Replacement Character)}として知られる単一文字で置換されたかのように並べ替えます。これはテキスト範囲上にdisplayプロパティを配置することにより、表示時に周辺テキストを並べ替える方法が変更され得ることを意味しています。このような予期せぬ効果を防ぐには、常に周辺テキストと等しい方向のテキストにたいしてそのようなプロパティを配置してください。"

#. type: cindex
#: original_texis/display.texi:7507
#, no-wrap
msgid "base direction of a paragraph"
msgstr "base direction of a paragraph"

#. type: Plain text
#: original_texis/display.texi:7514
msgid "Each paragraph of bidirectional text has a @dfn{base direction}, either right-to-left or left-to-right.  Left-to-right paragraphs are displayed beginning at the left margin of the window, and are truncated or continued when the text reaches the right margin.  Right-to-left paragraphs are displayed beginning at the right margin, and are continued or truncated at the left margin."
msgstr "双方向テキストのパラグラフはそれぞれ、R2LかL2Rいずれかの@dfn{基本方向(base direction)}をもちます。L2Rパラグラフはウィンドウの左マージンを先頭に表示され、そのテキストが右マージンに達したら切り詰めや継続されます。R2Lパラグラフはウィンドウの右マージンを先頭に表示され、そのテキストが左マージンに達したら切り詰めや継続されます。"

#. type: cindex
#: original_texis/display.texi:7515
#, no-wrap
msgid "paragraph-start, and bidirectional display"
msgstr "paragraph-start, and bidirectional display"

#. type: cindex
#: original_texis/display.texi:7516
#, no-wrap
msgid "paragraph-separate, and bidirectional display"
msgstr "paragraph-separate, and bidirectional display"

#. type: Plain text
#: original_texis/display.texi:7524
msgid "Where exactly paragraphs start and end, for the purpose of the Emacs @acronym{UBA} implementation, is determined by the following two buffer-local variables (note that @code{paragraph-start} and @code{paragraph-separate} have no influence on this).  By default both of these variables are @code{nil}, and paragraphs are bounded by empty lines, i.e., lines that consist entirely of zero or more whitespace characters followed by a newline."
msgstr "Emacsの@acronym{UBA}実装の目的におけるパラグラフの開始および終了の正確な位置は、以下の2つのローカル変数により決定されます(@code{paragraph-start}と@code{paragraph-separate}に効果はないことに注意)。デフォルトではこれらの変数は@code{nil}であり、パラグラフは空行(改行を後に併なう0個以上の空白文字)で囲まれます。"

#. type: defvar
#: original_texis/display.texi:7525
#, no-wrap
msgid "bidi-paragraph-start-re"
msgstr "bidi-paragraph-start-re"

#. type: defvar
#: original_texis/display.texi:7530
msgid "If non-@code{nil}, this variable's value should be a regular expression matching a line that starts or separates two paragraphs.  The regular expression is always matched after a newline, so it is best to anchor it, i.e., begin it with a @code{\"^\"}."
msgstr "この変数の値が非@code{nil}ならパラグラフの開始か2つのパラグラフを分割する行にマッチする正規表現であること。この正規表現は常に改行の後にマッチするので、それをアンカーにする(@code{\"^\"}で開始する)のが最善である。"

#. type: defvar
#: original_texis/display.texi:7532
#, no-wrap
msgid "bidi-paragraph-separate-re"
msgstr "bidi-paragraph-separate-re"

#. type: defvar
#: original_texis/display.texi:7537
msgid "If non-@code{nil}, this variable's value should be a regular expression matching a line separates two paragraphs.  The regular expression is always matched after a newline, so it is best to anchor it, i.e., begin it with a @code{\"^\"}."
msgstr "この変数の値が非@code{nil}なら2つのパラグラフを分割する行にマッチする正規表現であること。この正規表現は常に改行の後にマッチするので、それをアンカーにする(@code{\"^\"}で開始する)のが最善である。"

#. type: Plain text
#: original_texis/display.texi:7543
msgid "If you modify any of these two variables, you should normally modify both, to make sure they describe paragraphs consistently.  For example, to have each new line start a new paragraph for bidi-reordering purposes, set both variables to @code{\"^\"}."
msgstr "これら2つの変数 のいずれかを変更する場合には、整合性のあるパラグラフの記述を保証するために、通常は両方を変更するべきです。たとえば双方向の並べ替え目的のために各改行を新たなパラグラフの開始とするには両方の変数に@code{\"^\"}をセットしてください。"

#. type: Plain text
#: original_texis/display.texi:7553
msgid "By default, Emacs determines the base direction of each paragraph by looking at the text at its beginning.  The precise method of determining the base direction is specified by the @acronym{UBA}; in a nutshell, the first character in a paragraph that has an explicit directionality determines the base direction of the paragraph.  However, sometimes a buffer may need to force a certain base direction for its paragraphs.  For example, buffers containing program source code should force all paragraphs to be displayed left-to-right.  You can use following variable to do this:"
msgstr "デフォルトではEmacsはテキスト先頭を調べることにより各パラグラフの基本方向を判断します。基本方向の精細な決定手法は@acronym{UBA}により指定されており、簡潔に言うとその明示にな方向生をもつそのパラグラフ内の最初の文字がパラグラフの基本方向を決定します。とはいえ、あるバッファーが自身のパラグラフにたいして特定の基本方向の強制を要する場合もあります。たとえばプログラムソースコードを含むバッファーは、すべてのパラグラフがL2Rで表示されるよう強制されるべきでしょう。これを行うために以下の変数を使用できます:"

#. type: defopt
#: original_texis/display.texi:7554
#, no-wrap
msgid "bidi-paragraph-direction"
msgstr "bidi-paragraph-direction"

#. type: defopt
#: original_texis/display.texi:7560
msgid "If the value of this buffer-local variable is the symbol @code{right-to-left} or @code{left-to-right}, all paragraphs in the buffer are assumed to have that specified direction.  Any other value is equivalent to @code{nil} (the default), which means to determine the base direction of each paragraph from its contents."
msgstr "このバッファーローカル変数の値が@code{right-to-left}か@code{left-to-right}いずれかのシンボルなら、そのバッファー内のすべてのパラグラフがその指定された方向をもつとみなされる。その他すべての値は@code{nil} (デフォルト)と等価であり、それは各パラグラフの基本方向が内容により判断されることを意味する。"

#. type: cindex
#: original_texis/display.texi:7561
#, no-wrap
msgid "@code{prog-mode}, and @code{bidi-paragraph-direction}"
msgstr "@code{prog-mode}, and @code{bidi-paragraph-direction}"

#. type: defopt
#: original_texis/display.texi:7565
msgid "Modes for program source code should set this to @code{left-to-right}.  Prog mode does this by default, so modes derived from Prog mode do not need to set this explicitly (@pxref{Basic Major Modes})."
msgstr "プログラムソースコードにたいするモードは、これを@code{left-to-right}にセットすること。Progモードはデフォルトでこれを行うので、Progモードから派生したモードは明示的にセットする必要はない(@ref{Basic Major Modes}を参照)。"

#. type: defun
#: original_texis/display.texi:7567
#, no-wrap
msgid "current-bidi-paragraph-direction &optional buffer"
msgstr "current-bidi-paragraph-direction &optional buffer"

#. type: defun
#: original_texis/display.texi:7578
msgid "This function returns the paragraph direction at point in the named @var{buffer}.  The returned value is a symbol, either @code{left-to-right} or @code{right-to-left}.  If @var{buffer} is omitted or @code{nil}, it defaults to the current buffer.  If the buffer-local value of the variable @code{bidi-paragraph-direction} is non-@code{nil}, the returned value will be identical to that value; otherwise, the returned value reflects the paragraph direction determined dynamically by Emacs.  For buffers whose value of @code{bidi-display-reordering} is @code{nil} as well as unibyte buffers, this function always returns @code{left-to-right}."
msgstr "この関数は@var{buffer}という名前のバッファーのポイント位置のパラグラフ方向をリターンする。リターンされる値は@code{left-to-right}か@code{right-to-left}いずれかのシンボルである。@var{buffer}が省略または@code{nil}の場合のデフォルトはカレントバッファー。変数@code{bidi-paragraph-direction}のバッファーローカル値が非@code{nil}なら、リターンされる値はその値と等しくなるだろう。それ以外ならリターンされる値はEmacsにより動的に決定されたパラグラフの方向を反映する。@code{bidi-display-reordering}の値が@code{nil}のバッファー、同様にユニバイトバッファーにたいしては、この関数は常に@code{left-to-right}をリターンする。"

#. type: cindex
#: original_texis/display.texi:7580
#, no-wrap
msgid "visual-order cursor motion"
msgstr "visual-order cursor motion"

#. type: Plain text
#: original_texis/display.texi:7584
msgid "Sometimes there's a need to move point in strict visual order, either to the left or to the right of its current screen position.  Emacs provides a primitive to do that."
msgstr "バッファーのカレントのスクリーン位置にたいして、ビジュアル順にL2RかR2Lいずれかの方向に厳密なポイント移動を要す場合があります。Emacsはこれを行うためのプリミティブを提供します。"

#. type: defun
#: original_texis/display.texi:7585
#, no-wrap
msgid "move-point-visually direction"
msgstr "move-point-visually direction"

#. type: defun
#: original_texis/display.texi:7596
msgid "This function moves point of the currently selected window to the buffer position that appears immediately to the right or to the left of point on the screen.  If @var{direction} is positive, point will move one screen position to the right, otherwise it will move one screen position to the left.  Note that, depending on the surrounding bidirectional context, this could potentially move point many buffer positions away.  If invoked at the end of a screen line, the function moves point to the rightmost or leftmost screen position of the next or previous screen line, as appropriate for the value of @var{direction}."
msgstr "この関数は、カレントで選択されたウィンドウのバッファーにたいしてポイントを、スクリーン上ですぐ右か左のポイントへ移動する。@var{direction}が正ならスクリーン位置は右、それ以外ならスクリーン位置は左へ移動するだろう。周囲の双方向コンテキストに依存して、これは潜在的に多くのバッファーのポイントを移動し得ることに注意。スクリーン行終端で呼び出された場合には、この関数は@var{direction}に応じて適宜、次行か前行の右端か左端のスクリーン位置にポイントを移動する。"

#. type: defun
#: original_texis/display.texi:7598
msgid "The function returns the new buffer position as its value."
msgstr "この関数は値として新たなバッファー位置をリターンする。"

#. type: cindex
#: original_texis/display.texi:7600
#, no-wrap
msgid "layout on display, and bidirectional text"
msgstr "layout on display, and bidirectional text"

#. type: cindex
#: original_texis/display.texi:7601
#, no-wrap
msgid "jumbled display of bidirectional text"
msgstr "jumbled display of bidirectional text"

#. type: cindex
#: original_texis/display.texi:7602
#, no-wrap
msgid "concatenating bidirectional strings"
msgstr "concatenating bidirectional strings"

#. type: Plain text
#: original_texis/display.texi:7615
msgid "Bidirectional reordering can have surprising and unpleasant effects when two strings with bidirectional content are juxtaposed in a buffer, or otherwise programmatically concatenated into a string of text.  A typical problematic case is when a buffer consists of sequences of text fields separated by whitespace or punctuation characters, like Buffer Menu mode or Rmail Summary Mode.  Because the punctuation characters used as separators have @dfn{weak directionality}, they take on the directionality of surrounding text.  As result, a numeric field that follows a field with bidirectional content can be displayed @emph{to the left} of the preceding field, messing up the expected layout.  There are several ways to avoid this problem:"
msgstr "バッファー内で双方向の内容をもつ2つの文字列が並置されているときや、プログラムで1つのテキスト文字列に結合した場合には、双方向の並べ替えは以外かつ不快な効果を与える可能性があります。典型的な問題ケースはBuffer MenuモードやRmail Summaryモードのようにバッファーがスペースや区切り文字分割されたテキストのフィールドのシーケンスで構成されているときです。それはセパレーターとして使用されている区切り文字が@dfn{弱い方向性}をもち、周囲のテキストの方向を採用するためです。結果として双方向の内容のフィールドが後続する数値フィールドは、先行するフィールドヘ@emph{左方向}に表示され、期待したレイアウトを破壊してしまいます。この問題を回避するための方法がいくつかあります："

#. type: itemize
#: original_texis/display.texi:7625
msgid "Append the special character @code{U+200E}, LEFT-TO-RIGHT MARK, or @acronym{LRM}, to the end of each field that may have bidirectional content, or prepend it to the beginning of the following field.  The function @code{bidi-string-mark-left-to-right}, described below, comes in handy for this purpose.  (In a right-to-left paragraph, use @code{U+200F}, RIGHT-TO-LEFT MARK, or @acronym{RLM}, instead.)  This is one of the solutions recommended by the UBA."
msgstr "双方向の内容をもち得る各フィールド終端にスペシャル文字LEFT-TO-RIGHT MARK(略して@acronym{LRM})の@code{U+200E}を付加する。後述の関数@code{bidi-string-mark-left-to-right}はこの目的に手頃である(R2LパラグラフではかわりにRIGHT-TO-LEFT MARK、略して@acronym{RLM}の@code{U+200F}を使用する)。これはUBAにより推奨される解決策の1つ。"

#. type: itemize
#: original_texis/display.texi:7630
msgid "Include the tab character in the field separator.  The tab character plays the role of @dfn{segment separator} in bidirectional reordering, causing the text on either side to be reordered separately."
msgstr "フィールドセパレーターにタブ文字を含める。タブ文字は双方向の並べ替えにおいて@dfn{セグメントセパレーター(segment separator)}の役割を演じて、両側のテキストを個別に並べ替えさせる。"

#. type: cindex
#: original_texis/display.texi:7631
#, no-wrap
msgid "@code{space} display spec, and bidirectional text"
msgstr "@code{space} display spec, and bidirectional text"

#. type: itemize
#: original_texis/display.texi:7637
msgid "Separate fields with a @code{display} property or overlay with a property value of the form @code{(space . PROPS)} (@pxref{Specified Space}).  Emacs treats this display specification as a @dfn{paragraph separator}, and reorders the text on either side separately."
msgstr "@code{display}プロパティ、または@code{(space . PROPS)}という形式の値をもつオーバーレイ(@ref{Specified Space}を参照)でフィールドを区切る。Emacsはこのdisplay仕様を@dfn{パラグラフセパレーター(paragraph separator)}として扱い両側のテキストを個別に並べ替える。"

#. type: defun
#: original_texis/display.texi:7639
#, no-wrap
msgid "bidi-string-mark-left-to-right string"
msgstr "bidi-string-mark-left-to-right string"

#. type: defun
#: original_texis/display.texi:7652
msgid "This function returns its argument @var{string}, possibly modified, such that the result can be safely concatenated with another string, or juxtaposed with another string in a buffer, without disrupting the relative layout of this string and the next one on display.  If the string returned by this function is displayed as part of a left-to-right paragraph, it will always appear on display to the left of the text that follows it.  The function works by examining the characters of its argument, and if any of those characters could cause reordering on display, the function appends the @acronym{LRM} character to the string.  The appended @acronym{LRM} character is made invisible by giving it an @code{invisible} text property of @code{t} (@pxref{Invisible Text})."
msgstr "この関数は結果を安全に他の文字列に結合できるよう、あるいはこの文字列とスクリーン上で次行となる行に関連するレイアウトを乱すことなくバッファー内の他の文字列に並置できるよう、自身への引数@var{string}を恐らく変更してリターンする。この関数がリターンする文字列がR2Lパラグラフの一部として表示される文字列なら、それは常に後続するテキストの左に出現するだろう。この関数は自身の引数の文字を検証することにより機能して、もしそれらの文字のいずれかがディスプレイ上の並べ替えを発生し得るなら、この関数はその文字列に@acronym{LRM}文字を付加する。付加された@acronym{LRM}文字はテキストプロパティ@code{invisible}に@code{t}を与えることにより不可視にできる(@ref{Invisible Text}を参照)。"

#. type: Plain text
#: original_texis/display.texi:7662
msgid "The reordering algorithm uses the bidirectional properties of the characters stored as their @code{bidi-class} property (@pxref{Character Properties}).  Lisp programs can change these properties by calling the @code{put-char-code-property} function.  However, doing this requires a thorough understanding of the @acronym{UBA}, and is therefore not recommended.  Any changes to the bidirectional properties of a character have global effect: they affect all Emacs frames and windows."
msgstr "並べ替えアルゴリズムは@code{bidi-class}プロパティとして格納された文字の双方向プロパティを使用します(@ref{Character Properties}を参照)。Lispプログラムは@code{put-char-code-property}関数を呼び出すことにより、これらのプロパティを変更できます。しかしこれを行うには@acronym{UBA}の完全な理解が要求されるので推奨しません。ある文字の双方向プロパティにたいする任意の変更はグローバルな効果をもちます。これらはEmacsのフレームのすべてのフレームとウィンドウに影響します。"

#. type: Plain text
#: original_texis/display.texi:7667
msgid "Similarly, the @code{mirroring} property is used to display the appropriate mirrored character in the reordered text.  Lisp programs can affect the mirrored display by changing this property.  Again, any such changes affect all of Emacs display."
msgstr "同様に@code{mirroring}プロパティは並べ替えられたテキスト内の適切にミラーされた文字の表示に使用されます。Lispプログラムはこのプロパティを変更することにより、ミラーされた表示に影響を与えることができます。繰り返しますがそのような変更はEmacsのすべての表示に影響を与えます。"

#. type: cindex
#: original_texis/display.texi:7668
#, no-wrap
msgid "overriding bidirectional properties"
msgstr "overriding bidirectional properties"

#. type: cindex
#: original_texis/display.texi:7669
#, no-wrap
msgid "directional overrides"
msgstr "directional overrides"

#. type: cindex
#: original_texis/display.texi:7670
#, no-wrap
msgid "LRO"
msgstr "LRO"

#. type: cindex
#: original_texis/display.texi:7671
#, no-wrap
msgid "RLO"
msgstr "RLO"

#. type: Plain text
#: original_texis/display.texi:7683
msgid "The bidirectional properties of characters can be overridden by inserting into the text special directional control characters, LEFT-TO-RIGHT OVERRIDE (@acronym{LRO}) and RIGHT-TO-LEFT OVERRIDE (@acronym{RLO}).  Any characters between a @acronym{RLO} and the following newline or POP DIRECTIONAL FORMATTING (@acronym{PDF})  control character, whichever comes first, will be displayed as if they were strong right-to-left characters, i.e.@: they will be reversed on display.  Similarly, any characters between @acronym{LRO} and @acronym{PDF} or newline will display as if they were strong left-to-right, and will @emph{not} be reversed even if they are strong right-to-left characters."
msgstr "スペシャル双方向制御文字LEFT-TO-RIGHT OVERRIDE (@acronym{LRO})とRIGHT-TO-LEFT OVERRIDE (@acronym{RLO})をテキストに挿入することにより、文字の双方向プロパティをオーバーライドできます。@acronym{RLO}と改行かPOP DIRECTIONAL FORMATTING (@acronym{PDF})のいずれか先にある文字間のすべての文字は、それらが強いR2Lであるかのように表示されます(反転して表示される)。同様に@acronym{LRO}と@acronym{PDF}か改行の間のすべての文字は、それらがたとえ強いR2Lであっても強いL2Rであるかのように反転して表示@emph{されません}。"

#. type: cindex
#: original_texis/display.texi:7684
#, no-wrap
msgid "phishing using directional overrides"
msgstr "phishing using directional overrides"

#. type: cindex
#: original_texis/display.texi:7685
#, no-wrap
msgid "malicious use of directional overrides"
msgstr "malicious use of directional overrides"

#. type: Plain text
#: original_texis/display.texi:7694
msgid "These overrides are useful when you want to make some text unaffected by the reordering algorithm, and instead directly control the display order.  But they can also be used for malicious purposes, known as @dfn{phishing}.  Specifically, a URL on a Web page or a link in an email message can be manipulated to make its visual appearance unrecognizable, or similar to some popular benign location, while the real location, interpreted by a browser in the logical order, is very different."
msgstr "これらのオーバーライドは、あるテキストを並び替えアルゴリズムの影響を受けずに、直接表示順を制御したいときに有用です。しかしこれらは@dfn{フィッシング(phishing)}として知られるような悪意のある用途にも使用されます。特にウェブ上のURLやemailメッセージ内のリンクは真のリンク先はまったく異なるのに、ブラウザによる論理順で解釈される外観を認識不能に操作したり、何らかの著名で安全なリンク先に偽装される可能性があります。"

#. type: Plain text
#: original_texis/display.texi:7699
msgid "Emacs provides a primitive that applications can use to detect instances of text whose bidirectional properties were overridden so as to make a left-to-right character display as if it were a right-to-left character, or vise versa."
msgstr "Emacsはアプリケーションが使用するために、双方向プロパティでL2R文字をR2L、またはその逆にするようにオーバーライドされたテキストのインスタンスを検知するプリミティブを提供します。"

#. type: defun
#: original_texis/display.texi:7700
#, no-wrap
msgid "bidi-find-overridden-directionality from to &optional object"
msgstr "bidi-find-overridden-directionality from to &optional object"

#. type: defun
#: original_texis/display.texi:7708
msgid "This function looks at the text of the specified @var{object} between positions @var{from} (inclusive) and @var{to} (exclusive), and returns the first position where it finds a strong left-to-right character whose directional properties were forced to display the character as right-to-left, or for a strong right-to-left character that was forced to display as left-to-right.  If it finds no such characters in the specified region of text, it returns @code{nil}."
msgstr "この関数は@var{object}で指定されたテキストの@var{from} (含む)と@var{to} (含まず)の間のテキストを調べてR2Lの文字であるかのように表示が強制されている双方向プロパティの強いL2R文字、L2Rの文字であるかのように表示が強制されている強いR2L文字の最初の位置をリターンする。指定されたテキストリージョンでそのような文字が見つからなければ@code{nil}をリターンする。"

#. type: defun
#: original_texis/display.texi:7720
msgid "The optional argument @var{object} specifies which text to search, and defaults to the current buffer.  If @var{object} is non-@code{nil}, it can be some other buffer, or it can be a string or a window.  If it is a string, the function searches that string.  If it is a window, the function searches the buffer displayed in that window.  If a buffer whose text you want to examine is displayed in some window, we recommend to specify it by that window, rather than pass the buffer to the function.  This is because telling the function about the window allows it to correctly account for window-specific overlays, which might change the result of the function if some text in the buffer is covered by overlays."
msgstr "オプション引数@var{object}は検索するテキストを指定して、デフォルトはカレントバッファー。@var{object}が非@code{nil}なら別のバッファーや文字列、またはウィンドウかもしれない。文字列ならこの関数はその文字列を検索する。ウィンドウならこの関数はそのウィンドウが表示するバッファーを検索する。検査したいテキストをもつバッファーが何らかのウィンドウに表示されていれば、この関数にバッファーを渡すのではなくそのウィンドウの指定を推奨する。これはウィンドウ固有のオーバーレイにカバーされたバッファーのテキストでは関数の結果が変化し得るが、関数にウィンドウ固有のオーバーレイを正しく考慮するように指示するからである。"

#. type: cindex
#: original_texis/display.texi:7722
#, no-wrap
msgid "copying bidirectional text, preserve visual order"
msgstr "copying bidirectional text, preserve visual order"

#. type: cindex
#: original_texis/display.texi:7723
#, no-wrap
msgid "visual order, preserve when copying bidirectional text"
msgstr "visual order, preserve when copying bidirectional text"

#. type: Plain text
#: original_texis/display.texi:7731
msgid "When text that includes mixed right-to-left and left-to-right characters and bidirectional controls is copied into a different location, it can change its visual appearance, and also can affect the visual appearance of the surrounding text at destination.  This is because reordering of bidirectional text specified by the @acronym{UBA} has non-trivial context-dependent effects both on the copied text and on the text at copy destination that will surround it."
msgstr "テキストがR2L文字とL2R文字の混交を含み、かつ双方向制御が別の場所にコピーされる際には、その視覚的外見は変化するかもしれず、コピー先の周辺テキストの視覚的外見にも影響するかもしれません。これは@acronym{UBA}で指定される双方向テキストの並び替えでは、コピーされるテキストとそれを取り囲む周辺テキストの両方が非自明かつコンテキスト依存の効果をもつからです。"

#. type: Plain text
#: original_texis/display.texi:7736
msgid "Sometimes, a Lisp program may need to preserve the exact visual appearance of the copied text at destination, and of the text that surrounds the copy.  Lisp programs can use the following function to achieve that effect."
msgstr "コピーされるテキストとコピー先周辺のテキストの視覚的外見をLispプロパティが保証することが必要なときがあるかもしれません。この効果を達成するためにLispプログラムは以下の関数を使用できます。"

#. type: defun
#: original_texis/display.texi:7737
#, no-wrap
msgid "buffer-substring-with-bidi-context start end &optional no-properties"
msgstr "buffer-substring-with-bidi-context start end &optional no-properties"

#. type: defun
#: original_texis/display.texi:7744
msgid "This function works similar to @code{buffer-substring} (@pxref{Buffer Contents}), but it prepends and appends to the copied text bidi directional control characters necessary to preserve the visual appearance of the text when it is inserted at another place.  Optional argument @var{no-properties}, if non-@code{nil}, means remove the text properties from the copy of the text."
msgstr "この関数は@code{buffer-substring} (@ref{Buffer Contents}を参照)と同様に機能するが、テキストが別の場所にコピーされる際に視覚的外見を保つために必要な双方向制御文字を前や後に付加する点が異なる。オプション引数@var{no-properties}が非@code{nil}なら、それはテキストのコピーからテキストプロパティを削除することを意味する。"
