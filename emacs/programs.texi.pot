# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2024-06-26 23:45+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: node
#: original_texis/programs.texi:6
#, no-wrap
msgid "Programs"
msgstr ""

#. type: chapter
#: original_texis/programs.texi:7
#, no-wrap
msgid "Editing Programs"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:8
#, no-wrap
msgid "Lisp editing"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:9
#, no-wrap
msgid "C editing"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:10
#, no-wrap
msgid "program editing"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:14
msgid ""
"This chapter describes Emacs features for facilitating editing programs.  "
"Some of the things these features can do are:"
msgstr ""

#. type: itemize
#: original_texis/programs.texi:18
msgid "Find or move over top-level definitions (@pxref{Defuns})."
msgstr ""

#. type: itemize
#: original_texis/programs.texi:21
msgid ""
"Apply the usual indentation conventions of the language (@pxref{Program "
"Indent})."
msgstr ""

#. type: itemize
#: original_texis/programs.texi:23
msgid "Balance parentheses (@pxref{Parentheses})."
msgstr ""

#. type: itemize
#: original_texis/programs.texi:25
msgid "Insert, kill or align comments (@pxref{Comments})."
msgstr ""

#. type: itemize
#: original_texis/programs.texi:27
msgid "Highlight program syntax (@pxref{Font Lock})."
msgstr ""

#. type: node
#: original_texis/programs.texi:45 original_texis/programs.texi:50
#, no-wrap
msgid "Program Modes"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:45
msgid "Major modes for editing programs."
msgstr ""

#. type: node
#: original_texis/programs.texi:45 original_texis/programs.texi:155
#, no-wrap
msgid "Defuns"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:45
msgid "Commands to operate on major top-level parts of a program."
msgstr ""

#. type: node
#: original_texis/programs.texi:45 original_texis/programs.texi:352
#, no-wrap
msgid "Program Indent"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:45
msgid "Adjusting indentation to show the nesting."
msgstr ""

#. type: node
#: original_texis/programs.texi:45 original_texis/programs.texi:659
#, no-wrap
msgid "Parentheses"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:45
msgid "Commands that operate on parentheses."
msgstr ""

#. type: node
#: original_texis/programs.texi:45 original_texis/programs.texi:982
#, no-wrap
msgid "Comments"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:45 original_texis/programs.texi:1012
msgid "Inserting, killing, and aligning comments."
msgstr ""

#. type: node
#: original_texis/programs.texi:45 original_texis/programs.texi:1234
#, no-wrap
msgid "Documentation"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:45
msgid "Getting documentation of functions you plan to call."
msgstr ""

#. type: node
#: original_texis/programs.texi:45 original_texis/programs.texi:1471
#, no-wrap
msgid "Hideshow"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:45
msgid "Displaying blocks selectively."
msgstr ""

#. type: node
#: original_texis/programs.texi:45 original_texis/programs.texi:1547
#, no-wrap
msgid "Symbol Completion"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:45
msgid "Completion on symbol names of your program or language."
msgstr ""

#. type: section
#: original_texis/programs.texi:45 original_texis/programs.texi:1606
#: original_texis/programs.texi:1607
#, no-wrap
msgid "MixedCase Words"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:45
msgid "Dealing with identifiersLikeThis."
msgstr ""

#. type: section
#: original_texis/programs.texi:45 original_texis/programs.texi:1637
#: original_texis/programs.texi:1638
#, no-wrap
msgid "Semantic"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:45
msgid "Suite of editing tools based on source code parsing."
msgstr ""

#. type: node
#: original_texis/programs.texi:45 original_texis/programs.texi:1705
#, no-wrap
msgid "Misc for Programs"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:45
msgid "Other Emacs features useful for editing programs."
msgstr ""

#. type: node
#: original_texis/programs.texi:45 original_texis/programs.texi:1773
#, no-wrap
msgid "C Modes"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:45
msgid "Special commands of C, C++, Objective-C, Java, IDL, Pike and AWK modes."
msgstr ""

#. type: section
#: original_texis/programs.texi:45 original_texis/programs.texi:2096
#: original_texis/programs.texi:2097
#, no-wrap
msgid "Asm Mode"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:45
msgid "Asm mode and its special features."
msgstr ""

#. type: ifnottex
#: original_texis/programs.texi:47
msgid "* Fortran:: Fortran mode and its special features."
msgstr ""

#. type: section
#: original_texis/programs.texi:51
#, no-wrap
msgid "Major Modes for Programming Languages"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:52
#, no-wrap
msgid "modes for programming languages"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:62
msgid ""
"Emacs has specialized major modes (@pxref{Major Modes}) for many programming "
"languages.  A programming language mode typically specifies the syntax of "
"expressions, the customary rules for indentation, how to do syntax "
"highlighting for the language, and how to find the beginning or end of a "
"function definition.  It often has features for compiling and debugging "
"programs as well.  The major mode for each language is named after the "
"language; for instance, the major mode for the C programming language is "
"@code{c-mode}."
msgstr ""

#. type: cindex
#: original_texis/programs.texi:63
#, no-wrap
msgid "Perl mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:64
#, no-wrap
msgid "Icon mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:65
#, no-wrap
msgid "Makefile mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:66
#, no-wrap
msgid "Tcl mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:67
#, no-wrap
msgid "CPerl mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:68
#, no-wrap
msgid "DSSSL mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:69
#, no-wrap
msgid "Octave mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:70
#, no-wrap
msgid "Metafont mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:71
#, no-wrap
msgid "Modula2 mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:72
#, no-wrap
msgid "Prolog mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:73
#, no-wrap
msgid "Python mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:74
#, no-wrap
msgid "Ruby mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:75
#, no-wrap
msgid "Simula mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:76
#, no-wrap
msgid "Verilog mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:77
#, no-wrap
msgid "VHDL mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:78
#, no-wrap
msgid "M4 mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:79
#, no-wrap
msgid "Shell-script mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:80
#, no-wrap
msgid "OPascal mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:81
#, no-wrap
msgid "PostScript mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:82
#, no-wrap
msgid "Conf mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:83
#, no-wrap
msgid "DNS mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:84
#, no-wrap
msgid "Javascript mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:85
#, no-wrap
msgid "Awk mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:86
#, no-wrap
msgid "C# mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:87
#, no-wrap
msgid "IDLWAVE mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:88
#, no-wrap
msgid "JSON mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:89
#, no-wrap
msgid "SQL mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:90
#, no-wrap
msgid "TypeScript mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:91
#, no-wrap
msgid "CSS mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:92
#, no-wrap
msgid "Dockerfile mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:93
#, no-wrap
msgid "CMake mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:94
#, no-wrap
msgid "TOML mode"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:105
msgid ""
"Emacs has programming language modes for Lisp, Scheme, the Scheme-based "
"DSSSL expression language, Ada, ASM, AWK, C, C++, C#, Fortran, Icon, IDL "
"(CORBA), IDLWAVE, Java, Javascript, M4, Makefiles, Metafont (@TeX{}'s "
"companion for font creation), Modula2, Object Pascal, Objective-C, Octave, "
"Pascal, Perl, Pike, PostScript, Prolog, Python, Ruby, Simula, SQL, Tcl, "
"TypeScript, Verilog, and VHDL@.  An alternative mode for Perl is called "
"CPerl mode.  Modes are also available for the scripting languages of the "
"common GNU and Unix shells, and MS-DOS/MS-Windows @samp{BAT} files, JSON, "
"DNS master files, CSS (Cascading Style Sheets), Dockerfiles, CMake files, "
"and various sorts of configuration files."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:110
msgid ""
"Ideally, Emacs should have a major mode for each programming language that "
"you might want to edit.  If it doesn't have a mode for your favorite "
"language, the mode might be implemented in a package not distributed with "
"Emacs (@pxref{Packages}); or you can contribute one."
msgstr ""

#. type: cindex
#: original_texis/programs.texi:111
#, no-wrap
msgid "tree-sitter library, supported major modes"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:117
msgid ""
"If Emacs has been compiled with the @samp{tree-sitter} library, it offers "
"several optional editing modes based on that library, which utilize the "
"incremental parsing capabilities provided by @samp{tree-sitter}.  These "
"modes have @samp{-ts-} in their names; for example @code{c-ts-mode}, "
"@code{python-ts-mode}, etc."
msgstr ""

#. type: kindex
#: original_texis/programs.texi:118
#, no-wrap
msgid "DEL @r{(programming modes)}"
msgstr ""

#. type: findex
#: original_texis/programs.texi:119
#, no-wrap
msgid "backward-delete-char-untabify"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:129
msgid ""
"In most programming languages, indentation should vary from line to line to "
"illustrate the structure of the program.  Therefore, in most programming "
"language modes, typing @kbd{@key{TAB}} updates the indentation of the "
"current line (@pxref{Program Indent}).  Furthermore, @kbd{@key{DEL}} is "
"usually bound to @code{backward-delete-char-untabify}, which deletes "
"backward treating each tab as if it were the equivalent number of spaces, so "
"that you can delete one column of indentation without worrying whether the "
"whitespace consists of spaces or tabs."
msgstr ""

#. type: cindex
#: original_texis/programs.texi:130
#, no-wrap
msgid "mode hook, and major modes"
msgstr ""

#. type: vindex
#: original_texis/programs.texi:131
#, no-wrap
msgid "c-mode-hook"
msgstr ""

#. type: vindex
#: original_texis/programs.texi:132
#, no-wrap
msgid "lisp-mode-hook"
msgstr ""

#. type: vindex
#: original_texis/programs.texi:133
#, no-wrap
msgid "emacs-lisp-mode-hook"
msgstr ""

#. type: vindex
#: original_texis/programs.texi:134
#, no-wrap
msgid "lisp-interaction-mode-hook"
msgstr ""

#. type: vindex
#: original_texis/programs.texi:135
#, no-wrap
msgid "scheme-mode-hook"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:141
msgid ""
"Entering a programming language mode runs the custom Lisp functions "
"specified in the hook variable @code{prog-mode-hook}, followed by those "
"specified in the mode's own mode hook (@pxref{Major Modes}).  For instance, "
"entering C mode runs the hooks @code{prog-mode-hook} and "
"@code{c-mode-hook}.  @xref{Hooks}, for information about hooks."
msgstr ""

#. type: ifnottex
#: original_texis/programs.texi:147
msgid ""
"Separate manuals are available for the modes for Ada (@pxref{Top,, Ada Mode, "
"ada-mode, Ada Mode}), C/C++/Objective C/Java/Corba IDL/Pike/AWK (@pxref{Top, "
", CC Mode, ccmode, CC Mode}), Octave, VHDL, and IDLWAVE (@pxref{Top,, "
"IDLWAVE, idlwave, IDLWAVE User Manual})."
msgstr ""

#. type: iftex
#: original_texis/programs.texi:153
msgid ""
"The Emacs distribution contains Info manuals for the major modes for Ada, "
"C/C++/Objective C/Java/Corba IDL/Pike/AWK, Octave, VHDL, and IDLWAVE@.  For "
"Fortran mode, @pxref{Fortran,,, emacs-xtra, Specialized Emacs Features}."
msgstr ""

#. type: section
#: original_texis/programs.texi:156
#, no-wrap
msgid "Top-Level Definitions, or Defuns"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:161
msgid ""
"In Emacs, a major definition at the top level in the buffer, such as a "
"function, is called a @dfn{defun}.  The name comes from Lisp, but in Emacs "
"we use it for all languages."
msgstr ""

#. type: node
#: original_texis/programs.texi:168 original_texis/programs.texi:170
#, no-wrap
msgid "Left Margin Paren"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:168
msgid ""
"An open-paren or similar opening delimiter starts a defun if it is at the "
"left margin."
msgstr ""

#. type: subsection
#: original_texis/programs.texi:168 original_texis/programs.texi:192
#: original_texis/programs.texi:193
#, no-wrap
msgid "Moving by Defuns"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:168
msgid "Commands to move over or mark a major definition."
msgstr ""

#. type: subsection
#: original_texis/programs.texi:168 original_texis/programs.texi:268
#: original_texis/programs.texi:269
#, no-wrap
msgid "Imenu"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:168
msgid "Making buffer indexes as menus."
msgstr ""

#. type: node
#: original_texis/programs.texi:168 original_texis/programs.texi:333
#, no-wrap
msgid "Which Function"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:168
msgid "Which Function mode shows which function you are in."
msgstr ""

#. type: subsection
#: original_texis/programs.texi:171
#, no-wrap
msgid "Left Margin Convention"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:173
#, no-wrap
msgid "open-parenthesis in leftmost column"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:174
#, no-wrap
msgid "( in leftmost column"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:180
msgid ""
"Many programming-language modes have traditionally assumed that any opening "
"parenthesis or brace found at the left margin is the start of a top-level "
"definition, or defun.  So, by default, commands which seek the beginning of "
"a defun accept such a delimiter as signifying that position."
msgstr ""

#. type: vindex
#: original_texis/programs.texi:181
#, no-wrap
msgid "open-paren-in-column-0-is-defun-start"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:191
msgid ""
"If you want to override this convention, you can do so by setting the user "
"option @code{open-paren-in-column-0-is-defun-start} to @code{nil}.  If this "
"option is set to @code{t} (the default), commands seeking the start of a "
"defun will stop at opening parentheses or braces at column zero which aren't "
"in a comment or string.  When it is @code{nil}, defuns are found by "
"searching for parens or braces at the outermost level.  Since low-level "
"Emacs routines no longer depend on this convention, you usually won't need "
"to change @code{open-paren-in-column-0-is-defun-start} from its default."
msgstr ""

#. type: cindex
#: original_texis/programs.texi:194
#, no-wrap
msgid "defuns"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:198
msgid ""
"These commands move point or set up the region based on top-level major "
"definitions, also called @dfn{defuns}."
msgstr ""

#. type: item
#: original_texis/programs.texi:200 original_texis/programs.texi:211
#: original_texis/programs.texi:1817
#, no-wrap
msgid "C-M-a"
msgstr ""

#. type: table
#: original_texis/programs.texi:203
msgid "Move to beginning of current or preceding defun (@code{beginning-of-defun})."
msgstr ""

#. type: itemx
#: original_texis/programs.texi:203 original_texis/programs.texi:212
#: original_texis/programs.texi:1818
#, no-wrap
msgid "C-M-e"
msgstr ""

#. type: table
#: original_texis/programs.texi:205
msgid "Move to end of current or following defun (@code{end-of-defun})."
msgstr ""

#. type: item
#: original_texis/programs.texi:205 original_texis/programs.texi:213
#: original_texis/programs.texi:1992
#, no-wrap
msgid "C-M-h"
msgstr ""

#. type: table
#: original_texis/programs.texi:207
msgid "Put region around whole current or following defun (@code{mark-defun})."
msgstr ""

#. type: cindex
#: original_texis/programs.texi:209
#, no-wrap
msgid "move to beginning or end of function"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:210
#, no-wrap
msgid "function, move to beginning or end"
msgstr ""

#. type: findex
#: original_texis/programs.texi:214
#, no-wrap
msgid "beginning-of-defun"
msgstr ""

#. type: findex
#: original_texis/programs.texi:215
#, no-wrap
msgid "end-of-defun"
msgstr ""

#. type: findex
#: original_texis/programs.texi:216
#, no-wrap
msgid "mark-defun"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:222
msgid ""
"The commands to move to the beginning and end of the current defun are "
"@kbd{C-M-a} (@code{beginning-of-defun}) and @kbd{C-M-e} "
"(@code{end-of-defun}).  If you repeat one of these commands, or use a "
"positive numeric argument, each repetition moves to the next defun in the "
"direction of motion."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:231
msgid ""
"@kbd{C-M-a} with a negative argument @minus{}@var{n} moves forward @var{n} "
"times to the next beginning of a defun.  This is not exactly the same place "
"that @kbd{C-M-e} with argument @var{n} would move to; the end of this defun "
"is not usually exactly the same place as the beginning of the following "
"defun.  (Whitespace, comments, and perhaps declarations can separate them.)  "
"Likewise, @kbd{C-M-e} with a negative argument moves back to an end of a "
"defun, which is not quite the same as @kbd{C-M-a} with a positive argument."
msgstr ""

#. type: kindex
#: original_texis/programs.texi:232
#, no-wrap
msgid "C-M-h @r{(C mode)}"
msgstr ""

#. type: findex
#: original_texis/programs.texi:233
#, no-wrap
msgid "c-mark-function"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:247
msgid ""
"To operate on the current defun, use @kbd{C-M-h} (@code{mark-defun}), which "
"sets the mark at the end of the current defun and puts point at its "
"beginning.  @xref{Marking Objects}.  This is the easiest way to get ready to "
"kill the defun in order to move it to a different place in the file.  If the "
"defun is directly preceded by comments (with no intervening blank lines), "
"they are marked, too.  If you use the command while point is between defuns, "
"it uses the following defun.  If you use the command while the mark is "
"already active, it extends the end of the region to include one more defun.  "
"With a prefix argument, it marks that many defuns or extends the region by "
"the appropriate number of defuns.  With negative prefix argument it marks "
"defuns in the opposite direction and also changes the direction of selecting "
"for subsequent uses of @code{mark-defun}."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:256
msgid ""
"In C mode, @kbd{C-M-h} runs the function @code{c-mark-function}, which is "
"almost the same as @code{mark-defun}; the difference is that it backs up "
"over the argument declarations, function name and returned data type so that "
"the entire C function is inside the region.  This is an example of how major "
"modes adjust the standard key bindings so that they do their standard jobs "
"in a way better fitting a particular language.  Other major modes may "
"replace any or all of these key bindings for that purpose."
msgstr ""

#. type: cindex
#: original_texis/programs.texi:257
#, no-wrap
msgid "nested defuns"
msgstr ""

#. type: vindex
#: original_texis/programs.texi:258
#, no-wrap
msgid "treesit-defun-tactic"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:267
msgid ""
"Some programming languages supported @dfn{nested defuns}, whereby a defun "
"(such as a function or a method or a class) can be defined inside (i.e., as "
"part of the body) of another defun.  The commands described above by default "
"find the beginning and the end of the @emph{innermost} defun around point.  "
"Major modes based on the tree-sitter library provide control of this "
"behavior: if the variable @code{treesit-defun-tactic} is set to the value "
"@code{top-level}, the defun commands will find the @emph{outermost} defuns "
"instead."
msgstr ""

#. type: cindex
#: original_texis/programs.texi:270
#, no-wrap
msgid "index of buffer definitions"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:271
#, no-wrap
msgid "buffer definitions index"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:278
msgid ""
"The Imenu facility offers a way to find the major definitions in a file by "
"name.  It is also useful in text formatter major modes, where it treats each "
"chapter, section, etc., as a definition.  (@xref{Xref}, for a more powerful "
"feature that handles multiple files together.)"
msgstr ""

#. type: findex
#: original_texis/programs.texi:279
#, no-wrap
msgid "imenu"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:284
msgid ""
"If you type @kbd{M-g i} (@code{imenu}), it reads the name of a definition "
"using the minibuffer, then moves point to that definition.  You can use "
"completion to specify the name; the command always displays the whole list "
"of valid names."
msgstr ""

#. type: findex
#: original_texis/programs.texi:285
#, no-wrap
msgid "imenu-add-menubar-index"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:295
msgid ""
"Alternatively, you can bind the command @code{imenu} to a mouse click.  Then "
"it displays mouse menus for you to select a definition name.  You can also "
"add the buffer's index to the menu bar by calling "
"@code{imenu-add-menubar-index}.  If you want to have this menu bar item "
"available for all buffers in a certain major mode, you can do this by adding "
"@code{imenu-add-menubar-index} to its mode hook.  But if you have done that, "
"you will have to wait a little while each time you visit a file in that "
"mode, while Emacs finds all the definitions in that buffer."
msgstr ""

#. type: vindex
#: original_texis/programs.texi:296
#, no-wrap
msgid "imenu-auto-rescan"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:303
msgid ""
"When you change the contents of a buffer, if you add or delete definitions, "
"you can update the buffer's index based on the new contents by invoking the "
"@samp{*Rescan*} item in the menu.  Rescanning happens automatically if you "
"set @code{imenu-auto-rescan} to a non-@code{nil} value.  There is no need to "
"rescan because of small changes in the text."
msgstr ""

#. type: vindex
#: original_texis/programs.texi:304
#, no-wrap
msgid "imenu-auto-rescan-maxout"
msgstr ""

#. type: vindex
#: original_texis/programs.texi:305
#, no-wrap
msgid "imenu-max-index-time"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:309
msgid ""
"@code{imenu-auto-rescan} will be disabled in buffers that are larger than "
"@code{imenu-auto-rescan-maxout} in bytes, and scanning is stopped if it "
"takes more than @code{imenu-max-index-time} seconds."
msgstr ""

#. type: vindex
#: original_texis/programs.texi:310
#, no-wrap
msgid "imenu-sort-function"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:316
msgid ""
"You can customize the way the menus are sorted by setting the variable "
"@code{imenu-sort-function}.  By default, names are ordered as they occur in "
"the buffer; if you want alphabetic sorting, use the symbol "
"@code{imenu--sort-by-name} as the value.  You can also define your own "
"comparison function by writing Lisp code."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:323
msgid ""
"If Eglot is activated for the current buffer's project (@pxref{Projects}) "
"and the current buffer's major mode, Eglot provides its own facility for "
"producing the buffer's index based on the analysis of the program source by "
"the language-server which manages the current buffer.  @xref{Eglot "
"Features,,, eglot, Eglot: The Emacs LSP Client}."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:325
msgid "Imenu provides the information to guide Which Function mode"
msgstr ""

#. type: ifnottex
#: original_texis/programs.texi:327
msgid "(@pxref{Which Function})."
msgstr ""

#. type: iftex
#: original_texis/programs.texi:330
msgid "(see below)."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:332
msgid "The Speedbar can also use it (@pxref{Speedbar})."
msgstr ""

#. type: subsection
#: original_texis/programs.texi:334
#, no-wrap
msgid "Which Function Mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:335
#, no-wrap
msgid "current function name in mode line"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:340
msgid ""
"Which Function mode is a global minor mode (@pxref{Minor Modes})  which "
"displays the current function name in the mode line, updating it as you move "
"around in a buffer."
msgstr ""

#. type: findex
#: original_texis/programs.texi:341
#, no-wrap
msgid "which-function-mode"
msgstr ""

#. type: vindex
#: original_texis/programs.texi:342
#, no-wrap
msgid "which-func-modes"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:351
msgid ""
"To either enable or disable Which Function mode, use the command @kbd{M-x "
"which-function-mode}.  Which Function mode is a global minor mode.  By "
"default, it takes effect in all major modes that know how to support it "
"(i.e., all the major modes that support Imenu).  You can restrict it to a "
"specific list of major modes by changing the value of the variable "
"@code{which-func-modes} from @code{t} (which means to support all available "
"major modes) to a list of major mode names."
msgstr ""

#. type: section
#: original_texis/programs.texi:353
#, no-wrap
msgid "Indentation for Programs"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:354
#, no-wrap
msgid "indentation for programs"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:360
msgid ""
"The best way to keep a program properly indented is to use Emacs to reindent "
"it as you change it.  Emacs has commands to indent either a single line, a "
"specified number of lines, or all of the lines inside a single parenthetical "
"grouping."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:364
msgid ""
"@xref{Indentation}, for general information about indentation.  This section "
"describes indentation features specific to programming language modes."
msgstr ""

#. type: node
#: original_texis/programs.texi:371 original_texis/programs.texi:378
#, no-wrap
msgid "Basic Indent"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:371
msgid "Indenting a single line."
msgstr ""

#. type: node
#: original_texis/programs.texi:371 original_texis/programs.texi:418
#, no-wrap
msgid "Multi-line Indent"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:371
msgid "Commands to reindent many lines at once."
msgstr ""

#. type: node
#: original_texis/programs.texi:371 original_texis/programs.texi:473
#, no-wrap
msgid "Lisp Indent"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:371
msgid "Specifying how each Lisp function should be indented."
msgstr ""

#. type: node
#: original_texis/programs.texi:371 original_texis/programs.texi:525
#, no-wrap
msgid "C Indent"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:371
msgid "Extra features for indenting C and related modes."
msgstr ""

#. type: node
#: original_texis/programs.texi:371 original_texis/programs.texi:576
#, no-wrap
msgid "Custom C Indent"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:371
msgid "Controlling indentation style for C and related modes."
msgstr ""

#. type: cindex
#: original_texis/programs.texi:373
#, no-wrap
msgid "pretty-printer"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:377
msgid ""
"Emacs also provides a Lisp pretty-printer in the @code{pp} package, which "
"reformats Lisp objects with nice-looking indentation.  @xref{Output "
"Functions, pp,, elisp, The Emacs Lisp Reference Manual}."
msgstr ""

#. type: subsection
#: original_texis/programs.texi:379
#, no-wrap
msgid "Basic Program Indentation Commands"
msgstr ""

#. type: key{#1}
#: original_texis/programs.texi:382 original_texis/programs.texi:549
#: original_texis/programs.texi:2105
#, no-wrap
msgid "TAB"
msgstr ""

#. type: table
#: original_texis/programs.texi:384
msgid "Adjust indentation of current line (@code{indent-for-tab-command})."
msgstr ""

#. type: key{#1}
#: original_texis/programs.texi:384
#, no-wrap
msgid "RET"
msgstr ""

#. type: table
#: original_texis/programs.texi:387
msgid ""
"Insert a newline, then adjust indentation of following line "
"(@code{newline})."
msgstr ""

#. type: kindex
#: original_texis/programs.texi:389
#, no-wrap
msgid "TAB @r{(programming modes)}"
msgstr ""

#. type: findex
#: original_texis/programs.texi:390
#, no-wrap
msgid "indent-line-function"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:398
msgid ""
"The basic indentation command is @kbd{@key{TAB}} "
"(@code{indent-for-tab-command}), which was documented in @ref{Indentation}.  "
"In programming language modes, @kbd{@key{TAB}} indents the current line, "
"based on the indentation and syntactic content of the preceding lines; if "
"the region is active, @kbd{@key{TAB}} indents each line within the region, "
"not just the current line."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:403
msgid ""
"The command @kbd{@key{RET}} (@code{newline}), which was documented in "
"@ref{Inserting Text}, does the same as @kbd{C-j} followed by "
"@kbd{@key{TAB}}: it inserts a new line, then adjusts the line's indentation."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:409
msgid ""
"When indenting a line that starts within a parenthetical grouping, Emacs "
"usually places the start of the line under the preceding line within the "
"group, or under the text after the parenthesis.  If you manually give one of "
"these lines a nonstandard indentation (e.g., for aesthetic purposes), the "
"lines below will follow it."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:417
msgid ""
"The indentation commands for most programming language modes assume that an "
"open-parenthesis, open-brace or other opening delimiter at the left margin "
"is the start of a function.  If the code you are editing violates this "
"assumption---even if the delimiters occur in strings or comments---you must "
"set @code{open-paren-in-column-0-is-defun-start} to @code{nil} for "
"indentation to work properly.  @xref{Left Margin Paren}."
msgstr ""

#. type: subsection
#: original_texis/programs.texi:419
#, no-wrap
msgid "Indenting Several Lines"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:427
msgid ""
"Sometimes, you may want to reindent several lines of code at a time.  One "
"way to do this is to use the mark; when the mark is active and the region is "
"non-empty, @kbd{@key{TAB}} indents every line in the region.  Alternatively, "
"the command @kbd{C-M-\\} (@code{indent-region}) indents every line in the "
"region, whether or not the mark is active (@pxref{Indentation Commands})."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:430
msgid ""
"In addition, Emacs provides the following commands for indenting large "
"chunks of code:"
msgstr ""

#. type: item
#: original_texis/programs.texi:432 original_texis/programs.texi:442
#: original_texis/programs.texi:539
#, no-wrap
msgid "C-M-q"
msgstr ""

#. type: table
#: original_texis/programs.texi:434
msgid "Reindent all the lines within one parenthetical grouping."
msgstr ""

#. type: item
#: original_texis/programs.texi:434
#, no-wrap
msgid "C-u @key{TAB}"
msgstr ""

#. type: table
#: original_texis/programs.texi:437
msgid ""
"Shift an entire parenthetical grouping rigidly sideways so that its first "
"line is properly indented."
msgstr ""

#. type: item
#: original_texis/programs.texi:437
#, no-wrap
msgid "M-x indent-code-rigidly"
msgstr ""

#. type: table
#: original_texis/programs.texi:440
msgid ""
"Shift all the lines in the region rigidly sideways, but do not alter lines "
"that start inside comments and strings."
msgstr ""

#. type: findex
#: original_texis/programs.texi:443
#, no-wrap
msgid "indent-pp-sexp"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:453
msgid ""
"To reindent the contents of a single parenthetical grouping, position point "
"before the beginning of the grouping and type @kbd{C-M-q}.  This changes the "
"relative indentation within the grouping, without affecting its overall "
"indentation (i.e., the indentation of the line where the grouping starts).  "
"The function that @kbd{C-M-q} runs depends on the major mode; it is "
"@code{indent-pp-sexp} in Lisp mode, @code{c-indent-exp} in C mode, etc.  To "
"correct the overall indentation as well, type @kbd{@key{TAB}} first."
msgstr ""

#. type: kindex
#: original_texis/programs.texi:454
#, no-wrap
msgid "C-u TAB"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:464
msgid ""
"If you like the relative indentation within a grouping but not the "
"indentation of its first line, move point to that first line and type "
"@kbd{C-u @key{TAB}}.  In Lisp, C, and some other major modes, "
"@kbd{@key{TAB}} with a numeric argument reindents the current line as usual, "
"then reindents by the same amount all the lines in the parenthetical "
"grouping starting on the current line.  It is clever, though, and does not "
"alter lines that start inside strings.  Neither does it alter C preprocessor "
"lines when in C mode, but it does reindent any continuation lines that may "
"be attached to them."
msgstr ""

#. type: findex
#: original_texis/programs.texi:465
#, no-wrap
msgid "indent-code-rigidly"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:472
msgid ""
"The command @kbd{M-x indent-code-rigidly} rigidly shifts all the lines in "
"the region sideways, like @code{indent-rigidly} does (@pxref{Indentation "
"Commands}).  It doesn't alter the indentation of lines that start inside a "
"string, unless the region also starts inside that string.  The prefix arg "
"specifies the number of columns to indent."
msgstr ""

#. type: subsection
#: original_texis/programs.texi:474
#, no-wrap
msgid "Customizing Lisp Indentation"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:475
#, no-wrap
msgid "customizing Lisp indentation"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:481
msgid ""
"The indentation pattern for a Lisp expression can depend on the function "
"called by the expression.  For each Lisp function, you can choose among "
"several predefined patterns of indentation, or define an arbitrary one with "
"a Lisp program."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:487
msgid ""
"The standard pattern of indentation is as follows: the second line of the "
"expression is indented under the first argument, if that is on the same line "
"as the beginning of the expression; otherwise, the second line is indented "
"underneath the function name.  Each following line is indented under the "
"previous line whose nesting depth is the same."
msgstr ""

#. type: vindex
#: original_texis/programs.texi:488
#, no-wrap
msgid "lisp-indent-offset"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:493
msgid ""
"If the variable @code{lisp-indent-offset} is non-@code{nil}, it overrides "
"the usual indentation pattern for the second line of an expression, so that "
"such lines are always indented @code{lisp-indent-offset} more columns than "
"the containing list."
msgstr ""

#. type: vindex
#: original_texis/programs.texi:494
#, no-wrap
msgid "lisp-body-indent"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:500
msgid ""
"Certain functions override the standard pattern.  Functions whose names "
"start with @code{def} treat the second lines as the start of a @dfn{body}, "
"by indenting the second line @code{lisp-body-indent} additional columns "
"beyond the open-parenthesis that starts the expression."
msgstr ""

#. type: cindex
#: original_texis/programs.texi:501
#, no-wrap
msgid "@code{lisp-indent-function} property"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:507
msgid ""
"You can override the standard pattern in various ways for individual "
"functions, according to the @code{lisp-indent-function} property of the "
"function name.  This is normally done for macro definitions, using the "
"@code{declare} construct.  @xref{Defining Macros,,, elisp, The Emacs Lisp "
"Reference Manual}."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:510
msgid ""
"In Emacs Lisp, lists are usually indented as if they are function-like "
"forms:"
msgstr ""

#. type: lisp
#: original_texis/programs.texi:514
#, no-wrap
msgid ""
"(setq foo '(bar zot\n"
"                gazonk))\n"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:519
msgid ""
"However, if you add a space after the opening parenthesis, this tells Emacs "
"that it's a data list instead of a piece of code, and Emacs will then indent "
"it like this:"
msgstr ""

#. type: lisp
#: original_texis/programs.texi:523
#, no-wrap
msgid ""
"(setq foo '( bar zot\n"
"             gazonk))\n"
msgstr ""

#. type: subsection
#: original_texis/programs.texi:526
#, no-wrap
msgid "Commands for C Indentation"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:529
msgid "Here are special features for indentation in C mode and related modes:"
msgstr ""

#. type: item
#: original_texis/programs.texi:531
#, no-wrap
msgid "C-c C-q"
msgstr ""

#. type: kindex
#: original_texis/programs.texi:532
#, no-wrap
msgid "C-c C-q @r{(C mode)}"
msgstr ""

#. type: findex
#: original_texis/programs.texi:533
#, no-wrap
msgid "c-indent-defun"
msgstr ""

#. type: findex
#: original_texis/programs.texi:534
#, no-wrap
msgid "c-ts-mode-indent-defun"
msgstr ""

#. type: table
#: original_texis/programs.texi:538
msgid ""
"Reindent the current top-level function definition or aggregate type "
"declaration (@code{c-indent-defun} in CC mode, @code{c-ts-mode-indent-defun} "
"in @code{c-ts-mode} based on tree-sitter)."
msgstr ""

#. type: kindex
#: original_texis/programs.texi:540
#, no-wrap
msgid "C-M-q @r{(C mode)}"
msgstr ""

#. type: findex
#: original_texis/programs.texi:541
#, no-wrap
msgid "c-indent-exp"
msgstr ""

#. type: findex
#: original_texis/programs.texi:542
#, no-wrap
msgid "prog-indent-sexp"
msgstr ""

#. type: table
#: original_texis/programs.texi:548
msgid ""
"Reindent each line in the balanced expression (@pxref{Expressions}), also "
"known as ``sexp'', that follows point.  In CC mode, this invokes "
"@code{c-indent-exp}; in tree-sitter based @code{c-ts-mode} this invokes a "
"more general @code{prog-indent-sexp}.  A prefix argument inhibits warning "
"messages about invalid syntax."
msgstr ""

#. type: findex
#: original_texis/programs.texi:550
#, no-wrap
msgid "c-indent-line-or-region"
msgstr ""

#. type: table
#: original_texis/programs.texi:555
msgid ""
"Reindent the current line, active region, or block starting on this line "
"(@code{c-indent-line-or-region}).  With prefix argument, rigidly reindent "
"the balanced expression which starts on the current line, if the current "
"line needs reindentation."
msgstr ""

#. type: vindex
#: original_texis/programs.texi:556
#, no-wrap
msgid "c-tab-always-indent"
msgstr ""

#. type: table
#: original_texis/programs.texi:559
msgid ""
"If @code{c-tab-always-indent} is @code{t}, this command always reindents the "
"current line and does nothing else.  This is the default."
msgstr ""

#. type: table
#: original_texis/programs.texi:564
msgid ""
"If that variable is @code{nil}, this command reindents the current line only "
"if point is at the left margin or in the line's indentation; otherwise, it "
"inserts a tab (or the equivalent number of spaces, if "
"@code{indent-tabs-mode} is @code{nil})."
msgstr ""

#. type: table
#: original_texis/programs.texi:567
msgid ""
"Any other value (not @code{nil} or @code{t}) means always reindent the line, "
"and also insert a tab if within a comment or a string."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:572
msgid ""
"To reindent the whole current buffer, type @kbd{C-x h C-M-\\}.  This first "
"selects the whole buffer as the region, then reindents that region."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:575
msgid ""
"To reindent the current block, use @kbd{C-M-u C-M-q}.  This moves to the "
"front of the block and then reindents it all."
msgstr ""

#. type: subsection
#: original_texis/programs.texi:577
#, no-wrap
msgid "Customizing C Indentation"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:578
#, no-wrap
msgid "style (for indentation)"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:586
msgid ""
"C mode and related modes use a flexible mechanism for customizing "
"indentation.  C mode indents a source line in two steps: first it classifies "
"the line syntactically according to its contents and context; second, it "
"determines the indentation offset associated by your selected @dfn{style} "
"with the syntactic construct and adds this onto the indentation of the "
"@dfn{anchor statement}."
msgstr ""

#. type: item
#: original_texis/programs.texi:588
#, no-wrap
msgid "C-c . @var{style} @key{RET}"
msgstr ""

#. type: table
#: original_texis/programs.texi:591
msgid ""
"Select a predefined style @var{style} (@code{c-set-style} in CC mode, "
"@code{c-ts-mode-set-style} in @code{c-ts-mode} based on tree-sitter)."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:603
msgid ""
"A @dfn{style} is a named collection of customizations that can be used in C "
"mode and the related modes.  @ref{Styles,,, ccmode, The CC Mode Manual}, for "
"a complete description.  Emacs comes with several predefined styles, "
"including @code{gnu}, @code{k&r}, @code{bsd}, @code{stroustrup}, "
"@code{linux}, @code{python}, @code{java}, @code{whitesmith}, "
"@code{ellemtel}, and @code{awk}.  Some of these styles are primarily "
"intended for one language, but any of them can be used with any of the "
"languages supported by these modes.  To find out what a style looks like, "
"select it and reindent some code, e.g., by typing @kbd{C-M-q} at the start "
"of a function definition."
msgstr ""

#. type: kindex
#: original_texis/programs.texi:604
#, no-wrap
msgid "C-c . @r{(C mode)}"
msgstr ""

#. type: findex
#: original_texis/programs.texi:605
#, no-wrap
msgid "c-set-style"
msgstr ""

#. type: findex
#: original_texis/programs.texi:606
#, no-wrap
msgid "c-ts-mode-set-style"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:613
msgid ""
"To choose a style for the current buffer, use the command @w{@kbd{C-c .}}.  "
"Specify a style name as an argument (case is not significant).  This command "
"affects the current buffer only, and it affects only future invocations of "
"the indentation commands; it does not reindent the code already in the "
"buffer.  To reindent the whole buffer in the new style, you can type "
"@kbd{C-x h C-M-\\}."
msgstr ""

#. type: vindex
#: original_texis/programs.texi:614
#, no-wrap
msgid "c-default-style"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:620
msgid ""
"When using CC mode, you can also set the variable @code{c-default-style} to "
"specify the default style for various major modes.  Its value should be "
"either the style's name (a string) or an alist, in which each element "
"specifies one major mode and which indentation style to use for it.  For "
"example,"
msgstr ""

#. type: example
#: original_texis/programs.texi:626
#, no-wrap
msgid ""
"(setq c-default-style\n"
"      '((java-mode . \"java\")\n"
"        (awk-mode . \"awk\")\n"
"        (other . \"gnu\")))\n"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:635
msgid ""
"specifies explicit choices for Java and AWK modes, and the default "
"@samp{gnu} style for the other C-like modes.  (These settings are actually "
"the defaults.)  This variable takes effect when you select one of the C-like "
"major modes; thus, if you specify a new default style for Java mode, you can "
"make it take effect in an existing Java mode buffer by typing @kbd{M-x "
"java-mode} there."
msgstr ""

#. type: vindex
#: original_texis/programs.texi:636
#, no-wrap
msgid "c-ts-mode-indent-style"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:640
msgid ""
"When using the tree-sitter based @code{c-ts-mode}, you can set the default "
"indentation style by customizing the variable @code{c-ts-mode-indent-style}."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:644
msgid ""
"The @code{gnu} style specifies the formatting recommended by the GNU Project "
"for C; it is the default, so as to encourage use of our recommended style."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:650
msgid ""
"@xref{Indentation Engine Basics,,, ccmode, the CC Mode Manual}, and "
"@ref{Customizing Indentation,,, ccmode, the CC Mode Manual}, for more "
"information on customizing indentation for C and related modes, including "
"how to override parts of an existing style and how to define your own "
"styles."
msgstr ""

#. type: findex
#: original_texis/programs.texi:651
#, no-wrap
msgid "c-guess"
msgstr ""

#. type: findex
#: original_texis/programs.texi:652
#, no-wrap
msgid "c-guess-install"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:658
msgid ""
"As an alternative to specifying a style, you can tell Emacs to guess a style "
"by typing @kbd{M-x c-guess} in a sample code buffer.  You can then apply the "
"guessed style to other buffers with @kbd{M-x c-guess-install}.  "
"@xref{Guessing the Style,,, ccmode, the CC Mode Manual}, for details."
msgstr ""

#. type: section
#: original_texis/programs.texi:660
#, no-wrap
msgid "Commands for Editing with Parentheses"
msgstr ""

#. type: findex
#: original_texis/programs.texi:662
#, no-wrap
msgid "check-parens"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:663
#, no-wrap
msgid "unbalanced parentheses and quotes"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:667
msgid ""
"This section describes the commands and features that take advantage of the "
"parenthesis structure in a program, or help you keep it balanced."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:674
msgid ""
"When talking about these facilities, the term ``parenthesis'' also includes "
"braces, brackets, or whatever delimiters are defined to match in pairs.  The "
"major mode controls which delimiters are significant, through the syntax "
"table (@pxref{Syntax Tables,, Syntax Tables, elisp, The Emacs Lisp Reference "
"Manual}).  In Lisp, only parentheses count; in C, these commands apply to "
"braces and brackets too."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:677
msgid ""
"You can use @kbd{M-x check-parens} to find any unbalanced parentheses and "
"unbalanced string quotes in the buffer."
msgstr ""

#. type: node
#: original_texis/programs.texi:683 original_texis/programs.texi:685
#, no-wrap
msgid "Expressions"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:683
msgid "Expressions with balanced parentheses."
msgstr ""

#. type: node
#: original_texis/programs.texi:683 original_texis/programs.texi:777
#, no-wrap
msgid "Moving by Parens"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:683
msgid "Commands for moving up, down and across in the structure of parentheses."
msgstr ""

#. type: node
#: original_texis/programs.texi:683 original_texis/programs.texi:834
#, no-wrap
msgid "Matching"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:683
msgid "Insertion of a close-delimiter flashes matching open."
msgstr ""

#. type: subsection
#: original_texis/programs.texi:686
#, no-wrap
msgid "Expressions with Balanced Parentheses"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:688
#, no-wrap
msgid "sexp"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:689
#, no-wrap
msgid "expression"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:690
#, no-wrap
msgid "balanced expression"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:698
msgid ""
"Each programming language mode has its own definition of a @dfn{balanced "
"expression}.  Balanced expressions typically include individual symbols, "
"numbers, and string constants, as well as pieces of code enclosed in a "
"matching pair of delimiters.  The following commands deal with balanced "
"expressions (in Emacs, such expressions are referred to internally as "
"@dfn{sexps}@footnote{The word ``sexp'' is used to refer to an expression in "
"Lisp.})."
msgstr ""

#. type: kindex
#: original_texis/programs.texi:700 original_texis/programs.texi:713
#, no-wrap
msgid "C-M-f"
msgstr ""

#. type: table
#: original_texis/programs.texi:702
msgid "Move forward over a balanced expression (@code{forward-sexp})."
msgstr ""

#. type: kindex
#: original_texis/programs.texi:702 original_texis/programs.texi:714
#, no-wrap
msgid "C-M-b"
msgstr ""

#. type: table
#: original_texis/programs.texi:704
msgid "Move backward over a balanced expression (@code{backward-sexp})."
msgstr ""

#. type: kindex
#: original_texis/programs.texi:704 original_texis/programs.texi:739
#, no-wrap
msgid "C-M-k"
msgstr ""

#. type: table
#: original_texis/programs.texi:706
msgid "Kill balanced expression forward (@code{kill-sexp})."
msgstr ""

#. type: kindex
#: original_texis/programs.texi:706 original_texis/programs.texi:746
#, no-wrap
msgid "C-M-t"
msgstr ""

#. type: table
#: original_texis/programs.texi:708
msgid "Transpose expressions (@code{transpose-sexps})."
msgstr ""

#. type: item
#: original_texis/programs.texi:708
#, no-wrap
msgid "C-M-@@"
msgstr ""

#. type: itemx
#: original_texis/programs.texi:709
#, no-wrap
msgid "C-M-@key{SPC}"
msgstr ""

#. type: table
#: original_texis/programs.texi:711
msgid "Put mark after following expression (@code{mark-sexp})."
msgstr ""

#. type: findex
#: original_texis/programs.texi:715
#, no-wrap
msgid "forward-sexp"
msgstr ""

#. type: findex
#: original_texis/programs.texi:716
#, no-wrap
msgid "backward-sexp"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:723
msgid ""
"To move forward over a balanced expression, use @kbd{C-M-f} "
"(@code{forward-sexp}).  If the first significant character after point is an "
"opening delimiter (e.g., @samp{(}, @samp{[} or @samp{@{} in C), this command "
"moves past the matching closing delimiter.  If the character begins a "
"symbol, string, or number, the command moves over that."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:729
msgid ""
"The command @kbd{C-M-b} (@code{backward-sexp}) moves backward over a "
"balanced expression---like @kbd{C-M-f}, but in the reverse direction.  If "
"the expression is preceded by any prefix characters (single-quote, backquote "
"and comma, in Lisp), the command moves back over them as well."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:737
msgid ""
"@kbd{C-M-f} or @kbd{C-M-b} with an argument repeats that operation the "
"specified number of times; with a negative argument means to move in the "
"opposite direction.  In most modes, these two commands move across comments "
"as if they were whitespace.  Note that their keys, @kbd{C-M-f} and "
"@kbd{C-M-b}, are analogous to @kbd{C-f} and @kbd{C-b}, which move by "
"characters (@pxref{Moving Point}), and @kbd{M-f} and @kbd{M-b}, which move "
"by words (@pxref{Words})."
msgstr ""

#. type: cindex
#: original_texis/programs.texi:738
#, no-wrap
msgid "killing expressions"
msgstr ""

#. type: findex
#: original_texis/programs.texi:740
#, no-wrap
msgid "kill-sexp"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:744
msgid ""
"To kill a whole balanced expression, type @kbd{C-M-k} (@code{kill-sexp}).  "
"This kills the text that @kbd{C-M-f} would move over."
msgstr ""

#. type: cindex
#: original_texis/programs.texi:745
#, no-wrap
msgid "transposition of expressions"
msgstr ""

#. type: findex
#: original_texis/programs.texi:747
#, no-wrap
msgid "transpose-sexps"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:756
msgid ""
"@kbd{C-M-t} (@code{transpose-sexps}) switches the positions of the previous "
"balanced expression and the next one.  It is analogous to the @kbd{C-t} "
"command, which transposes characters (@pxref{Transpose}).  An argument to "
"@kbd{C-M-t} serves as a repeat count, moving the previous expression over "
"that many following ones.  A negative argument moves the previous balanced "
"expression backwards across those before it.  An argument of zero, rather "
"than doing nothing, transposes the balanced expressions ending at or after "
"point and the mark."
msgstr ""

#. type: kindex
#: original_texis/programs.texi:757
#, no-wrap
msgid "C-M-SPC"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:767
msgid ""
"To operate on balanced expressions with a command which acts on the region, "
"type @kbd{C-M-@key{SPC}} (@code{mark-sexp}).  This sets the mark where "
"@kbd{C-M-f} would move to.  While the mark is active, each successive call "
"to this command extends the region by shifting the mark by one expression.  "
"Positive or negative numeric arguments move the mark forward or backward by "
"the specified number of expressions.  The alias @kbd{C-M-@@} is equivalent "
"to @kbd{C-M-@key{SPC}}.  @xref{Marking Objects}, for more information about "
"this and related commands."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:776
msgid ""
"In languages that use infix operators, such as C, it is not possible to "
"recognize all balanced expressions because there can be multiple "
"possibilities at a given position.  For example, C mode does not treat "
"@samp{foo + bar} as a single expression, even though it @emph{is} one C "
"expression; instead, it recognizes @samp{foo} as one expression and "
"@samp{bar} as another, with the @samp{+} as punctuation between them.  "
"However, C mode recognizes @samp{(foo + bar)} as a single expression, "
"because of the parentheses."
msgstr ""

#. type: subsection
#: original_texis/programs.texi:778
#, no-wrap
msgid "Moving in the Parenthesis Structure"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:780
#, no-wrap
msgid "parenthetical groupings"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:781
#, no-wrap
msgid "parentheses, moving across"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:782
#, no-wrap
msgid "matching parenthesis and braces, moving to"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:783
#, no-wrap
msgid "braces, moving across"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:784
#, no-wrap
msgid "list commands"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:794
msgid ""
"The following commands move over groupings delimited by parentheses (or "
"whatever else serves as delimiters in the language you are working with).  "
"They ignore strings and comments, including any parentheses within them, and "
"also ignore parentheses that are quoted with an escape character.  These "
"commands are mainly intended for editing programs, but can be useful for "
"editing any text containing parentheses.  They are referred to internally as "
"``list commands'' because in Lisp these groupings are lists."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:798
msgid ""
"These commands assume that the starting point is not inside a string or a "
"comment.  If you invoke them from inside a string or comment, the results "
"are unreliable."
msgstr ""

#. type: kindex
#: original_texis/programs.texi:800 original_texis/programs.texi:810
#, no-wrap
msgid "C-M-n"
msgstr ""

#. type: table
#: original_texis/programs.texi:802
msgid "Move forward over a parenthetical group (@code{forward-list})."
msgstr ""

#. type: kindex
#: original_texis/programs.texi:802 original_texis/programs.texi:811
#, no-wrap
msgid "C-M-p"
msgstr ""

#. type: table
#: original_texis/programs.texi:804
msgid "Move backward over a parenthetical group (@code{backward-list})."
msgstr ""

#. type: kindex
#: original_texis/programs.texi:804 original_texis/programs.texi:818
#, no-wrap
msgid "C-M-u"
msgstr ""

#. type: table
#: original_texis/programs.texi:806
msgid "Move up in parenthesis structure (@code{backward-up-list})."
msgstr ""

#. type: kindex
#: original_texis/programs.texi:806 original_texis/programs.texi:827
#, no-wrap
msgid "C-M-d"
msgstr ""

#. type: table
#: original_texis/programs.texi:808
msgid "Move down in parenthesis structure (@code{down-list})."
msgstr ""

#. type: findex
#: original_texis/programs.texi:812
#, no-wrap
msgid "forward-list"
msgstr ""

#. type: findex
#: original_texis/programs.texi:813
#, no-wrap
msgid "backward-list"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:817
msgid ""
"The list commands @kbd{C-M-n} (@code{forward-list}) and @kbd{C-M-p} "
"(@code{backward-list}) move forward or backward over one (or @var{n}) "
"parenthetical groupings."
msgstr ""

#. type: findex
#: original_texis/programs.texi:819
#, no-wrap
msgid "backward-up-list"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:826
msgid ""
"@kbd{C-M-n} and @kbd{C-M-p} try to stay at the same level in the parenthesis "
"structure.  To move @emph{up} one (or @var{n}) levels, use @kbd{C-M-u} "
"(@code{backward-up-list}).  @kbd{C-M-u} moves backward up past one unmatched "
"opening delimiter.  A positive argument serves as a repeat count; a negative "
"argument reverses the direction of motion, so that the command moves forward "
"and up one or more levels."
msgstr ""

#. type: findex
#: original_texis/programs.texi:828
#, no-wrap
msgid "down-list"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:833
msgid ""
"To move @emph{down} in the parenthesis structure, use @kbd{C-M-d} "
"(@code{down-list}).  In Lisp mode, where @samp{(} is the only opening "
"delimiter, this is nearly the same as searching for a @samp{(}.  An argument "
"specifies the number of levels to go down."
msgstr ""

#. type: subsection
#: original_texis/programs.texi:835
#, no-wrap
msgid "Matching Parentheses"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:836
#, no-wrap
msgid "matching parentheses"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:837
#, no-wrap
msgid "parentheses, displaying matches"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:842
msgid ""
"Emacs has a number of @dfn{parenthesis matching} features, which make it "
"easy to see how and whether parentheses (or other delimiters)  match up."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:850
msgid ""
"Whenever you type a self-inserting character that is a closing delimiter, "
"Emacs briefly indicates the location of the matching opening delimiter, "
"provided that is on the screen.  If it is not on the screen, Emacs displays "
"some of the text near it in the echo area.  Either way, you can tell which "
"grouping you are closing off.  If the opening delimiter and closing "
"delimiter are mismatched---such as in @samp{[x)}---a warning message is "
"displayed in the echo area."
msgstr ""

#. type: vindex
#: original_texis/programs.texi:851
#, no-wrap
msgid "blink-matching-paren"
msgstr ""

#. type: vindex
#: original_texis/programs.texi:852
#, no-wrap
msgid "blink-matching-paren-distance"
msgstr ""

#. type: vindex
#: original_texis/programs.texi:853
#, no-wrap
msgid "blink-matching-delay"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:855
msgid "Three variables control the display of matching parentheses:"
msgstr ""

#. type: itemize
#: original_texis/programs.texi:863
msgid ""
"@code{blink-matching-paren} turns the feature on or off: @code{nil} disables "
"it, but the default is @code{t} to enable it.  Set it to @code{jump} to make "
"indication work by momentarily moving the cursor to the matching opening "
"delimiter.  Set it to @code{jump-offscreen} to make the cursor jump, even if "
"the opening delimiter is off screen."
msgstr ""

#. type: itemize
#: original_texis/programs.texi:868
msgid ""
"@code{blink-matching-delay} says how many seconds to keep indicating the "
"matching opening delimiter.  This may be an integer or floating-point "
"number; the default is 1."
msgstr ""

#. type: itemize
#: original_texis/programs.texi:874
msgid ""
"@code{blink-matching-paren-distance} specifies how many characters back to "
"search to find the matching opening delimiter.  If the match is not found in "
"that distance, Emacs stops scanning and nothing is displayed.  The default "
"is 102400."
msgstr ""

#. type: cindex
#: original_texis/programs.texi:876
#, no-wrap
msgid "Show Paren mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:877
#, no-wrap
msgid "highlighting matching parentheses"
msgstr ""

#. type: findex
#: original_texis/programs.texi:878
#, no-wrap
msgid "show-paren-mode"
msgstr ""

#. type: findex
#: original_texis/programs.texi:879
#, no-wrap
msgid "show-paren-local-mode"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:886
msgid ""
"Show Paren mode is a minor mode that provides a more powerful kind of "
"automatic matching.  Whenever point is before an opening delimiter or after "
"a closing delimiter, the delimiter, its matching delimiter, and optionally "
"the text between them are highlighted.  To toggle Show Paren mode globally, "
"type @kbd{M-x show-paren-mode}.  To toggle it only in the current buffer, "
"type @kbd{M-x show-paren-local-mode}."
msgstr ""

#. type: vindex
#: original_texis/programs.texi:887
#, no-wrap
msgid "show-paren-predicate"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:891
msgid ""
"By default, this mode is switched on in all buffers that are meant for "
"editing, but is not enabled in buffers that show data.  This is controlled "
"by the @code{show-paren-predicate} user option."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:895
msgid ""
"To customize the mode, type @w{@kbd{M-x customize-group @key{RET} "
"paren-showing}}.  The customizable options which control the operation of "
"this mode include:"
msgstr ""

#. type: vindex
#: original_texis/programs.texi:898
#, no-wrap
msgid "show-paren-highlight-openparen"
msgstr ""

#. type: itemize
#: original_texis/programs.texi:902
msgid ""
"@code{show-paren-highlight-openparen} controls whether to highlight an open "
"paren when point is just before it, and hence its position is marked by the "
"cursor anyway.  The default is non-@code{nil} (yes)."
msgstr ""

#. type: vindex
#: original_texis/programs.texi:904
#, no-wrap
msgid "show-paren-style"
msgstr ""

#. type: itemize
#: original_texis/programs.texi:911
msgid ""
"@code{show-paren-style} controls whether just the two parens, or also the "
"text between them get highlighted.  The valid options here are "
"@code{parenthesis} (show the matching paren), @code{expression} (highlight "
"the entire expression enclosed by the parens), and @code{mixed} (highlight "
"the matching paren if it is visible in the window, the expression "
"otherwise)."
msgstr ""

#. type: vindex
#: original_texis/programs.texi:913
#, no-wrap
msgid "show-paren-when-point-inside-paren"
msgstr ""

#. type: itemize
#: original_texis/programs.texi:917
msgid ""
"@code{show-paren-when-point-inside-paren}, when non-@code{nil}, causes "
"highlighting also when point is inside of the parentheses.  The default is "
"@code{nil}."
msgstr ""

#. type: vindex
#: original_texis/programs.texi:919
#, no-wrap
msgid "show-paren-when-point-in-periphery"
msgstr ""

#. type: itemize
#: original_texis/programs.texi:925
msgid ""
"@code{show-paren-when-point-in-periphery}, when non-@code{nil}, causes "
"highlighting also when point is in whitespace at the beginning of a line and "
"there is a paren at the first or last non-whitespace position on the line, "
"or when point is at the end of a line and there is a paren at the last "
"non-whitespace position on the line."
msgstr ""

#. type: vindex
#: original_texis/programs.texi:927
#, no-wrap
msgid "show-paren-context-when-offscreen"
msgstr ""

#. type: itemize
#: original_texis/programs.texi:934
msgid ""
"@code{show-paren-context-when-offscreen}, when non-@code{nil}, shows some "
"context in the echo area when point is in a closing delimiter and the "
"opening delimiter is offscreen.  The context is usually the line that "
"contains the opening delimiter, except if the opening delimiter is on its "
"own line, in which case the context includes the previous nonblank line."
msgstr ""

#. type: cindex
#: original_texis/programs.texi:936
#, no-wrap
msgid "Electric Pair mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:937
#, no-wrap
msgid "inserting matching parentheses"
msgstr ""

#. type: findex
#: original_texis/programs.texi:938
#, no-wrap
msgid "electric-pair-mode"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:949
msgid ""
"Electric Pair mode, a global minor mode, provides a way to easily insert "
"matching delimiters: parentheses, braces, brackets, etc.  Whenever you "
"insert an opening delimiter, the matching closing delimiter is automatically "
"inserted as well, leaving point between the two.  Conversely, when you "
"insert a closing delimiter over an existing one, no insertion takes places, "
"and that position is simply skipped over.  If the region is active "
"(@pxref{Mark}), insertion of a delimiter operates on the region: the "
"characters in the region are enclosed in a pair of matching delimiters, "
"leaving point after the delimiter you typed."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:951
msgid "These variables control additional features of Electric Pair mode:"
msgstr ""

#. type: vindex
#: original_texis/programs.texi:954
#, no-wrap
msgid "electric-pair-preserve-balance"
msgstr ""

#. type: itemize
#: original_texis/programs.texi:958
msgid ""
"@code{electric-pair-preserve-balance}, when non-@code{nil}, makes the "
"default pairing logic balance out the number of opening and closing "
"delimiters."
msgstr ""

#. type: vindex
#: original_texis/programs.texi:960
#, no-wrap
msgid "electric-pair-delete-adjacent-pairs"
msgstr ""

#. type: itemize
#: original_texis/programs.texi:964
msgid ""
"@code{electric-pair-delete-adjacent-pairs}, when non-@code{nil}, makes "
"backspacing between two adjacent delimiters also automatically delete the "
"closing delimiter."
msgstr ""

#. type: vindex
#: original_texis/programs.texi:966
#, no-wrap
msgid "electric-pair-open-newline-between-pairs"
msgstr ""

#. type: itemize
#: original_texis/programs.texi:970
msgid ""
"@code{electric-pair-open-newline-between-pairs}, when non-@code{nil}, makes "
"inserting a newline between two adjacent pairs also automatically open an "
"extra newline after point."
msgstr ""

#. type: vindex
#: original_texis/programs.texi:972
#, no-wrap
msgid "electric-pair-skip-whitespace"
msgstr ""

#. type: itemize
#: original_texis/programs.texi:976
msgid ""
"@code{electric-pair-skip-whitespace}, when non-@code{nil}, causes the minor "
"mode to skip whitespace forward before deciding whether to skip over the "
"closing delimiter."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:981
msgid ""
"To toggle Electric Pair mode, type @kbd{M-x electric-pair-mode}.  To toggle "
"the mode in a single buffer, use @kbd{M-x electric-pair-local-mode}."
msgstr ""

#. type: section
#: original_texis/programs.texi:983
#, no-wrap
msgid "Manipulating Comments"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:984
#, no-wrap
msgid "comments"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:990
msgid ""
"Because comments are such an important part of programming, Emacs provides "
"special commands for editing and inserting comments.  It can also do spell "
"checking on comments with Flyspell Prog mode (@pxref{Spelling})."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:998
msgid ""
"Some major modes have special rules for indenting different kinds of "
"comments.  For example, in Lisp code, comments starting with two semicolons "
"are indented as if they were lines of code, while those starting with three "
"semicolons are supposed to be aligned to the left margin and are often used "
"for sectioning purposes.  Emacs understands these conventions; for instance, "
"typing @kbd{@key{TAB}} on a comment line will indent the comment to the "
"appropriate position."
msgstr ""

#. type: example
#: original_texis/programs.texi:1006
#, no-wrap
msgid ""
";; This function is just an example.\n"
";;; Here either two or three semicolons are appropriate.\n"
"(defun foo (x)\n"
";;;  And now, the first part of the function:\n"
"  ;; The following line adds one.\n"
"  (1+ x))           ; This line adds one.\n"
msgstr ""

#. type: subsection
#: original_texis/programs.texi:1012 original_texis/programs.texi:1014
#: original_texis/programs.texi:1015
#, no-wrap
msgid "Comment Commands"
msgstr ""

#. type: node
#: original_texis/programs.texi:1012 original_texis/programs.texi:1128
#, no-wrap
msgid "Multi-Line Comments"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:1012
msgid "Commands for adding and editing multi-line comments."
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:1012
msgid "Options for Comments::Customizing the comment features."
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1016
#, no-wrap
msgid "indentation for comments"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1017
#, no-wrap
msgid "alignment for comments"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1020
msgid "The following commands operate on comments:"
msgstr ""

#. type: kindex
#: original_texis/programs.texi:1022 original_texis/programs.texi:1042
#, no-wrap
msgid "M-;"
msgstr ""

#. type: table
#: original_texis/programs.texi:1025
msgid ""
"Insert or realign comment on current line; if the region is active, comment "
"or uncomment the region instead (@code{comment-dwim})."
msgstr ""

#. type: kindex
#: original_texis/programs.texi:1025 original_texis/programs.texi:1084
#, no-wrap
msgid "C-x C-;"
msgstr ""

#. type: table
#: original_texis/programs.texi:1029
msgid ""
"Comment or uncomment the current line (@code{comment-line}).  If the region "
"is active, comment or uncomment the lines in the region instead."
msgstr ""

#. type: kindex
#: original_texis/programs.texi:1029 original_texis/programs.texi:1097
#, no-wrap
msgid "C-u M-;"
msgstr ""

#. type: table
#: original_texis/programs.texi:1031
msgid "Kill comment on current line (@code{comment-kill})."
msgstr ""

#. type: kindex
#: original_texis/programs.texi:1031 original_texis/programs.texi:1171
#, no-wrap
msgid "C-x ;"
msgstr ""

#. type: table
#: original_texis/programs.texi:1033
msgid "Set comment column (@code{comment-set-column})."
msgstr ""

#. type: kindex
#: original_texis/programs.texi:1033 original_texis/programs.texi:1131
#, no-wrap
msgid "C-M-j"
msgstr ""

#. type: kindex
#: original_texis/programs.texi:1034 original_texis/programs.texi:1132
#, no-wrap
msgid "M-j"
msgstr ""

#. type: table
#: original_texis/programs.texi:1037
msgid ""
"Like @kbd{@key{RET}} followed by inserting and aligning a comment "
"(@code{default-indent-new-line}).  @xref{Multi-Line Comments}."
msgstr ""

#. type: kbd{#1}
#: original_texis/programs.texi:1037
#, no-wrap
msgid "M-x comment-region"
msgstr ""

#. type: itemx
#: original_texis/programs.texi:1038
#, no-wrap
msgid "@kbd{C-c C-c} (in C-like modes)"
msgstr ""

#. type: table
#: original_texis/programs.texi:1040
msgid "Add comment delimiters to all the lines in the region."
msgstr ""

#. type: findex
#: original_texis/programs.texi:1043
#, no-wrap
msgid "comment-dwim"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1049
msgid ""
"The command to create or align a comment is @kbd{M-;} "
"(@code{comment-dwim}).  The word ``dwim'' is an acronym for ``Do What I "
"Mean''; it indicates that this command can be used for many different jobs "
"relating to comments, depending on the situation where you use it."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1055
msgid ""
"When a region is active (@pxref{Mark}), @kbd{M-;} either adds comment "
"delimiters to the region, or removes them.  If every line in the region is "
"already a comment, it uncomments each of those lines by removing their "
"comment delimiters.  Otherwise, it adds comment delimiters to enclose the "
"text in the region."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1060
msgid ""
"If you supply a prefix argument to @kbd{M-;} when a region is active, that "
"specifies the number of comment delimiters to add or delete.  A positive "
"argument @var{n} adds @var{n} delimiters, while a negative argument "
"@minus{}@var{n} removes @var{n} delimiters."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1074
msgid ""
"If the region is not active, and there is no existing comment on the current "
"line, @kbd{M-;} adds a new comment to the current line.  If the line is "
"blank (i.e., empty or containing only whitespace characters), the comment is "
"indented to the same position where @kbd{@key{TAB}} would indent to "
"(@pxref{Basic Indent}).  If the line is non-blank, the comment is placed "
"after the last non-whitespace character on the line.  Emacs tries to fit the "
"comment between the columns specified by the variables @code{comment-column} "
"and @code{comment-fill-column} (@pxref{Options for Comments}), if possible.  "
"Otherwise, it will choose some other suitable position, usually separated "
"from the non-comment text by at least one space.  In each case, Emacs places "
"point after the comment's starting delimiter, so that you can start typing "
"the comment text right away."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1082
msgid ""
"You can also use @kbd{M-;} to align an existing comment.  If a line already "
"contains the comment-start string, @kbd{M-;} realigns it to the conventional "
"alignment and moves point after the comment's starting delimiter.  As an "
"exception, comments starting in column 0 are not moved.  Even when an "
"existing comment is properly aligned, @kbd{M-;} is still useful for moving "
"directly to the start of the comment text."
msgstr ""

#. type: findex
#: original_texis/programs.texi:1083
#, no-wrap
msgid "comment-line"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1095
msgid ""
"@kbd{C-x C-;} (@code{comment-line}) comments or uncomments complete lines.  "
"When a region is active (@pxref{Mark}), @kbd{C-x C-;} either comments or "
"uncomments the lines in the region.  If the region is not active, this "
"command comments or uncomments the line point is on.  With a positive prefix "
"argument @var{n}, it operates on @var{n} lines starting with the current "
"one; with a negative argument @minus{}@var{n}, it affects @var{n} preceding "
"lines.  After invoking this command with a negative argument, successive "
"invocations with a positive argument will operate on preceding lines as if "
"the argument were negated."
msgstr ""

#. type: findex
#: original_texis/programs.texi:1096
#, no-wrap
msgid "comment-kill"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1109
msgid ""
"@kbd{C-u M-;} (@code{comment-dwim} with a prefix argument) when the region "
"is not active kills any comment on the current line, along with the "
"whitespace before it.  Since the comment is saved to the kill ring, you can "
"reinsert it on another line by moving to the end of that line, doing "
"@kbd{C-y}, and then @kbd{M-;} to realign the comment.  You can achieve the "
"same effect as @kbd{C-u M-;} by typing @kbd{M-x comment-kill} "
"(@code{comment-dwim} actually calls @code{comment-kill} as a subroutine when "
"it is given a prefix argument).  Invoking @code{comment-dwim} with a prefix "
"numeric argument, as in @w{@kbd{C-u @var{n} M-;}}, when there's no active "
"region, tells @code{comment-kill} to kill comments on @var{n} lines."
msgstr ""

#. type: kindex
#: original_texis/programs.texi:1110
#, no-wrap
msgid "C-c C-c @r{(C mode)}"
msgstr ""

#. type: findex
#: original_texis/programs.texi:1111
#, no-wrap
msgid "comment-region"
msgstr ""

#. type: findex
#: original_texis/programs.texi:1112
#, no-wrap
msgid "uncomment-region"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1120
msgid ""
"The command @kbd{M-x comment-region} is equivalent to calling @kbd{M-;} on "
"an active region, except that it always acts on the region, even if the mark "
"is inactive.  In C mode and related modes, this command is bound to @kbd{C-c "
"C-c}.  The command @kbd{M-x uncomment-region} uncomments each line in the "
"region; a numeric prefix argument specifies the number of comment delimiters "
"to remove (negative arguments specify the number of comment delimiters to "
"add)."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1127
msgid ""
"For C-like modes, you can configure the exact effect of @kbd{M-;} by setting "
"the variables @code{c-indent-comment-alist} and "
"@code{c-indent-comments-syntactically-p}.  For example, on a line ending in "
"a closing brace, @kbd{M-;} puts the comment one space after the brace rather "
"than at @code{comment-column}.  For full details see @ref{Comment "
"Commands,,, ccmode, The CC Mode Manual}."
msgstr ""

#. type: subsection
#: original_texis/programs.texi:1129
#, no-wrap
msgid "Multiple Lines of Comments"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1133
#, no-wrap
msgid "blank lines in programs"
msgstr ""

#. type: findex
#: original_texis/programs.texi:1134
#, no-wrap
msgid "default-indent-new-line"
msgstr ""

#. type: vindex
#: original_texis/programs.texi:1135
#, no-wrap
msgid "comment-multi-line"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1140
msgid ""
"If you are typing a comment and wish to continue it to another line, type "
"@kbd{M-j} or @kbd{C-M-j} (@code{default-indent-new-line}).  This breaks the "
"current line, and inserts the necessary comment delimiters and indentation "
"to continue the comment."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1147
msgid ""
"For languages with closing comment delimiters (e.g., @samp{*/} in C), the "
"exact behavior of @kbd{M-j} depends on the value of the variable "
"@code{comment-multi-line}.  If the value is @code{nil}, the command closes "
"the comment on the old line and starts a new comment on the new line.  "
"Otherwise, it opens a new line within the current comment delimiters."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1151
msgid ""
"When Auto Fill mode is on, going past the fill column while typing a comment "
"also continues the comment, in the same way as an explicit invocation of "
"@kbd{M-j}."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1154
msgid ""
"To turn existing lines into comment lines, use @kbd{M-;} with the region "
"active, or use @kbd{M-x comment-region}"
msgstr ""

#. type: ifinfo
#: original_texis/programs.texi:1156
msgid "(@pxref{Comment Commands})."
msgstr ""

#. type: ifnotinfo
#: original_texis/programs.texi:1159
msgid "as described in the preceding section."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1165
msgid ""
"You can configure C Mode such that when you type a @samp{/} at the start of "
"a line in a multi-line block comment, this closes the comment.  Enable the "
"@code{comment-close-slash} clean-up for this.  @xref{Clean-ups,,, ccmode, "
"The CC Mode Manual}."
msgstr ""

#. type: node
#: original_texis/programs.texi:1166
#, no-wrap
msgid "Options for Comments"
msgstr ""

#. type: subsection
#: original_texis/programs.texi:1167
#, no-wrap
msgid "Options Controlling Comments"
msgstr ""

#. type: vindex
#: original_texis/programs.texi:1169
#, no-wrap
msgid "comment-column"
msgstr ""

#. type: vindex
#: original_texis/programs.texi:1170
#, no-wrap
msgid "comment-fill-column"
msgstr ""

#. type: findex
#: original_texis/programs.texi:1172
#, no-wrap
msgid "comment-set-column"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1185
msgid ""
"As mentioned in @ref{Comment Commands}, when the @kbd{M-j} command adds a "
"comment to a line, it tries to place the comment between the columns "
"specified by the buffer-local variables @code{comment-column} and "
"@code{comment-fill-column} (or if that is @code{nil}, then the value of "
"@code{fill-column}, @pxref{Fill Commands}).  You can set either the local "
"value or the default value of these buffer-local variables in the usual way "
"(@pxref{Locals}).  Alternatively, you can type @kbd{C-x ;} "
"(@code{comment-set-column}) to set the value of @code{comment-column} in the "
"current buffer to the column where point is currently located.  @kbd{C-u C-x "
";} sets the comment column to match the last comment before point in the "
"buffer, and then does a @kbd{M-;} to align the current line's comment under "
"the previous one."
msgstr ""

#. type: vindex
#: original_texis/programs.texi:1186
#, no-wrap
msgid "comment-start-skip"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1198
msgid ""
"The comment commands recognize comments based on the regular expression that "
"is the value of the variable @code{comment-start-skip}.  Make sure this "
"regexp does not match the null string.  It may match more than the comment "
"starting delimiter in the strictest sense of the word; for example, in C "
"mode the value of the variable could be @code{@w{\"/\\\\*+[ \\t]*\\\\|//+[ "
"\\t]*\"}}, which matches extra stars and spaces after the @samp{/*} itself, "
"and accepts C++ style (@samp{//})  comments also.  (Note that @samp{\\\\} is "
"needed in Lisp syntax to include a @samp{\\} in the string, which is needed "
"to deny the first star its special meaning in regexp syntax.  @xref{Regexp "
"Backslash}.)"
msgstr ""

#. type: vindex
#: original_texis/programs.texi:1199
#, no-wrap
msgid "comment-start"
msgstr ""

#. type: vindex
#: original_texis/programs.texi:1200
#, no-wrap
msgid "comment-end"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1208
msgid ""
"When a comment command makes a new comment, it inserts the value of "
"@code{comment-start} as an opening comment delimiter.  It also inserts the "
"value of @code{comment-end} after point, as a closing comment delimiter.  "
"For example, in Lisp mode, @code{comment-start} is @samp{\";\"} and "
"@code{comment-end} is @code{\"\"} (the empty string).  In C mode, "
"@code{comment-start} is @code{\"/* \"} and @code{comment-end} is @code{\" "
"*/\"}."
msgstr ""

#. type: vindex
#: original_texis/programs.texi:1209
#, no-wrap
msgid "comment-padding"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1215
msgid ""
"The variable @code{comment-padding} specifies a string that the commenting "
"commands should insert between the comment delimiter(s) and the comment "
"text.  The default, @samp{\" \"}, specifies a single space.  Alternatively, "
"the value can be a number, which specifies that number of spaces, or "
"@code{nil}, which means no spaces at all."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1219
msgid ""
"The variable @code{comment-multi-line} controls how @kbd{M-j} and Auto Fill "
"mode continue comments over multiple lines.  @xref{Multi-Line Comments}."
msgstr ""

#. type: vindex
#: original_texis/programs.texi:1220
#, no-wrap
msgid "comment-indent-function"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1229
msgid ""
"The variable @code{comment-indent-function} should contain a function that "
"will be called to compute the alignment for a newly inserted comment or for "
"aligning an existing comment.  It is set differently by various major "
"modes.  The function is called with no arguments, but with point at the "
"beginning of the comment, or at the end of a line if a new comment is to be "
"inserted.  It should return the column in which the comment ought to start.  "
"For example, the default function bases its decision on how many comment "
"characters begin an existing comment."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1233
msgid ""
"Emacs also tries to align comments on adjacent lines.  To override this, the "
"function may return a cons of two (possibly equal) integers to indicate an "
"acceptable range of indentation."
msgstr ""

#. type: section
#: original_texis/programs.texi:1235
#, no-wrap
msgid "Documentation Lookup"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1240
msgid ""
"Emacs provides several features you can use to look up the documentation of "
"functions, variables and commands that you plan to use in your program."
msgstr ""

#. type: node
#: original_texis/programs.texi:1245 original_texis/programs.texi:1247
#, no-wrap
msgid "Info Lookup"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:1245
msgid "Looking up library functions and commands in Info files."
msgstr ""

#. type: node
#: original_texis/programs.texi:1245 original_texis/programs.texi:1269
#, no-wrap
msgid "Man Page"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:1245
msgid "Looking up man pages of library functions and commands."
msgstr ""

#. type: node
#: original_texis/programs.texi:1245 original_texis/programs.texi:1345
#, no-wrap
msgid "Programming Language Doc"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:1245
msgid "Looking up program functions, variables, etc."
msgstr ""

#. type: subsection
#: original_texis/programs.texi:1248
#, no-wrap
msgid "Info Documentation Lookup"
msgstr ""

#. type: findex
#: original_texis/programs.texi:1250
#, no-wrap
msgid "info-lookup-file"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1258
msgid ""
"For major modes that apply to languages which have documentation in Info, "
"you can use @kbd{C-h S} (@code{info-lookup-symbol}) to view the Info "
"documentation for a symbol used in the program.  You specify the symbol with "
"the minibuffer; the default is the symbol appearing in the buffer at point.  "
"For example, in C mode this looks for the symbol in the C Library Manual.  "
"The command only works if the appropriate manual's Info files are installed."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1263
msgid ""
"Emacs determines where to look for documentation for the symbol---which Info "
"files to look in, and which indices to search---based on the major mode.  "
"You can also use @kbd{M-x info-lookup-file} to look for documentation for a "
"file name."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1268
msgid ""
"If you use @kbd{C-h S} in a major mode that does not support it, it asks you "
"to specify the symbol help mode.  You should enter a command such as "
"@code{c-mode} that would select a major mode which @kbd{C-h S} does support."
msgstr ""

#. type: subsection
#: original_texis/programs.texi:1270
#, no-wrap
msgid "Man Page Lookup"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1272
#, no-wrap
msgid "man page"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1278
msgid ""
"On Unix, the main form of on-line documentation was the @dfn{manual page} or "
"@dfn{man page}.  In the GNU operating system, we aim to replace man pages "
"with better-organized manuals that you can browse with Info (@pxref{Misc "
"Help}).  This process is not finished, so it is still useful to read manual "
"pages."
msgstr ""

#. type: findex
#: original_texis/programs.texi:1279
#, no-wrap
msgid "man"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1290
msgid ""
"You can read the man page for an operating system command, library function, "
"or system call, with the @kbd{M-x man} command.  This prompts for a topic, "
"with completion (@pxref{Completion}), and runs the @command{man} program to "
"format the corresponding man page.  If the system permits, it runs "
"@command{man} asynchronously, so that you can keep on editing while the page "
"is being formatted.  The result goes in a buffer named @file{*Man "
"@var{topic}*}.  These buffers use a special major mode, Man mode, that "
"facilitates scrolling and jumping to other manual pages.  For details, type "
"@kbd{C-h m} while in a Man mode buffer."
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1291
#, no-wrap
msgid "sections of manual pages"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1301
msgid ""
"Each man page belongs to one of ten or more @dfn{sections}, each named by a "
"digit or by a digit and a letter.  Sometimes there are man pages with the "
"same name in different sections.  To read a man page from a specific "
"section, type @samp{@var{topic}(@var{section})} or @samp{@var{section} "
"@var{topic}} when @kbd{M-x man} prompts for the topic.  For example, the man "
"page for the C library function @code{chmod} is in section 2, but there is a "
"shell command of the same name, whose man page is in section 1; to view the "
"former, type @w{@kbd{M-x man @key{RET} chmod(2) @key{RET}}}."
msgstr ""

#. type: vindex
#: original_texis/programs.texi:1302
#, no-wrap
msgid "Man-switches"
msgstr ""

#. type: kindex
#: original_texis/programs.texi:1303
#, no-wrap
msgid "M-n @r{(Man mode)}"
msgstr ""

#. type: kindex
#: original_texis/programs.texi:1304
#, no-wrap
msgid "M-p @r{(Man mode)}"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1313
msgid ""
"If you do not specify a section, @kbd{M-x man} normally displays only the "
"first man page found.  On some systems, the @code{man} program accepts a "
"@samp{-a} command-line option, which tells it to display all the man pages "
"for the specified topic.  To make use of this, change the value of the "
"variable @code{Man-switches} to @samp{\"-a\"}.  Then, in the Man mode "
"buffer, you can type @kbd{M-n} and @kbd{M-p} to switch between man pages in "
"different sections.  The mode line shows how many manual pages are "
"available."
msgstr ""

#. type: findex
#: original_texis/programs.texi:1314
#, no-wrap
msgid "woman"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1315
#, no-wrap
msgid "manual pages, on MS-DOS/MS-Windows"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1322
msgid ""
"An alternative way of reading manual pages is the @kbd{M-x woman} command.  "
"Unlike @kbd{M-x man}, it does not run any external programs to format and "
"display the man pages; the formatting is done by Emacs, so it works on "
"systems such as MS-Windows where the @command{man} program may be "
"unavailable.  It prompts for a man page, and displays it in a buffer named "
"@file{*WoMan @var{section} @var{topic}}."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1326
msgid ""
"@kbd{M-x woman} computes the completion list for manpages the first time you "
"invoke the command.  With a numeric argument, it recomputes this list; this "
"is useful if you add or delete manual pages."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1331
msgid ""
"If you type a name of a manual page and @kbd{M-x woman} finds that several "
"manual pages by the same name exist in different sections, it pops up a "
"window with possible candidates asking you to choose one of them."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1335
msgid ""
"Note that @kbd{M-x woman} doesn't yet support the latest features of modern "
"man pages, so we recommend using @kbd{M-x man} if that is available on your "
"system."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1337
msgid "For more information about setting up and using @kbd{M-x woman}, see"
msgstr ""

#. type: ifinfo
#: original_texis/programs.texi:1340
msgid ""
"@ref{Top, WoMan, Browse UN*X Manual Pages WithOut Man, woman, The WoMan "
"Manual}."
msgstr ""

#. type: ifnotinfo
#: original_texis/programs.texi:1343
msgid "the WoMan Info manual, which is distributed with Emacs."
msgstr ""

#. type: subsection
#: original_texis/programs.texi:1346
#, no-wrap
msgid "Programming Language Documentation Lookup"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1347
#, no-wrap
msgid "documentation for program symbols"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1348
#, no-wrap
msgid "program functions and variables, documentation lookup"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1354
msgid ""
"When editing Emacs Lisp code, you can use the commands @kbd{C-h f} "
"(@code{describe-function}) and @kbd{C-h v} (@code{describe-variable})  to "
"view the built-in documentation for the Lisp functions and variables that "
"you want to use.  @xref{Name Help}."
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1355
#, no-wrap
msgid "ElDoc mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1356
#, no-wrap
msgid "at-point documentation for program symbols"
msgstr ""

#. type: findex
#: original_texis/programs.texi:1357
#, no-wrap
msgid "eldoc-mode"
msgstr ""

#. type: findex
#: original_texis/programs.texi:1358
#, no-wrap
msgid "global-eldoc-mode"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1369
msgid ""
"ElDoc@footnote{ The name ``ElDoc'' is a historical accident: this mode "
"started by supporting Emacs Lisp buffers.  } is a buffer-local minor mode "
"that helps with looking up documentation of symbols (functions, methods, "
"classes, variables, etc.) in your program.  When this mode is enabled, the "
"echo area displays useful information whenever there is a documented symbol "
"at point.  For example, in buffers under the Emacs Lisp mode, it shows the "
"argument list of a function at point, and for a Lisp variable it shows the "
"first line of the variable's documentation string."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1374
msgid ""
"To toggle ElDoc mode, type @kbd{M-x eldoc-mode}.  There's also a Global "
"ElDoc mode, which is turned on by default, and turns on the ElDoc mode in "
"buffers whose major mode sets the variables described below.  Use "
"@w{@kbd{M-x global-eldoc-mode}} to turn it off globally."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1385
msgid ""
"Various major modes configure the Global ElDoc mode to use their "
"documentation functions.  Examples include Emacs Lisp mode, Python mode, and "
"Cfengine mode.  In addition, Emacs features that provide support for several "
"major modes configure ElDoc to use their facilities for retrieving the "
"documentation.  Examples include Eglot (@pxref{Eglot Features,,, eglot, "
"Eglot: The Emacs LSP Client}), which provides documentation based on "
"information from language servers; Semantic's Idle Summary mode (@pxref{Idle "
"Summary Mode,,, semantic, Semantic Manual}); and Flymake, which uses ElDoc "
"to show diagnostics at point (@pxref{Finding diagnostics,,, flymake, GNU "
"Flymake manual})."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1391
msgid ""
"The ElDoc mode works by scheduling the display of the available "
"documentation for the symbol at point after Emacs has been idle for some "
"short time.  This avoids annoying flickering of documentation messages in "
"the echo area or the mode line when you type quickly and without delay."
msgstr ""

#. type: findex
#: original_texis/programs.texi:1392
#, no-wrap
msgid "eldoc-print-current-symbol-info"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1395
msgid ""
"You can also trigger the display of documentation for a symbol at point by "
"using the command @kbd{M-x eldoc-print-current-symbol-info}."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1397
msgid "The following variables can be used to configure ElDoc mode:"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1399
msgid "@vtable @code"
msgstr ""

#. type: item
#: original_texis/programs.texi:1399
#, no-wrap
msgid "eldoc-idle-delay"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1404
msgid ""
"The value of this user option controls the amount of idle time before the "
"at-point documentation is displayed.  It should be set to the number of "
"seconds to wait; the value of zero means to display without any delay.  The "
"default is 0.5 sec."
msgstr ""

#. type: item
#: original_texis/programs.texi:1405
#, no-wrap
msgid "eldoc-print-after-edit"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1413
msgid ""
"If this user option is non-@code{nil}, ElDoc will show documentation only "
"after some editing command, like inserting or deleting some text.  This "
"comes in handy if you want Emacs to display documentation only about symbols "
"that you type, but not about symbols that are already in the buffer (so just "
"reading the source code will not show documentation).  The default value is "
"@code{nil}.  If you change the value, you need to toggle @code{eldoc-mode} "
"off and on again."
msgstr ""

#. type: item
#: original_texis/programs.texi:1414
#, no-wrap
msgid "eldoc-echo-area-use-multiline-p"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1430
msgid ""
"This user option controls whether and how to truncate documentation text if "
"it is longer than the echo-area can display as a single screen line.  If the "
"value is a positive number, it specifies the number of screen lines that "
"ElDoc is allowed to display in the echo area without truncating the "
"documentation.  A positive integer specifies the absolute maximum number of "
"screen lines to use; a floating-point number specifies the number of screen "
"lines as a fraction of the frame's height.  The value of @code{t} means "
"never truncate the documentation (the echo-area will be resized up to the "
"height allowed by @code{max-mini-window-height}, @pxref{Minibuffer Edit}), "
"whereas the value of @code{nil} means truncate if the documentation is "
"longer than a single screen line.  Finally, the special value "
"@code{truncate-sym-name-if-fit} (the default) means to truncate the part of "
"the documentation that represents a symbol's name if doing that will allow "
"the documentation to fit on a single screen line."
msgstr ""

#. type: item
#: original_texis/programs.texi:1431
#, no-wrap
msgid "eldoc-echo-area-display-truncation-message"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1437
msgid ""
"If non-@code{nil} (the default), and documentation shown in the echo area is "
"truncated because it's too long, follow the documentation by instructions "
"about how to view the complete documentation text.  If @code{nil}, just "
"indicate with @samp{@dots{}} that the documentation was truncated."
msgstr ""

#. type: findex
#: original_texis/programs.texi:1438
#, no-wrap
msgid "eldoc-doc-buffer"
msgstr ""

#. type: item
#: original_texis/programs.texi:1439
#, no-wrap
msgid "eldoc-echo-area-prefer-doc-buffer"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1450
msgid ""
"If the value of this user option is @code{t}, ElDoc will not show the "
"documentation in the echo area if the ElDoc buffer with the documentation is "
"already displayed in some window.  (You can use the command @kbd{M-x "
"eldoc-doc-buffer} any time to show the ElDoc buffer.)  If the value of this "
"option is the symbol @code{maybe}, the documentation will not be displayed "
"in the echo area if the ElDoc buffer is shown in some window, and the "
"documentation text has to be truncated if displayed in the echo area.  "
"Finally, the value of @code{nil} (the default) means always show the "
"documentation in the echo area."
msgstr ""

#. type: item
#: original_texis/programs.texi:1451
#, no-wrap
msgid "eldoc-documentation-strategy"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1461
msgid ""
"This customizable variable's value is the function which is used to retrieve "
"and display documentation for the symbol at point.  The documentation is "
"produced by the functions in the hook @code{eldoc-documentation-functions}.  "
"The default value of @code{eldoc-documentation-strategy} specifies that "
"ElDoc should display the first documentation text produced by functions in "
"the @code{eldoc-documentation-functions} hook, but you can customize "
"@code{eldoc-documentation-strategy} to work in other ways, such as "
"displaying all of the documentation texts concatenated together."
msgstr ""

#. type: item
#: original_texis/programs.texi:1462
#, no-wrap
msgid "eldoc-documentation-functions"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1469
msgid ""
"This abnormal hook's value is a list of functions that can produce "
"documentation for the symbol at point as appropriate for the current "
"buffer's major-mode.  These functions act as a collection of backends for "
"ElDoc.  Major modes register their documentation lookup functions with ElDoc "
"by adding their functions to the buffer-local value of this variable."
msgstr ""

#. type: section
#: original_texis/programs.texi:1472
#, no-wrap
msgid "Hideshow minor mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1473
#, no-wrap
msgid "Hideshow mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1474
#, no-wrap
msgid "mode, Hideshow"
msgstr ""

#. type: findex
#: original_texis/programs.texi:1476
#, no-wrap
msgid "hs-minor-mode"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1481
msgid ""
"Hideshow mode is a buffer-local minor mode that allows you to selectively "
"display portions of a program, which are referred to as @dfn{blocks}.  Type "
"@kbd{M-x hs-minor-mode} to toggle this minor mode (@pxref{Minor Modes})."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1488
msgid ""
"When you use Hideshow mode to hide a block, the block disappears from the "
"screen, to be replaced by an ellipsis (three periods in a row).  Just what "
"constitutes a block depends on the major mode.  In C mode and related modes, "
"blocks are delimited by braces, while in Lisp mode they are delimited by "
"parentheses.  Multi-line comments also count as blocks."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1490
msgid "Hideshow mode provides the following commands:"
msgstr ""

#. type: findex
#: original_texis/programs.texi:1491
#, no-wrap
msgid "hs-hide-all"
msgstr ""

#. type: findex
#: original_texis/programs.texi:1492
#, no-wrap
msgid "hs-hide-block"
msgstr ""

#. type: findex
#: original_texis/programs.texi:1493
#, no-wrap
msgid "hs-show-all"
msgstr ""

#. type: findex
#: original_texis/programs.texi:1494
#, no-wrap
msgid "hs-show-block"
msgstr ""

#. type: findex
#: original_texis/programs.texi:1495
#, no-wrap
msgid "hs-show-region"
msgstr ""

#. type: findex
#: original_texis/programs.texi:1496
#, no-wrap
msgid "hs-hide-level"
msgstr ""

#. type: findex
#: original_texis/programs.texi:1497 original_texis/programs.texi:1498
#, no-wrap
msgid "hs-toggle-hiding"
msgstr ""

#. type: item
#: original_texis/programs.texi:1499 original_texis/programs.texi:1508
#, no-wrap
msgid "C-c @@ C-h"
msgstr ""

#. type: item
#: original_texis/programs.texi:1500 original_texis/programs.texi:1511
#, no-wrap
msgid "C-c @@ C-s"
msgstr ""

#. type: item
#: original_texis/programs.texi:1501 original_texis/programs.texi:1513
#, no-wrap
msgid "C-c @@ C-c"
msgstr ""

#. type: item
#: original_texis/programs.texi:1502 original_texis/programs.texi:1517
#, no-wrap
msgid "C-c @@ C-M-h"
msgstr ""

#. type: item
#: original_texis/programs.texi:1503 original_texis/programs.texi:1520
#, no-wrap
msgid "C-c @@ C-M-s"
msgstr ""

#. type: kindex
#: original_texis/programs.texi:1504
#, no-wrap
msgid "C-c @@ C-r"
msgstr ""

#. type: kindex
#: original_texis/programs.texi:1505
#, no-wrap
msgid "C-c @@ C-l"
msgstr ""

#. type: itemx
#: original_texis/programs.texi:1506 original_texis/programs.texi:1515
#, no-wrap
msgid "S-mouse-2"
msgstr ""

#. type: itemx
#: original_texis/programs.texi:1509
#, no-wrap
msgid "C-c @@ C-d"
msgstr ""

#. type: table
#: original_texis/programs.texi:1511
msgid "Hide the current block (@code{hs-hide-block})."
msgstr ""

#. type: table
#: original_texis/programs.texi:1513
msgid "Show the current block (@code{hs-show-block})."
msgstr ""

#. type: itemx
#: original_texis/programs.texi:1514
#, no-wrap
msgid "C-c @@ C-e"
msgstr ""

#. type: table
#: original_texis/programs.texi:1517
msgid "Either hide or show the current block (@code{hs-toggle-hiding})."
msgstr ""

#. type: itemx
#: original_texis/programs.texi:1518
#, no-wrap
msgid "C-c @@ C-t"
msgstr ""

#. type: table
#: original_texis/programs.texi:1520
msgid "Hide all top-level blocks (@code{hs-hide-all})."
msgstr ""

#. type: itemx
#: original_texis/programs.texi:1521
#, no-wrap
msgid "C-c @@ C-a"
msgstr ""

#. type: table
#: original_texis/programs.texi:1523
msgid "Show all blocks in the buffer (@code{hs-show-all})."
msgstr ""

#. type: item
#: original_texis/programs.texi:1523
#, no-wrap
msgid "C-u @var{n} C-c @@ C-l"
msgstr ""

#. type: table
#: original_texis/programs.texi:1526
msgid "Hide all blocks @var{n} levels below this block (@code{hs-hide-level})."
msgstr ""

#. type: item
#: original_texis/programs.texi:1528 original_texis/programs.texi:1534
#, no-wrap
msgid "hs-hide-comments-when-hiding-all"
msgstr ""

#. type: item
#: original_texis/programs.texi:1529 original_texis/programs.texi:1538
#, no-wrap
msgid "hs-isearch-open"
msgstr ""

#. type: vindex
#: original_texis/programs.texi:1530
#, no-wrap
msgid "hs-special-modes-alist"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1532
msgid "These variables can be used to customize Hideshow mode:"
msgstr ""

#. type: table
#: original_texis/programs.texi:1537
msgid ""
"If non-@code{nil}, @kbd{C-c @@ C-M-h} (@code{hs-hide-all}) hides comments "
"too."
msgstr ""

#. type: table
#: original_texis/programs.texi:1545
msgid ""
"This variable specifies the conditions under which incremental search should "
"unhide a hidden block when matching text occurs within the block.  Its value "
"should be either @code{code} (unhide only code blocks), @code{comment} "
"(unhide only comments), @code{t} (unhide both code blocks and comments), or "
"@code{nil} (unhide neither code blocks nor comments).  The default value is "
"@code{code}."
msgstr ""

#. type: section
#: original_texis/programs.texi:1548
#, no-wrap
msgid "Completion for Symbol Names"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1549
#, no-wrap
msgid "completion (symbol names)"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1553
msgid ""
"Completion is normally done in the minibuffer (@pxref{Completion}), but you "
"can also complete symbol names in ordinary Emacs buffers."
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1554
#, no-wrap
msgid "tags-based completion"
msgstr ""

#. type: kindex
#: original_texis/programs.texi:1555
#, no-wrap
msgid "M-TAB"
msgstr ""

#. type: kindex
#: original_texis/programs.texi:1556
#, no-wrap
msgid "C-M-i"
msgstr ""

#. type: findex
#: original_texis/programs.texi:1557
#, no-wrap
msgid "completion-at-point@r{, in programming language modes}"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1558
#, no-wrap
msgid "Lisp symbol completion"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1559
#, no-wrap
msgid "completion (Lisp symbols)"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1569
msgid ""
"In most programming language modes, @kbd{C-M-i} (or "
"@kbd{M-@key{TAB}}@footnote{ On graphical displays, the @kbd{M-@key{TAB}} key "
"is usually reserved by the window manager for switching graphical windows, "
"so you should type @kbd{C-M-i} or @kbd{@key{ESC} @key{TAB}} instead.  }) "
"invokes the command @code{completion-at-point}, which generates the list of "
"possible completions for the symbol at point.  This command uses the "
"available support facilities to come up with the completion candidates:"
msgstr ""

#. type: itemize
#: original_texis/programs.texi:1577
msgid ""
"If Eglot is activated for the current buffer's project (@pxref{Projects}) "
"and the current buffer's major mode, the command tries to use the "
"corresponding language server for producing the list of completion "
"candidates.  @xref{Eglot Features,,, eglot, Eglot: The Emacs LSP Client}."
msgstr ""

#. type: itemize
#: original_texis/programs.texi:1581
msgid ""
"If Semantic mode is enabled (@pxref{Semantic}), the command tries to use the "
"Semantic parser data for completion."
msgstr ""

#. type: itemize
#: original_texis/programs.texi:1587
msgid ""
"If Semantic mode is not enabled or fails at performing completion, the "
"command tries to complete using the selected tags table (@pxref{Tags "
"Tables}); you need to visit the tags table with @w{@kbd{M-x "
"visit-tags-table}} for that to work."
msgstr ""

#. type: itemize
#: original_texis/programs.texi:1592
msgid ""
"In Emacs Lisp mode, the command performs completion using the function, "
"variable, or property names defined in the current Emacs session."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1602
msgid ""
"In all other respects, in-buffer symbol completion behaves like minibuffer "
"completion.  For instance, if Emacs cannot complete to a unique symbol, it "
"displays a list of completion alternatives in another window.  Then you can "
"use the keys @kbd{M-@key{DOWN}} and @kbd{M-@key{UP}} to navigate through the "
"completions displayed in the completions buffer without leaving the original "
"buffer, and the key @kbd{M-@key{RET}} to insert the currently highlighted "
"completion to the buffer.  @xref{Completion}."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1605
msgid ""
"In Text mode and related modes, @kbd{M-@key{TAB}} completes words based on "
"the spell-checker's dictionary.  @xref{Spelling}."
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1608
#, no-wrap
msgid "camel case"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1615
msgid ""
"Some programming styles make use of mixed-case (or ``CamelCase'')  symbols "
"like @samp{unReadableSymbol}.  (In the GNU project, we recommend using "
"underscores to separate words within an identifier, rather than using case "
"distinctions.)  Emacs has various features to make it easier to deal with "
"such symbols."
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1616
#, no-wrap
msgid "Glasses mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1617
#, no-wrap
msgid "mode, Glasses"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1623
msgid ""
"Glasses mode is a buffer-local minor mode that makes it easier to read such "
"symbols, by altering how they are displayed.  By default, it displays extra "
"underscores between each lower-case letter and the following capital "
"letter.  This does not alter the buffer text, only how it is displayed."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1628
msgid ""
"To toggle Glasses mode, type @kbd{M-x glasses-mode} (@pxref{Minor Modes}).  "
"When Glasses mode is enabled, the minor mode indicator @samp{o^o} appears in "
"the mode line.  For more information about Glasses mode, type @kbd{C-h P "
"glasses @key{RET}}."
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1629
#, no-wrap
msgid "Subword mode"
msgstr ""

#. type: findex
#: original_texis/programs.texi:1630
#, no-wrap
msgid "subword-mode"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1636
msgid ""
"Subword mode is another buffer-local minor mode.  In subword mode, Emacs's "
"word commands recognize upper case letters in @samp{StudlyCapsIdentifiers} "
"as word boundaries.  When Subword mode is enabled, the minor mode indicator "
"@samp{,} appears in the mode line.  See also the similar "
"@code{superword-mode} (@pxref{Misc for Programs})."
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1639
#, no-wrap
msgid "Semantic package"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1644
msgid ""
"Semantic is a package that provides language-aware editing commands based on "
"@code{source code parsers}.  This section provides a brief description of "
"Semantic; for full details,"
msgstr ""

#. type: ifnottex
#: original_texis/programs.texi:1646
msgid "see @ref{Top, Semantic,, semantic, Semantic}."
msgstr ""

#. type: iftex
#: original_texis/programs.texi:1649
msgid "see the Semantic Info manual, which is distributed with Emacs."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1658
msgid ""
"Most of the language-aware features in Emacs, such as Font Lock mode "
"(@pxref{Font Lock}), rely on rules of thumb@footnote{Regular expressions and "
"syntax tables.} that usually give good results but are never completely "
"exact.  In contrast, the parsers used by Semantic have an exact "
"understanding of programming language syntax.  This allows Semantic to "
"provide search, navigation, and completion commands that are powerful and "
"precise."
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1659
#, no-wrap
msgid "Semantic mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1660
#, no-wrap
msgid "mode, Semantic"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1664
msgid ""
"To begin using Semantic, type @kbd{M-x semantic-mode} or click on the menu "
"item named @samp{Source Code Parsers (Semantic)} in the @samp{Tools} menu.  "
"This enables Semantic mode, a global minor mode."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1669
msgid ""
"When Semantic mode is enabled, Emacs automatically attempts to parse each "
"file you visit.  Currently, Semantic understands C, C++, HTML, Java, "
"Javascript, Make, Python, Scheme, SRecode, and Texinfo.  Within each parsed "
"buffer, the following commands are available:"
msgstr ""

#. type: kindex
#: original_texis/programs.texi:1671 original_texis/programs.texi:1672
#, no-wrap
msgid "C-c , j"
msgstr ""

#. type: table
#: original_texis/programs.texi:1675
msgid ""
"Prompt for the name of a function defined in the current file, and move "
"point there (@code{semantic-complete-jump-local})."
msgstr ""

#. type: kindex
#: original_texis/programs.texi:1676 original_texis/programs.texi:1677
#, no-wrap
msgid "C-c , J"
msgstr ""

#. type: table
#: original_texis/programs.texi:1680
msgid ""
"Prompt for the name of a function defined in any file Emacs has parsed, and "
"move point there (@code{semantic-complete-jump})."
msgstr ""

#. type: item
#: original_texis/programs.texi:1681
#, no-wrap
msgid "C-c , @key{SPC}"
msgstr ""

#. type: kindex
#: original_texis/programs.texi:1682
#, no-wrap
msgid "C-c , SPC"
msgstr ""

#. type: table
#: original_texis/programs.texi:1689
msgid ""
"Display a list of possible completions for the symbol at point "
"(@code{semantic-complete-analyze-inline}).  This also activates a set of "
"special key bindings for choosing a completion: @kbd{@key{RET}} accepts the "
"current completion, @kbd{M-n} and @kbd{M-p} cycle through possible "
"completions, @kbd{@key{TAB}} completes as far as possible and then cycles, "
"and @kbd{C-g} or any other key aborts completion."
msgstr ""

#. type: kindex
#: original_texis/programs.texi:1690 original_texis/programs.texi:1691
#, no-wrap
msgid "C-c , l"
msgstr ""

#. type: table
#: original_texis/programs.texi:1694
msgid ""
"Display a list of the possible completions of the symbol at point, in "
"another window (@code{semantic-analyze-possible-completions})."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1701
msgid ""
"In addition to the above commands, the Semantic package provides a variety "
"of other ways to make use of parser information.  For instance, you can use "
"it to display a list of completions when Emacs is idle."
msgstr ""

#. type: ifnottex
#: original_texis/programs.texi:1703
msgid "@xref{Top, Semantic,, semantic, Semantic}, for details."
msgstr ""

#. type: section
#: original_texis/programs.texi:1706
#, no-wrap
msgid "Other Features Useful for Editing Programs"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1710
msgid ""
"Some Emacs commands that aren't designed specifically for editing programs "
"are useful for that nonetheless."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1721
msgid ""
"The Emacs commands that operate on words, sentences and paragraphs are "
"useful for editing code.  Most symbol names contain words (@pxref{Words}), "
"while sentences can be found in strings and comments (@pxref{Sentences}).  "
"As for paragraphs, they are defined in most programming language modes to "
"begin and end at blank lines (@pxref{Paragraphs}).  Therefore, judicious use "
"of blank lines to make the program clearer will also provide useful chunks "
"of text for the paragraph commands to work on.  Auto Fill mode, if enabled "
"in a programming language major mode, indents the new lines which it "
"creates."
msgstr ""

#. type: findex
#: original_texis/programs.texi:1722
#, no-wrap
msgid "superword-mode"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1726
msgid ""
"Superword mode is a buffer-local minor mode that causes editing and motion "
"commands to treat symbols (e.g., @samp{this_is_a_symbol}) as words.  When "
"Superword mode is enabled, the minor mode indicator"
msgstr ""

#. type: math{#1}
#: original_texis/programs.texi:1728
msgid "^2"
msgstr ""

#. type: samp{#1}
#: original_texis/programs.texi:1731
msgid "²"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1734
msgid ""
"appears in the mode line.  See also the similar @code{subword-mode} "
"(@pxref{MixedCase Words})."
msgstr ""

#. type: findex
#: original_texis/programs.texi:1735
#, no-wrap
msgid "electric-layout-mode"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1740
msgid ""
"Electric Layout mode (@kbd{M-x electric-layout-mode}) is a global minor mode "
"that automatically inserts newlines when you type certain characters; for "
"example, @samp{@{}, @samp{@}} and @samp{;} in Javascript mode."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1746
msgid ""
"Apart from Hideshow mode (@pxref{Hideshow}), another way to selectively "
"display parts of a program is to use the selective display feature "
"(@pxref{Selective Display}).  Programming modes often also support Outline "
"minor mode (@pxref{Outline Mode}), which can be used with the Foldout "
"package (@pxref{Foldout})."
msgstr ""

#. type: ifinfo
#: original_texis/programs.texi:1750
msgid ""
"The automatic typing features may be useful for writing programs.  "
"@xref{Top,,Autotyping, autotype, Autotyping}."
msgstr ""

#. type: findex
#: original_texis/programs.texi:1752
#, no-wrap
msgid "prettify-symbols-mode"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1766
msgid ""
"Prettify Symbols mode is a buffer-local minor mode that replaces certain "
"strings with more attractive versions for display purposes.  For example, in "
"Emacs Lisp mode, it replaces the string @samp{lambda} with the Greek lambda "
"character @samp{λ}.  In a @TeX{} buffer, it will replace @samp{\\alpha} "
"@dots{} @samp{\\omega} and other math macros with their Unicode characters.  "
"You may wish to use this in non-programming modes as well.  You can "
"customize the mode by adding more entries to @code{prettify-symbols-alist}.  "
"More elaborate customization is available via customizing "
"@code{prettify-symbols-compose-predicate} if its default value "
"@code{prettify-symbols-default-compose-p} is not appropriate.  There is also "
"a global version, @code{global-prettify-symbols-mode}, which enables the "
"mode in all buffers that support it."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1771
msgid ""
"The symbol at point can be shown in its original form.  This is controlled "
"by the variable @code{prettify-symbols-unprettify-at-point}: if "
"non-@code{nil}, the original form of symbol at point will be restored for as "
"long as point is at it."
msgstr ""

#. type: section
#: original_texis/programs.texi:1774
#, no-wrap
msgid "C and Related Modes"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1775
#, no-wrap
msgid "C mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1776
#, no-wrap
msgid "Java mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1777
#, no-wrap
msgid "Pike mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1778
#, no-wrap
msgid "IDL mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1779
#, no-wrap
msgid "CORBA IDL mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1780
#, no-wrap
msgid "Objective C mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1781
#, no-wrap
msgid "C++ mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1782
#, no-wrap
msgid "AWK mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1783
#, no-wrap
msgid "mode, Java"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1784
#, no-wrap
msgid "mode, C"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1785
#, no-wrap
msgid "mode, C++"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1786
#, no-wrap
msgid "mode, Objective C"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1787
#, no-wrap
msgid "mode, CORBA IDL"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1788
#, no-wrap
msgid "mode, Pike"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1789
#, no-wrap
msgid "mode, AWK"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1794
msgid ""
"This section gives a brief description of the special features available in "
"C, C++, Objective-C, Java, CORBA IDL, Pike and AWK modes.  (These are called "
"``C mode and related modes''.)"
msgstr ""

#. type: ifinfo
#: original_texis/programs.texi:1796
msgid "@xref{Top,, CC Mode, ccmode, CC Mode}, for more details."
msgstr ""

#. type: ifnotinfo
#: original_texis/programs.texi:1800
msgid ""
"For more details, see the CC mode Info manual, which is distributed with "
"Emacs."
msgstr ""

#. type: node
#: original_texis/programs.texi:1808 original_texis/programs.texi:1810
#, no-wrap
msgid "Motion in C"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:1808
msgid "Commands to move by C statements, etc."
msgstr ""

#. type: node
#: original_texis/programs.texi:1808 original_texis/programs.texi:1874
#, no-wrap
msgid "Electric C"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:1808
msgid "Colon and other chars can automatically reindent."
msgstr ""

#. type: node
#: original_texis/programs.texi:1808 original_texis/programs.texi:1920
#, no-wrap
msgid "Hungry Delete"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:1808
msgid "A more powerful DEL command."
msgstr ""

#. type: node
#: original_texis/programs.texi:1808 original_texis/programs.texi:1968
#, no-wrap
msgid "Other C Commands"
msgstr ""

#. type: menuentry
#: original_texis/programs.texi:1808
msgid "Filling comments, viewing expansion of macros, and other neat features."
msgstr ""

#. type: subsection
#: original_texis/programs.texi:1811
#, no-wrap
msgid "C Mode Motion Commands"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1815
msgid ""
"This section describes commands for moving point, in C mode and related "
"modes."
msgstr ""

#. type: findex
#: original_texis/programs.texi:1819
#, no-wrap
msgid "c-beginning-of-defun"
msgstr ""

#. type: findex
#: original_texis/programs.texi:1820
#, no-wrap
msgid "c-end-of-defun"
msgstr ""

#. type: table
#: original_texis/programs.texi:1828
msgid ""
"Move point to the beginning or end of the current function or top-level "
"definition.  In languages with enclosing scopes (such as C++'s classes) the "
"@dfn{current function} is the immediate one, possibly inside a scope.  "
"Otherwise it is the one defined by the least enclosing braces.  (By "
"contrast, @code{beginning-of-defun} and @code{end-of-defun} search for "
"braces in column zero.)  @xref{Moving by Defuns}."
msgstr ""

#. type: item
#: original_texis/programs.texi:1829
#, no-wrap
msgid "C-c C-u"
msgstr ""

#. type: kindex
#: original_texis/programs.texi:1830
#, no-wrap
msgid "C-c C-u @r{(C mode)}"
msgstr ""

#. type: findex
#: original_texis/programs.texi:1831
#, no-wrap
msgid "c-up-conditional"
msgstr ""

#. type: table
#: original_texis/programs.texi:1836
msgid ""
"Move point back to the containing preprocessor conditional, leaving the mark "
"behind.  A prefix argument acts as a repeat count.  With a negative "
"argument, move point forward to the end of the containing preprocessor "
"conditional."
msgstr ""

#. type: table
#: original_texis/programs.texi:1840
msgid ""
"@samp{#elif} is equivalent to @samp{#else} followed by @samp{#if}, so the "
"function will stop at a @samp{#elif} when going backward, but not when going "
"forward."
msgstr ""

#. type: item
#: original_texis/programs.texi:1841
#, no-wrap
msgid "C-c C-p"
msgstr ""

#. type: kindex
#: original_texis/programs.texi:1842
#, no-wrap
msgid "C-c C-p @r{(C mode)}"
msgstr ""

#. type: findex
#: original_texis/programs.texi:1843
#, no-wrap
msgid "c-backward-conditional"
msgstr ""

#. type: table
#: original_texis/programs.texi:1847
msgid ""
"Move point back over a preprocessor conditional, leaving the mark behind.  A "
"prefix argument acts as a repeat count.  With a negative argument, move "
"forward."
msgstr ""

#. type: item
#: original_texis/programs.texi:1848
#, no-wrap
msgid "C-c C-n"
msgstr ""

#. type: kindex
#: original_texis/programs.texi:1849
#, no-wrap
msgid "C-c C-n @r{(C mode)}"
msgstr ""

#. type: findex
#: original_texis/programs.texi:1850
#, no-wrap
msgid "c-forward-conditional"
msgstr ""

#. type: table
#: original_texis/programs.texi:1854
msgid ""
"Move point forward across a preprocessor conditional, leaving the mark "
"behind.  A prefix argument acts as a repeat count.  With a negative "
"argument, move backward."
msgstr ""

#. type: item
#: original_texis/programs.texi:1855
#, no-wrap
msgid "M-a"
msgstr ""

#. type: kindex
#: original_texis/programs.texi:1856
#, no-wrap
msgid "M-a @r{(C mode)}"
msgstr ""

#. type: findex
#: original_texis/programs.texi:1857
#, no-wrap
msgid "c-beginning-of-statement"
msgstr ""

#. type: table
#: original_texis/programs.texi:1862
msgid ""
"Move point to the beginning of the innermost C statement "
"(@code{c-beginning-of-statement}).  If point is already at the beginning of "
"a statement, move to the beginning of the preceding statement.  With prefix "
"argument @var{n}, move back @var{n} @minus{} 1 statements."
msgstr ""

#. type: table
#: original_texis/programs.texi:1865
msgid ""
"In comments or in strings which span more than one line, this command moves "
"by sentences instead of statements."
msgstr ""

#. type: item
#: original_texis/programs.texi:1866
#, no-wrap
msgid "M-e"
msgstr ""

#. type: kindex
#: original_texis/programs.texi:1867
#, no-wrap
msgid "M-e @r{(C mode)}"
msgstr ""

#. type: findex
#: original_texis/programs.texi:1868
#, no-wrap
msgid "c-end-of-statement"
msgstr ""

#. type: table
#: original_texis/programs.texi:1872
msgid ""
"Move point to the end of the innermost C statement or sentence; like "
"@kbd{M-a} except that it moves in the other direction "
"(@code{c-end-of-statement})."
msgstr ""

#. type: subsection
#: original_texis/programs.texi:1875
#, no-wrap
msgid "Electric C Characters"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1883
msgid ""
"In C mode and related modes, certain printing characters are "
"@dfn{electric}---in addition to inserting themselves, they also reindent the "
"current line, and optionally also insert newlines.  The electric characters "
"are @kbd{@{}, @kbd{@}}, @kbd{:}, @kbd{#}, @kbd{;}, @kbd{,}, @kbd{<}, "
"@kbd{>}, @kbd{/}, @kbd{*}, @kbd{(}, and @kbd{)}."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1892
msgid ""
"You might find electric indentation inconvenient if you are editing "
"chaotically indented code.  If you are new to CC Mode, you might find it "
"disconcerting.  You can toggle electric action with the command @kbd{C-c "
"C-l}; when it is enabled, @samp{/@var{c}l} appears in the mode line after "
"the mode name (where @var{c}, if present, is @samp{*} or @samp{/}, depending "
"on whether the comment style is block or line).  @xref{Minor Modes,,, "
"ccmode, The CC Mode Manual}, for more about mode-line indicators in CC Mode."
msgstr ""

#. type: item
#: original_texis/programs.texi:1894
#, no-wrap
msgid "C-c C-l"
msgstr ""

#. type: kindex
#: original_texis/programs.texi:1895
#, no-wrap
msgid "C-c C-l @r{(C mode)}"
msgstr ""

#. type: findex
#: original_texis/programs.texi:1896
#, no-wrap
msgid "c-toggle-electric-state"
msgstr ""

#. type: table
#: original_texis/programs.texi:1900
msgid ""
"Toggle electric action (@code{c-toggle-electric-state}).  With a positive "
"prefix argument, this command enables electric action, with a negative one "
"it disables it."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1906
msgid ""
"Electric characters insert newlines only when, in addition to the electric "
"state, the @dfn{auto-newline} feature is enabled (indicated by "
"@samp{/@var{c}la} in the mode line after the mode name).  You can turn this "
"feature on or off with the command @kbd{C-c C-a}:"
msgstr ""

#. type: item
#: original_texis/programs.texi:1908
#, no-wrap
msgid "C-c C-a"
msgstr ""

#. type: kindex
#: original_texis/programs.texi:1909
#, no-wrap
msgid "C-c C-a @r{(C mode)}"
msgstr ""

#. type: findex
#: original_texis/programs.texi:1910
#, no-wrap
msgid "c-toggle-auto-newline"
msgstr ""

#. type: table
#: original_texis/programs.texi:1914
msgid ""
"Toggle the auto-newline feature (@code{c-toggle-auto-newline}).  With a "
"prefix argument, this command turns the auto-newline feature on if the "
"argument is positive, and off if it is negative."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1919
msgid ""
"Usually the CC Mode style configures the exact circumstances in which Emacs "
"inserts auto-newlines.  You can also configure this directly.  @xref{Custom "
"Auto-newlines,,, ccmode, The CC Mode Manual}."
msgstr ""

#. type: subsection
#: original_texis/programs.texi:1921
#, no-wrap
msgid "Hungry Delete Feature in C"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:1922
#, no-wrap
msgid "hungry deletion (C Mode)"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1929
msgid ""
"If you want to delete an entire block of whitespace at point, you can use "
"@dfn{hungry deletion}.  This deletes all the contiguous whitespace either "
"before point or after point in a single operation.  @dfn{Whitespace} here "
"includes tabs and newlines, but not comments or preprocessor commands."
msgstr ""

#. type: item
#: original_texis/programs.texi:1931
#, no-wrap
msgid "C-c C-@key{DEL}"
msgstr ""

#. type: itemx
#: original_texis/programs.texi:1932
#, no-wrap
msgid "C-c @key{DEL}"
msgstr ""

#. type: findex
#: original_texis/programs.texi:1933
#, no-wrap
msgid "c-hungry-delete-backwards"
msgstr ""

#. type: kindex
#: original_texis/programs.texi:1934
#, no-wrap
msgid "C-c C-DEL @r{(C Mode)}"
msgstr ""

#. type: kindex
#: original_texis/programs.texi:1935
#, no-wrap
msgid "C-c DEL @r{(C Mode)}"
msgstr ""

#. type: table
#: original_texis/programs.texi:1937
msgid ""
"Delete the entire block of whitespace preceding point "
"(@code{c-hungry-delete-backwards})."
msgstr ""

#. type: item
#: original_texis/programs.texi:1938
#, no-wrap
msgid "C-c C-d"
msgstr ""

#. type: itemx
#: original_texis/programs.texi:1939
#, no-wrap
msgid "C-c C-@key{Delete}"
msgstr ""

#. type: itemx
#: original_texis/programs.texi:1940
#, no-wrap
msgid "C-c @key{Delete}"
msgstr ""

#. type: findex
#: original_texis/programs.texi:1941
#, no-wrap
msgid "c-hungry-delete-forward"
msgstr ""

#. type: kindex
#: original_texis/programs.texi:1942
#, no-wrap
msgid "C-c C-d @r{(C Mode)}"
msgstr ""

#. type: kindex
#: original_texis/programs.texi:1943
#, no-wrap
msgid "C-c C-Delete @r{(C Mode)}"
msgstr ""

#. type: kindex
#: original_texis/programs.texi:1944
#, no-wrap
msgid "C-c Delete @r{(C Mode)}"
msgstr ""

#. type: table
#: original_texis/programs.texi:1946
msgid ""
"Delete the entire block of whitespace after point "
"(@code{c-hungry-delete-forward})."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1954
msgid ""
"As an alternative to the above commands, you can enable @dfn{hungry delete "
"mode}.  When this feature is enabled (indicated by @samp{h} after a @samp{/} "
"in the mode line after the mode name), a single @kbd{@key{DEL}} deletes all "
"preceding whitespace, not just one space, and a single @kbd{C-d} (but "
"@emph{not} plain @kbd{@key{Delete}})  deletes all following whitespace."
msgstr ""

#. type: item
#: original_texis/programs.texi:1956
#, no-wrap
msgid "M-x c-toggle-hungry-state"
msgstr ""

#. type: findex
#: original_texis/programs.texi:1957
#, no-wrap
msgid "c-toggle-hungry-state"
msgstr ""

#. type: table
#: original_texis/programs.texi:1962
msgid ""
"Toggle the hungry-delete feature (@code{c-toggle-hungry-state}).  With a "
"prefix argument, this command turns the hungry-delete feature on if the "
"argument is positive, and off if it is negative."
msgstr ""

#. type: vindex
#: original_texis/programs.texi:1964
#, no-wrap
msgid "c-hungry-delete-key"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:1967
msgid ""
"The variable @code{c-hungry-delete-key} controls whether the hungry-delete "
"feature is enabled."
msgstr ""

#. type: subsection
#: original_texis/programs.texi:1969
#, no-wrap
msgid "Other Commands for C Mode"
msgstr ""

#. type: item
#: original_texis/programs.texi:1972
#, no-wrap
msgid "M-x c-context-line-break"
msgstr ""

#. type: findex
#: original_texis/programs.texi:1973
#, no-wrap
msgid "c-context-line-break"
msgstr ""

#. type: table
#: original_texis/programs.texi:1979
msgid ""
"This command inserts a line break and indents the new line in a manner "
"appropriate to the context.  In normal code, it does the work of "
"@kbd{@key{RET}} (@code{newline}), in a C preprocessor line it additionally "
"inserts a @samp{\\} at the line break, and within comments it's like "
"@kbd{M-j} (@code{c-indent-new-comment-line})."
msgstr ""

#. type: table
#: original_texis/programs.texi:1984
msgid ""
"@code{c-context-line-break} isn't bound to a key by default, but it needs a "
"binding to be useful.  The following code will bind it to @kbd{@key{RET}}.  "
"We use @code{c-initialization-hook} here to make sure the keymap is loaded "
"before we try to change it."
msgstr ""

#. type: example
#: original_texis/programs.texi:1990
#, no-wrap
msgid ""
"(defun my-bind-clb ()\n"
"  (keymap-set c-mode-base-map \"RET\"\n"
"              'c-context-line-break))\n"
"(add-hook 'c-initialization-hook 'my-bind-clb)\n"
msgstr ""

#. type: table
#: original_texis/programs.texi:1995
msgid ""
"Put mark at the end of a function definition, and put point at the beginning "
"(@code{c-mark-function})."
msgstr ""

#. type: item
#: original_texis/programs.texi:1996
#, no-wrap
msgid "M-q"
msgstr ""

#. type: kindex
#: original_texis/programs.texi:1997
#, no-wrap
msgid "M-q @r{(C mode)}"
msgstr ""

#. type: findex
#: original_texis/programs.texi:1998
#, no-wrap
msgid "c-fill-paragraph"
msgstr ""

#. type: table
#: original_texis/programs.texi:2003
msgid ""
"Fill a paragraph, handling C and C++ comments (@code{c-fill-paragraph}).  If "
"any part of the current line is a comment or within a comment, this command "
"fills the comment or the paragraph of it that point is in, preserving the "
"comment indentation and comment delimiters."
msgstr ""

#. type: item
#: original_texis/programs.texi:2004
#, no-wrap
msgid "C-c C-e"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:2005
#, no-wrap
msgid "macro expansion in C"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:2006
#, no-wrap
msgid "expansion of C macros"
msgstr ""

#. type: findex
#: original_texis/programs.texi:2007
#, no-wrap
msgid "c-macro-expand"
msgstr ""

#. type: kindex
#: original_texis/programs.texi:2008
#, no-wrap
msgid "C-c C-e @r{(C mode)}"
msgstr ""

#. type: table
#: original_texis/programs.texi:2014
msgid ""
"Run the C preprocessor on the text in the region, and show the result, which "
"includes the expansion of all the macro calls (@code{c-macro-expand}).  The "
"buffer text before the region is also included in preprocessing, for the "
"sake of macros defined there, but the output from this part isn't shown."
msgstr ""

#. type: table
#: original_texis/programs.texi:2018
msgid ""
"When you are debugging C code that uses macros, sometimes it is hard to "
"figure out precisely how the macros expand.  With this command, you don't "
"have to figure it out; you can see the expansions."
msgstr ""

#. type: item
#: original_texis/programs.texi:2019
#, no-wrap
msgid "C-c C-\\"
msgstr ""

#. type: findex
#: original_texis/programs.texi:2020
#, no-wrap
msgid "c-backslash-region"
msgstr ""

#. type: kindex
#: original_texis/programs.texi:2021
#, no-wrap
msgid "C-c C-\\ @r{(C mode)}"
msgstr ""

#. type: table
#: original_texis/programs.texi:2025
msgid ""
"Insert or align @samp{\\} characters at the ends of the lines of the region "
"(@code{c-backslash-region}).  This is useful after writing or editing a C "
"macro definition."
msgstr ""

#. type: table
#: original_texis/programs.texi:2030
msgid ""
"If a line already ends in @samp{\\}, this command adjusts the amount of "
"whitespace before it.  Otherwise, it inserts a new @samp{\\}.  However, the "
"last line in the region is treated specially; no @samp{\\} is inserted on "
"that line, and any @samp{\\} there is deleted."
msgstr ""

#. type: item
#: original_texis/programs.texi:2031
#, no-wrap
msgid "M-x cpp-highlight-buffer"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:2032
#, no-wrap
msgid "preprocessor highlighting"
msgstr ""

#. type: findex
#: original_texis/programs.texi:2033
#, no-wrap
msgid "cpp-highlight-buffer"
msgstr ""

#. type: table
#: original_texis/programs.texi:2040
msgid ""
"Highlight parts of the text according to its preprocessor conditionals.  "
"This command displays another buffer named @file{*CPP Edit*}, which serves "
"as a graphic menu for selecting how to display particular kinds of "
"conditionals and their contents.  After changing various settings, click on "
"@samp{[A]pply these settings} (or go to that buffer and type @kbd{a}) to "
"rehighlight the C mode buffer accordingly."
msgstr ""

#. type: item
#: original_texis/programs.texi:2041
#, no-wrap
msgid "C-c C-s"
msgstr ""

#. type: findex
#: original_texis/programs.texi:2042
#, no-wrap
msgid "c-show-syntactic-information"
msgstr ""

#. type: kindex
#: original_texis/programs.texi:2043
#, no-wrap
msgid "C-c C-s @r{(C mode)}"
msgstr ""

#. type: table
#: original_texis/programs.texi:2047
msgid ""
"Display the syntactic information about the current source line "
"(@code{c-show-syntactic-information}).  This information directs how the "
"line is indented."
msgstr ""

#. type: item
#: original_texis/programs.texi:2048
#, no-wrap
msgid "M-x cwarn-mode"
msgstr ""

#. type: itemx
#: original_texis/programs.texi:2049
#, no-wrap
msgid "M-x global-cwarn-mode"
msgstr ""

#. type: findex
#: original_texis/programs.texi:2050
#, no-wrap
msgid "cwarn-mode"
msgstr ""

#. type: vindex
#: original_texis/programs.texi:2051 original_texis/programs.texi:2052
#, no-wrap
msgid "global-cwarn-mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:2053
#, no-wrap
msgid "CWarn mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:2054
#, no-wrap
msgid "suspicious constructions in C, C++"
msgstr ""

#. type: table
#: original_texis/programs.texi:2056
msgid "CWarn minor mode highlights certain suspicious C and C++ constructions:"
msgstr ""

#. type: itemize
#: original_texis/programs.texi:2060
msgid "Assignments inside expressions."
msgstr ""

#. type: itemize
#: original_texis/programs.texi:2063
msgid ""
"Semicolon following immediately after @samp{if}, @samp{for}, and "
"@samp{while} (except after a @samp{do @dots{} while} statement);"
msgstr ""

#. type: itemize
#: original_texis/programs.texi:2065
msgid "C++ functions with reference parameters."
msgstr ""

#. type: table
#: original_texis/programs.texi:2073
msgid ""
"You can enable the mode for one buffer with the command @kbd{M-x "
"cwarn-mode}, or for all suitable buffers with the command @kbd{M-x "
"global-cwarn-mode} or by customizing the variable @code{global-cwarn-mode}.  "
"You must also enable Font Lock mode to make it work."
msgstr ""

#. type: item
#: original_texis/programs.texi:2074
#, no-wrap
msgid "M-x hide-ifdef-mode"
msgstr ""

#. type: findex
#: original_texis/programs.texi:2075
#, no-wrap
msgid "hide-ifdef-mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:2076
#, no-wrap
msgid "Hide-ifdef mode"
msgstr ""

#. type: vindex
#: original_texis/programs.texi:2077
#, no-wrap
msgid "hide-ifdef-shadow"
msgstr ""

#. type: table
#: original_texis/programs.texi:2084
msgid ""
"Hide-ifdef minor mode hides selected code within @samp{#if} and "
"@samp{#ifdef} preprocessor blocks.  If you change the variable "
"@code{hide-ifdef-shadow} to @code{t}, Hide-ifdef minor mode shadows "
"preprocessor blocks by displaying them with a less prominent face, instead "
"of hiding them entirely.  See the documentation string of "
"@code{hide-ifdef-mode} for more information."
msgstr ""

#. type: item
#: original_texis/programs.texi:2085
#, no-wrap
msgid "M-x ff-find-related-file"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:2086
#, no-wrap
msgid "related files"
msgstr ""

#. type: findex
#: original_texis/programs.texi:2087
#, no-wrap
msgid "ff-find-related-file"
msgstr ""

#. type: vindex
#: original_texis/programs.texi:2088
#, no-wrap
msgid "ff-related-file-alist"
msgstr ""

#. type: table
#: original_texis/programs.texi:2094
msgid ""
"Find a file related in a special way to the file visited by the current "
"buffer.  Typically this will be the header file corresponding to a C/C++ "
"source file, or vice versa.  The variable @code{ff-related-file-alist} "
"specifies how to compute related file names."
msgstr ""

#. type: cindex
#: original_texis/programs.texi:2099
#, no-wrap
msgid "Asm mode"
msgstr ""

#. type: cindex
#: original_texis/programs.texi:2100
#, no-wrap
msgid "assembler mode"
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:2103
msgid ""
"Asm mode is a major mode for editing files of assembler code.  It defines "
"these commands:"
msgstr ""

#. type: table
#: original_texis/programs.texi:2108
msgid "@code{tab-to-tab-stop}."
msgstr ""

#. type: item
#: original_texis/programs.texi:2109
#, no-wrap
msgid "C-j"
msgstr ""

#. type: table
#: original_texis/programs.texi:2111
msgid "Insert a newline and then indent using @code{tab-to-tab-stop}."
msgstr ""

#. type: item
#: original_texis/programs.texi:2112
#, no-wrap
msgid ":"
msgstr ""

#. type: table
#: original_texis/programs.texi:2115
msgid ""
"Insert a colon and then remove the indentation from before the label "
"preceding colon.  Then do @code{tab-to-tab-stop}."
msgstr ""

#. type: item
#: original_texis/programs.texi:2116
#, no-wrap
msgid ";"
msgstr ""

#. type: table
#: original_texis/programs.texi:2118
msgid "Insert or align a comment."
msgstr ""

#. type: Plain text
#: original_texis/programs.texi:2122
msgid ""
"The variable @code{asm-comment-char} specifies which character starts "
"comments in assembler syntax."
msgstr ""

#. type: include
#: original_texis/programs.texi:2124
#, no-wrap
msgid "fortran-xtra.texi"
msgstr ""
