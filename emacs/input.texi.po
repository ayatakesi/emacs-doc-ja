# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-02 00:54+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: node
#: original_texis/input.texi:4
#, no-wrap
msgid "Other Input Devices"
msgstr ""

#. type: appendix
#: original_texis/input.texi:5
#, no-wrap
msgid "Emacs and Unconventional Input Devices"
msgstr ""

#. type: cindex
#: original_texis/input.texi:6
#, no-wrap
msgid "other input devices"
msgstr ""

#. type: Plain text
#: original_texis/input.texi:11
msgid "Emacs was originally developed with the assumption that its users have access to a desktop computer or computer terminal, with a keyboard and perhaps a suitable pointing device such as a mouse."
msgstr ""

#. type: Plain text
#: original_texis/input.texi:16
msgid "However, recent developments in the X Window System and operating systems such as Android mean that this assumption no longer holds true.  Emacs supports input from various other kinds of input devices, which is detailed here."
msgstr ""

#. type: node
#: original_texis/input.texi:20 original_texis/input.texi:22
#, no-wrap
msgid "Touchscreens"
msgstr ""

#. type: menuentry
#: original_texis/input.texi:20
msgid "Using Emacs on touchscreens."
msgstr ""

#. type: node
#: original_texis/input.texi:20 original_texis/input.texi:99
#, no-wrap
msgid "On-Screen Keyboards"
msgstr ""

#. type: menuentry
#: original_texis/input.texi:20
msgid "Using Emacs with virtual keyboards."
msgstr ""

#. type: section
#: original_texis/input.texi:23
#, no-wrap
msgid "Using Emacs on Touchscreens"
msgstr ""

#. type: cindex
#: original_texis/input.texi:24
#, no-wrap
msgid "touchscreen input"
msgstr ""

#. type: Plain text
#: original_texis/input.texi:29
msgid "Touchscreen input works by pressing and moving tools (which include fingers and some pointing devices--styluses, for example) onto a frame in order to manipulate its contents."
msgstr ""

#. type: Plain text
#: original_texis/input.texi:33
msgid "When running under the X Window System or Android, Emacs automatically detects and maps the following sequences of movements (``gestures'') to common actions:"
msgstr ""

#. type: cindex
#: original_texis/input.texi:36
#, no-wrap
msgid "tapping, touchscreens"
msgstr ""

#. type: itemize
#: original_texis/input.texi:42
msgid "``Tapping'', briefly placing and lifting a tool from the display, will result in Emacs selecting the window that was tapped, and executing any command bound to @code{mouse-1} at that location in the window.  If the tap happened on top of a link (@pxref{Mouse References}), then Emacs will follow the link instead."
msgstr ""

#. type: itemize
#: original_texis/input.texi:45
msgid "If a command bound to @code{down-mouse-1} is bound to the location where the tap took place, Emacs will execute that command as well."
msgstr ""

#. type: cindex
#: original_texis/input.texi:47
#, no-wrap
msgid "scrolling, touchscreens"
msgstr ""

#. type: itemize
#: original_texis/input.texi:51
msgid "``Scrolling'', meaning to place a tool on the display and move it up or down, will result in Emacs scrolling the window contents in the direction where the tool moves."
msgstr ""

#. type: itemize
#: original_texis/input.texi:54
msgid "If the tool is moved left or right, Emacs additionally scrolls the window horizontally to follow (@pxref{Horizontal Scrolling}.)"
msgstr ""

#. type: cindex
#: original_texis/input.texi:56
#, no-wrap
msgid "dragging, touchscreens"
msgstr ""

#. type: cindex
#: original_texis/input.texi:57
#, no-wrap
msgid "long-press, touchscreens"
msgstr ""

#. type: itemize
#: original_texis/input.texi:63
msgid "``Dragging'', which is performing a @dfn{long-press} by placing a tool on the display and leaving it there for a while prior to moving the tool around will make Emacs set the point to where the tool was and begin selecting text under the tool as it moves around, as if @code{mouse-1} were to be held down.  @xref{Mouse Commands}."
msgstr ""

#. type: vindex
#: original_texis/input.texi:64
#, no-wrap
msgid "touch-screen-word-select"
msgstr ""

#. type: cindex
#: original_texis/input.texi:65
#, no-wrap
msgid "word selection mode, touchscreens"
msgstr ""

#. type: itemize
#: original_texis/input.texi:71
msgid "Some people find it difficult to position a tool accurately on a touch screen display, to the detriment of text selection.  The user option @code{touch-screen-word-select} enables ``word selection mode'', causing dragging to select the complete word, not only the character containing the position of the tool."
msgstr ""

#. type: vindex
#: original_texis/input.texi:72
#, no-wrap
msgid "touch-screen-extend-selection"
msgstr ""

#. type: cindex
#: original_texis/input.texi:73
#, no-wrap
msgid "extending the selection, touchscreens"
msgstr ""

#. type: itemize
#: original_texis/input.texi:80
msgid "Similarly, it may be difficult to select all of the text intended within a single gesture.  If the user option @code{touch-screen-extend-selection} is enabled, taps on the locations of the point or the mark within a window will begin a new ``drag'' gesture, where the region will be extended in the direction of any subsequent movement."
msgstr ""

#. type: vindex
#: original_texis/input.texi:81
#, no-wrap
msgid "touch-screen-preview-select"
msgstr ""

#. type: cindex
#: original_texis/input.texi:82
#, no-wrap
msgid "previewing the region during selection, touchscreens"
msgstr ""

#. type: itemize
#: original_texis/input.texi:91
msgid "Difficulties in making accurate adjustments to the region can also be alleviated by indicating the position of the point relative to its containing line within the echo area, since the window cursor may be physically obscured by the tool.  If @code{touch-screen-preview-select} is non-@code{nil}, the line containing point is displayed in the echo area (@pxref{Echo Area})  during the motion of the tool, followed by another line indicating the position of point within the first line."
msgstr ""

#. type: vindex
#: original_texis/input.texi:93
#, no-wrap
msgid "touch-screen-delay"
msgstr ""

#. type: Plain text
#: original_texis/input.texi:98
msgid "By default, Emacs considers a tool as having been left on the display long enough to trigger a ``long-press'' after 0.7 seconds, but this can be changed by customizing the variable @code{touch-screen-delay}."
msgstr ""

#. type: section
#: original_texis/input.texi:100
#, no-wrap
msgid "Using Emacs with Virtual Keyboards"
msgstr ""

#. type: cindex
#: original_texis/input.texi:101
#, no-wrap
msgid "virtual keyboards"
msgstr ""

#. type: cindex
#: original_texis/input.texi:102
#, no-wrap
msgid "on-screen keyboards"
msgstr ""

#. type: Plain text
#: original_texis/input.texi:111
msgid "When there is no physical keyboard attached to a system, the windowing system typically provides an on-screen keyboard, more often known as a ``virtual keyboard'', containing rows of clickable buttons that send keyboard input to the application, much like a real keyboard would.  This virtual keyboard is hidden by default, as it uses up valuable on-screen real estate, and must be opened once the program being used is ready to accept keyboard input."
msgstr ""

#. type: Plain text
#: original_texis/input.texi:116
msgid "Under the X Window System, the client that provides the on-screen keyboard typically detects when the application is ready to accept keyboard input through a set of complex heuristics, and automatically displays the keyboard when necessary."
msgstr ""

#. type: Plain text
#: original_texis/input.texi:121
msgid "On other systems such as Android, Emacs must tell the system when it is ready to accept keyboard input.  Typically, this is done in response to a touchscreen ``tap'' gesture (@pxref{Touchscreens}), or once to the minibuffer becomes in use (@pxref{Minibuffer}.)"
msgstr ""

#. type: vindex
#: original_texis/input.texi:122
#, no-wrap
msgid "touch-screen-set-point-commands"
msgstr ""

#. type: Plain text
#: original_texis/input.texi:129
msgid "When a ``tap'' gesture results in a command being executed, Emacs checks to see whether or not the command is supposed to set the point by looking for it in the list @code{touch-screen-set-point-commands}.  If it is, then Emacs looks up whether or not the text under the point is read-only; if not, it activates the on-screen keyboard, assuming that the user is about to enter text in to the current buffer."
msgstr ""

#. type: vindex
#: original_texis/input.texi:130
#, no-wrap
msgid "touch-screen-display-keyboard"
msgstr ""

#. type: Plain text
#: original_texis/input.texi:135
msgid "The user option @code{touch-screen-display-keyboard} forces Emacs to always display the on screen keyboard; it may also be set buffer locally, which means that Emacs should always display the keyboard when the buffer is selected."
msgstr ""

#. type: Plain text
#: original_texis/input.texi:139
msgid "Emacs also provides a set of functions to show or hide the on-screen keyboard.  For more details, @pxref{On-Screen Keyboards,,, elisp, The Emacs Lisp Reference Manual}."
msgstr ""

#. type: cindex
#: original_texis/input.texi:140
#, no-wrap
msgid "quitting, without a keyboard"
msgstr ""

#. type: Plain text
#: original_texis/input.texi:146
msgid "Since it may not be possible for Emacs to display the on screen keyboard while it is executing a command, Emacs implements a feature on devices with only an on-screen keyboard, by which two rapid clicks of a hardware button that is always present on the device results in Emacs quitting.  @xref{Quitting}."
msgstr ""

#. type: vindex
#: original_texis/input.texi:147
#, no-wrap
msgid "x-quit-keysym"
msgstr ""

#. type: Plain text
#: original_texis/input.texi:151
msgid "Which button is used to do this depends on the window system in use: on X, it is defined in the variable @code{x-quit-keysym}, and on Android, it is always the volume down button."
msgstr ""

#. type: cindex
#: original_texis/input.texi:152
#, no-wrap
msgid "text conversion, keyboards"
msgstr ""

#. type: Plain text
#: original_texis/input.texi:155
msgid "Most input methods designed to work with on-screen keyboards perform buffer edits differently from desktop input methods."
msgstr ""

#. type: Plain text
#: original_texis/input.texi:159
msgid "On a conventional desktop windowing system, an input method will simply display the contents of any on going character compositions on screen, and send the appropriate key events to Emacs after completion."
msgstr ""

#. type: Plain text
#: original_texis/input.texi:166
msgid "However, on screen keyboard input methods directly perform edits to the selected window of each frame; this is known as ``text conversion'', or ``string conversion'' under the X Window System.  Emacs enables these input methods whenever the buffer local value of @code{text-conversion-style} is non-@code{nil}, normally inside derivatives of @code{text-mode} and @code{prog-mode}."
msgstr ""

#. type: Plain text
#: original_texis/input.texi:173
msgid "Text conversion is performed asynchronously whenever Emacs receives a request to perform the conversion from the input method, and Emacs is not currently reading a key sequence for which one prefix key has already been read (@pxref{Keys}.)  After the conversion completes, a @code{text-conversion} event is sent.  @xref{Misc Events,,, elisp, the Emacs Reference Manual}."
msgstr ""

#. type: vindex
#: original_texis/input.texi:174
#, no-wrap
msgid "text-conversion-face"
msgstr ""

#. type: Plain text
#: original_texis/input.texi:179
msgid "If the input method needs to work on a region of the buffer, then the region becomes known as the ``composing region'' (or ``preconversion region''.)  The variable @code{text-conversion-face} describes whether or not to display the composing region in a specific face."
msgstr ""
