# Japanese translation of Emacs-25.2 editor manual
# Copyright (C) 2016 Free Software Foundation, Inc.
# This file is distributed under the same license as the Emacs package.
# Ayanokoji Takesi <ayanokoji.takesi@gmail.com>.
#
#, fuzzy
msgid ""
msgstr ""
"#-#-#-#-#  tmp.j1afqEIdoT (25.2)  #-#-#-#-#\n"
"Project-Id-Version: 25.2\n"
"POT-Creation-Date: 2018-05-26 23:36+0900\n"
"PO-Revision-Date: 2019-02-26 20:24+0900\n"
"Last-Translator: Ayanokoji Takesi <ayanokoji.takesi@gmail.com>\n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"#-#-#-#-#  tmp.des9L54FjK.translated (26.1)  #-#-#-#-#\n"
"Project-Id-Version: 26.1\n"
"POT-Creation-Date: 2018-05-26 23:36+0900\n"
"PO-Revision-Date: 2018-05-26 23:15+0900\n"
"Last-Translator: Ayanokoji Takesi <ayanokoji.takesi@gmail.com>\n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"#-#-#-#-#  tmp.cTrQWlRyhA.translated (26.1)  #-#-#-#-#\n"
"Project-Id-Version: 26.1\n"
"POT-Creation-Date: 2018-05-26 23:36+0900\n"
"PO-Revision-Date: 2018-05-26 23:15+0900\n"
"Last-Translator: Ayanokoji Takesi <ayanokoji.takesi@gmail.com>\n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: node
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:5
#, no-wrap
msgid "Files"
msgstr "Files"

#. type: chapter
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:6
#, no-wrap
msgid "File Handling"
msgstr "ファイルの処理"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:7
#, no-wrap
msgid "files"
msgstr "files"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:12
msgid "The operating system stores data permanently in named @dfn{files}, so most of the text you edit with Emacs comes from a file and is ultimately stored in a file."
msgstr "オペレーティングシステムは@dfn{ファイル}にデータを永続化するので、Emacsで編集するテキストの大部分はファイルから読み込んで、最終的にファイルに格納します。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:18
msgid "To edit a file, you must tell Emacs to read the file and prepare a buffer containing a copy of the file's text.  This is called @dfn{visiting} the file.  Editing commands apply directly to text in the buffer; that is, to the copy inside Emacs.  Your changes appear in the file itself only when you @dfn{save} the buffer back into the file."
msgstr "ファイルを編集するには、Emacsにファイルを読み込み、ファイルのテキストを含むバッファーを準備するよう、指示しなければなりません。これを、ファイルの@dfn{visit(訪問)}と呼びます。編集コマンドは直接バッファーのテキスト、つまりEmacs内部のコピーに適用されます。変更がファイルに反映されるのは、バッファーをファイルに@dfn{保存(save)}したときだけです。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:22
msgid "In addition to visiting and saving files, Emacs can delete, copy, rename, and append to files, keep multiple versions of them, and operate on file directories."
msgstr "ファイルのvisitや保存に加え、Emacsはファイルの削除、コピー、名前の変更、ファイルへの追加、ファイルの複数バージョンの保持、ディレクトリーの操作を行うことができます。"

#. type: section
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:28
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:47
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:48
#, no-wrap
msgid "File Names"
msgstr "File Names"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:28
msgid "How to type and edit file-name arguments."
msgstr "ファイル名引数をタイプ、編集する方法。"

#. type: node
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:28
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:907
#, no-wrap
msgid "Reverting"
msgstr "Reverting"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:28
msgid "Reverting cancels all the changes not saved."
msgstr "保存されていないすべての変更を取り消して前の状態に戻す。"

#. type: node
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:28
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:337
#, no-wrap
msgid "Saving"
msgstr "Saving"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:28
msgid "Saving makes your changes permanent."
msgstr "保存して変更を永続化する。"

#. type: node
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:28
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:132
#, no-wrap
msgid "Visiting"
msgstr "Visiting"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:28
msgid "Visiting a file prepares Emacs to edit the file."
msgstr "ファイルをvisitしてEmacsが編集する準備をする。"

#. type: ifnottex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:30
msgid "* Autorevert:: Auto Reverting non-file buffers."
msgstr "* Autorevert:: 非ファイルバッファーの自動リバートについて。"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:45
msgid "Accessing compressed files."
msgstr "圧縮されたファイルへのアクセス。"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:45
msgid "Accessing files on other machines."
msgstr "他のマシンにあるファイルへのアクセス。"

#. type: node
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:45
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1002
#, no-wrap
msgid "Auto Save"
msgstr "Auto Save"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:45
msgid "Auto Save periodically protects against loss of data."
msgstr "定期的な自動保存によりデータを失うことから守る。"

#. type: section
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:45
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1327
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1328
#, no-wrap
msgid "Comparing Files"
msgstr "Comparing Files"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:45
msgid "Completion against a list of files you often use."
msgstr "補完のための、よく使うファイルの一覧。"

#. type: node
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:45
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1723
#, no-wrap
msgid "Compressed Files"
msgstr "Compressed Files"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:45
msgid "Convenience Features for Finding Files."
msgstr "ファイルを探すための便利な機能。"

#. type: node
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:45
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1581
#, no-wrap
msgid "Copying and Naming"
msgstr "Copying and Naming"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:45
msgid "Copying, naming and renaming files."
msgstr "ファイルのコピー、命名、リネーム。"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:45
msgid "Creating, deleting, and listing file directories."
msgstr "ファイルディレクトリーの削除、作成、一覧。"

#. type: section
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:45
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1409
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1410
#, no-wrap
msgid "Diff Mode"
msgstr "Diff Mode"

#. type: node
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:45
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1247
#, no-wrap
msgid "Directories"
msgstr "Directories"

#. type: node
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:45
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1188
#, no-wrap
msgid "File Aliases"
msgstr "File Aliases"

#. type: section
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:45
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1748
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1749
#, no-wrap
msgid "File Archives"
msgstr "File Archives"

#. type: node
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:45
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2009
#, no-wrap
msgid "File Conveniences"
msgstr "File Conveniences"

#. type: section
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:45
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1966
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1967
#, no-wrap
msgid "File Name Cache"
msgstr "File Name Cache"

#. type: section
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:45
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2100
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2101
#, no-wrap
msgid "Filesets"
msgstr "Filesets"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:45
msgid "Finding where two files differ."
msgstr "2つのファイルの異なる部分を探す。"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:45
msgid "Handling multiple names for one file."
msgstr "1つのファイルにたいする複数の名前を処理する。"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:45
msgid "Handling sets of files."
msgstr "複数ファイルの処理。"

#. type: node
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:45
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1651
#, no-wrap
msgid "Misc File Ops"
msgstr "Misc File Ops"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:45
msgid "Mode for editing file differences."
msgstr "ファイルの異なる部分を編集するモード。"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:45
msgid "Operating on tar, zip, jar etc. archive files."
msgstr "tar、zip、jar、...などのアーカイブファイルにたいする操作。"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:45
msgid "Other things you can do on files."
msgstr "ファイルにたいして行うその他のコマンド。"

#. type: section
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:45
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1925
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1926
#, no-wrap
msgid "Quoted File Names"
msgstr "Quoted File Names"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:45
msgid "Quoting special characters in file names."
msgstr "ファイル名に含まれる特別な文字のクォート。"

#. type: section
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:45
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1826
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1827
#, no-wrap
msgid "Remote Files"
msgstr "Remote Files"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:49
#, no-wrap
msgid "file names"
msgstr "file names"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:51
#, no-wrap
msgid "default file name"
msgstr "default file name"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:54
msgid "Many Emacs commands that operate on a file require you to specify the file name, using the minibuffer (@pxref{Minibuffer File})."
msgstr "ファイルを操作するEmacsコマンドの多くは、ミニバッファー(@ref{Minibuffer File}を)を使って、ファイル名の指定を求めます。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:65
msgid "While in the minibuffer, you can use the usual completion and history commands (@pxref{Minibuffer}).  Note that file name completion ignores file names whose extensions appear in the variable @code{completion-ignored-extensions} (@pxref{Completion Options}).  Note also that most commands use permissive completion with confirmation for reading file names: you are allowed to submit a nonexistent file name, but if you type @key{RET} immediately after completing up to a nonexistent file name, Emacs prints @samp{[Confirm]} and you must type a second @key{RET} to confirm.  @xref{Completion Exit}, for details."
msgstr "ミニバッファーでは、通常の補完およびヒストリーコマンドを使うことができます(@ref{Minibuffer}を参照してください)。ファイル名の補完では、ファイル名の拡張子が変数@code{completion-ignored-extensions}に含まれているファイルは無視されます(@ref{Completion Options}を参照してください)。またほとんどのコマンドは、ファイルの読み込みにおいて、確認をともなう寛大な補完(permissive completion with confirmation)を使います。この補完では、存在しないファイル名が許されますが、存在しないファイル名の入力を完了するために@key{RET}をタイプすると、Emacsは@samp{[Confirm]}を表示し、この確認に同意するために2番目の@key{RET}をタイプしなければなりません。詳細については、@ref{Completion Exit}を参照してください。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:68
msgid "Minibuffer history commands offer some special features for reading file names, see @ref{Minibuffer History}."
msgstr "ミニバッファーのヒストリーコマンドは、ファイル名を読み取るための特別な機能をいくつか提供します。@ref{Minibuffer History}を参照してください。"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:69
#, no-wrap
msgid "default directory, of a buffer"
msgstr "default directory, of a buffer"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:70
#, no-wrap
msgid "default-directory"
msgstr "default-directory"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:80
msgid "Each buffer has a @dfn{default directory}, stored in the buffer-local variable @code{default-directory}.  Whenever Emacs reads a file name using the minibuffer, it usually inserts the default directory into the minibuffer as the initial contents.  You can inhibit this insertion by changing the variable @code{insert-default-directory} to @code{nil} (@pxref{Minibuffer File}).  Regardless, Emacs always assumes that any relative file name is relative to the default directory, e.g., entering a file name without a directory specifies a file in the default directory."
msgstr "それぞれのバッファーは、バッファーローカルな変数@code{default-directory}に、@dfn{デフォルトのディレクトリー}を格納しています。ミニバッファーを使ってファイル名を読み取るとき、通常Emacsはミニバッファーの初期内容として、デフォルトディレクトリーを挿入します。変数@code{insert-default-directory}を@code{nil}に変更することにより、この挿入を抑制できます。常にEmacsは任意の相対パスで指定されたファイル名を、デフォルトディレクトリーにたいする相対パスとみなします。たとえばディレクトリーを指定しないファイル名は、デフォルトディレクトリーのファイルを指定します。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:81
#, no-wrap
msgid "cd"
msgstr "cd"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:82
#, no-wrap
msgid "pwd"
msgstr "pwd"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:92
msgid "When you visit a file, Emacs sets @code{default-directory} in the visiting buffer to the directory of its file.  When you create a new buffer that is not visiting a file, via a command like @kbd{C-x b}, its default directory is usually copied from the buffer that was current at the time (@pxref{Select Buffer}).  You can use the command @kbd{M-x pwd} to see the value of @code{default-directory} in the current buffer.  The command @kbd{M-x cd} prompts for a directory's name, and sets the buffer's @code{default-directory} to that directory (doing this does not change the buffer's file name, if any)."
msgstr "ファイルをvisitするとき、Emacsはvisitしているバッファーの@code{default-directory}に、そのファイルのディレクトリーをセットします。@kbd{C-x b}のようなコマンドを通じて、ファイルをvisitしていないバッファーを新たに作成すると、通常そのバッファーのデフォルトディレクトリーは、現在のバッファーのデフォルトディレクトリーをコピーします。現在のバッファーの@code{default-directory}の値を見るために、@kbd{M-x pwd}コマンドを使用できます。@kbd{M-x cd}コマンドはディレクトリー名の入力を求め、バッファーの@code{default-directory}もそのディレクトリーをセットします(これを行うことによりバッファーのファイル名は変更されません)。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:100
msgid "As an example, when you visit the file @file{/u/rms/gnu/gnu.tasks}, the default directory is set to @file{/u/rms/gnu/}.  If you invoke a command that reads a file name, entering just @samp{foo} in the minibuffer, with a directory omitted, specifies the file @file{/u/rms/gnu/foo}; entering @samp{../.login} specifies @file{/u/rms/.login}; and entering @samp{new/foo} specifies @file{/u/rms/gnu/new/foo}."
msgstr "例として、ファイル@file{/u/rms/gnu/gnu.tasks}をvisitしているとします。このときデフォルトディレクトリーは@file{/u/rms/gnu/}にセットされます。ファイル名を読み取るコマンドを呼び出して、ミニバッファーでディレクトリー名を省略して単に@samp{foo}と入力すると、これはファイル@file{/u/rms/gnu/foo}を指定したことになります。@samp{../.login}と入力すると@file{/u/rms/.login}、@samp{new/foo}と入力すると@file{/u/rms/gnu/new/foo}を指定したことになります。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:105
msgid "When typing a file name into the minibuffer, you can make use of a couple of shortcuts: a double slash ignores everything before the second slash in the pair, and @samp{~/} is your home directory.  @xref{Minibuffer File}."
msgstr "ミニバッファーにファイル名をタイプするとき、2つのショートカットを使うことができます。2つのスラッシュは、2番目のスラッシュの前にあるすべてを無視します。そして@samp{~/}は、ユーザーのホームディレクトリーです。@ref{Minibuffer File}を参照してください。"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:106
#, no-wrap
msgid "environment variables in file names"
msgstr "environment variables in file names"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:107
#, no-wrap
msgid "expansion of environment variables"
msgstr "expansion of environment variables"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:108
#, no-wrap
msgid "@code{$} in file names"
msgstr "@code{$} in file names"

#. type: anchor{#1}
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:121
msgid "File Names with $"
msgstr "File Names with $"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:121
msgid "The character @samp{$} is used to substitute an environment variable into a file name.  The name of the environment variable consists of all the alphanumeric characters after the @samp{$}; alternatively, it can be enclosed in braces after the @samp{$}.  For example, if you have used the shell command @command{export FOO=rms/hacks} to set up an environment variable named @env{FOO}, then both @file{/u/$FOO/test.c} and @file{/u/$@{FOO@}/test.c} are abbreviations for @file{/u/rms/hacks/test.c}.  If the environment variable is not defined, no substitution occurs, so that the character @samp{$} stands for itself.  Note that environment variables set outside Emacs affect Emacs only if they are applied before Emacs is started."
msgstr "文字@samp{$}は、ファイル名を置き換える環境変数の代用として使われます。環境変数の名前は、@samp{$}の後ろのすべての英数字から構成されます。@samp{$}の後ろの、大カッコ(braces)に囲まれた変数名も使用できます。たとえばシェルコマンド@command{export FOO=rms/hacks}は、名前が@env{FOO}の環境変数をセットするために使われます。すると@file{/u/$FOO/test.c}と@file{/u/$@{FOO@}/test.c}はどちらも、@file{/u/rms/hacks/test.c}の省略形となります。環境変数が定義されていないときは、何の置き換えも発生せず、文字@samp{$}はそれ自身を意味します。Emacs外部でセットされた環境変数は、それがEmacsの開始前に適用されたときだけ、Emacsに影響を与えることに注意してください。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:128
msgid "To access a file with @samp{$} in its name, if the @samp{$} causes expansion, type @samp{$$}.  This pair is converted to a single @samp{$} at the same time that variable substitution is performed for a single @samp{$}.  Alternatively, quote the whole file name with @samp{/:} (@pxref{Quoted File Names}).  File names which begin with a literal @samp{~} should also be quoted with @samp{/:}."
msgstr "@samp{$}により環境変数が展開されるようなとき、名前に@samp{$}を含むファイルにアクセスする場合は、@samp{$$}とタイプします。1つの@samp{$}が環境変数を展開するのと同時に、2つのペアは1つの@samp{$}に変換されます。かわりにファイル名を@samp{/:}でクォートすることもできます(@ref{Quoted File Names}を参照してください)。名前が文字@samp{~}で始まるファイル名も、@samp{/:}でクォートするべきです。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:131
msgid "You can include non-@acronym{ASCII} characters in file names.  @xref{File Name Coding}."
msgstr "ファイル名に非@acronym{ASCII}文字を含めることができます。@ref{File Name Coding}を参照してください。"

#. type: section
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:133
#, no-wrap
msgid "Visiting Files"
msgstr "ファイルのvisit(訪問)"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:134
#, no-wrap
msgid "visiting files"
msgstr "visiting files"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:135
#, no-wrap
msgid "open file"
msgstr "open file"

#. type: kindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:138
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:162
#, no-wrap
msgid "C-x C-f"
msgstr "C-x C-f"

#. type: kindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:140
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:256
#, no-wrap
msgid "C-x C-r"
msgstr "C-x C-r"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:140
msgid "Visit a file (@code{find-file})."
msgstr "ファイルをvisitします(@code{find-file})。"

#. type: kindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:143
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:228
#, no-wrap
msgid "C-x C-v"
msgstr "C-x C-v"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:143
msgid "Visit a file for viewing, without allowing changes to it (@code{find-file-read-only})."
msgstr "変更を許さない閲覧用として、ファイルをvisitします(@code{find-file-read-only})。"

#. type: kindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:146
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:262
#, no-wrap
msgid "C-x 4 f"
msgstr "C-x 4 f"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:146
msgid "Visit a different file instead of the one visited last (@code{find-alternate-file})."
msgstr "最後にvisitしたファイルとは異なるファイルを、かわりにvisitします(@code{find-alternate-file})。"

#. type: kindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:149
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:272
#, no-wrap
msgid "C-x 5 f"
msgstr "C-x 5 f"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:149
msgid "Visit a file, in another window (@code{find-file-other-window}).  Don't alter what is displayed in the selected window."
msgstr "別のウィンドウでファイルをvisitします(@code{find-file-other-window})。選択されたウィンドウに表示されているものは変更しません。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:152
#, no-wrap
msgid "M-x find-file-literally"
msgstr "M-x find-file-literally"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:152
msgid "Visit a file, in a new frame (@code{find-file-other-frame}).  Don't alter what is displayed in the selected frame."
msgstr "新しいフレームでファイルをvisitします(@code{find-file-other-frame})。選択されたフレームに表示されているものは変更しません。"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:154
msgid "Visit a file with no conversion of the contents."
msgstr "内容を変換せずにファイルをvisitします。"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:156
#, no-wrap
msgid "files, visiting and saving"
msgstr "files, visiting and saving"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:157
#, no-wrap
msgid "saving files"
msgstr "saving files"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:161
msgid "@dfn{Visiting} a file means reading its contents into an Emacs buffer so you can edit them.  Emacs makes a new buffer for each file that you visit."
msgstr "ファイルを@dfn{Visiting(訪問)}するとは、そのファイル内容をEmacsのバッファーに読み込むことを意味するので、それを編集することができます。Emacsはvisitするファイルごとに、新しいバッファーを作成します。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:163
#, no-wrap
msgid "find-file"
msgstr "find-file"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:168
msgid "To visit a file, type @kbd{C-x C-f} (@code{find-file}) and use the minibuffer to enter the name of the desired file.  While in the minibuffer, you can abort the command by typing @kbd{C-g}.  @xref{File Names}, for details about entering file names into minibuffers."
msgstr "ファイルをvisitするには、@kbd{C-x C-f} (@code{find-file})とタイプして、visitしたいファイルの名前をミニバッファーで入力します。ミニバッファーでは、@kbd{C-g}をタイプして、コマンドを中止することができます。ミニバッファーでのファイル名の入力についての詳細は、@ref{File Names}を参照してください。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:182
msgid "If the specified file exists but the system does not allow you to read it, an error message is displayed in the echo area (on GNU and Unix systems you might be able to visit such a file using the @samp{su} or @samp{sudo} methods; @pxref{Remote Files}).  Otherwise, you can tell that @kbd{C-x C-f} has completed successfully by the appearance of new text on the screen, and by the buffer name shown in the mode line (@pxref{Mode Line}).  Emacs normally constructs the buffer name from the file name, omitting the directory name.  For example, a file named @file{/usr/rms/emacs.tex} is visited in a buffer named @samp{emacs.tex}.  If there is already a buffer with that name, Emacs constructs a unique name; the normal method is to add a suffix based on the directory name (e.g., @samp{<rms>}, @samp{<tmp>}, and so on), but you can select other methods.  @xref{Uniquify}."
msgstr "ファイルは存在するが、システムが読み込みを許さない場合、エコーエリアにエラーメッセージが表示されます(GNUおよびUnixシステムでは、@samp{su}や@samp{sudo}のような方法を使用して、そのようなファイルをvisitできるかもしれない。@ref{Remote Files}を参照されたい。) それ以外の場合、スクリーンに新しいテキストが表示され、モードラインバッファー名が表示されることで、@kbd{C-x C-f}が成功したことを知ることができます。通常Emacsは、ファイル名からディレクトリー名を省いて、バッファー名を作ります。たとえば@file{/usr/rms/emacs.tex}という名前のファイルは、バッファー名@samp{emacs.tex}となります。その名前のバッファーがすでにある場合、Emacsは一意な名前を作ります。通常の方法はディレクトリー名にもとづく接尾辞の追加です(たとえば@samp{<rms>}、@samp{<tmp>}など)が、違う方法を選択することもできます。@ref{Uniquify}を参照してください。"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:183
#, no-wrap
msgid "creating files"
msgstr "creating files"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:187
msgid "To create a new file, just visit it using the same command, @kbd{C-x C-f}.  Emacs displays @samp{(New file)} in the echo area, but in other respects behaves as if you had visited an existing empty file."
msgstr "新しいファイルを作成するには、同じコマンド@kbd{C-x C-f}を使ってvisitするだけです。Emacsはエコーエリアに@samp{(New file)}と表示しますが、他の点では既存の空のファイルをvisitしたのと同じく振る舞います。"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:188
#, no-wrap
msgid "modified (buffer)"
msgstr "modified (buffer)"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:196
msgid "After visiting a file, the changes you make with editing commands are made in the Emacs buffer.  They do not take effect in the visited file, until you @dfn{save} the buffer (@pxref{Saving}).  If a buffer contains changes that have not been saved, we say the buffer is @dfn{modified}.  This implies that some changes will be lost if the buffer is not saved.  The mode line displays two stars near the left margin to indicate that the buffer is modified."
msgstr "ファイルをvisitした後で編集コマンドにより行われた変更は、Emacsのバッファーに反映されます。バッファーを@dfn{保存(save)}するまでは、visitしているファイルに影響はありません。バッファーが保存されていない変更を含むとき、そのバッファーが@dfn{変更されている(modified)}といいます。これはバッファーを保存しなければ、その変更が失われることを意味します。モードラインの左余白の近くに2つのアスタリスクが表示され、バッファーが変更されていることを示します。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:201
msgid "If you visit a file that is already in Emacs, @kbd{C-x C-f} switches to the existing buffer instead of making another copy.  Before doing so, it checks whether the file has changed since you last visited or saved it.  If the file has changed, Emacs offers to reread it."
msgstr "すでにEmacsがvisitしているファイルをvisitした場合、@kbd{C-x C-f}は他のコピーを作らず既存のバッファーに切り替えます。切り替えを行う前に、最後にvisitまたは保存した後にファイルが変更されているか確認します。もしファイルが変更されているとき、Emacsはそれの再読み込みを提案します。"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:202
#, no-wrap
msgid "large-file-warning-threshold"
msgstr "large-file-warning-threshold"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:203
#, no-wrap
msgid "file, warning when size is large"
msgstr "file, warning when size is large"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:204
#, no-wrap
msgid "size of file, warning when visiting"
msgstr "size of file, warning when visiting"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:205
#, no-wrap
msgid "maximum buffer size exceeded, error message"
msgstr "maximum buffer size exceeded, error message"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:215
msgid "If you try to visit a file larger than @code{large-file-warning-threshold} (the default is 10000000, which is about 10 megabytes), Emacs asks you for confirmation first.  You can answer @kbd{y} to proceed with visiting the file.  Note, however, that Emacs cannot visit files that are larger than the maximum Emacs buffer size, which is limited by the amount of memory Emacs can allocate and by the integers that Emacs can represent (@pxref{Buffers}).  If you try, Emacs displays an error message saying that the maximum buffer size has been exceeded."
msgstr "@code{large-file-warning-threshold} (デフォルトは10000000で、これは約10MB)より大きなファイルのvisitを試みると、Emacsは最初に確認を求めます。@kbd{y}を応えることにより、ファイルのvisitを続けます。しかしEmacsは、Emacsバッファーの最大サイズ(Emacsが割り当てられるメモリー量の制限と、Emacsが扱える整数により制限されます)を超えるバッファーは、visitできないことに注意してください。この場合、Emacsは最大バッファーサイズを超えた旨を知らせるエラーメッセージを表示します。"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:216
#, no-wrap
msgid "wildcard characters in file names"
msgstr "wildcard characters in file names"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:217
#, no-wrap
msgid "find-file-wildcards"
msgstr "find-file-wildcards"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:227
msgid "If the file name you specify contains shell-style wildcard characters, Emacs visits all the files that match it.  (On case-insensitive filesystems, Emacs matches the wildcards disregarding the letter case.)  Wildcards include @samp{?}, @samp{*}, and @samp{[@dots{}]} sequences.  To enter the wild card @samp{?} in a file name in the minibuffer, you need to type @kbd{C-q ?}.  @xref{Quoted File Names}, for information on how to visit a file whose name actually contains wildcard characters.  You can disable the wildcard feature by customizing @code{find-file-wildcards}."
msgstr "ファイル名にシェル形式のワイルドカード文字が含まれている場合、Emacsはそれにマッチするすべてのファイルをvisitします。(大文字小文字を区別しないファイルシステムでは、Emacsは大文字小文字に関係なくワイルドカードをマッチします)。ワイルドカードには@samp{?}、@samp{*}および@samp{[@dots{}]}シーケンスが含まれます。ミニバッファーでワイルドカード@samp{?}をファイル名に入力するには、@kbd{C-q ?}とタイプする必要があります。ワイルドカード文字を実際に名前に含むファイルをvisitする方法についての情報は、@ref{Quoted File Names}を参照してください。@code{find-file-wildcards}をカスタマイズして、ワイルドカード機能を無効にすることができます。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:229
#, no-wrap
msgid "find-alternate-file"
msgstr "find-alternate-file"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:238
msgid "If you visit the wrong file unintentionally by typing its name incorrectly, type @kbd{C-x C-v} (@code{find-alternate-file}) to visit the file you really wanted.  @kbd{C-x C-v} is similar to @kbd{C-x C-f}, but it kills the current buffer (after first offering to save it if it is modified).  When @kbd{C-x C-v} reads the file name to visit, it inserts the entire default file name in the buffer, with point just after the directory part; this is convenient if you made a slight error in typing the name."
msgstr "無意識に間違ったファイル名をタイプして違うファイルをvisitした場合、@kbd{C-x C-v} (@code{find-alternate-file})で実際に望むファイルをvisitできます。@kbd{C-x C-v}は@kbd{C-x C-f}と似ていますが、これは現在のバッファーをkillします(変更されている場合は最初に保存するか確認を求めます)。@kbd{C-x C-v}がvisitするファイルの名前を読み取るときは、ミニバッファーにデフォルトのファイル名全体を挿入して、ポイントをディレクトリー名の後に置きます。これは名前を少し間違えた場合などに便利です。"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:239
#, no-wrap
msgid "find-file-run-dired"
msgstr "find-file-run-dired"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:244
msgid "If you visit a file that is actually a directory, Emacs invokes Dired, the Emacs directory browser.  @xref{Dired}.  You can disable this behavior by setting the variable @code{find-file-run-dired} to @code{nil}; in that case, it is an error to try to visit a directory."
msgstr "実際はディレクトリーであるファイルをvisitしたとき、EmacsはEmacsのディレクトリーブラウザーのDiredを呼び出します。@ref{Dired}を参照してください。この振る舞いは、変数@code{find-file-run-dired}を@code{nil}にセットすることにより無効にできます。この場合、ディレクトリーをvisitするとエラーになります。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:249
msgid "Files which are actually collections of other files, or @dfn{file archives}, are visited in special modes which invoke a Dired-like environment to allow operations on archive members.  @xref{File Archives}, for more about these features."
msgstr "実際には他のファイルの集まりであるような@dfn{アーカイブファイル(file archives)}の場合、アーカイブされたメンバーを操作できる、Diredに似た環境を呼び出す特別なモードでvisitします。これらの機能については、@ref{File Archives}を参照してください。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:255
msgid "If you visit a file that the operating system won't let you modify, or that is marked read-only, Emacs makes the buffer read-only too, so that you won't go ahead and make changes that you'll have trouble saving afterward.  You can make the buffer writable with @kbd{C-x C-q} (@code{read-only-mode}).  @xref{Misc Buffer}."
msgstr "オペレーティングシステムが変更を許していない、または読み取り専用にしているファイルをvisitした場合、Emacsもバッファーを読み取り専用にするので、保存すると問題を起こすような変更を防ぐことができます。@kbd{C-x C-q} (@code{read-only-mode})で、バッファーを書き込み可能にできます。@ref{Misc Buffer}を参照してください。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:257
#, no-wrap
msgid "find-file-read-only"
msgstr "find-file-read-only"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:261
msgid "If you want to visit a file as read-only in order to protect yourself from entering changes accidentally, visit it with the command @kbd{C-x C-r} (@code{find-file-read-only}) instead of @kbd{C-x C-f}."
msgstr "予期せぬ入力による変更を防ぐために、読み込み専用でファイルをvisitしたい場合は、@kbd{C-x C-f}のかわりにコマンド@kbd{C-x C-r} (@code{find-file-read-only})でvisitします。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:263
#, no-wrap
msgid "find-file-other-window"
msgstr "find-file-other-window"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:271
msgid "@kbd{C-x 4 f} (@code{find-file-other-window}) is like @kbd{C-x C-f} except that the buffer containing the specified file is selected in another window.  The window that was selected before @kbd{C-x 4 f} continues to show the same buffer it was already showing.  If this command is used when only one window is being displayed, that window is split in two, with one window showing the same buffer as before, and the other one showing the newly requested file.  @xref{Windows}."
msgstr "@kbd{C-x 4 f} (@code{find-file-other-window})は@kbd{C-x C-f}と同様ですが、指定したファイルを含むバッファーは、別のウィンドウで選択されます。@kbd{C-x 4 f}の前に選択されていたウィンドウは、すでに表示していたのと同じバッファーの表示を続けます。1つのウィンドウしか表示されていないときにこのコマンドを使うと、これはウィンドウを2つに分割し、1つのウィンドウには前に表示されていたのと同じバッファー、別の1つには新しい要求されたファイルを表示します。@ref{Windows}を参照してください。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:273
#, no-wrap
msgid "find-file-other-frame"
msgstr "find-file-other-frame"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:277
msgid "@kbd{C-x 5 f} (@code{find-file-other-frame}) is similar, but opens a new frame, or selects any existing frame showing the specified file.  @xref{Frames}."
msgstr "@kbd{C-x 5 f} (@code{find-file-other-frame})も同様ですが、新しいフレームををオープンするか、指定したファイルをすでに表示している既存のフレームを選択します。@ref{Frames}を参照してください。"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:278
#, no-wrap
msgid "file selection dialog"
msgstr "file selection dialog"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:287
msgid "On graphical displays, there are two additional methods for visiting files.  Firstly, when Emacs is built with a suitable GUI toolkit, commands invoked with the mouse (by clicking on the menu bar or tool bar) use the toolkit's standard file selection dialog instead of prompting for the file name in the minibuffer.  On GNU/Linux and Unix platforms, Emacs does this when built with GTK+, LessTif, and Motif toolkits; on MS-Windows and Mac, the GUI version does that by default.  For information on how to customize this, see @ref{Dialog Boxes}."
msgstr "グラフィカルなディスプレーでは、ファイルをvisitする追加の方法が２つあります。1つ目は、Emacsが適したGUIツールキットによりビルドされているとき、マウスによるコマンドの呼び出し(メニューバーやツールバーのクリックによる)は、ミニバッファーでファイル名の入力を求める代わりに、そのツールキット標準のファイル選択(file selection)ダイアログを表示します。GNU/LinuxおよびUnixプラットフォームでは、GTK+、LessTif、Motifツールキットとともに構築されていると、Emacsはこれを行います。MS-WindowsとMacでは、GUIバージョンのデフォルトにより行われます。これをカスタマイズする情報については、@ref{Dialog Boxes}を参照してください。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:293
msgid "Secondly, Emacs supports drag and drop: dropping a file into an ordinary Emacs window visits the file using that window.  As an exception, dropping a file into a window displaying a Dired buffer moves or copies the file into the displayed directory.  For details, see @ref{Drag and Drop}, and @ref{Misc Dired Features}."
msgstr "2つ目は、Emacsはのドラッグアンドドロップ(drag and drop)サポートで、通常のEmacsウィンドウにファイルをドロップすることにより、そのウィンドウでファイルをvisitします。例外としてDiredバッファーを表示しているウィンドウにファイルをドロップすると、表示されているディレクトリーにファイルを移動またはコピーします。詳細については@ref{Drag and Drop}と@ref{Misc Dired Features}を参照してください。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:298
msgid "On text-mode terminals and on graphical displays when Emacs was built without a GUI toolkit, you can visit files via the menu-bar @samp{File} menu, which has the @samp{Visit New File} and the @samp{Open File} items."
msgstr "テキスト端末、およびGUIツールキットなしでビルドされているグラフィカルなディスプレーでは、アイテム@samp{Visit New File}と@samp{Open File}をもつメニューバーの@samp{File}メニューから、、ファイルをvisitできます。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:305
msgid "Each time you visit a file, Emacs automatically scans its contents to detect what character encoding and end-of-line convention it uses, and converts these to Emacs's internal encoding and end-of-line convention within the buffer.  When you save the buffer, Emacs performs the inverse conversion, writing the file to disk with its original encoding and end-of-line convention.  @xref{Coding Systems}."
msgstr "文字エンコーディングと使用されている改行規則を検知するために、Emacsは自動的に内容をスキャンします。そして、それらをEmacsの内部エンコーディングとバッファーの改行規則に変換します。バッファーを保存するとき、Emacsは逆の変換を行い、元のエンコーディングと改行規則でファイルをディスクに書き込みます。@ref{Coding Systems}を参照してください。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:306
#, no-wrap
msgid "find-file-literally"
msgstr "find-file-literally"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:317
msgid "If you wish to edit a file as a sequence of @acronym{ASCII} characters with no special encoding or conversion, use the @kbd{M-x find-file-literally} command.  This visits a file, like @kbd{C-x C-f}, but does not do format conversion (@pxref{Format Conversion,, Format Conversion, elisp, the Emacs Lisp Reference Manual}), character code conversion (@pxref{Coding Systems}), or automatic uncompression (@pxref{Compressed Files}), and does not add a final newline because of @code{require-final-newline} (@pxref{Customize Save}).  If you have already visited the same file in the usual (non-literal) manner, this command asks you whether to visit it literally instead."
msgstr "ファイルにたいして特別なエンコーディングや変換を行わずに、非@acronym{ASCII}文字のシーケンスとして編集したいときは、@kbd{M-x find-file-literally}コマンドを使います。これは@kbd{C-x C-f}と同様ですが、フォーマット変換(@ref{Format Conversion,, Format Conversion, elisp, the Emacs Lisp Reference Manual}を参照してください)、文字コード変換(@ref{Coding Systems}を参照してください)、自動解凍(@ref{Compressed Files}を参照してください)を行わず、@code{require-final-newline}による最後の改行も追加しません(@ref{Customize Save}を参照してください)。同じファイルをすでに通常(非リテラル)の方法でvisitしている場合、このコマンドはそれをリテラル(そのままの文字の列)としてvisitするかを尋ねます。"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:318
#, no-wrap
msgid "find-file-hook"
msgstr "find-file-hook"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:319
#, no-wrap
msgid "find-file-not-found-functions"
msgstr "find-file-not-found-functions"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:327
msgid "Two special hook variables allow extensions to modify the operation of visiting files.  Visiting a file that does not exist runs the functions in @code{find-file-not-found-functions}; this variable holds a list of functions, which are called one by one (with no arguments)  until one of them returns non-@code{nil}.  This is not a normal hook, and the name ends in @samp{-functions} rather than @samp{-hook} to indicate that fact."
msgstr "2つの特別なフック変数により、ファイルをvisitする操作を変更して拡張することができます。存在しないファイルをvisitすることにより、@code{find-file-not-found-functions}の関数が実行されます。この変数は関数のリストを保有し、それらはどれか1つが非@code{nil}を返すまで、(引数を指定せずに)1つずつ呼び出されます。これはノーマルフックではないため、その事実を示すために名前の最後が@samp{-hook}ではなく、@samp{-functions}で終わっています。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:332
msgid "Successful visiting of any file, whether existing or not, calls the functions in @code{find-file-hook}, with no arguments.  This variable is a normal hook.  In the case of a nonexistent file, the @code{find-file-not-found-functions} are run first.  @xref{Hooks}."
msgstr "ファイルが存在するしないにかかわらず、ファイルをvisitするのに成功すると、引数なしで関数@code{find-file-hook}を呼び出します。この変数はノーマルフックです。ファイルが存在しない場合、最初に@code{find-file-not-found-functions}を実行します。@ref{Hooks}を参照してください。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:336
msgid "There are several ways to specify automatically the major mode for editing the file (@pxref{Choosing Modes}), and to specify local variables defined for that file (@pxref{File Variables})."
msgstr "ファイルを編集するために自動的にメジャーモードを指定し(@ref{Choosing Modes}を参照してください)、そのファイルのために特別なローカル変数を定義する方法がいくつかあります(@ref{File Variables}を参照してください)。"

#. type: section
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:338
#, no-wrap
msgid "Saving Files"
msgstr "ファイルの保存"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:342
msgid "@dfn{Saving} a buffer in Emacs means writing its contents back into the file that was visited in the buffer."
msgstr "Emacsでのバッファーの@dfn{保存(Saving)}は、バッファーの内容を、そのバッファーによりvisitされているファイルに書き戻すことを意味します。"

#. type: node
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:351
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:483
#, no-wrap
msgid "Backup"
msgstr "Backup"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:351
msgid "Commands for saving files."
msgstr "ファイルを保存するコマンドについて。"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:351
msgid "Copying files to ``shadows'' automatically."
msgstr "ファイルを自動的に``shadows''コピーする。"

#. type: node
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:351
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:704
#, no-wrap
msgid "Customize Save"
msgstr "Customize Save"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:351
msgid "Customizing the saving of files."
msgstr "ファイルの保存のカスタマイズ。"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:351
msgid "Emacs can update time stamps on saved files."
msgstr "Emacsによる保存されたファイルのタイムスタンプの更新。"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:351
msgid "How Emacs protects against simultaneous editing of one file by two users."
msgstr "Emacsが2人のユーザーによる1つのファイルへの同時編集から保護する方法。"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:351
msgid "How Emacs saves the old version of your file."
msgstr "Emacsがファイルの古いバージョンを保存する方法。"

#. type: node
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:351
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:750
#, no-wrap
msgid "Interlocking"
msgstr "Interlocking"

#. type: node
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:351
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:353
#, no-wrap
msgid "Save Commands"
msgstr "Save Commands"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:351
msgid "Shadowing: File Shadowing"
msgstr "Shadowing: File Shadowing"

#. type: node
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:351
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:875
#, no-wrap
msgid "Time Stamps"
msgstr "Time Stamps"

#. type: subsection
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:354
#, no-wrap
msgid "Commands for Saving Files"
msgstr "ファイルを保存するコマンド"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:357
msgid "These are the commands that relate to saving and writing files."
msgstr "ファイルの保存と書き込みに関するコマンドが、いくつかあります。"

#. type: kindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:359
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:372
#, no-wrap
msgid "C-x C-s"
msgstr "C-x C-s"

#. type: kindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:361
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:395
#, no-wrap
msgid "C-x s"
msgstr "C-x s"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:361
msgid "Save the current buffer to its file (@code{save-buffer})."
msgstr "現在のバッファーを、そのファイルに保存します(@code{save-buffer})。"

#. type: kindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:363
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:435
#, no-wrap
msgid "M-~"
msgstr "M-~"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:363
msgid "Save any or all buffers to their files (@code{save-some-buffers})."
msgstr "任意、またはすべてのバッファーを、それらのファイルに保存します(@code{save-some-buffers})。"

#. type: kindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:366
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:461
#, no-wrap
msgid "C-x C-w"
msgstr "C-x C-w"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:366
msgid "Forget that the current buffer has been changed (@code{not-modified}).  With prefix argument (@kbd{C-u}), mark the current buffer as changed."
msgstr "現在のバッファーが変更されたことを忘れます(@code{not-modified})。プレフィクス引数(@kbd{C-u})を指定すると、現在のバッファーを変更済みとマークします。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:368
#, no-wrap
msgid "M-x set-visited-file-name"
msgstr "M-x set-visited-file-name"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:368
msgid "Save the current buffer with a specified file name (@code{write-file})."
msgstr "現在のバッファーを、指定したファイル名で保存します(@code{write-file})。"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:370
msgid "Change the file name under which the current buffer will be saved."
msgstr "現在のバッファーが保存される場所で、ファイル名を変更します。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:373
#, no-wrap
msgid "save-buffer"
msgstr "save-buffer"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:377
msgid "When you wish to save the file and make your changes permanent, type @kbd{C-x C-s} (@code{save-buffer}).  After saving is finished, @kbd{C-x C-s} displays a message like this:"
msgstr "ファイルを保存して変更を永続化させたいときは、@kbd{C-x C-s} (@code{save-buffer})とタイプします。保存が完了すると、@kbd{C-x C-s}は以下のようなメッセージを表示します:"

#. type: example
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:380
#, no-wrap
msgid "Wrote /u/rms/gnu/gnu.tasks\n"
msgstr "Wrote /u/rms/gnu/gnu.tasks\n"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:387
msgid "If the current buffer is not modified (no changes have been made in it since the buffer was created or last saved), saving is not really done, because it would have no effect.  Instead, @kbd{C-x C-s} displays a message like this in the echo area:"
msgstr "現在のバッファーが変更されていない(新規作成されたとき、または最後に変更されたときから変更していない)場合、保存しても意味がないので実際の保存は行われません。かわりに@kbd{C-x C-s}は、エコーエリアに以下のようなメッセージを表示します:"

#. type: example
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:390
#, no-wrap
msgid "(No changes need to be saved)\n"
msgstr "(No changes need to be saved)\n"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:394
msgid "With a prefix argument, @kbd{C-u C-x C-s}, Emacs also marks the buffer to be backed up when the next save is done.  @xref{Backup}."
msgstr "@kbd{C-u C-x C-s}のようにプレフィクス引数を指定すると、Emacsはそのバッファーを次回の保存が行われるときバックアップするようマークします。@ref{Backup}を参照してください。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:396
#, no-wrap
msgid "save-some-buffers"
msgstr "save-some-buffers"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:400
msgid "The command @kbd{C-x s} (@code{save-some-buffers}) offers to save any or all modified buffers.  It asks you what to do with each buffer.  The possible responses are analogous to those of @code{query-replace}:"
msgstr "コマンド@kbd{C-x s} (@code{save-some-buffers})は、任意、またはすべての変更されたバッファーの保存を提案します。これはバッファーごとに何を行うか尋ねます。使用できる応答は、@code{query-replace}と同様です。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:402
#, no-wrap
msgid "y"
msgstr "y"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:404
msgid "Save this buffer and ask about the rest of the buffers."
msgstr "このバッファーを保存し、残りのバッファーについて尋ねます。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:404
#, no-wrap
msgid "n"
msgstr "n"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:406
#, no-wrap
msgid "!"
msgstr "!"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:406
msgid "Don't save this buffer, but ask about the rest of the buffers."
msgstr "このバッファーは保存せずに、残りのバッファーについて尋ねます。"

#. type: key{#1}
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:409
#, no-wrap
msgid "RET"
msgstr "RET"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:409
msgid "Save this buffer and all the rest with no more questions."
msgstr "このバッファーを保存し、残りのバッファーを尋ねることなくすべて保存します。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:411
#, no-wrap
msgid "."
msgstr "."

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:411
msgid "Terminate @code{save-some-buffers} without any more saving."
msgstr "これ以上の保存をせずに、@code{save-some-buffers}を終了します。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:414
#, no-wrap
msgid "C-r"
msgstr "C-r"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:414
msgid "Save this buffer, then exit @code{save-some-buffers} without even asking about other buffers."
msgstr "このバッファーを保存したら、他のバッファーをどうするか尋ねることなく、@code{save-some-buffers}を終了します。"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:418
msgid "View the buffer that you are currently being asked about.  When you exit View mode, you get back to @code{save-some-buffers}, which asks the question again."
msgstr "現在尋ねられているバッファーを閲覧します。Viewモードから抜けると、再び@code{save-some-buffers}はどうするか尋ねます。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:418
#, no-wrap
msgid "d"
msgstr "d"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:422
#, no-wrap
msgid "C-h"
msgstr "C-h"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:422
msgid "Diff the buffer against its corresponding file, so you can see what changes you would be saving.  This calls the command @code{diff-buffer-with-file} (@pxref{Comparing Files})."
msgstr "そのバッファーに対応するファイルとDiffをとり、どのような変更を保存するのか確認できます。これはコマンド@code{diff-buffer-with-file} (@ref{Comparing Files}を参照してください)を呼び出します。"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:424
msgid "Display a help message about these options."
msgstr "これらのオプションについての、ヘルプメッセージを表示します。"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:427
#, no-wrap
msgid "save-some-buffers-default-predicate"
msgstr "save-some-buffers-default-predicate"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:431
msgid "You can customize the value of @code{save-some-buffers-default-predicate} to control which buffers Emacs will ask about."
msgstr "@code{save-some-buffers-default-predicate}の値をカスタマイズして、どのバッファーにたいしてEmacsが問い合わせるか制御できます。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:434
msgid "@kbd{C-x C-c}, the key sequence to exit Emacs, invokes @code{save-some-buffers} and therefore asks the same questions."
msgstr "Emacsを終了するキーシーケンス@kbd{C-x C-c}は、@code{save-some-buffers}を呼び出すので、同じ質問をします。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:436
#, no-wrap
msgid "not-modified"
msgstr "not-modified"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:450
msgid "If you have changed a buffer but do not wish to save the changes, you should take some action to prevent it.  Otherwise, each time you use @kbd{C-x s} or @kbd{C-x C-c}, you are liable to save this buffer by mistake.  One thing you can do is type @kbd{M-~} (@code{not-modified}), which clears out the indication that the buffer is modified.  If you do this, none of the save commands will believe that the buffer needs to be saved.  (@samp{~} is often used as a mathematical symbol for ``not''; thus @kbd{M-~} is ``not'', metafied.)  Alternatively, you can cancel all the changes made since the file was visited or saved, by reading the text from the file again.  This is called @dfn{reverting}.  @xref{Reverting}.  (You could also undo all the changes by repeating the undo command @kbd{C-x u} until you have undone all the changes; but reverting is easier.)"
msgstr "バッファーを変更したが変更を保存したくないとき、保存されるのを防ぐためにできることがいくつかあります(それ以外の@kbd{C-x s}または@kbd{C-x C-c}で間違って保存してしまうのはあなたの責任です)。まずできることは、@kbd{M-~} (@code{not-modified})とタイプすることで、これはバッファーが変更されているというマークをクリアーします。これを行うと、保存コマンドに、バッファーが保存を必要しないと信じこませることができます(@samp{~}は数学のシンボルで、``not(否定)''として使われることがあります。したがって@kbd{M-~}はメタと``not''になります。)。かわりにファイルからテキストを読み込むことにより、ファイルをvisitまたは保存された後に行った、すべての変更を取り消すことができます。これは@dfn{リバート(reverting: 復元)}と呼ばれます。@ref{Reverting}を参照してください(undoコマンド@kbd{C-x u}を繰り返すことにより、変更がすべての変更を取り消すこともできますが、リバートの方が簡単です)。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:451
#, no-wrap
msgid "set-visited-file-name"
msgstr "set-visited-file-name"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:460
msgid "@kbd{M-x set-visited-file-name} alters the name of the file that the current buffer is visiting.  It reads the new file name using the minibuffer.  Then it marks the buffer as visiting that file name, and changes the buffer name correspondingly.  @code{set-visited-file-name} does not save the buffer in the newly visited file; it just alters the records inside Emacs in case you do save later.  It also marks the buffer as modified so that @kbd{C-x C-s} in that buffer @emph{will} save."
msgstr "@kbd{M-x set-visited-file-name}は、現在のバッファーがvisitしているファイルの名前を変更します。このコマンドはミニバッファーを使って、新しいファイル名を読み取ります。その後に、そのバッファーがそのファイル名のファイルをvisitしているとマークし、バッファー名も合わせて変更します。@code{set-visited-file-name}は、新しくvisitするファイルへの保存はしません。これは後で保存するときのために、Emacs内のレコードを変更するだけです。これはバッファーを変更されている(modified)とマークするので、そのバッファーでの@emph{将来}の@kbd{C-x C-s}で、保存が行われます。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:462
#, no-wrap
msgid "write-file"
msgstr "write-file"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:472
msgid "If you wish to mark the buffer as visiting a different file and save it right away, use @kbd{C-x C-w} (@code{write-file}).  This is equivalent to @code{set-visited-file-name} followed by @kbd{C-x C-s}, except that @kbd{C-x C-w} asks for confirmation if the file exists.  @kbd{C-x C-s} used on a buffer that is not visiting a file has the same effect as @kbd{C-x C-w}; that is, it reads a file name, marks the buffer as visiting that file, and saves it there.  The default file name in a buffer that is not visiting a file is made by combining the buffer name with the buffer's default directory (@pxref{File Names})."
msgstr "バッファーにたいして、違うファイルをvisitしているとマークしてすぐに保存したい場合は、@kbd{C-x C-w} (@code{write-file})を使います。このコマンドは、@code{set-visited-file-name}の後すぐに@kbd{C-x C-s}をするのと同じですが、@kbd{C-x C-w}はファイルが存在するとき確認を求める点が異なります。ファイルをvisitしていないバッファーでの@kbd{C-x C-s}は、@kbd{C-x C-w}と同じ効果をもちます。したがってファイル名を読み取り、バッファーがそのファイルをvisitしているとマークした後、バッファー内容をそのファイルに保存します。ファイルをvisitしていないバッファーのデフォルトファイル名は、バッファー名と、バッファーのデフォルトディレクトリーから合成されます(@ref{File Names}を参照してください)。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:476
msgid "If the new file name implies a major mode, then @kbd{C-x C-w} switches to that major mode, in most cases.  The command @code{set-visited-file-name} also does this.  @xref{Choosing Modes}."
msgstr "新しいファイル名が何らかのメジャーモードに関連する場合、大抵は@kbd{C-x C-w}によりそのメジャーモードへの切り替えが行われます。コマンド@code{set-visited-file-name}もこれを行います。@ref{Choosing Modes}を参照してください。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:482
msgid "If Emacs is about to save a file and sees that the date of the latest version on disk does not match what Emacs last read or wrote, Emacs notifies you of this fact, because it probably indicates a problem caused by simultaneous editing and requires your immediate attention.  @xref{Interlocking,, Simultaneous Editing}."
msgstr "Emacsがファイルを保存する際、ディスクの最新バージョンのファイル日付を確認して、それがEmacsが最後に読み込み、または書き込みしたときと異なる場合、Emacsはその事実をユーザーに知らせます。なぜならそれはおそらく同時編集による問題を示しており、それをすぐにユーザーに知らせる必要があるからです。@ref{Interlocking,, Simultaneous Editing}を参照してください。"

#. type: subsection
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:484
#, no-wrap
msgid "Backup Files"
msgstr "バックアップファイル"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:485
#, no-wrap
msgid "backup file"
msgstr "backup file"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:486
#, no-wrap
msgid "make-backup-files"
msgstr "make-backup-files"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:493
msgid "On most operating systems, rewriting a file automatically destroys all record of what the file used to contain.  Thus, saving a file from Emacs throws away the old contents of the file---or it would, except that Emacs carefully copies the old contents to another file, called the @dfn{backup} file, before actually saving."
msgstr "ほとんどのオペレーティングシステムでは、ファイルを書き換えるとファイルに入っていたそれまでの記録は、自動的に破棄されます。したがって、Emacsでファイルを保存すると、ファイルの古い内容は捨てられます。しかし実際に保存する前に、Emacsが慎重に古い内容を@dfn{バックアップ(backup)}ファイルと呼ばれる別のファイルにコピーすれば、古い内容は失われません。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:498
msgid "Emacs makes a backup for a file only the first time the file is saved from a buffer.  No matter how many times you subsequently save the file, its backup remains unchanged.  However, if you kill the buffer and then visit the file again, a new backup file will be made."
msgstr "Emacsは最初にバッファーからファイルに保存されたときだけ、バックアップファイルを作成します。その後ファイルを何回保存しようと、バックアップは変更されません。しかしバッファーをkillしてから、そのファイルを再びvisitすると、新しいバックアップファイルが作成されます。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:502
msgid "For most files, the variable @code{make-backup-files} determines whether to make backup files.  On most operating systems, its default value is @code{t}, so that Emacs does write backup files."
msgstr "ほとんどのファイルにたいして、変数@code{make-backup-files}はバックアップファイルを作るかを決定します。ほとんどのオペレーティングシステムでは、デフォルト値は@code{t}なので、Emacsはバックアップファイルを書き込みます。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:508
msgid "For files managed by a version control system (@pxref{Version Control}), the variable @code{vc-make-backup-files} determines whether to make backup files.  By default it is @code{nil}, since backup files are redundant when you store all the previous versions in a version control system."
msgstr "バージョンコントロールシステム(version control system: @ref{Version Control}を参照してください)で管理されているファイルにたいして、バックアップファイルを作るかは、変数@code{vc-make-backup-files}により決定されます。バージョンコントロールシステムに以前のバージョンがある場合、バックアップファイルを作るのは不必要なので、デフォルト値は@code{nil}です。"

#. type: iftex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:510
msgid "@xref{General VC Options,,,emacs-xtra, Specialized Emacs Features}."
msgstr "@ref{General VC Options,,,emacs-xtra, Specialized Emacs Features}を参照してください。"

#. type: ifnottex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:513
msgid "@xref{General VC Options}."
msgstr "@ref{General VC Options}を参照してください。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:518
msgid "At your option, Emacs can keep either a single backup for each file, or make a series of numbered backup files for each file that you edit.  @xref{Backup Names}."
msgstr "選択できるオプションは、Emacsにファイルごとに1つのバックアップを作らせる方法と、編集するファイルごとに番号がついた、一連のファイルを作る方法があります。@ref{Backup Names}を参照してください。"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:519
#, no-wrap
msgid "backup-enable-predicate"
msgstr "backup-enable-predicate"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:520
#, no-wrap
msgid "temporary-file-directory"
msgstr "temporary-file-directory"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:521
#, no-wrap
msgid "small-temporary-file-directory"
msgstr "small-temporary-file-directory"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:526
msgid "The default value of the @code{backup-enable-predicate} variable prevents backup files being written for files in the directories used for temporary files, specified by @code{temporary-file-directory} or @code{small-temporary-file-directory}."
msgstr "変数@code{backup-enable-predicate}のデフォルト値は、一時的なファイルのために使われるディレクトリー(変数@code{temporary-file-directory}または@code{small-temporary-file-directory}で指定されます)のファイルは、バックアップしないような値になっています。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:535
msgid "You can explicitly tell Emacs to make another backup file from a buffer, even though that buffer has been saved before.  If you save the buffer with @kbd{C-u C-x C-s}, the version thus saved will be made into a backup file if you save the buffer again.  @kbd{C-u C-u C-x C-s} saves the buffer, but first makes the previous file contents into a new backup file.  @kbd{C-u C-u C-u C-x C-s} does both things: it makes a backup from the previous contents, and arranges to make another from the newly saved contents if you save again."
msgstr "前に保存されたバッファーにたいしても、バッファーから他のバックアップファイルを作るよう、Emacsに明示的に指示することができます。バッファーを@kbd{C-u C-x C-s}で保存すると、この保存したバージョンが、次にバックアップするときのバックアップになります。@kbd{C-u C-u C-x C-s}はバッファーを保存しますが、最初に元のファイル内容を新しいバックアップファイルとします。@kbd{C-u C-u C-u C-x C-s}は両方を行います。まず前の内容でバックアップを作成し、次回に保存したときは、今回保存したものをバックアップにします。"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:536
#, no-wrap
msgid "backup-directory-alist"
msgstr "backup-directory-alist"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:547
msgid "You can customize the variable @code{backup-directory-alist} to specify that files matching certain patterns should be backed up in specific directories.  A typical use is to add an element @code{(\".\" . @var{dir})} to make all backups in the directory with absolute name @var{dir}.  Emacs modifies the backup file names to avoid clashes between files with the same names originating in different directories.  Alternatively, adding, @code{(\".\" . \".~\")} would make backups in the invisible subdirectory @file{.~} of the original file's directory.  Emacs creates the directory, if necessary, to make the backup."
msgstr "変数@code{backup-directory-alist}をカスタマイズして、指定したパターンにマッチする特定のファイルにたいして、指定したディレクトリーにバックアップを作成させることができます。典型的な使い方は、要素@code{(\".\" . @var{dir})}を追加することにより、すべてのバックアップを絶対パス@var{dir}に作る方法です。異なるディレクトリーにある同じ名前のファイルによる、バックアップファイルの名前の衝突を避けるため、Emacsはバックアップファイルの名前を変更します。@code{(\".\" . \".~\")}を追加すると、これは元のファイルがあるディレクトリーに、非表示の@file{.~}というディレクトリーを作って、そこにバックアップを作成します。Emacsはバックアップを作るため、必要ならディレクトリーを作成します。"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:552
msgid "Backups can be made by copying or renaming."
msgstr "コピーとリネームによるバックアップの作成。"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:552
msgid "Copying: Backup Copying"
msgstr "Copying: Backup Copying"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:552
msgid "Deletion: Backup Deletion"
msgstr "Deletion: Backup Deletion"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:552
msgid "Emacs deletes excess numbered backups."
msgstr "Emacsによる余分な番号つきバックアップの削除。"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:552
msgid "How backup files are named."
msgstr "バックアップファイルの命名方法。"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:552
msgid "Names: Backup Names"
msgstr "Names: Backup Names"

#. type: node
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:554
#, no-wrap
msgid "Backup Names"
msgstr "Backup Names"

#. type: subsubsection
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:555
#, no-wrap
msgid "Single or Numbered Backups"
msgstr "単一または番号つきバックアップ"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:556
#, no-wrap
msgid "backup file names"
msgstr "backup file names"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:557
#, no-wrap
msgid "names of backup files"
msgstr "names of backup files"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:559
#, no-wrap
msgid "@file{~}, in names of backup files"
msgstr "@file{~}, in names of backup files"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:560
#, no-wrap
msgid "tilde (@file{~}) at end of backup file name"
msgstr "tilde (@file{~}) at end of backup file name"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:564
msgid "When Emacs makes a backup file, its name is normally constructed by appending @samp{~} to the file name being edited; thus, the backup file for @file{eval.c} would be @file{eval.c~}."
msgstr "Emacsのバックアップファイル作成では、バックアップの名前は通常、編集されるファイル名の後ろに@samp{~}をつけて作成されます。したがって@file{eval.c}のバックアップファイルは、@file{eval.c~}になります。"

#. type: file{#1}
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:565
#, no-wrap
msgid "~/.emacs.d/%backup%~"
msgstr "~/.emacs.d/%backup%~"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:570
msgid "If access control stops Emacs from writing backup files under the usual names, it writes the backup file as @file{~/.emacs.d/%backup%~}.  Only one such file can exist, so only the most recently made such backup is available."
msgstr "アクセスコントロールによりEmacsが通常の名前でバックアップファイルを書き込めない場合、@file{~/.emacs.d/%backup%~}というバックアップファイルに書き込みます。この1つのファイルしか存在しないので、一番最近作られたバックアップだけが利用可能です。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:576
msgid "Emacs can also make @dfn{numbered backup files}.  Numbered backup file names contain @samp{.~}, the number, and another @samp{~} after the original file name.  Thus, the backup files of @file{eval.c} would be called @file{eval.c.~1~}, @file{eval.c.~2~}, and so on, all the way through names like @file{eval.c.~259~} and beyond."
msgstr "Emacsは@dfn{番号つきバックアップファイル(numbered backup files)}を作ることもできます。番号つきバックアップファイルの名前は、元のファイル名の後ろに@samp{.~}と番号と@samp{~}をつけたものです。したがって@file{eval.c}のバックアップファイルは、@file{eval.c.~1~}、@file{eval.c.~2~}、...、@file{eval.c.~259~}、...となります。"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:577
#, no-wrap
msgid "version-control"
msgstr "version-control"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:581
msgid "The variable @code{version-control} determines whether to make single backup files or multiple numbered backup files.  Its possible values are:"
msgstr "変数@code{version-control}は、単一のバックアップファイルを作るか、複数の番号つきバックアップファイルを作るかを決定します。有効な値は以下のとおりです:"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:583
#, no-wrap
msgid "nil"
msgstr "nil"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:586
msgid "Make numbered backups for files that have numbered backups already.  Otherwise, make single backups.  This is the default."
msgstr "すでに番号つきバックアップのあるファイルにたいしては、番号つきバックアップを作ります。それ以外は単独のバックアップをつくります。これがデフォルトです。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:586
#, no-wrap
msgid "t"
msgstr "t"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:588
msgid "Make numbered backups."
msgstr "番号つきバックアップを作ります。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:588
#, no-wrap
msgid "never"
msgstr "never"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:590
msgid "Never make numbered backups; always make single backups."
msgstr "番号つきバックアップをつくらず、常に単一のバックアップを作ります。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:600
msgid "The usual way to set this variable is globally, through your init file or the customization buffer.  However, you can set @code{version-control} locally in an individual buffer to control the making of backups for that buffer's file (@pxref{Locals}).  You can have Emacs set @code{version-control} locally whenever you visit a given file (@pxref{File Variables}).  Some modes, such as Rmail mode, set this variable."
msgstr "この変数をセットする通常の方法は、initファイルやcustomizationバッファーを通じて、グローバルにセットする方法です。しかし特定のバッファーにローカルに@code{version-control}をセットして、そのバッファーのバックアップ作成を制御することができます(@ref{Locals}を参照してください)。特定のファイルをvisitするとき、常にEmacsに@code{version-control}をローカルにセットさせることができます(@ref{File Variables}を参照してください)。Rmailモードのようないくつかのモードは、この変数をセットします。"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:601
#, no-wrap
msgid "@env{VERSION_CONTROL} environment variable"
msgstr "@env{VERSION_CONTROL} environment variable"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:610
msgid "If you set the environment variable @env{VERSION_CONTROL}, to tell various GNU utilities what to do with backup files, Emacs also obeys the environment variable by setting the Lisp variable @code{version-control} accordingly at startup.  If the environment variable's value is @samp{t} or @samp{numbered}, then @code{version-control} becomes @code{t}; if the value is @samp{nil} or @samp{existing}, then @code{version-control} becomes @code{nil}; if it is @samp{never} or @samp{simple}, then @code{version-control} becomes @code{never}."
msgstr "さまざまなGNUユーティリティーにたいして、何をすべきか指示する環境変数@env{VERSION_CONTROL}をセットすると、Emacsも開始時にこの環境変数にしたがって、Lisp変数@code{version-control}をセットします。環境変数の値が@samp{t}または@samp{numbered}のときは、@code{version-control}は@code{t}になります。値が@samp{nil}または@samp{existing}のときは、@code{version-control}は@code{nil}になります。もし@samp{never}または@samp{simple}のときは、@code{version-control}は@code{never}になります。"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:611
#, no-wrap
msgid "make-backup-file-name-function"
msgstr "make-backup-file-name-function"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:615
msgid "If you set the variable @code{make-backup-file-name-function} to a suitable Lisp function, you can override the usual way Emacs constructs backup file names."
msgstr "変数@code{make-backup-file-name-function}に適切なLisp関数をセットすることにより、Emacsがバックアップファイル名を作る通常の方法をオーバーライドできます。"

#. type: node
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:616
#, no-wrap
msgid "Backup Deletion"
msgstr "Backup Deletion"

#. type: subsubsection
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:617
#, no-wrap
msgid "Automatic Deletion of Backups"
msgstr "バックアップの自動削除"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:623
msgid "To prevent excessive consumption of disk space, Emacs can delete numbered backup versions automatically.  Generally Emacs keeps the first few backups and the latest few backups, deleting any in between.  This happens every time a new backup is made."
msgstr "ディスク容量の過度な消費を防ぐため、Emacsは自動的に番号つきバックアップを削除することができます。一般的にEmacsは一番古いバックアップと、一番新しいバックアップをいくつか保持し、その間にあるバックアップを削除します。これは新しいバックアップが作られる度に行なわれます。"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:624
#, no-wrap
msgid "kept-old-versions"
msgstr "kept-old-versions"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:625
#, no-wrap
msgid "kept-new-versions"
msgstr "kept-new-versions"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:636
msgid "The two variables @code{kept-old-versions} and @code{kept-new-versions} control this deletion.  Their values are, respectively, the number of oldest (lowest-numbered) backups to keep and the number of newest (highest-numbered) ones to keep, each time a new backup is made.  The backups in the middle (excluding those oldest and newest) are the excess middle versions---those backups are deleted.  These variables' values are used when it is time to delete excess versions, just after a new backup version is made; the newly made backup is included in the count in @code{kept-new-versions}.  By default, both variables are 2."
msgstr "2つの変数@code{kept-old-versions}および@code{kept-new-versions}が、この削除を制御します。これらの変数の値は順に、削除せずに残す一番古い番号(小さい番号)のバックアップと、一番新しい番号(大きい番号)で、新しいバックアップが作られる度に評価されます。中間のバックアップ(一番古いものと一番新しいものを除いたもの)は、余分なバージョンで、これらのバックアップは削除されます。これらの変数の値は余分なバージョンを削除するとき、つまり新しいバックアップが作られた直後に使われます。新しく作られたバックアップは、@code{kept-new-versions}のカウントに含まれます。デフォルトでは、両方の変数の値は2です。"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:637
#, no-wrap
msgid "delete-old-versions"
msgstr "delete-old-versions"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:642
msgid "If @code{delete-old-versions} is @code{t}, Emacs deletes the excess backup files silently.  If it is @code{nil}, the default, Emacs asks you whether it should delete the excess backup versions.  If it has any other value, then Emacs never automatically deletes backups."
msgstr "@code{delete-old-versions}が@code{t}のとき、Emacsは何も尋ねずに余分なバックアップファイルを削除します。@code{nil}(デフォルト)のとき、Emacsは余分なバージョンのバックアップを削除するか尋ねます。他の値の場合、Emacsはバックアップの自動削除をしません。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:645
msgid "Dired's @kbd{.} (Period) command can also be used to delete old versions.  @xref{Flagging Many Files}."
msgstr "Diredの@kbd{.}(ピリオド)コマンドでも、古いバージョンを削除できます。@ref{Flagging Many Files}を参照してください。"

#. type: node
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:646
#, no-wrap
msgid "Backup Copying"
msgstr "Backup Copying"

#. type: subsubsection
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:647
#, no-wrap
msgid "Copying vs.@: Renaming"
msgstr "コピー vs. リネーム"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:656
msgid "Backup files can be made by copying the old file or by renaming it.  This makes a difference when the old file has multiple names (hard links).  If the old file is renamed into the backup file, then the alternate names become names for the backup file.  If the old file is copied instead, then the alternate names remain names for the file that you are editing, and the contents accessed by those names will be the new contents."
msgstr "バックアップファイルは、古いファイルをコピーまたはリネームすることで作ることができます。コピーとリネームは、古いファイルが複数の名前をもつ場合(ハードリンクされている場合)に、異なる効果をもちます。古いファイルがバックアップファイルにリネームされた場合、ハードリンクされた別の名前で参照されるファイルは、バックアップファイルとなります。かわりに古いファイルをコピーすると、ハードリンクされた別の名前で参照されるファイルは、編集中のファイルのままで、それらの名前でアクセスする内容は新しい内容となります。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:661
msgid "The method of making a backup file may also affect the file's owner and group.  If copying is used, these do not change.  If renaming is used, you become the file's owner, and the file's group becomes the default (different operating systems have different defaults for the group)."
msgstr "バックアップファイルを作る方法は、編集中のファイルの所有者とグループにも影響します。コピーが使われた場合、それらは変化しません。リネームが使われた場合、そのユーザーがファイルの所有者となり、ファイルのグループはデフォルト(オペレーティングシステムごとにグループのデフォルトは異なります)のグループになります。"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:662
#, no-wrap
msgid "backup-by-copying"
msgstr "backup-by-copying"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:663
#, no-wrap
msgid "backup-by-copying-when-linked"
msgstr "backup-by-copying-when-linked"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:664
#, no-wrap
msgid "backup-by-copying-when-mismatch"
msgstr "backup-by-copying-when-mismatch"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:665
#, no-wrap
msgid "backup-by-copying-when-privileged-mismatch"
msgstr "backup-by-copying-when-privileged-mismatch"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:666
#, no-wrap
msgid "file ownership, and backup"
msgstr "file ownership, and backup"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:667
#, no-wrap
msgid "backup, and user-id"
msgstr "backup, and user-id"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:669
msgid "The choice of renaming or copying is made as follows:"
msgstr "リネームとコピーの選択は、以下の変数により行われます:"

#. type: itemize
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:674
msgid "If the variable @code{backup-by-copying} is non-@code{nil} (the default is @code{nil}), use copying."
msgstr "変数@code{backup-by-copying}が非@code{nil}(デフォルトは@code{nil})の場合、コピーが使用されます。"

#. type: itemize
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:679
msgid "Otherwise, if the variable @code{backup-by-copying-when-linked} is non-@code{nil} (the default is @code{nil}), and the file has multiple names, use copying."
msgstr "上記以外の場合、変数@code{backup-by-copying-when-linked}が非@code{nil}(デフォルトは@code{nil})で、ファイルが複数の名前をもつ場合は、コピーが使用されます。"

#. type: itemize
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:684
msgid "Otherwise, if the variable @code{backup-by-copying-when-mismatch} is non-@code{nil} (the default is @code{t}), and renaming would change the file's owner or group, use copying."
msgstr "上記以外の場合、変数@code{backup-by-copying-when-mismatch}が非@code{nil}(デフォルトは@code{t})で、リネームによりファイルの所有者かグループが変更される場合は、コピーが使用されます。"

#. type: itemize
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:690
msgid "If you change @code{backup-by-copying-when-mismatch} to @code{nil}, Emacs checks the numeric user-id of the file's owner.  If this is higher than @code{backup-by-copying-when-privileged-mismatch}, then it behaves as though @code{backup-by-copying-when-mismatch} is non-@code{nil} anyway."
msgstr "@code{backup-by-copying-when-mismatch}を@code{nil}に変更すると、Emacsはファイルの所有者のユーザーIDの数字をチェックします。もしこの数字が@code{backup-by-copying-when-privileged-mismatch}の値より大きい場合、@code{backup-by-copying-when-mismatch}が非@code{nil}であるかのように振る舞います。"

#. type: itemize
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:693
msgid "Otherwise, renaming is the default choice."
msgstr "上記以外の場合、リネームがデフォルトの選択となります。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:703
msgid "When a file is managed with a version control system (@pxref{Version Control}), Emacs does not normally make backups in the usual way for that file.  But @dfn{committing} (a.k.a.@: @dfn{checking in}, @pxref{VCS Concepts}) new versions of files is similar in some ways to making backups.  One unfortunate similarity is that these operations typically break hard links, disconnecting the file name you visited from any alternate names for the same file.  This has nothing to do with Emacs---the version control system does it."
msgstr "ファイルがバージョンコントロールシステムで管理されている場合(@ref{Version Control}を参照してください)、通常、Emacsは普通の方法でそのファイルのバックアップを作りません。しかし@dfn{コミット}(@dfn{チェックイン}とも呼ばれる。@pxref{VCS Concepts}を参照されたい)は、バックアップを作るのと似たところがあります。これらの操作は通常ハードリンクをこわし、同じファイルにたいする別のファイル名でのvisitを切断します。Emacsにできることはありません。バージョンコントロールシステムがこれを行うのです。"

#. type: subsection
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:705
#, no-wrap
msgid "Customizing Saving of Files"
msgstr "ファイル保存のカスタマイズ"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:707
#, no-wrap
msgid "require-final-newline"
msgstr "require-final-newline"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:718
msgid "If the value of the variable @code{require-final-newline} is @code{t}, saving or writing a file silently puts a newline at the end if there isn't already one there.  If the value is @code{visit}, Emacs adds a newline at the end of any file that doesn't have one, just after it visits the file.  (This marks the buffer as modified, and you can undo it.)  If the value is @code{visit-save}, Emacs adds such newlines both on visiting and on saving.  If the value is @code{nil}, Emacs leaves the end of the file unchanged; any other non-@code{nil} value means Emacs asks you whether to add a newline.  The default is @code{nil}."
msgstr "変数@code{require-final-newline}の値が@code{t}のとき、ファイルの保存または書き込みにより、ファイルの終端に改行がないときは、何も尋ねずに改行を追加します。値が@code{visit}の場合、Emacsはファイルをvisitした直後に、終端に改行がないファイルの改行を追加します(これによりバッファーは変更されたとマークされます。undoはできません)。値が@code{visit-save}の場合、Emacsはそのような改行をvisitと保存のときに追加します。値が@code{nil}の場合、Emacsはファイルの終端を変更しません。それ以外の非@code{nil}値は、改行を追加するかをEmacsが尋ねることを意味します。デフォルトは@code{nil}です。"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:719
#, no-wrap
msgid "mode-require-final-newline"
msgstr "mode-require-final-newline"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:726
msgid "Some major modes are designed for specific kinds of files that are always supposed to end in newlines.  Such major modes set the variable @code{require-final-newline} to the value of @code{mode-require-final-newline}, which defaults to @code{t}.  By setting the latter variable, you can control how these modes handle final newlines."
msgstr "ファイルの終端に常に改行があると想定する、特定の種類のファイルのためにデザインされたメジャーモードがいくつかあります。そのようなメジャーモードは、変数@code{require-final-newline}に、変数@code{mode-require-final-newline}の値(デフォルトは@code{t})をセットします。後者の変数の値をセットすることにより、これらのモードが終端の改行を取り扱う方法を制御できます。"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:727
#, no-wrap
msgid "write-region-inhibit-fsync"
msgstr "write-region-inhibit-fsync"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:734
msgid "Normally, when a program writes a file, the operating system briefly caches the file's data in main memory before committing the data to disk.  This can greatly improve performance; for example, when running on laptops, it can avoid a disk spin-up each time a file is written.  However, it risks data loss if the operating system crashes before committing the cache to disk."
msgstr "通常プログラムがファイルに書き込むとき、オペレーティングシステムはデータをディスクにコミットする前に、ファイルのデータをメインメモリーにキャッシュします。これにより大幅にパフォーマンスを向上できます。たとえばラップトップを使っている場合、ファイルを書き込む度にディスクをスピンアップ(spin-up)しなくて済みます。しかし、キャッシュをディスクにコミットする前にオペレーティングシステムがクラッシュすることにより、データを失うリスクもあります。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:741
msgid "To lessen this risk, Emacs can invoke the @code{fsync} system call after saving a file.  Using @code{fsync} does not eliminate the risk of data loss, partly because many systems do not implement @code{fsync} properly, and partly because Emacs's file-saving procedure typically relies also on directory updates that might not survive a crash even if @code{fsync} works properly."
msgstr "このリスクを減少させるため、Emacsはファイルを保存した後に@code{fsync}システムコールを呼び出すことができます。@code{fsync}により、データを失うリスクを皆無にすることはできません。その理由の一部は、多くのシステムは@code{fsync}を正しく実装していないことであり、他の理由の一部はEmacsのファイル保存手段は通常ディレクトリー更新に頼っており、これは@code{fsync}が正しく実装されていても、クラッシュを生き延びることはできないでしょう。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:746
msgid "The @code{write-region-inhibit-fsync} variable controls whether Emacs invokes @code{fsync} after saving a file.  The variable's default value is @code{nil} when Emacs is interactive, and @code{t} when Emacs runs in batch mode (@pxref{Initial Options, Batch Mode})."
msgstr "@code{write-region-inhibit-fsync}変数は、ファイルを保存した後にEmacsが@code{fsync}を呼び出すかを制御します。この変数のデフォルト値は、Emacsを対話的に使用しているときは@code{nil}、バッチモードの時は@code{t}です(@ref{Initial Options, Batch Mode}を参照)。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:749
msgid "Emacs never uses @code{fsync} when writing auto-save files, as these files might lose data anyway."
msgstr "Emacsは自動保存ファイルの書き込みに@code{fsync}を使うことはありません。なぜなら、それらのファイルのデータは、いずれにせよ失われるものだからです。"

#. type: subsection
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:751
#, no-wrap
msgid "Protection against Simultaneous Editing"
msgstr "同時編集からの保護"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:753
#, no-wrap
msgid "file dates"
msgstr "file dates"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:754
#, no-wrap
msgid "simultaneous editing"
msgstr "simultaneous editing"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:759
msgid "Simultaneous editing occurs when two users visit the same file, both make changes, and then both save them.  If nobody is informed that this is happening, whichever user saves first would later find that their changes were lost."
msgstr "同時編集(Simultaneous editing)は、2人のユーザーが同じファイルをvisitして、両者が変更と保存を行ったときに発生します。これが発生していることを誰も知らせなければ、最初に保存したユーザーは、後で自分の変更が失われていることに気付くでしょう。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:766
msgid "On some systems, Emacs notices immediately when the second user starts to change the file, and issues an immediate warning.  On all systems, Emacs checks when you save the file, and warns if you are about to overwrite another user's changes.  You can prevent loss of the other user's work by taking the proper corrective action instead of saving the file."
msgstr "いくつかのシステムでは、Emacsは2番目のユーザーがファイルの変更を開始すると、すぐに警告を発します。また、すべてのシステムにおいて、Emacsはファイルを保存するときにチェックして、他のユーザーの変更を上書きすることを警告します。ファイルを保存するかわりに適切な訂正アクションをとることにより、他のユーザーの変更を失わなわずに済みます。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:767
#, no-wrap
msgid "ask-user-about-lock"
msgstr "ask-user-about-lock"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:768
#, no-wrap
msgid "locking files"
msgstr "locking files"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:776
msgid "When you make the first modification in an Emacs buffer that is visiting a file, Emacs records that the file is @dfn{locked} by you.  (It does this by creating a specially-named symbolic link@footnote{If your file system does not support symbolic links, a regular file is used.} with special contents in the same directory.)  Emacs removes the lock when you save the changes.  The idea is that the file is locked whenever an Emacs buffer visiting it has unsaved changes."
msgstr "ファイルをvisitしているEmacsバッファーで最初の変更を行うとき、Emacsはファイルが@dfn{ロック(locked)}されていることを記録します(これは同じディレクトリーにある、特別な内容の、特別な名前のシンボリックリンク@footnote{システムがシンボリックリンクをサポートしていなければ、通常のファイルが使われます。}を作ることにより行われます)。変更を保存したとき、Emacsはロックを解除します。このアイデアは、ファイルをvisitしているEmacsバッファーに保存されていない変更があるとき、ファイルはロックされているとするものです。"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:777
#, no-wrap
msgid "create-lockfiles"
msgstr "create-lockfiles"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:781
msgid "You can prevent the creation of lock files by setting the variable @code{create-lockfiles} to @code{nil}.  @strong{Caution:} by doing so you will lose the benefits that this feature provides."
msgstr "変数@code{create-lockfiles}を@code{nil}にセットすることにより、ロックファイルの作成を抑制することができます。@strong{警告:}これにより、この機能が提供する利点を失うことになります。"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:782
#, no-wrap
msgid "collision"
msgstr "collision"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:789
msgid "If you begin to modify the buffer while the visited file is locked by someone else, this constitutes a @dfn{collision}.  When Emacs detects a collision, it asks you what to do, by calling the Lisp function @code{ask-user-about-lock}.  You can redefine this function for the sake of customization.  The standard definition of this function asks you a question and accepts three possible answers:"
msgstr "他のユーザーによりロックされているファイルをvisitしているバッファーの変更を開始すると、@dfn{衝突(collision)}が起こります。Emacsが衝突を検知すると、Lisp関数@code{ask-user-about-lock}を呼び出して、何を行うか尋ねます。カスタマイズのためにこの関数を再定義できます。この関数の標準定義は、ユーザーに質問をして、3つの有効な応えを受け取ります。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:791
#, no-wrap
msgid "s"
msgstr "s"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:794
msgid "Steal the lock.  Whoever was already changing the file loses the lock, and you gain the lock."
msgstr "ロックを横取りします。すでにファイルを変更したユーザーはロックを失い、あなたがロックを取得します。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:794
#, no-wrap
msgid "p"
msgstr "p"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:796
msgid "Proceed.  Go ahead and edit the file despite its being locked by someone else."
msgstr "続行します。他のユーザーがロックしている如何にかかわらずファイルの編集を続けます。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:796
#, no-wrap
msgid "q"
msgstr "q"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:800
msgid "Quit.  This causes an error (@code{file-locked}), and the buffer contents remain unchanged---the modification you were trying to make does not actually take place."
msgstr "終了します。これはエラー(@code{file-locked})を引き起こし、バッファーの内容は変更されません。あなたが試みた修正は実際には行われません。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:806
msgid "If Emacs or the operating system crashes, this may leave behind lock files which are stale, so you may occasionally get warnings about spurious collisions.  When you determine that the collision is spurious, just use @kbd{p} to tell Emacs to go ahead anyway."
msgstr "Emacsまたはオペレーティングシステムがクラッシュすると、偽のロックファイルが残ることがあり、このような偽のロックファイルによる警告を受けることがあります。偽の衝突だと確信できるときは、Emacsにとにかく実行させる@kbd{p}を使います。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:810
msgid "Note that locking works on the basis of a file name; if a file has multiple names, Emacs does not prevent two users from editing it simultaneously under different names."
msgstr "ロックはファイル名にもとづいて機能するので、ファイルが複数の名前を持っていて、2人のユーザーがそれぞれ別のファイル名で同時編集を行うことを、Emacsが防ぐことはできないことに注意してください。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:820
msgid "A lock file cannot be written in some circumstances, e.g., if Emacs lacks the system permissions or cannot create lock files for some other reason.  In these cases, Emacs can still detect the collision when you try to save a file, by checking the file's last-modification date.  If the file has changed since the last time Emacs visited or saved it, that implies that changes have been made in some other way, and will be lost if Emacs proceeds with saving.  Emacs then displays a warning message and asks for confirmation before saving; answer @kbd{yes} to save, and @kbd{no} or @kbd{C-g} cancel the save."
msgstr "ロックファイルに書き込みできない状況がいくつかあります。たとえばシステム権限不足や他の理由により、Emacsがロックファイルが作成できない場合です。このような場合でも保存を試みたときに、ファイルの最終変更日時をチェックすることにより、Emacsは衝突を検知できます。最後にEmacsがvisitまたは保存したときからファイルが変更されているとき、それは他の何らかの手段によりファイルが変更されたことを示し、Emacsが保存を行うことによりそれらが失われることを意味します。そのようなときEmacsは警告メッセージを表示して、保存する前に確認を求めます。保存するときは@kbd{yes}、保存を取り消すときは@kbd{no}または@kbd{C-g}と応えてください。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:824
msgid "If you are notified that simultaneous editing has already taken place, one way to compare the buffer to its file is the @kbd{M-x diff-buffer-with-file} command.  @xref{Comparing Files}."
msgstr "すでに同時編集が発生しているとき、バッファーとファイルを比較する方法の1つは、@kbd{M-x diff-buffer-with-file}コマンドです。@ref{Comparing Files}を参照してください。"

#. type: node
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:825
#, no-wrap
msgid "File Shadowing"
msgstr "File Shadowing"

#. type: subsection
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:826
#, no-wrap
msgid "Shadowing Files"
msgstr "ファイルのシャドーイング"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:827
#, no-wrap
msgid "shadow files"
msgstr "shadow files"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:828
#, no-wrap
msgid "file shadows"
msgstr "file shadows"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:829
#, no-wrap
msgid "shadow-initialize"
msgstr "shadow-initialize"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:840
msgid "You can arrange to keep identical @dfn{shadow} copies of certain files in more than one place---possibly on different machines.  To do this, first you must set up a @dfn{shadow file group}, which is a set of identically-named files shared between a list of sites.  The file group is permanent and applies to further Emacs sessions as well as the current one.  Once the group is set up, every time you exit Emacs, it will copy the file you edited to the other files in its group.  You can also do the copying without exiting Emacs, by typing @w{@kbd{M-x shadow-copy-files}}."
msgstr "特定のファイルと等しい@dfn{shadow}コピーを１つ以上の場所、ことによると異なるマシン間で保持するように計画できます。これを行うにはまず、@dfn{shadowファイルグループ}をセットアップしなければなりません。これはリストにあるサイト間で共有される同じ名前のファイルのセットです。ファイルグループは永続的で、将来のEmacsセッションでも、現在のセッションと同様に適用されます。一度グループをセットアップすると、Emacsを終了する度に、編集したファイルをグループの他のファイルにコピーします。@w{@kbd{M-x shadow-copy-files}}をタイプすることにより、Emacsを終了せずにコピーすることもできます。"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:841
#, no-wrap
msgid "shadow cluster"
msgstr "shadow cluster"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:849
msgid "A @dfn{shadow cluster} is a group of hosts that share directories, so that copying to or from one of them is sufficient to update the file on all of them.  Each shadow cluster has a name, and specifies the network address of a primary host (the one we copy files to), and a regular expression that matches the host names of all the other hosts in the cluster.  You can define a shadow cluster with @w{@kbd{M-x shadow-define-cluster}}."
msgstr "@dfn{shadowクラスター}は、ディレクトリーを共有するホストのグループなので、それらのコピーは、そのディレクトリーにあるすべてのファイルを更新するのに充分です。shadowクラスターはそれぞれ名前を持ち、プライマリーホスト(コピーを行うホスト)のネットワークアドレスと、プライマリーホスト以外でクラスターに含めるホストを選択するための正規表現を指定します。@w{@kbd{M-x shadow-define-cluster}}によりshadowクラスターを定義できます。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:851
#, no-wrap
msgid "M-x shadow-initialize"
msgstr "M-x shadow-initialize"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:853
#, no-wrap
msgid "M-x shadow-define-literal-group"
msgstr "M-x shadow-define-literal-group"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:853
msgid "Set up file shadowing."
msgstr "ファイルのシャドーイング(shadowing)をセットアップします。"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:855
msgid "Declare a single file to be shared between sites."
msgstr "サイト間で共有される単一のファイルを定義します。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:855
#, no-wrap
msgid "M-x shadow-define-regexp-group"
msgstr "M-x shadow-define-regexp-group"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:857
#, no-wrap
msgid "M-x shadow-define-cluster @key{RET} @var{name} @key{RET}"
msgstr "M-x shadow-define-cluster @key{RET} @var{name} @key{RET}"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:857
msgid "Make all files that match each of a group of files be shared between hosts."
msgstr "ファイルのグループがマッチするすべてのファイルを、ホスト間で共有するようにします。"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:859
msgid "Define a shadow file cluster @var{name}."
msgstr "shadowファイルのクラスター@var{name}を定義します。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:859
#, no-wrap
msgid "M-x shadow-copy-files"
msgstr "M-x shadow-copy-files"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:861
msgid "Copy all pending shadow files."
msgstr "すべての保留中のshadowファイルをコピーします。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:861
#, no-wrap
msgid "M-x shadow-cancel"
msgstr "M-x shadow-cancel"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:863
msgid "Cancel the instruction to shadow some files."
msgstr "ファイルにたいするshadow指示を取り消します。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:869
msgid "To set up a shadow file group, use @w{@kbd{M-x shadow-define-literal-group}} or @w{@kbd{M-x shadow-define-regexp-group}}.  See their documentation strings for further information."
msgstr "shadowファイルグループをセットアップするには、@w{@kbd{M-x shadow-define-literal-group}}または@w{@kbd{M-x shadow-define-regexp-group}}を使います。詳細な情報は、これらの関数のドキュメント文字列を参照してください。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:874
msgid "Before copying a file to its shadows, Emacs asks for confirmation.  You can answer ``no'' to bypass copying of this file, this time.  If you want to cancel the shadowing permanently for a certain file, use @w{@kbd{M-x shadow-cancel}} to eliminate or change the shadow file group."
msgstr "ファイルをshadowにコピーする前に、Emacsは確認を求めます。``no''を応えることにより、その時だけはコピーを回避できます。特定のファイルにたいして今後もshadowingを取り消したい場合、@w{@kbd{M-x shadow-cancel}}を使うことにより、shadowファイルグループを削除または変更します。"

#. type: subsection
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:876
#, no-wrap
msgid "Updating Time Stamps Automatically"
msgstr "タイムスタンプの自動更新"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:877
#, no-wrap
msgid "time stamps"
msgstr "time stamps"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:878
#, no-wrap
msgid "modification dates"
msgstr "modification dates"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:879
#, no-wrap
msgid "locale, date format"
msgstr "locale, date format"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:885
msgid "You can arrange to put a time stamp in a file, so that it is updated automatically each time you edit and save the file.  The time stamp must be in the first eight lines of the file, and you should insert it like this:"
msgstr "ファイルにタイムスタンプを書き込むことができます。これによりファイルを編集・保存する度に、タイムスタンプが自動的に更新されます。タイムスタンプは、ファイルの最初の8行になければならず、以下のような形式、"

#. type: example
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:888
#, no-wrap
msgid "Time-stamp: <>\n"
msgstr "Time-stamp: <>\n"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:892
msgid "or like this:"
msgstr "または以下のような形式です:"

#. type: example
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:895
#, no-wrap
msgid "Time-stamp: \" \"\n"
msgstr "Time-stamp: \" \"\n"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:897
#, no-wrap
msgid "time-stamp"
msgstr "time-stamp"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:906
msgid "Then add the function @code{time-stamp} to the hook @code{before-save-hook} (@pxref{Hooks}).  When you save the file, this function then automatically updates the time stamp with the current date and time.  You can also use the command @kbd{M-x time-stamp} to update the time stamp manually.  By default the time stamp is formatted according to your locale setting (@pxref{Environment}) and time zone (@pxref{Time of Day,,, elisp, The Emacs Lisp Reference Manual}).  For customizations, see the Custom group @code{time-stamp}."
msgstr "その後、フック@code{before-save-hook}に関数@code{time-stamp}を追加します(@ref{Hooks}を参照してください)。ファイルを保存するとき、この関数は現在の日時で自動的にタイムスタンプを更新します。コマンド@kbd{M-x time-stamp}を使って、手動でタイムスタンプを更新することもできます。デフォルトではタイムスタンプの書式は、localeのセッティング(@ref{Environment}を参照してください)と、タイムゾーン(@ref{Time of Day,,, elisp, The Emacs Lisp Reference Manual}を参照してください)にしたがいます。カスタマイズに関しては、Customグループの@code{time-stamp}を参照してください。"

#. type: section
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:908
#, no-wrap
msgid "Reverting a Buffer"
msgstr "バッファーのリバート"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:909
#, no-wrap
msgid "revert-buffer"
msgstr "revert-buffer"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:910
#, no-wrap
msgid "drastic changes"
msgstr "drastic changes"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:911
#, no-wrap
msgid "reread a file"
msgstr "reread a file"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:918
msgid "If you have made extensive changes to a file-visiting buffer and then change your mind, you can @dfn{revert} the changes and go back to the saved version of the file.  To do this, type @kbd{M-x revert-buffer}.  Since reverting unintentionally could lose a lot of work, Emacs asks for confirmation first."
msgstr "ファイルをvisitしているバッファーにたいして、広範な変更をした後に気が変わったときは、@dfn{リバート(revert: 復元)}することにより。変更をファイルの保存されたバージョンに戻すことができます。間違えてリバートしてしまうことにより、大量の作業結果を失うこともあり得るので、Emacsは最初に確認を求めます。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:923
msgid "The @code{revert-buffer} command tries to position point in such a way that, if the file was edited only slightly, you will be at approximately the same part of the text as before.  But if you have made major changes, point may end up in a totally different location."
msgstr "@code{revert-buffer}コマンドは、ファイルが少ししか変更されていないときは、前にポイントがあったテキスト部分とだいたい同じ位置にポイントを置くよう試みます。しかし広範な変更を行っていた場合、ポイントは大きく異なる場所に置かれることになります。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:928
msgid "Reverting marks the buffer as not modified.  It also clears the buffer's undo history (@pxref{Undo}).  Thus, the reversion cannot be undone---if you change your mind yet again, you can't use the undo commands to bring the reverted changes back."
msgstr "リバートはバッファーをnot modified(変更されていない)とマークします。また、バッファーのundoヒストリーもクリアーされます(@ref{Undo}を参照してください)。したがってリバートはundoできません。再び気を変えても、undoコマンドを使ってリバートした変更を元にもどすことはできません。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:934
msgid "Some kinds of buffers that are not associated with files, such as Dired buffers, can also be reverted.  For them, reverting means recalculating their contents.  Buffers created explicitly with @kbd{C-x b} cannot be reverted; @code{revert-buffer} reports an error if you try."
msgstr "ファイルに関連付けられていない、Diredバッファーのようなバッファーでも、リバートすることができます。それらの場合、リバートはその内容を再計算することを意味します。@kbd{C-x b}で明示的に作成したバッファーは、リバートできません。リバートを試みると@code{revert-buffer}はエラーを報告します。"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:935
#, no-wrap
msgid "revert-without-query"
msgstr "revert-without-query"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:945
msgid "When you edit a file that changes automatically and frequently---for example, a log of output from a process that continues to run---it may be useful for Emacs to revert the file without querying you.  To request this behavior, set the variable @code{revert-without-query} to a list of regular expressions.  When a file name matches one of these regular expressions, @code{find-file} and @code{revert-buffer} will revert it automatically if it has changed---provided the buffer itself is not modified.  (If you have edited the text, it would be wrong to discard your changes.)"
msgstr "自動的かつ頻繁に変更されるファイル、たとえば実行を続けるプロセスのログ出力などを編集しているとき、Emacsが確認なしにリバートできたら便利でしょう。このような振る舞いをさせるには、変数@code{revert-without-query}に正規表現のリストをセットします。ファイル名がそれらの正規表現の1つにマッチしたとき、@code{find-file}および@code{revert-buffer}は、バッファーが変更されていないときは、ファイルが変更される度に自動的にリバートします(もしテキストを編集していた場合、変更を放棄するのはおそらく正しくありません)。"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:946
#, no-wrap
msgid "Global Auto Revert mode"
msgstr "Global Auto Revert mode"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:947
#, no-wrap
msgid "mode, Global Auto Revert"
msgstr "mode, Global Auto Revert"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:948
#, no-wrap
msgid "Auto Revert mode"
msgstr "Auto Revert mode"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:949
#, no-wrap
msgid "mode, Auto Revert"
msgstr "mode, Auto Revert"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:950
#, no-wrap
msgid "global-auto-revert-mode"
msgstr "global-auto-revert-mode"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:951
#, no-wrap
msgid "auto-revert-mode"
msgstr "auto-revert-mode"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:952
#, no-wrap
msgid "auto-revert-tail-mode"
msgstr "auto-revert-tail-mode"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:953
#, no-wrap
msgid "auto-revert-interval"
msgstr "auto-revert-interval"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:954
#, no-wrap
msgid "auto-revert-remote-files"
msgstr "auto-revert-remote-files"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:955
#, no-wrap
msgid "auto-revert-verbose"
msgstr "auto-revert-verbose"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:965
msgid "You can also tell Emacs to revert buffers periodically.  To do this for a specific buffer, enable the minor mode Auto-Revert mode by typing @kbd{M-x auto-revert-mode}.  This automatically reverts the current buffer when its visited file changes on disk.  To do the same for all file buffers, type @kbd{M-x global-auto-revert-mode} to enable Global Auto-Revert mode.  These minor modes do not check or revert remote files, because that is usually too slow.  This behavior can be changed by setting the variable @code{auto-revert-remote-files} to non-@code{nil}."
msgstr "Emacsにバッファーを定期的にリバートするよう、指示することもできます。特定のバッファーにたいしてこれを行うには、@kbd{M-x auto-revert-mode}とタイプして、マイナーモードのAuto-Revertモードを有効にします。カレントバッファーがvisitしているファイルがディスク上で変更されたとき、自動的にリバートします。すべてのバッファーにたいして同じことを行うには、@kbd{M-x global-auto-revert-mode}とタイプして、Global Auto-Revertモードを有効にします。これらのマイナーモードはリモートのファイルにたいするチェックやリバートはしません。なぜならそれは通常とても遅いからです。この動作は、変数@code{auto-revert-remote-files}を非@code{nil}にセットすることにより変更できます。"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:966
#, no-wrap
msgid "file notifications"
msgstr "file notifications"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:967
#, no-wrap
msgid "auto-revert-use-notify"
msgstr "auto-revert-use-notify"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:974
msgid "By default, Auto-Revert mode works using @dfn{file notifications}, whereby changes in the filesystem are reported to Emacs by the OS.  You can disable use of file notifications by customizing the variable @code{auto-revert-use-notify} to a @code{nil} value, then Emacs will check for file changes by polling every five seconds.  You can change the polling interval through the variable @code{auto-revert-interval}."
msgstr "デフォルトでは、Auto-Revertモードは@dfn{ファイル通知(file notifications)}を使用して機能します。これにより、ファイルシステムへの変更が、OSからEmacsに報告されます。変数@code{auto-revert-use-notify}を@code{nil}にカスタマイズして、ファイル通知を無効にできます。その場合、Emacsは5秒ごとにポーリングして、ファイルの変更をチェックするでしょう。変数@code{auto-revert-interval}を通じて、ポーリングの間隔を変更できます。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:978
msgid "Not all systems support file notifications; where they are not supported, @code{auto-revert-use-notify} will be @code{nil} by default."
msgstr "すべてのシステムでファイル通知がサポートされている訳ではありません。サポートされないシステムでは、@code{auto-revert-use-notify}はデフォルトで@code{nil}です。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:987
msgid "One use of Auto-Revert mode is to ``tail'' a file such as a system log, so that changes made to that file by other programs are continuously displayed.  To do this, just move the point to the end of the buffer, and it will stay there as the file contents change.  However, if you are sure that the file will only change by growing at the end, use Auto-Revert Tail mode instead (@code{auto-revert-tail-mode}).  It is more efficient for this.  Auto-Revert Tail mode works also for remote files."
msgstr "Auto-Revertモードの1つの使い方は、システムログのようなファイルを``tail''することです。これにより、それらのファイルにたいする、他のプログラムによる変更を、継続的に表示できます。これを行うには、ポイントをバッファーの最後に移動します。そうすればファイル内容が変更されても、ポイントはその位置に留まります。しかし、ファイルがファイルの終端方向に向かって変更されるだけだと確信できるときは、かわりにAuto-Revert Tailモード(@code{auto-revert-tail-mode})を使います。このモードは、これをより効果的に行います。Auto-Revert Tailモードは、リモートのファイルにたいしても機能します。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:990
msgid "When a buffer is auto-reverted, a message is generated.  This can be suppressed by setting @code{auto-revert-verbose} to @code{nil}."
msgstr "バッファーが自動リバートされたとき、メッセージが生成されます。これは@code{auto-revert-verbose}を非@code{nil}にセットすることにより、抑制できます。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:993
msgid "In Dired buffers (@pxref{Dired}), Auto-Revert mode refreshes the buffer when a file is created or deleted in the buffer's directory."
msgstr "Diredバッファー(@ref{Dired}を参照)では、Auto-Revertモードはそのバッファーのディレクトリーでファイルが作成、または削除されたとき更新を行います。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:997
msgid "@xref{VC Undo}, for commands to revert to earlier versions of files under version control.  @xref{VC Mode Line}, for Auto Revert peculiarities when visiting files under version control."
msgstr "バージョンコントロールシステムの下にあるファイルを、以前のバージョンにリバーとするコマンドについては、@ref{VC Undo}を参照してください。バージョンコントロールシステムの下にあるファイルをvisitしているときの自動リバートの特性については、@ref{VC Mode Line}を参照してください。"

#. type: include
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:999
#, no-wrap
msgid "arevert-xtra.texi"
msgstr "arevert-xtra-ja.texi"

#. type: section
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1003
#, no-wrap
msgid "Auto-Saving: Protection Against Disasters"
msgstr "自動保存－災害にたいする防御"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1004
#, no-wrap
msgid "Auto Save mode"
msgstr "Auto Save mode"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1005
#, no-wrap
msgid "mode, Auto Save"
msgstr "mode, Auto Save"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1006
#, no-wrap
msgid "crashes"
msgstr "crashes"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1012
msgid "From time to time, Emacs automatically saves each visited file in a separate file, without altering the file you actually use.  This is called @dfn{auto-saving}.  It prevents you from losing more than a limited amount of work if the system crashes."
msgstr "Emacsは定期的に、visitしているファイルを、実際に使っているファイルを変更せずに、別のファイルに自動的に保存するときがあります。これは@dfn{自動保存(auto-saving)}と呼ばれます。これはシステムがクラッシュしたとき、失われてしまう作業をある程度以下に制限するためのものです。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1020
msgid "When Emacs determines that it is time for auto-saving, it considers each buffer, and each is auto-saved if auto-saving is enabled for it and it has been changed since the last time it was auto-saved.  The message @samp{Auto-saving...} is displayed in the echo area during auto-saving, if any files are actually auto-saved.  Errors occurring during auto-saving are caught so that they do not interfere with the execution of commands you have been typing."
msgstr "Emacsが自動保存するときだと決定すると、各バッファーを判断して、それらのバッファーの自動保存が有効で、最後に自動保存されてから変更されている場合は、自動保存します。ファイルが実際に自動保存されている場合は、自動保存の間、エコーエリアに@samp{Auto-saving...}というメッセージが表示されます。自動保存の間のエラーはキャッチされるので、ユーザーがタイプして実行したコマンドに、干渉することはありません。"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1026
msgid "Control: Auto Save Control"
msgstr "Control: Auto Save Control"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1026
msgid "Controlling when and how often to auto-save."
msgstr "自動保存をいつ、どのような間隔で行うかの制御。"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1026
msgid "Files: Auto Save Files"
msgstr "Files: Auto Save Files"

#. type: node
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1026
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1141
#, no-wrap
msgid "Recover"
msgstr "Recover"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1026
msgid "Recovering text from auto-save files."
msgstr "自動保存ファイルからのテキストの復旧。"

#. type: menuentry
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1026
msgid "The file where auto-saved changes are actually made until you save the file."
msgstr "ファイルを保存するまでの間、自動保存された変更が実際に保存されるファイル。"

#. type: node
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1028
#, no-wrap
msgid "Auto Save Files"
msgstr "Auto Save Files"

#. type: subsection
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1029
#, no-wrap
msgid "Auto-Save Files"
msgstr "自動保存ファイル"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1036
msgid "Auto-saving does not normally save in the files that you visited, because it can be very undesirable to save a change that you did not want to make permanent.  Instead, auto-saving is done in a different file called the @dfn{auto-save file}, and the visited file is changed only when you request saving explicitly (such as with @kbd{C-x C-s})."
msgstr "自動保存は通常、visitしているファイルへの保存はしません。なぜなら永続化したくない変更を保存するのは、好ましくないからです。そのかわりに、自動保存は@dfn{auto-saveファイル}と呼ばれる別のファイルに保存し、visitしているファイルへの変更は、保存を明示的に要求したとき(@kbd{C-x C-s}など)に行います。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1050
msgid "Normally, the auto-save file name is made by appending @samp{#} to the front and rear of the visited file name.  Thus, a buffer visiting file @file{foo.c} is auto-saved in a file @file{#foo.c#}.  Most buffers that are not visiting files are auto-saved only if you request it explicitly; when they are auto-saved, the auto-save file name is made by appending @samp{#} to the front and rear of buffer name, then adding digits and letters at the end for uniqueness.  For example, the @file{*mail*} buffer in which you compose messages to be sent might be auto-saved in a file named @file{#*mail*#704juu}.  Auto-save file names are made this way unless you reprogram parts of Emacs to do something different (the functions @code{make-auto-save-file-name} and @code{auto-save-file-name-p}).  The file name to be used for auto-saving in a buffer is calculated when auto-saving is turned on in that buffer."
msgstr "auto-saveファイルの名前は通常、visitしているファイル名の前後に@samp{#}をつけて作られます。したがって@file{foo.c}というファイルをvisitしているバッファーは、@file{#foo.c#}というファイルに自動保存されます。ファイルをvisitしていないバッファーのほとんどは、明示的に要求した場合だけ自動保存されます。それらのバッファーが自動保存されるとき、auto-saveファイル名は、バッファー名の前後に@samp{#}をつけて、その後ろに数字と文字を付け加えて一意な名前にします。たとえば送信メッセージを作成する@file{*mail*}バッファーは、@file{#*mail*#704juu}のような名前のファイルに、自動保存されます。Emacsの一部(関数@code{make-auto-save-file-name}および@code{auto-save-file-name-p})を違った方法で再プログラムしない限り、auto-saveファイル名はこの方法で作成されますバッファーの自動保存に使われるファイル名は、そのバッファーの自動保存をオンにしたときに計算されます。"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1051
#, no-wrap
msgid "auto-save for remote files"
msgstr "auto-save for remote files"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1052
#, no-wrap
msgid "auto-save-file-name-transforms"
msgstr "auto-save-file-name-transforms"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1059
msgid "The variable @code{auto-save-file-name-transforms} allows a degree of control over the auto-save file name.  It lets you specify a series of regular expressions and replacements to transform the auto save file name.  The default value puts the auto-save files for remote files (@pxref{Remote Files}) into the temporary file directory on the local machine."
msgstr "変数@code{auto-save-file-name-transforms}は、auto-saveファイル名をある程度制御することを許します。これに一連の正規表現を指定して置換することにより、auto-saveファイル名を変更します。デフォルト値は、リモートのファイル(@ref{Remote Files}を参照してください)を、ローカルマシンの一時ディレクトリーのauto-saveファイルに変換します。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1066
msgid "When you delete a substantial part of the text in a large buffer, auto save turns off temporarily in that buffer.  This is because if you deleted the text unintentionally, you might find the auto-save file more useful if it contains the deleted text.  To reenable auto-saving after this happens, save the buffer with @kbd{C-x C-s}, or use @kbd{C-u 1 M-x auto-save-mode}."
msgstr "大きなバッファーから大量のテキストを削除したとき、そのバッファーにたいする自動保存は一時的にオフになります。これは、もしテキストをうっかり削除してしまった場合、それがauto-saveファイルに含まれていて、そこから探せる方が便利だからです。これが発生した後、再び自動保存を有効にするには、バッファーを@kbd{C-x C-s}で保存するか、@kbd{C-u 1 M-x auto-save-mode}を使います。"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1067
#, no-wrap
msgid "auto-save-visited-mode"
msgstr "auto-save-visited-mode"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1077
msgid "If you want auto-saving to be done in the visited file rather than in a separate auto-save file, enable the global minor mode @code{auto-save-visited-mode}.  In this mode, auto-saving is identical to explicit saving.  Note that this mode is orthogonal to the @code{auto-save} mode described above; you can enable both at the same time.  However, if @code{auto-save} mode is active in some buffer and the obsolete @code{auto-save-visited-file-name} variable is set to a non-@code{nil} value, that buffer won't be affected by @code{auto-save-visited-mode}."
msgstr "別のauto-saveファイルではなく、visitしているファイル自体に自動保存したい場合は、グローバルなマイナーモード@code{auto-save-visited-mode}を有効にします。このモードでは、自動保存は明示的な保存と等価です。このモードは上述の@code{auto-save}と直交(orthogonal)するモードであり、両方同時に有効にできることに注意してください。しかし、いくつかのバッファーで@code{auto-save}モードがアクティブで、かつ時代遅れの@code{auto-save-visited-file-name}変数が非@code{nil}値の場合、そのバッファーは@code{auto-save-visited-mode}の影響を受けないでしょう。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1084
msgid "You can use the variable @code{auto-save-visited-interval} to customize the interval between auto-save operations in @code{auto-save-visited-mode}; by default it's five seconds.  @code{auto-save-interval} and @code{auto-save-timeout} have no effect on @code{auto-save-visited-mode}.  @xref{Auto Save Control}, for details on these variables."
msgstr "@code{auto-save-visited-mode}モードの自動保存処理の間隔は、変数@code{auto-save-visited-interval}を使用してカスタマイズできます。@code{auto-save-interval}と@code{auto-save-timeout}は、@code{auto-save-visited-mode}に影響を与えません。これらの変数の詳細は、@ref{Auto Save Control}を参照してください。"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1085
#, no-wrap
msgid "delete-auto-save-files"
msgstr "delete-auto-save-files"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1091
msgid "A buffer's auto-save file is deleted when you save the buffer in its visited file.  (You can inhibit this by setting the variable @code{delete-auto-save-files} to @code{nil}.)  Changing the visited file name with @kbd{C-x C-w} or @code{set-visited-file-name} renames any auto-save file to go with the new visited name."
msgstr "バッファーのauto-saveファイルは、そのバッファーをvisitしているファイルに保存したとき削除されます(変数@code{delete-auto-save-files}を@code{nil}にセットすることにより、これを禁じることができます)。@kbd{C-x C-w}または@code{set-visited-file-name}で、visitされているファイル名を変更することにより、あたらしくvisitされているファイル名にもとづいてauto-saveファイル名はリネームされます。"

#. type: node
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1092
#, no-wrap
msgid "Auto Save Control"
msgstr "Auto Save Control"

#. type: subsection
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1093
#, no-wrap
msgid "Controlling Auto-Saving"
msgstr "自動保存の制御"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1095
#, no-wrap
msgid "auto-save-default"
msgstr "auto-save-default"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1096
#, no-wrap
msgid "auto-save-mode"
msgstr "auto-save-mode"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1104
msgid "Each time you visit a file, auto-saving is turned on for that file's buffer if the variable @code{auto-save-default} is non-@code{nil} (but not in batch mode; @pxref{Initial Options}).  The default for this variable is @code{t}, so auto-saving is the usual practice for file-visiting buffers.  To toggle auto-saving in the current buffer, type @kbd{M-x auto-save-mode}.  Auto Save mode acts as a buffer-local minor mode (@pxref{Minor Modes})."
msgstr "ファイルをvisitする度に、そのファイルバッファーの自動保存は、オンになります(バッチモードでは異なります。@ref{Initial Options}を参照してください)。この変数のデフォルトは@code{t}なので、ファイルをvisitしているバッファーの自動保存は通常、常に行われます。現在のバッファーの自動保存を切り替えるには、@kbd{M-x auto-save-mode}とタイプします。Auto Saveモードはバッファーローカルに動作するマイナーモードです(@ref{Minor Modes}を参照してください)。"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1105
#, no-wrap
msgid "auto-save-interval"
msgstr "auto-save-interval"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1112
msgid "Emacs auto-saves periodically based on how many characters you have typed since the last auto-save.  The variable @code{auto-save-interval} specifies how many characters there are between auto-saves.  By default, it is 300.  Emacs doesn't accept values that are too small: if you customize @code{auto-save-interval} to a value less than 20, Emacs will behave as if the value is 20."
msgstr "Emacsは最後に自動保存されてから何文字タイプしたかにもとづいて、定期的に自動保存を行います。変数@code{auto-save-interval}は、自動保存と自動保存の間に何文字タイプされたかを指定します。デフォルトは300です。Emacsは小さすぎる値は受け付けません。@code{auto-save-interval}を20より小さな値にカスタマイズした場合、Emacsは20と指定されたかのように振る舞います。"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1113
#, no-wrap
msgid "auto-save-timeout"
msgstr "auto-save-timeout"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1126
msgid "Auto-saving also takes place when you stop typing for a while.  By default, it does this after 30 seconds of idleness (at this time, Emacs may also perform garbage collection; @pxref{Garbage Collection,,, elisp, The Emacs Lisp Reference Manual}).  To change this interval, customize the variable @code{auto-save-timeout}.  The actual time period is longer if the current buffer is long; this is a heuristic which aims to keep out of your way when you are editing long buffers, in which auto-save takes an appreciable amount of time.  Auto-saving during idle periods accomplishes two things: first, it makes sure all your work is saved if you go away from the terminal for a while; second, it may avoid some auto-saving while you are actually typing."
msgstr "自動保存はタイピングをストップしたときも行われます。デフォルトでは30秒アイドル状態が続くと実行されます。(このときEmacsはガベージコレクションも実行します; @ref{Garbage Collection,,, elisp, The Emacs Lisp Reference Manual}を参照してください)。この間隔を変更するには、変数@code{auto-save-timeout}をカスタマイズします。実際の実行間隔は、現在のバッファーの大きさに応じて長くなります。これは、自動保存が実感できるほど時間がかかるような大きなバッファーを編集しているときは、それをなるべく無くすようにする狙いです。アイドル状態のときの自動保存は、2つの事を達成します。最初に、端末を少しの間離れるときなどに、すべての作業の保存を保証します。次に、実際にタイプしているときは自動保存を避けます。"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1127
#, no-wrap
msgid "auto-save-visited-interval"
msgstr "auto-save-visited-interval"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1132
msgid "When @code{auto-save-visited-mode} is enabled, Emacs will auto-save file-visiting buffers after five seconds of idle time.  You can customize the variable @code{auto-save-visited-interval} to change the idle time interval."
msgstr "@code{auto-save-visited-mode}が有効なとき、Emacsはアイドル5秒後に、ファイルをvisitしているバッファーを自動保存するでしょう。アイドル時の間隔は、変数@code{auto-save-visited-interval}でカスタマイズできます。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1136
msgid "Emacs also does auto-saving whenever it gets a fatal error.  This includes killing the Emacs job with a shell command such as @samp{kill %emacs}, or disconnecting a phone line or network connection."
msgstr "Emacsは、致命的なエラーが発生したときも自動保存を行います。これには@samp{kill %emacs}のようなコマンドによるEmacsジョブのkill、電話回線やネットワーク回線の切断が含まれます。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1137
#, no-wrap
msgid "do-auto-save"
msgstr "do-auto-save"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1140
msgid "You can perform an auto-save explicitly with the command @kbd{M-x do-auto-save}."
msgstr "コマンド@kbd{M-x do-auto-save}により、明示的に自動保存を行うことができます。"

#. type: subsection
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1142
#, no-wrap
msgid "Recovering Data from Auto-Saves"
msgstr "自動保存からのデータ復旧"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1144
#, no-wrap
msgid "recover-file"
msgstr "recover-file"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1152
msgid "You can use the contents of an auto-save file to recover from a loss of data with the command @kbd{M-x recover-file @key{RET} @var{file} @key{RET}}.  This visits @var{file} and then (after your confirmation)  restores the contents from its auto-save file @file{#@var{file}#}.  You can then save with @kbd{C-x C-s} to put the recovered text into @var{file} itself.  For example, to recover file @file{foo.c} from its auto-save file @file{#foo.c#}, do:"
msgstr "コマンド@kbd{M-x recover-file @key{RET} @var{file} @key{RET}}により、auto-saveファイルの内容を使って、失われたデータを復旧できます。これは@var{file}をvisitして、(確認を求めた後で)auto-saveファイル@file{#@var{file}#}の内容をリストアします。その後@kbd{C-x C-s}で復旧したテキストを、@var{file}自身に保存できます。たとえばファイル@file{foo.c}を、そのauto-saveファイル@file{#foo.c#}で復旧するには、以下のようにします:"

#. type: example
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1157
#, no-wrap
msgid ""
"M-x recover-file @key{RET} foo.c @key{RET}\n"
"yes @key{RET}\n"
"C-x C-s\n"
msgstr ""
"M-x recover-file @key{RET} foo.c @key{RET}\n"
"yes @key{RET}\n"
"C-x C-s\n"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1163
msgid "Before asking for confirmation, @kbd{M-x recover-file} displays a directory listing describing the specified file and the auto-save file, so you can compare their sizes and dates.  If the auto-save file is older, @kbd{M-x recover-file} does not offer to read it."
msgstr "@kbd{M-x recover-file}は確認を求める前に、指定したファイルとauto-saveファイルのあるディレクトリー一覧を表示するので、ファイルのサイズや日付を確認できます。auto-saveの方が古い場合、@kbd{M-x recover-file}はそれを読み込むように提案しません。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1164
#, no-wrap
msgid "recover-session"
msgstr "recover-session"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1169
msgid "If Emacs or the computer crashes, you can recover all the files you were editing from their auto save files with the command @kbd{M-x recover-session}.  This first shows you a list of recorded interrupted sessions.  Move point to the one you choose, and type @kbd{C-c C-c}."
msgstr "Emacsまたはコンピューターがクラッシュしたとき、@kbd{M-x recover-session}コマンドで編集していたすべてのファイルを、それらのauto-saveファイルで復旧できます。これは最初に中断されたセッションの記録された一覧を表示します。ポイントを移動して選択してから、@kbd{C-c C-c}をタイプします。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1175
msgid "Then @code{recover-session} asks about each of the files that were being edited during that session, asking whether to recover that file.  If you answer @kbd{y}, it calls @code{recover-file}, which works in its normal fashion.  It shows the dates of the original file and its auto-save file, and asks once again whether to recover that file."
msgstr "@code{recover-session}は、そのセッションの間に編集されていた各ファイルについて、ファイルを復旧するか尋ねます。@kbd{y}と応えると@code{recover-file}を呼び出し、通常の方法で復旧を行います。これは元のファイルとauto-saveファイルの日付を表示して、ファイルの復旧を行うかもう1度尋ねます。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1179
msgid "When @code{recover-session} is done, the files you've chosen to recover are present in Emacs buffers.  You should then save them.  Only this---saving them---updates the files themselves."
msgstr "@code{recover-session}が完了すると、復旧を選択したファイルがEmacsバッファーに表示されます。実際にファイル自体を 更新するためには、これらを保存するのが唯一の方法です。"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1180
#, no-wrap
msgid "auto-save-list-file-prefix"
msgstr "auto-save-list-file-prefix"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1187
msgid "Emacs records information about interrupted sessions in files named @file{.saves-@var{pid}-@var{hostname}~} in the directory @file{~/.emacs.d/auto-save-list/}.  This directory is determined by the variable @code{auto-save-list-file-prefix}.  If you set @code{auto-save-list-file-prefix} to @code{nil}, sessions are not recorded for recovery."
msgstr "Emacsは中断されたセッションについての情報を、ディレクトリー@file{~/.emacs.d/auto-save-list/}の、@file{.saves-@var{pid}-@var{hostname}~}という名前のファイルに記録します。@code{auto-save-list-file-prefix}を@code{nil}にセットすると、復旧用にセッションが記録されなくなります。"

#. type: section
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1189
#, no-wrap
msgid "File Name Aliases"
msgstr "ファイルのエイリアス"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1190
#, no-wrap
msgid "symbolic links (visiting)"
msgstr "symbolic links (visiting)"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1191
#, no-wrap
msgid "hard links (visiting)"
msgstr "hard links (visiting)"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1201
msgid "Symbolic links and hard links both make it possible for several file names to refer to the same file.  Hard links are alternate names that refer directly to the file; all the names are equally valid, and no one of them is preferred.  By contrast, a symbolic link is a kind of defined alias: when @file{foo} is a symbolic link to @file{bar}, you can use either name to refer to the file, but @file{bar} is the real name, while @file{foo} is just an alias.  More complex cases occur when symbolic links point to directories."
msgstr "シンボリックリンクとハードリンクは、同じファイルを参照するためにいくつかの名前を使うことを可能にします。ハードリンクは、ファイルを直接参照する他の名前です。それらすべての名前は同じように有効で、それらの間に優先順位はありません。対照的にシンボリックリンクは、ある種の定義されたエイリアス(別名)です。@file{foo}が@file{bar}へのシンボリックリンクの場合、そのファイルをどちらの名前でも参照できますが、@file{bar}が実際の名前で、@file{foo}はエイリアスに過ぎません。シンボリックリンクがディレクトリーを指すときは、さらに複雑なケースが発生します。"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1202
#, no-wrap
msgid "find-file-existing-other-name"
msgstr "find-file-existing-other-name"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1203
#, no-wrap
msgid "find-file-suppress-same-file-warnings"
msgstr "find-file-suppress-same-file-warnings"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1215
msgid "Normally, if you visit a file which Emacs is already visiting under a different name, Emacs displays a message in the echo area and uses the existing buffer visiting that file.  This can happen on systems that support hard or symbolic links, or if you use a long file name on a system that truncates long file names, or on a case-insensitive file system.  You can suppress the message by setting the variable @code{find-file-suppress-same-file-warnings} to a non-@code{nil} value.  You can disable this feature entirely by setting the variable @code{find-file-existing-other-name} to @code{nil}: then if you visit the same file under two different names, you get a separate buffer for each file name."
msgstr "Emacsがすでに異なる名前でvisitしている場合、通常はエコーエリアにメッセージを表示して、そのファイルをvisitしている既存のバッファーを使います。これはハードリンクおよびシンボリックリンクをサポートしているシステム、または長いファイル名を切り詰めるシステムで長い名前のファイルを使っている場合、またはファイル名の大文字小文字を区別しないシステムで発生します。変数@code{find-file-suppress-same-file-warnings}を非@code{nil}値にセットすることにより、メッセージを表示しないようにできます。変数@code{find-file-existing-other-name}を@code{nil}にセットすれば、この機能全体を無効にできます。その場合、同じファイルを異なる名前でvisitすると、それぞれのファイル名で別々のバッファーが使われます。"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1216
#, no-wrap
msgid "find-file-visit-truename"
msgstr "find-file-visit-truename"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1217
#, no-wrap
msgid "truenames of files"
msgstr "truenames of files"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1218
#, no-wrap
msgid "file truenames"
msgstr "file truenames"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1224
msgid "If the variable @code{find-file-visit-truename} is non-@code{nil}, then the file name recorded for a buffer is the file's @dfn{truename} (made by replacing all symbolic links with their target names), rather than the name you specify.  Setting @code{find-file-visit-truename} also implies the effect of @code{find-file-existing-other-name}."
msgstr "変数@code{find-file-visit-truename}が非@code{nil}の場合、バッファー用に記録されるファイル名は、指定した名前ではなく、ファイルの@dfn{本当の名前}(これはすべてのシンボリックリンクを対象の名前で置き換えて作られます)が使われます。@code{find-file-visit-truename}をセットするは、@code{find-file-existing-other-name}にも暗に影響します。"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1225
#, no-wrap
msgid "directory name abbreviation"
msgstr "directory name abbreviation"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1226
#, no-wrap
msgid "directory-abbrev-alist"
msgstr "directory-abbrev-alist"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1242
msgid "Sometimes, a directory is ordinarily accessed through a symbolic link, and you may want Emacs to preferentially show its linked name.  To do this, customize @code{directory-abbrev-alist}.  Each element in this list should have the form @code{(@var{from} . @var{to})}, which means to replace @var{from} with @var{to} whenever @var{from} appears in a directory name.  The @var{from} string is a regular expression (@pxref{Regexps}).  It is matched against directory names anchored at the first character, and should start with @samp{\\`} (to support directory names with embedded newlines, which would defeat @samp{^}).  The @var{to} string should be an ordinary absolute directory name pointing to the same directory.  Do not use @samp{~} to stand for a home directory in the @var{to} string; Emacs performs these substitutions separately.  Here's an example, from a system on which @file{/home/fsf} is normally accessed through a symbolic link named @file{/fsf}:"
msgstr "シンボリックリンクを通じてアクセスされるようなディレクトリーにたいしては通常、優先的にリンクされた名前をEmacsに表示させたいときがあります。これを行うには@code{directory-abbrev-alist}をカスタマイズします。このリストの各要素は@code{(@var{from} . @var{to})}という書式です。これはディレクトリー名に@var{from}が出現したときは常に、@var{from}を@var{to}で置き換えることを意味します。文字列@var{from}は正規表現です(@ref{Regexps}を参照してください)。正規表現はディレクトリー名の最初の文字にマッチさせる必要があるので、@samp{\\`}で始まります(埋め込みの改行をサポートするディレクトリー名の場合は、@samp{^}で無効にします)。@var{to}には同じディレクトリーを指す、絶対パスによる普通のディレクトリー名を指定する必要があります。文字列@var{to}でホームディレクトリーを指定するのに、@samp{~}を使用しないでください。Emacsはこれらの変換を個別に行います。以下は通常シンボリックリンク@file{/fsf}でアクセスされる、@file{/home/fsf}を指定する例です:"

#. type: example
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1245
#, no-wrap
msgid "((\"\\\\`/home/fsf\" . \"/fsf\"))\n"
msgstr "((\"\\\\`/home/fsf\" . \"/fsf\"))\n"

#. type: section
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1248
#, no-wrap
msgid "File Directories"
msgstr "ファイルディレクトリー"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1250
#, no-wrap
msgid "file directory"
msgstr "file directory"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1251
#, no-wrap
msgid "directory listing"
msgstr "directory listing"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1259
msgid "The file system groups files into @dfn{directories}.  A @dfn{directory listing} is a list of all the files in a directory.  Emacs provides commands to create and delete directories, and to make directory listings in brief format (file names only) and verbose format (sizes, dates, and other attributes included).  Emacs also includes a directory browser feature called Dired, which you can invoke with @kbd{C-x d}; see @ref{Dired}."
msgstr "ファイルシステムは、ファイルを@dfn{ディレクトリー}にグループ化します。@dfn{ディレクトリーリスト}は、ディレクトリーに含まれるファイルのリストです。Emacsはディレクトリーを作成および削除するコマンドを提供し、簡単な形式(ファイル名のみ)、および詳細な形式(サイズ、日付、その他の属性を含む)のディレクトリーリストを作成します。EmacsにはDiredと呼ばれるディレクトリーブラウザーも含まれています。詳細は@ref{Dired}(@kbd{C-x d}で呼び出せる)を参照してください。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1261
#, no-wrap
msgid "C-x C-d @var{dir-or-pattern} @key{RET}"
msgstr "C-x C-d @var{dir-or-pattern} @key{RET}"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1263
#, no-wrap
msgid "C-u C-x C-d @var{dir-or-pattern} @key{RET}"
msgstr "C-u C-x C-d @var{dir-or-pattern} @key{RET}"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1263
msgid "Display a brief directory listing (@code{list-directory})."
msgstr "簡単なディレクトリーリストを表示します(@code{list-directory})。"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1265
msgid "Display a verbose directory listing."
msgstr "詳細なディレクトリーリストを表示します。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1265
#, no-wrap
msgid "M-x make-directory @key{RET} @var{dirname} @key{RET}"
msgstr "M-x make-directory @key{RET} @var{dirname} @key{RET}"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1267
msgid "Create a new directory named @var{dirname}."
msgstr "@var{dirname}という名前の新しいディレクトリーを作成します。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1267
#, no-wrap
msgid "M-x delete-directory @key{RET} @var{dirname} @key{RET}"
msgstr "M-x delete-directory @key{RET} @var{dirname} @key{RET}"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1270
msgid "Delete the directory named @var{dirname}.  If it isn't empty, you will be asked whether you want to delete it recursively."
msgstr "@var{dirname}という名前のディレクトリーを削除します。もし空でない場合、それらを再帰的に削除するか尋ねます。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1272
#, no-wrap
msgid "list-directory"
msgstr "list-directory"

#. type: kindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1273
#, no-wrap
msgid "C-x C-d"
msgstr "C-x C-d"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1278
msgid "The command to display a directory listing is @kbd{C-x C-d} (@code{list-directory}).  It reads using the minibuffer a file name which is either a directory to be listed or a wildcard-containing pattern for the files to be listed.  For example,"
msgstr "ディレクトリーリストを表示するコマンドは、@kbd{C-x C-d} (@code{list-directory})です。これはミニバッファーを使って、リストを表示するディレクトリーと、リストするファイルを指定するワイルドカードが含まれたパターンの両方により、ファイル名を読み取ります。たとえば"

#. type: example
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1281
#, no-wrap
msgid "C-x C-d /u2/emacs/etc @key{RET}\n"
msgstr "C-x C-d /u2/emacs/etc @key{RET}\n"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1286
msgid "lists all the files in directory @file{/u2/emacs/etc}.  Here is an example of specifying a file name pattern:"
msgstr "これはディレクトリー@file{/u2/emacs/etc}のファイルをリストします。以下はファイル名のパターンを指定する例です。"

#. type: example
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1289
#, no-wrap
msgid "C-x C-d /u2/emacs/src/*.c @key{RET}\n"
msgstr "C-x C-d /u2/emacs/src/*.c @key{RET}\n"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1295
msgid "Normally, @kbd{C-x C-d} displays a brief directory listing containing just file names.  A numeric argument (regardless of value) tells it to make a verbose listing including sizes, dates, and owners (like @samp{ls -l})."
msgstr "通常、@kbd{C-x C-d}は名前だけを含む、簡単なディレクトリーリストを表示します。数引数(値は関係なし)は、サイズ、日付、所有者を含む詳細な一覧を作成するよう指示します。"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1296
#, no-wrap
msgid "list-directory-brief-switches"
msgstr "list-directory-brief-switches"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1297
#, no-wrap
msgid "list-directory-verbose-switches"
msgstr "list-directory-verbose-switches"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1305
msgid "The text of a directory listing is mostly obtained by running @code{ls} in an inferior process.  Two Emacs variables control the switches passed to @code{ls}: @code{list-directory-brief-switches} is a string giving the switches to use in brief listings (@code{\"-CF\"} by default), and @code{list-directory-verbose-switches} is a string giving the switches to use in a verbose listing (@code{\"-l\"} by default)."
msgstr "ディレクトリーリストのテキストは、主に下位プロセスとして@code{ls}を実行することにより取得されます。2つのEmacs変数が、@code{ls}に指定するスイッチを制御します。@code{list-directory-brief-switches}には、簡単な一覧に使うためのスイッチを文字列で指定します(デフォルトは@code{\"-CF\"})。@code{list-directory-verbose-switches}には、詳細な一覧に使うためのスイッチを文字列で指定します(デフォルトは@code{\"-l\"})。"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1306
#, no-wrap
msgid "directory-free-space-program"
msgstr "directory-free-space-program"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1307
#, no-wrap
msgid "directory-free-space-args"
msgstr "directory-free-space-args"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1317
msgid "In verbose directory listings, Emacs adds information about the amount of free space on the disk that contains the directory.  You can customize how this is done for local filesystems via the variables @code{directory-free-space-program} and @code{directory-free-space-args}: the former specifies what program to run (default: @command{df}), the latter which arguments to pass to that program (default is system-dependent).  (On MS-Windows and MS-DOS, these two variables are ignored, and an internal Emacs implementation of the same functionality is used instead.)"
msgstr "詳細なディレクトリー一覧では、Emacsはディレクトリーが含まれるディスクの空き容量についての情報を追加します。変数@code{directory-free-space-program}および@code{directory-free-space-args}を通じて、ローカルファイルシステムにたいしてこれが行われる方法をカスタマイズできます。@code{directory-free-space-program}には実行するプログラム(デフォルトは@command{df})、そのプログラムに渡す引数は@code{directory-free-space-args}(デフォルトはシステム依存)を指定します(MS-WindowsおよびMS-DOSでは、これら2つの変数は無視され、同様な機能をもつEmacsの内部実装がかわりに使用される)。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1326
msgid "The command @kbd{M-x delete-directory} prompts for a directory's name using the minibuffer, and deletes the directory if it is empty.  If the directory is not empty, you will be asked whether you want to delete it recursively.  On systems that have a ``Trash'' (or ``Recycle Bin'') feature, you can make this command move the specified directory to the Trash instead of deleting it outright, by changing the variable @code{delete-by-moving-to-trash} to @code{t}.  @xref{Misc File Ops}, for more information about using the Trash."
msgstr "コマンド@kbd{M-x delete-directory}は、ミニバッファーを使ってディレクトリー名の入力を求め、空のときはディレクトリーを削除します。ディレクトリーが空でない場合、再帰的に削除するか確認を求めます。``Trash(ごみ箱)''(または``Recycle Bin'')の機能をもつシステムでは、変数@code{delete-by-moving-to-trash}を@code{t}に変更することにより、指定したディレクトリーを無条件に削除するかわりに、ごみ箱に移動します。ごみ箱の使い方についての情報は、@ref{Misc File Ops}を参照してください。"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1329
#, no-wrap
msgid "comparing files"
msgstr "comparing files"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1331
#, no-wrap
msgid "diff"
msgstr "diff"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1332
#, no-wrap
msgid "diff-switches"
msgstr "diff-switches"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1344
msgid "The command @kbd{M-x diff} prompts for two file names, using the minibuffer, and displays the differences between the two files in a buffer named @file{*diff*}.  This works by running the @command{diff} program, using options taken from the variable @code{diff-switches}.  The value of @code{diff-switches} should be a string; the default is @code{\"-u\"} to specify a unified context diff.  @xref{Top,, Diff, diffutils, Comparing and Merging Files}, for more information about the @command{diff} program."
msgstr "コマンド@kbd{M-x diff}は、ミニバッファーを使って2つのファイル名の入力を求め、@file{*diff*}という名前のバッファーに、2つのファイルの違いを表示します。これは@command{diff}プログラムに、変数@code{diff-switches}で指定されたオプションを指定して実行することにより機能します。@code{diff-switches}には文字列を指定します。デフォルトはunified context diff形式を指定する@code{\"-u\"}です。プログラムについての情報は、@ref{Top,, Diff, diffutils, Comparing and Merging Files}を参照してください。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1347
msgid "The output of the @code{diff} command is shown using a major mode called Diff mode.  @xref{Diff Mode}."
msgstr "@code{diff}コマンドの出力は、Diffモードと呼ばれるメジャーモードを使って表示されます。@ref{Diff Mode}を参照してください。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1350
msgid "A (much more sophisticated) alternative is @kbd{M-x ediff} (@pxref{Top, Ediff, Ediff, ediff, The Ediff Manual})."
msgstr "(より高機能な)代替物は@kbd{M-x ediff}です(@ref{Top, Ediff, Ediff, ediff, The Ediff Manual}を参照)。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1351
#, no-wrap
msgid "diff-backup"
msgstr "diff-backup"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1356
msgid "The command @kbd{M-x diff-backup} compares a specified file with its most recent backup.  If you specify the name of a backup file, @code{diff-backup} compares it with the source file that it is a backup of.  In all other respects, this behaves like @kbd{M-x diff}."
msgstr "コマンド@kbd{M-x diff-backup}は指定したファイルと、そのファイルの一番最近のバックアップを比較します。バックアップファイル名を指定したときは、@code{diff-backup}は指定されたバックアップファイルと、それの元となるファイルを比較します。それ以外の点は@kbd{M-x diff}と同じです。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1357
#, no-wrap
msgid "diff-buffer-with-file"
msgstr "diff-buffer-with-file"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1361
msgid "The command @kbd{M-x diff-buffer-with-file} compares a specified buffer with its corresponding file.  This shows you what changes you would make to the file if you save the buffer."
msgstr "コマンド@kbd{M-x diff-buffer-with-file}は指定されたバッファーと、それに対応するファイルを比較します。これはバッファーを保存すると、ファイルにどのような変更がされるかを表示します。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1362
#, no-wrap
msgid "compare-windows"
msgstr "compare-windows"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1371
msgid "The command @kbd{M-x compare-windows} compares the text in the current window with that in the window that was the selected window before you selected the current one.  (For more information about windows in Emacs, @ref{Windows}.)  Comparison starts at point in each window, after pushing each initial point value on the mark ring (@pxref{Mark Ring}) in its respective buffer.  Then it moves point forward in each window, one character at a time, until it reaches characters that don't match.  Then the command exits."
msgstr "コマンド@kbd{M-x compare-windows}はカレントウィンドウと、カレントウィンドウの前に選択されていたウィンドウを比較します(Emacsのウィンドウについての詳細は、@ref{Windows}を参照してください)。比較はそれぞれのウィンドウのポイント位置から、それぞれのバッファーのポイントの初期位置を、対応するバッファーのマークリング(@ref{Mark Ring}を参照)にpushした後に開始されます。それから各ウィンドウのポイントを1文字ずつ前方に移動していきます。文字がマッチしなくなるとコマンドは終了します。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1377
msgid "If point in the two windows is followed by non-matching text when the command starts, @kbd{M-x compare-windows} tries heuristically to advance up to matching text in the two windows, and then exits.  So if you use @kbd{M-x compare-windows} repeatedly, each time it either skips one matching range or finds the start of another."
msgstr "コマンドを開始したとき、2つのウィンドウのポイントの後ろのテキストがマッチしない場合、@kbd{M-x compare-windows}は2つのウィンドウでマッチするテキストが見つかるまでポイントを進めてから終了します。したがって@kbd{M-x compare-windows}を繰り返し使うと、毎回1つのマッチする範囲をスキップするか、次の開始点を探します。"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1378
#, no-wrap
msgid "compare-ignore-case"
msgstr "compare-ignore-case"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1379
#, no-wrap
msgid "compare-ignore-whitespace"
msgstr "compare-ignore-whitespace"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1387
msgid "With a numeric argument, @code{compare-windows} ignores changes in whitespace.  If the variable @code{compare-ignore-case} is non-@code{nil}, the comparison ignores differences in case as well.  If the variable @code{compare-ignore-whitespace} is non-@code{nil}, @code{compare-windows} by default ignores changes in whitespace, but a prefix argument turns that off for that single invocation of the command."
msgstr "数引数を指定すると、@code{compare-windows}は空白文字の違いを無視します。変数@code{compare-ignore-case}が非@code{nil}の場合、大文字小文字の違いを無視して比較します。変数@code{compare-ignore-whitespace}が非@code{nil}の場合、@code{compare-windows}はデフォルトでは空白文字の違いを無視しますが、数引数が指定されたときは、その回のコマンド呼び出しでは、これをオフにします。"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1388
#, no-wrap
msgid "Smerge mode"
msgstr "Smerge mode"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1389
#, no-wrap
msgid "smerge-mode"
msgstr "smerge-mode"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1390
#, no-wrap
msgid "failed merges"
msgstr "failed merges"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1391
#, no-wrap
msgid "merges, failed"
msgstr "merges, failed"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1392
#, no-wrap
msgid "comparing 3 files (@code{diff3})"
msgstr "comparing 3 files (@code{diff3})"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1399
msgid "You can use @kbd{M-x smerge-mode} to turn on Smerge mode, a minor mode for editing output from the @command{diff3} program.  This is typically the result of a failed merge from a version control system update outside VC, due to conflicting changes to a file.  Smerge mode provides commands to resolve conflicts by selecting specific changes."
msgstr "@kbd{M-x smerge-mode}を使って、Smergeモードに切り替えることができます。これは@command{diff3}プログラムの出力を編集するマイナーモードです。これは通常、バージョン管理システムと、バージョン管理システムの外でのupdateをマージするとき、ファイルへの変更が競合して失敗した結果です。Smergeモードは特定の変更を選択することにより、競合を解決するコマンドを提供します。"

#. type: iftex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1402
msgid "@xref{Emerge,,, emacs-xtra, Specialized Emacs Features},"
msgstr "ファイルをマージする強力なインターフェースを提供するEmerge機能については、"

#. type: ifnottex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1405
msgid "@xref{Emerge},"
msgstr "ファイルをマージする強力なインターフェースを提供するEmerge機能については、"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1408
msgid "for the Emerge facility, which provides a powerful interface for merging files."
msgstr "@ref{Emerge}を参照してください。"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1411
#, no-wrap
msgid "Diff mode"
msgstr "Diff mode"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1412
#, no-wrap
msgid "diff-mode"
msgstr "diff-mode"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1413
#, no-wrap
msgid "patches, editing"
msgstr "patches, editing"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1420
msgid "Diff mode is a major mode used for the output of @kbd{M-x diff} and other similar commands.  This kind of output is called a @dfn{patch}, because it can be passed to the @command{patch} command to automatically apply the specified changes.  To select Diff mode manually, type @kbd{M-x diff-mode}."
msgstr "Diffモードは、@kbd{M-x diff}や他の同様なコマンドの出力のために使用されるメジャーモードです。この種の出力は@dfn{patch}と呼ばれます。なぜならそれが特定の変更を自動的に適用するために、@command{patch}コマンドに渡されるからです。手動でDiffモードを選択するには、@kbd{M-x diff-mode}とタイプします。"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1421
#, no-wrap
msgid "hunk, diff"
msgstr "hunk, diff"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1429
msgid "The changes specified in a patch are grouped into @dfn{hunks}, which are contiguous chunks of text that contain one or more changed lines.  Hunks can also include unchanged lines to provide context for the changes.  Each hunk is preceded by a @dfn{hunk header}, which specifies the old and new line numbers at which the hunk occurs.  Diff mode highlights each hunk header, to distinguish it from the actual contents of the hunk."
msgstr "パッチに指定された変更は、@dfn{hunk(欲張り)}にグループ化されます。これは変更された行を１行以上含むテキストと、それに隣接するテキストです。hunksには変更のコンテキストを提供するために、変更されていない行も含むことができます。それぞれのhunkには@dfn{hunkヘッダー}が前についていて、これはhunkが出現する古い方の行番号と、新しい行番号が指定されます。Diffモードは実際のhunkの内容と区別するため、hunkヘッダーをハイライトします。"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1430
#, no-wrap
msgid "diff-update-on-the-fly"
msgstr "diff-update-on-the-fly"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1437
msgid "You can edit a Diff mode buffer like any other buffer.  (If it is read-only, you need to make it writable first.  @xref{Misc Buffer}.)  Whenever you change a hunk, Diff mode attempts to automatically correct the line numbers in the hunk headers, to ensure that the patch remains correct.  To disable automatic line number correction, change the variable @code{diff-update-on-the-fly} to @code{nil}."
msgstr "他のバッファーと同様に、Diffモードのバッファーを編集することができます(もし読み込み専用の場合、最初にそれを書き込み可にする必要があります。@ref{Misc Buffer}を参照してください)。hunkを変更すると、Diffモードはpatchを正しい状態に保つために、hunkヘッダーの行番号を自動的に修正しようと試みます。自動的な行番号の修正を無効にするには、変数@code{diff-update-on-the-fly}を@code{nil}に変更してください。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1441
msgid "Diff mode treats each hunk as an error message, similar to Compilation mode.  Thus, you can use commands such as @kbd{C-x `} to visit the corresponding source locations.  @xref{Compilation Mode}."
msgstr "DiffモードはCompilationモードと同様に、各hunkをエラーメッセージとして扱います。したがって@kbd{C-x `}のようなコマンドを使って、対応するソースの位置をvisitすることができます。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1444
msgid "In addition, Diff mode provides the following commands to navigate, manipulate and apply parts of patches:"
msgstr "それに加えてDiffモードは、移動、操作、patchの一部を適用するために、以下のコマンドを提供します:"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1446
#, no-wrap
msgid "M-n"
msgstr "M-n"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1447
#, no-wrap
msgid "diff-hunk-next"
msgstr "diff-hunk-next"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1449
msgid "Move to the next hunk-start (@code{diff-hunk-next})."
msgstr "次のhunkが開始される位置に移動します(@code{diff-hunk-next})。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1450
#, no-wrap
msgid "diff-auto-refine-mode"
msgstr "diff-auto-refine-mode"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1451
#, no-wrap
msgid "mode, Diff Auto-Refine"
msgstr "mode, Diff Auto-Refine"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1452
#, no-wrap
msgid "Diff Auto-Refine mode"
msgstr "Diff Auto-Refine mode"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1458
msgid "This command has a side effect: it @dfn{refines} the hunk you move to, highlighting its changes with better granularity.  To disable this feature, type @kbd{M-x diff-auto-refine-mode} to toggle off the minor mode Diff Auto-Refine mode.  To disable Diff Auto-Refine mode by default, add this to your init file (@pxref{Hooks}):"
msgstr "このコマンドには副作用があります。これは移動先のhunkを@dfn{refines(不純物を取り除く)}して、よりよい粒度で変更をハイライトします。この機能を無効にするには@kbd{M-x diff-auto-refine-mode}とタイプして、マイナーモードのDiff Auto-Refineモードをオフに切り替えます。デフォルトでDiff Auto-Refineモードを無効にするには、以下をinitファイルに追加します(@ref{Hooks}を参照してください):"

#. type: example
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1462
#, no-wrap
msgid ""
"(add-hook 'diff-mode-hook\n"
"          (lambda () (diff-auto-refine-mode -1)))\n"
msgstr ""
"(add-hook 'diff-mode-hook\n"
"          (lambda () (diff-auto-refine-mode -1)))\n"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1464
#, no-wrap
msgid "M-p"
msgstr "M-p"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1465
#, no-wrap
msgid "diff-hunk-prev"
msgstr "diff-hunk-prev"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1469
msgid "Move to the previous hunk-start (@code{diff-hunk-prev}).  Like @kbd{M-n}, this has the side-effect of refining the hunk you move to, unless you disable Diff Auto-Refine mode."
msgstr "前のhunkが開始される位置に移動します(@code{diff-hunk-prev})。これは@kbd{M-n}と同様、Diff Auto-Refineモードが無効でなければ、移動先のhunkをrefiningする副作用があります。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1470
#, no-wrap
msgid "M-@}"
msgstr "M-@}"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1471
#, no-wrap
msgid "diff-file-next"
msgstr "diff-file-next"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1474
msgid "Move to the next file-start, in a multi-file patch (@code{diff-file-next})."
msgstr "複数ファイルへのpatchで、次のファイルが開始される位置に移動します(@code{diff-file-next})。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1475
#, no-wrap
msgid "M-@{"
msgstr "M-@{"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1476
#, no-wrap
msgid "diff-file-prev"
msgstr "diff-file-prev"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1479
msgid "Move to the previous file-start, in a multi-file patch (@code{diff-file-prev})."
msgstr "複数ファイルへのpatchで、前のファイルが開始される位置に移動します(@code{diff-file-prev})。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1480
#, no-wrap
msgid "M-k"
msgstr "M-k"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1481
#, no-wrap
msgid "diff-hunk-kill"
msgstr "diff-hunk-kill"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1483
msgid "Kill the hunk at point (@code{diff-hunk-kill})."
msgstr "ポイントがある位置のhunkをkillします(@code{diff-hunk-kill})。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1484
#, no-wrap
msgid "M-K"
msgstr "M-K"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1485
#, no-wrap
msgid "diff-file-kill"
msgstr "diff-file-kill"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1488
msgid "In a multi-file patch, kill the current file part.  (@code{diff-file-kill})."
msgstr "複数ファイルへのpatchで、現在のファイル部分をkillします(@code{diff-file-kill})。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1489
#, no-wrap
msgid "C-c C-a"
msgstr "C-c C-a"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1490
#, no-wrap
msgid "diff-apply-hunk"
msgstr "diff-apply-hunk"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1491
#, no-wrap
msgid "patches, applying"
msgstr "patches, applying"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1494
msgid "Apply this hunk to its target file (@code{diff-apply-hunk}).  With a prefix argument of @kbd{C-u}, revert this hunk."
msgstr "このhunkを対象ファイルに適用します(@code{diff-apply-hunk})。プレフィクス引数@kbd{C-u}を指定すると、このhunkを復元します。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1495
#, no-wrap
msgid "C-c C-b"
msgstr "C-c C-b"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1496
#, no-wrap
msgid "diff-refine-hunk"
msgstr "diff-refine-hunk"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1500
msgid "Highlight the changes of the hunk at point with a finer granularity (@code{diff-refine-hunk}).  This allows you to see exactly which parts of each changed line were actually changed."
msgstr "ポイント位置のhunkの変更を、よりよい粒度でハイライトします(@code{diff-refine-hunk})。これにより変更された各行について実際に変更された箇所を確実に見ることができます。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1501
#, no-wrap
msgid "C-c C-c"
msgstr "C-c C-c"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1502
#, no-wrap
msgid "diff-goto-source"
msgstr "diff-goto-source"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1505
msgid "Go to the source file and line corresponding to this hunk (@code{diff-goto-source})."
msgstr "このhunkに対応するソースファイルの行へジャンプします(@code{diff-goto-source})。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1506
#, no-wrap
msgid "C-c C-e"
msgstr "C-c C-e"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1507
#, no-wrap
msgid "diff-ediff-patch"
msgstr "diff-ediff-patch"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1510
msgid "Start an Ediff session with the patch (@code{diff-ediff-patch}).  @xref{Top, Ediff, Ediff, ediff, The Ediff Manual}."
msgstr "このパッチでEdiffセッションを開始します。@ref{Top, Ediff, Ediff, ediff, The Ediff Manual}を参照してください。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1511
#, no-wrap
msgid "C-c C-n"
msgstr "C-c C-n"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1512
#, no-wrap
msgid "diff-restrict-view"
msgstr "diff-restrict-view"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1517
msgid "Restrict the view to the current hunk (@code{diff-restrict-view}).  @xref{Narrowing}.  With a prefix argument of @kbd{C-u}, restrict the view to the current file of a multiple-file patch.  To widen again, use @kbd{C-x n w} (@code{widen})."
msgstr "表示を現在のhunkに制限します(@code{diff-restrict-view})。@ref{Narrowing}を参照してください。プレフィクス引数@kbd{C-u}を指定すると、複数ファイルへのpatchで、表示を現在のファイルに制限します。制限を解除するには、@kbd{C-x n w} (@code{widen})を使います。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1518
#, no-wrap
msgid "C-c C-r"
msgstr "C-c C-r"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1519
#, no-wrap
msgid "diff-reverse-direction"
msgstr "diff-reverse-direction"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1522
msgid "Reverse the direction of comparison for the entire buffer (@code{diff-reverse-direction})."
msgstr "バッファー全体の比較方向を逆転します(@code{diff-reverse-direction})。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1523
#, no-wrap
msgid "C-c C-s"
msgstr "C-c C-s"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1524
#, no-wrap
msgid "diff-split-hunk"
msgstr "diff-split-hunk"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1532
msgid "Split the hunk at point (@code{diff-split-hunk}).  This is for manually editing patches, and only works with the @dfn{unified diff format} produced by the @option{-u} or @option{--unified} options to the @command{diff} program.  If you need to split a hunk in the @dfn{context diff format} produced by the @option{-c} or @option{--context} options to @command{diff}, first convert the buffer to the unified diff format with @kbd{C-c C-u}."
msgstr "ポイント位置でhunkを分割します(@code{diff-split-hunk})。これは手動でpatchを編集するためのもので、@command{diff}プログラムに@option{-u}または@option{--unified}オプションを指定して生成された、@dfn{unified diff format(統一diffフォーマット)}だけで機能します。@command{diff}に@option{-c}または@option{--context}オプションを指定して生成された、@dfn{context diff format(コンテキストdiffフォーマット)}のhunkを分割するには、最初に@kbd{C-c C-u}で、バッファーをunified diff formatに変換する必要があります。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1533
#, no-wrap
msgid "C-c C-d"
msgstr "C-c C-d"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1534
#, no-wrap
msgid "diff-unified->context"
msgstr "diff-unified->context"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1538
msgid "Convert the entire buffer to the @dfn{context diff format} (@code{diff-unified->context}).  With a prefix argument, convert only the text within the region."
msgstr "バッファー全体を、@dfn{context diff format}に変換します(@code{diff-unified->context})。プレフィクス引数を指定すると、リージョンのテキストだけを変換します。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1539
#, no-wrap
msgid "C-c C-u"
msgstr "C-c C-u"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1540
#, no-wrap
msgid "diff-context->unified"
msgstr "diff-context->unified"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1545
msgid "Convert the entire buffer to unified diff format (@code{diff-context->unified}).  With a prefix argument, convert unified format to context format.  When the mark is active, convert only the text within the region."
msgstr "バッファー全体をunified diff formatに変換します(@code{diff-context->unified})。プレフィクス引数を指定すると、unified formatからcontext formatに変換します。マークがアクティブのときは、リージョンのテキストだけを変換します。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1546
#, no-wrap
msgid "C-c C-w"
msgstr "C-c C-w"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1547
#, no-wrap
msgid "diff-ignore-whitespace-hunk"
msgstr "diff-ignore-whitespace-hunk"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1550
msgid "Re-diff the current hunk, disregarding changes in whitespace (@code{diff-ignore-whitespace-hunk})."
msgstr "空白文字の変更を無視して、カレントhunkを再diffします(@code{diff-ignore-whitespace-hunk})。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1551
#, no-wrap
msgid "C-x 4 A"
msgstr "C-x 4 A"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1552
#, no-wrap
msgid "diff-add-change-log-entries-other-window"
msgstr "diff-add-change-log-entries-other-window"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1553
#, no-wrap
msgid "add-change-log-entry-other-window@r{, in Diff mode}"
msgstr "add-change-log-entry-other-window@r{, in Diff mode}"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1562
msgid "Generate a ChangeLog entry, like @kbd{C-x 4 a} does (@pxref{Change Log}), for each one of the hunks (@code{diff-add-change-log-entries-other-window}).  This creates a skeleton of the log of changes that you can later fill with the actual descriptions of the changes.  @kbd{C-x 4 a} itself in Diff mode operates on behalf of the current hunk's file, but gets the function name from the patch itself.  This is useful for making log entries for functions that are deleted by the patch."
msgstr "それぞれのhunkについて、@kbd{C-x 4 a}が行うようにChangeLog(@ref{Change Log}を参照してください)のエントリーを生成します(@code{diff-add-change-log-entries-other-window})。これは、あとで実際に変更の説明を記入できるように、変更ログの雛形を作ります。Diffモードでの@kbd{C-x 4 a}自体は、現在のhunkのファイルのためのものですが、関数名はpatch自体から取得します。これはpatchにより削除される関数のための、ログエントリーを作るのに有用です。"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1566
#, no-wrap
msgid "trailing whitespace, in patches"
msgstr "trailing whitespace, in patches"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1567
#, no-wrap
msgid "diff-delete-trailing-whitespace"
msgstr "diff-delete-trailing-whitespace"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1580
msgid "Patches sometimes include trailing whitespace on modified lines, as an unintentional and undesired change.  There are two ways to deal with this problem.  Firstly, if you enable Whitespace mode in a Diff buffer (@pxref{Useless Whitespace}), it automatically highlights trailing whitespace in modified lines.  Secondly, you can use the command @kbd{M-x diff-delete-trailing-whitespace}, which searches for trailing whitespace in the lines modified by the patch, and removes that whitespace in both the patch and the patched source file(s).  This command does not save the modifications that it makes, so you can decide whether to save the changes (the list of modified files is displayed in the echo area).  With a prefix argument, it tries to modify the original source files rather than the patched source files."
msgstr "patchには変更された行の行末に、無意識に入力された望んでいない空白文字が含まれている場合があります。この問題を扱うには2つの方法があります。1つ目はDiffバッファーでWhitespaceモード(@ref{Useless Whitespace}を参照してください)を有効にする方法で、これは自動的に変更された行の行末にある空白文字をハイライトします。2つ目はコマンド@kbd{M-x diff-delete-trailing-whitespace}を使う方法で、patchにより変更された行の行末の空白文字を検索して、patchとpatchされたソースファイルの両方からそれを取り除きます。このコマンドは変更を保存しないので、ユーザーが変更を保存するか決定することができます(変更されたファイルはエコーエリアに表示されます)。プレフィクス引数を指定すると、patchされたファイルではなく、元のソースファイルを変更しようと試みます。"

#. type: section
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1582
#, no-wrap
msgid "Copying, Naming and Renaming Files"
msgstr "ファイルのコピー、命名、リネーム。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1588
msgid "Emacs has several commands for copying, naming, and renaming files.  All of them read two file names, @var{old} (or @var{target}) and @var{new}, using the minibuffer, and then copy or adjust a file's name accordingly; they do not accept wildcard file names."
msgstr "Emacsにはファイルをコピー、命名、リネームするためのコマンドがいくつかあります。これらはすべてミニバッファーを使用して@var{old}(または@var{target})と@var{new}の2つのファイル名を読み取り、それらをコピー、またはファイル名に調整します。これらのコマンドは、ワイルドカードを含むファイル名は許容しません。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1596
msgid "In all these commands, if the argument @var{new} is just a directory name (@pxref{Directory Names,,, elisp, the Emacs Lisp Reference Manual}), the real new name is in that directory, with the same non-directory component as @var{old}.  For example, the command @w{@kbd{M-x rename-file @key{RET} ~/foo @key{RET} /tmp/ @key{RET}}} renames @file{~/foo} to @file{/tmp/foo}.  On GNU and other POSIX-like systems, directory names end in @samp{/}."
msgstr "これらすべてのコマンドは、引数@var{new}が単なるディレクトリー名(@ref{Directory Names,,, elisp, the Emacs Lisp Reference Manual}を参照)の場合には、そのディレクトリーを実際の新しい名前として、@var{old}をそれの非ディレクトリー成分とします。たとえば、コマンド@w{@kbd{M-x rename-file @key{RET} ~/foo @key{RET} /tmp/ @key{RET}}}は、@file{~/foo}を@file{/tmp/foo}にリネームします。GNU、およびその他のPOSIXシステムでは、ディレクトリー名は@samp{/}で終端されます。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1599
msgid "All these commands ask for confirmation when the new file name already exists."
msgstr "これらのコマンドはすべて、新しいファイル名がすでに存在する場合は確認を求めます。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1600
#, no-wrap
msgid "copy-file"
msgstr "copy-file"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1601
#, no-wrap
msgid "copying files"
msgstr "copying files"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1604
msgid "@kbd{M-x copy-file} copies the contents of the file @var{old} to the file @var{new}."
msgstr "@kbd{M-x copy-file}はファイル@var{old}のコンテンツを、ファイル@var{new}にコピーします。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1605
#, no-wrap
msgid "copy-directory"
msgstr "copy-directory"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1611
msgid "@kbd{M-x copy-directory} copies directories, similar to the @command{cp -r} shell command.  If @var{new} is a directory name, it creates a copy of the @var{old} directory and puts it in @var{new}.  Otherwise it copies all the contents of @var{old} into a new directory named @var{new}."
msgstr "@kbd{M-x copy-directory}は、シェルコマンド@command{cp -r}と同じようにディレクトリーをコピーします。@var{new}がディレクトリー名の場合、このコマンドは@var{old}ディレクトリーのコピーを作成して、それを@var{new}の下に配します。それ以外では、このコマンドは@var{old}のコンテンツを、新しい@var{new}という名前のディレクトリーにすべてコピーします。"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1612
#, no-wrap
msgid "renaming files"
msgstr "renaming files"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1613
#, no-wrap
msgid "rename-file"
msgstr "rename-file"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1619
msgid "@kbd{M-x rename-file} renames file @var{old} as @var{new}.  If the file name @var{new} already exists, you must confirm with @kbd{yes} or renaming is not done; this is because renaming causes the old meaning of the name @var{new} to be lost.  If @var{old} and @var{new} are on different file systems, the file @var{old} is copied and deleted."
msgstr "@kbd{M-x rename-file}は、ファイル@var{old}を@var{new}にリネームします。すでにファイル名@var{new}が存在する場合、確認に@kbd{yes}と答えなければリネームは行われません。なぜなら、名前@var{new}の古い内容が失われてしまうからです。@var{old}と@var{new}が異なるファイルシステム上にある場合は、ファイル@var{old}がコピーされた後に削除されます。"

#. type: ifnottex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1624
msgid "If a file is under version control (@pxref{Version Control}), you should rename it using @w{@kbd{M-x vc-rename-file}} instead of @w{@kbd{M-x rename-file}}.  @xref{VC Delete/Rename}."
msgstr "ファイルがバージョンコントロール(@ref{Version Control}を参照してください)の配下にある時は、@w{@kbd{M-x rename-file}}のかわりに@w{@kbd{M-x vc-rename-file}}を使ってリネームします。@ref{VC Delete/Rename}を参照してください。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1626
#, no-wrap
msgid "add-name-to-file"
msgstr "add-name-to-file"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1627
#, no-wrap
msgid "hard links (creation)"
msgstr "hard links (creation)"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1634
msgid "@kbd{M-x add-name-to-file} adds an additional name to an existing file without removing the old name.  The new name is created as a hard link to the existing file.  The new name must belong on the same file system that the file is on.  On MS-Windows, this command works only if the file resides in an NTFS file system.  On MS-DOS, and some remote system types, it works by copying the file."
msgstr "@kbd{M-x add-name-to-file}は、既存のファイルの古い名前を削除せずに、新しい名前を追加します。新しい名前は、既存のファイルのハードリンクとして作成されます。新しい名前は、そのファイルがあるのと同じファイルシステムになければなりません。MS-Windowsでは、このコマンドはファイルがNTFSファイルシステムにあるときだけ機能します。MS-DOS、およびその他いくつかのリモートシステムタイプでは、ファイルをコピーすることにより機能します。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1635
#, no-wrap
msgid "make-symbolic-link"
msgstr "make-symbolic-link"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1636
#, no-wrap
msgid "symbolic links (creation)"
msgstr "symbolic links (creation)"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1650
msgid "@kbd{M-x make-symbolic-link} creates a symbolic link named @var{new}, which points at @var{target}.  The effect is that future attempts to open file @var{new} will refer to whatever file is named @var{target} at the time the opening is done, or will get an error if the name @var{target} is nonexistent at that time.  This command does not expand the argument @var{target}, so that it allows you to specify a relative name as the target of the link.  However, this command does expand leading @samp{~} in @var{target} so that you can easily specify home directories, and strips leading @samp{/:} so that you can specify relative names beginning with literal @samp{~} or @samp{/:}.  @xref{Quoted File Names}.  On MS-Windows, this command works only on MS Windows Vista and later.  When @var{new} is remote, it works depending on the system type."
msgstr "@kbd{M-x make-symbolic-link}は、@var{target}を指す@var{new}という名前のシンボリックリンクを作成します。これにより、今後@var{new}というファイルを開こうとすると、その時点で@var{target}という名前のファイルが何であれ、ファイルのオープンが行われたときは、そのファイルを開きます。その時点で@var{target}という名前のファイルが存在しないときはエラーになります。このコマンドは引数@var{target}を展開しないので、リンクの対象を相対パスで指定できます。しかし、このコマンドは@var{target}内の先頭の@samp{~}は展開するので、簡単にホームディレクトリーを指定できます。また、先頭の@samp{/:}は取り除くので、リテラル@samp{~}および@samp{/:}で始まる相対パスを指定することができます。@ref{Quoted File Names}を参照してください。MS-Windowsでは、このコマンドはMS Windows Vista以降だけで機能します。@var{new}がリモートのときは、そのシステムタイプに依存して機能します。"

#. type: section
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1652
#, no-wrap
msgid "Miscellaneous File Operations"
msgstr "その他のファイル操作"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1656
msgid "Emacs has commands for performing many other operations on files.  All operate on one file; they do not accept wildcard file names."
msgstr "Emacsには、ファイルを操作する他のコマンドがたくさん存在します。それらはすべて1つのファイルを操作します。ファイル名にワイルドカードは指定できません。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1657
#, no-wrap
msgid "delete-file"
msgstr "delete-file"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1658
#, no-wrap
msgid "deletion (of files)"
msgstr "deletion (of files)"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1662
msgid "@kbd{M-x delete-file} prompts for a file and deletes it.  If you are deleting many files in one directory, it may be more convenient to use Dired rather than @code{delete-file}.  @xref{Dired Deletion}."
msgstr "@kbd{M-x delete-file}はファイルの入力を求め、そのファイルを削除します。1つのディレクトリーにある、複数のファイルを削除する場合、@code{delete-file}よりDiredを使う方が便利でしょう。@ref{Dired Deletion}を参照してください。"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1663
#, no-wrap
msgid "trash"
msgstr "trash"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1664
#, no-wrap
msgid "recycle bin"
msgstr "recycle bin"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1669
msgid "@kbd{M-x move-file-to-trash} moves a file into the system @dfn{Trash} (or @dfn{Recycle Bin}).  This is a facility available on most operating systems; files that are moved into the Trash can be brought back later if you change your mind."
msgstr "@kbd{M-x move-file-to-trash}は、ファイルをシステムの@dfn{Trash}(または@dfn{Recycle Bin})に移動します。この機能は、ほとんどのオペレーティングシステムで利用可能です。Trashに移動されたファイルは、後で気が変わったとき元に戻すことができます。"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1670
#, no-wrap
msgid "delete-by-moving-to-trash"
msgstr "delete-by-moving-to-trash"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1680
msgid "By default, Emacs deletion commands do @emph{not} use the Trash.  To use the Trash (when it is available) for common deletion commands, change the variable @code{delete-by-moving-to-trash} to @code{t}.  This affects the commands @kbd{M-x delete-file} and @kbd{M-x delete-directory} (@pxref{Directories}), as well as the deletion commands in Dired (@pxref{Dired Deletion}).  Supplying a prefix argument to @kbd{M-x delete-file} or @kbd{M-x delete-directory} makes them delete outright, instead of using the Trash, regardless of @code{delete-by-moving-to-trash}."
msgstr "デフォルトでは、Emacsの削除コマンドはTrashを@emph{使いません}。一般的な削除コマンドでTrash(それが利用可能な場合)を使うには、変数@code{delete-by-moving-to-trash}を@code{t}に変更します。これはコマンド@kbd{M-x delete-file}と@kbd{M-x delete-directory} (@ref{Directories}を参照してください)、およびDired (@ref{Dired Deletion}を参照してください)の削除コマンドに影響を与えます。@kbd{M-x delete-file}および@kbd{M-x delete-directory}にプレフィクス引数を与えると、@code{delete-by-moving-to-trash}の値にかかわらず、Trashを使わずに完全に削除します。"

#. type: ifnottex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1685
msgid "If a file is under version control (@pxref{Version Control}), you should delete it using @kbd{M-x vc-delete-file} instead of @kbd{M-x delete-file}.  @xref{VC Delete/Rename}."
msgstr "ファイルがバージョンコントロール(@ref{Version Control}を参照してください)の配下にある時は、@kbd{M-x delete-file}のかわりに@kbd{M-x vc-delete-file}を使って、ファイルを削除します。@ref{VC Delete/Rename}を参照してください。"

#. type: kindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1687
#, no-wrap
msgid "C-x i"
msgstr "C-x i"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1688
#, no-wrap
msgid "insert-file"
msgstr "insert-file"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1694
msgid "@kbd{M-x insert-file} (also @kbd{C-x i}) inserts a copy of the contents of the specified file into the current buffer at point, leaving point unchanged before the contents.  The position after the inserted contents is added to the mark ring, without activating the mark (@pxref{Mark Ring})."
msgstr "@kbd{M-x insert-file}(@kbd{C-x i}も)は、指定したファイルの内容のコピーを、現在のポイント位置に挿入し、ポイントの位置は変更せずに挿入された内容の前に残します。挿入した内容の後の位置はマークリングに追加され、マークは非アクティブになります(@ref{Mark Ring}を参照してください)。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1695
#, no-wrap
msgid "insert-file-literally"
msgstr "insert-file-literally"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1701
msgid "@kbd{M-x insert-file-literally} is like @kbd{M-x insert-file}, except the file is inserted literally: it is treated as a sequence of @acronym{ASCII} characters with no special encoding or conversion, similar to the @kbd{M-x find-file-literally} command (@pxref{Visiting})."
msgstr "@kbd{M-x insert-file-literally}も@kbd{M-x insert-file}と同様ですが、ファイルはliterally(そのまま)挿入されます。つまり@kbd{M-x find-file-literally}コマンド(@ref{Visiting}を参照してください)と同様に、特別なエンコーディングや変換なしに、@acronym{ASCII}文字の並びとして扱われます。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1702
#, no-wrap
msgid "write-region"
msgstr "write-region"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1709
msgid "@kbd{M-x write-region} is the inverse of @kbd{M-x insert-file}; it copies the contents of the region into the specified file.  @kbd{M-x append-to-file} adds the text of the region to the end of the specified file.  @xref{Accumulating Text}.  The variable @code{write-region-inhibit-fsync} applies to these commands, as well as saving files; see @ref{Customize Save}."
msgstr "@kbd{M-x write-region}は@kbd{M-x insert-file}の逆です。このコマンドはリージョンの内容を、指定されたファイルにコピーします。@kbd{M-x append-to-file}はリージョンのテキストを、指定されたファイルの末尾に加えます。@ref{Accumulating Text}を参照してください。変数@code{write-region-inhibit-fsync}の値は、これらのコマンドおよびファイルの保存に影響を与えます。@ref{Customize Save}を参照してください。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1710
#, no-wrap
msgid "set-file-modes"
msgstr "set-file-modes"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1711
#, no-wrap
msgid "file modes"
msgstr "file modes"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1712
#, no-wrap
msgid "file permissions"
msgstr "file permissions"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1722
msgid "@kbd{M-x set-file-modes} reads a file name followed by a @dfn{file mode}, and applies that file mode to the specified file.  File modes, also called @dfn{file permissions}, determine whether a file can be read, written to, or executed, and by whom.  This command reads file modes using the same symbolic or octal format accepted by the @command{chmod} command; for instance, @samp{u+x} means to add execution permission for the user who owns the file.  It has no effect on operating systems that do not support file modes.  @code{chmod} is a convenience alias for this function."
msgstr "@kbd{M-x set-file-modes}はファイル名と、その後に@dfn{ファイルモード(file mode)}を読み込んで、指定されたファイルにそのファイルモードを適用します。ファイルモード(または@dfn{ファイルパーミッション(file permissions)}とも呼ばれます)は、ファイルが読み込み可能か、書き込み可能か、実行可能か、そしてそれは誰にたいしてなのかを決定します。このコマンドは、@command{chmod}コマンドに指定する形式の、シンボルまたは8進のファイルモードを読み取ります。たとえば@samp{u+x}は、そのファイルを所有するユーザーに実行可能の権限を追加することを意味します。ファイルモードをサポートしないオペレーティングシステムでは、効果はありません。@code{chmod}はこの関数の便利なエイリアスです。"

#. type: section
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1724
#, no-wrap
msgid "Accessing Compressed Files"
msgstr "圧縮ファイルへのアクセス"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1725
#, no-wrap
msgid "compression"
msgstr "compression"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1726
#, no-wrap
msgid "uncompression"
msgstr "uncompression"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1727
#, no-wrap
msgid "Auto Compression mode"
msgstr "Auto Compression mode"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1728
#, no-wrap
msgid "mode, Auto Compression"
msgstr "mode, Auto Compression"

#. type: pindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1729
#, no-wrap
msgid "gzip"
msgstr "gzip"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1736
msgid "Emacs automatically uncompresses compressed files when you visit them, and automatically recompresses them if you alter them and save them.  Emacs recognizes compressed files by their file names.  File names ending in @samp{.gz} indicate a file compressed with @code{gzip}.  Other endings indicate other compression programs."
msgstr "Emacsは、圧縮されたファイルをvisitするとき、自動的に解凍します。また、それらのファイルを変更して保存するときも、自動的に再圧縮します。Emacsは圧縮ファイルを名前で認識します。ファイル名が@samp{.gz}で終わっていれば、それはファイルが@code{gzip}で圧縮されていることを示します。他の拡張子の場合は、他の圧縮プログラムを示します。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1741
msgid "Automatic uncompression and compression apply to all the operations in which Emacs uses the contents of a file.  This includes visiting it, saving it, inserting its contents into a buffer, loading it, and byte compiling it."
msgstr "自動的な解凍と圧縮は、Emacsがファイル内容を操作するすべてに適用されます。これにはvisit、保存、内容のバッファーへの挿入、ロード、バイトコンパイルが含まれます。"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1742
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1743
#, no-wrap
msgid "auto-compression-mode"
msgstr "auto-compression-mode"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1747
msgid "To disable this feature, type the command @kbd{M-x auto-compression-mode}.  You can disable it permanently by customizing the variable @code{auto-compression-mode}."
msgstr "この機能を無効にするには、コマンド@kbd{M-x auto-compression-mode}とタイプします。変数@code{auto-compression-mode}をカスタマイズすることにより、永続的に無効にすることができます。"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1750
#, no-wrap
msgid "mode, tar"
msgstr "mode, tar"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1751
#, no-wrap
msgid "Tar mode"
msgstr "Tar mode"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1752
#, no-wrap
msgid "file archives"
msgstr "file archives"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1760
msgid "A file whose name ends in @samp{.tar} is normally an @dfn{archive} made by the @code{tar} program.  Emacs views these files in a special mode called Tar mode which provides a Dired-like list of the contents (@pxref{Dired}).  You can move around through the list just as you would in Dired, and visit the subfiles contained in the archive.  However, not all Dired commands are available in Tar mode."
msgstr "名前が@samp{.tar}で終わるファイルは通常、@code{tar}プログラムで作られた@dfn{アーカイブ}です。Emacsはそれらを、Tarモードと呼ばれる特別なモードで表示します。これは内容をDiredに似たリストで提供します(@ref{Dired}を参照してください)。リストの移動はDiredのときと同様で、アーカイブに含まれるファイルをvisitできます。しかしTarモードでは、Diredコマンドのすべてが利用可能ではありません。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1764
msgid "If Auto Compression mode is enabled (@pxref{Compressed Files}), then Tar mode is used also for compressed archives---files with extensions @samp{.tgz}, @code{.tar.Z} and @code{.tar.gz}."
msgstr "Auto Compressionモードが有効な場合(@ref{Compressed Files}を参照してください)、Tarモードは圧縮アーカイブ(ファイルの拡張子が@samp{.tgz}、@code{.tar.Z}、@code{.tar.gz})も使うことができます。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1773
msgid "The keys @kbd{e}, @kbd{f} and @key{RET} all extract a component file into its own buffer.  You can edit it there, and if you save the buffer, the edited version will replace the version in the Tar buffer.  Clicking with the mouse on the file name in the Tar buffer does likewise.  @kbd{v} extracts a file into a buffer in View mode (@pxref{View Mode}).  @kbd{o} extracts the file and displays it in another window, so you could edit the file and operate on the archive simultaneously."
msgstr "キー@kbd{e}、@kbd{f}、@key{RET}はすべて、ファイルをファイル自身のバッファーに展開します。それをバッファーで編集して、バッファーを保存すると、編集されたバージョンでTarバッファーのものを置き換えます。Tarバッファーでファイル名をマウスでクリックしても、同様なことが行えます。@kbd{v}はファイルをバッファーにViewモードで展開します(@ref{View Mode}を参照してください)。@kbd{o}は、ファイルを展開して他のウィンドウで表示するので、ファイルの編集とアーカイブの操作を同時に行うことができます。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1780
msgid "The @kbd{I} key adds a new (regular) file to the archive.  The file is initially empty, but can readily be edited using the commands above.  The command inserts the new file before the current one, so that using it on the topmost line of the Tar buffer makes the new file the first one in the archive, and using it at the end of the buffer makes it the last one."
msgstr "キー@kbd{I}は、新しい(標準)ファイルをアーカイブに追加します。ファイルは最初は空ですが、上記のコマンドを使用してすぐに編集することができます。このコマンドはカレントのファイルの前に新しいファイルを挿入するので、Tarバッファーの最上行で使用すると、新しいファイルがアーカイブの最上行となり、バッファーの最後で使用すると、新しいファイルがアーカイブの最下行になります。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1787
msgid "@kbd{d} marks a file for deletion when you later use @kbd{x}, and @kbd{u} unmarks a file, as in Dired.  @kbd{C} copies a file from the archive to disk and @kbd{R} renames a file within the archive.  @kbd{g} reverts the buffer from the archive on disk.  The keys @kbd{M}, @kbd{G}, and @kbd{O} change the file's permission bits, group, and owner, respectively."
msgstr "Diredと同様に、@kbd{d}は後で@kbd{x}を使ったときにファイルを削除するためにマークし、@kbd{u}はマークを外します。@kbd{C}はファイルをアーカイブからディスクにコピーし、@kbd{R}はアーカイブのファイルをリネームします。@kbd{g}はバッファーをディスク上のアーカイブでリバートします。キー@kbd{M}、@kbd{G}、@kbd{O}は、ファイルのパーミッションビット、グループ、所有者を変更します。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1790
msgid "Saving the Tar buffer writes a new version of the archive to disk with the changes you made to the components."
msgstr "Tarバッファーの保存により、構成要素に変更が施された、新しいバージョンのアーカイブをディスクに書き込みます。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1794
msgid "You don't need the @code{tar} program to use Tar mode---Emacs reads the archives directly.  However, accessing compressed archives requires the appropriate uncompression program."
msgstr "Tarモードを使うのに、@code{tar}プログラムは必要ありません。Emacsは直接アーカイブを読み込みます。しかし圧縮アーカイブへのアクセスには、適切な解凍プログラムが必要です。"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1795
#, no-wrap
msgid "Archive mode"
msgstr "Archive mode"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1796
#, no-wrap
msgid "mode, archive"
msgstr "mode, archive"

#. type: pindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1797
#, no-wrap
msgid "arc"
msgstr "arc"

#. type: pindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1798
#, no-wrap
msgid "jar"
msgstr "jar"

#. type: pindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1799
#, no-wrap
msgid "zip"
msgstr "zip"

#. type: pindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1800
#, no-wrap
msgid "rar"
msgstr "rar"

#. type: pindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1801
#, no-wrap
msgid "lzh"
msgstr "lzh"

#. type: pindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1802
#, no-wrap
msgid "zoo"
msgstr "zoo"

#. type: pindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1803
#, no-wrap
msgid "7z"
msgstr "7z"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1804
#, no-wrap
msgid "Java class archives"
msgstr "Java class archives"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1805
#, no-wrap
msgid "unzip archives"
msgstr "unzip archives"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1810
msgid "A separate but similar Archive mode is used for @code{arc}, @code{jar}, @code{lzh}, @code{zip}, @code{rar}, @code{7z}, and @code{zoo} archives, as well as @code{exe} files that are self-extracting executables."
msgstr "@code{arc}、@code{jar}、@code{lzh}、@code{zip}、@code{rar}、@code{7z}、@code{zoo}、および自己解凍実行形式の@code{exe}には、互いに似通った異なるArchiveモードが使われます。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1818
msgid "The key bindings of Archive mode are similar to those in Tar mode, with the addition of the @kbd{m} key which marks a file for subsequent operations, and @kbd{M-@key{DEL}} which unmarks all the marked files.  Also, the @kbd{a} key toggles the display of detailed file information, for those archive types where it won't fit in a single line.  Operations such as renaming a subfile, or changing its mode or owner, are supported only for some of the archive formats."
msgstr "ArchiveモードのキーバインドはTarモードと同様で、それに加えてキー@kbd{m}は後に続く操作のためにファイルをマークし、@kbd{M-@key{DEL}}はマークされたファイルのマークをすべて外します。キー@kbd{a}は、1行に収まらないようなアーカイブの、詳細なファイル情報の表示を切り替えます。ファイルのリネーム、ファイルモードや所有者の変更をサポートするアーカイブ書式は、いくつかに限られます。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1825
msgid "Unlike Tar mode, Archive mode runs the archiving programs to unpack and repack archives.  However, you don't need these programs to look at the archive table of contents, only to extract or manipulate the subfiles in the archive.  Details of the program names and their options can be set in the @samp{Archive} Customize group (@pxref{Customization Groups})."
msgstr "Tarモードとは異なり、Archiveモードはアーカイブの展開と格納に、アーカイブプログラムを実行します。しかし、展開したりアーカイブ内のファイルを操作するときだけこれらのプログラムが必要で、アーカイブの目録を見るには必要ありません。プログラム名とセットできるオプションの詳細は、Customizeグループ@samp{Archive}でセットできます(@ref{Customization Groups}を参照してください)。"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1829
#, no-wrap
msgid "Tramp"
msgstr "Tramp"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1830
#, no-wrap
msgid "FTP"
msgstr "FTP"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1831
#, no-wrap
msgid "remote file access"
msgstr "remote file access"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1834
msgid "You can refer to files on other machines using a special file name syntax:"
msgstr "他のマシンにあるファイルを、特別なファイル名構文を使って参照できます:"

#. type: group
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1840
#, no-wrap
msgid ""
"/@var{method}:@var{host}:@var{filename}\n"
"/@var{method}:@var{user}@@@var{host}:@var{filename}\n"
"/@var{method}:@var{user}@@@var{host}#@var{port}:@var{filename}\n"
msgstr ""
"/@var{method}:@var{host}:@var{filename}\n"
"/@var{method}:@var{user}@@@var{host}:@var{filename}\n"
"/@var{method}:@var{user}@@@var{host}#@var{port}:@var{filename}\n"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1850
msgid "To carry out this request, Emacs uses a remote-login program such as @command{ssh}.  You must always specify in the file name which method to use---for example, @file{/ssh:@var{user}@@@var{host}:@var{filename}} uses @command{ssh}.  When you specify the pseudo method @samp{-} in the file name, Emacs chooses the method as follows:"
msgstr "このリクエストを発行するために、Emacsは@command{ssh}のような、リモートログインプログラムを使います。どのmethodを使うかは、常にファイル名で指定しなければなりません。たとえば@file{/ssh:@var{user}@@@var{host}:@var{filename}}は@command{ssh}を使います。ファイル名のmethodに擬似methodの@samp{-}を使用したとき、Emacsは以下によりmethodを選択します:"

#. type: enumerate
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1854
msgid "If the host name starts with @samp{ftp.} (with dot), Emacs uses FTP."
msgstr "ホスト名が@samp{ftp.}(ドット付き)で始まるとき、EmacsはFTPを使います。"

#. type: enumerate
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1856
msgid "If the user name is @samp{ftp} or @samp{anonymous}, Emacs uses FTP."
msgstr "ユーザー名が@samp{ftp}または@samp{anonymous}のとき、EmacsはFTPを使います。"

#. type: enumerate
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1859
msgid "If the variable @code{tramp-default-method} is set to @samp{ftp}, Emacs uses FTP."
msgstr "変数@code{tramp-default-method}が@samp{ftp}にセットされているとき、EmacsはFTPを使います。"

#. type: enumerate
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1861
msgid "If @command{ssh-agent} is running, Emacs uses @command{scp}."
msgstr "@command{ssh-agent}が実行されているとき、Emacsは@command{scp}を使います。"

#. type: enumerate
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1863
msgid "Otherwise, Emacs uses @command{ssh}."
msgstr "上記以外の場合、Emacsは@command{ssh}を使います。"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1865
#, no-wrap
msgid "disabling remote files"
msgstr "disabling remote files"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1871
msgid "You can entirely turn off the remote file name feature by setting the variable @code{tramp-mode} to @code{nil}.  You can turn off the feature in individual cases by quoting the file name with @samp{/:} (@pxref{Quoted File Names})."
msgstr "変数@code{tramp-mode}を@code{nil}にセットすることにより、リモートファイル名の機能を完全にオフにすることができます。個別のケースについて機能をオフにするには、ファイル名を@samp{/:}でクォートします(@ref{Quoted File Names}を参照してください)。"

#. type: code{#1}
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1872
#, no-wrap
msgid "ange-ftp"
msgstr "ange-ftp"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1877
msgid "Remote file access through FTP is handled by the Ange-FTP package, which is documented in the following.  Remote file access through the other methods is handled by the Tramp package, which has its own manual.  @xref{Top, The Tramp Manual,, tramp, The Tramp Manual}."
msgstr "FTPを通じたリモートファイルへのアクセスは、以下で説明するAnge-FTPパッケージで処理されます。他の方法によりリモートファイルへのアクセスはTrampパッケージにより処理され、これにはそれ自身のマニュアルがあります。@ref{Top, The Tramp Manual,, tramp, The Tramp Manual}を参照してください。"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1878
#, no-wrap
msgid "ange-ftp-default-user"
msgstr "ange-ftp-default-user"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1879
#, no-wrap
msgid "user name for remote file access"
msgstr "user name for remote file access"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1886
msgid "When the Ange-FTP package is used, Emacs logs in through FTP using the name @var{user}, if that is specified in the remote file name.  If @var{user} is unspecified, Emacs logs in using your user name on the local system; but if you set the variable @code{ange-ftp-default-user} to a string, that string is used instead.  When logging in, Emacs may also ask for a password."
msgstr "Ange-FTPパッケージでは、リモートファイル名にユーザー名@var{user}がしているときは、FTPを通じてその名前でログインします。@var{user}が指定されていないとき、Emacsはローカルシステムのユーザー名でログインします。しかし変数@code{ange-ftp-default-user}に文字列がセットされているときは、かわりにその文字列を使用します。Emacsは、ログイン時にパスワードの入力も求めます。"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1887
#, no-wrap
msgid "backups for remote files"
msgstr "backups for remote files"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1888
#, no-wrap
msgid "ange-ftp-make-backup-files"
msgstr "ange-ftp-make-backup-files"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1892
msgid "For performance reasons, Emacs does not make backup files for files accessed via FTP by default.  To make it do so, change the variable @code{ange-ftp-make-backup-files} to a non-@code{nil} value."
msgstr "パフォーマンス的な理由により、FTPを通じたファイルのアクセス時に、デフォルトではEmacsはバックアップファイルを作成しません。バックアップを作成するには、変数@code{ange-ftp-make-backup-files}を非@code{nil}値に変更してください。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1897
msgid "By default, auto-save files for remote files are made in the temporary file directory on the local machine, as specified by the variable @code{auto-save-file-name-transforms}.  @xref{Auto Save Files}."
msgstr "デフォルトではリモートファイルの自動保存ファイルは、変数@code{auto-save-file-name-transforms}で指定された、ローカルマシンの一時ディレクトリーに作成されます。@ref{Auto Save Files}を参照してください。"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1898
#, no-wrap
msgid "anonymous FTP"
msgstr "anonymous FTP"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1899
#, no-wrap
msgid "ange-ftp-generate-anonymous-password"
msgstr "ange-ftp-generate-anonymous-password"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1908
msgid "To visit files accessible by anonymous FTP, you use special user names @samp{anonymous} or @samp{ftp}.  Passwords for these user names are handled specially.  The variable @code{ange-ftp-generate-anonymous-password} controls what happens: if the value of this variable is a string, then that string is used as the password; if non-@code{nil} (the default), then the value of @code{user-mail-address} is used; if @code{nil}, then Emacs prompts you for a password as usual (@pxref{Passwords})."
msgstr "匿名FTPでアクセスできるファイルをvisitするには、特別なユーザー名@samp{anonymous}または@samp{ftp}を使います。これらのユーザー名にたいするパスワードは、特別に処理されます。これは変数@code{ange-ftp-generate-anonymous-password}により制御されます。この変数の値が文字列の場合、その文字列がパスワードとして使用されます。非@code{nil}(デフォルト)の場合、@code{user-mail-address}の値が使用されます。@code{nil}の場合、Emacsは通常どおりパスワードの入力を求めます(@ref{Passwords}を参照してください)。"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1909
#, no-wrap
msgid "firewall, and accessing remote files"
msgstr "firewall, and accessing remote files"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1910
#, no-wrap
msgid "gateway, and remote file access with @code{ange-ftp}"
msgstr "gateway, and remote file access with @code{ange-ftp}"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1911
#, no-wrap
msgid "ange-ftp-smart-gateway"
msgstr "ange-ftp-smart-gateway"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1912
#, no-wrap
msgid "ange-ftp-gateway-host"
msgstr "ange-ftp-gateway-host"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1924
msgid "Sometimes you may be unable to access files on a remote machine because a @dfn{firewall} in between blocks the connection for security reasons.  If you can log in on a @dfn{gateway} machine from which the target files @emph{are} accessible, and whose FTP server supports gatewaying features, you can still use remote file names; all you have to do is specify the name of the gateway machine by setting the variable @code{ange-ftp-gateway-host}, and set @code{ange-ftp-smart-gateway} to @code{t}.  Otherwise you may be able to make remote file names work, but the procedure is complex.  You can read the instructions by typing @kbd{M-x finder-commentary @key{RET} ange-ftp @key{RET}}."
msgstr "セキュリティー上の理由で、リモートマシンとの間にある@dfn{ファイアーウォール(firewall)}により、ファイルにアクセスできないときがあります。対象ファイルにアクセスできるマシンから@dfn{ゲートウェイ(gateway)}マシンにログインできて、FTPサーバーがゲートウェイ機能をサポートしている場合は、リモートファイル名を使うことができます。これを行うには変数@code{ange-ftp-gateway-host}にゲートウェイマシンの名前をセットして、@code{ange-ftp-smart-gateway}を@code{t}にセットする必要があります。それ以外の場合でもリモートファイル名が機能するようにできますが、その方法は複雑です。これらの方法は、@kbd{M-x finder-commentary @key{RET} ange-ftp @key{RET}}とタイプして読むことができます。"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1928
#, no-wrap
msgid "quoting file names"
msgstr "quoting file names"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1929
#, no-wrap
msgid "file names, quote special characters"
msgstr "file names, quote special characters"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1933
msgid "You can @dfn{quote} an absolute file name to prevent special characters and syntax in it from having their special effects.  The way to do this is to add @samp{/:} at the beginning."
msgstr "特殊な文字や構文を含むファイルにたいする特別な効果を防ぐために、絶対ファイル名を@dfn{クォート}できます。これを行うには先頭に@samp{/:}を追加します。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1938
msgid "For example, you can quote a local file name which appears remote, to prevent it from being treated as a remote file name.  Thus, if you have a directory named @file{/foo:} and a file named @file{bar} in it, you can refer to that file in Emacs as @samp{/:/foo:/bar}."
msgstr "たとえばリモートにあるように見える名前の、ローカルなファイルの名前をクォートすることにより、リモートファイル名として扱われないようにすることができます。したがって名前が@file{/foo:}というディレクトリーがあり、そこに@file{bar}という名前のファイルがある場合、Emacsでは、そのファイルを@samp{/:/foo:/bar}という名前で参照できます。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1943
msgid "If you want to quote only special characters in the local part of a remote file name, you can quote just the local part.  @samp{/ssh:baz:/:/foo:/bar} refers to the file @file{bar} of directory @file{/foo:} on the host @file{baz}."
msgstr "リモートファイル名もローカル部分の特殊文字だけをクォートしたい場合はローカル部分だけをクォートできます。たとえば@samp{/ssh:baz:/:/foo:/bar}は、ホスト@file{baz}上のディレクトリー@file{/foo:}のファイル@file{bar}を参照します。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1947
msgid "@samp{/:} can also prevent @samp{~} from being treated as a special character for a user's home directory.  For example, @file{/:/tmp/~hack} refers to a file whose name is @file{~hack} in directory @file{/tmp}."
msgstr "@samp{/:}は、@samp{~}がユーザーのホームディレクトリーを意味する、特別な文字として扱われることを防ぐこともできます。たとえば@file{/:/tmp/~hack}は、ディレクトリー@file{/tmp}のファイル@file{~hack}を参照します。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1952
msgid "Quoting with @samp{/:} is also a way to enter in the minibuffer a file name that contains @samp{$}.  In order for this to work, the @samp{/:} must be at the beginning of the minibuffer contents.  (You can also double each @samp{$}; see @ref{File Names with $}.)"
msgstr "@samp{/:}によるクォートは、ミニバッファーでの名前に@samp{$}を含むファイル名の入力にも使用できます。これが機能するには、ミニバッファーの最初の内容が@samp{/:}で始まらなければなりません(2回@samp{$}を記述することでも同様な効果が得られます。詳細は@ref{File Names with $}を参照してください)。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1956
msgid "You can also quote wildcard characters with @samp{/:}, for visiting.  For example, @file{/:/tmp/foo*bar} visits the file @file{/tmp/foo*bar}."
msgstr "ファイルをvisitするときに、ワイルドカードをクォートすることもできます。たとえば@file{/:/tmp/foo*bar}は、ファイル@file{/tmp/foo*bar}をvisitします。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1965
msgid "Another method of getting the same result is to enter @file{/tmp/foo[*]bar}, which is a wildcard specification that matches only @file{/tmp/foo*bar}.  However, in many cases there is no need to quote the wildcard characters because even unquoted they give the right result.  For example, if the only file name in @file{/tmp} that starts with @samp{foo} and ends with @samp{bar} is @file{foo*bar}, then specifying @file{/tmp/foo*bar} will visit only @file{/tmp/foo*bar}."
msgstr "同じ効果を得るための別の方法は、@file{/tmp/foo[*]bar}と入力する方法です。これは@file{/tmp/foo*bar}だけにマッチするワイルドカード指定です。しかしクォートしなくても同じ結果が得られるので、ワイルドカード文字をクォートする必要がない場合がたくさんあります。たとえば@file{/tmp}の中に@samp{foo}で始まり@samp{bar}で終わるファイルが@file{foo*bar}だけの場合、@file{/tmp/foo*bar}と指定することにより、@file{/tmp/foo*bar}だけをvisitすることができます。"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1969
#, no-wrap
msgid "file name caching"
msgstr "file name caching"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1970
#, no-wrap
msgid "cache of file names"
msgstr "cache of file names"

#. type: pindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1971
#, no-wrap
msgid "find"
msgstr "find"

#. type: kindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1972
#, no-wrap
msgid "C-TAB"
msgstr "C-TAB"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1973
#, no-wrap
msgid "file-cache-minibuffer-complete"
msgstr "file-cache-minibuffer-complete"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1982
msgid "You can use the @dfn{file name cache} to make it easy to locate a file by name, without having to remember exactly where it is located.  When typing a file name in the minibuffer, @kbd{C-@key{TAB}} (@code{file-cache-minibuffer-complete}) completes it using the file name cache.  If you repeat @kbd{C-@key{TAB}}, that cycles through the possible completions of what you had originally typed.  (However, note that the @kbd{C-@key{TAB}} character cannot be typed on most text terminals.)"
msgstr "@dfn{ファイル名キャッシュ(file name cache)}により、ファイルがどこにあるか正確に覚えていなくても、名前でファイルがどこにあるかを簡単に指定することができます。ファイル名をミニバッファーでタイプするとき、@kbd{C-@key{TAB}} (@code{file-cache-minibuffer-complete})で、ファイル名キャッシュを使ったファイル名を補完が行なわれます。@kbd{C-@key{TAB}}を繰り返すと、最初にタイプした内容から補完できる利用可能な候補を順番に表示します(しかし@kbd{C-@key{TAB}}文字は、多くのテキスト端末でタイプできないことに注意してください)。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1985
msgid "The file name cache does not fill up automatically.  Instead, you load file names into the cache using these commands:"
msgstr "ファイル名キャッシュは自動的に充填されません。かわりに以下のコマンドを使ってファイル名をキャッシュにロードします。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1986
#, no-wrap
msgid "file-cache-add-directory"
msgstr "file-cache-add-directory"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1988
#, no-wrap
msgid "M-x file-cache-add-directory @key{RET} @var{directory} @key{RET}"
msgstr "M-x file-cache-add-directory @key{RET} @var{directory} @key{RET}"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1990
msgid "Add each file name in @var{directory} to the file name cache."
msgstr "@var{directory}の各ファイルを、ファイル名キャッシュに加えます。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1990
#, no-wrap
msgid "M-x file-cache-add-directory-using-find @key{RET} @var{directory} @key{RET}"
msgstr "M-x file-cache-add-directory-using-find @key{RET} @var{directory} @key{RET}"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1993
msgid "Add each file name in @var{directory} and all of its nested subdirectories to the file name cache."
msgstr "@var{directory}の各ファイルを、ファイル名キャッシュに加えるとともに、ネストされたサブディレクトリーのすべてのファイルを、ファイル名キャッシュに加えます。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1993
#, no-wrap
msgid "M-x file-cache-add-directory-using-locate @key{RET} @var{directory} @key{RET}"
msgstr "M-x file-cache-add-directory-using-locate @key{RET} @var{directory} @key{RET}"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1997
msgid "Add each file name in @var{directory} and all of its nested subdirectories to the file name cache, using @command{locate} to find them all."
msgstr "@var{directory}の各ファイルを、ファイル名キャッシュに加えるとともに、ネストされたサブディレクトリーのすべてのファイルを、ファイル名キャッシュに加えます。ファイルの検索には、@command{locate}を使用します。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:1997
#, no-wrap
msgid "M-x file-cache-add-directory-list @key{RET} @var{variable} @key{RET}"
msgstr "M-x file-cache-add-directory-list @key{RET} @var{variable} @key{RET}"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2001
msgid "Add each file name in each directory listed in @var{variable} to the file name cache.  @var{variable} should be a Lisp variable whose value is a list of directories, like @code{load-path}."
msgstr "@var{variable}にリストされた各ディレクトリーのファイル名を、ファイル名キャッシュに加えます。@var{variable}はLisp変数で、@code{load-path}と同様、値はディレクトリーのリストです。"

#. type: item
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2001
#, no-wrap
msgid "M-x file-cache-clear-cache @key{RET}"
msgstr "M-x file-cache-clear-cache @key{RET}"

#. type: table
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2003
msgid "Clear the cache; that is, remove all file names from it."
msgstr "キャッシュをクリアーして、すべてのファイル名を削除します。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2008
msgid "The file name cache is not persistent: it is kept and maintained only for the duration of the Emacs session.  You can view the contents of the cache with the @code{file-cache-display} command."
msgstr "ファイル名キャッシュは永続的ではありません。キャッシュが維持されるのはEmacsのセッションの間だけです。キャッシュの内容は、@code{file-cache-display}コマンドで閲覧できます。"

#. type: section
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2010
#, no-wrap
msgid "Convenience Features for Finding Files"
msgstr "ファイル検索の便利な機能"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2015
msgid "In this section, we introduce some convenient facilities for finding recently-opened files, reading file names from a buffer, and viewing image files."
msgstr "このセクションでは、最近開いたファイルの検索、バッファーからのファイル名の読み取り、イメージファイルの閲覧などの、便利な機能を紹介します。"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2016
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2017
#, no-wrap
msgid "recentf-mode"
msgstr "recentf-mode"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2018
#, no-wrap
msgid "recentf-save-list"
msgstr "recentf-save-list"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2019
#, no-wrap
msgid "recentf-edit-list"
msgstr "recentf-edit-list"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2025
msgid "If you enable Recentf mode, with @kbd{M-x recentf-mode}, the @samp{File} menu includes a submenu containing a list of recently opened files.  @kbd{M-x recentf-save-list} saves the current @code{recent-file-list} to a file, and @kbd{M-x recentf-edit-list} edits it."
msgstr "@kbd{M-x recentf-mode}でRecentfモードを有効にすると、@samp{File}メニューに最近開いたファイルを含むサブメニューが含まれるようになります。@kbd{M-x recentf-save-list}は現在の@code{recent-file-list}をファイルに保存し、@kbd{M-x recentf-edit-list}でそれを編集できます。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2032
msgid "The @kbd{M-x ffap} command generalizes @code{find-file} with more powerful heuristic defaults (@pxref{FFAP}), often based on the text at point.  Partial Completion mode offers other features extending @code{find-file}, which can be used with @code{ffap}.  @xref{Completion Options}."
msgstr "@kbd{M-x ffap}コマンドは、@code{find-file}を一般化した、より強力なデフォルト決定のための機能で、基本的にはポイント位置のテキストにもとづいて決定を行ないます。Partial Completionモードは@code{find-file}を拡張する、@code{ffap}とともに使用できるその他の機能を提案します。@ref{Completion Options}を参照してください。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2033
#, no-wrap
msgid "image-mode"
msgstr "image-mode"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2034
#, no-wrap
msgid "image-toggle-display"
msgstr "image-toggle-display"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2035
#, no-wrap
msgid "image-next-file"
msgstr "image-next-file"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2036
#, no-wrap
msgid "image-previous-file"
msgstr "image-previous-file"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2037
#, no-wrap
msgid "images, viewing"
msgstr "images, viewing"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2052
msgid "Visiting image files automatically selects Image mode.  In this major mode, you can type @kbd{C-c C-c} (@code{image-toggle-display})  to toggle between displaying the file as an image in the Emacs buffer, and displaying its underlying text (or raw byte) representation.  Additionally you can type @kbd{C-c C-x} (@code{image-toggle-hex-display})  to toggle between displaying the file as an image in the Emacs buffer, and displaying it in hex representation.  Displaying the file as an image works only if Emacs is compiled with support for displaying such images.  If the displayed image is wider or taller than the frame, the usual point motion keys (@kbd{C-f}, @kbd{C-p}, and so forth) cause different parts of the image to be displayed.  You can press @kbd{n} (@code{image-next-file}) and @kbd{p} (@code{image-previous-file}) to visit the next image file and the previous image file in the same directory, respectively."
msgstr "イメージファイルをvisitすることにより、Imageモードが選択されます。このメジャーモードでは、@kbd{C-c C-c} (@code{image-toggle-display})とタイプすることにより、Emacsバッファーでファイルのイメージ表示と、イメージの元となるテキスト(またはraw byte)表示を切り替えることができます。さらに@kbd{C-c C-x} (@code{image-toggle-hex-display})とタイプすると、Emacsバッファー内でイメージとしてファイルを表示、または16進表記で表示を切り替えることができます。ファイルのイメージ表示は、Emacsがそのようなイメージの表示をサポートするようにコンパイルされているときだけ機能します。イメージがフレームの高さまたは幅より大きい場合、通常のポイント移動キー(@kbd{C-f}、@kbd{C-p}、...)は、イメージの他の部分の表示に使われます。@kbd{n} (@code{image-next-file})および@kbd{p} (@code{image-previous-file})を押すことにより、同じディレクトリーにある次または前のイメージをvisitします。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2053
#, no-wrap
msgid "image-toggle-animation"
msgstr "image-toggle-animation"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2054
#, no-wrap
msgid "image-next-frame"
msgstr "image-next-frame"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2055
#, no-wrap
msgid "image-previous-frame"
msgstr "image-previous-frame"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2056
#, no-wrap
msgid "image-goto-frame"
msgstr "image-goto-frame"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2057
#, no-wrap
msgid "image-increase-speed"
msgstr "image-increase-speed"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2058
#, no-wrap
msgid "image-decrease-speed"
msgstr "image-decrease-speed"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2059
#, no-wrap
msgid "image-reset-speed"
msgstr "image-reset-speed"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2060
#, no-wrap
msgid "image-reverse-speed"
msgstr "image-reverse-speed"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2061
#, no-wrap
msgid "image-animate-loop"
msgstr "image-animate-loop"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2062
#, no-wrap
msgid "image animation"
msgstr "image animation"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2063
#, no-wrap
msgid "animated images"
msgstr "animated images"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2076
msgid "If the image can be animated, the command @key{RET} (@code{image-toggle-animation}) starts or stops the animation.  Animation plays once, unless the option @code{image-animate-loop} is non-@code{nil}.  With @kbd{f} (@code{image-next-frame}) and @kbd{b} (@code{image-previous-frame}) you can step through the individual frames.  Both commands accept a numeric prefix to step through several frames at once.  You can go to a specific frame with @kbd{F} (@code{image-goto-frame}).  Frames are indexed from 1.  Typing @kbd{a +} (@code{image-increase-speed}) increases the speed of the animation, @kbd{a -} (@code{image-decrease-speed}) decreases it, and @kbd{a r} (@code{image-reverse-speed}) reverses it.  The command @kbd{a 0} (@code{image-reset-speed}) resets the speed to the original value."
msgstr "アニメーションが可能なイメージの場合、コマンド@key{RET} (@code{image-toggle-animation})で、アニメーションの開始と停止ができます。オプション@code{image-animate-loop}が非@code{nil}でなければ、アニメーションの再生は1回です。@kbd{f} (@code{image-next-frame})と@kbd{b} (@code{image-previous-frame})により、アニメーションの各フレームを切り替えることができます。これらのコマンドは数引数を指定することにより、指定した数の分だけ先のフレームを表示できます。@kbd{F} (@code{image-goto-frame})により、特定のフレームを指定することができます。フレームは1からインデックスがつきます。@kbd{a +} (@code{image-increase-speed})とタイプすると、アニメーションのスピードが早くなり、@kbd{a -} (@code{image-decrease-speed})で遅くなります。また@kbd{a r} (@code{image-reverse-speed})で逆再生されます。コマンド@kbd{a 0} (@code{image-reset-speed})は、スピードを元の値にリセットします。"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2077
#, no-wrap
msgid "ImageMagick support"
msgstr "ImageMagick support"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2078
#, no-wrap
msgid "imagemagick-enabled-types"
msgstr "imagemagick-enabled-types"

#. type: vindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2079
#, no-wrap
msgid "imagemagick-types-inhibit"
msgstr "imagemagick-types-inhibit"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2094
msgid "If Emacs was compiled with support for the ImageMagick library, it can use ImageMagick to render a wide variety of images.  The variable @code{imagemagick-enabled-types} lists the image types that Emacs may render using ImageMagick; each element in the list should be an internal ImageMagick name for an image type, as a symbol or an equivalent string (e.g., @code{BMP} for @file{.bmp} images).  To enable ImageMagick for all possible image types, change @code{imagemagick-enabled-types} to @code{t}.  The variable @code{imagemagick-types-inhibit} lists the image types which should never be rendered using ImageMagick, regardless of the value of @code{imagemagick-enabled-types} (the default list includes types like @code{C} and @code{HTML}, which ImageMagick can render as an image but Emacs should not).  To disable ImageMagick entirely, change @code{imagemagick-types-inhibit} to @code{t}."
msgstr "EmacsがImageMagickのサポートつきでコンパイルされている場合、さまざまなイメージを描画するのに、ImageMagickを使うことができます。変数@code{imagemagick-enabled-types}は、EmacsがImageMagickを使って描画できるイメージの種類のリストです。リストの各要素は、ImageMagick内部でのイメージ種類にたいする名前で、シンボルまたは等価な文字列で指定します(たとえば@code{BMP}は@file{.bmp}イメージです)。利用可能なイメージの種類にたいしてImageMagickを有効にするには、@code{imagemagick-enabled-types}を@code{t}に変更します。変数@code{imagemagick-types-inhibit}は、変数@code{imagemagick-enabled-types}の値にかかわらずmImageMagickを使わずに描画するイメージ種類のリストです(リストのデフォルトには@code{C}および@code{HTML}などが含まれ、これらはImageMagickはイメージとして描画できるが、Emacsはイメージとして描画しないものです)。ImageMagickを完全に無効にするには、@code{imagemagick-types-inhibit}を@code{t}に変更してください。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2095
#, no-wrap
msgid "thumbs-mode"
msgstr "thumbs-mode"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2096
#, no-wrap
msgid "mode, Thumbs"
msgstr "mode, Thumbs"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2099
msgid "The Image-Dired package can also be used to view images as thumbnails.  @xref{Image-Dired}."
msgstr "Image-Diredパッケージはイメージをサムネールとして表示するのにも使用されます。@ref{Image-Dired}を参照してください。"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2102
#, no-wrap
msgid "filesets"
msgstr "filesets"

#. type: cindex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2103
#, no-wrap
msgid "sets of files"
msgstr "sets of files"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2105
#, no-wrap
msgid "filesets-init"
msgstr "filesets-init"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2112
msgid "If you regularly edit a certain group of files, you can define them as a @dfn{fileset}.  This lets you perform certain operations, such as visiting, @code{query-replace}, and shell commands on all the files at once.  To make use of filesets, you must first add the expression @code{(filesets-init)} to your init file (@pxref{Init File}).  This adds a @samp{Filesets} sub-menu to the menu bar's @samp{File} menu."
msgstr "定期的に特定のファイルのグループを編集する場合、それらを@dfn{ファイルセット(fileset)}として定義できます。これによりvisit、@code{query-replace}、シェルコマンドなどの特別な操作を、すべてのファイルに一度に行うことができます。ファイルセットを使うには、initファイル(@ref{Init File}を参照)に、式@code{(filesets-init)}を追加しなければなりません。これはメニューバーの@samp{File}メニューに、サブメニュー@samp{Filesets}を追加します。"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2113
#, no-wrap
msgid "filesets-add-buffer"
msgstr "filesets-add-buffer"

#. type: findex
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2114
#, no-wrap
msgid "filesets-remove-buffer"
msgstr "filesets-remove-buffer"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2121
msgid "The simplest way to define a fileset is by adding files to it one at a time.  To add a file to fileset @var{name}, visit the file and type @kbd{M-x filesets-add-buffer @key{RET} @var{name} @key{RET}}.  If there is no fileset @var{name}, this creates a new one, which initially contains only the current file.  The command @kbd{M-x filesets-remove-buffer} removes the current file from a fileset."
msgstr "ファイルセットを定義する一番簡単な方法は、ファイルを1つずつ追加する方法です。ファイルセット@var{name}にファイルを追加するには、そのファイルをvisitして@kbd{M-x filesets-add-buffer @key{RET} @var{name} @key{RET}}をタイプします。ファイルセット@var{name}が存在しない場合、現在のファイルだけを含む新しいファイルセットを作成します。コマンド@kbd{M-x filesets-remove-buffer}は、ファイルセットから現在のファイルを削除します。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2131
msgid "You can also edit the list of filesets directly, with @kbd{M-x filesets-edit} (or by choosing @samp{Edit Filesets} from the @samp{Filesets} menu).  The editing is performed in a Customize buffer (@pxref{Easy Customization}).  Normally, a fileset is a simple list of files, but you can also define a fileset as a regular expression matching file names.  Some examples of these more complicated filesets are shown in the Customize buffer.  Remember to select @samp{Save for future sessions} if you want to use the same filesets in future Emacs sessions."
msgstr "@kbd{M-x filesets-edit}(または@samp{Filesets}メニューの@samp{Edit Filesets}を選択)で、ファイルセットを直接編集することもできます。編集はCustomizeバッファーで行われます(@ref{Easy Customization}を参照してください)。ファイルセットは通常、単純なファイルのリストですが、ファイル名にマッチする正規表現で、ファイルセットを定義することもできます。より複雑なファイルセットの例は、Customizeバッファーに記されています。将来のEmacsセッションで同じファイルセットを使うには、@samp{Save for future sessions}を選択するのを忘れないでください。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2137
msgid "You can use the command @kbd{M-x filesets-open} to visit all the files in a fileset, and @kbd{M-x filesets-close} to close them.  Use @kbd{M-x filesets-run-cmd} to run a shell command on all the files in a fileset.  These commands are also available from the @samp{Filesets} menu, where each existing fileset is represented by a submenu."
msgstr "コマンド@kbd{M-x filesets-open}を使って、ファイルセットのすべてのファイルをvisitし、それらを@kbd{M-x filesets-close}で閉じることができます。@kbd{M-x filesets-run-cmd}を使って、ファイルセットのすべてのファイルにたいして、シェルコマンドを実行します。これらのコマンドは@samp{Filesets}メニューからも利用可能で、メニューには既存のファイルセットが、サブメニューとして表示されています。"

#. type: Plain text
#: /data/data/com.termux/files/home/work/emacs/doc/emacs//files.texi:2141
msgid "@xref{Version Control}, for a different concept of filesets: groups of files bundled together for version control operations.  Filesets of that type are unnamed, and do not persist across Emacs sessions."
msgstr "異なるコンセプトのファイルセット(バージョンコントロール操作のためにグループにまとめられたファイル)については、@ref{Version Control}を参照してください。この種のファイルセットには名前がなく、Emacsセッション間で引き継がれません。"
