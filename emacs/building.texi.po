# Japanese translation of Emacs-25.2 editor manual
# Copyright (C) 2016 Free Software Foundation, Inc.
# This file is distributed under the same license as the Emacs package.
# Ayanokoji Takesi <ayanokoji.takesi@gmail.com>.
#
msgid ""
msgstr ""
"Project-Id-Version: 26.1.91\n"
"POT-Creation-Date: 2019-09-21 17:58+0900\n"
"PO-Revision-Date: 2019-09-21 19:31+0900\n"
"Last-Translator: Ayanokoji Takesi <ayanokoji.takesi@gmail.com>\n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: node
#: original_texis/building.texi:5
#, no-wrap
msgid "Building"
msgstr "Building"

#. type: chapter
#: original_texis/building.texi:6
#, no-wrap
msgid "Compiling and Testing Programs"
msgstr "プログラムのコンパイルとテスト"

#. type: cindex
#: original_texis/building.texi:7
#, no-wrap
msgid "building programs"
msgstr "building programs"

#. type: cindex
#: original_texis/building.texi:8
#, no-wrap
msgid "program building"
msgstr "program building"

#. type: cindex
#: original_texis/building.texi:9
#, no-wrap
msgid "running Lisp functions"
msgstr "running Lisp functions"

#. type: Plain text
#: original_texis/building.texi:14
msgid "The previous chapter discusses the Emacs commands that are useful for making changes in programs.  This chapter deals with commands that assist in the process of compiling and testing programs."
msgstr "前のチャプターでは、プログラムを変更するのに便利なEmacsコマンドについて議論しました。このチャプターでは、プログラムのコンパイルとテストに役立つコマンドを扱います。"

#. type: node
#: original_texis/building.texi:31 original_texis/building.texi:33
#, no-wrap
msgid "Compilation"
msgstr "Compilation"

#. type: menuentry
#: original_texis/building.texi:31
msgid "Compiling programs in languages other than Lisp (C, Pascal, etc.)."
msgstr "Lisp以外の言語(C、Pascal、など)のプログラムのコンパイル。"

#. type: section
#: original_texis/building.texi:31 original_texis/building.texi:141
#: original_texis/building.texi:142
#, no-wrap
msgid "Compilation Mode"
msgstr "Compilation Mode"

#. type: menuentry
#: original_texis/building.texi:31
msgid "The mode for visiting compiler errors."
msgstr "コンパイラーのエラーをvisitするモード。"

#. type: node
#: original_texis/building.texi:31 original_texis/building.texi:299
#, no-wrap
msgid "Compilation Shell"
msgstr "Compilation Shell"

#. type: menuentry
#: original_texis/building.texi:31
msgid "Customizing your shell properly for use in the compilation buffer."
msgstr "compilationバッファーで使えるように、シェルを適切にカスタマイズする。"

#. type: node
#: original_texis/building.texi:31 original_texis/building.texi:366
#, no-wrap
msgid "Grep Searching"
msgstr "Grep Searching"

#. type: menuentry
#: original_texis/building.texi:31
msgid "Searching with grep."
msgstr "grepによる検索。"

#. type: node
#: original_texis/building.texi:31 original_texis/building.texi:466
#, no-wrap
msgid "Flymake"
msgstr "Flymake"

#. type: menuentry
#: original_texis/building.texi:31
msgid "Finding syntax errors on the fly."
msgstr "オンザフライでの構文エラーの検索。"

#. type: node
#: original_texis/building.texi:31 original_texis/building.texi:496
#, no-wrap
msgid "Debuggers"
msgstr "Debuggers"

#. type: menuentry
#: original_texis/building.texi:31
msgid "Running symbolic debuggers for non-Lisp programs."
msgstr "非Lispプログラムのための、シンボルデバッガーの実行。"

#. type: node
#: original_texis/building.texi:31 original_texis/building.texi:1372
#, no-wrap
msgid "Executing Lisp"
msgstr "Executing Lisp"

#. type: menuentry
#: original_texis/building.texi:31
msgid "Various modes for editing Lisp programs, with different facilities for running the Lisp programs."
msgstr "Lispプログラムを編集するためのさまざまなモードと、Lispプログラムを実行する異なる機能。"

#. type: menuentry
#: original_texis/building.texi:31
msgid "Libraries: Lisp Libraries"
msgstr "Libraries: Lisp Libraries"

#. type: menuentry
#: original_texis/building.texi:31
msgid "How Lisp programs are loaded into Emacs."
msgstr "LispプログラムがEmacsにロードされる方法。"

#. type: menuentry
#: original_texis/building.texi:31
msgid "Eval: Lisp Eval"
msgstr "Eval: Lisp Eval"

#. type: menuentry
#: original_texis/building.texi:31
msgid "Executing a single Lisp expression in Emacs."
msgstr "Emacsで1つのLisp式を実行する。"

#. type: menuentry
#: original_texis/building.texi:31
msgid "Interaction: Lisp Interaction"
msgstr "Interaction: Lisp Interaction"

#. type: menuentry
#: original_texis/building.texi:31
msgid "Executing Lisp in an Emacs buffer."
msgstr "EmacsバッファーでLispを実行する。"

#. type: node
#: original_texis/building.texi:31 original_texis/building.texi:1660
#, no-wrap
msgid "External Lisp"
msgstr "External Lisp"

#. type: menuentry
#: original_texis/building.texi:31
msgid "Communicating through Emacs with a separate Lisp."
msgstr "Emacsを通じて別のLispと通信する。"

#. type: section
#: original_texis/building.texi:34
#, no-wrap
msgid "Running Compilations under Emacs"
msgstr "Emacs下でのコンパイルの実行"

#. type: cindex
#: original_texis/building.texi:35
#, no-wrap
msgid "inferior process"
msgstr "inferior process"

#. type: cindex
#: original_texis/building.texi:36
#, no-wrap
msgid "make"
msgstr "make"

#. type: cindex
#: original_texis/building.texi:37
#, no-wrap
msgid "compilation errors"
msgstr "compilation errors"

#. type: cindex
#: original_texis/building.texi:38
#, no-wrap
msgid "error log"
msgstr "error log"

#. type: Plain text
#: original_texis/building.texi:43
msgid "Emacs can run compilers for languages such as C and Fortran, feeding the compilation log into an Emacs buffer.  It can also parse the error messages and show you where the errors occurred."
msgstr "Emacsは、CやFortranのような言語のためのコンパイラーを実行でき、コンパイルログをEmacsのバッファーに取り込むことができます。エラーメッセージを解析して、エラーが発生した場所を示すこともできます。"

#. type: item
#: original_texis/building.texi:45
#, no-wrap
msgid "M-x compile"
msgstr "M-x compile"

#. type: table
#: original_texis/building.texi:48
msgid "Run a compiler asynchronously under Emacs, with error messages going to the @file{*compilation*} buffer."
msgstr "Emacs下で非同期にコンパイラーを実行し、エラーメッセージは@file{*compilation*}バッファーに送られます。"

#. type: item
#: original_texis/building.texi:49
#, no-wrap
msgid "M-x recompile"
msgstr "M-x recompile"

#. type: itemx
#: original_texis/building.texi:50
#, no-wrap
msgid "g@r{ (Compilation mode)}"
msgstr "g@r{ (Compilation mode)}"

#. type: table
#: original_texis/building.texi:53
msgid "Invoke a compiler with the same command as in the last invocation of @kbd{M-x compile}."
msgstr "最後に呼び出した@kbd{M-x compile}と同じコマンドで、コンパイラーを呼び出します。"

#. type: item
#: original_texis/building.texi:54
#, no-wrap
msgid "M-x kill-compilation"
msgstr "M-x kill-compilation"

#. type: table
#: original_texis/building.texi:56
msgid "Kill the running compilation subprocess."
msgstr "サブプロセスで実行されているコンパイルをkillします。"

#. type: findex
#: original_texis/building.texi:58
#, no-wrap
msgid "compile"
msgstr "compile"

#. type: Plain text
#: original_texis/building.texi:66
msgid "To run @code{make} or another compilation command, type @kbd{M-x compile}.  This reads a shell command line using the minibuffer, and then executes the command by running a shell as a subprocess (or @dfn{inferior process}) of Emacs.  The output is inserted in a buffer named @file{*compilation*}.  The current buffer's default directory is used as the working directory for the execution of the command, so by default compilation takes place in that directory."
msgstr "        @code{make}、または他のコンパイルコマンドを実行するには、@kbd{M-x compile}とタイプします。これはミニバッファーを使用してシェルのコマンドラインを読み取り、シェルをEmacsのサブプロセス(または@dfn{下位プロセス(inferior process)})として、そのコマンドを実行します。出力は@file{*compilation*}という名前のバッファーに挿入されます。カレントバッファーのデフォルトディレクトリーが、コマンドを実行する作業ディレクトリーとして使用されます。したがって、通常はそのディレクトリーでコンパイルが行われます。"

#. type: vindex
#: original_texis/building.texi:67
#, no-wrap
msgid "compile-command"
msgstr "compile-command"

#. type: Plain text
#: original_texis/building.texi:77
msgid "The default compilation command is @samp{make -k}, which is usually correct for programs compiled using the @command{make} utility (the @samp{-k} flag tells @command{make} to continue compiling as much as possible after an error).  @xref{Top,, Make, make, GNU Make Manual}.  If you have done @kbd{M-x compile} before, the command that you specified is automatically stored in the variable @code{compile-command}; this is used as the default the next time you type @kbd{M-x compile}.  A file can also specify a file-local value for @code{compile-command} (@pxref{File Variables})."
msgstr "デフォルトのコンパイルコマンドは@samp{make -k}で、これは@command{make}ユーティリティーを使ってコンパイルするプログラムにたいして通常正しいコマンドです(@samp{-k}フラグは@command{make}に、エラー後も可能な限りコンパイルを継続するよう指示します)。@ref{Top,, Make, make, GNU Make Manual}を参照してください。前に@kbd{M-x compile}を実行している場合、それに指定したコマンドは自動的に変数@code{compile-command}に格納されます。これは、次に@kbd{M-x compile}とタイプしたときのデフォルトとなります。ファイルのファイルローカルな値で@code{compile-command}を指定することもできます(@ref{File Variables}を参照してください)。"

#. type: Plain text
#: original_texis/building.texi:88
msgid "Starting a compilation displays the @file{*compilation*} buffer in another window but does not select it.  While the compilation is running, the word @samp{run} is shown in the major mode indicator for the @file{*compilation*} buffer, and the word @samp{Compiling} appears in all mode lines.  You do not have to keep the @file{*compilation*} buffer visible while compilation is running; it continues in any case.  When the compilation ends, for whatever reason, the mode line of the @file{*compilation*} buffer changes to say @samp{exit} (followed by the exit code: @samp{[0]} for a normal exit), or @samp{signal} (if a signal terminated the process)."
msgstr "コンパイルを開始すると、他のウィンドウで@file{*compilation*}バッファーが表示されますが、そのウィンドウは選択されません。コンパイルが実行中は、@file{*compilation*}バッファーのメジャーモードインジケーターに@samp{run}という単語が表示され、単語@samp{Compiling}がすべてのモードラインに表示されます。コンパイル実行中、常に@file{*compilation*}バッファーを表示している必要はありません。表示されていなくてもコンパイルは継続します。何らかの理由によりコンパイルが終了したときは、@file{*compilation*}バッファーのモードラインが@samp{exit}(その後に終了コード。@samp{[0]}の場合は通常終了)、または@samp{signal}(何らかのシグナルがプロセスを終了させた場合)に変化します。"

#. type: Plain text
#: original_texis/building.texi:95
msgid "If you want to watch the compilation transcript as it appears, switch to the @file{*compilation*} buffer and move point to the end of the buffer.  When point is at the end, new compilation output is inserted above point, which remains at the end.  Otherwise, point remains fixed while compilation output is added at the end of the buffer."
msgstr "コンパイルの経過を見たいときは、バッファー@file{*compilation*}に切り替えて、ポイントをバッファーの最後に移動します。ポイントが最後にある場合、コンパイル出力はポイント位置に挿入されるので、ポイントは最後に留まります。そうでない場合は、バッファーの最後にコンパイル出力が追加される間も、ポイント位置は固定されたままです。"

#. type: Plain text
#: original_texis/building.texi:99
msgid "While compilation proceeds, the mode line shows the number of errors, warnings, and informational messages emitted by the compiler so far."
msgstr "コンパイル処理中、モードラインにはその時点までのエラー、警告の数と、コンパイラーからの情報が表示されます。"

#. type: cindex
#: original_texis/building.texi:100
#, no-wrap
msgid "compilation buffer, keeping point at end"
msgstr "compilation buffer, keeping point at end"

#. type: vindex
#: original_texis/building.texi:101
#, no-wrap
msgid "compilation-scroll-output"
msgstr "compilation-scroll-output"

#. type: Plain text
#: original_texis/building.texi:108
msgid "If you change the variable @code{compilation-scroll-output} to a non-@code{nil} value, the @file{*compilation*} buffer scrolls automatically to follow the output.  If the value is @code{first-error}, scrolling stops when the first error appears, leaving point at that error.  For any other non-@code{nil} value, scrolling continues until there is no more output."
msgstr "変数@code{compilation-scroll-output}を非@code{nil}値に変更した場合、@file{*compilation*}バッファーは出力に追随して自動的にスクロールします。値が@code{first-error}の場合は、最初のエラーが出現した箇所でスクロールがストップし、ポイントはエラー箇所に留まります。その他の任意の非@code{nil}値の場合は、出力がなくなるまでスクロールが継続されます。"

#. type: findex
#: original_texis/building.texi:109
#, no-wrap
msgid "recompile"
msgstr "recompile"

#. type: Plain text
#: original_texis/building.texi:117
msgid "To rerun the last compilation with the same command, type @kbd{M-x recompile}.  This reuses the compilation command from the last invocation of @kbd{M-x compile}.  It also reuses the @file{*compilation*} buffer and starts the compilation in its default directory, which is the directory in which the previous compilation was started.  In @file{*compilation*} buffers this command is bound to @kbd{g}."
msgstr "最後にコンパイルしたのと同じコマンドで再実行するには、@kbd{M-x recompile}とタイプします。これは最後に呼び出した@kbd{M-x compile}からコンパイルコマンドを再利用します。これは@file{*compilation*}バッファーも再利用し、コンパイルもそのバッファーのデフォルトディレクトリー、つまり前にコンパイルが開始されたのと同じディレクトリーで行われます。@file{*compilation*}バッファーでは、このコマンドは@kbd{g}にバインドされています。"

#. type: findex
#: original_texis/building.texi:118
#, no-wrap
msgid "kill-compilation"
msgstr "kill-compilation"

#. type: vindex
#: original_texis/building.texi:119
#, no-wrap
msgid "compilation-always-kill"
msgstr "compilation-always-kill"

#. type: Plain text
#: original_texis/building.texi:128
msgid "Starting a new compilation also kills any compilation already running in @file{*compilation*}, as the buffer can only handle one compilation at any time.  However, @kbd{M-x compile} and @kbd{M-x recompile} ask for confirmation before actually killing a compilation that is running; to always automatically kill the compilation without asking, change the variable @code{compilation-always-kill} to @code{t}.  You can also kill a compilation process with the command @kbd{M-x kill-compilation}."
msgstr "新しいコンパイルの開始は、すでに@file{*compilation*}で実行中のコンパイルをkillします。これは、そのバッファーが1度に1つのコンパイルしか処理できないからです。しかし実行中のコマンドを実際にkillする前に、@kbd{M-x compile}、および@kbd{M-x recompile}は確認を求めます。常に確認なしで自動的にコンパイルをkillするには、変数@code{compilation-always-kill}を@code{t}に変更します。コマンド@kbd{M-x kill-compilation}で、コンパイルプロセスをkillすることもできます。"

#. type: Plain text
#: original_texis/building.texi:133
msgid "To run two compilations at once, start the first one, then rename the @file{*compilation*} buffer (perhaps using @code{rename-uniquely}; @pxref{Misc Buffer}), then switch buffers and start the other compilation.  This will create a new @file{*compilation*} buffer."
msgstr "1度に2つのコンパイルを実行するには、最初に1つを開始してから(多分@code{rename-uniquely}を使用して。@ref{Misc Buffer}を参照してください)@file{*compilation*}、バッファーをリネームして、それからバッファーを切り替えて他のコンパイルを開始します。これにより新しい@file{*compilation*}バッファーが作成されます。"

#. type: vindex
#: original_texis/building.texi:134
#, no-wrap
msgid "compilation-environment"
msgstr "compilation-environment"

#. type: Plain text
#: original_texis/building.texi:140
msgid "You can control the environment passed to the compilation command with the variable @code{compilation-environment}.  Its value is a list of environment variable settings; each element should be a string of the form @code{\"@var{envvarname}=@var{value}\"}.  These environment variable settings override the usual ones."
msgstr "コンパイルコマンドに渡される環境は、変数@code{compilation-environment}で制御できます。この変数の値は環境変数のセッティングのリストで、各要素は文字列@code{\"@var{envvarname}=@var{value}\"}の形式です。これらの環境変数のセッティングは、通常の値をオーバーライドします。"

#. type: cindex
#: original_texis/building.texi:144
#, no-wrap
msgid "Compilation mode"
msgstr "Compilation mode"

#. type: cindex
#: original_texis/building.texi:145
#, no-wrap
msgid "mode, Compilation"
msgstr "mode, Compilation"

#. type: cindex
#: original_texis/building.texi:146
#, no-wrap
msgid "locus"
msgstr "locus"

#. type: Plain text
#: original_texis/building.texi:153
msgid "The @file{*compilation*} buffer uses a major mode called Compilation mode.  Compilation mode turns each error message in the buffer into a hyperlink; you can move point to it and type @key{RET}, or click on it with the mouse (@pxref{Mouse References}), to visit the @dfn{locus} of the error message in a separate window.  The locus is the specific position in a file where that error occurred."
msgstr "@file{*compilation*}バッファーは、Compilationモードと呼ばれるメジャーモードを使用します。Compilationモードは、バッファーのエラーメッセージをハイパーリンクに変換します。ポイントをそこに移動して@key{RET}をタイプするか、マウスでクリック(@ref{Mouse References}を参照してください)すると、別のウィンドウでエラーメッセージの@dfn{locus}をvisitします。locusとは、エラーが発生したファイルの特定の位置を意味します。"

#. type: cindex
#: original_texis/building.texi:154
#, no-wrap
msgid "compilation mode faces"
msgstr "compilation mode faces"

#. type: vindex
#: original_texis/building.texi:155
#, no-wrap
msgid "compilation-error"
msgstr "compilation-error"

#. type: vindex
#: original_texis/building.texi:156
#, no-wrap
msgid "compilation-warning"
msgstr "compilation-warning"

#. type: Plain text
#: original_texis/building.texi:164
msgid "The appearance of the @file{*compilation*} buffer can be controlled by customizing the faces which are used to highlight parts of the @file{*compilation*} buffer, e.g., @code{compilation-error} or @code{compilation-warning}, for error and warning messages respectively.  Note that since those faces inherit from the @code{error} and @code{warning} faces, it is also possible to customize the parent face directly instead."
msgstr "エラーメッセージや警告メッセージにたいする@code{compilation-error}と@code{compilation-warning}のように、@file{*compilation*}バッファーの外観は、@file{*compilation*}バッファーのハイライト箇所に使用されるフェイスをカスタマイズすることにより制御されます。これらのフェイスは@code{error}フェイスと@code{warning}フェイスから継承されるので、親フェイスを直接カスタマイズすることも可能なことに注意してください。"

#. type: Plain text
#: original_texis/building.texi:167
msgid "Use @w{@kbd{M-x customize-group RET compilation}} to see the entire list of customization variables and faces."
msgstr "カスタマイズに関する変数とフェイスの完全なリストを確認するには、@w{@kbd{M-x customize-group RET compilation}}を使用してください。"

#. type: findex
#: original_texis/building.texi:168
#, no-wrap
msgid "compile-goto-error"
msgstr "compile-goto-error"

#. type: vindex
#: original_texis/building.texi:169
#, no-wrap
msgid "compilation-auto-jump-to-first-error"
msgstr "compilation-auto-jump-to-first-error"

#. type: Plain text
#: original_texis/building.texi:174
msgid "If you change the variable @code{compilation-auto-jump-to-first-error} to a non-@code{nil} value, Emacs automatically visits the locus of the first error message that appears in the @file{*compilation*} buffer."
msgstr "変数@code{compilation-auto-jump-to-first-error}を非@code{nil}値に変更した場合、Emacsは、@file{*compilation*}バッファーに表れる最初のエラーメッセージのlocusを自動的にvisitします。"

#. type: Plain text
#: original_texis/building.texi:179
msgid "Compilation mode provides the following additional commands.  These commands can also be used in @file{*grep*} buffers, where the hyperlinks are search matches rather than error messages (@pxref{Grep Searching})."
msgstr "Compilationモードは、以下の追加のコマンドを提供します。これらのコマンドは@file{*grep*}バッファーでも使用できます。このバッファーではエラーメッセージのかわりに、検索にたいするマッチにハイパーリンクが設定されます(@ref{Grep Searching}を参照してください)。"

#. type: kindex
#: original_texis/building.texi:181 original_texis/building.texi:209
#, no-wrap
msgid "M-g M-n"
msgstr "M-g M-n"

#. type: kindex
#: original_texis/building.texi:182 original_texis/building.texi:210
#, no-wrap
msgid "M-g n"
msgstr "M-g n"

#. type: kindex
#: original_texis/building.texi:183 original_texis/building.texi:211
#, no-wrap
msgid "C-x `"
msgstr "C-x `"

#. type: table
#: original_texis/building.texi:185
msgid "Visit the locus of the next error message or match (@code{next-error})."
msgstr "次のエラーメッセージ(またはマッチ)のlocusをvisitします(@code{next-error})。"

#. type: item
#: original_texis/building.texi:185
#, no-wrap
msgid "M-g M-p"
msgstr "M-g M-p"

#. type: itemx
#: original_texis/building.texi:186
#, no-wrap
msgid "M-g p"
msgstr "M-g p"

#. type: table
#: original_texis/building.texi:189
msgid "Visit the locus of the previous error message or match (@code{previous-error})."
msgstr "前のエラーメッセージ(またはマッチ)のlocusをvisitします(@code{previous-error})。"

#. type: item
#: original_texis/building.texi:189
#, no-wrap
msgid "M-n"
msgstr "M-n"

#. type: table
#: original_texis/building.texi:192
msgid "Move point to the next error message or match, without visiting its locus (@code{compilation-next-error})."
msgstr "locusをvisitせずに、ポイントを次のエラーメッセージ(またはマッチ)に移動します(@code{compilation-next-error})。"

#. type: item
#: original_texis/building.texi:192
#, no-wrap
msgid "M-p"
msgstr "M-p"

#. type: table
#: original_texis/building.texi:195
msgid "Move point to the previous error message or match, without visiting its locus (@code{compilation-previous-error})."
msgstr "locusをvisitせずに、ポイントを前のエラーメッセージ(またはマッチ)に移動します(@code{compilation-previous-error})。"

#. type: item
#: original_texis/building.texi:195
#, no-wrap
msgid "M-@}"
msgstr "M-@}"

#. type: table
#: original_texis/building.texi:198
msgid "Move point to the next error message or match occurring in a different file (@code{compilation-next-file})."
msgstr "他のファイルで発生した次のエラーメッセージ(またはマッチ)にポイントを移動します(@code{compilation-next-file})。"

#. type: item
#: original_texis/building.texi:198
#, no-wrap
msgid "M-@{"
msgstr "M-@{"

#. type: table
#: original_texis/building.texi:201
msgid "Move point to the previous error message or match occurring in a different file (@code{compilation-previous-file})."
msgstr "他のファイルで発生した前のエラーメッセージ(またはマッチ)にポイントを移動します(@code{compilation-previous-file})。"

#. type: item
#: original_texis/building.texi:201 original_texis/building.texi:781
#, no-wrap
msgid "C-c C-f"
msgstr "C-c C-f"

#. type: table
#: original_texis/building.texi:204
msgid "Toggle Next Error Follow minor mode, which makes cursor motion in the compilation buffer produce automatic source display."
msgstr "Next Error Followマイナーモードに切り替えます。これはcompilationバッファーでのカーソル移動にしたがって、ソースを自動的に表示するモードです。"

#. type: item
#: original_texis/building.texi:204
#, no-wrap
msgid "g"
msgstr "g"

#. type: table
#: original_texis/building.texi:207
msgid "Re-run the last command whose output is shown in the @file{*compilation*} buffer."
msgstr "出力が@file{*compilation*}バッファー内に表示されている、最後のコマンドを再実行します。"

#. type: findex
#: original_texis/building.texi:212
#, no-wrap
msgid "next-error"
msgstr "next-error"

#. type: vindex
#: original_texis/building.texi:213
#, no-wrap
msgid "next-error-highlight"
msgstr "next-error-highlight"

#. type: Plain text
#: original_texis/building.texi:225
msgid "To visit errors sequentially, type @w{@kbd{C-x `}} (@code{next-error}), or equivalently @kbd{M-g M-n} or @kbd{M-g n}.  This command can be invoked from any buffer, not just a Compilation mode buffer.  The first time you invoke it after a compilation, it visits the locus of the first error message.  Each subsequent @w{@kbd{C-x `}} visits the next error, in a similar fashion.  If you visit a specific error with @key{RET} or a mouse click in the @file{*compilation*} buffer, subsequent @w{@kbd{C-x `}} commands advance from there.  When @w{@kbd{C-x `}} finds no more error messages to visit, it signals an error.  @w{@kbd{C-u C-x `}} starts again from the beginning of the compilation buffer, and visits the first locus."
msgstr "順番にエラーをvisitするには、@w{@kbd{C-x `}} (@code{next-error})とタイプするか、これと等価な@kbd{M-g M-n}または@kbd{M-g n}とタイプします。このコマンドはCompilationモードのバッファーだけでなく、任意のバッファーから呼び出すことができます。コンパイル後に最初に呼び出すときは、最初のエラーメッセージのlocusをvisitします。連続した@w{@kbd{C-x `}}は、同じ方法で次のエラーをvisitします。@file{*compilation*}バッファーから@key{RET}またはマウスクリックで特定のエラーをvisitした場合、@w{@kbd{C-x `}}はそのエラーの次のエラーからvisitしていきます。これ以上visitするエラーメッセージがない場合、@w{@kbd{C-x `}}はエラーをシグナルします。@w{@kbd{C-u C-x `}}はcompilationバッファーの先頭から再開して、最初のlocusをvisitします。"

#. type: Plain text
#: original_texis/building.texi:228
msgid "@kbd{M-g M-p} or @kbd{M-g p} (@code{previous-error}) iterates through errors in the opposite direction."
msgstr "@kbd{M-g M-p}または@kbd{M-g p} (@code{previous-error})は、反対方向にエラーを巡回します。"

#. type: Plain text
#: original_texis/building.texi:240
msgid "The @code{next-error} and @code{previous-error} commands don't just act on the errors or matches listed in @file{*compilation*} and @file{*grep*} buffers; they also know how to iterate through error or match lists produced by other commands, such as @kbd{M-x occur} (@pxref{Other Repeating Search}).  If the current buffer contains error messages or matches, these commands will iterate through them; otherwise, Emacs looks for a buffer containing error messages or matches amongst the windows of the selected frame, then for any buffer that @code{next-error} or @code{previous-error} previously visited, and finally all other buffers.  Any buffer these commands iterate through that is not currently displayed in a window will be displayed."
msgstr "コマンド@code{next-error}および@code{previous-error}は、バッファー@file{*compilation*}または@file{*grep*}にリストされたエラー(またはマッチ)だけに作用されるわけではありません。これらのコマンドは@kbd{M-x occur} (@ref{Other Repeating Search}を参照のようなコマンドで生成されたエラー(またはマッチ)を巡回する方法も知っています。カレントバッファーがエラーメッセージ、またはマッチを含む場合、これらのコマンドは、それらを巡回するでしょう。そうでない場合、Emacsは選択されたフレームのウィンドウの中から、エラーメッセージ(またはマッチ)を含むバッファーを探し、次に@code{next-error}または@code{previous-error}が最後にvisitしたバッファー、最後にその他のすべてのバッファーを探します。これらのコマンドが巡回するために選択されたバッファーが、カレントでウィンドウに表示されていなければ、そのバッファーが表示されるでしょう。"

#. type: vindex
#: original_texis/building.texi:241
#, no-wrap
msgid "compilation-skip-threshold"
msgstr "compilation-skip-threshold"

#. type: Plain text
#: original_texis/building.texi:248
msgid "By default, the @code{next-error} and @code{previous-error} commands skip less important messages.  The variable @code{compilation-skip-threshold} controls this.  The default value, 1, means to skip anything less important than a warning.  A value of 2 means to skip anything less important than an error, while 0 means not to skip any messages."
msgstr "デフォルトでは、コマンド@code{next-error}および@code{previous-error}は、重要でないメッセージはスキップします。変数@code{compilation-skip-threshold}が、これを制御します。デフォルト値は1で、これは警告(warning)より重要でないメッセージをスキップします。2の場合、エラー(error)より重要でないものをスキップし、0はメッセージをスキップしません。"

#. type: Plain text
#: original_texis/building.texi:252
msgid "When Emacs visits the locus of an error message, it momentarily highlights the relevant source line.  The duration of this highlight is determined by the variable @code{next-error-highlight}."
msgstr "Emacsがエラーメッセージのlocusをvisitしているとき、関連するソース行が一時的にハイライトされます。このハイライトの持続時間は、変数@code{next-error-highlight}により決定されます。"

#. type: vindex
#: original_texis/building.texi:253
#, no-wrap
msgid "compilation-context-lines"
msgstr "compilation-context-lines"

#. type: Plain text
#: original_texis/building.texi:264
msgid "If the @file{*compilation*} buffer is shown in a window with a left fringe (@pxref{Fringes}), the locus-visiting commands put an arrow in the fringe, pointing to the current error message.  If the window has no left fringe, such as on a text terminal, these commands scroll the window so that the current message is at the top of the window.  If you change the variable @code{compilation-context-lines} to an integer value @var{n}, these commands scroll the window so that the current error message is @var{n} lines from the top, whether or not there is a fringe; the default value, @code{nil}, gives the behavior described above."
msgstr "@file{*compilation*}バッファーが左フリンジ(@ref{Fringes}を参照してください)のあるウィンドウで表示されている場合、locusをvisitするコマンドはカレントエラーメッセージを指す矢印をフリンジに配します。テキスト端末のように、左フリンジがないウィンドウの場合、これらのコマンドは、カレントメッセージがウィンドウの一番上にくるようにウィンドウをスクロールします。変数@code{compilation-context-lines}を整数値@var{n}に変更した場合、これらのコマンドは、フリンジの有無に関わらずメッセージがウィンドウの上から@var{n}行目にくるようにウィンドウをスクロールします。デフォルト値の@code{nil}では上述したように振る舞います。"

#. type: vindex
#: original_texis/building.texi:265
#, no-wrap
msgid "compilation-error-regexp-alist"
msgstr "compilation-error-regexp-alist"

#. type: vindex
#: original_texis/building.texi:266
#, no-wrap
msgid "grep-regexp-alist"
msgstr "grep-regexp-alist"

#. type: Plain text
#: original_texis/building.texi:272
msgid "To parse messages from the compiler, Compilation mode uses the variable @code{compilation-error-regexp-alist} which lists various error message formats and tells Emacs how to extract the locus from each.  A similar variable, @code{grep-regexp-alist}, tells Emacs how to parse output from a @code{grep} command (@pxref{Grep Searching})."
msgstr "コンパイラーからのメッセージを解析するために、Compilationモードは変数@code{compilation-error-regexp-alist}を使用します。これはさまざまなエラーメッセージのフォーマットをリストし、それらからlocusを抽出する方法をEmacsに指示します。同じような変数@code{grep-regexp-alist}は、@code{grep}コマンド(@ref{Grep Searching}を参照してください)の出力を解析する方法を指示します。"

#. type: findex
#: original_texis/building.texi:273
#, no-wrap
msgid "compilation-next-error"
msgstr "compilation-next-error"

#. type: findex
#: original_texis/building.texi:274
#, no-wrap
msgid "compilation-previous-error"
msgstr "compilation-previous-error"

#. type: findex
#: original_texis/building.texi:275
#, no-wrap
msgid "compilation-next-file"
msgstr "compilation-next-file"

#. type: findex
#: original_texis/building.texi:276
#, no-wrap
msgid "compilation-previous-file"
msgstr "compilation-previous-file"

#. type: Plain text
#: original_texis/building.texi:283
msgid "Compilation mode also defines the keys @key{SPC} and @key{DEL} to scroll by screenfuls; @kbd{M-n} (@code{compilation-next-error}) and @kbd{M-p} (@code{compilation-previous-error}) to move to the next or previous error message; and @kbd{M-@{} (@code{compilation-next-file})  and @kbd{M-@}} (@code{compilation-previous-file}) to move to the next or previous error message for a different source file."
msgstr "Compilationモードは、スクリーン単位でスクロールを行うために、キー@key{SPC}および@key{DEL}も定義します。@kbd{M-n} (@code{compilation-next-error})および@kbd{M-p} (@code{compilation-previous-error})は、次または前のエラーメッセージに移動します。@kbd{M-@{} (@code{compilation-next-file})および@kbd{M-@}} (@code{compilation-previous-file})は、違うソースファイルの、次または前のエラーメッセージに移動します。"

#. type: cindex
#: original_texis/building.texi:284
#, no-wrap
msgid "Next Error Follow mode"
msgstr "Next Error Follow mode"

#. type: findex
#: original_texis/building.texi:285
#, no-wrap
msgid "next-error-follow-minor-mode"
msgstr "next-error-follow-minor-mode"

#. type: Plain text
#: original_texis/building.texi:290
msgid "You can type @kbd{C-c C-f} to toggle Next Error Follow mode.  In this minor mode, ordinary cursor motion in the compilation buffer automatically updates the source buffer, i.e., moving the cursor over an error message causes the locus of that error to be displayed."
msgstr "@kbd{C-c C-f}とタイプして、Next Error Followモードに切り替えることができます。このマイナーモードでは、compilationバッファーでの通常のカーソル移動により、自動的にソースを表示するバッファーが更新されます。たとえばカーソルをエラーメッセージに移動すると、そのエラーにたいするlocusが表示されます。"

#. type: Plain text
#: original_texis/building.texi:298
msgid "The features of Compilation mode are also available in a minor mode called Compilation Minor mode.  This lets you parse error messages in any buffer, not just a normal compilation output buffer.  Type @kbd{M-x compilation-minor-mode} to enable the minor mode.  For instance, in an Rlogin buffer (@pxref{Remote Host}), Compilation minor mode automatically accesses remote source files by FTP (@pxref{File Names})."
msgstr "Compilationモードの機能は、Compilation Minorモード呼ばれるマイナーモードでも利用可能です。これは通常のコンパイル出力のバッファーだけでなく、任意のバッファーのエラーメッセージを解析します。@kbd{M-x compilation-minor-mode}とタイプすることにより、このマイナーモードが有効になります。たとえばRloginバッファー(@ref{Remote Host}を参照してください)では、Compilation minorモードはリモートのソースファイルに、FTPを通じて自動的にアクセスします(@ref{File Names}を参照してください)。"

#. type: section
#: original_texis/building.texi:300
#, no-wrap
msgid "Subshells for Compilation"
msgstr "コンパイルのためのサブシェル"

#. type: Plain text
#: original_texis/building.texi:307
msgid "This section includes various techniques and advice for using a shell and its features in compilation buffers.  This material is specific to local compilations, and will most probably not work in (or be irrelevant to) compilation buffers whose default directory is on remote hosts."
msgstr "このセクションには、compilationバッファー内で、シェルやその機能を使用するための、さまざまなテクニックとアドバイスが含まれています。ローカルでのコンパイルに特有なトピックを扱うので、デフォルトディレクトリーがリモートホスト上であるようなcompilationバッファーでは、おそらくほとんどは機能しない(または無関係)でしょう。"

#. type: Plain text
#: original_texis/building.texi:318
msgid "The @kbd{M-x compile} command uses a shell to run the compilation command, but specifies the option for a noninteractive shell.  This means, in particular, that the shell should start with no prompt.  If you find your usual shell prompt making an unsightly appearance in the @file{*compilation*} buffer, it means you have made a mistake in your shell's init file by setting the prompt unconditionally.  (This init file may be named @file{.bashrc}, @file{.profile}, @file{.cshrc}, @file{.shrc}, etc., depending on what shell you use.)  The shell init file should set the prompt only if there already is a prompt.  Here's how to do it in bash:"
msgstr "@kbd{M-x compile}コマンドは、コンパイルコマンドを実行するためにシェルを使いますが、オプションで非対話的なシェルを指定します。これは、シェルがプロンプトなしで開始されることを意味します。@file{*compilation*}バッファーで、通常のシェルプロンプトの見映えがよくない場合、それはシェルの初期化ファイルで、無条件にプロンプトをセットするという間違いを犯していることを意味します(この初期化ファイルは使用しているシェルに応じて@file{.bashrc}、@file{.profile}、@file{.cshrc}、@file{.shrc}などの名前がついています)。シェルの初期化ファイルでは、プロンプトがすでにあるときだけプロンプトをセットするべきです。これをbashで行うには、以下のようにします:"

#. type: example
#: original_texis/building.texi:323
#, no-wrap
msgid ""
"if [ \"$@{PS1+set@}\" = set ]\n"
"then PS1=@dots{}\n"
"fi\n"
msgstr ""
"if [ \"$@{PS1+set@}\" = set ]\n"
"then PS1=@dots{}\n"
"fi\n"

#. type: Plain text
#: original_texis/building.texi:327
msgid "And here's how to do it in csh:"
msgstr "cshで行うには以下のようにします:"

#. type: example
#: original_texis/building.texi:330
#, no-wrap
msgid "if ($?prompt) set prompt = @dots{}\n"
msgstr "if ($?prompt) set prompt = @dots{}\n"

#. type: vindex
#: original_texis/building.texi:332
#, no-wrap
msgid "TERM@r{, environment variable, in compilation mode}"
msgstr "TERM@r{, environment variable, in compilation mode}"

#. type: Plain text
#: original_texis/building.texi:336
msgid "If you want to customize the value of the @env{TERM} environment variable passed to the compilation subshell, customize the variable @code{comint-terminfo-terminal} (@pxref{Shell Options})."
msgstr "compilationのサブシェルに渡す環境変数@env{TERM}の値をカスタマイズしたい場合は、変数@code{comint-terminfo-terminal}の値をカスタマイズしてください(@ref{Shell Options}を参照)。"

#. type: Plain text
#: original_texis/building.texi:343
msgid "Emacs does not expect a compiler process to launch asynchronous subprocesses; if it does, and they keep running after the main compiler process has terminated, Emacs may kill them or their output may not arrive in Emacs.  To avoid this problem, make the main compilation process wait for its subprocesses to finish.  In a shell script, you can do this using @samp{$!} and @samp{wait}, like this:"
msgstr "Emacsは、コンパイラープロセスが非同期なサブプロセスで実行されることを要求しません。もしこれを行う場合、メインのコンパイラープロセスが終了した後で、サブプロセスがまだ実行中のときは、Emacsはこれらをkillするか、それらの出力はEmacsには到達しません。この問題を避けるには、メインのコンパイルプロセスが、それのサブプロセスの終了までwaitするようにします。シェルスクリプトでは、以下のように@samp{$!}と@samp{wait}を使用して、これを行うことができます:"

#. type: example
#: original_texis/building.texi:348
#, no-wrap
msgid ""
"(sleep 10; echo 2nd)& pid=$!  # @r{Record pid of subprocess}\n"
"echo first message\n"
"wait $pid                     # @r{Wait for subprocess}\n"
msgstr ""
"(sleep 10; echo 2nd)& pid=$!  # @r{サブプロセスのpidを記録}\n"
"echo first message\n"
"wait $pid                     # @r{サブプロセスのwait}\n"

#. type: Plain text
#: original_texis/building.texi:354
msgid "If the background process does not output to the compilation buffer, so you only need to prevent it from being killed when the main compilation process terminates, this is sufficient:"
msgstr "バックグラウンドのプロセスがcompilationバッファーに何も出力せず、メインのコンパイルプロセスが終了したときに、これらがkillされるのを防ぐことだけが必要な場合は、以下で充分です:"

#. type: example
#: original_texis/building.texi:357
#, no-wrap
msgid "nohup @var{command}; sleep 1\n"
msgstr "nohup @var{command}; sleep 1\n"

#. type: ifnottex
#: original_texis/building.texi:364
msgid "On MS-DOS, asynchronous subprocesses are not supported, so @kbd{M-x compile} runs the compilation command synchronously (i.e., you must wait until the command finishes before you can do anything else in Emacs).  @xref{MS-DOS}."
msgstr "MS-DOSオペレーティングシステムでは、非同期なサブプロセスはサポートされていないので、@kbd{M-x compile}はコンパイルコマンドを同期実行します(たとえばEmacsで他のことを行うには、コマンドが終了するまで待たなければなりません)。@ref{MS-DOS}を参照してください。"

#. type: section
#: original_texis/building.texi:367
#, no-wrap
msgid "Searching with Grep under Emacs"
msgstr "Emacs下でのGrepによる検索"

#. type: Plain text
#: original_texis/building.texi:375
msgid "Just as you can run a compiler from Emacs and then visit the lines with compilation errors, you can also run @command{grep} and then visit the lines on which matches were found.  This works by treating the matches reported by @command{grep} as if they were errors.  The output buffer uses Grep mode, which is a variant of Compilation mode (@pxref{Compilation Mode})."
msgstr "Emacsからコンパイラーを実行して、コンパイルエラーの行をvisitできるように、@command{grep}を実行して見つかったマッチの行をvisitすることもできます。これは@command{grep}が報告するマッチを、エラーのように扱うことで機能します。出力バッファーはGrepモードを使用します。これはCompilationモードの変種です(@ref{Compilation Mode}を参照してください)。"

#. type: item
#: original_texis/building.texi:377
#, no-wrap
msgid "M-x grep"
msgstr "M-x grep"

#. type: itemx
#: original_texis/building.texi:378
#, no-wrap
msgid "M-x lgrep"
msgstr "M-x lgrep"

#. type: table
#: original_texis/building.texi:381
msgid "Run @command{grep} asynchronously under Emacs, listing matching lines in the buffer named @file{*grep*}."
msgstr "Emacs下で@command{grep}を非同期で実行し、@file{*grep*}という名前のバッファーにマッチした行をリストします。"

#. type: item
#: original_texis/building.texi:381
#, no-wrap
msgid "M-x grep-find"
msgstr "M-x grep-find"

#. type: itemx
#: original_texis/building.texi:382
#, no-wrap
msgid "M-x find-grep"
msgstr "M-x find-grep"

#. type: itemx
#: original_texis/building.texi:383
#, no-wrap
msgid "M-x rgrep"
msgstr "M-x rgrep"

#. type: table
#: original_texis/building.texi:386
msgid "Run @command{grep} via @code{find}, and collect output in the @file{*grep*} buffer."
msgstr "@code{find}を通じて@command{grep}を実行し、出力を@file{*grep*}バッファーに収集します。"

#. type: item
#: original_texis/building.texi:386
#, no-wrap
msgid "M-x zrgrep"
msgstr "M-x zrgrep"

#. type: table
#: original_texis/building.texi:388
msgid "Run @code{zgrep} and collect output in the @file{*grep*} buffer."
msgstr "@code{zgrep}を実行して、出力を@file{*grep*}バッファーに収集します。"

#. type: item
#: original_texis/building.texi:388
#, no-wrap
msgid "M-x kill-grep"
msgstr "M-x kill-grep"

#. type: table
#: original_texis/building.texi:390
msgid "Kill the running @command{grep} subprocess."
msgstr "実行中の@command{grep}サブプロセスをkillします。"

#. type: findex
#: original_texis/building.texi:392
#, no-wrap
msgid "grep"
msgstr "grep"

#. type: Plain text
#: original_texis/building.texi:401
msgid "To run @command{grep}, type @kbd{M-x grep}, then enter a command line that specifies how to run @command{grep}.  Use the same arguments you would give @command{grep} when running it normally: a @command{grep}-style regexp (usually in single-quotes to quote the shell's special characters) followed by file names, which may use wildcards.  If you specify a prefix argument for @kbd{M-x grep}, it finds the identifier (@pxref{Xref}) in the buffer around point, and puts that into the default @command{grep} command."
msgstr "@command{grep}を実行するには、@kbd{M-x grep}とタイプしてから、どのように@command{grep}を実行するかを指定するコマンドラインを入力します。これは通常、@command{grep}を実行するとき与える引数と同じです。@command{grep}スタイルのregexp(通常、シェルのスペシャル文字をクォートするためシングルクォートで囲む)の後に、ファイル名(ワイルドカードも使用できる)を続けます。@kbd{M-x grep}にプレフィクス引数を指定した場合、バッファーのポイント位置周辺の識別子(@ref{Xref}を参照してください)を探して、それを@command{grep}コマンドのデフォルトにします。"

#. type: Plain text
#: original_texis/building.texi:405
msgid "Your command need not simply run @command{grep}; you can use any shell command that produces output in the same format.  For instance, you can chain @command{grep} commands, like this:"
msgstr "指定するコマンドは、単純に@command{grep}を実行するものである必要はありません。同じフォーマットで出力を生成するシェルコマンドを使用することができます。たとえば、以下のように、@command{grep}コマンドを連結することができます:"

#. type: example
#: original_texis/building.texi:408
#, no-wrap
msgid "grep -nH -e foo *.el | grep bar | grep toto\n"
msgstr "grep -nH -e foo *.el | grep bar | grep toto\n"

#. type: Plain text
#: original_texis/building.texi:415
msgid "The output from @command{grep} goes in the @file{*grep*} buffer.  You can find the corresponding lines in the original files using @w{@kbd{C-x `}}, @key{RET}, and so forth, just like compilation errors.  @xref{Compilation Mode}, for detailed description of commands and key bindings available in the @file{*grep*} buffer."
msgstr "@command{grep}コマンドの出力は、@file{*grep*}バッファーに送られます。オリジナルのファイルの対応する行は、コンパイルエラーと同様、@w{@kbd{C-x `}}、@key{RET}などで見つけることができます。コマンドのより詳細な説明と、@file{*grep*}バッファー内で利用可能なキーバインディングについては、@ref{Compilation Mode}を参照してください。"

#. type: Plain text
#: original_texis/building.texi:421
msgid "Some grep programs accept a @samp{--color} option to output special markers around matches for the purpose of highlighting.  You can make use of this feature by setting @code{grep-highlight-matches} to @code{t}.  When displaying a match in the source buffer, the exact match will be highlighted, instead of the entire source line."
msgstr "マッチをハイライトするために、その周囲に特別なマーカーを出力する@samp{--color}オプションを指定できるgrepプログラムもあります。この機能を使うには、@code{grep-highlight-matches}を@code{t}にセットします。これによりソースバッファーのマッチを表示するとき、ソース行全体ではなく、正確なマッチだけがハイライトされます。"

#. type: Plain text
#: original_texis/building.texi:425
msgid "As with compilation commands (@pxref{Compilation}), while the grep command runs, the mode line shows the running number of matches found and highlighted so far."
msgstr "コンパイルコマンド(@ref{Compilation}を参照)のときと同様、grepコマンド実行中には、モードラインにはそれまでに見つかったマッチ数が表示されて、ハイライトされます。"

#. type: Plain text
#: original_texis/building.texi:434
msgid "The @command{grep} commands will offer to save buffers before running.  This is controlled by the @code{grep-save-buffers} variable.  The possible values are either @code{nil} (don't save), @code{ask} (ask before saving), or a function which will be used as a predicate (and is called with the file name as the parameter and should return non-@code{nil} if the buffer is to be saved).  Any other non-@code{nil} value means that all buffers should be saved without asking.  The default is @code{ask}."
msgstr "@command{grep}コマンドは、実行前にバッファーの保存を提案するでしょう。これは、変数@code{grep-save-buffers}により制御されます。利用できる値は@code{nil}(保存しない)、@code{ask}(保存前に尋ねる)、または述語として使用される関数(ファイル名をパラメーターとして呼び出され、バッファーを保存する場合は非@code{nil}をリターンすべきである)のいずれかである。その他の非@code{nil}値は、すべてのバッファーが確認なしで保存されるべきであることを意味します。デフォルト値は@code{ask}です。"

#. type: findex
#: original_texis/building.texi:435
#, no-wrap
msgid "grep-find"
msgstr "grep-find"

#. type: findex
#: original_texis/building.texi:436
#, no-wrap
msgid "find-grep"
msgstr "find-grep"

#. type: Plain text
#: original_texis/building.texi:442
msgid "The command @kbd{M-x grep-find} (also available as @kbd{M-x find-grep}) is similar to @kbd{M-x grep}, but it supplies a different initial default for the command---one that runs both @code{find} and @command{grep}, so as to search every file in a directory tree.  See also the @code{find-grep-dired} command, in @ref{Dired and Find}."
msgstr "コマンド@kbd{M-x grep-find}(@kbd{M-x find-grep}でも利用可能)は、@kbd{M-x grep}と似ていますが、コマンドにたいして提供される初期のデフォルトが異なります --- このデフォルトは@code{find}と@command{grep}の両方を実行するもので、これによりディレクトリーツリーの各ファイルを検索できます。@ref{Dired and Find}の@code{find-grep-dired}コマンドも参照してください。"

#. type: findex
#: original_texis/building.texi:443
#, no-wrap
msgid "lgrep"
msgstr "lgrep"

#. type: findex
#: original_texis/building.texi:444
#, no-wrap
msgid "rgrep"
msgstr "rgrep"

#. type: findex
#: original_texis/building.texi:445
#, no-wrap
msgid "zrgrep"
msgstr "zrgrep"

#. type: Plain text
#: original_texis/building.texi:454
msgid "The commands @kbd{M-x lgrep} (local grep) and @kbd{M-x rgrep} (recursive grep) are more user-friendly versions of @command{grep} and @code{grep-find}, which prompt separately for the regular expression to match, the files to search, and the base directory for the search.  Case sensitivity of the search is controlled by the current value of @code{case-fold-search}.  The command @kbd{M-x zrgrep} is similar to @kbd{M-x rgrep}, but it calls @command{zgrep} instead of @command{grep} to search the contents of gzipped files."
msgstr "コマンド@kbd{M-x lgrep} (local grep)および@kbd{M-x rgrep} (recursive grep)は、@command{grep}および@code{grep-find}のユーザーフレンドリーなバージョンで、これらはマッチにたいする正規表現、検索するファイル、検索の基準となるディレクトリーを個別に尋ねます。検索での大文字小文字の区別は、@code{case-fold-search}の値で制御されます。コマンド@kbd{M-x zrgrep}は@kbd{M-x rgrep}と似ていますが、これは@command{grep}のかわりに@command{zgrep}を呼び出し、gzipされたファイルの内容を検索します。"

#. type: Plain text
#: original_texis/building.texi:459
msgid "These commands build the shell commands based on the variables @code{grep-template} (for @code{lgrep}) and @code{grep-find-template} (for @code{rgrep}).  The files to search can use aliases defined in the variable @code{grep-files-aliases}."
msgstr "これらのコマンドは、変数@code{grep-template}(@code{lgrep}用)、および@code{grep-find-template}(@code{rgrep}用)にもとづいてシェルコマンドを構築します。検索するファイルには、変数@code{grep-files-aliases}で定義されたエイリアスを使用できます。"

#. type: vindex
#: original_texis/building.texi:460
#, no-wrap
msgid "grep-find-ignored-directories"
msgstr "grep-find-ignored-directories"

#. type: Plain text
#: original_texis/building.texi:465
msgid "Directories listed in the variable @code{grep-find-ignored-directories} are automatically skipped by @kbd{M-x rgrep}.  The default value includes the data directories used by various version control systems."
msgstr "変数@code{grep-find-ignored-directories}にリストされたディレクトリーは、@kbd{M-x rgrep}の検索で自動的にスキップされます。デフォルト値には、さまざまなバージョンコントロールシステムで使用されるデータディレクトリーが含まれます。"

#. type: section
#: original_texis/building.texi:467
#, no-wrap
msgid "Finding Syntax Errors On The Fly"
msgstr "オンザフライで構文エラーを見つける"

#. type: cindex
#: original_texis/building.texi:468
#, no-wrap
msgid "checking syntax"
msgstr "checking syntax"

#. type: Plain text
#: original_texis/building.texi:481
msgid "Flymake mode is a minor mode that performs on-the-fly syntax checking for many programming and markup languages, including C, C++, Perl, HTML, and @TeX{}/@LaTeX{}.  It is somewhat analogous to Flyspell mode, which performs spell checking for ordinary human languages in a similar fashion (@pxref{Spelling}).  As you edit a file, Flymake mode runs an appropriate syntax checking tool in the background, using a temporary copy of the buffer.  It then parses the error and warning messages, and highlights the erroneous lines in the buffer.  The syntax checking tool used depends on the language; for example, for C/C++ files this is usually the C compiler.  Flymake can also use build tools such as @code{make} for checking complicated projects."
msgstr "FlymakeモードはC、C++、Perl、HTML、@TeX{}/@LaTeX{}を含む、多くのプログラミング言語およびマークアップ言語の構文チェックを、オンザフライ(on-the-fly)で処理するマイナーモードです。これは通常の人間の言語にたいしてスペルチェックを処理する、Flyspellモード(@ref{Spelling}を参照してください)と、その方法において類似しています。Flymakeモードはファイルの編集にしたがい、そのバッファーの一時的なコピーを使用して、適切な構文チェックツールをバックグラウンドで実行します。それからエラーメッセージと警告メッセージを解析して、そのバッファーの間違った行をハイライトします。使用される構文チェックツールは、言語に依存します。たとえば通常、C/C++ファイルの場合は、Cコンパイラーです。Flymakeは、複雑なプロジェクトにたいしてのチェックでは、@code{make}のようなビルドツールを使うこともできます。"

#. type: Plain text
#: original_texis/building.texi:487
msgid "To enable Flymake mode, type @kbd{M-x flymake-mode}.  You can jump to the errors that it finds by using @kbd{M-x flymake-goto-next-error} and @kbd{M-x flymake-goto-prev-error}.  To display any error messages associated with the current line, type @kbd{M-x flymake-display-err-menu-for-current-line}."
msgstr "Flymakeモードを有効にするには、@kbd{M-x flymake-mode}とタイプします。@kbd{M-x flymake-goto-next-error}および@kbd{M-x flymake-goto-prev-error}を使用して、これが見つけたエラーにジャンプすることができます。カレント行に関連するエラーメッセージを表示するには、@kbd{M-x flymake-display-err-menu-for-current-line}とタイプしてください。"

#. type: Plain text
#: original_texis/building.texi:489
msgid "For more details about using Flymake,"
msgstr "Flymakeの使用についての詳細は、"

#. type: ifnottex
#: original_texis/building.texi:491
msgid "see @ref{Top, Flymake, Flymake, flymake, The Flymake Manual}."
msgstr "@ref{Top, Flymake, Flymake, flymake, The Flymake Manual}を参照してください。"

#. type: iftex
#: original_texis/building.texi:494
msgid "see the Flymake Info manual, which is distributed with Emacs."
msgstr "Emacsとともに配布されているFlymake Info manualを参照してください。"

#. type: section
#: original_texis/building.texi:497
#, no-wrap
msgid "Running Debuggers Under Emacs"
msgstr "Emacs下でのデバッガーの実行"

#. type: cindex
#: original_texis/building.texi:498
#, no-wrap
msgid "debuggers"
msgstr "debuggers"

#. type: cindex
#: original_texis/building.texi:499
#, no-wrap
msgid "GUD library"
msgstr "GUD library"

#. type: cindex
#: original_texis/building.texi:500
#, no-wrap
msgid "GDB"
msgstr "GDB"

#. type: cindex
#: original_texis/building.texi:501
#, no-wrap
msgid "DBX"
msgstr "DBX"

#. type: cindex
#: original_texis/building.texi:502
#, no-wrap
msgid "SDB"
msgstr "SDB"

#. type: cindex
#: original_texis/building.texi:503
#, no-wrap
msgid "XDB"
msgstr "XDB"

#. type: cindex
#: original_texis/building.texi:504
#, no-wrap
msgid "Perldb"
msgstr "Perldb"

#. type: cindex
#: original_texis/building.texi:505
#, no-wrap
msgid "JDB"
msgstr "JDB"

#. type: cindex
#: original_texis/building.texi:506
#, no-wrap
msgid "PDB"
msgstr "PDB"

#. type: Plain text
#: original_texis/building.texi:512
msgid "The GUD (Grand Unified Debugger) library provides an Emacs interface to a wide variety of symbolic debuggers.  It can run the GNU Debugger (GDB), as well as DBX, SDB, XDB, Guile REPL debug commands, Perl's debugging mode, the Python debugger PDB, and the Java Debugger JDB."
msgstr "GUD(Grand Unified Debugger)ライブラリーは、広範なシンボリックデバッガーにたいするEmacsのインターフェースを提供します。これはGNUデバッガー(GDB)、同様にDBX、SDB、XDB、GuileのREPLのデバッグコマンド、Paerlのデバッグモード、PythonデバッガーのPDB、JavaデバッガーのJDBを実行することができます。"

#. type: Plain text
#: original_texis/building.texi:516
msgid "Emacs provides a special interface to GDB, which uses extra Emacs windows to display the state of the debugged program.  @xref{GDB Graphical Interface}."
msgstr "EmacsはGDBにたいする特別なインターフェースを提供します。これはデバッグされているプログラムの状態を表示する追加のEmacsウィンドウを使用します。@ref{GDB Graphical Interface}を参照してください。"

#. type: Plain text
#: original_texis/building.texi:520
msgid "Emacs also has a built-in debugger for Emacs Lisp programs.  @xref{Debugging,, The Lisp Debugger, elisp, the Emacs Lisp Reference Manual}."
msgstr "Emacsは、Emacs Lispプログラムにたいするビルトインのデバッガーももっています。@ref{Debugging,, The Lisp Debugger, elisp, the Emacs Lisp Reference Manual}を参照してください。"

#. type: subsection
#: original_texis/building.texi:528 original_texis/building.texi:530
#: original_texis/building.texi:531
#, no-wrap
msgid "Starting GUD"
msgstr "Starting GUD"

#. type: menuentry
#: original_texis/building.texi:528
msgid "How to start a debugger subprocess."
msgstr "デバッガーサブプロセスを開始する方法。"

#. type: subsection
#: original_texis/building.texi:528 original_texis/building.texi:599
#: original_texis/building.texi:600
#, no-wrap
msgid "Debugger Operation"
msgstr "Debugger Operation"

#. type: menuentry
#: original_texis/building.texi:528
msgid "Connection between the debugger and source buffers."
msgstr "デバッガーとソースバッファーの関係。"

#. type: subsection
#: original_texis/building.texi:528 original_texis/building.texi:669
#: original_texis/building.texi:670
#, no-wrap
msgid "Commands of GUD"
msgstr "Commands of GUD"

#. type: menuentry
#: original_texis/building.texi:528
msgid "Key bindings for common commands."
msgstr "一般的なコマンドのキーバインディング。"

#. type: subsection
#: original_texis/building.texi:528 original_texis/building.texi:817
#: original_texis/building.texi:818
#, no-wrap
msgid "GUD Customization"
msgstr "GUD Customization"

#. type: menuentry
#: original_texis/building.texi:528
msgid "Defining your own commands for GUD."
msgstr "GUDにたいして独自のコマンドを定義する。"

#. type: subsection
#: original_texis/building.texi:528 original_texis/building.texi:892
#: original_texis/building.texi:893
#, no-wrap
msgid "GDB Graphical Interface"
msgstr "GDB Graphical Interface"

#. type: menuentry
#: original_texis/building.texi:528
msgid "An enhanced mode that uses GDB features to implement a graphical debugging environment."
msgstr "GDB機能を使用して、グラフィカルなデバッグ環境を実装する拡張モード。"

#. type: Plain text
#: original_texis/building.texi:535
msgid "There are several commands for starting a debugger subprocess, each corresponding to a particular debugger program."
msgstr "デバッガーサブプロセスを開始する複数のコマンドがあり、それらは特定のデバッガープログラムに対応しています。"

#. type: item
#: original_texis/building.texi:537
#, no-wrap
msgid "M-x gdb"
msgstr "M-x gdb"

#. type: findex
#: original_texis/building.texi:538
#, no-wrap
msgid "gdb"
msgstr "gdb"

#. type: table
#: original_texis/building.texi:542
msgid "Run GDB as a subprocess, and interact with it via an IDE-like Emacs interface.  @xref{GDB Graphical Interface}, for more information about this command."
msgstr "GDBをサブプロセスとして実行し、IDE-likeなEmacsインターフェースを通じてやりとりをします。このコマンドに間する詳細は、@ref{GDB Graphical Interface}を参照してください。"

#. type: item
#: original_texis/building.texi:543
#, no-wrap
msgid "M-x gud-gdb"
msgstr "M-x gud-gdb"

#. type: findex
#: original_texis/building.texi:544
#, no-wrap
msgid "gud-gdb"
msgstr "gud-gdb"

#. type: table
#: original_texis/building.texi:548
msgid "Run GDB, using a GUD interaction buffer for input and output to the GDB subprocess (@pxref{Debugger Operation}).  If such a buffer already exists, switch to it; otherwise, create the buffer and switch to it."
msgstr "GDBサブプロセスとの入出力に、GUD interactionバッファーを使用してGDBを実行します((@ref{Debugger Operation}を参照してください))。そのようなバッファーがすでに存在している場合はそのバッファーに切り替え、存在しない場合はバッファーを作成して切り替えます。"

#. type: table
#: original_texis/building.texi:551
msgid "The other commands in this list do the same, for other debugger programs."
msgstr "ここにリストされている他のコマンドは、他のデバッガープログラムにたいして同じことを行います。"

#. type: item
#: original_texis/building.texi:552
#, no-wrap
msgid "M-x perldb"
msgstr "M-x perldb"

#. type: findex
#: original_texis/building.texi:553
#, no-wrap
msgid "perldb"
msgstr "perldb"

#. type: table
#: original_texis/building.texi:555
msgid "Run the Perl interpreter in debug mode."
msgstr "Perlインタープリターをデバッグモードで実行します。"

#. type: item
#: original_texis/building.texi:556
#, no-wrap
msgid "M-x jdb"
msgstr "M-x jdb"

#. type: findex
#: original_texis/building.texi:557
#, no-wrap
msgid "jdb"
msgstr "jdb"

#. type: table
#: original_texis/building.texi:559
msgid "Run the Java debugger."
msgstr "Javaデバッガーを実行します。"

#. type: item
#: original_texis/building.texi:560
#, no-wrap
msgid "M-x pdb"
msgstr "M-x pdb"

#. type: findex
#: original_texis/building.texi:561
#, no-wrap
msgid "pdb"
msgstr "pdb"

#. type: table
#: original_texis/building.texi:563
msgid "Run the Python debugger."
msgstr "Pythonデバッガーを実行します。"

#. type: item
#: original_texis/building.texi:564
#, no-wrap
msgid "M-x guiler"
msgstr "M-x guiler"

#. type: findex
#: original_texis/building.texi:565
#, no-wrap
msgid "guiler"
msgstr "guiler"

#. type: table
#: original_texis/building.texi:567
msgid "Run Guile REPL for debugging Guile Scheme programs."
msgstr "Guile Schemeプログラムをデバッグするために、Guile REPLを実行します。"

#. type: item
#: original_texis/building.texi:568
#, no-wrap
msgid "M-x dbx"
msgstr "M-x dbx"

#. type: findex
#: original_texis/building.texi:569
#, no-wrap
msgid "dbx"
msgstr "dbx"

#. type: table
#: original_texis/building.texi:571
msgid "Run the DBX debugger."
msgstr "DBXデバッガーを実行します。"

#. type: item
#: original_texis/building.texi:572
#, no-wrap
msgid "M-x xdb"
msgstr "M-x xdb"

#. type: findex
#: original_texis/building.texi:573
#, no-wrap
msgid "xdb"
msgstr "xdb"

#. type: vindex
#: original_texis/building.texi:574
#, no-wrap
msgid "gud-xdb-directories"
msgstr "gud-xdb-directories"

#. type: table
#: original_texis/building.texi:576
msgid "Run the XDB debugger."
msgstr "XDBデバッガーを実行します。"

#. type: item
#: original_texis/building.texi:577
#, no-wrap
msgid "M-x sdb"
msgstr "M-x sdb"

#. type: findex
#: original_texis/building.texi:578
#, no-wrap
msgid "sdb"
msgstr "sdb"

#. type: table
#: original_texis/building.texi:580
msgid "Run the SDB debugger."
msgstr "SDBデバッガーを実行します。"

#. type: Plain text
#: original_texis/building.texi:589
msgid "Each of these commands reads a command line to invoke the debugger, using the minibuffer.  The minibuffer's initial contents contain the standard executable name and options for the debugger, and sometimes also a guess for the name of the executable file you want to debug.  Shell wildcards and variables are not allowed in this command line.  Emacs assumes that the first command argument which does not start with a @samp{-} is the executable file name."
msgstr "これらの各コマンドは、ミニバッファーを使ってデバッガーを呼び出すコマンドラインを読み取ります。ミニバッファーの初期内容は、デバッガーの標準的な実行ファイル名とオプションで、デバッグしたいと推測される実行ファイル名の場合もあります。シェルのワイルドカードと変数は、このコマンドラインでは使用できません。Emacsは@samp{-}で始まらない最初のコマンド引数を、実行ファイル名とみなします。"

#. type: cindex
#: original_texis/building.texi:590
#, no-wrap
msgid "remote host, debugging on"
msgstr "remote host, debugging on"

#. type: Plain text
#: original_texis/building.texi:598
msgid "Tramp provides a facility for remote debugging, whereby both the debugger and the program being debugged are on the same remote host.  @xref{Running a debugger on a remote host,,, tramp, The Tramp Manual}, for details.  This is separate from GDB's remote debugging feature, where the program and the debugger run on different machines (@pxref{Remote Debugging,, Debugging Remote Programs, gdb, The GNU debugger})."
msgstr "Trampは、同じリモートホスト上のデバッガーとプログラムによる、リモートデバッグ機能を提供します。詳細については、@ref{Running a debugger on a remote host,,, tramp, The Tramp Manual}を参照してください。これはGDBのリモートデバッグ機能とは別の物です、なぜなら、プログラムとデバッガーは違うマシンで実行されるからです(@ref{Remote Debugging,, Debugging Remote Programs, gdb, The GNU debugger}を参照してください)。"

#. type: cindex
#: original_texis/building.texi:601
#, no-wrap
msgid "GUD interaction buffer"
msgstr "GUD interaction buffer"

#. type: Plain text
#: original_texis/building.texi:607
msgid "The @dfn{GUD interaction buffer} is an Emacs buffer which is used to send text commands to a debugger subprocess, and record its output.  This is the basic interface for interacting with a debugger, used by @kbd{M-x gud-gdb} and other commands listed in"
msgstr "@dfn{GUD interactionバッファー}は、デバッガーサブプロセスにテキストコマンドを送ったり、それの出力を記録するのに使用されるEmacsバッファーです。これは@kbd{M-x gud-gdb}や、"

#. type: iftex
#: original_texis/building.texi:609
msgid "the preceding section."
msgstr "前のセクションにリストされた他のコマンドで使用される、デバッガーとやりとりするための基本的なインターフェースです。"

#. type: ifnottex
#: original_texis/building.texi:612
msgid "@ref{Starting GUD}."
msgstr "@ref{Starting GUD}にリストされた他のコマンドで使用される、デバッガーとやりとりするための基本的なインターフェースです。"

#. type: Plain text
#: original_texis/building.texi:616
msgid "The @kbd{M-x gdb} command extends this interface with additional specialized buffers for controlling breakpoints, stack frames, and other aspects of the debugger state (@pxref{GDB Graphical Interface})."
msgstr "@kbd{M-x gdb}コマンドは、ブレークポイント、スタックフレーム、その他のデバッガーの状態の様相を制御する、追加の特別なバッファーにより、この機能を拡張します(@ref{GDB Graphical Interface}を参照してください)。"

#. type: Plain text
#: original_texis/building.texi:622
msgid "The GUD interaction buffer uses a variant of Shell mode, so the Emacs commands defined by Shell mode are available (@pxref{Shell Mode}).  Completion is available for most debugger commands (@pxref{Completion}), and you can use the usual Shell mode history commands to repeat them."
msgstr "GUD interactionはShellモードの変種を使用するので、Shellモードで定義されたEmacsコマンドが利用可能です(@ref{Shell Mode}を参照してください)。ほとんどのデバッガーコマンドにたいして補完(@ref{Completion}を参照してください)が利用可能で、それらを繰り返すのに、通常のShellモードのヒストリーコマンドを使うことができます。"

#. type: iftex
#: original_texis/building.texi:624
msgid "See the next section"
msgstr "GUD interactionバッファーで使用できる特別なコマンドについては、次のセクション"

#. type: ifnottex
#: original_texis/building.texi:627
msgid "@xref{Commands of GUD},"
msgstr "GUD interactionバッファーで使用できる特別なコマンドについては、@ref{Commands of GUD}"

#. type: Plain text
#: original_texis/building.texi:629
msgid "for special commands that can be used in the GUD interaction buffer."
msgstr "を参照してください。"

#. type: Plain text
#: original_texis/building.texi:640
msgid "As you debug a program, Emacs displays the relevant source files by visiting them in Emacs buffers, with an arrow in the left fringe indicating the current execution line.  (On a text terminal, the arrow appears as @samp{=>}, overlaid on the first two text columns.)  Moving point in such a buffer does not move the arrow.  You are free to edit these source files, but note that inserting or deleting lines will throw off the arrow's positioning, as Emacs has no way to figure out which edited source line corresponds to the line reported by the debugger subprocess.  To update this information, you typically have to recompile and restart the program."
msgstr "プログラムをデバッグすると、Emacsは関連するソースファイルをEmacsバッファーにvisitして、カレント実行行には左フリンジに矢印が表示されます(テキスト端末では最初の2列に@samp{=>}の矢印が表示されます)。そのようなバッファーでのポイントの移動は、矢印を移動しません。これらのソースファイルの編集はできますが、行の挿入や削除により矢印の位置は失われることに注意してください。なぜならEmacsには編集されたソース行が、デバッガーサブプロセスから報告されるどの行に対応するか、知る手立てがないからです。この情報を更新するには通常、プログラムのリコンパイルと再実行が必要です。"

#. type: cindex
#: original_texis/building.texi:641
#, no-wrap
msgid "GUD Tooltip mode"
msgstr "GUD Tooltip mode"

#. type: cindex
#: original_texis/building.texi:642
#, no-wrap
msgid "mode, GUD Tooltip"
msgstr "mode, GUD Tooltip"

#. type: findex
#: original_texis/building.texi:643
#, no-wrap
msgid "gud-tooltip-mode"
msgstr "gud-tooltip-mode"

#. type: vindex
#: original_texis/building.texi:644
#, no-wrap
msgid "gud-tooltip-echo-area"
msgstr "gud-tooltip-echo-area"

#. type: Plain text
#: original_texis/building.texi:660
msgid "GUD Tooltip mode is a global minor mode that adds tooltip support to GUD@.  To toggle this mode, type @kbd{M-x gud-tooltip-mode}.  It is disabled by default.  If enabled, you can move the mouse pointer over a variable, a function, or a macro (collectively called @dfn{identifiers}) to show their values in tooltips (@pxref{Tooltips}).  If just placing the mouse pointer over an expression doesn't show the value of the expression you had in mind, you can tell Emacs more explicitly what expression to evaluate by dragging the mouse over the expression, then leaving the mouse inside the marked area.  The GUD Tooltip mode takes effect in the GUD interaction buffer, and in all source buffers with major modes listed in the variable @code{gud-tooltip-modes}.  If the variable @code{gud-tooltip-echo-area} is non-@code{nil}, or if you turned off the tooltip mode, values are shown in the echo area instead of a tooltip."
msgstr "GUD Tooltipモードは、GUDにツールチップサポートを追加するグローバルなマイナーモードです。このモードに切り替えるには、@kbd{M-x gud-tooltip-mode}とタイプします。このモードはデフォルトで無効になっています。有効にした場合、変数、関数、マクロ(@dfn{識別子}として総称される)にマウスポインターを移動すると、それらの値がツールチップで表示されます(@ref{Tooltips}を参照)。値を表示したい式の上にマウスポインターを置くだけでは値が表示されない場合は、マウスでその式をドラッグしてマークし、マウスポインターをそのマークされた領域内に置いたままにすることにより、より明示的にEmacsに指示することができます。かわりにマウスをドラッグして識別子または式をマークしてから、マウスをマークした領域から離すと、式の値がツールチップに表示されます。GUD Tooltipモードは、GUD interactionバッファー、および@code{gud-tooltip-modes}にリストされたメジャーモードの、すべてのソースバッファーで効果があります。変数@code{gud-tooltip-echo-area}が非@code{nil}の場合、またはツールチップモードがオフの場合は、ツールチップではなくエコーエリアに値が表示されます。"

#. type: Plain text
#: original_texis/building.texi:668
msgid "When using GUD Tooltip mode with @kbd{M-x gud-gdb}, displaying an expression's value in GDB can sometimes expand a macro, potentially causing side effects in the debugged program.  For that reason, using tooltips in @code{gud-gdb} is disabled.  If you use the @kbd{M-x gdb} interface, this problem does not occur, as there is special code to avoid side-effects; furthermore, you can display macro definitions associated with an identifier when the program is not executing."
msgstr "@kbd{M-x gud-gdb}でGUD Tooltipモードを使用する場合、GDBにより表示される式の値は、マクロを展開する場合があり、これはデバッグされているプログラムに副作用をもたらすかもしれません。この理由により、@code{gud-gdb}ではツールチップの使用は無効になっています。@kbd{M-x gdb}インターフェースを使用する場合、この問題は発生しません。なぜなら副作用を避ける特別なコードがあるからです。さらにプログラムが実行されていないときに、識別子に関連付けられたマクロの定義を表示することもできます。"

#. type: Plain text
#: original_texis/building.texi:674
msgid "GUD provides commands for setting and clearing breakpoints, selecting stack frames, and stepping through the program."
msgstr "GUDはブレークポイントのセットとクリアー、スタックフレームの選択、プログラムのステップ実行のためのコマンドを提供します。"

#. type: kindex
#: original_texis/building.texi:676 original_texis/building.texi:677
#, no-wrap
msgid "C-x C-a C-b"
msgstr "C-x C-a C-b"

#. type: table
#: original_texis/building.texi:679
msgid "Set a breakpoint on the source line that point is on."
msgstr "ポイントのあるソース行にブレークポイントをセットします。"

#. type: Plain text
#: original_texis/building.texi:686
msgid "@kbd{C-x C-a C-b} (@code{gud-break}), when called in a source buffer, sets a debugger breakpoint on the current source line.  This command is available only after starting GUD@.  If you call it in a buffer that is not associated with any debugger subprocess, it signals an error."
msgstr "ソースバッファーから@kbd{C-x C-a C-b} (@code{gud-break})が呼び出された場合、カレントソース行にデバッガーのブレークポイントをセットします。このコマンドはGUDを開始した後だけ利用可能です。デバッガーサブプロセスに関連付けられていないバッファーで呼び出すと、エラーをシグナルします。"

#. type: kindex
#: original_texis/building.texi:687
#, no-wrap
msgid "C-x C-a @r{(GUD)}"
msgstr "C-x C-a @r{(GUD)}"

#. type: Plain text
#: original_texis/building.texi:694
msgid "The following commands are available both in the GUD interaction buffer and globally, but with different key bindings.  The keys starting with @kbd{C-c} are available only in the GUD interaction buffer, while those starting with @kbd{C-x C-a} are available globally.  Some of these commands are also available via the tool bar; some are not supported by certain debuggers."
msgstr "以下のコマンドは、GUD interactionバッファーとグローバルの両方で利用可能ですが、キーバインドが異なります。キーが@kbd{C-c}で始まるものはGUD interactionバッファーだけで利用可能で、@kbd{C-x C-a}で始まるものはグローバルに利用可能です。コマンドのいくつかはツールバーを通じても利用可能です。また、特定のデバッガーではサポートされないものもあります。"

#. type: item
#: original_texis/building.texi:696
#, no-wrap
msgid "C-c C-l"
msgstr "C-c C-l"

#. type: kindex
#: original_texis/building.texi:697
#, no-wrap
msgid "C-c C-l @r{(GUD)}"
msgstr "C-c C-l @r{(GUD)}"

#. type: itemx
#: original_texis/building.texi:698
#, no-wrap
msgid "C-x C-a C-l"
msgstr "C-x C-a C-l"

#. type: findex
#: original_texis/building.texi:699
#, no-wrap
msgid "gud-refresh"
msgstr "gud-refresh"

#. type: table
#: original_texis/building.texi:702
msgid "Display, in another window, the last source line referred to in the GUD interaction buffer (@code{gud-refresh})."
msgstr "GUD interactionバッファーで参照される最後のソース行を、別のウィンドウに表示します(@code{gud-refresh})。"

#. type: item
#: original_texis/building.texi:703
#, no-wrap
msgid "C-c C-s"
msgstr "C-c C-s"

#. type: kindex
#: original_texis/building.texi:704
#, no-wrap
msgid "C-c C-s @r{(GUD)}"
msgstr "C-c C-s @r{(GUD)}"

#. type: itemx
#: original_texis/building.texi:705
#, no-wrap
msgid "C-x C-a C-s"
msgstr "C-x C-a C-s"

#. type: findex
#: original_texis/building.texi:706
#, no-wrap
msgid "gud-step"
msgstr "gud-step"

#. type: table
#: original_texis/building.texi:710
msgid "Execute the next single line of code (@code{gud-step}).  If the line contains a function call, execution stops after entering the called function."
msgstr "次の1行を実行します(@code{gud-step})。その行が関数呼び出しを含む場合、関数呼び出しに入った後に実行をストップします。"

#. type: item
#: original_texis/building.texi:711
#, no-wrap
msgid "C-c C-n"
msgstr "C-c C-n"

#. type: kindex
#: original_texis/building.texi:712
#, no-wrap
msgid "C-c C-n @r{(GUD)}"
msgstr "C-c C-n @r{(GUD)}"

#. type: itemx
#: original_texis/building.texi:713
#, no-wrap
msgid "C-x C-a C-n"
msgstr "C-x C-a C-n"

#. type: findex
#: original_texis/building.texi:714
#, no-wrap
msgid "gud-next"
msgstr "gud-next"

#. type: table
#: original_texis/building.texi:717
msgid "Execute the next single line of code, stepping across function calls without stopping inside the functions (@code{gud-next})."
msgstr "次の1行を実行します(@code{gud-next})。その行が関数呼び出しを含む場合、関数の中でストップせずに関数をステップオーバーします。"

#. type: item
#: original_texis/building.texi:718
#, no-wrap
msgid "C-c C-i"
msgstr "C-c C-i"

#. type: kindex
#: original_texis/building.texi:719
#, no-wrap
msgid "C-c C-i @r{(GUD)}"
msgstr "C-c C-i @r{(GUD)}"

#. type: itemx
#: original_texis/building.texi:720
#, no-wrap
msgid "C-x C-a C-i"
msgstr "C-x C-a C-i"

#. type: findex
#: original_texis/building.texi:721
#, no-wrap
msgid "gud-stepi"
msgstr "gud-stepi"

#. type: table
#: original_texis/building.texi:723
msgid "Execute a single machine instruction (@code{gud-stepi})."
msgstr "機械語の1命令を実行します(@code{gud-stepi})。"

#. type: item
#: original_texis/building.texi:724
#, no-wrap
msgid "C-c C-p"
msgstr "C-c C-p"

#. type: kindex
#: original_texis/building.texi:725
#, no-wrap
msgid "C-c C-p @r{(GUD)}"
msgstr "C-c C-p @r{(GUD)}"

#. type: itemx
#: original_texis/building.texi:726
#, no-wrap
msgid "C-x C-a C-p"
msgstr "C-x C-a C-p"

#. type: findex
#: original_texis/building.texi:727
#, no-wrap
msgid "gud-print"
msgstr "gud-print"

#. type: table
#: original_texis/building.texi:731
msgid "Evaluate the expression at point (@code{gud-print}).  If Emacs does not print the exact expression that you want, mark it as a region first."
msgstr "ポイント位置の式を評価します(@code{gud-print})。表示したい正確な式をEmacsが表示しない場合、最初に式をリージョンとしてマークします。"

#. type: item
#: original_texis/building.texi:733
#, no-wrap
msgid "C-c C-r"
msgstr "C-c C-r"

#. type: kindex
#: original_texis/building.texi:734
#, no-wrap
msgid "C-c C-r @r{(GUD)}"
msgstr "C-c C-r @r{(GUD)}"

#. type: itemx
#: original_texis/building.texi:735
#, no-wrap
msgid "C-x C-a C-r"
msgstr "C-x C-a C-r"

#. type: findex
#: original_texis/building.texi:736
#, no-wrap
msgid "gud-cont"
msgstr "gud-cont"

#. type: table
#: original_texis/building.texi:740
msgid "Continue execution without specifying any stopping point.  The program will run until it hits a breakpoint, terminates, or gets a signal that the debugger is checking for (@code{gud-cont})."
msgstr "停止位置を指定せずに実行を継続します。プログラムは、ブレークポイントに達する、プログラム終了、またはデバッガーがチェックしているシグナルを受けとるまで実行を続けます。"

#. type: item
#: original_texis/building.texi:742
#, no-wrap
msgid "C-c C-d"
msgstr "C-c C-d"

#. type: kindex
#: original_texis/building.texi:743
#, no-wrap
msgid "C-c C-d @r{(GUD)}"
msgstr "C-c C-d @r{(GUD)}"

#. type: itemx
#: original_texis/building.texi:744
#, no-wrap
msgid "C-x C-a C-d"
msgstr "C-x C-a C-d"

#. type: findex
#: original_texis/building.texi:745
#, no-wrap
msgid "gud-remove"
msgstr "gud-remove"

#. type: table
#: original_texis/building.texi:749
msgid "Delete the breakpoint(s) on the current source line, if any (@code{gud-remove}).  If you use this command in the GUD interaction buffer, it applies to the line where the program last stopped."
msgstr "カレントソース行にブレークポイントがある場合、ブレークポイントを削除します。GUD interactionバッファーでこのコマンドを使用する場合、プログラムが最後に停止した位置に適用されます。"

#. type: item
#: original_texis/building.texi:750
#, no-wrap
msgid "C-c C-t"
msgstr "C-c C-t"

#. type: kindex
#: original_texis/building.texi:751
#, no-wrap
msgid "C-c C-t @r{(GUD)}"
msgstr "C-c C-t @r{(GUD)}"

#. type: itemx
#: original_texis/building.texi:752
#, no-wrap
msgid "C-x C-a C-t"
msgstr "C-x C-a C-t"

#. type: findex
#: original_texis/building.texi:753
#, no-wrap
msgid "gud-tbreak"
msgstr "gud-tbreak"

#. type: table
#: original_texis/building.texi:757
msgid "Set a temporary breakpoint on the current source line, if any (@code{gud-tbreak}).  If you use this command in the GUD interaction buffer, it applies to the line where the program last stopped."
msgstr "カレントソース行に、一時的なブレークポイントをセットします(@code{gud-tbreak})。GUD interactionバッファーでこのコマンドを使用した場合、プログラムが最後に停止した位置に適用されます。"

#. type: item
#: original_texis/building.texi:758
#, no-wrap
msgid "C-c <"
msgstr "C-c <"

#. type: kindex
#: original_texis/building.texi:759
#, no-wrap
msgid "C-c < @r{(GUD)}"
msgstr "C-c < @r{(GUD)}"

#. type: itemx
#: original_texis/building.texi:760
#, no-wrap
msgid "C-x C-a <"
msgstr "C-x C-a <"

#. type: findex
#: original_texis/building.texi:761
#, no-wrap
msgid "gud-up"
msgstr "gud-up"

#. type: table
#: original_texis/building.texi:764
msgid "Select the next enclosing stack frame (@code{gud-up}).  This is equivalent to the GDB command @samp{up}."
msgstr "次の外側のスタックフレームを選択します(@code{gud-up})。これはGDBコマンドの@samp{up}と等価です。"

#. type: item
#: original_texis/building.texi:765
#, no-wrap
msgid "C-c >"
msgstr "C-c >"

#. type: kindex
#: original_texis/building.texi:766
#, no-wrap
msgid "C-c > @r{(GUD)}"
msgstr "C-c > @r{(GUD)}"

#. type: itemx
#: original_texis/building.texi:767
#, no-wrap
msgid "C-x C-a >"
msgstr "C-x C-a >"

#. type: findex
#: original_texis/building.texi:768
#, no-wrap
msgid "gud-down"
msgstr "gud-down"

#. type: table
#: original_texis/building.texi:771
msgid "Select the next inner stack frame (@code{gud-down}).  This is equivalent to the GDB command @samp{down}."
msgstr "次の内側のスタックフレームを選択します(@code{gud-down})。これはGDBコマンドの@samp{down}と等価です。"

#. type: item
#: original_texis/building.texi:772
#, no-wrap
msgid "C-c C-u"
msgstr "C-c C-u"

#. type: kindex
#: original_texis/building.texi:773
#, no-wrap
msgid "C-c C-u @r{(GUD)}"
msgstr "C-c C-u @r{(GUD)}"

#. type: itemx
#: original_texis/building.texi:774
#, no-wrap
msgid "C-x C-a C-u"
msgstr "C-x C-a C-u"

#. type: findex
#: original_texis/building.texi:775
#, no-wrap
msgid "gud-until"
msgstr "gud-until"

#. type: table
#: original_texis/building.texi:780
msgid "Continue execution to the current line (@code{gud-until}).  The program will run until it hits a breakpoint, terminates, gets a signal that the debugger is checking for, or reaches the line on which the cursor currently sits."
msgstr "カレント行まで実行を継続します(@code{gud-until})。プログラムは、ブレークポイントに達する、プログラム終了、またはデバッガーがチェックしているシグナルを受けとる、またはカーソルがある行に到達するまで実行を続けます。"

#. type: kindex
#: original_texis/building.texi:782
#, no-wrap
msgid "C-c C-f @r{(GUD)}"
msgstr "C-c C-f @r{(GUD)}"

#. type: itemx
#: original_texis/building.texi:783
#, no-wrap
msgid "C-x C-a C-f"
msgstr "C-x C-a C-f"

#. type: findex
#: original_texis/building.texi:784
#, no-wrap
msgid "gud-finish"
msgstr "gud-finish"

#. type: table
#: original_texis/building.texi:787
msgid "Run the program until the selected stack frame returns or stops for some other reason (@code{gud-finish})."
msgstr "選択されたフレームがリターンするか、他の理由により停止するまでプログラムを実行します(@code{gud-finish})。"

#. type: Plain text
#: original_texis/building.texi:790
msgid "If you are using GDB, these additional key bindings are available:"
msgstr "GDBを使用している場合、追加のキーバインディングが利用可能です:"

#. type: item
#: original_texis/building.texi:792
#, no-wrap
msgid "C-x C-a C-j"
msgstr "C-x C-a C-j"

#. type: kindex
#: original_texis/building.texi:793
#, no-wrap
msgid "C-x C-a C-j @r{(GUD)}"
msgstr "C-x C-a C-j @r{(GUD)}"

#. type: findex
#: original_texis/building.texi:794
#, no-wrap
msgid "gud-jump"
msgstr "gud-jump"

#. type: table
#: original_texis/building.texi:802
msgid "Only useful in a source buffer, @code{gud-jump} transfers the program's execution point to the current line.  In other words, the next line that the program executes will be the one where you gave the command.  If the new execution line is in a different function from the previously one, GDB prompts for confirmation since the results may be bizarre.  See the GDB manual entry regarding @code{jump} for details."
msgstr "ソースバッファーだけで有用です。@code{gud-jump}はプログラムの実行箇所をカレント行に転送します。別の言い方をすると、プログラムが次に実行するのは、このコマンドを与えた位置になります。新しく実行される行が前の関数とは異なる場合、多分奇妙な結果になるので、GDBは確認を求めます。詳細は、GDBマニュアルのエントリー@code{jump}を参照してください。"

#. type: key{#1}
#: original_texis/building.texi:803
#, no-wrap
msgid "TAB"
msgstr "TAB"

#. type: kindex
#: original_texis/building.texi:804
#, no-wrap
msgid "TAB @r{(GUD)}"
msgstr "TAB @r{(GUD)}"

#. type: findex
#: original_texis/building.texi:805
#, no-wrap
msgid "gud-gdb-complete-command"
msgstr "gud-gdb-complete-command"

#. type: table
#: original_texis/building.texi:808
msgid "With GDB, complete a symbol name (@code{gud-gdb-complete-command}).  This key is available only in the GUD interaction buffer."
msgstr "GDBの場合、シンボル名を補完します(@code{gud-gdb-complete-command})。このキーはGUD interactionバッファーだけで利用可能です。"

#. type: Plain text
#: original_texis/building.texi:812
msgid "These commands interpret a numeric argument as a repeat count, when that makes sense."
msgstr "これらのコマンドは、それが意味がある場合には、数引数を繰り返し回数と解釈します。"

#. type: Plain text
#: original_texis/building.texi:816
msgid "Because @key{TAB} serves as a completion command, you can't use it to enter a tab as input to the program you are debugging with GDB@.  Instead, type @kbd{C-q @key{TAB}} to enter a tab."
msgstr "@key{TAB}は補完コマンドに割り当てられているので、GDBでデバッグしているプログラムへのタブの入力には使えません。タブの入力には@kbd{C-q @key{TAB}}とタイプしてください。"

#. type: vindex
#: original_texis/building.texi:820
#, no-wrap
msgid "gdb-mode-hook"
msgstr "gdb-mode-hook"

#. type: vindex
#: original_texis/building.texi:821
#, no-wrap
msgid "dbx-mode-hook"
msgstr "dbx-mode-hook"

#. type: vindex
#: original_texis/building.texi:822
#, no-wrap
msgid "sdb-mode-hook"
msgstr "sdb-mode-hook"

#. type: vindex
#: original_texis/building.texi:823
#, no-wrap
msgid "xdb-mode-hook"
msgstr "xdb-mode-hook"

#. type: vindex
#: original_texis/building.texi:824
#, no-wrap
msgid "perldb-mode-hook"
msgstr "perldb-mode-hook"

#. type: vindex
#: original_texis/building.texi:825
#, no-wrap
msgid "pdb-mode-hook"
msgstr "pdb-mode-hook"

#. type: vindex
#: original_texis/building.texi:826
#, no-wrap
msgid "jdb-mode-hook"
msgstr "jdb-mode-hook"

#. type: vindex
#: original_texis/building.texi:827
#, no-wrap
msgid "guiler-mode-hook"
msgstr "guiler-mode-hook"

#. type: Plain text
#: original_texis/building.texi:835
msgid "On startup, GUD runs one of the following hooks: @code{gdb-mode-hook}, if you are using GDB; @code{dbx-mode-hook}, if you are using DBX; @code{sdb-mode-hook}, if you are using SDB; @code{xdb-mode-hook}, if you are using XDB; @code{guiler-mode-hook} for Guile REPL debugging; @code{perldb-mode-hook}, for Perl debugging mode; @code{pdb-mode-hook}, for PDB; @code{jdb-mode-hook}, for JDB@.  @xref{Hooks}."
msgstr "起動時にGUDは以下のフックの1つを実行します:@*GDBを使用している場合は@code{gdb-mode-hook}、@*DBXを使用している場合は@code{dbx-mode-hook}、@*SDBを使用している場合は@code{sdb-mode-hook}、@*XDBを使用している場合は@code{xdb-mode-hook}、Guile REPLのデバッグには@code{guiler-mode-hook}、@*Perlのデバッグモードを使用している場合は@code{perldb-mode-hook}、@*PDBを使用している場合は@code{pdb-mode-hook}、@*JDBを使用している場合は@code{jdb-mode-hook}を実行します。@*@ref{Hooks}を参照してください。"

#. type: Plain text
#: original_texis/building.texi:840
msgid "The @code{gud-def} Lisp macro (@pxref{Defining Macros,,, elisp, the Emacs Lisp Reference Manual}) provides a convenient way to define an Emacs command that sends a particular command string to the debugger, and set up a key binding for in the GUD interaction buffer:"
msgstr "Lispマクロ@code{gud-def}(@ref{Defining Macros,,, elisp, the Emacs Lisp Reference Manual}を参照してください)は、デバッガーに特定のコマンド文字列を送るEmacsコマンドを定義して、GUD interactionバッファーで、それにたいするキーバインドをセットアップする便利な方法を提供します:"

#. type: findex
#: original_texis/building.texi:841
#, no-wrap
msgid "gud-def"
msgstr "gud-def"

#. type: example
#: original_texis/building.texi:844
#, no-wrap
msgid "(gud-def @var{function} @var{cmdstring} @var{binding} @var{docstring})\n"
msgstr "(gud-def @var{function} @var{cmdstring} @var{binding} @var{docstring})\n"

#. type: Plain text
#: original_texis/building.texi:852
msgid "This defines a command named @var{function} which sends @var{cmdstring} to the debugger process, and gives it the documentation string @var{docstring}.  You can then use the command @var{function} in any buffer.  If @var{binding} is non-@code{nil}, @code{gud-def} also binds the command to @kbd{C-c @var{binding}} in the GUD buffer's mode and to @kbd{C-x C-a @var{binding}} generally."
msgstr "これはデバッガープロセスに@var{cmdstring}を送る、ドキュメント文字列が@var{docstring}の、@var{function}という名前のコマンドを定義します。コマンド@var{function}を、任意のバッファーで使用できます。@var{binding}が非@code{nil}の場合、@code{gud-def}はそのコマンドを、GUDバッファーのモードでは@kbd{C-c @var{binding}}、グローバルには@kbd{C-x C-a @var{binding}}にバインドします。"

#. type: Plain text
#: original_texis/building.texi:856
msgid "The command string @var{cmdstring} may contain certain @samp{%}-sequences that stand for data to be filled in at the time @var{function} is called:"
msgstr "コマンド文字列@var{cmdstring}には、@var{function}が呼び出されたときに書き込まれるデータのための、特定の@samp{%}シーケンスを含めることができます:"

#. type: item
#: original_texis/building.texi:858
#, no-wrap
msgid "%f"
msgstr "%f"

#. type: table
#: original_texis/building.texi:862
msgid "The name of the current source file.  If the current buffer is the GUD buffer, then the current source file is the file that the program stopped in."
msgstr "カレントソースファイルの名前です。カレントバッファーがGUDバッファーの場合、カレントソースファイルはプログラムがストップしているファイルです。"

#. type: item
#: original_texis/building.texi:863
#, no-wrap
msgid "%l"
msgstr "%l"

#. type: table
#: original_texis/building.texi:867
msgid "The number of the current source line.  If the current buffer is the GUD buffer, then the current source line is the line that the program stopped in."
msgstr "カレントソース行の番号です。カレントバッファーがGUDバッファーの場合、カレントソース行はプログラムがストップしている行です。"

#. type: item
#: original_texis/building.texi:868
#, no-wrap
msgid "%e"
msgstr "%e"

#. type: table
#: original_texis/building.texi:872
msgid "In transient-mark-mode the text in the region, if it is active.  Otherwise the text of the C lvalue or function-call expression at or adjacent to point."
msgstr "transient-mark-modeでは、リージョンがアクティブの場合はリージョンのテキストです。そうでない場合、ポイント位置またはそれに隣接する位置にあるCのlvalue(左辺値)、または関数呼び出し式です。"

#. type: item
#: original_texis/building.texi:873
#, no-wrap
msgid "%a"
msgstr "%a"

#. type: table
#: original_texis/building.texi:875
msgid "The text of the hexadecimal address at or adjacent to point."
msgstr "ポイント位置またはそれに隣接する位置にある、16進アドレスのテキストです。"

#. type: item
#: original_texis/building.texi:876
#, no-wrap
msgid "%p"
msgstr "%p"

#. type: table
#: original_texis/building.texi:880
msgid "The numeric argument of the called function, as a decimal number.  If the command is used without a numeric argument, @samp{%p} stands for the empty string."
msgstr "呼び出された関数の数引数の10進数です。コマンドに数引数が指定されなかった場合、@samp{%p}は空文字列になります。"

#. type: table
#: original_texis/building.texi:883
msgid "If you don't use @samp{%p} in the command string, the command you define ignores any numeric argument."
msgstr "コマンド文字列に@samp{%p}を使用しない場合、定義したコマンドは数引数を無視します。"

#. type: item
#: original_texis/building.texi:884
#, no-wrap
msgid "%d"
msgstr "%d"

#. type: table
#: original_texis/building.texi:886
msgid "The name of the directory of the current source file."
msgstr "カレントソースファイルのディレクトリー名です。"

#. type: item
#: original_texis/building.texi:887
#, no-wrap
msgid "%c"
msgstr "%c"

#. type: table
#: original_texis/building.texi:890
msgid "Fully qualified class name derived from the expression surrounding point (jdb only)."
msgstr "ポイントを取り囲む式から派生された、完全に記述されたされたclass名(fully qualified class name)です(jdbのみ)。"

#. type: Plain text
#: original_texis/building.texi:900
msgid "The command @kbd{M-x gdb} starts GDB in an IDE-like interface, with specialized buffers for controlling breakpoints, stack frames, and other aspects of the debugger state.  It also provides additional ways to control the debugging session with the mouse, such as clicking in the fringe of a source buffer to set a breakpoint there."
msgstr "コマンド@kbd{M-x gdb}はブレークポイント、スタックフレーム、その他のデバッグ状態の様相を制御するために特化したバッファーで、IDE-likeなインターフェースでGDBを開始します。これは、たとえばマウスソースバッファーのフリンジをクリックすることにより、そこにブレークポイントをセットするなどの、マウスによりデバッグセッションを制御する追加の方法も提供します。"

#. type: vindex
#: original_texis/building.texi:901
#, no-wrap
msgid "gud-gdb-command-name"
msgstr "gud-gdb-command-name"

#. type: Plain text
#: original_texis/building.texi:907
msgid "To run GDB using just the GUD interaction buffer interface, without these additional features, use @kbd{M-x gud-gdb} (@pxref{Starting GUD}).  You must use this if you want to debug multiple programs within one Emacs session, as that is currently unsupported by @kbd{M-x gdb}."
msgstr "これらの追加機能を使わずにGUD interactionバッファーのインターフェースだけを使ってGDBを実行するには、@kbd{M-x gud-gdb} (@ref{Starting GUD}を参照してください)を使用します。これは、(現在のところ@kbd{M-x gdb}ではサポートされていない)1つのEmacsセッションで複数のプログラムをデバッグしたいときだけ使用しなければなりません。"

#. type: Plain text
#: original_texis/building.texi:911
msgid "Internally, @kbd{M-x gdb} informs GDB that its screen size is unlimited; for correct operation, you must not change GDB's screen height and width values during the debugging session."
msgstr "内部的には、@kbd{M-x gdb}はGDBにたいしてスクリーンサイズに制限がないと告げます。正しい操作のために、デバッグセッションの間はGDBのスクリーンの高さと幅の値を変更してはいけません。"

#. type: subsubsection
#: original_texis/building.texi:922 original_texis/building.texi:924
#: original_texis/building.texi:925
#, no-wrap
msgid "GDB User Interface Layout"
msgstr "GDB User Interface Layout"

#. type: menuentry
#: original_texis/building.texi:922
msgid "Control the number of displayed buffers."
msgstr "複数表示されたバッファーの制御。"

#. type: subsubsection
#: original_texis/building.texi:922 original_texis/building.texi:985
#: original_texis/building.texi:986
#, no-wrap
msgid "Source Buffers"
msgstr "Source Buffers"

#. type: menuentry
#: original_texis/building.texi:922
msgid "Use the mouse in the fringe/margin to control your program."
msgstr "プログラムを制御するためにフリンジ・余白でマウスを使う。"

#. type: subsubsection
#: original_texis/building.texi:922 original_texis/building.texi:1038
#: original_texis/building.texi:1039
#, no-wrap
msgid "Breakpoints Buffer"
msgstr "Breakpoints Buffer"

#. type: menuentry
#: original_texis/building.texi:922
msgid "A breakpoint control panel."
msgstr "ブレークポイントのコントロールパネル。"

#. type: subsubsection
#: original_texis/building.texi:922 original_texis/building.texi:1079
#: original_texis/building.texi:1080
#, no-wrap
msgid "Threads Buffer"
msgstr "Threads Buffer"

#. type: menuentry
#: original_texis/building.texi:922
msgid "Displays your threads."
msgstr "スレッドの表示。"

#. type: subsubsection
#: original_texis/building.texi:922 original_texis/building.texi:1155
#: original_texis/building.texi:1156
#, no-wrap
msgid "Stack Buffer"
msgstr "Stack Buffer"

#. type: menuentry
#: original_texis/building.texi:922
msgid "Select a frame from the call stack."
msgstr "callスタックからのフレームの選択。"

#. type: subsubsection
#: original_texis/building.texi:922 original_texis/building.texi:1182
#: original_texis/building.texi:1183
#, no-wrap
msgid "Other GDB Buffers"
msgstr "Other GDB Buffers"

#. type: menuentry
#: original_texis/building.texi:922
msgid "Other buffers for controlling the GDB state."
msgstr "GDBの状態を制御するその他のバッファー。"

#. type: subsubsection
#: original_texis/building.texi:922 original_texis/building.texi:1227
#: original_texis/building.texi:1228
#, no-wrap
msgid "Watch Expressions"
msgstr "Watch Expressions"

#. type: menuentry
#: original_texis/building.texi:922
msgid "Monitor variable values in the speedbar."
msgstr "speedbarで変数の値をモニターする。"

#. type: subsubsection
#: original_texis/building.texi:922 original_texis/building.texi:1294
#: original_texis/building.texi:1295
#, no-wrap
msgid "Multithreaded Debugging"
msgstr "Multithreaded Debugging"

#. type: menuentry
#: original_texis/building.texi:922
msgid "Debugging programs with several threads."
msgstr "複数スレッドのプログラムのデバッグ。"

#. type: cindex
#: original_texis/building.texi:926
#, no-wrap
msgid "GDB User Interface layout"
msgstr "GDB User Interface layout"

#. type: findex
#: original_texis/building.texi:928 original_texis/building.texi:953
#, no-wrap
msgid "gdb-many-windows"
msgstr "gdb-many-windows"

#. type: vindex
#: original_texis/building.texi:929
#, no-wrap
msgid "gdb-show-main"
msgstr "gdb-show-main"

#. type: Plain text
#: original_texis/building.texi:936
msgid "If the variable @code{gdb-many-windows} is @code{nil} (the default), @kbd{M-x gdb} normally displays only the GUD interaction buffer.  However, if the variable @code{gdb-show-main} is also non-@code{nil}, it starts with two windows: one displaying the GUD interaction buffer, and the other showing the source for the @code{main} function of the program you are debugging."
msgstr "変数@code{gdb-many-windows}が@code{nil}(デフォルト)の場合、@kbd{M-x gdb}は通常GUD interactionバッファーだけを表示します。しかし@code{gdb-show-main}が非@code{nil}の場合、2つのウィンドウで開始します。その場合、1つはGUD interactionバッファーを表示して、もう一方はデバッグするプログラムの@code{main}関数のソースを表示します。"

#. type: Plain text
#: original_texis/building.texi:939
msgid "If @code{gdb-many-windows} is non-@code{nil}, then @kbd{M-x gdb} displays the following frame layout:"
msgstr "@code{gdb-many-windows}が非@code{nil}の場合、@kbd{M-x gdb}は以下のフレームレイアウトを表示します。"

#. type: group
#: original_texis/building.texi:949
#, no-wrap
msgid ""
"+--------------------------------+--------------------------------+\n"
"|   GUD interaction buffer       |   Locals/Registers buffer      |\n"
"|--------------------------------+--------------------------------+\n"
"|   Primary Source buffer        |   I/O buffer for debugged pgm  |\n"
"|--------------------------------+--------------------------------+\n"
"|   Stack buffer                 |   Breakpoints/Threads buffer   |\n"
"+--------------------------------+--------------------------------+\n"
msgstr ""
"+--------------------------------+--------------------------------+\n"
"|   GUD interaction buffer       |   Locals/Registers buffer      |\n"
"|--------------------------------+--------------------------------+\n"
"|   Primary Source buffer        |   I/O buffer for debugged pgm  |\n"
"|--------------------------------+--------------------------------+\n"
"|   Stack buffer                 |   Breakpoints/Threads buffer   |\n"
"+--------------------------------+--------------------------------+\n"

#. type: findex
#: original_texis/building.texi:952
#, no-wrap
msgid "gdb-restore-windows"
msgstr "gdb-restore-windows"

#. type: Plain text
#: original_texis/building.texi:958
msgid "If you ever change the window layout, you can restore the many-windows layout by typing @kbd{M-x gdb-restore-windows}.  To toggle between the many windows layout and a simple layout with just the GUD interaction buffer and a source file, type @kbd{M-x gdb-many-windows}."
msgstr "ウィンドウのレイアウトを変更した場合、@kbd{M-x gdb-restore-windows}とタイプして、複数ウィンドウのレイアウトをリストアできます。複数ウィンドウレイアウトと、GUD interactionバッファーとソースファイルだけの単純なレイアウトを切り替えるには、@kbd{M-x gdb-many-windows}とタイプしてください。"

#. type: Plain text
#: original_texis/building.texi:966
msgid "If you have an elaborate window setup, and don't want @code{gdb-many-windows} to disrupt that, it is better to invoke @kbd{M-x gdb} in a separate frame to begin with, then the arrangement of windows on your original frame will not be affected.  A separate frame for GDB sessions can come in especially handy if you work on a text-mode terminal, where the screen estate for windows could be at a premium."
msgstr "ウィンドウを複雑にセットアップをしていて、@code{gdb-many-windows}がそれを混乱させるのを望まない場合は、別のフレーム内で@kbd{M-x gdb}を呼び出すほうがよいでしょう。その場合は、元のフレームのウィンドウのアレンジに影響はありません。テキスト端末で作業する場合は、GDBセッションに別のフレームを使用すれば、各ウィンドウにたいするスクリーン資源が最活用される可能性があるので、特に便利になり得ます。"

#. type: Plain text
#: original_texis/building.texi:974
msgid "You may also specify additional GDB-related buffers to display, either in the same frame or a different one.  Select the buffers you want by typing @kbd{M-x gdb-display-@var{buffertype}-buffer} or @kbd{M-x gdb-frame-@var{buffertype}-buffer}, where @var{buffertype} is the relevant buffer type, such as @samp{breakpoints}.  You can do the same with the menu bar, with the @samp{GDB-Windows} and @samp{GDB-Frames} sub-menus of the @samp{GUD} menu."
msgstr "同じフレームまたは異なるフレームに、GDBに関連した追加のバッファーを表示するように指定できます。@kbd{M-x gdb-display-@var{buffertype}-buffer}または@kbd{M-x gdb-frame-@var{buffertype}-buffer}とタイプして、望むバッファーを選択します。ここで@var{buffertype}は@samp{breakpoints}のような、該当するバッファータイプです。@samp{GUD}メニューの、サブメニュー@samp{GDB-Windows}または@samp{GDB-Frames}により、メニューバーから同じことができます。"

#. type: Plain text
#: original_texis/building.texi:984
msgid "When you finish debugging, kill the GUD interaction buffer with @kbd{C-x k}, which will also kill all the buffers associated with the session.  However you need not do this if, after editing and re-compiling your source code within Emacs, you wish to continue debugging.  When you restart execution, GDB automatically finds the new executable.  Keeping the GUD interaction buffer has the advantage of keeping the shell history as well as GDB's breakpoints.  You do need to check that the breakpoints in recently edited source files are still in the right places."
msgstr "デバッグを終えたら@kbd{C-x k}でGUD interactionバッファーをkillすれば、このセッションでの関連するすべてのバッファーをkillできます。しかしEmacsでソースコードの編集とリコンパイル終えて、さらにデバッグを続けたいときは、これを行う必要はありません。実行を再開すると、GDBは自動的に新しい実行ファイルを見つけます。GUD interactionバッファーを残しておけば、シェルヒストリー、同様にGDBブレークポイントを残すことができる利点があります。最近編集したソースファイルのブレークポイントが、正しい場所にあるかチェックする必要があります。"

#. type: cindex
#: original_texis/building.texi:987
#, no-wrap
msgid "fringes, for debugging"
msgstr "fringes, for debugging"

#. type: item
#: original_texis/building.texi:990
#, no-wrap
msgid "@kbd{mouse-1} (in fringe)"
msgstr "@kbd{mouse-1} (in fringe)"

#. type: table
#: original_texis/building.texi:993
msgid "Set or clear a breakpoint on that line (@code{gdb-mouse-set-clear-breakpoint})."
msgstr "その行のカレントブレークポイントをセット、またはクリアーします(@code{gdb-mouse-set-clear-breakpoint})。"

#. type: item
#: original_texis/building.texi:994
#, no-wrap
msgid "@kbd{C-mouse-1} (in fringe)"
msgstr "@kbd{C-mouse-1} (in fringe)"

#. type: table
#: original_texis/building.texi:997
msgid "Enable or disable a breakpoint on that line (@code{gdb-mouse-toggle-breakpoint-margin})."
msgstr "その行のブレークポイントを有効または無効にします(@code{gdb-mouse-toggle-breakpoint-margin})。"

#. type: item
#: original_texis/building.texi:998
#, no-wrap
msgid "@kbd{mouse-3} (in fringe)"
msgstr "@kbd{mouse-3} (in fringe)"

#. type: table
#: original_texis/building.texi:1000
msgid "Continue execution to that line (@code{gdb-mouse-until})."
msgstr "その行まで実行を継続します(@code{gdb-mouse-until})。"

#. type: item
#: original_texis/building.texi:1001
#, no-wrap
msgid "@kbd{C-mouse-3} (in fringe)"
msgstr "@kbd{C-mouse-3} (in fringe)"

#. type: table
#: original_texis/building.texi:1003
msgid "Jump to that line (@code{gdb-mouse-jump})."
msgstr "その行にジャンプします(@code{gdb-mouse-jump})。"

#. type: Plain text
#: original_texis/building.texi:1011
msgid "On a graphical display, you can click @kbd{mouse-1} in the fringe of a source buffer, to set a breakpoint on that line (@pxref{Fringes}).  A red dot appears in the fringe, where you clicked.  If a breakpoint already exists there, the click removes it.  A @kbd{C-mouse-1} click enables or disables an existing breakpoint; a breakpoint that is disabled, but not unset, is indicated by a gray dot."
msgstr "グラフィカルなディスプレーでは、sourceバッファーのフリンジを@kbd{mouse-1}でクリックして、その行にブレークポイントをセットできます(@ref{Fringes}を参照してください)。クリックした場所に赤いドットが表示されます。すでにそこにブレークポイントが存在する場合、クリックでそれを削除します。既存のブレークポイントを@kbd{C-mouse-1}でクリックすることにより、有効または無効にします。クリアーされておらず無効になったブレークポイントは、グレイのドットで示されます。"

#. type: Plain text
#: original_texis/building.texi:1016
msgid "On a text terminal, or when fringes are disabled, enabled breakpoints are indicated with a @samp{B} character in the left margin of the window.  Disabled breakpoints are indicated with @samp{b}.  (The margin is only displayed if a breakpoint is present.)"
msgstr "テキスト端末またはフリンジが無効な場合、有効なブレークポイントはウィンドウの左端に、@samp{B}という文字で示されます。無効なブレークポイントは@samp{b}で示されます(余白はブレークポイントがあるときだけ表示されます)。"

#. type: Plain text
#: original_texis/building.texi:1028
msgid "A solid arrow in the left fringe of a source buffer indicates the line of the innermost frame where the debugged program has stopped.  A hollow arrow indicates the current execution line of a higher-level frame.  If you drag the arrow in the fringe with @kbd{mouse-1}, that causes execution to advance to the line where you release the button.  Alternatively, you can click @kbd{mouse-3} in the fringe to advance to that line.  You can click @kbd{C-mouse-3} in the fringe to jump to that line without executing the intermediate lines.  This command allows you to go backwards, which can be useful for running through code that has already executed, in order to examine its execution in more detail."
msgstr "sourceバッファーの左フリンジの塗りつぶされた矢印は、デバッグされているプログラムがストップした最内フレームの行を示します。中抜きの矢印はより高いレベルのフレームの現在実行されている行を示します。フリンジの矢印を@kbd{mouse-1}でドラッグすると、ボタンを離した行まで実行が進みます。かわりにフリンジを@kbd{mouse-3}でクリックすることにより、その行まで実行を進めることができます。フリンジを@kbd{C-mouse-3}でクリックすることにより、間にある行を実行せずに、その行にジャンプできます。このコマンドは後方へもジャンプできるので、すでに実行中のコードの実行の詳細を調べるのに便利です。"

#. type: vindex
#: original_texis/building.texi:1029
#, no-wrap
msgid "gdb-mi-decode-strings"
msgstr "gdb-mi-decode-strings"

#. type: Plain text
#: original_texis/building.texi:1037
msgid "If the file names of the source files are shown with octal escapes, set the variable @code{gdb-mi-decode-strings} to the appropriate coding-system, most probably @code{utf-8}.  (This is @code{nil} by default because GDB may emit octal escapes in situations where decoding is undesirable, and also because the program being debugged might use an encoding different from the one used to encode non-ASCII file names on your system.)"
msgstr "ソースファイル名が8進エスケープで表示される場合には、変数@code{gdb-mi-decode-strings}に適切なコーディングシステム(おそらく大抵は@code{utf-8})をセットしてください(GDBはデコードが望まれない状況で8進エスケープを出力するかもしれず、またデバッグされるプログラムが使用するであろうエンコーディングは、あなたのシステム上の非ASCIIエンコードとは異なるかもしれないので、これのデフォルトは@code{nil}になっている)。"

#. type: Plain text
#: original_texis/building.texi:1045
msgid "The GDB Breakpoints buffer shows the breakpoints, watchpoints and catchpoints in the debugger session.  @xref{Breakpoints,,, gdb, The GNU debugger}.  It provides the following commands, which mostly apply to the @dfn{current breakpoint} (the breakpoint which point is on):"
msgstr "GDB Breakpointsバッファーは、デバッガーセッションのブレークポイント(breakpoint)、ウォッチポイント(watchpoint)、キャッチポイント(catchpoint)を表示します。@ref{Breakpoints,,, gdb, The GNU debugger}を参照してください。これは以下のコマンドを提供します。これらのコマンドのほとんどは@dfn{カレントブレークポイント}(ポイントのあるブレークポイント)に適用されます。"

#. type: key{#1}
#: original_texis/building.texi:1047
#, no-wrap
msgid "SPC"
msgstr "SPC"

#. type: kindex
#: original_texis/building.texi:1048
#, no-wrap
msgid "SPC @r{(GDB Breakpoints buffer)}"
msgstr "SPC @r{(GDB Breakpoints buffer)}"

#. type: findex
#: original_texis/building.texi:1049
#, no-wrap
msgid "gdb-toggle-breakpoint"
msgstr "gdb-toggle-breakpoint"

#. type: table
#: original_texis/building.texi:1054
msgid "Enable/disable current breakpoint (@code{gdb-toggle-breakpoint}).  On a graphical display, this changes the color of the dot in the fringe of the source buffer at that line.  The dot is red when the breakpoint is enabled, and gray when it is disabled."
msgstr "カレントブレークポイントを有効または無効にします(@code{gdb-toggle-breakpoint})。グラフィカルなディスプレーでは、これはsourceバッファーのフリンジのドットのカラーを変更します。ドットのカラーは、ブレークポイントが有効なときは赤、無効なときはグレーです。"

#. type: item
#: original_texis/building.texi:1055
#, no-wrap
msgid "D"
msgstr "D"

#. type: kindex
#: original_texis/building.texi:1056
#, no-wrap
msgid "D @r{(GDB Breakpoints buffer)}"
msgstr "D @r{(GDB Breakpoints buffer)}"

#. type: findex
#: original_texis/building.texi:1057
#, no-wrap
msgid "gdb-delete-breakpoint"
msgstr "gdb-delete-breakpoint"

#. type: table
#: original_texis/building.texi:1059
msgid "Delete the current breakpoint (@code{gdb-delete-breakpoint})."
msgstr "カレントブレークポイントを削除します(@code{gdb-delete-breakpoint})。"

#. type: key{#1}
#: original_texis/building.texi:1060
#, no-wrap
msgid "RET"
msgstr "RET"

#. type: kindex
#: original_texis/building.texi:1061
#, no-wrap
msgid "RET @r{(GDB Breakpoints buffer)}"
msgstr "RET @r{(GDB Breakpoints buffer)}"

#. type: findex
#: original_texis/building.texi:1062
#, no-wrap
msgid "gdb-goto-breakpoint"
msgstr "gdb-goto-breakpoint"

#. type: table
#: original_texis/building.texi:1065
msgid "Visit the source line for the current breakpoint (@code{gdb-goto-breakpoint})."
msgstr "カレントブレークポイントのソース行をvisitします(@code{gdb-goto-breakpoint})。"

#. type: item
#: original_texis/building.texi:1066
#, no-wrap
msgid "mouse-2"
msgstr "mouse-2"

#. type: kindex
#: original_texis/building.texi:1067
#, no-wrap
msgid "mouse-2 @r{(GDB Breakpoints buffer)}"
msgstr "mouse-2 @r{(GDB Breakpoints buffer)}"

#. type: table
#: original_texis/building.texi:1070
msgid "Visit the source line for the breakpoint you click on (@code{gdb-goto-breakpoint})."
msgstr "クリックしたブレークポイントのソース行をvisitします(@code{gdb-goto-breakpoint})。"

#. type: vindex
#: original_texis/building.texi:1072
#, no-wrap
msgid "gdb-show-threads-by-default"
msgstr "gdb-show-threads-by-default"

#. type: Plain text
#: original_texis/building.texi:1078
msgid "When @code{gdb-many-windows} is non-@code{nil}, the GDB Breakpoints buffer shares its window with the GDB Threads buffer.  To switch from one to the other click with @kbd{mouse-1} on the relevant button in the header line.  If @code{gdb-show-threads-by-default} is non-@code{nil}, the GDB Threads buffer is the one shown by default."
msgstr "@code{gdb-many-windows}が非@code{nil}の場合、GDB Breakpointsバッファーは、GDB Threadsバッファーとウィンドウを共有します。一方から他方へ切り替えるには、ヘッダー行の関連するボタンを@kbd{mouse-1}でクリックします。@code{gdb-show-threads-by-default}が非@code{nil}の場合、GDB Threadsバッファーがデフォルトとして表示されます。"

#. type: findex
#: original_texis/building.texi:1082
#, no-wrap
msgid "gdb-select-thread"
msgstr "gdb-select-thread"

#. type: Plain text
#: original_texis/building.texi:1089
msgid "The GDB Threads buffer displays a summary of the threads in the debugged program.  @xref{Threads, Threads, Debugging programs with multiple threads, gdb, The GNU debugger}.  To select a thread, move point there and press @key{RET} (@code{gdb-select-thread}), or click on it with @kbd{mouse-2}.  This also displays the associated source buffer, and updates the contents of the other GDB buffers."
msgstr "GDB Threadsバッファーは、デバッグされているプログラムのスレッドのサマリーを表示します。@ref{Threads, Threads, Debugging programs with multiple threads, gdb, The GNU debugger}を参照してください。スレッドを選択するには、ポイントをそこに移動して@key{RET} (@code{gdb-select-thread})を押すか、それを@kbd{mouse-2}でクリックします。これにより、それに関連するsourceバッファーが表示され、他のGDBバッファーの内容も更新されます。"

#. type: Plain text
#: original_texis/building.texi:1092
msgid "You can customize variables in the @code{gdb-buffers} group to select fields included in GDB Threads buffer."
msgstr "GDB Threadsバッファー内に含まれる項目を選択するために、@code{gdb-buffers}グループ配下の変数をカスタマイズできます。"

#. type: vindex
#: original_texis/building.texi:1094 original_texis/building.texi:1095
#, no-wrap
msgid "gdb-thread-buffer-verbose-names"
msgstr "gdb-thread-buffer-verbose-names"

#. type: table
#: original_texis/building.texi:1097
msgid "Show long thread names like @samp{Thread 0x4e2ab70 (LWP 1983)}."
msgstr "@samp{Thread 0x4e2ab70 (LWP 1983)}のような長いスレッド名を表示します。"

#. type: vindex
#: original_texis/building.texi:1098 original_texis/building.texi:1099
#, no-wrap
msgid "gdb-thread-buffer-arguments"
msgstr "gdb-thread-buffer-arguments"

#. type: table
#: original_texis/building.texi:1101
msgid "Show arguments of thread top frames."
msgstr "スレッドのトップフレームの引数を表示します。"

#. type: vindex
#: original_texis/building.texi:1102 original_texis/building.texi:1103
#, no-wrap
msgid "gdb-thread-buffer-locations"
msgstr "gdb-thread-buffer-locations"

#. type: table
#: original_texis/building.texi:1105
msgid "Show file information or library names."
msgstr "ファイル情報またはライブラリー名を表示します。"

#. type: vindex
#: original_texis/building.texi:1106 original_texis/building.texi:1107
#, no-wrap
msgid "gdb-thread-buffer-addresses"
msgstr "gdb-thread-buffer-addresses"

#. type: table
#: original_texis/building.texi:1109
msgid "Show addresses for thread frames in threads buffer."
msgstr "threadバッファーのスレッドフレームのアドレスを表示します。"

#. type: Plain text
#: original_texis/building.texi:1113
msgid "To view information for several threads simultaneously, use the following commands from the GDB Threads buffer."
msgstr "複数のスレッドの情報を同時に閲覧するには、GDB Threadsバッファーの以下のコマンドを使用します。"

#. type: item
#: original_texis/building.texi:1115
#, no-wrap
msgid "d"
msgstr "d"

#. type: kindex
#: original_texis/building.texi:1116
#, no-wrap
msgid "d @r{(GDB threads buffer)}"
msgstr "d @r{(GDB threads buffer)}"

#. type: findex
#: original_texis/building.texi:1117
#, no-wrap
msgid "gdb-display-disassembly-for-thread"
msgstr "gdb-display-disassembly-for-thread"

#. type: table
#: original_texis/building.texi:1120
msgid "Display disassembly buffer for the thread at current line (@code{gdb-display-disassembly-for-thread})."
msgstr "カレント行のスレッドのdisassemblyバッファーを表示します(@code{gdb-display-disassembly-for-thread})。"

#. type: item
#: original_texis/building.texi:1121
#, no-wrap
msgid "f"
msgstr "f"

#. type: kindex
#: original_texis/building.texi:1122
#, no-wrap
msgid "f @r{(GDB threads buffer)}"
msgstr "f @r{(GDB threads buffer)}"

#. type: findex
#: original_texis/building.texi:1123
#, no-wrap
msgid "gdb-display-stack-for-thread"
msgstr "gdb-display-stack-for-thread"

#. type: table
#: original_texis/building.texi:1126
msgid "Display the GDB Stack buffer for the thread at current line (@code{gdb-display-stack-for-thread})."
msgstr "カレント行のスレッドのGDB Stackバッファーを表示します(@code{gdb-display-stack-for-thread})。"

#. type: item
#: original_texis/building.texi:1127
#, no-wrap
msgid "l"
msgstr "l"

#. type: kindex
#: original_texis/building.texi:1128
#, no-wrap
msgid "l @r{(GDB threads buffer)}"
msgstr "l @r{(GDB threads buffer)}"

#. type: findex
#: original_texis/building.texi:1129
#, no-wrap
msgid "gdb-display-locals-for-thread"
msgstr "gdb-display-locals-for-thread"

#. type: table
#: original_texis/building.texi:1132
msgid "Display the GDB Locals buffer for the thread at current line (@code{gdb-display-locals-for-thread})."
msgstr "カレント行のスレッドのGDB Localsバッファーを表示します(@code{gdb-display-locals-for-thread})。"

#. type: item
#: original_texis/building.texi:1133
#, no-wrap
msgid "r"
msgstr "r"

#. type: kindex
#: original_texis/building.texi:1134
#, no-wrap
msgid "r @r{(GDB threads buffer)}"
msgstr "r @r{(GDB threads buffer)}"

#. type: findex
#: original_texis/building.texi:1135
#, no-wrap
msgid "gdb-display-registers-for-thread"
msgstr "gdb-display-registers-for-thread"

#. type: table
#: original_texis/building.texi:1138
msgid "Display the GDB Registers buffer for the thread at current line (@code{gdb-display-registers-for-thread})."
msgstr "カレント行のスレッドのGDB Registersバッファーを表示します(@code{gdb-display-registers-for-thread})。"

#. type: Plain text
#: original_texis/building.texi:1143
msgid "Their upper-case counterparts, @kbd{D}, @kbd{F} ,@kbd{L} and @kbd{R}, display the corresponding buffer in a new frame."
msgstr "これらのコマンドの大文字@kbd{D}、@kbd{F}、@kbd{L}、@kbd{R}は、対応するバッファーを新しいフレームに表示します。"

#. type: Plain text
#: original_texis/building.texi:1150
msgid "When you create a buffer showing information about some specific thread, it becomes bound to that thread and keeps showing actual information while you debug your program.  The mode indicator for each GDB buffer shows the number of the thread whose information that buffer displays.  The thread number is also included in the name of each bound buffer."
msgstr "特定のスレッドについての情報を表示するバッファーを作成した場合、それはそのスレッドにバインドされて、プログラムをデバッグする間、情報を表示し続けます。各GDBバッファーのモードインジケーターには、バッファーに情報が表示されているスレッドの番号が表示されます。スレッドの番号はバインドされたバッファーのバッファー名にも含まれます。"

#. type: Plain text
#: original_texis/building.texi:1154
msgid "Further commands are available in the GDB Threads buffer which depend on the mode of GDB that is used for controlling execution of your program.  @xref{Multithreaded Debugging}."
msgstr "GDB Threadsバッファーでは、さらに他のコマンドも利用可能で、それはプログラムの実行を制御するのに使われるGDBのモードに依存します。@ref{Multithreaded Debugging}を参照してください。"

#. type: Plain text
#: original_texis/building.texi:1162
msgid "The GDB Stack buffer displays a @dfn{call stack}, with one line for each of the nested subroutine calls (@dfn{stack frames}) in the debugger session.  @xref{Backtrace,, Backtraces, gdb, The GNU debugger}."
msgstr "GDB Stackバッファーは、@dfn{コールスタック(call stack)}を表示します。これは、1行がデバッガーセッションでのネストされたサブルーチン呼び出し(@dfn{stack frames: スタックフレーム})にそれぞれ対応します。@ref{Backtrace,, Backtraces, gdb, The GNU debugger}を参照してください。"

#. type: findex
#: original_texis/building.texi:1163
#, no-wrap
msgid "gdb-frames-select"
msgstr "gdb-frames-select"

#. type: Plain text
#: original_texis/building.texi:1170
msgid "On graphical displays, the selected stack frame is indicated by an arrow in the fringe.  On text terminals, or when fringes are disabled, the selected stack frame is displayed in reverse contrast.  To select a stack frame, move point in its line and type @key{RET} (@code{gdb-frames-select}), or click @kbd{mouse-2} on it.  Doing so also updates the Locals buffer"
msgstr "グラフィカルなディスプレーでは、選択されたスタックフレームは、フリンジの矢印で示されます。テキスト端末、またはフリンジが無効な場合、選択されたスタックフレームは反転して表示されます。スタックフレームを選択するには、ポイントをその行に移動して@key{RET} (@code{gdb-frames-select})とタイプするか、それを@kbd{mouse-2}でクリックします。これを行うことにより、Localsバッファーも更新されます"

#. type: ifnottex
#: original_texis/building.texi:1172
msgid "(@pxref{Other GDB Buffers})."
msgstr "(@ref{Other GDB Buffers}を参照してください)。"

#. type: iftex
#: original_texis/building.texi:1175
msgid "(described in the next section)."
msgstr "(次のセクションで説明します)。"

#. type: vindex
#: original_texis/building.texi:1177
#, no-wrap
msgid "gdb-stack-buffer-addresses"
msgstr "gdb-stack-buffer-addresses"

#. type: Plain text
#: original_texis/building.texi:1181
msgid "If you want the frame address to be shown each stack frame, customize the variable @code{gdb-stack-buffer-addresses} to a non-@code{nil} value."
msgstr "各スタックフレームのフレームアドレスを表示したい場合は、変数@code{gdb-stack-buffer-addresses}を非@code{nil}値にカスタマイズしてください。"

#. type: item
#: original_texis/building.texi:1186
#, no-wrap
msgid "Locals Buffer"
msgstr "Localsバッファー"

#. type: table
#: original_texis/building.texi:1191
msgid "This buffer displays the values of local variables of the current frame for simple data types (@pxref{Frame Info, Frame Info, Information on a frame, gdb, The GNU debugger}).  Press @key{RET} or click @kbd{mouse-2} on the value if you want to edit it."
msgstr "このバッファーは、カレントフレームのローカル変数の値を、簡単なデータ型で表示します(@ref{Frame Info, Frame Info, Information on a frame, gdb, The GNU debugger}を参照してください)。値を編集したいときは、そこで@key{RET}を押すか、@kbd{mouse-2}でクリックしてください。"

#. type: table
#: original_texis/building.texi:1197
msgid "Arrays and structures display their type only.  With GDB 6.4 or later, you can examine the value of the local variable at point by typing @key{RET}, or with a @kbd{mouse-2} click.  With earlier versions of GDB, use @key{RET} or @kbd{mouse-2} on the type description (@samp{[struct/union]} or @samp{[array]}).  @xref{Watch Expressions}."
msgstr "配列と構造体については、その型だけが表示されます。GDB 6.4以降では、ポイント位置で@key{RET}をタイプ、または@kbd{mouse-2}でクリックすることにより、ローカル変数の値を調べることができます。それより前のバージョンのGDBでは、型の説明(@samp{[struct/union]}または@samp{[array]})にたいして、@key{RET}または@kbd{mouse-2}を使用します。@ref{Watch Expressions}を参照してください。"

#. type: item
#: original_texis/building.texi:1198
#, no-wrap
msgid "Registers Buffer"
msgstr "Registersバッファー"

#. type: findex
#: original_texis/building.texi:1199
#, no-wrap
msgid "toggle-gdb-all-registers"
msgstr "toggle-gdb-all-registers"

#. type: table
#: original_texis/building.texi:1205
msgid "This buffer displays the values held by the registers (@pxref{Registers,,, gdb, The GNU debugger}).  Press @key{RET} or click @kbd{mouse-2} on a register if you want to edit its value.  With GDB 6.4 or later, recently changed register values display with @code{font-lock-warning-face}."
msgstr "このバッファーは、レジスターに保持されている値を表示します(@ref{Registers,,, gdb, The GNU debugger}を参照してください)。値を編集したいときは、そのレジスターで@key{RET}を押すか、@kbd{mouse-2}をクリックします。GDB6.4以降では、最近変化したレジスター値は、@code{font-lock-warning-face}で表示されます。"

#. type: item
#: original_texis/building.texi:1206
#, no-wrap
msgid "Assembler Buffer"
msgstr "Assemblerバッファー"

#. type: table
#: original_texis/building.texi:1211
msgid "The assembler buffer displays the current frame as machine code.  An arrow points to the current instruction, and you can set and remove breakpoints as in a source buffer.  Breakpoint icons also appear in the fringe or margin."
msgstr "assemblerバッファーは、カレントフレームをマシン語コードで表示します。矢印はカレント命令を指し、sourceバッファーのようにブレークポイントのセットと削除ができます。ブレークポイントのアイコンも、フリンジまたは余白に表示されます。"

#. type: item
#: original_texis/building.texi:1212
#, no-wrap
msgid "Memory Buffer"
msgstr "Memoryバッファー"

#. type: table
#: original_texis/building.texi:1220
msgid "The memory buffer lets you examine sections of program memory (@pxref{Memory, Memory, Examining memory, gdb, The GNU debugger}).  Click @kbd{mouse-1} on the appropriate part of the header line to change the starting address or number of data items that the buffer displays.  Alternatively, use @kbd{S} or @kbd{N} respectively.  Click @kbd{mouse-3} on the header line to select the display format or unit size for these data items."
msgstr "memoryバッファーは、プログラムのメモリーセクションを調べるためのバッファーです(@ref{Memory, Memory, Examining memory, gdb, The GNU debugger}を参照してください)。ヘッダー行の適切な箇所を@kbd{mouse-1}でクリックすることにより、そのバッファーが表示するメモリーの開始アドレス、またはデータアイテムの数が変化します(または@kbd{S}および@kbd{N}を使用)。ヘッダー行を@kbd{mouse-3}でクリックすることにより、データアイテムのフォーマット、またはユニットサイズのどちらを表示するか選択します。"

#. type: Plain text
#: original_texis/building.texi:1226
msgid "When @code{gdb-many-windows} is non-@code{nil}, the locals buffer shares its window with the registers buffer, just like breakpoints and threads buffers.  To switch from one to the other, click with @kbd{mouse-1} on the relevant button in the header line."
msgstr "@code{gdb-many-windows}が非@code{nil}の場合、breakpointsバッファーとthreadsバッファーがウィンドウを共有するように、localsバッファーとregistersバッファーもウィンドウを共有します。一方から他方へ切り替えるには、ヘッダー行の関連するボタンを@kbd{mouse-1}でクリックしてください。"

#. type: cindex
#: original_texis/building.texi:1229
#, no-wrap
msgid "Watching expressions in GDB"
msgstr "Watching expressions in GDB"

#. type: findex
#: original_texis/building.texi:1231
#, no-wrap
msgid "gud-watch"
msgstr "gud-watch"

#. type: kindex
#: original_texis/building.texi:1232
#, no-wrap
msgid "C-x C-a C-w @r{(GUD)}"
msgstr "C-x C-a C-w @r{(GUD)}"

#. type: Plain text
#: original_texis/building.texi:1238
msgid "If you want to see how a variable changes each time your program stops, move point into the variable name and click on the watch icon in the tool bar (@code{gud-watch}) or type @kbd{C-x C-a C-w}.  If you specify a prefix argument, you can enter the variable name in the minibuffer."
msgstr "プログラムを停止するたびに、変数がどのように変化するか見たいときは、ポイントを変数名に移動して、ツールバーのウォッチアイコンをクリック(@code{gud-watch})するか、@kbd{C-x C-a C-w}とタイプします。プレフィクス引数を指定した場合、変数名をミニバッファーで入力することができます。"

#. type: Plain text
#: original_texis/building.texi:1248
msgid "Each watch expression is displayed in the speedbar (@pxref{Speedbar}).  Complex data types, such as arrays, structures and unions are represented in a tree format.  Leaves and simple data types show the name of the expression and its value and, when the speedbar frame is selected, display the type as a tooltip.  Higher levels show the name, type and address value for pointers and just the name and type otherwise.  Root expressions also display the frame address as a tooltip to help identify the frame in which they were defined."
msgstr "各ウォッチ式は、speedbarに表示されます(@ref{Speedbar}を参照してください)。配列や、構造体、共有体のような複雑なデータ型はツリー形式で表示されます。ツリーの子ノード、および単純なデータ型では、式の名前とその値が表示され、speedbarフレームが選択されたときは型がツールチップで表示されます。それより高いレベルでは名前、型、ポインターのアドレス値、そうでない場合は名前と型だけが表示されます。ルート式では、それらがどこで定義されているかを識別するために、ツールチップでフレームアドレスも表示されます"

#. type: Plain text
#: original_texis/building.texi:1254
msgid "To expand or contract a complex data type, click @kbd{mouse-2} or press @key{SPC} on the tag to the left of the expression.  Emacs asks for confirmation before expanding the expression if its number of immediate children exceeds the value of the variable @code{gdb-max-children}."
msgstr "複雑なデータ型を展開または折り畳むには、式の左のタグを@kbd{mouse-2}をクリックするか@key{SPC}を押します。式の子にあたるデータの数が、変数@code{gdb-max-children}の値を超える場合、Emacsは式を展開する前に確認を求めます。"

#. type: kindex
#: original_texis/building.texi:1255
#, no-wrap
msgid "D @r{(GDB speedbar)}"
msgstr "D @r{(GDB speedbar)}"

#. type: findex
#: original_texis/building.texi:1256
#, no-wrap
msgid "gdb-var-delete"
msgstr "gdb-var-delete"

#. type: Plain text
#: original_texis/building.texi:1259
msgid "To delete a complex watch expression, move point to the root expression in the speedbar and type @kbd{D} (@code{gdb-var-delete})."
msgstr "複雑なウォッチ式を削除するには、speedbarのルート式にポイントを移動して、@kbd{D} (@code{gdb-var-delete})とタイプしてください。"

#. type: kindex
#: original_texis/building.texi:1260
#, no-wrap
msgid "RET @r{(GDB speedbar)}"
msgstr "RET @r{(GDB speedbar)}"

#. type: findex
#: original_texis/building.texi:1261
#, no-wrap
msgid "gdb-edit-value"
msgstr "gdb-edit-value"

#. type: Plain text
#: original_texis/building.texi:1266
msgid "To edit a variable with a simple data type, or a simple element of a complex data type, move point there in the speedbar and type @key{RET} (@code{gdb-edit-value}).  Or you can click @kbd{mouse-2} on a value to edit it.  Either way, this reads the new value using the minibuffer."
msgstr "単純なデータ型の変数、または複雑なデータ型の単純な要素を編集するには、speedbarのその箇所にポイントを移動して、@key{RET} (@code{gdb-edit-value})とタイプするか、値を@kbd{mouse-2}でクリックして、それを編集します。どちらの方法も、ミニバッファーを使って新しい値を読み取ります。"

#. type: vindex
#: original_texis/building.texi:1267
#, no-wrap
msgid "gdb-show-changed-values"
msgstr "gdb-show-changed-values"

#. type: Plain text
#: original_texis/building.texi:1274
msgid "If you set the variable @code{gdb-show-changed-values} to non-@code{nil} (the default value), Emacs uses @code{font-lock-warning-face} to highlight values that have recently changed and @code{shadow} face to make variables which have gone out of scope less noticeable.  When a variable goes out of scope you can't edit its value."
msgstr "変数@code{gdb-show-changed-values}を非@code{nil}値(デフォルト)にセットした場合、Emacsは最近変化した値を@code{font-lock-warning-face}でハイライトし、スコープから外れた変数は目立たない@code{shadow}フェイスで表示します。変数がスコープから外れた場合、値を変更することはできません。"

#. type: vindex
#: original_texis/building.texi:1275
#, no-wrap
msgid "gdb-delete-out-of-scope"
msgstr "gdb-delete-out-of-scope"

#. type: Plain text
#: original_texis/building.texi:1281
msgid "If the variable @code{gdb-delete-out-of-scope} is non-@code{nil} (the default value), Emacs automatically deletes watch expressions which go out of scope.  Sometimes, when your program re-enters the same function many times, it may be useful to set this value to @code{nil} so that you don't need to recreate the watch expression."
msgstr "変数@code{gdb-delete-out-of-scope}が非@code{nil}(デフォルト)の場合、Emacsはスコープから外れたときウォッチ式を自動的に削除します。この変数を@code{nil}にしておけば、プログラムが同じ関数に複数回再入したとき、新たにウォッチ式を作成しなくてよいので便利かもしれません。"

#. type: vindex
#: original_texis/building.texi:1282
#, no-wrap
msgid "gdb-use-colon-colon-notation"
msgstr "gdb-use-colon-colon-notation"

#. type: Plain text
#: original_texis/building.texi:1287
msgid "If the variable @code{gdb-use-colon-colon-notation} is non-@code{nil}, Emacs uses the @samp{@var{function}::@var{variable}} format.  This allows the user to display watch expressions which share the same variable name.  The default value is @code{nil}."
msgstr "変数@code{gdb-use-colon-colon-notation}が非@code{nil}の場合、Emacsは@samp{@var{function}::@var{variable}}というフォーマットを使います。これにより同じ変数名を共有するウォッチ式を表示することができます。デフォルト値は@code{nil}です。"

#. type: vindex
#: original_texis/building.texi:1288
#, no-wrap
msgid "gdb-speedbar-auto-raise"
msgstr "gdb-speedbar-auto-raise"

#. type: Plain text
#: original_texis/building.texi:1293
msgid "To automatically raise the speedbar every time the display of watch expressions updates, set @code{gdb-speedbar-auto-raise} to non-@code{nil}.  This can be useful if you are debugging with a full screen Emacs frame."
msgstr "ウォッチ式の表示が更新されるたびに、自動的にspeedbarを前に表示するには、@code{gdb-speedbar-auto-raise}を非@code{nil}にセットします。これはEmacsフレームを全画面表示にしてデバッグしているとき便利です。"

#. type: cindex
#: original_texis/building.texi:1296
#, no-wrap
msgid "Multithreaded debugging in GDB"
msgstr "Multithreaded debugging in GDB"

#. type: cindex
#: original_texis/building.texi:1297
#, no-wrap
msgid "Non-stop debugging in GDB"
msgstr "Non-stop debugging in GDB"

#. type: Plain text
#: original_texis/building.texi:1308
msgid "In GDB's @dfn{all-stop mode}, whenever your program stops, all execution threads stop.  Likewise, whenever you restart the program, all threads start executing.  @xref{All-Stop Mode, , All-Stop Mode, gdb, The GNU debugger}.  For some multi-threaded targets, GDB supports a further mode of operation, called @dfn{non-stop mode}, in which you can examine stopped program threads in the debugger while other threads continue to execute freely.  @xref{Non-Stop Mode, , Non-Stop Mode, gdb, The GNU debugger}.  Versions of GDB prior to 7.0 do not support non-stop mode, and it does not work on all targets."
msgstr "GDBの@dfn{all-stop mode}では、プログラムが停止すると、すべてのスレッドの実行が停止します。同様に、プログラムを再開すると、すべてのスレッドが実行を開始します。@ref{All-Stop Mode, , All-Stop Mode, gdb, The GNU debugger}を参照してください。マルチスレッド化されたいくつかのターゲットにたいして、GDBはこれを超える操作のためのモードをサポートします。これは@dfn{non-stop mode}と呼ばれ、他のスレッドが自由に実行を継続している間に、デバッガーで停止したプログラムのスレッドを調べることができます。@ref{Non-Stop Mode, , Non-Stop Mode, gdb, The GNU debugger}を参照してください。GDBのバージョン7.0以前では、non-stop modeはサポートされておらず、すべてのターゲットにたいしては機能しません。"

#. type: vindex
#: original_texis/building.texi:1309
#, no-wrap
msgid "gdb-non-stop-setting"
msgstr "gdb-non-stop-setting"

#. type: Plain text
#: original_texis/building.texi:1317
msgid "The variable @code{gdb-non-stop-setting} determines whether Emacs runs GDB in all-stop mode or non-stop mode.  The default is @code{t}, which means it tries to use non-stop mode if that is available.  If you change the value to @code{nil}, or if non-stop mode is unavailable, Emacs runs GDB in all-stop mode.  The variable takes effect when Emacs begins a debugging session; if you change its value, you should restart any active debugging session."
msgstr "変数@code{gdb-non-stop-setting}は、EmacsがGDBをall-stop modeとnon-stop modeのどちらで実行するかを決定します。デフォルトは@code{t}で、これは利用可能な場合はnon-stop modeを使うことを意味します。値を@code{nil}に変更した場合、またはnon-stop modeが利用不可の場合、EmacsはGDBをall-stop modeで実行します。この変数はEmacsがデバッグセッションを開始したときに効果をもちます。値を変更した場合、アクティブなデバッグセッションを再起動する必要があります。"

#. type: vindex
#: original_texis/building.texi:1318
#, no-wrap
msgid "gdb-switch-when-another-stopped"
msgstr "gdb-switch-when-another-stopped"

#. type: Plain text
#: original_texis/building.texi:1323
msgid "When a thread stops in non-stop mode, Emacs usually switches to that thread.  If you don't want Emacs to do this switch if another stopped thread is already selected, change the variable @code{gdb-switch-when-another-stopped} to @code{nil}."
msgstr "non-stop modeモードでスレッドが停止すると、通常Emacsはそのスレッドに切り替えます。すでに選択したスレッドから停止した他のスレッドへの切り替えを行わないようにするには、変数@code{gdb-switch-when-another-stopped}を@code{nil}に変更してください。"

#. type: vindex
#: original_texis/building.texi:1324
#, no-wrap
msgid "gdb-switch-reasons"
msgstr "gdb-switch-reasons"

#. type: Plain text
#: original_texis/building.texi:1329
msgid "Emacs can decide whether or not to switch to the stopped thread depending on the reason which caused the stop.  Customize the variable @code{gdb-switch-reasons} to select the stop reasons which will cause a thread switch."
msgstr "Emacsが停止したスレッドに切り替えるかどうかの決定は、そのスレッドが停止した理由に依存します。変数@code{gdb-switch-reasons}をカスタマイズすることにより、スレッドの切り替えを行う停止理由を選択できます。"

#. type: vindex
#: original_texis/building.texi:1330
#, no-wrap
msgid "gdb-stopped-functions"
msgstr "gdb-stopped-functions"

#. type: Plain text
#: original_texis/building.texi:1333
msgid "The variable @code{gdb-stopped-functions} allows you to execute your functions whenever some thread stops."
msgstr "変数@code{gdb-stopped-functions}には、あるスレッドが停止したときに実行する関数を指定できます。"

#. type: Plain text
#: original_texis/building.texi:1336
msgid "In non-stop mode, you can switch between different modes for GUD execution control commands."
msgstr "non-stop modeでは、GUDの実行制御コマンドのための異なるモードを切り替えることができます。"

#. type: vindex
#: original_texis/building.texi:1337
#, no-wrap
msgid "gdb-gud-control-all-threads"
msgstr "gdb-gud-control-all-threads"

#. type: item
#: original_texis/building.texi:1339
#, no-wrap
msgid "Non-stop/A"
msgstr "Non-stop/A"

#. type: table
#: original_texis/building.texi:1348
msgid "When @code{gdb-gud-control-all-threads} is @code{t} (the default value), interruption and continuation commands apply to all threads, so you can halt or continue all your threads with one command using @code{gud-stop-subjob} and @code{gud-cont}, respectively.  The @samp{Go} button is shown on the tool bar when at least one thread is stopped, whereas @samp{Stop} button is shown when at least one thread is running."
msgstr "@code{gdb-gud-control-all-threads}が@code{t}(デフォルト)の場合、中断および継続のためのコマンドはすべてのスレッドに適用されるので、@code{gud-stop-subjob}または@code{gud-cont}の1コマンドで、すべてのスレッドを停止または継続できます。少なくとも1つのスレッドが停止している場合、ツールバーに@samp{Go}ボタンが表示されます。また、少なくとも1つのスレッドが実行中の場合、@samp{Stop}ボタンが表示されます。"

#. type: item
#: original_texis/building.texi:1349
#, no-wrap
msgid "Non-stop/T"
msgstr "Non-stop/T"

#. type: table
#: original_texis/building.texi:1355
msgid "When @code{gdb-gud-control-all-threads} is @code{nil}, only the current thread is stopped/continued.  @samp{Go} and @samp{Stop} buttons on the GUD tool bar are shown depending on the state of current thread."
msgstr "@code{gdb-gud-control-all-threads}が@code{nil}の場合、カレントスレッドだけを停止または継続します。GUDツールバーの@samp{Go}および@samp{Stop}のボタンの表示は、カレントスレッドの状態に依存します。"

#. type: Plain text
#: original_texis/building.texi:1359
msgid "You can change the current value of @code{gdb-gud-control-all-threads} from the tool bar or from @samp{GUD->GDB-MI} menu."
msgstr "@code{gdb-gud-control-all-threads}のカレント値は、ツールバーまたは@samp{GUD->GDB-MI}メニューで変更できます。"

#. type: Plain text
#: original_texis/building.texi:1361
msgid "Stepping commands always apply to the current thread."
msgstr "ステップコマンドは常にカレントスレッドに適用されます。"

#. type: Plain text
#: original_texis/building.texi:1366
msgid "In non-stop mode, you can interrupt/continue your threads without selecting them.  Hitting @kbd{i} in threads buffer interrupts thread under point, @kbd{c} continues it, @kbd{s} steps through.  More such commands may be added in the future."
msgstr "non-stop modeでは、スレッドを選択せずにスレッドを中断または継続できます。threadsバッファーで、ポイント位置のスレッドにたいして@kbd{i}をタイプすると中断、@kbd{c}で継続、@kbd{s}でステップ実行します。今後さらにそのようなコマンドが追加されるかもしれません。"

#. type: Plain text
#: original_texis/building.texi:1371
msgid "Note that when you interrupt a thread, it stops with the @samp{signal received} reason.  If that reason is included in your @code{gdb-switch-reasons} (it is by default), Emacs will switch to that thread."
msgstr "スレッドを中断した場合、停止理由は@samp{signal received}になることに注意してください。この理由が@code{gdb-switch-reasons}に含まれている場合(デフォルトでは含まれています)、Emacsはそのスレッドに切り替えます。"

#. type: section
#: original_texis/building.texi:1373
#, no-wrap
msgid "Executing Lisp Expressions"
msgstr "Lisp式の実行"

#. type: Plain text
#: original_texis/building.texi:1379
msgid "Emacs has major modes for several variants of Lisp.  They use the same editing commands as other programming language modes (@pxref{Programs}).  In addition, they provide special commands for executing Lisp expressions."
msgstr "Emacsには、Lispのいくつかの変種のためのメジャーモードがあります。これらは他のプログラミング言語のモードと同じ編集コマンドを使用します(@ref{Programs}を参照してください)。それに加えて、Lisp式を実行するための特別なコマンドを提供します。"

#. type: cindex
#: original_texis/building.texi:1381 original_texis/building.texi:1517
#, no-wrap
msgid "Emacs Lisp mode"
msgstr "Emacs Lispモード"

#. type: table
#: original_texis/building.texi:1384
msgid "The mode for editing Emacs Lisp source files.  It defines @kbd{C-M-x} to evaluate the current top-level Lisp expression.  @xref{Lisp Eval}."
msgstr "Emacs Lispのソースファイルを編集するためのモードです。このモードはカレントのトップレベルのLisp式を評価する@kbd{C-M-x}を定義します。@ref{Lisp Eval}を参照してください。"

#. type: item
#: original_texis/building.texi:1385
#, no-wrap
msgid "Lisp Interaction mode"
msgstr "Lisp Interactionモード"

#. type: table
#: original_texis/building.texi:1389
msgid "The mode for an interactive Emacs Lisp session.  It defines @kbd{C-j} to evaluate the expression before point and insert its value in the buffer.  @xref{Lisp Interaction}."
msgstr "Emacs Lispとの対話的なセッションのためのモードです。このモードはポイントの前の式を評価して、その値をバッファーに挿入する@kbd{C-j}を定義します。@ref{Lisp Interaction}を参照してください。"

#. type: cindex
#: original_texis/building.texi:1390 original_texis/building.texi:1662
#, no-wrap
msgid "Lisp mode"
msgstr "Lispモード"

#. type: table
#: original_texis/building.texi:1394
msgid "The mode for editing source files of programs that run in Lisps other than Emacs Lisp.  It defines @kbd{C-M-x} to evaluate the current top-level expression in an external Lisp.  @xref{External Lisp}."
msgstr "Emacs Lispではない、他のLispを実行するプログラムのソースファイルを編集するためのモードです。このモードは、カレントのトップレベルの式を外部のLispで評価する@kbd{C-M-x}を定義します。@ref{External Lisp}を参照してください。"

#. type: item
#: original_texis/building.texi:1395
#, no-wrap
msgid "Inferior Lisp mode"
msgstr "Inferior Lispモード"

#. type: table
#: original_texis/building.texi:1398
msgid "The mode for an interactive session with an external Lisp which is being run as a subprocess (or @dfn{inferior process}) of Emacs."
msgstr "Emacsのサブプロセス(または@dfn{inferior process: 下位プロセス})として実行される外部Lispと、対話的にセッションするためのモードです。"

#. type: ifnottex
#: original_texis/building.texi:1400
msgid "@xref{External Lisp}."
msgstr "@ref{External Lisp}を参照してください。"

#. type: cindex
#: original_texis/building.texi:1402 original_texis/building.texi:1703
#, no-wrap
msgid "Scheme mode"
msgstr "Schemeモード"

#. type: table
#: original_texis/building.texi:1404
msgid "Like Lisp mode, but for Scheme programs."
msgstr "Lispモードと同様ですが、Schemeプログラムのためのモードです。"

#. type: item
#: original_texis/building.texi:1405
#, no-wrap
msgid "Inferior Scheme mode"
msgstr "Inferior Schemeモード"

#. type: table
#: original_texis/building.texi:1407
msgid "Like Inferior Lisp mode, but for Scheme."
msgstr "Inferior Lispモードと同様ですが、Schemeのためのモードです。"

#. type: node
#: original_texis/building.texi:1409
#, no-wrap
msgid "Lisp Libraries"
msgstr "Lisp Libraries"

#. type: section
#: original_texis/building.texi:1410
#, no-wrap
msgid "Libraries of Lisp Code for Emacs"
msgstr "EmacsのためのLispコードによるライブラリー"

#. type: cindex
#: original_texis/building.texi:1411
#, no-wrap
msgid "libraries"
msgstr "libraries"

#. type: cindex
#: original_texis/building.texi:1412
#, no-wrap
msgid "loading Lisp code"
msgstr "loading Lisp code"

#. type: Plain text
#: original_texis/building.texi:1416
msgid "Emacs Lisp code is stored in files whose names conventionally end in @file{.el}.  Such files are automatically visited in Emacs Lisp mode."
msgstr "Emacs Lispのコードは、慣習として@file{.el}で終わる名前のファイルに保存されます。このようなファイルは、自動的にEmacs Lispモードでvisitされます。"

#. type: cindex
#: original_texis/building.texi:1417
#, no-wrap
msgid "byte code"
msgstr "byte code"

#. type: Plain text
#: original_texis/building.texi:1424
msgid "Emacs Lisp code can be compiled into byte-code, which loads faster, takes up less space, and executes faster.  By convention, compiled Emacs Lisp code goes in a separate file whose name ends in @samp{.elc}.  For example, the compiled code for @file{foo.el} goes in @file{foo.elc}.  @xref{Byte Compilation,, Byte Compilation, elisp, the Emacs Lisp Reference Manual}."
msgstr "Emacs Lispのコードは、loadが速く省スペースで、実行も速いバイトコードにコンパイルできます。慣習により、コンパイルされたEmacs Lispのコードは@samp{.elc}で終わる名前の別のファイルに保存されます。たとえば、@file{foo.el}をコンパイルしたコードは@file{foo.elc}になります。@ref{Byte Compilation,, Byte Compilation, elisp, the Emacs Lisp Reference Manual}を参照してください。"

#. type: findex
#: original_texis/building.texi:1425
#, no-wrap
msgid "load-file"
msgstr "load-file"

#. type: Plain text
#: original_texis/building.texi:1431
msgid "To @dfn{load} an Emacs Lisp file, type @kbd{M-x load-file}.  This command reads a file name using the minibuffer, and executes the contents of that file as Emacs Lisp code.  It is not necessary to visit the file first; this command reads the file directly from disk, not from an existing Emacs buffer."
msgstr "Emacs Lispファイルを@dfn{ロード(load)}するには、@kbd{M-x load-file}とタイプします。このコマンドはミニバッファーを使ってファイル名を読み取り、そのファイル内容をEmacs Lispコードとして実行します。最初にファイルをvisitしておく必要はありません。このコマンドは、既存のEmacsバッファーからではなく、ディスクからファイルを直接読み込みます。"

#. type: findex
#: original_texis/building.texi:1432
#, no-wrap
msgid "load"
msgstr "load"

#. type: findex
#: original_texis/building.texi:1433
#, no-wrap
msgid "load-library"
msgstr "load-library"

#. type: vindex
#: original_texis/building.texi:1434
#, no-wrap
msgid "load-prefer-newer"
msgstr "load-prefer-newer"

#. type: cindex
#: original_texis/building.texi:1435
#, no-wrap
msgid "load path for Emacs Lisp"
msgstr "load path for Emacs Lisp"

#. type: Plain text
#: original_texis/building.texi:1455
msgid "If an Emacs Lisp file is installed in the Emacs Lisp @dfn{load path} (defined below), you can load it by typing @kbd{M-x load-library}, instead of using @kbd{M-x load-file}.  The @kbd{M-x load-library} command prompts for a @dfn{library name} rather than a file name; it searches through each directory in the Emacs Lisp load path, trying to find a file matching that library name.  If the library name is @samp{@var{foo}}, it tries looking for files named @file{@var{foo}.elc}, @file{@var{foo}.el}, and @file{@var{foo}}.  The default behavior is to load the first file found.  This command prefers @file{.elc} files over @file{.el} files because compiled files load and run faster.  If it finds that @file{@var{lib}.el} is newer than @file{@var{lib}.elc}, it issues a warning, in case someone made changes to the @file{.el} file and forgot to recompile it, but loads the @file{.elc} file anyway.  (Due to this behavior, you can save unfinished edits to Emacs Lisp source files, and not recompile until your changes are ready for use.)  If you set the option @code{load-prefer-newer} to a non-@code{nil} value, however, then rather than the procedure described above, Emacs loads whichever version of the file is newest."
msgstr "Emacs Lispファイルが、Emacs Lispの@dfn{ロードパス(load path: 以下で定義)}にインストールされている場合、@kbd{M-x load-file}ではなく@kbd{M-x load-library}とタイプしてロードできます。@kbd{M-x load-library}コマンドは、ファイル名ではなく@dfn{ライブラリー名(library name)}の入力を求めます。これはEmacs Lispのロードパスの各ディレクトリーを検索して、そのライブラリー名にマッチするファイルを見つけようと試みます。ライブラリー名が@samp{@var{foo}}の場合、ファイル名@file{@var{foo}.elc}、@file{@var{foo}.el}、@file{@var{foo}}を見つけようと試みます。デフォルトの動作では、最初に見つかったファイルをロードします。このコマンドは@file{.el}より@file{.elc}を優先します。それはコンパイルされたファイルの方が、ロードと実行が速いからです。@file{@var{lib}.el}が@file{@var{lib}.elc}より新しい場合、警告を発します。この場合、誰かが@file{.el}を変更したもののリコンパイルを忘れたようだが、ともかく@file{.elc}をロードする、という警告です(この振る舞いにより、編集が終わっておらず、まだリコンパイルする準備ができていないEmacs Lispのソースファイルを保存することができます)。しかしオプション@code{load-prefer-newer}を非@code{nil}値にセットした場合、上記の手順ではなく、Emacsは新しいファイルのバージョンをロードします。"

#. type: Plain text
#: original_texis/building.texi:1460
msgid "Emacs Lisp programs usually load Emacs Lisp files using the @code{load} function.  This is similar to @code{load-library}, but is lower-level and accepts additional arguments.  @xref{How Programs Do Loading,,, elisp, the Emacs Lisp Reference Manual}."
msgstr "Emacs Lispプログラムは通常、@code{load}関数を使用してEmacs Lispファイルをロードします。これは@code{load-library}と似ていますが、より低レベルで追加の引数を指定できます。@ref{How Programs Do Loading,,, elisp, the Emacs Lisp Reference Manual}を参照してください。"

#. type: vindex
#: original_texis/building.texi:1461
#, no-wrap
msgid "load-path"
msgstr "load-path"

#. type: Plain text
#: original_texis/building.texi:1473
msgid "The Emacs Lisp load path is specified by the variable @code{load-path}.  Its value should be a list of directories (strings).  These directories are searched, in the specified order, by the @kbd{M-x load-library} command, the lower-level @code{load} function, and other Emacs functions that find Emacs Lisp libraries.  An entry in @code{load-path} can also have the special value @code{nil}, which stands for the current default directory, but it is almost always a bad idea to use this, because its meaning will depend on the buffer that is current when @code{load-path} is used by Emacs.  (If you find yourself wishing that @code{nil} were in the list, most likely what you really want is to use @kbd{M-x load-file}.)"
msgstr "Emacs Lispのロードパスは、変数@code{load-path}により指定されます。この変数の値は、ディレクトリー(文字列)のリストです。これらのディレクトリーは、@kbd{M-x load-library}コマンド、低レベルの@code{load}関数、その他のEmacs Lispライブラリーを探すEmacs関数により、指定された順に検索されます。@code{load-path}のリストの要素には、特別な値@code{nil}も指定できます。これはカレントのデフォルトディレクトリーを意味しますが、その意味するところはEmacsが@code{load-path}を使用する際のカレントディレクトリーに依存するはずなので、これを使うのは大抵間違っています(リストに@code{nil}を含めたいと思うとき、大抵の場合は、本当に望んでいるのは@kbd{M-x load-file}を使用することです)。"

#. type: Plain text
#: original_texis/building.texi:1481
msgid "The default value of @code{load-path} is a list of directories where the Lisp code for Emacs itself is stored.  If you have libraries of your own in another directory, you can add that directory to the load path.  Unlike most other variables described in this manual, @code{load-path} cannot be changed via the Customize interface (@pxref{Easy Customization}), but you can add a directory to it by putting a line like this in your init file (@pxref{Init File}):"
msgstr "@code{load-path}のデフォルト値は、Emacs自身がLispコードを格納するディレクトリーのリストです。他のディレクトリーに独自のライブラリーがある場合、ロードパスにそのディレクトリーを追加できます。このマニュアルで説明されている他の大半の変数とは異なり、@code{load-path}はCustomizeインターフェース(@ref{Easy Customization}を参照してください)を通じての変更はできません。しかしinitファイルに以下のような行を記述して、ディレクトリーを追加できます(@ref{Init File}を参照してください):"

#. type: example
#: original_texis/building.texi:1484
#, no-wrap
msgid "(add-to-list 'load-path \"/path/to/my/lisp/library\")\n"
msgstr "(add-to-list 'load-path \"/path/to/my/lisp/library\")\n"

#. type: cindex
#: original_texis/building.texi:1486
#, no-wrap
msgid "autoload"
msgstr "autoload"

#. type: Plain text
#: original_texis/building.texi:1493
msgid "Some commands are @dfn{autoloaded}; when you run them, Emacs automatically loads the associated library first.  For instance, the @kbd{M-x compile} command (@pxref{Compilation}) is autoloaded; if you call it, Emacs automatically loads the @code{compile} library first.  In contrast, the command @kbd{M-x recompile} is not autoloaded, so it is unavailable until you load the @code{compile} library."
msgstr "いくつかのコマンドは、@dfn{自動ロード(autoload)}されます。これらを実行するとき、Emacsは最初に関連するライブラリーを自動的にロードします。たとえば@kbd{M-x compile}コマンド(@ref{Compilation}を参照してください)は、自動ロードされます。これを呼び出した場合、Emacsは最初に、自動的に@code{compile}ライブラリーをロードします。対照的にコマンド@kbd{M-x recompile}は、自動ロードされません。そのため、このコマンドは@code{compile}ライブラリーをロードするまで利用できません。"

#. type: vindex
#: original_texis/building.texi:1494
#, no-wrap
msgid "help-enable-auto-load"
msgstr "help-enable-auto-load"

#. type: Plain text
#: original_texis/building.texi:1501
msgid "Automatic loading can also occur when you look up the documentation of an autoloaded command (@pxref{Name Help}), if the documentation refers to other functions and variables in its library (loading the library lets Emacs properly set up the hyperlinks in the @file{*Help*} buffer).  To disable this feature, change the variable @code{help-enable-auto-load} to @code{nil}."
msgstr "自動的なロードは、自動ロードされたコマンドのドキュメントを探すとき(@ref{Name Help}を参照してください)にも発生します。それは、ドキュメントがライブラリーの他の関数や変数を参照する場合です(ライブラリーのロードにより@file{*Help*}バッファーのハイパーリンクが適切にセットアップされます)。この機能を無効にするには、変数@code{help-enable-auto-load}を@code{nil}に変更してください。"

#. type: vindex
#: original_texis/building.texi:1502
#, no-wrap
msgid "help-enable-completion-auto-load"
msgstr "help-enable-completion-auto-load"

#. type: Plain text
#: original_texis/building.texi:1507
msgid "Automatic loading also occurs when completing names for @code{describe-variable} and @code{describe-function}, based on the prefix being completed.  To disable this feature, change the variable @code{help-enable-completion-auto-load} to @code{nil}."
msgstr "@code{describe-variable}と@code{describe-function}での名前補完時にも、接頭辞が補完されたかにもとづいて、自動ロードが発生します。この機能を無効にするには、変数@code{help-enable-completion-auto-load}を@code{nil}に変更してください。"

#. type: vindex
#: original_texis/building.texi:1508
#, no-wrap
msgid "load-dangerous-libraries"
msgstr "load-dangerous-libraries"

#. type: cindex
#: original_texis/building.texi:1509
#, no-wrap
msgid "Lisp files byte-compiled by XEmacs"
msgstr "Lisp files byte-compiled by XEmacs"

#. type: Plain text
#: original_texis/building.texi:1514
msgid "By default, Emacs refuses to load compiled Lisp files which were compiled with XEmacs, a modified version of Emacs---they can cause Emacs to crash.  Set the variable @code{load-dangerous-libraries} to @code{t} if you want to try loading them."
msgstr "デフォルトではEmacsは、XEmacs ---Emacsの変更されたバージョン --- でコンパイルされたコンパイル済みのLispファイルのロードを拒絶します。なぜならそれはEmacsのクラッシュをさせるからです。これらのロードを試みる場合は、変数@code{load-dangerous-libraries}に@code{t}をセットしてください。"

#. type: node
#: original_texis/building.texi:1515
#, no-wrap
msgid "Lisp Eval"
msgstr "Lisp Eval"

#. type: section
#: original_texis/building.texi:1516
#, no-wrap
msgid "Evaluating Emacs Lisp Expressions"
msgstr "Emacs Lisp式の評価"

#. type: cindex
#: original_texis/building.texi:1518
#, no-wrap
msgid "mode, Emacs Lisp"
msgstr "mode, Emacs Lisp"

#. type: cindex
#: original_texis/building.texi:1519
#, no-wrap
msgid "evaluation, Emacs Lisp"
msgstr "evaluation, Emacs Lisp"

#. type: findex
#: original_texis/building.texi:1521
#, no-wrap
msgid "emacs-lisp-mode"
msgstr "emacs-lisp-mode"

#. type: Plain text
#: original_texis/building.texi:1524
msgid "Emacs Lisp mode is the major mode for editing Emacs Lisp.  Its mode command is @kbd{M-x emacs-lisp-mode}."
msgstr "Emacs LispモードはEmacs Lispを編集するためのメジャーモードです。これのモードコマンドは@kbd{M-x emacs-lisp-mode}です。"

#. type: Plain text
#: original_texis/building.texi:1531
msgid "Emacs provides several commands for evaluating Emacs Lisp expressions.  You can use these commands in Emacs Lisp mode, to test your Emacs Lisp code as it is being written.  For example, after re-writing a function, you can evaluate the function definition to make it take effect for subsequent function calls.  These commands are also available globally, and can be used outside Emacs Lisp mode."
msgstr "Emacsは、Emacs Lisp式を評価するためのコマンドをいくつか提供します。記述しているEmacs Lispコードをテストするために、これらのコマンドをEmacs Lispモードで使用できます。たとえば、関数を書き換えた後、以降の関数呼び出しでそれを有効にするために、関数定義を評価します。これらのコマンドはグローバルに利用可能で、Emacs Lispモード以外でも使用できます。"

#. type: kindex
#: original_texis/building.texi:1533 original_texis/building.texi:1555
#, no-wrap
msgid "M-:"
msgstr "M-:"

#. type: table
#: original_texis/building.texi:1536
msgid "Read a single Emacs Lisp expression in the minibuffer, evaluate it, and print the value in the echo area (@code{eval-expression})."
msgstr "1つのEmacs Lisp式をミニバッファーで読み取り、それを評価して、値をエコーエリアに出力します(@code{eval-expression})。"

#. type: kindex
#: original_texis/building.texi:1536 original_texis/building.texi:1564
#, no-wrap
msgid "C-x C-e"
msgstr "C-x C-e"

#. type: table
#: original_texis/building.texi:1539
msgid "Evaluate the Emacs Lisp expression before point, and print the value in the echo area (@code{eval-last-sexp})."
msgstr "ポイントの前のEmacs Lisp式を評価して、値をエコーエリアに出力します(@code{eval-last-sexp})。"

#. type: item
#: original_texis/building.texi:1539
#, no-wrap
msgid "@kbd{C-M-x} @r{(in Emacs Lisp mode)}"
msgstr "@kbd{C-M-x} @r{(Emacs Lispモード)}"

#. type: kbd{#1}
#: original_texis/building.texi:1540
#, no-wrap
msgid "M-x eval-defun"
msgstr "M-x eval-defun"

#. type: table
#: original_texis/building.texi:1543
msgid "Evaluate the defun containing or after point, and print the value in the echo area (@code{eval-defun})."
msgstr "ポイントの後またはポイントを含むdefunを評価して、値をエコーエリアに出力します(@code{eval-defun})。"

#. type: kbd{#1}
#: original_texis/building.texi:1543
#, no-wrap
msgid "M-x eval-region"
msgstr "M-x eval-region"

#. type: table
#: original_texis/building.texi:1545
msgid "Evaluate all the Emacs Lisp expressions in the region."
msgstr "リージョンのすべてのEmacs Lisp式を評価します。"

#. type: kbd{#1}
#: original_texis/building.texi:1545
#, no-wrap
msgid "M-x eval-buffer"
msgstr "M-x eval-buffer"

#. type: table
#: original_texis/building.texi:1547
msgid "Evaluate all the Emacs Lisp expressions in the buffer."
msgstr "バッファーのすべてのEmacs Lisp式を評価します。"

#. type: kindex
#: original_texis/building.texi:1552
#, no-wrap
msgid "M-colon"
msgstr "M-colon"

#. type: findex
#: original_texis/building.texi:1557
#, no-wrap
msgid "eval-expression"
msgstr "eval-expression"

#. type: Plain text
#: original_texis/building.texi:1563
msgid "@kbd{M-:} (@code{eval-expression}) reads an expression using the minibuffer, and evaluates it.  (Before evaluating the expression, the current buffer switches back to the buffer that was current when you typed @kbd{M-:}, not the minibuffer into which you typed the expression.)"
msgstr "@kbd{M-:} (@code{eval-expression})は、ミニバッファーを使って式を読み取り、それを評価します(式を評価する前に、カレントバッファーは、式をタイプするためのミニバッファーではなく、@kbd{M-:}をタイプしたときカレントだったバッファーに切り替わります)。"

#. type: findex
#: original_texis/building.texi:1565
#, no-wrap
msgid "eval-last-sexp"
msgstr "eval-last-sexp"

#. type: Plain text
#: original_texis/building.texi:1573
msgid "The command @kbd{C-x C-e} (@code{eval-last-sexp}) evaluates the Emacs Lisp expression preceding point in the buffer, and displays the value in the echo area.  When the result of an evaluation is an integer, it is displayed together with the value in other formats (octal, hexadecimal, and character if @code{eval-expression-print-maximum-character}, described below, allows it)."
msgstr "コマンド@kbd{C-x C-e} (@code{eval-last-sexp})は、そのバッファーのポイントの前にあるEmacs Lisp式を評価して、その値をエコーエリアに表示します。評価した結果が整数のときは、他のフォーマット(8進、16進、@code{eval-expression-print-maximum-character}の制限を超えなければ文字)とともに値を表示します。"

#. type: Plain text
#: original_texis/building.texi:1584
msgid "If @kbd{M-:} or @kbd{C-x C-e} is given a prefix argument, it inserts the value into the current buffer at point, rather than displaying it in the echo area.  If the prefix argument is zero, any integer output is inserted together with its value in other formats (octal, hexadecimal, and character).  Such a prefix argument also prevents abbreviation of the output according to the variables @code{eval-expression-print-level} and @code{eval-expression-print-length} (see below).  Similarly, a prefix argument of @code{-1} overrides the effect of @code{eval-expression-print-length}."
msgstr "@kbd{M-:}および@kbd{C-x C-e}にプレフィクス引数を与えた場合、値をエコーエリアに表示するのではなく、カレントバッファーのポイント位置に値を挿入します。プレフィクス引数が0の場合、整数出力は他のフォーマット(8進、16進、文字)と一緒に挿入されます。プレフィクス引数は、@code{eval-expression-print-level}および@code{eval-expression-print-length}にしたがった出力の省略も防ぎます(以下参照)。同様にプレフィックス引数@code{-1}は、@code{eval-expression-print-length}の効果をオーバーライドします。"

#. type: kindex
#: original_texis/building.texi:1585
#, no-wrap
msgid "C-M-x @r{(Emacs Lisp mode)}"
msgstr "C-M-x @r{(Emacs Lisp mode)}"

#. type: findex
#: original_texis/building.texi:1586
#, no-wrap
msgid "eval-defun"
msgstr "eval-defun"

#. type: Plain text
#: original_texis/building.texi:1600
msgid "The @code{eval-defun} command is bound to @kbd{C-M-x} in Emacs Lisp mode.  It evaluates the top-level Lisp expression containing or following point, and prints the value in the echo area.  In this context, a top-level expression is referred to as a ``defun'', but it need not be an actual @code{defun} (function definition).  In particular, this command treats @code{defvar} expressions specially.  Normally, evaluating a @code{defvar} expression does nothing if the variable it defines already has a value.  But this command unconditionally resets the variable to the initial value specified by the @code{defvar}; this is convenient for debugging Emacs Lisp programs.  @code{defcustom} and @code{defface} expressions are treated similarly.  Note that the other commands documented in this section do not have this special feature."
msgstr "@code{eval-defun}コマンドは、Emacs Lispモードでは@kbd{C-M-x}にバインドされています。これはポイントを含む、またはポイントの後ろのトップレベルのLisp式を評価して、値をエコーエリアに出力します。このコンテキストでは、トップレベルの式は``defun''として参照されますが、実際の@code{defun}(関数定義)である必要はありません。このコマンドは@code{defvar}式を特別に扱います。通常、@code{defvar}式を評価しても、それが定義する変数がすでに値をもっている場合は、何も起こりません。しかし、このコマンドは無条件に@code{defvar}で指定された初期値に変数をリセットします。これはEmacs Lispプログラムをデバッグするとき便利です。式@code{defcustom}および@code{defface}も同様に扱われます。このセクションで説明している他のコマンドは、この特別な機能をもっていません。"

#. type: Plain text
#: original_texis/building.texi:1604
msgid "With a prefix argument, @kbd{C-M-x} instruments the function definition for Edebug, the Emacs Lisp Debugger.  @xref{Instrumenting, Instrumenting for Edebug,, elisp, the Emacs Lisp Reference Manual}."
msgstr "プレフィクス引数を指定すると、@kbd{C-M-x}はEmacs LispデバッガーのEdebugのために関数定義をインストルメント(instrument: 処置)します。@ref{Instrumenting, Instrumenting for Edebug,, elisp, the Emacs Lisp Reference Manual}を参照してください。"

#. type: findex
#: original_texis/building.texi:1605
#, no-wrap
msgid "eval-region"
msgstr "eval-region"

#. type: findex
#: original_texis/building.texi:1606
#, no-wrap
msgid "eval-buffer"
msgstr "eval-buffer"

#. type: Plain text
#: original_texis/building.texi:1610
msgid "The command @kbd{M-x eval-region} parses the text of the region as one or more Lisp expressions, evaluating them one by one.  @kbd{M-x eval-buffer} is similar but evaluates the entire buffer."
msgstr "コマンド@kbd{M-x eval-region}は、リージョンのテキストを1つ以上のLisp式として解析して、それらを1つずつ評価します。@kbd{M-x eval-buffer}も同様ですが、これはバッファー全体を評価します。"

#. type: vindex
#: original_texis/building.texi:1611
#, no-wrap
msgid "eval-expression-print-level"
msgstr "eval-expression-print-level"

#. type: vindex
#: original_texis/building.texi:1612
#, no-wrap
msgid "eval-expression-print-length"
msgstr "eval-expression-print-length"

#. type: vindex
#: original_texis/building.texi:1613
#, no-wrap
msgid "eval-expression-print-maximum-character"
msgstr "eval-expression-print-maximum-character"

#. type: vindex
#: original_texis/building.texi:1614
#, no-wrap
msgid "eval-expression-debug-on-error"
msgstr "eval-expression-debug-on-error"

#. type: Plain text
#: original_texis/building.texi:1625
msgid "The options @code{eval-expression-print-level} and @code{eval-expression-print-length} control the maximum depth and length of lists to print in the result of the evaluation commands before abbreviating them.  Supplying a zero prefix argument to @code{eval-expression} or @code{eval-last-sexp} causes lists to be printed in full.  @code{eval-expression-debug-on-error} controls whether evaluation errors invoke the debugger when these commands are used; its default is @code{t}.  @code{eval-expression-print-maximum-character} prevents integers which are larger than it from being displayed as characters."
msgstr "オプション@code{eval-expression-print-level}および@code{eval-expression-print-length}は、評価コマンドが結果を出力する前に省略する、リストの最大の深さと長さを制御します。@code{eval-expression}または@code{eval-last-sexp}にプレフィクス引数0を指定すると、リストはすべて出力されます。@code{eval-expression-debug-on-error}は、これらのコマンドが使用されるとき、評価エラーによりデバッガーを呼び出すかを制御します、デフォルトは@code{t}です。@code{eval-expression-print-maximum-character}は、文字として表示される最大の整数を超える値を抑制します。"

#. type: node
#: original_texis/building.texi:1626
#, no-wrap
msgid "Lisp Interaction"
msgstr "Lisp Interaction"

#. type: section
#: original_texis/building.texi:1627
#, no-wrap
msgid "Lisp Interaction Buffers"
msgstr "Lisp Interactionバッファー"

#. type: findex
#: original_texis/building.texi:1629
#, no-wrap
msgid "lisp-interaction-mode"
msgstr "lisp-interaction-mode"

#. type: Plain text
#: original_texis/building.texi:1634
msgid "When Emacs starts up, it contains a buffer named @file{*scratch*}, which is provided for evaluating Emacs Lisp expressions interactively.  Its major mode is Lisp Interaction mode.  You can also enable Lisp Interaction mode by typing @kbd{M-x lisp-interaction-mode}."
msgstr "Emacsを開始したとき、@file{*scratch*}という名前のバッファーが含まれます、これはEmacs Lisp式の対話的な評価を提供します。このバッファーのメジャーモードは、Lisp Interactionモードです。@kbd{M-x lisp-interaction-mode}とタイプしても、Lisp Interactionモードを有効にできます。"

#. type: findex
#: original_texis/building.texi:1635
#, no-wrap
msgid "eval-print-last-sexp"
msgstr "eval-print-last-sexp"

#. type: kindex
#: original_texis/building.texi:1636
#, no-wrap
msgid "C-j @r{(Lisp Interaction mode)}"
msgstr "C-j @r{(Lisp Interaction mode)}"

#. type: Plain text
#: original_texis/building.texi:1644
msgid "In the @file{*scratch*} buffer, and other Lisp Interaction mode buffers, @kbd{C-j} (@code{eval-print-last-sexp}) evaluates the Lisp expression before point, and inserts the value at point.  Thus, as you type expressions into the buffer followed by @kbd{C-j} after each expression, the buffer records a transcript of the evaluated expressions and their values.  All other commands in Lisp Interaction mode are the same as in Emacs Lisp mode."
msgstr "@file{*scratch*}バッファー、およびその他のLisp Interactionモードのバッファーでは、@kbd{C-j} (@code{eval-print-last-sexp})はポイントの前のLisp式を評価して、値をポイント位置に挿入します。したがってバッファーに式をタイプするたび、その後ろで@kbd{C-j}をタイプすることにより、そのバッファーは式の評価とその値を記録した写しになります。その他すべてのLisp Interactionモードのコマンドは、Emacs Lispモードと同じです。"

#. type: vindex
#: original_texis/building.texi:1645
#, no-wrap
msgid "initial-scratch-message"
msgstr "initial-scratch-message"

#. type: Plain text
#: original_texis/building.texi:1651
msgid "At startup, the @file{*scratch*} buffer contains a short message, in the form of a Lisp comment, that explains what it is for.  This message is controlled by the variable @code{initial-scratch-message}, which should be either a documentation string, or @code{nil} (which means to suppress the message)."
msgstr "起動時には、@file{*scratch*}バッファーは、それが何かを説明するLispコメント形式の短いメッセージを含んでいます。このメッセージは変数@code{initial-scratch-message}により制御され、値にはドキュメント文字列または@code{nil}(メッセージを抑止するという意味)を指定します。"

#. type: findex
#: original_texis/building.texi:1652
#, no-wrap
msgid "ielm"
msgstr "ielm"

#. type: Plain text
#: original_texis/building.texi:1659
msgid "An alternative way of evaluating Emacs Lisp expressions interactively is to use Inferior Emacs Lisp mode, which provides an interface rather like Shell mode (@pxref{Shell Mode}) for evaluating Emacs Lisp expressions.  Type @kbd{M-x ielm} to create an @file{*ielm*} buffer which uses this mode.  For more information, see that command's documentation."
msgstr "Emacs Lisp式を対話的に評価する別の方法は、Inferior Emacs Lispモードを使う方法です。これはEmacs Lisp式の評価にShellモード(@ref{Shell Mode}を参照してください)に似たインターフェースを提供します。@kbd{M-x ielm}とタイプすることにより、このモードを使用する@file{*ielm*}というバッファーが作成されます。詳細は、コマンドのドキュメントを参照してください。"

#. type: section
#: original_texis/building.texi:1661
#, no-wrap
msgid "Running an External Lisp"
msgstr "外部Lispの実行"

#. type: cindex
#: original_texis/building.texi:1663
#, no-wrap
msgid "mode, Lisp"
msgstr "mode, Lisp"

#. type: cindex
#: original_texis/building.texi:1664
#, no-wrap
msgid "Common Lisp"
msgstr "Common Lisp"

#. type: Plain text
#: original_texis/building.texi:1670
msgid "Lisp mode is the major mode for editing programs written in general-purpose Lisp dialects, such as Common Lisp.  Its mode command is @kbd{M-x lisp-mode}.  Emacs uses Lisp mode automatically for files whose names end in @file{.l}, @file{.lsp}, or @file{.lisp}."
msgstr "Lispモードは、Common Lispのような一般用途のためのLisp方言で記述されたプログラムを記述するためのメジャーモードです。これのモードコマンドは@kbd{M-x lisp-mode}です。Emacsは名前が@file{.l}、@file{.lsp}、@file{.lisp}で終わるファイルにたいして、自動的にLispモードを使用します。"

#. type: findex
#: original_texis/building.texi:1671
#, no-wrap
msgid "run-lisp"
msgstr "run-lisp"

#. type: vindex
#: original_texis/building.texi:1672
#, no-wrap
msgid "inferior-lisp-program"
msgstr "inferior-lisp-program"

#. type: kindex
#: original_texis/building.texi:1673
#, no-wrap
msgid "C-x C-z"
msgstr "C-x C-z"

#. type: Plain text
#: original_texis/building.texi:1681
msgid "You can run an external Lisp session as a subprocess or @dfn{inferior process} of Emacs, and pass expressions to it to be evaluated.  To begin an external Lisp session, type @kbd{M-x run-lisp}.  This runs the program named @command{lisp}, and sets it up so that both input and output go through an Emacs buffer named @file{*inferior-lisp*}.  To change the name of the Lisp program run by @kbd{M-x run-lisp}, change the variable @code{inferior-lisp-program}."
msgstr "外部LispセッションをEmacsのサブプロセス、または@dfn{下位プロセス(inferior process)}として実行して、式を評価するために渡すことができます。外部Lispセッションを開始するには、@kbd{M-x run-lisp}とタイプします。これは@command{lisp}という名前のプログラムを実行して、@file{*inferior-lisp*}という名前のEmacsバッファーを通じて入出力を行うようにセットアップします。@kbd{M-x run-lisp}で実行されるLispプログラムの名前を変更するには、変数@code{inferior-lisp-program}を変更してください。"

#. type: Plain text
#: original_texis/building.texi:1688
msgid "The major mode for the @file{*lisp*} buffer is Inferior Lisp mode, which combines the characteristics of Lisp mode and Shell mode (@pxref{Shell Mode}).  To send input to the Lisp session, go to the end of the @file{*lisp*} buffer and type the input, followed by @key{RET}.  Terminal output from the Lisp session is automatically inserted in the buffer."
msgstr "@file{*lisp*}バッファーのためのメジャーモードはInferior Lispモードで、これはLispモードの性質とShellモード(@ref{Shell Mode}を参照してください)の性質をあわせ持っています。Lispセッションに入力を送るには、@file{*lisp*}バッファーの最後に移動して、入力をタイプしてから@key{RET}をタイプします。Lispセッションからの端末出力は、自動的にそのバッファーに挿入されます。"

#. type: kindex
#: original_texis/building.texi:1689
#, no-wrap
msgid "C-M-x @r{(Lisp mode)}"
msgstr "C-M-x @r{(Lisp mode)}"

#. type: findex
#: original_texis/building.texi:1690
#, no-wrap
msgid "lisp-eval-defun"
msgstr "lisp-eval-defun"

#. type: Plain text
#: original_texis/building.texi:1700
msgid "When you edit a Lisp program in Lisp mode, you can type @kbd{C-M-x} (@code{lisp-eval-defun}) to send an expression from the Lisp mode buffer to a Lisp session that you had started with @kbd{M-x run-lisp}.  The expression sent is the top-level Lisp expression at or following point.  The resulting value goes as usual into the @file{*inferior-lisp*} buffer.  Note that the effect of @kbd{C-M-x} in Lisp mode is thus very similar to its effect in Emacs Lisp mode (@pxref{Lisp Eval}), except that the expression is sent to a different Lisp environment instead of being evaluated in Emacs."
msgstr "LispプログラムをLispモードで編集する場合、@kbd{C-M-x} (@code{lisp-eval-defun})とタイプして、Lispモードのバッファーから、@kbd{M-x run-lisp}で開始したLispセッションに式を送ることができます。送信される式はポイント位置、またはポイントの後ろのトップレベルのLisp式です。結果となる値は通常どおり、@file{*inferior-lisp*}バッファーに送られます。Lispモードでの@kbd{C-M-x}の効果は、それが評価されるEmacsに送られるのではなく、異なるLisp環境に送られる点を除けば、Emacs Lispモード(@ref{Lisp Eval}を参照してください)での効果とよく似ていることに注意してください。"

#. type: findex
#: original_texis/building.texi:1701
#, no-wrap
msgid "scheme-mode"
msgstr "scheme-mode"

#. type: findex
#: original_texis/building.texi:1702
#, no-wrap
msgid "run-scheme"
msgstr "run-scheme"

#. type: cindex
#: original_texis/building.texi:1704
#, no-wrap
msgid "mode, Scheme"
msgstr "mode, Scheme"

#. type: kindex
#: original_texis/building.texi:1705
#, no-wrap
msgid "C-M-x @r{(Scheme mode)}"
msgstr "C-M-x @r{(Scheme mode)}"

#. type: Plain text
#: original_texis/building.texi:1711
msgid "The facilities for editing Scheme code, and for sending expressions to a Scheme subprocess, are very similar.  Scheme source files are edited in Scheme mode, which can be explicitly enabled with @kbd{M-x scheme-mode}.  You can initiate a Scheme session by typing @kbd{M-x run-scheme} (the buffer for interacting with Scheme is named @file{*scheme*}), and send expressions to it by typing @kbd{C-M-x}."
msgstr "Schemeコードを編集して、式をSchemeサブプロセスに送る機能は、よく似ています。Schemeソースファイルは、Schemeモードで編集されます。このモードは@kbd{M-x scheme-mode}で明示的に有効にできます。@kbd{M-x run-scheme}とタイプすることにより、Schemeセッションを開始し、@kbd{C-M-x}とタイプして式の送ることができます(Schemeと対話するためのバッファーは、@file{*scheme*}という名前です)。"
