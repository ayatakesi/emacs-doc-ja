# Japanese translation of Emacs-25.2 editor manual
# Copyright (C) 2016 Free Software Foundation, Inc.
# This file is distributed under the same license as the Emacs package.
# Ayanokoji Takesi <ayanokoji.takesi@gmail.com>.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: 26.1.91\n"
"POT-Creation-Date: 2019-09-21 18:00+0900\n"
"PO-Revision-Date: 2019-01-08 21:28+0900\n"
"Last-Translator: Ayanokoji Takesi <ayanokoji.takesi@gmail.com>\n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"#-#-#-#-#  package.texi.po (26.1)  #-#-#-#-#\n"
"#-#-#-#-#  package.texi.po (25.2)  #-#-#-#-#\n"
"#-#-#-#-#  tmp.y2ZhylNLpL (25.2)  #-#-#-#-#\n"
"#-#-#-#-#  tmp.VBwDTvyKUW.translated (26.1)  #-#-#-#-#\n"
"#-#-#-#-#  tmp.WADXxDLFsC.translated (26.1)  #-#-#-#-#\n"
"#-#-#-#-#  compendium.po (26.1)  #-#-#-#-#\n"
"#-#-#-#-#  compendium.po (26.1.91)  #-#-#-#-#\n"

#. type: node
#: original_texis/package.texi:5
#, no-wrap
msgid "Packages"
msgstr "Packages"

#. type: chapter
#: original_texis/package.texi:6
#, no-wrap
msgid "Emacs Lisp Packages"
msgstr "Emacs Lispパッケージ"

#. type: cindex
#: original_texis/package.texi:7
#, no-wrap
msgid "Package"
msgstr "Package"

#. type: cindex
#: original_texis/package.texi:8
#, no-wrap
msgid "Emacs Lisp package archive"
msgstr "Emacs Lisp package archive"

#. type: cindex
#: original_texis/package.texi:9
#, no-wrap
msgid "Package archive"
msgstr "Package archive"

#. type: Plain text
#: original_texis/package.texi:15
msgid "Emacs includes a facility that lets you easily download and install @dfn{packages} that implement additional features.  Each package is a separate Emacs Lisp program, sometimes including other components such as an Info manual."
msgstr "Emacsには、追加の機能を実装する@dfn{パッケージ(packages)}を、簡単にダウンロードしてインストールする機能が含まれています。それぞれのパッケージは個別のEmacs Lispプログラムで、Infoマニュアルのような他の構成要素が含まれているときもあります。"

#. type: Plain text
#: original_texis/package.texi:19
msgid "@kbd{M-x list-packages} brings up a buffer named @file{*Packages*} with a list of all packages.  You can install or uninstall packages via this buffer.  @xref{Package Menu}."
msgstr "@kbd{M-x list-packages}により、すべてのパッケージのリストを含む、@file{*Packages*}という名前のバッファーが表示されます。このバッファーを通じてパッケージをインストールしたりアンインストールできます。@ref{Package Menu}を参照してください。"

#. type: Plain text
#: original_texis/package.texi:23
msgid "The command @kbd{C-h P} (@code{describe-package}) prompts for the name of a package, and displays a help buffer describing the attributes of the package and the features that it implements."
msgstr "コマンド@kbd{C-h P} (@code{describe-package})はパッケージ名の入力を求め、そのパッケージの属性や、実装する機能を説明するヘルプバッファーを表示します。"

#. type: Plain text
#: original_texis/package.texi:28
msgid "By default, Emacs downloads packages from a @dfn{package archive} maintained by the Emacs developers and hosted by the GNU project.  Optionally, you can also download packages from archives maintained by third parties.  @xref{Package Installation}."
msgstr "デフォルトでは、Emacsはemacs開発者により保守されGNUプロジェクトによりホスティングされる、@dfn{パッケージアーカイブ(package archive)}からパッケージをダウンロードします。オプションでサードパーティーにより保守されるアーカイブから、パッケージをダウンロードすることもできます。@ref{Package Installation}を参照してください。"

#. type: Plain text
#: original_texis/package.texi:32
msgid "For information about turning an Emacs Lisp program into an installable package, @xref{Packaging,,,elisp, The Emacs Lisp Reference Manual}."
msgstr "Emacs Lispのプログラムをインストール可能なパッケージに変更する情報に関しては、@ref{Packaging,,,elisp, The Emacs Lisp Reference Manual}を参照してください。"

#. type: node
#: original_texis/package.texi:37 original_texis/package.texi:39
#, no-wrap
msgid "Package Menu"
msgstr "Package Menu"

#. type: menuentry
#: original_texis/package.texi:37
msgid "Buffer for viewing and managing packages."
msgstr "パッケージを閲覧・管理するためのバッファー。"

#. type: section
#: original_texis/package.texi:37 original_texis/package.texi:158
#: original_texis/package.texi:159
#, no-wrap
msgid "Package Installation"
msgstr "Package Installation"

#. type: menuentry
#: original_texis/package.texi:37
msgid "Options for package installation."
msgstr "パッケージのインストールにたいするオプション。"

#. type: node
#: original_texis/package.texi:37 original_texis/package.texi:299
#, no-wrap
msgid "Package Files"
msgstr "Package Files"

#. type: menuentry
#: original_texis/package.texi:37
msgid "Where packages are installed."
msgstr "パッケージがインストールされる場所。"

#. type: section
#: original_texis/package.texi:40
#, no-wrap
msgid "The Package Menu Buffer"
msgstr "Package Menuバッファー"

#. type: cindex
#: original_texis/package.texi:41
#, no-wrap
msgid "package menu"
msgstr "package menu"

#. type: cindex
#: original_texis/package.texi:42
#, no-wrap
msgid "built-in package"
msgstr "built-in package"

#. type: findex
#: original_texis/package.texi:43
#, no-wrap
msgid "list-packages"
msgstr "list-packages"

#. type: Plain text
#: original_texis/package.texi:48
msgid "The command @kbd{M-x list-packages} brings up the @dfn{package menu}.  This is a buffer listing all the packages that Emacs knows about, one on each line, with the following information:"
msgstr "コマンド@kbd{M-x list-packages}は、@dfn{パッケージメニュー(package menu)}を立ち上げます。これはEmacsが把握するすべてのパッケージをリストするバッファーです。リストの各行には以下の情報が表示されます:"

#. type: itemize
#: original_texis/package.texi:52
msgid "The package name (e.g., @samp{auctex})."
msgstr "パッケージ名(例: @samp{auctex})。"

#. type: itemize
#: original_texis/package.texi:55
msgid "The package's version number (e.g., @samp{11.86})."
msgstr "パッケージのバージョン番号(例: @samp{11.86})。"

#. type: itemize
#: original_texis/package.texi:66
msgid "The package's status---normally one of @samp{available} (can be downloaded from the package archive), @samp{installed}, or @samp{built-in} (included in Emacs by default).  The status @samp{external} means the package is not built-in and not from the directory specified by @code{package-user-dir} (@pxref{Package Files}).  External packages are treated much like built-in: they cannot be deleted through the package menu, and are not considered for upgrading."
msgstr "パッケージの状態(state)は通常、@samp{available}(パッケージアーカイブからダウンロード可能)、@samp{installed}、@samp{built-in}(デフォルトでEmacsに含まれる)のうちの1つです。@samp{external}(外部)という状態は、そのパッケージがビルトイン(組み込み)ではなく、@code{package-user-dir}(@ref{Package Files}を参照してください)で指定されたディレクトリーのものでもないことを意味します。外部パッケージはビルトインのパッケージと同様に扱われます。これらのパッケージはパッケージメニューから削除できず、更新も考慮されません。"

#. type: itemize
#: original_texis/package.texi:73
msgid "The status can also be @samp{new}.  This is equivalent to @samp{available}, except that it means the package became newly available on the package archive after your last invocation of @kbd{M-x list-packages}.  In other instances, a package may have the status @samp{held}, @samp{disabled}, or @samp{obsolete}.  @xref{Package Installation}."
msgstr "ステータスが@samp{new}のこともあります。これは@samp{available}と同じですが、最後に@kbd{M-x list-packages}を呼び出した後に、そのパッケージがパッケージアーカイブで新たに利用可能になったことを意味します。他にもパッケージは@samp{held}、@samp{disabled}、@samp{obsolete}のステータスをもつかもしれません。@ref{Package Installation}を参照してください。"

#. type: itemize
#: original_texis/package.texi:76
msgid "A short description of the package."
msgstr "パッケージの短い説明。"

#. type: Plain text
#: original_texis/package.texi:83
msgid "The @code{list-packages} command accesses the network, to retrieve the list of available packages from package archive servers.  If the network is unavailable, it falls back on the most recently retrieved list."
msgstr "@code{list-packages}は、パッケージアーカイブサーバーから利用可能なパッケージのリストを取得するために、ネットワークにアクセスします。ネットワークが利用できない場合、一番最近取得したリストにフォールバックします。"

#. type: Plain text
#: original_texis/package.texi:85
msgid "The following commands are available in the package menu:"
msgstr "パッケージメニューでは、以下のコマンドが利用可能です:"

#. type: item
#: original_texis/package.texi:87
#, no-wrap
msgid "h"
msgstr "h"

#. type: table
#: original_texis/package.texi:90
msgid "Print a short message summarizing how to use the package menu (@code{package-menu-quick-help})."
msgstr "パッケージメニューの使い方を要約した短いメッセージを表示します(@code{package-menu-quick-help})。"

#. type: item
#: original_texis/package.texi:91
#, no-wrap
msgid "?"
msgstr "?"

#. type: key{#1}
#: original_texis/package.texi:92
#, no-wrap
msgid "RET"
msgstr "RET"

#. type: table
#: original_texis/package.texi:96
msgid "Display a help buffer for the package on the current line (@code{package-menu-describe-package}), similar to the help window displayed by the @kbd{C-h P} command (@pxref{Packages})."
msgstr "カレント行のパッケージにたいして、@kbd{C-h P}コマンド(@ref{Packages}を参照してください)により表示されるヘルプウィンドウと同様の、ヘルプバッファーを表示します(@code{package-menu-describe-package})。"

#. type: item
#: original_texis/package.texi:97
#, no-wrap
msgid "i"
msgstr "i"

#. type: table
#: original_texis/package.texi:103
msgid "Mark the package on the current line for installation (@code{package-menu-mark-install}).  If the package status is @samp{available}, this adds an @samp{I} character to the start of the line; typing @kbd{x} (see below) will download and install the package."
msgstr "カレント行のパッケージをインストールのためにマークします(@code{package-menu-mark-install})。パッケージのステータスが@samp{available}の場合、行の先頭に文字@samp{I}を追加します。@kbd{x}とタイプすると、パッケージをダウンロードしてインストールします(以下参照)。"

#. type: item
#: original_texis/package.texi:104
#, no-wrap
msgid "d"
msgstr "d"

#. type: table
#: original_texis/package.texi:111
msgid "Mark the package on the current line for deletion (@code{package-menu-mark-delete}).  If the package status is @samp{installed}, this adds a @samp{D} character to the start of the line; typing @kbd{x} (see below) will delete the package.  @xref{Package Files}, for information about what package deletion entails."
msgstr "カレント行のパッケージを削除のためにマークします(@code{package-menu-mark-delete})。パッケージのステータスが@samp{installed}の場合、行の先頭に文字@samp{D}を追加します。@kbd{x}とタイプすると、パッケージを削除します(以下参照)。パッケージ削除の結果、何が起こるかについての情報は、@ref{Package Files}を参照してください。"

#. type: item
#: original_texis/package.texi:112
#, no-wrap
msgid "~"
msgstr "~"

#. type: table
#: original_texis/package.texi:116
msgid "Mark all obsolete packages for deletion (@code{package-menu-mark-obsolete-for-deletion}).  This marks for deletion all the packages whose status is @samp{obsolete}."
msgstr "削除のためにすべての時代遅れのパッケージobsolete packagesをマークします(@code{package-menu-mark-obsolete-for-deletion})。これは状態が@samp{obsolete}の、すべてのパッケージを削除のためにマークします。"

#. type: item
#: original_texis/package.texi:117
#, no-wrap
msgid "u"
msgstr "u"

#. type: key{#1}
#: original_texis/package.texi:118
#, no-wrap
msgid "DEL"
msgstr "DEL"

#. type: table
#: original_texis/package.texi:121
msgid "Remove any installation or deletion mark previously added to the current line by an @kbd{i} or @kbd{d} command."
msgstr "@kbd{i}や@kbd{d}コマンドにより、でカレント行に追加された、以前のインストールまたは削除のマークを外します。"

#. type: item
#: original_texis/package.texi:122
#, no-wrap
msgid "U"
msgstr "U"

#. type: table
#: original_texis/package.texi:127
msgid "Mark all package with a newer available version for upgrading (@code{package-menu-mark-upgrades}).  This places an installation mark on the new available versions, and a deletion mark on the old installed versions."
msgstr "新たに利用可能になったすべてのパッケージを、更新のためにマークします(@code{package-menu-mark-upgrades})。これは新たに利用可能になったバージョンにインストールのマークをつけ、インストール済みの古いバージョンに削除のマークをつけます。"

#. type: item
#: original_texis/package.texi:128
#, no-wrap
msgid "x"
msgstr "x"

#. type: vindex
#: original_texis/package.texi:129
#, no-wrap
msgid "package-menu-async"
msgstr "package-menu-async"

#. type: table
#: original_texis/package.texi:133
msgid "Download and install all packages marked with @kbd{i}, and their dependencies; also, delete all packages marked with @kbd{d} (@code{package-menu-execute}).  This also removes the marks."
msgstr "@kbd{i}でマークされたすべてのパッケージをダウンロードしてインストールするとともに、@kbd{d}でマークされたすべてのパッケージを削除します(@code{package-menu-execute})。これによりマークは削除されます。"

#. type: item
#: original_texis/package.texi:134
#, no-wrap
msgid "r"
msgstr "r"

#. type: table
#: original_texis/package.texi:138
msgid "Refresh the package list (@code{package-menu-refresh}).  This fetches the list of available packages from the package archive again, and recomputes the package list."
msgstr "パッケージリストを更新します(@code{package-menu-refresh})。これは再度パッケージアーカイブから利用可能なパッケージのリストを取得して、パッケージリストを再計算します。"

#. type: item
#: original_texis/package.texi:139
#, no-wrap
msgid "f"
msgstr "f"

#. type: table
#: original_texis/package.texi:144
msgid "Filter the package list (@code{package-menu-filter}).  This prompts for a keyword (e.g., @samp{games}), then shows only the packages that relate to that keyword.  To restore the full package list, type @kbd{q}."
msgstr "パッケージリストをフィルターします(@code{package-menu-filter})。これはキーワード(例: @samp{games})の入力を求め、そのキーワードに関連するパッケージだけを表示します。完全なパッケージリストを復元するには、@kbd{q}をタイプします。"

#. type: item
#: original_texis/package.texi:145
#, no-wrap
msgid "H"
msgstr "H"

#. type: table
#: original_texis/package.texi:148
msgid "Permanently hide packages that match a regexp (@code{package-menu-hide-package})."
msgstr "regexpにマッチするパッケージを永久に隠します(@code{package-menu-hide-package})。"

#. type: item
#: original_texis/package.texi:149
#, no-wrap
msgid "("
msgstr "("

#. type: table
#: original_texis/package.texi:152
msgid "Toggle visibility of old versions of packages and also of versions from lower-priority archives (@code{package-menu-toggle-hiding})."
msgstr "古いバージョンのパッケージ、および優先度低のアーカイブから取得したバージョンの可視性を切り替えます(@code{package-menu-toggle-hiding})。"

#. type: Plain text
#: original_texis/package.texi:157
msgid "For example, you can install a package by typing @kbd{i} on the line listing that package, followed by @kbd{x}."
msgstr "たとえばパッケージをインストールするには、そのパッケージの行で@kbd{i}をタイプしてから、@kbd{x}をタイプします。"

#. type: findex
#: original_texis/package.texi:161
#, no-wrap
msgid "package-install"
msgstr "package-install"

#. type: Plain text
#: original_texis/package.texi:166
msgid "Packages are most conveniently installed using the package menu (@pxref{Package Menu}), but you can also use the command @kbd{M-x package-install}.  This prompts for the name of a package with the @samp{available} status, then downloads and installs it."
msgstr "パッケージを一番便利にインストールするのはパッケージメニューを使う方法(@ref{Package Menu}を参照してください)ですが、コマンド@kbd{M-x package-install}を使用することもできます。これはステータスが@samp{available}のパッケージ名の入力を求め、それをダウンロードしてインストールします。"

#. type: cindex
#: original_texis/package.texi:167
#, no-wrap
msgid "package requirements"
msgstr "package requirements"

#. type: Plain text
#: original_texis/package.texi:175
msgid "A package may @dfn{require} certain other packages to be installed, because it relies on functionality provided by them.  When Emacs installs such a package, it also automatically downloads and installs any required package that is not already installed.  (If a required package is somehow unavailable, Emacs signals an error and stops installation.)  A package's requirements list is shown in its help buffer."
msgstr "他のパッケージが提供する機能に依存するために、それらのパッケージがインストール済みであることを@dfn{必要(require)}とするパッケージもあるでしょう。Emacsがそのようなパッケージをインストールするときは、必要なパッケージがインストールされていなければ、それらのパッケージのダウンロードとインストールも自動に行ないます(必要なパッケージが何らかの理由で利用できない場合、Emacsはエラーをシグナルしてインストールを中止します)。パッケージの必要条件リスト(requirements list)は、そのパッケージのヘルプバッファーに表示されます。"

#. type: vindex
#: original_texis/package.texi:176
#, no-wrap
msgid "package-archives"
msgstr "package-archives"

#. type: Plain text
#: original_texis/package.texi:186
msgid "By default, packages are downloaded from a single package archive maintained by the Emacs developers.  This is controlled by the variable @code{package-archives}, whose value is a list of package archives known to Emacs.  Each list element must have the form @code{(@var{id} . @var{location})}, where @var{id} is the name of a package archive and @var{location} is the @acronym{HTTP} address or name of the package archive directory.  You can alter this list if you wish to use third party package archives---but do so at your own risk, and use only third parties that you think you can trust!"
msgstr "デフォルトでは、パッケージはEmacs開発者により保守される単一のパッケージアーカイブからダウンロードされます。これは変数@code{package-archives}により制御されます。この変数の値は、Emacsが認識するパッケージアーカイブのリストです。リストの各要素は@code{(@var{id} . @var{location})}という形式でなければなりません。ここで、@var{id}はパッケージアーカイブの名前、@var{location}はパッケージアーカイブディレクトリーの@acronym{HTTP}アドレスか名前です。サードパーティーのアーカイブを使用したい場合はこのリストを変更できます --- が、自己責任で行い、信用できるサードパーティーだけを使用してください!"

#. type: anchor{#1}
#: original_texis/package.texi:188
msgid "Package Signing"
msgstr "Package Signing"

#. type: cindex
#: original_texis/package.texi:188
#, no-wrap
msgid "package security"
msgstr "package security"

#. type: cindex
#: original_texis/package.texi:189
#, no-wrap
msgid "package signing"
msgstr "package signing"

#. type: Plain text
#: original_texis/package.texi:212
msgid "The maintainers of package archives can increase the trust that you can have in their packages by @dfn{signing} them.  They generate a private/public pair of cryptographic keys, and use the private key to create a @dfn{signature file} for each package.  With the public key, you can use the signature files to verify the package creator and make sure the package has not been tampered with.  Signature verification uses @uref{https://www.gnupg.org/, the GnuPG package} via the EasyPG interface (@pxref{Top,, EasyPG, epa, Emacs EasyPG Assistant Manual}).  A valid signature is not a cast-iron guarantee that a package is not malicious, so you should still exercise caution.  Package archives should provide instructions on how you can obtain their public key.  One way is to download the key from a server such as @url{https://pgp.mit.edu/}.  Use @kbd{M-x package-import-keyring} to import the key into Emacs.  Emacs stores package keys in the directory specified by the variable @code{package-gnupghome-dir}, by default in the @file{gnupg} subdirectory of @code{package-user-dir}, which causes Emacs to invoke GnuPG with the option @samp{--homedir} when verifying signatures.  If @code{package-gnupghome-dir} is @code{nil}, GnuPG's option @samp{--homedir} is omitted.  The public key for the GNU package archive is distributed with Emacs, in the @file{etc/package-keyring.gpg}.  Emacs uses it automatically."
msgstr "パッケージアーカイブのメンテナーは、パッケージに@dfn{サイン(signing)}を付して、信頼度を増すことができます。これらはプライベートとパブリックのペアーからなる暗号化キーにより生成されます。プライベートキーは各パッケージにたいする@dfn{署名ファイル(signature file)}を作成するのに使用されます。パブリックキーにより、署名ファイルを使用してそのパッケージ作成者と、それが改ざんされていないかを確認できます。署名の検証は、EasyPGインターフェイス(@ref{Top,, EasyPG, epa, Emacs EasyPG Assistant Manual}を参照)を通じて@uref{https://www.gnupg.org/, the GnuPG package}を使用します(@ref{Top,, EasyPG, epa, Emacs EasyPG Assistant Manual}を参照)。有効な署名であっても、それが悪意がないパッケージであることを厳正に保証する訳ではなく、用心するべきです。パッケージアーカイブは、パブリックキーの入手方法について、説明を提供するべきです。@url{http://pgp.mit.edu/}のようなサーバーからキーをダウンロードするのも1つの方法です。Emacsにキーをインポートするには、@kbd{M-x package-import-keyring}を使用します。Emacsは変数@code{package-user-dir}で指定されるディレクトリー(デフォルトは@code{package-gnupghome-dir}のサブディレクトリー@file{gnupg})にパッケージキーを格納します。これにより、Emacsが署名を検証する際に、オプション@file{gnupg}でGnuPGを呼び出すようになります。@code{package-gnupghome-dir}が@code{nil},の場合は、GnuPGのオプション@samp{--homedir}は省略します。GNUパッケージアーカイブにたいするパブリックキーはEmacsと共に配布され、@file{etc/package-keyring.gpg}にあります。Emacsはこれを自動的に使用します。"

#. type: vindex
#: original_texis/package.texi:213
#, no-wrap
msgid "package-check-signature"
msgstr "package-check-signature"

#. type: vindex
#: original_texis/package.texi:214
#, no-wrap
msgid "package-unsigned-archives"
msgstr "package-unsigned-archives"

#. type: Plain text
#: original_texis/package.texi:220
msgid "If the user option @code{package-check-signature} is non-@code{nil}, Emacs attempts to verify signatures when you install packages.  If the option has the value @code{allow-unsigned}, you can still install a package that is not signed.  If you use some archives that do not sign their packages, you can add them to the list @code{package-unsigned-archives}."
msgstr "ユーザーオプション@code{package-check-signature}が非@code{nil}の場合、Emacsはパッケージのインストール時に書名の検証を試みます。このオプションが値@code{allow-unsigned}をもつ場合、サインされていないパッケージのインストールができます。パッケージにサインしないアーカイブを使用する場合、それらを@code{package-unsigned-archives}に追加できます。"

#. type: Plain text
#: original_texis/package.texi:225
msgid "For more information on cryptographic keys and signing, @pxref{Top,, GnuPG, gnupg, The GNU Privacy Guard Manual}.  Emacs comes with an interface to GNU Privacy Guard, @pxref{Top,, EasyPG, epa, Emacs EasyPG Assistant Manual}."
msgstr "暗号化キーとサインについての詳細は、@ref{Top,, GnuPG, gnupg, The GNU Privacy Guard Manual}を参照してください。EmacsのGNU Privacy Guardにたいするインターフェースについては、@ref{Top,, EasyPG, epa, Emacs EasyPG Assistant Manual}を参照してください。"

#. type: vindex
#: original_texis/package.texi:226
#, no-wrap
msgid "package-pinned-packages"
msgstr "package-pinned-packages"

#. type: Plain text
#: original_texis/package.texi:232
msgid "If you have more than one package archive enabled, and some of them offer different versions of the same package, you may find the option @code{package-pinned-packages} useful.  You can add package/archive pairs to this list, to ensure that the specified package is only ever downloaded from the specified archive."
msgstr "複数のパッケージアーカイブが有効で、同じパッケージにたいして異なるバージョンを提供する場合は、オプション@code{package-pinned-packages}が便利かもしれません。指定したパッケージが指定されたアーカイブだけからダウンロードされるように、このリストにパッケージとアーカイブのペアーを追加できます。"

#. type: vindex
#: original_texis/package.texi:233
#, no-wrap
msgid "package-archive-priorities"
msgstr "package-archive-priorities"

#. type: vindex
#: original_texis/package.texi:234
#, no-wrap
msgid "package-menu-hide-low-priority"
msgstr "package-menu-hide-low-priority"

#. type: Plain text
#: original_texis/package.texi:243
msgid "Another option that is useful when you have several package archives enabled is @code{package-archive-priorities}.  It specifies the priority of each archive (higher numbers specify higher priority archives).  By default, archives have the priority of zero, unless specified otherwise by this option's value.  Packages from lower-priority archives will not be shown in the menu, if the same package is available from a higher-priority archive.  (This is controlled by the value of @code{package-menu-hide-low-priority}.)"
msgstr "複数の有効なパッケージアーカイブがあるときに便利な他のオプションとして、@code{package-archive-priorities}があります。これは各アーカイブにたいして、優先度(高い数字は高い優先度のアーカイブを指定します)を指定します。このオプションにより指定されない限り、アーカイブの優先度はデフォルトの0です。優先度高のアーカイブのパッケージが利用可能な場合、優先度低のアーカイブのパッケージはメニューに表示されません(これは@code{package-menu-hide-low-priority}の値により制御されます)。"

#. type: Plain text
#: original_texis/package.texi:252
msgid "Once a package is downloaded and installed, it is @dfn{loaded} into the current Emacs session.  Loading a package is not quite the same as loading a Lisp library (@pxref{Lisp Libraries}); loading a package adds its directory to @code{load-path} and loads its autoloads.  The effect of a package's autoloads varies from package to package.  Most packages just make some new commands available, while others have more wide-ranging effects on the Emacs session.  For such information, consult the package's help buffer."
msgstr "1度パッケージをダウンロードしてインストールすると、そのパッケージはカレントEmacsセッションに@dfn{ロード}されます。パッケージのロードは、Lispライブラリーのロード(@ref{Lisp Libraries}を参照してください)とまったく同一ではありません。パッケージをロードすることにより、パッケージのディレクトリーを@code{load-path}に追加して、パッケージのautoloadをロードします。パッケージのautoloadの効果はパッケージごとにさまざまです。ほとんどのパッケージは、いくつかの新たなコマンドを利用可能にするだけですが、Emacsセッションにたいして広範な影響を及ぼすものもあります。この種の情報については、パッケージのヘルプバッファーを参照してください。"

#. type: Plain text
#: original_texis/package.texi:258
msgid "By default, Emacs also automatically loads all installed packages in subsequent Emacs sessions.  This happens at startup, after processing the init file (@pxref{Init File}).  As an exception, Emacs does not load packages at startup if invoked with the @samp{-q} or @samp{--no-init-file} options (@pxref{Initial Options})."
msgstr "デフォルトでは、インストールされたパッケージは、Emacsその後のはセッションで、自動的にロードされます。これはEmacs開始時、initファイル処理後(@ref{Init File}を参照してください)に行なわれます。例外として、@samp{-q}または@samp{--no-init-file}オプション(@ref{Initial Options}を参照してください)で呼び出されたときは、Emacs開始時のパッケージのロードは行なわれません。"

#. type: vindex
#: original_texis/package.texi:259
#, no-wrap
msgid "package-enable-at-startup"
msgstr "package-enable-at-startup"

#. type: Plain text
#: original_texis/package.texi:262
msgid "To disable automatic package loading, change the variable @code{package-enable-at-startup} to @code{nil}."
msgstr "自動的なパッケージのロードを無効にするには、変数@code{package-enable-at-startup}を@code{nil}に変更してください。"

#. type: findex
#: original_texis/package.texi:263
#, no-wrap
msgid "package-initialize"
msgstr "package-initialize"

#. type: Plain text
#: original_texis/package.texi:278
msgid "The reason automatic package loading occurs after loading the init file is that user options only receive their customized values after loading the init file, including user options which affect the packaging system.  In some circumstances, you may want to load packages explicitly in your init file (usually because some other code in your init file depends on a package).  In that case, your init file should call the function @code{package-initialize}.  It is up to you to ensure that relevant user options, such as @code{package-load-list} (see below), are set up prior to the @code{package-initialize} call.  This will automatically set @code{package-enable-at-startup} to @code{nil}, to avoid loading the packages again after processing the init file.  Alternatively, you may choose to completely inhibit package loading at startup, and invoke the command @kbd{M-x package-initialize} to load your packages manually."
msgstr "自動的なパッケージのロードがinitファイルのロード後である理由は、(パッケージシステムに影響するものも含む)ユーザーオプションが、カスタマイズされた値を受けとるのがinitファイルのロード後だからです。initファイルの中で明示的にパッケージをロードしたい状況があるかもしれません(たいていは、initファイルの他のコードが、あるパッケージに依存する等の理由により)。そのような場合、initファイルで関数@code{package-initialize}を呼び出す必要があります。@code{package-initialize}の呼び出しの前に、@code{package-load-list}(以下参照)などの関連するユーザーオプションをセットアップするのは、あなたの責任です。initファイルを処理した後に、これにより、パッケージを重複してロードするのを避けるために、自動的に@code{package-enable-at-startup}が@code{nil}にセットされます。かわりに、開始時にパッケージのロードを完全に抑止して、後でコマンド@kbd{M-x package-initialize}を呼び出して手動でパッケージをロードする方法を選択したいと思うかもしれません。"

#. type: vindex
#: original_texis/package.texi:279
#, no-wrap
msgid "package-load-list"
msgstr "package-load-list"

#. type: Plain text
#: original_texis/package.texi:291
msgid "For finer control over package loading, you can use the variable @code{package-load-list}.  Its value should be a list.  A list element of the form @code{(@var{name} @var{version})} tells Emacs to load version @var{version} of the package named @var{name}.  Here, @var{version} should be a version string (corresponding to a specific version of the package), or @code{t} (which means to load any installed version), or @code{nil} (which means no version; this disables the package, preventing it from being loaded).  A list element can also be the symbol @code{all}, which means to load the latest installed version of any package not named by the other list elements.  The default value is just @code{'(all)}."
msgstr "パッケージのロードをより精密に制御するために、変数@code{package-load-list}を使用することができます。この変数の値にはリストを指定します。リストの要素は@code{(@var{name} @var{version})}という形式で、これはEmacsにパッケージ名@var{name}のバージョン@var{version}をロードするよう指示します。ここで、@var{version}には、(そのパッケージの特定のバージョンに対応する)バージョン文字列か、@code{t}(これは任意のインストール済みのバージョンを意味します)、または@code{nil}(これはバージョンを意味しません。パッケージがロードされるのを防いで、そのパッケージを無効にします)を指定します。リストの要素にはシンボル@code{all}も指定でき、これは他のリスト要素で名前指定されていない、任意のパッケージのインストール済みバージョンをロードすることを意味します。デフォルト値は、単に@code{'(all)}となっています。"

#. type: Plain text
#: original_texis/package.texi:298
msgid "For example, if you set @code{package-load-list} to @code{'((muse \"3.20\") all)}, then Emacs only loads version 3.20 of the @samp{muse} package, plus any installed version of packages other than @samp{muse}.  Any other version of @samp{muse} that happens to be installed will be ignored.  The @samp{muse} package will be listed in the package menu with the @samp{held} status."
msgstr "たとえば@code{package-load-list}を@code{'((muse \"3.20\") all)}にセットした場合、Emacsは@samp{muse}のバージョン3.20と、@samp{muse}以外のパッケージのインストール済みの任意のバージョンをロードします。@samp{muse}の他のバージョンがインストールされていたとしても、それらは無視されます。@samp{muse}パッケージは、@samp{held}というステータスでパッケージメニューにリストされるはずです。"

#. type: section
#: original_texis/package.texi:300
#, no-wrap
msgid "Package Files and Directory Layout"
msgstr "パッケージのファイルとディレクトリー"

#. type: cindex
#: original_texis/package.texi:301
#, no-wrap
msgid "package directory"
msgstr "package directory"

#. type: cindex
#: original_texis/package.texi:303
#, no-wrap
msgid "package file"
msgstr "package file"

#. type: findex
#: original_texis/package.texi:304
#, no-wrap
msgid "package-install-file"
msgstr "package-install-file"

#. type: Plain text
#: original_texis/package.texi:314
msgid "Each package is downloaded from the package archive in the form of a single @dfn{package file}---either an Emacs Lisp source file, or a tar file containing multiple Emacs Lisp source and other files.  Package files are automatically retrieved, processed, and disposed of by the Emacs commands that install packages.  Normally, you will not need to deal directly with them, unless you are making a package (@pxref{Packaging,,,elisp, The Emacs Lisp Reference Manual}).  Should you ever need to install a package directly from a package file, use the command @kbd{M-x package-install-file}."
msgstr "各パッケージはパッケージアーカイブから単一ファイル形式 －－－ 1つのEmacs Lispソースファイル、または複数のEmacs Lispソースと他のファイルを含むtarファイル --- でダウンロードされます。パッケージファイルは、パッケージをインストールするEmacsコマンドにより自動的に取得、処理、配置されます。パッケージを作成する(@ref{Packaging,,,elisp, The Emacs Lisp Reference Manual}を参照してください)のでない限り、通常これらを直接扱う必要はないでしょう。パッケージファイルから直接パッケージをインストールする必要があるときは、コマンド@kbd{M-x package-install-file}を使用してください。"

#. type: vindex
#: original_texis/package.texi:315
#, no-wrap
msgid "package-user-dir"
msgstr "package-user-dir"

#. type: Plain text
#: original_texis/package.texi:322
msgid "Once installed, the contents of a package are placed in a subdirectory of @file{~/.emacs.d/elpa/} (you can change the name of that directory by changing the variable @code{package-user-dir}).  The package subdirectory is named @file{@var{name}-@var{version}}, where @var{name} is the package name and @var{version} is its version string."
msgstr "1度インストールされると、パッケージの内容はそのサブディレクトリーに配置されます(変数@code{package-user-dir}を変更することにより、ディレクトリーの名前を変更できます)。パッケージのサブディレクトリーは@file{@var{name}-@var{version}}という名前で、@var{name}はパッケージ名、@var{version}はバージョン文字列です。"

#. type: cindex
#: original_texis/package.texi:323
#, no-wrap
msgid "system-wide packages"
msgstr "system-wide packages"

#. type: vindex
#: original_texis/package.texi:324
#, no-wrap
msgid "package-directory-list"
msgstr "package-directory-list"

#. type: Plain text
#: original_texis/package.texi:331
msgid "In addition to @code{package-user-dir}, Emacs looks for installed packages in the directories listed in @code{package-directory-list}.  These directories are meant for system administrators to make Emacs packages available system-wide; Emacs itself never installs packages there.  The package subdirectories for @code{package-directory-list} are laid out in the same way as in @code{package-user-dir}."
msgstr "@code{package-user-dir}に加えて、Emacsは@code{package-directory-list}にリストされたディレクトリーからインストール済みパッケージを探します。これらのディレクトリーはシステム管理者のためのディレクトリーで、Emacsパッケージをシステムワイドに利用可能にするためのものです。Emacs自身がこれらのディレクトリーにパッケージをインストールすることはありません。@code{package-directory-list}にたいするパッケージのサブディレクトリーは、@code{package-user-dir}と同じ方法で配置されます。"

#. type: Plain text
#: original_texis/package.texi:335
msgid "Deleting a package (@pxref{Package Menu}) involves deleting the corresponding package subdirectory.  This only works for packages installed in @code{package-user-dir}; if told to act on a package in a system-wide package directory, the deletion command signals an error."
msgstr "パッケージの削除(@ref{Package Menu}を参照してください)は、対応するパッケージのサブディレクトリーを削除します。これは@code{package-user-dir}にインストールされたパッケージだけに機能します。システムワイドなパッケージディレクトリーにたいして呼び出された場合、削除コマンドはエラーをシグナルします。"
