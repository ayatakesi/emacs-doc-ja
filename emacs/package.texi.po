# Japanese translation of Emacs-25.2 editor manual
# Copyright (C) 2016 Free Software Foundation, Inc.
# This file is distributed under the same license as the Emacs package.
# Ayanokoji Takesi <ayanokoji.takesi@gmail.com>.
#
msgid ""
msgstr ""
"Project-Id-Version: 26.1.91\n"
"POT-Creation-Date: 2024-08-24 20:08+0000\n"
"PO-Revision-Date: 2024-06-04 12:23+0900\n"
"Last-Translator: Ayanokoji Takesi <ayanokoji.takesi@gmail.com>\n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: node
#: original_texis/package.texi:5
#, no-wrap
msgid "Packages"
msgstr "Packages"

#. type: chapter
#: original_texis/package.texi:6
#, no-wrap
msgid "Emacs Lisp Packages"
msgstr "Emacs Lispパッケージ"

#. type: cindex
#: original_texis/package.texi:7
#, no-wrap
msgid "Package"
msgstr "Package"

#. type: cindex
#: original_texis/package.texi:8
#, no-wrap
msgid "Package archive"
msgstr "Package archive"

#. type: Plain text
#: original_texis/package.texi:20
msgid "Emacs is extended by implementing additional features in @dfn{packages}, which are Emacs Lisp libraries.  These could be written by you or provided by someone else.  If you want to install such a package so it is available in your future Emacs session, you need to compile it and put it in a directory where Emacs looks for Lisp libraries.  @xref{Lisp Libraries}, for more details about this manual installation method.  Many packages provide installation and usage instructions in the large commentary near the beginning of the Lisp file; you can use those instructions for installing and fine-tuning your use of the package."
msgstr "EmacsはEmacs Lispライブラリーである@dfn{パッケージ(packages)}で追加機能を実装することにより拡張可能です。これらは自分で記述することも、他の人が提供することもあります。そのようなパッケージを将来のEmacsセッションで利用できるようにインストールしたい場合には、それらをコンパイルしてEmacsがLispライブラリーを探すディレクトリーに配置する必要があります。手動によるインストール手法の詳細は@ref{Lisp Libraries}を参照してください。多くのパッケージにはLispファイルの先頭付近にインストールと使用方法の手順が大きくコメントされています。パッケージのインストールと使用方法の微調整にこれらの手順を使用できます。"

#. type: cindex
#: original_texis/package.texi:21
#, no-wrap
msgid "Emacs Lisp package archive"
msgstr "Emacs Lisp package archive"

#. type: Plain text
#: original_texis/package.texi:28
msgid "Packages can also be provided by @dfn{package archives}, which are large collections of Emacs Lisp packages.  Each package is a separate Emacs Lisp program, sometimes including other components such as an Info manual.  Emacs includes a facility that lets you easily download and install packages from such archives.  The rest of this chapter describes this facility."
msgstr "パッケージは巨大なEmacs Lispパッケージのコレクションである@dfn{パッケージアーカイブ(package archives)}から提供されることもあります。それぞれのパッケージは個別のEmacs Lispプログラムと、Infoマニュアルのような別のコンポーネントを含むこともあります。Emacsにはそのようなアーカイブから簡単にパッケージをダウンロードしてインストールする機能が含まれています。このチャプターの残りの部分ではその機能について説明します。"

#. type: Plain text
#: original_texis/package.texi:33
msgid "To list the packages available for installation from package archives, type @w{@kbd{M-x list-packages @key{RET}}}.  It brings up a buffer named @file{*Packages*} with a list of all packages.  You can install or uninstall packages via this buffer.  @xref{Package Menu}."
msgstr "パッケージアーカイブからのインストールで利用可能なパッケージをリストするには@w{@kbd{M-x list-packages @key{RET}}}とタイプします。@kbd{M-x list-packages}により、すべてのパッケージのリストを含む、@file{*Packages*}という名前のバッファーが表示されます。このバッファーを通じてパッケージをインストールしたりアンインストールできます。@ref{Package Menu}を参照してください。"

#. type: Plain text
#: original_texis/package.texi:37
msgid "The command @kbd{C-h P} (@code{describe-package}) prompts for the name of a package, and displays a help buffer describing the attributes of the package and the features that it implements."
msgstr "コマンド@kbd{C-h P} (@code{describe-package})はパッケージ名の入力を求め、そのパッケージの属性や、実装する機能を説明するヘルプバッファーを表示します。"

#. type: Plain text
#: original_texis/package.texi:42
msgid "By default, Emacs downloads packages from a package archive maintained by the Emacs developers and hosted by the GNU project.  Optionally, you can also download packages from archives maintained by third parties.  @xref{Package Installation}."
msgstr "デフォルトでは、Emacsはemacs開発者により保守されGNUプロジェクトによりホスティングされるパッケージアーカイブからパッケージをダウンロードします。オプションでサードパーティーにより保守されるアーカイブから、パッケージをダウンロードすることもできます。@ref{Package Installation}を参照してください。"

#. type: Plain text
#: original_texis/package.texi:46
msgid "For information about turning an Emacs Lisp program into an installable package, @xref{Packaging,,,elisp, The Emacs Lisp Reference Manual}."
msgstr "Emacs Lispのプログラムをインストール可能なパッケージに変更する情報に関しては、@ref{Packaging,,,elisp, The Emacs Lisp Reference Manual}を参照してください。"

#. type: node
#: original_texis/package.texi:53 original_texis/package.texi:55
#, no-wrap
msgid "Package Menu"
msgstr "Package Menu"

#. type: menuentry
#: original_texis/package.texi:53
msgid "Buffer for viewing and managing packages."
msgstr "パッケージを閲覧・管理するためのバッファー。"

#. type: section
#: original_texis/package.texi:53 original_texis/package.texi:289
#: original_texis/package.texi:290
#, no-wrap
msgid "Package Statuses"
msgstr "Package Statuses"

#. type: menuentry
#: original_texis/package.texi:53
msgid "Which statuses a package can have."
msgstr "パッケージが保有できるステータス。"

#. type: section
#: original_texis/package.texi:53 original_texis/package.texi:346
#: original_texis/package.texi:347
#, no-wrap
msgid "Package Installation"
msgstr "Package Installation"

#. type: menuentry
#: original_texis/package.texi:53
msgid "Options for package installation."
msgstr "パッケージのインストールにたいするオプション。"

#. type: node
#: original_texis/package.texi:53 original_texis/package.texi:550
#, no-wrap
msgid "Package Files"
msgstr "Package Files"

#. type: menuentry
#: original_texis/package.texi:53
msgid "Where packages are installed."
msgstr "パッケージがインストールされる場所。"

#. type: section
#: original_texis/package.texi:53 original_texis/package.texi:588
#: original_texis/package.texi:589
#, no-wrap
msgid "Fetching Package Sources"
msgstr "Fetching Package Sources"

#. type: menuentry
#: original_texis/package.texi:53
msgid "Managing packages directly from source."
msgstr "Managing packages directly from source."

#. type: section
#: original_texis/package.texi:56
#, no-wrap
msgid "The Package Menu Buffer"
msgstr "Package Menuバッファー"

#. type: cindex
#: original_texis/package.texi:57
#, no-wrap
msgid "package menu"
msgstr "package menu"

#. type: cindex
#: original_texis/package.texi:58 original_texis/package.texi:304
#, no-wrap
msgid "built-in package"
msgstr "built-in package"

#. type: findex
#: original_texis/package.texi:59
#, no-wrap
msgid "list-packages"
msgstr "list-packages"

#. type: Plain text
#: original_texis/package.texi:64
msgid "The command @kbd{M-x list-packages} brings up the @dfn{package menu}.  This is a buffer listing all the packages that Emacs knows about, one on each line, with the following information:"
msgstr "コマンド@kbd{M-x list-packages}は、@dfn{パッケージメニュー(package menu)}を立ち上げます。これはEmacsが把握するすべてのパッケージをリストするバッファーです。リストの各行には以下の情報が表示されます:"

#. type: itemize
#: original_texis/package.texi:68
msgid "The package name (e.g., @samp{auctex})."
msgstr "パッケージ名(例: @samp{auctex})。"

#. type: itemize
#: original_texis/package.texi:71
msgid "The package's version number (e.g., @samp{11.86})."
msgstr "パッケージのバージョン番号(例: @samp{11.86})。"

#. type: itemize
#: original_texis/package.texi:78
msgid "The package's status---normally one of @samp{available} (can be downloaded from the package archive), @samp{installed}, or @samp{built-in} (included in Emacs by default).  @xref{Package Statuses}."
msgstr "パッケージのステータスは通常は@samp{available} (パッケージアーカイブからダウンロード可能)、@samp{installed}、@samp{built-in} (デフォルトでEmacsに同梱)のいずれかです。@ref{Package Statuses}.<を参照してください。"

#. type: itemize
#: original_texis/package.texi:82
msgid "Which package archive this package is from, if you have more than one package archive enabled."
msgstr "複数のパッケージアーカイブが有効ならそのパッケージがどのパッケージアーカイブのものか。"

#. type: itemize
#: original_texis/package.texi:85
msgid "A short description of the package."
msgstr "パッケージの短い説明。"

#. type: Plain text
#: original_texis/package.texi:92
msgid "The @code{list-packages} command accesses the network, to retrieve the list of available packages from package archive servers.  If the network is unavailable, it falls back on the most recently retrieved list."
msgstr "@code{list-packages}は、パッケージアーカイブサーバーから利用可能なパッケージのリストを取得するために、ネットワークにアクセスします。ネットワークが利用できない場合、一番最近取得したリストにフォールバックします。"

#. type: Plain text
#: original_texis/package.texi:97
msgid "The main command to use in the package list buffer is the @key{x} command.  If the package under point isn't installed already, this command will install it.  If the package under point is already installed, this command will delete it."
msgstr "パッケージリストバッファーで主に使うことになるコマンドが@key{x}コマンドです。ポイント位置にあるパッケージがまだインストールされていなければ、このコマンドがそのパッケージをインストールします。そしてもしインストール済みのパッケージなら、このコマンドはそのパッケージを削除するのです。"

#. type: Plain text
#: original_texis/package.texi:99
msgid "The following commands are available in the package menu:"
msgstr "パッケージメニューでは、以下のコマンドが利用可能です:"

#. type: item
#: original_texis/package.texi:101
#, no-wrap
msgid "h"
msgstr "h"

#. type: kindex
#: original_texis/package.texi:102
#, no-wrap
msgid "h @r{(Package Menu)}"
msgstr "h @r{(Package Menu)}"

#. type: findex
#: original_texis/package.texi:103
#, no-wrap
msgid "package-menu-quick-help"
msgstr "package-menu-quick-help"

#. type: table
#: original_texis/package.texi:106
msgid "Print a short message summarizing how to use the package menu (@code{package-menu-quick-help})."
msgstr "パッケージメニューの使い方を要約した短いメッセージを表示します(@code{package-menu-quick-help})。"

#. type: item
#: original_texis/package.texi:107
#, no-wrap
msgid "?"
msgstr "?"

#. type: key{#1}
#: original_texis/package.texi:108
#, no-wrap
msgid "RET"
msgstr "RET"

#. type: kindex
#: original_texis/package.texi:109
#, no-wrap
msgid "? @r{(Package Menu)}"
msgstr "? @r{(Package Menu)}"

#. type: kindex
#: original_texis/package.texi:110
#, no-wrap
msgid "RET @r{(Package Menu)}"
msgstr "RET @r{(Package Menu)}"

#. type: findex
#: original_texis/package.texi:111
#, no-wrap
msgid "package-menu-describe-package"
msgstr "package-menu-describe-package"

#. type: table
#: original_texis/package.texi:115
msgid "Display a help buffer for the package on the current line (@code{package-menu-describe-package}), similar to the help window displayed by the @kbd{C-h P} command (@pxref{Packages})."
msgstr "カレント行のパッケージにたいして、@kbd{C-h P}コマンド(@ref{Packages}を参照してください)により表示されるヘルプウィンドウと同様の、ヘルプバッファーを表示します(@code{package-menu-describe-package})。"

#. type: item
#: original_texis/package.texi:116
#, no-wrap
msgid "i"
msgstr "i"

#. type: kindex
#: original_texis/package.texi:117
#, no-wrap
msgid "i @r{(Package Menu)}"
msgstr "i @r{(Package Menu)}"

#. type: findex
#: original_texis/package.texi:118
#, no-wrap
msgid "package-menu-mark-install"
msgstr "package-menu-mark-install"

#. type: table
#: original_texis/package.texi:124
msgid "Mark the package on the current line for installation (@code{package-menu-mark-install}).  If the package status is @samp{available}, this adds an @samp{I} character to the start of the line; typing @kbd{x} (see below) will download and install the package."
msgstr "カレント行のパッケージをインストールのためにマークします(@code{package-menu-mark-install})。パッケージのステータスが@samp{available}の場合、行の先頭に文字@samp{I}を追加します。@kbd{x}とタイプすると、パッケージをダウンロードしてインストールします(以下参照)。"

#. type: item
#: original_texis/package.texi:125
#, no-wrap
msgid "d"
msgstr "d"

#. type: kindex
#: original_texis/package.texi:126
#, no-wrap
msgid "d @r{(Package Menu)}"
msgstr "d @r{(Package Menu)}"

#. type: findex
#: original_texis/package.texi:127
#, no-wrap
msgid "package-menu-mark-delete"
msgstr "package-menu-mark-delete"

#. type: table
#: original_texis/package.texi:134
msgid "Mark the package on the current line for deletion (@code{package-menu-mark-delete}).  If the package status is @samp{installed}, this adds a @samp{D} character to the start of the line; typing @kbd{x} (see below) will delete the package.  @xref{Package Files}, for information about what package deletion entails."
msgstr "カレント行のパッケージを削除のためにマークします(@code{package-menu-mark-delete})。パッケージのステータスが@samp{installed}の場合、行の先頭に文字@samp{D}を追加します。@kbd{x}とタイプすると、パッケージを削除します(以下参照)。パッケージ削除の結果、何が起こるかについての情報は、@ref{Package Files}を参照してください。"

#. type: item
#: original_texis/package.texi:135
#, no-wrap
msgid "w"
msgstr "w"

#. type: kindex
#: original_texis/package.texi:136
#, no-wrap
msgid "w @r{(Package Menu)}"
msgstr "w @r{(Package Menu)}"

#. type: findex
#: original_texis/package.texi:137
#, no-wrap
msgid "package-browse-url"
msgstr "package-browse-url"

#. type: table
#: original_texis/package.texi:141
msgid "Open the package website on the current line in a browser (@code{package-browse-url}).  @code{browse-url} is used to open the browser."
msgstr "カレント行にあるパッケージのウェブサイトをブラウザでオープンします。ブラウザのオープンには@code{browse-url}を使用します。"

#. type: item
#: original_texis/package.texi:142
#, no-wrap
msgid "~"
msgstr "~"

#. type: kindex
#: original_texis/package.texi:143
#, no-wrap
msgid "~ @r{(Package Menu)}"
msgstr "~ @r{(Package Menu)}"

#. type: findex
#: original_texis/package.texi:144
#, no-wrap
msgid "package-menu-mark-obsolete-for-deletion"
msgstr "package-menu-mark-obsolete-for-deletion"

#. type: table
#: original_texis/package.texi:148
msgid "Mark all obsolete packages for deletion (@code{package-menu-mark-obsolete-for-deletion}).  This marks for deletion all the packages whose status is @samp{obsolete}."
msgstr "削除のためにすべての時代遅れのパッケージobsolete packagesをマークします(@code{package-menu-mark-obsolete-for-deletion})。これは状態が@samp{obsolete}の、すべてのパッケージを削除のためにマークします。"

#. type: item
#: original_texis/package.texi:149
#, no-wrap
msgid "u"
msgstr "u"

#. type: key{#1}
#: original_texis/package.texi:150
#, no-wrap
msgid "DEL"
msgstr "DEL"

#. type: kindex
#: original_texis/package.texi:151
#, no-wrap
msgid "u @r{(Package Menu)}"
msgstr "u @r{(Package Menu)}"

#. type: findex
#: original_texis/package.texi:152
#, no-wrap
msgid "package-menu-mark-unmark"
msgstr "package-menu-mark-unmark"

#. type: table
#: original_texis/package.texi:156
msgid "Remove any installation or deletion mark previously added to the current line by an @kbd{i} or @kbd{d} command (@code{package-menu-mark-unmark})."
msgstr "@kbd{i}や@kbd{d}コマンドによりカレント行に追加された、以前のインストールや削除マークを外します(@code{package-menu-mark-unmark})。"

#. type: item
#: original_texis/package.texi:157
#, no-wrap
msgid "U"
msgstr "U"

#. type: kindex
#: original_texis/package.texi:158
#, no-wrap
msgid "U @r{(Package Menu)}"
msgstr "U @r{(Package Menu)}"

#. type: findex
#: original_texis/package.texi:159
#, no-wrap
msgid "package-menu-mark-upgrades"
msgstr "package-menu-mark-upgrades"

#. type: table
#: original_texis/package.texi:170
msgid "Mark all package with a newer available version for upgrading (@code{package-menu-mark-upgrades}).  This places an installation mark on the new available versions, and a deletion mark on the old installed versions (marked with status @samp{obsolete}).  By default, this won't mark built-in packages for which a newer version is available, but customizing @code{package-install-upgrade-built-in} can change that.  @xref{Package Installation}.  If you customize @code{package-install-upgrade-built-in} to a non-@code{nil} value, be sure to review all the built-in packages the @kbd{U} command marks, to avoid updating built-in packages you don't want to overwrite."
msgstr "新しいバージョンが利用可能なパッケージすべてをアップグレード用にマークします(@code{package-menu-mark-upgrades})。このコマンドによって利用可能な新たなバージョンにはインストール用のマーク、インストール済みの古いバージョンには(@samp{obsolete}という状態のマークとともに)削除用のマークがつけられます。デフォルトではビルトインパッケージには利用可能な新しいバージョン用にマークしませんが、@code{package-install-upgrade-built-in}をカスタマイズして変更できます。@ref{Package Installation}を参照してください。@code{package-install-upgrade-built-in}を非@code{nil}値にカスタマイズする場合には、上書きされたくないビルトインパッケージの更新を避けるために、@kbd{U}コマンドがマークしたビルトインパッケージすべてを確認してください。"

#. type: item
#: original_texis/package.texi:171
#, no-wrap
msgid "x"
msgstr "x"

#. type: kindex
#: original_texis/package.texi:172
#, no-wrap
msgid "x @r{(Package Menu)}"
msgstr "x @r{(Package Menu)}"

#. type: vindex
#: original_texis/package.texi:173
#, no-wrap
msgid "package-menu-async"
msgstr "package-menu-async"

#. type: findex
#: original_texis/package.texi:174
#, no-wrap
msgid "package-menu-execute"
msgstr "package-menu-execute"

#. type: table
#: original_texis/package.texi:181
msgid "Download and install all packages marked with @kbd{i}, and their dependencies; also, delete all packages marked with @kbd{d} (@code{package-menu-execute}).  This also removes the marks.  If no packages are marked, this command will install the package under point (if it isn't installed already), or delete the package under point (if it's already installed)."
msgstr "@kbd{i}でマークされたすべてのパッケージをダウンロードしてインストールするとともに、@kbd{d}でマークされたすべてのパッケージを削除します(@code{package-menu-execute})。これによりマークは削除されます。マークされているパッケージがなければ、このコマンドはポイントの下にあるパッケージのインストール(インストール済みでない場合)、またはパッケージの削除(インストール済みの場合)を行います。"

#. type: item
#: original_texis/package.texi:182
#, no-wrap
msgid "g"
msgstr "g"

#. type: item
#: original_texis/package.texi:183
#, no-wrap
msgid "r"
msgstr "r"

#. type: kindex
#: original_texis/package.texi:184
#, no-wrap
msgid "g @r{(Package Menu)}"
msgstr "g @r{(Package Menu)}"

#. type: kindex
#: original_texis/package.texi:185
#, no-wrap
msgid "r @r{(Package Menu)}"
msgstr "r @r{(Package Menu)}"

#. type: table
#: original_texis/package.texi:189
msgid "Refresh the package list (@code{revert-buffer}).  This fetches the list of available packages from the package archive again, and redisplays the package list."
msgstr "パッケージリストを更新します(@code{revert-buffer})。これは再度パッケージアーカイブから利用可能なパッケージのリストを取得してパッケージリストを再表示します。"

#. type: item
#: original_texis/package.texi:190
#, no-wrap
msgid "H"
msgstr "H"

#. type: kindex
#: original_texis/package.texi:191
#, no-wrap
msgid "H @r{(Package Menu)}"
msgstr "H @r{(Package Menu)}"

#. type: findex
#: original_texis/package.texi:192
#, no-wrap
msgid "package-menu-hide-package"
msgstr "package-menu-hide-package"

#. type: table
#: original_texis/package.texi:198
msgid "Hide packages whose names match a regexp (@code{package-menu-hide-package}).  This prompts for a regexp, and then hides the packages with matching names.  The default value of the regexp will hide only the package whose name is at point, so just pressing @key{RET} to the prompt will hide the current package."
msgstr "名前がregexpにマッチするパッケージを非表示にします(@code{package-menu-hide-package})。これはregexpの入力を求めて名前がマッチするパッケージを非表示にします。regexpのデフォルト値はポイント位置の名前のパッケージだけを非表示にするので、プロンプトで単に@key{RET}を押下するとカレントパッケージだけを非表示にします。"

#. type: item
#: original_texis/package.texi:199
#, no-wrap
msgid "("
msgstr "("

#. type: kindex
#: original_texis/package.texi:200
#, no-wrap
msgid "( @r{(Package Menu)}"
msgstr "( @r{(Package Menu)}"

#. type: findex
#: original_texis/package.texi:201
#, no-wrap
msgid "package-menu-toggle-hiding"
msgstr "package-menu-toggle-hiding"

#. type: table
#: original_texis/package.texi:204
msgid "Toggle visibility of old versions of packages and also of versions from lower-priority archives (@code{package-menu-toggle-hiding})."
msgstr "古いバージョンのパッケージ、および優先度低のアーカイブから取得したバージョンの可視性を切り替えます(@code{package-menu-toggle-hiding})。"

#. type: item
#: original_texis/package.texi:205
#, no-wrap
msgid "/ a"
msgstr "/ a"

#. type: kindex
#: original_texis/package.texi:206
#, no-wrap
msgid "/ a @r{(Package Menu)}"
msgstr "/ a @r{(Package Menu)}"

#. type: findex
#: original_texis/package.texi:207
#, no-wrap
msgid "package-menu-filter-by-archive"
msgstr "package-menu-filter-by-archive"

#. type: table
#: original_texis/package.texi:212
msgid "Filter package list by archive (@code{package-menu-filter-by-archive}).  This prompts for a package archive (e.g., @samp{gnu}), then shows only packages from that archive.  You can specify several archives by typing their names separated by commas."
msgstr "パッケージリストをアーカイブでフィルターします(@code{package-menu-filter-by-archive})。これはアーカイブ(例: @samp{gnu})の入力を求めて、そのアーカイブ由来のパッケージだけを表示します。アーカイブ名をカンマで区切ってタイプすれば、複数のアーカイブを指定できます。"

#. type: item
#: original_texis/package.texi:213
#, no-wrap
msgid "/ d"
msgstr "/ d"

#. type: kindex
#: original_texis/package.texi:214
#, no-wrap
msgid "/ d @r{(Package Menu)}"
msgstr "/ d @r{(Package Menu)}"

#. type: findex
#: original_texis/package.texi:215
#, no-wrap
msgid "package-menu-filter-by-description"
msgstr "package-menu-filter-by-description"

#. type: table
#: original_texis/package.texi:220
msgid "Filter package list by description (@code{package-menu-filter-by-description}).  This prompts for a regular expression, then shows only packages with descriptions matching that regexp."
msgstr "description(説明)によりパッケージリストをフィルターします(@code{package-menu-filter-by-description})。これは正規表現の入力を求めて、そのregexpにマッチするdescriptionのパッケージだけを表示します。"

#. type: item
#: original_texis/package.texi:221
#, no-wrap
msgid "/ k"
msgstr "/ k"

#. type: kindex
#: original_texis/package.texi:222
#, no-wrap
msgid "/ k @r{(Package Menu)}"
msgstr "/ k @r{(Package Menu)}"

#. type: findex
#: original_texis/package.texi:223
#, no-wrap
msgid "package-menu-filter-by-keyword"
msgstr "package-menu-filter-by-keyword"

#. type: table
#: original_texis/package.texi:228
msgid "Filter package list by keyword (@code{package-menu-filter-by-keyword}).  This prompts for a keyword (e.g., @samp{games}), then shows only packages with that keyword.  You can specify several keywords by typing them separated by commas."
msgstr "パッケージリストをキーワードでフィルターします(@code{package-menu-filter-by-keyword})。これはキーワード(例: @samp{games})の入力を求めて、そのキーワードのパッケージだけを表示します。キーワードをカンマで区切ってタイプすれば、複数のキーワードを指定できます。"

#. type: item
#: original_texis/package.texi:229
#, no-wrap
msgid "/ N"
msgstr "/ N"

#. type: kindex
#: original_texis/package.texi:230
#, no-wrap
msgid "/ N @r{(Package Menu)}"
msgstr "/ N @r{(Package Menu)}"

#. type: findex
#: original_texis/package.texi:231
#, no-wrap
msgid "package-menu-filter-by-name-or-description"
msgstr "package-menu-filter-by-name-or-description"

#. type: table
#: original_texis/package.texi:236
msgid "Filter package list by name or description (@code{package-menu-filter-by-name-or-description}).  This prompts for a regular expression, then shows only packages with a name or description matching that regexp."
msgstr "名前やdescriptionによりパッケージリストをフィルターします(@code{package-menu-filter-by-name-or-description})。これは正規表現の入力を求めて、そのregexpに名前かdescriptorがマッチするパッケージだけを表示します。"

#. type: item
#: original_texis/package.texi:237
#, no-wrap
msgid "/ n"
msgstr "/ n"

#. type: kindex
#: original_texis/package.texi:238
#, no-wrap
msgid "/ n @r{(Package Menu)}"
msgstr "/ n @r{(Package Menu)}"

#. type: findex
#: original_texis/package.texi:239
#, no-wrap
msgid "package-menu-filter-by-name"
msgstr "package-menu-filter-by-name"

#. type: table
#: original_texis/package.texi:243
msgid "Filter package list by name (@code{package-menu-filter-by-name}).  This prompts for a regular expression, then shows only packages with names matching that regexp."
msgstr "名前によりパッケージリストをフィルターします(@code{package-menu-filter-by-name})。これは正規表現の入力を求めて、そのregexpにマッチする名前のパッケージだけを表示します。"

#. type: item
#: original_texis/package.texi:244
#, no-wrap
msgid "/ s"
msgstr "/ s"

#. type: kindex
#: original_texis/package.texi:245
#, no-wrap
msgid "/ s @r{(Package Menu)}"
msgstr "/ s @r{(Package Menu)}"

#. type: findex
#: original_texis/package.texi:246
#, no-wrap
msgid "package-menu-filter-by-status"
msgstr "package-menu-filter-by-status"

#. type: table
#: original_texis/package.texi:252
msgid "Filter package list by status (@code{package-menu-filter-by-status}).  This prompts for one or more statuses (e.g., @samp{available}, @pxref{Package Statuses}), then shows only packages with matching status.  You can specify several status values by typing them separated by commas."
msgstr "パッケージリストをstatus(状態)でフィルターします(@code{package-menu-filter-by-status})。これは1つ以上のstatus(@samp{available}等, @ref{Package Statuses}を参照)の入力を求めて、そのstatusにマッチするパッケージだけを表示します。statusをカンマで区切ってタイプすれば、複数のstatusを指定できます。"

#. type: item
#: original_texis/package.texi:253
#, no-wrap
msgid "/ v"
msgstr "/ v"

#. type: kindex
#: original_texis/package.texi:254
#, no-wrap
msgid "/ v @r{(Package Menu)}"
msgstr "/ v @r{(Package Menu)}"

#. type: findex
#: original_texis/package.texi:255
#, no-wrap
msgid "package-menu-filter-by-version"
msgstr "package-menu-filter-by-version"

#. type: table
#: original_texis/package.texi:261
msgid "Filter package list by version (@code{package-menu-filter-by-version}).  This prompts first for one of the comparison symbols @samp{<}, @samp{>} or @samp{=} and for a version string, and then shows packages whose versions are correspondingly lower, equal or higher than the version you typed."
msgstr "パッケージリストをバージョンでフィルターします(@code{package-menu-filter-by-version})。これはまずバージョン文字列にたいする比較シンボルとして@samp{<}、@samp{>}、@samp{=}いずれかの入力を求めて、それに応じてタイプしたバージョンより小さい、大きい、あるいは等しいバージョンのパッケージを表示します。"

#. type: item
#: original_texis/package.texi:262
#, no-wrap
msgid "/ m"
msgstr "/ m"

#. type: kindex
#: original_texis/package.texi:263
#, no-wrap
msgid "/ m @r{(Package Menu)}"
msgstr "/ m @r{(Package Menu)}"

#. type: findex
#: original_texis/package.texi:264
#, no-wrap
msgid "package-menu-filter-marked"
msgstr "package-menu-filter-marked"

#. type: table
#: original_texis/package.texi:267
msgid "Filter package list by non-empty mark (@code{package-menu-filter-marked}).  This shows only the packages that have been marked to be installed or deleted."
msgstr "非空のマークでパッケージリストをフィルターします(@code{package-menu-filter-marked})。これはインストールまたは削除とマークされたパッケージだけを表示します。"

#. type: item
#: original_texis/package.texi:268
#, no-wrap
msgid "/ u"
msgstr "/ u"

#. type: kindex
#: original_texis/package.texi:269
#, no-wrap
msgid "/ u @r{(Package Menu)}"
msgstr "/ u @r{(Package Menu)}"

#. type: findex
#: original_texis/package.texi:270
#, no-wrap
msgid "package-menu-filter-upgradable"
msgstr "package-menu-filter-upgradable"

#. type: table
#: original_texis/package.texi:277
msgid "Filter package list to show only packages for which there are available upgrades (@code{package-menu-filter-upgradable}).  By default, this filter excludes the built-in packages for which a newer version is available, but customizing @code{package-install-upgrade-built-in} can change that.  @xref{Package Installation}."
msgstr "利用可能なアップグレードが存在するパッケージだけを表示するようパッケージリストをフィルターします(@code{package-menu-filter-upgradable})。このフィルターはデフォルトでは、ビルトインパッケージでは新しいバージョンが利用可能でも除外しますが、これは@code{package-install-upgrade-built-in}をカスタマイズして変更できます。@ref{Package Installation}を参照してください。"

#. type: item
#: original_texis/package.texi:278
#, no-wrap
msgid "/ /"
msgstr "/ /"

#. type: kindex
#: original_texis/package.texi:279
#, no-wrap
msgid "/ / @r{(Package Menu)}"
msgstr "/ / @r{(Package Menu)}"

#. type: findex
#: original_texis/package.texi:280
#, no-wrap
msgid "package-menu-filter-clear"
msgstr "package-menu-filter-clear"

#. type: table
#: original_texis/package.texi:283
msgid "Clear filter currently applied to the package list (@code{package-menu-filter-clear})."
msgstr "カレントで適用されたパッケージリストのフィルターをクリアします(@code{package-menu-filter-clear})。"

#. type: Plain text
#: original_texis/package.texi:288
msgid "For example, you can install a package by typing @kbd{i} on the line listing that package, followed by @kbd{x}."
msgstr "たとえばパッケージをインストールするには、そのパッケージの行で@kbd{i}をタイプしてから、@kbd{x}をタイプします。"

#. type: cindex
#: original_texis/package.texi:291
#, no-wrap
msgid "package status"
msgstr "package status"

#. type: Plain text
#: original_texis/package.texi:294
msgid "A package can have one of the following statuses:"
msgstr "パッケージは以下のステータスのいずれかを保有できます:"

#. type: item
#: original_texis/package.texi:296
#, no-wrap
msgid "available"
msgstr "available"

#. type: table
#: original_texis/package.texi:299
msgid "The package is not installed, but can be downloaded and installed from the package archive."
msgstr "パッケージは未インストールだがパッケージアーカイブからのダウンロードとインストールが可能。"

#. type: item
#: original_texis/package.texi:300
#, no-wrap
msgid "avail-obso"
msgstr "avail-obso"

#. type: table
#: original_texis/package.texi:303
msgid "The package is available for installation, but a newer version is also available.  Packages with this status are hidden by default."
msgstr "インストールするためにパッケージは利用可能だが新たなバージョンも利用可能。このステータスのパッケージはデフォルトでは非表示。"

#. type: item
#: original_texis/package.texi:305
#, no-wrap
msgid "built-in"
msgstr "built-in"

#. type: table
#: original_texis/package.texi:310
msgid "The package is included in Emacs by default.  It cannot be deleted through the package menu, and by default is not considered for upgrading (but you can change that by customizing @code{package-install-upgrade-built-in}, @pxref{Package Installation})."
msgstr "パッケージはデフォルトでEmacsに同梱されている。これはパッケージメニューからは削除できず、デフォルトではアップグレード対象とはみなされない(だが@code{package-install-upgrade-built-in}をカスタマイズして変更可, @ref{Package Installation}を参照のこと)。"

#. type: item
#: original_texis/package.texi:311
#, no-wrap
msgid "dependency"
msgstr "dependency"

#. type: table
#: original_texis/package.texi:314
msgid "The package was installed automatically to satisfy a dependency of another package."
msgstr "別パッケージの依存関係を満足するために自動的にインストールされたパッケージ。"

#. type: item
#: original_texis/package.texi:315
#, no-wrap
msgid "disabled"
msgstr "disabled"

#. type: table
#: original_texis/package.texi:318
msgid "The package has been disabled using the @code{package-load-list} variable."
msgstr "パッケージは@code{package-load-list}変数を使用して無効化された。"

#. type: item
#: original_texis/package.texi:319
#, no-wrap
msgid "external"
msgstr "external"

#. type: table
#: original_texis/package.texi:323
msgid "The package is not built-in and not from the directory specified by @code{package-user-dir} (@pxref{Package Files}).  External packages are treated much like @samp{built-in} packages and cannot be deleted."
msgstr "このパッケージはbuilt-inではなく、@code{package-user-dir}で指定されたディレクトリーのものではない(@ref{Package Files}を参照)。外部パッケージは@samp{built-in}と同様に扱われて削除できない。"

#. type: item
#: original_texis/package.texi:324
#, no-wrap
msgid "held"
msgstr "held"

#. type: table
#: original_texis/package.texi:326
msgid "The package is held, @xref{Package Installation}."
msgstr "パッケージはheld(固定)されている。@ref{Package Installation}を参照のこと。"

#. type: item
#: original_texis/package.texi:327
#, no-wrap
msgid "incompat"
msgstr "incompat"

#. type: table
#: original_texis/package.texi:330
msgid "The package cannot be installed for some reason, for example because it depends on uninstallable packages."
msgstr "何らかの理由(たとえばインストール不可能なパッケージに依存)によりパッケージはインストール不能。"

#. type: item
#: original_texis/package.texi:331
#, no-wrap
msgid "installed"
msgstr "installed"

#. type: table
#: original_texis/package.texi:333
msgid "The package is installed."
msgstr "パッケージはインストール済み。"

#. type: item
#: original_texis/package.texi:334
#, no-wrap
msgid "new"
msgstr "new"

#. type: table
#: original_texis/package.texi:338
msgid "Equivalent to @samp{available}, except that the package became newly available on the package archive after your last invocation of @kbd{M-x list-packages}."
msgstr "@samp{available}と等価だが最後に@kbd{M-x list-packages}を呼び出した後にパッケージがパッケージアーカイブで新たに利用可能になった点が異なる。"

#. type: item
#: original_texis/package.texi:339
#, no-wrap
msgid "obsolete"
msgstr "obsolete"

#. type: table
#: original_texis/package.texi:342
msgid "The package is an outdated installed version; in addition to this version of the package, a newer version is also installed."
msgstr "パッケージはインストール済みの古いバージョン。パッケージの当該バージョンに加えて、新たなバージョンもインストール済み。"

#. type: findex
#: original_texis/package.texi:349
#, no-wrap
msgid "package-install"
msgstr "package-install"

#. type: findex
#: original_texis/package.texi:350
#, no-wrap
msgid "package-upgrade"
msgstr "package-upgrade"

#. type: findex
#: original_texis/package.texi:351
#, no-wrap
msgid "package-upgrade-all"
msgstr "package-upgrade-all"

#. type: Plain text
#: original_texis/package.texi:359
msgid "Packages are most conveniently installed using the package menu (@pxref{Package Menu}), but you can also use the command @kbd{M-x package-install}.  This prompts for the name of a package with the @samp{available} status, then downloads and installs it.  Similarly, if you want to upgrade a package, you can use the @kbd{M-x package-upgrade} command, and if you want to upgrade all the packages, you can use the @kbd{M-x package-upgrade-all} command."
msgstr "パッケージを一番便利にインストールするのはパッケージメニューを使う方法(@ref{Package Menu}を参照)ですが、コマンド@kbd{M-x package-install}を使用することもできます。これはステータスが@samp{available}のパッケージ名の入力を求めて、それをダウンロードしてからインストールします。同様にあるパッケージのアップグレード行いたければ@kbd{M-x package-upgrade}コマンド、すべてのパッケージをアップグレードしたければ@kbd{M-x package-upgrade-all}コマンドを使うことができます。"

#. type: vindex
#: original_texis/package.texi:360
#, no-wrap
msgid "package-install-upgrade-built-in"
msgstr "package-install-upgrade-built-in"

#. type: Plain text
#: original_texis/package.texi:374
msgid "By default, @code{package-install} doesn't consider built-in packages for which new versions are available from the archives.  (A package is built-in if it is included in the Emacs distribution.)  In particular, it will not show built-in packages in the list of completion candidates when you type at its prompt.  But if you invoke @code{package-install} with a prefix argument, it will also consider built-in packages that can be upgraded.  You can make this behavior the default by customizing the variable @code{package-install-upgrade-built-in}: if its value is non-@code{nil}, @code{package-install} will consider built-in packages even when invoked without a prefix argument.  Note that the package-menu commands (@pxref{Package Menu}) are also affected by @code{package-install-upgrade-built-in}."
msgstr "デフォルトではアーカイブから新しいバージョンが利用可能なビルトインパッケージを@code{package-install}は考慮しません(パッケージがEmacsディストーションに含まれているパッケージはビルトイン)。特にビルトインパッケージはパッケージ入力を求める際の補完候補には表示されません。ただしプレフィックス引数とともに@code{package-install}を呼び出すと、アップグレード可能なビルトインパッケージも考慮するようになります。変数@code{package-install-upgrade-built-in}をカスタマイズすることによって、この挙動をデフォルトにすることができます。この変数の値が非@code{nil}であれば、たとえプレフィックス引数なしで@code{package-install}を呼び出した際にもビルトインパッケージが考慮されるようになります。@code{package-install-upgrade-built-in}はpackage-menuコマンド(@ref{Package Menu}を参照)にも影響を与えることに注意してください。"

#. type: Plain text
#: original_texis/package.texi:382
msgid "By contrast, @code{package-upgrade} and @code{package-upgrade-all} never consider built-in packages.  If you want to use these commands for upgrading some built-in packages, you need to upgrade each of those packages, once, either via @kbd{C-u M-x package-install @key{RET}}, or by customizing @code{package-install-upgrade-built-in} to a non-@code{nil} value, and then upgrading the package once via the package menu or by @code{package-install}."
msgstr "これとは対照的に、@code{package-upgrade}と@code{package-upgrade-all}がビルトインパッケージを考慮することは決してありません。あるビルトインパッケージのアップグレードにこれらのコマンドを使いたければ@kbd{C-u M-x package-install @key{RET}}を通じてアップグレードするか、あるいは@code{package-install-upgrade-built-in}を非@code{nil}値にカスタマイズしてからパッケージメニューか@code{package-install}からそれらのパッケージを一度アップグレードする必要があります。"

#. type: Plain text
#: original_texis/package.texi:390
msgid "If you customize @code{package-install-upgrade-built-in} to a non-@code{nil} value, be very careful when using commands that update many packages at once, like @code{package-upgrade-all} and @kbd{U} in the package menu: those might overwrite built-in packages that you didn't intent to replace with newer versions from the archives.  Don't use these bulk commands if you want to update only a small number of built-in packages."
msgstr "@code{package-upgrade-all}やパッケージメニューの@kbd{U}といったコマンドを使うと一度に多くのパッケージがアップデートされるので、@code{package-install-upgrade-built-in}を非@code{nil}値にカスタマイズする場合には注意してください。あなたの意図に反して、これらのコマンドがビルトインパッケージをアーカイブ由来の新バージョンに上書きして置き換えてしまうかもしれません。少数のビルトインパッケージだけをアップデートしたい場合には、これらのバルクコマンド(bulk command: 一度に大量の処理を行うコマンド)を使わないでください。"

#. type: cindex
#: original_texis/package.texi:391
#, no-wrap
msgid "package requirements"
msgstr "package requirements"

#. type: Plain text
#: original_texis/package.texi:399
msgid "A package may @dfn{require} certain other packages to be installed, because it relies on functionality provided by them.  When Emacs installs such a package, it also automatically downloads and installs any required package that is not already installed.  (If a required package is somehow unavailable, Emacs signals an error and stops installation.)  A package's requirements list is shown in its help buffer."
msgstr "他のパッケージが提供する機能に依存するために、それらのパッケージがインストール済みであることを@dfn{必要(require)}とするパッケージもあるでしょう。Emacsがそのようなパッケージをインストールするときは、必要なパッケージがインストールされていなければ、それらのパッケージのダウンロードとインストールも自動に行ないます(必要なパッケージが何らかの理由で利用できない場合、Emacsはエラーをシグナルしてインストールを中止します)。パッケージの必要条件リスト(requirements list)は、そのパッケージのヘルプバッファーに表示されます。"

#. type: vindex
#: original_texis/package.texi:400
#, no-wrap
msgid "package-archives"
msgstr "package-archives"

#. type: Plain text
#: original_texis/package.texi:410
msgid "By default, packages are downloaded from a single package archive maintained by the Emacs developers.  This is controlled by the variable @code{package-archives}, whose value is a list of package archives known to Emacs.  Each list element must have the form @code{(@var{id} . @var{location})}, where @var{id} is the name of a package archive and @var{location} is the @acronym{URL} or name of the package archive directory.  You can alter this list if you wish to use third party package archives---but do so at your own risk, and use only third parties that you think you can trust!"
msgstr "デフォルトでは、パッケージはEmacs開発者により保守される単一のパッケージアーカイブからダウンロードされます。これは変数@code{package-archives}により制御されます。この変数の値は、Emacsが認識するパッケージアーカイブのリストです。リストの各要素は@code{(@var{id} . @var{location})}という形式でなければなりません。ここで、@var{id}はパッケージアーカイブの名前、@var{location}はパッケージアーカイブディレクトリーの@acronym{URL}か名前です。サードパーティーのアーカイブを使用したい場合はこのリストを変更できます --- が、自己責任で行い、信用できるサードパーティーだけを使用してください!"

#. type: anchor{#1}
#: original_texis/package.texi:412
msgid "Package Signing"
msgstr "Package Signing"

#. type: cindex
#: original_texis/package.texi:412
#, no-wrap
msgid "package security"
msgstr "package security"

#. type: cindex
#: original_texis/package.texi:413
#, no-wrap
msgid "package signing"
msgstr "package signing"

#. type: Plain text
#: original_texis/package.texi:436
msgid "The maintainers of package archives can increase the trust that you can have in their packages by @dfn{signing} them.  They generate a private/public pair of cryptographic keys, and use the private key to create a @dfn{signature file} for each package.  With the public key, you can use the signature files to verify the package creator and make sure the package has not been tampered with.  Signature verification uses @uref{https://www.gnupg.org/, the GnuPG package} via the EasyPG interface (@pxref{Top,, EasyPG, epa, Emacs EasyPG Assistant Manual}).  A valid signature is not a cast-iron guarantee that a package is not malicious, so you should still exercise caution.  Package archives should provide instructions on how you can obtain their public key.  One way is to download the key from a server such as @url{https://pgp.mit.edu/}.  Use @kbd{M-x package-import-keyring} to import the key into Emacs.  Emacs stores package keys in the directory specified by the variable @code{package-gnupghome-dir}, by default in the @file{gnupg} subdirectory of @code{package-user-dir}, which causes Emacs to invoke GnuPG with the option @samp{--homedir} when verifying signatures.  If @code{package-gnupghome-dir} is @code{nil}, GnuPG's option @samp{--homedir} is omitted.  The public key for the GNU package archive is distributed with Emacs, in the @file{etc/package-keyring.gpg}.  Emacs uses it automatically."
msgstr "パッケージアーカイブのメンテナーは、パッケージに@dfn{サイン(signing)}を付して、信頼度を増すことができます。これらはプライベートとパブリックのペアーからなる暗号化キーにより生成されます。プライベートキーは各パッケージにたいする@dfn{署名ファイル(signature file)}を作成するのに使用されます。パブリックキーにより、署名ファイルを使用してそのパッケージ作成者と、それが改ざんされていないかを確認できます。署名の検証は、EasyPGインターフェイス(@ref{Top,, EasyPG, epa, Emacs EasyPG Assistant Manual}を参照)を通じて@uref{https://www.gnupg.org/, the GnuPG package}を使用します(@ref{Top,, EasyPG, epa, Emacs EasyPG Assistant Manual}を参照)。有効な署名であっても、それが悪意がないパッケージであることを厳正に保証する訳ではなく、用心するべきです。パッケージアーカイブは、パブリックキーの入手方法について、説明を提供するべきです。@url{http://pgp.mit.edu/}のようなサーバーからキーをダウンロードするのも1つの方法です。Emacsにキーをインポートするには、@kbd{M-x package-import-keyring}を使用します。Emacsは変数@code{package-user-dir}で指定されるディレクトリー(デフォルトは@code{package-gnupghome-dir}のサブディレクトリー@file{gnupg})にパッケージキーを格納します。これにより、Emacsが署名を検証する際に、オプション@file{gnupg}でGnuPGを呼び出すようになります。@code{package-gnupghome-dir}が@code{nil},の場合は、GnuPGのオプション@samp{--homedir}は省略します。GNUパッケージアーカイブにたいするパブリックキーはEmacsと共に配布され、@file{etc/package-keyring.gpg}にあります。Emacsはこれを自動的に使用します。"

#. type: vindex
#: original_texis/package.texi:437
#, no-wrap
msgid "package-check-signature"
msgstr "package-check-signature"

#. type: vindex
#: original_texis/package.texi:438
#, no-wrap
msgid "package-unsigned-archives"
msgstr "package-unsigned-archives"

#. type: Plain text
#: original_texis/package.texi:450
msgid "If the user option @code{package-check-signature} is non-@code{nil}, Emacs attempts to verify signatures when you install packages.  If the option has the value @code{allow-unsigned}, and a usable OpenPGP configuration is found, signed packages will be checked, but you can still install a package that is not signed.  If you use some archives that do not sign their packages, you can add them to the list @code{package-unsigned-archives}.  (If the value is @code{allow-unsigned} and no usable OpenPGP is found, this option is treated as if its value was @code{nil}.)  If the value is @code{t}, at least one signature must be valid; if the value is @code{all}, all of them must be valid."
msgstr "ユーザーオプション@code{package-check-signature}が非@code{nil}の場合、Emacsはパッケージのインストール時に署名の検証を試みます。このオプションが値@code{allow-unsigned}をもち、使用可能なOpenPGP設定が見つかったらサインされたパッケージはチェックされますが、未サインのパッケージもまだインストールができます。パッケージにサインしないアーカイブを使用する場合には、それらを@code{package-unsigned-archives}に追加できます(値が@code{allow-unsigned}で使用可能なOpenPGPが見つからなければこのオプションはあたかも値が@code{nil}であるかのように扱われる)。値が@code{t}なら少なくとも1つの署名が有効でなければならず、@code{all}ならすべての署名が有効でなければなりません。"

#. type: Plain text
#: original_texis/package.texi:455
msgid "For more information on cryptographic keys and signing, @pxref{Top,, GnuPG, gnupg, The GNU Privacy Guard Manual}.  Emacs comes with an interface to GNU Privacy Guard, @pxref{Top,, EasyPG, epa, Emacs EasyPG Assistant Manual}."
msgstr "暗号化キーとサインについての詳細は、@ref{Top,, GnuPG, gnupg, The GNU Privacy Guard Manual}を参照してください。EmacsのGNU Privacy Guardにたいするインターフェースについては、@ref{Top,, EasyPG, epa, Emacs EasyPG Assistant Manual}を参照してください。"

#. type: vindex
#: original_texis/package.texi:456
#, no-wrap
msgid "package-pinned-packages"
msgstr "package-pinned-packages"

#. type: Plain text
#: original_texis/package.texi:462
msgid "If you have more than one package archive enabled, and some of them offer different versions of the same package, you may find the option @code{package-pinned-packages} useful.  You can add package/archive pairs to this list, to ensure that the specified package is only ever downloaded from the specified archive."
msgstr "複数のパッケージアーカイブが有効で、同じパッケージにたいして異なるバージョンを提供する場合は、オプション@code{package-pinned-packages}が便利かもしれません。指定したパッケージが指定されたアーカイブだけからダウンロードされるように、このリストにパッケージとアーカイブのペアーを追加できます。"

#. type: vindex
#: original_texis/package.texi:463
#, no-wrap
msgid "package-archive-priorities"
msgstr "package-archive-priorities"

#. type: vindex
#: original_texis/package.texi:464
#, no-wrap
msgid "package-menu-hide-low-priority"
msgstr "package-menu-hide-low-priority"

#. type: Plain text
#: original_texis/package.texi:473
msgid "Another option that is useful when you have several package archives enabled is @code{package-archive-priorities}.  It specifies the priority of each archive (higher numbers specify higher priority archives).  By default, archives have the priority of zero, unless specified otherwise by this option's value.  Packages from lower-priority archives will not be shown in the menu, if the same package is available from a higher-priority archive.  (This is controlled by the value of @code{package-menu-hide-low-priority}.)"
msgstr "複数の有効なパッケージアーカイブがあるときに便利な他のオプションとして、@code{package-archive-priorities}があります。これは各アーカイブにたいして、優先度(高い数字は高い優先度のアーカイブを指定します)を指定します。このオプションにより指定されない限り、アーカイブの優先度はデフォルトの0です。優先度高のアーカイブのパッケージが利用可能な場合、優先度低のアーカイブのパッケージはメニューに表示されません(これは@code{package-menu-hide-low-priority}の値により制御されます)。"

#. type: Plain text
#: original_texis/package.texi:481
msgid "Once a package is downloaded, byte-compiled and installed, it is made available to the current Emacs session.  Making a package available adds its directory to @code{load-path} and loads its autoloads.  The effect of a package's autoloads varies from package to package.  Most packages just make some new commands available, while others have more wide-ranging effects on the Emacs session.  For such information, consult the package's help buffer."
msgstr "一度パッケージをダウンロードしてバイトコンパイル、インストールするとそのパッケージはカレントEmacsセッションで利用可能になります。パッケージを利用可能にするにはパッケージのディレクトリーを@code{load-path}に追加してパッケージのautoloadをロードします。パッケージのautoloadの効果はパッケージごとにさまざまです。ほとんどのパッケージはいくつかの新たなコマンドを利用可能にするだけですが、Emacsセッションにたいして広範な影響を及ぼすものもあります。この種の情報についてはパッケージのヘルプバッファーを参照してください。"

#. type: Plain text
#: original_texis/package.texi:488
msgid "Installed packages are automatically made available by Emacs in all subsequent sessions.  This happens at startup, before processing the init file but after processing the early init file (@pxref{Early Init File}).  As an exception, Emacs does not make packages available at startup if invoked with the @samp{-q} or @samp{--no-init-file} options (@pxref{Initial Options})."
msgstr "インストールされたパッケージはその後のすべてのEmacsセッションで自動的にロードされます。これはEmacs開始時のinitファイル処理前、早期initファイル(@ref{Early Init File}を参照)の処理後に行なわれます。例外として@samp{-q}か@samp{--no-init-file}オプション(@ref{Initial Options}を参照してください)で呼び出されたときは、Emacs開始時にパッケージを利用可能にしません。"

#. type: vindex
#: original_texis/package.texi:489
#, no-wrap
msgid "package-enable-at-startup"
msgstr "package-enable-at-startup"

#. type: Plain text
#: original_texis/package.texi:499
msgid "To keep Emacs from automatically making packages available at startup, change the variable @code{package-enable-at-startup} to @code{nil}.  You must do this in the early init file, as the variable is read before loading the regular init file.  Therefore, if you customize this variable via Customize, you should save your customized setting into your early init file.  To do this, set or change the value of the variable @code{custom-file} (@pxref{Saving Customizations}) to point to your early init file before saving the customized value of @code{package-enable-at-startup}."
msgstr "スタートアップ時にEmacsが自動的にパッケージを利用可能しないようにするためには変数@code{package-enable-at-startup}を@code{nil}に変更してください。この変数は正規のinitファイル(regular init file)のロード前に読み込まれるので早期initファイル(early init file)で行うようにしてください。したがってCustomize経由でこの変数の値のセットや変更を行う場合には、カスタマイズしたセッティングは早期initファイルに保存する必要があります。これを行うには@code{package-enable-at-startup}のカスタマイズした値を保存する前に、変数@code{custom-file} (@ref{Saving Customizations}を参照)の値が早期initファイルを指すようにセットまたは変更してください。"

#. type: findex
#: original_texis/package.texi:500
#, no-wrap
msgid "package-quickstart-refresh"
msgstr "package-quickstart-refresh"

#. type: vindex
#: original_texis/package.texi:501
#, no-wrap
msgid "package-quickstart"
msgstr "package-quickstart"

#. type: Plain text
#: original_texis/package.texi:510
msgid "If you have many packages installed, you can improve startup times by setting the user option @code{package-quickstart} to @code{t}.  Setting this option will make Emacs precompute many things instead of re-computing them on every Emacs startup.  However, if you do this, then you have to manually run the command @code{package-quickstart-refresh} when the activations need to be changed, such as when you change the value of @code{package-load-list}."
msgstr "多くのパッケージのインストール後には、ユーザーオプション@code{package-quickstart}のセッティングでスタートアップタイムを改善できるかもしれません。このオプションをセットすることによって、Emacsのスタートアップ時に毎回再計算するかわりに、多くの事項をEmacsに事前に計算させることができます。しかしこれを行うと、@code{package-load-list}の値の変更時のようなアクティベーション変更が必要になった際にコマンド@code{package-quickstart-refresh}を手動で実行する必要が生じます。"

#. type: findex
#: original_texis/package.texi:511
#, no-wrap
msgid "package-activate-all"
msgstr "package-activate-all"

#. type: Plain text
#: original_texis/package.texi:518
msgid "If you have set @code{package-enable-at-startup} to @code{nil}, you can still make packages available either during or after startup.  To make installed packages available during startup, call the function @code{package-activate-all} in your init file.  To make installed packages available after startup, invoke the command @kbd{M-: (package-activate-all) RET}."
msgstr "@code{package-enable-at-startup}を@code{nil}にセットしてもスタートアップ中およびスタートアップじにパッケージを利用可能にすることはできます。インストール済みパッケージをスタートアップ中に利用可能にするにはinitファイル内で関数@code{package-activate-all}を呼び出し手ください。スタートアップ後に利用可能にするにはコマンド@kbd{M-: (package-activate-all) RET}を呼び出してください。"

#. type: vindex
#: original_texis/package.texi:519
#, no-wrap
msgid "package-load-list"
msgstr "package-load-list"

#. type: Plain text
#: original_texis/package.texi:532
msgid "For finer control over which packages are made available at startup, you can use the variable @code{package-load-list}.  Its value should be a list.  A list element of the form @w{@code{(@var{name} @var{version})}} tells Emacs to make available version @var{version} of the package named @var{name}.  Here, @var{version} should be a version string (corresponding to a specific version of the package), or @code{t} (which means to make available any installed version), or @code{nil} (which means no version; this disables the package, preventing it from being made available).  A list element can also be the symbol @code{all}, which means to make available the latest installed version of any package not named by the other list elements.  The default value is just @code{'(all)}."
msgstr "スタートアップ時に利用可能になるようにパッケージのロードをより精密に制御するために、変数@code{package-load-list}を使用することができます。この変数の値にはリストを指定します。@w{@code{(@var{name} @var{version})}}という形式のリスト要素は、@var{name}という名前のパッケージのバージョン@var{version}を利用可能にするように指示します。ここで@var{version}には、(そのパッケージの特定のバージョンに対応する)バージョン文字列、@code{t} (任意のインストール済みのバージョンを意味する)、または@code{nil} (バージョンを意味しない。パッケージを利用可能にすることを抑止してパッケージを無効にする)を指定します。リストの要素にはシンボル@code{all}も指定でき、これは他のリスト要素で名前指定されていない任意のパッケージのインストール済みバージョンを利用可能にすることを意味します。デフォルト値は単に@code{'(all)}となっています。"

#. type: Plain text
#: original_texis/package.texi:539
msgid "For example, if you set @code{package-load-list} to @w{@code{'((muse \"3.20\") all)}}, then Emacs only makes available version 3.20 of the @samp{muse} package, plus any installed version of packages other than @samp{muse}.  Any other version of @samp{muse} that happens to be installed will be ignored.  The @samp{muse} package will be listed in the package menu with the @samp{held} status."
msgstr "たとえば@code{package-load-list}を@code{'((muse \"3.20\") all)}にセットするとEmacsは@samp{muse}のバージョン3.20のみ、および@samp{muse}以外のパッケージのインストール済みの任意のバージョンをロードします。@samp{muse}の他のバージョンがインストールされていたとしてもそれらは無視されます。@samp{muse}パッケージは@samp{held}というステータスでパッケージメニューにリストされるはずです。"

#. type: findex
#: original_texis/package.texi:540
#, no-wrap
msgid "package-recompile"
msgstr "package-recompile"

#. type: findex
#: original_texis/package.texi:541
#, no-wrap
msgid "package-recompile-all"
msgstr "package-recompile-all"

#. type: Plain text
#: original_texis/package.texi:549
msgid "Emacs byte code is quite stable, but it's possible for byte code to become outdated, or for the compiled files to rely on macros that have changed in new versions of Emacs.  You can use the command @w{@kbd{M-x package-recompile}} to recompile a particular package, or @w{@kbd{M-x package-recompile-all}} to recompile all the packages.  (The latter command might take quite a while to run if you have many installed packages.)"
msgstr "Emacsのバイトコードは極めて安定していますがバイトコードが古くなってしまったり、コンパイル済みファイルが依存するマクロが新しいバージョンのEmacsで変更されてしまう可能性もあります。特定のパッケージをリコンパイルするためには@w{@kbd{M-x package-recompile}}、すべてのパッケージをリコンパイルするためには@w{@kbd{M-x package-recompile-all}}というコマンドを使うことができます(インストール済みパッケージの数が多ければ後者コマンドの実行にかなりの時間を要するかもしれない)。"

#. type: section
#: original_texis/package.texi:551
#, no-wrap
msgid "Package Files and Directory Layout"
msgstr "パッケージのファイルとディレクトリー"

#. type: cindex
#: original_texis/package.texi:552
#, no-wrap
msgid "package directory"
msgstr "package directory"

#. type: cindex
#: original_texis/package.texi:554
#, no-wrap
msgid "package file"
msgstr "package file"

#. type: findex
#: original_texis/package.texi:555
#, no-wrap
msgid "package-install-file"
msgstr "package-install-file"

#. type: Plain text
#: original_texis/package.texi:565
msgid "Each package is downloaded from the package archive in the form of a single @dfn{package file}---either an Emacs Lisp source file, or a tar file containing multiple Emacs Lisp source and other files.  Package files are automatically retrieved, processed, and disposed of by the Emacs commands that install packages.  Normally, you will not need to deal directly with them, unless you are making a package (@pxref{Packaging,,,elisp, The Emacs Lisp Reference Manual}).  Should you ever need to install a package directly from a package file, use the command @kbd{M-x package-install-file}."
msgstr "各パッケージはパッケージアーカイブから単一ファイル形式 －－－ 1つのEmacs Lispソースファイル、または複数のEmacs Lispソースと他のファイルを含むtarファイル --- でダウンロードされます。パッケージファイルは、パッケージをインストールするEmacsコマンドにより自動的に取得、処理、配置されます。パッケージを作成する(@ref{Packaging,,,elisp, The Emacs Lisp Reference Manual}を参照してください)のでない限り、通常これらを直接扱う必要はないでしょう。パッケージファイルから直接パッケージをインストールする必要があるときは、コマンド@kbd{M-x package-install-file}を使用してください。"

#. type: vindex
#: original_texis/package.texi:566
#, no-wrap
msgid "package-user-dir"
msgstr "package-user-dir"

#. type: Plain text
#: original_texis/package.texi:573
#, fuzzy
#| msgid "Once installed, the contents of a package are placed in a subdirectory of @file{~/.emacs.d/elpa/} (you can change the name of that directory by changing the variable @code{package-user-dir}).  The package subdirectory is named @file{@var{name}-@var{version}}, where @var{name} is the package name and @var{version} is its version string."
msgid "Once installed, the contents of a package are placed in a subdirectory of @file{~/.emacs.d/elpa/} (you can change the name of that directory by customizing the variable @code{package-user-dir}).  The package subdirectory is named @file{@var{name}-@var{version}}, where @var{name} is the package name and @var{version} is its version string."
msgstr "1度インストールされると、パッケージの内容はそのサブディレクトリーに配置されます(変数@code{package-user-dir}を変更することにより、ディレクトリーの名前を変更できます)。パッケージのサブディレクトリーは@file{@var{name}-@var{version}}という名前で、@var{name}はパッケージ名、@var{version}はバージョン文字列です。"

#. type: cindex
#: original_texis/package.texi:574
#, no-wrap
msgid "system-wide packages"
msgstr "system-wide packages"

#. type: vindex
#: original_texis/package.texi:575
#, no-wrap
msgid "package-directory-list"
msgstr "package-directory-list"

#. type: Plain text
#: original_texis/package.texi:582
msgid "In addition to @code{package-user-dir}, Emacs looks for installed packages in the directories listed in @code{package-directory-list}.  These directories are meant for system administrators to make Emacs packages available system-wide; Emacs itself never installs packages there.  The package subdirectories for @code{package-directory-list} are laid out in the same way as in @code{package-user-dir}."
msgstr "@code{package-user-dir}に加えて、Emacsは@code{package-directory-list}にリストされたディレクトリーからインストール済みパッケージを探します。これらのディレクトリーはシステム管理者のためのディレクトリーで、Emacsパッケージをシステムワイドに利用可能にするためのものです。Emacs自身がこれらのディレクトリーにパッケージをインストールすることはありません。@code{package-directory-list}にたいするパッケージのサブディレクトリーは、@code{package-user-dir}と同じ方法で配置されます。"

#. type: Plain text
#: original_texis/package.texi:587
msgid "Deleting a package (@pxref{Package Menu}) involves deleting the corresponding package subdirectory.  This only works for packages installed in @code{package-user-dir}; if told to act on a package in a system-wide package directory, the deletion command signals an error."
msgstr "パッケージの削除(@ref{Package Menu}を参照してください)は、対応するパッケージのサブディレクトリーを削除します。これは@code{package-user-dir}にインストールされたパッケージだけに機能します。システムワイドなパッケージディレクトリーにたいして呼び出された場合、削除コマンドはエラーをシグナルします。"

#. type: cindex
#: original_texis/package.texi:590
#, no-wrap
msgid "package development source"
msgstr "package development source"

#. type: cindex
#: original_texis/package.texi:591
#, no-wrap
msgid "upstream source, for packages"
msgstr "upstream source, for packages"

#. type: cindex
#: original_texis/package.texi:592
#, no-wrap
msgid "git source of package @c \"git\" is not technically correct"
msgstr "git source of package @c \"git\" is not technically correct"

#. type: Plain text
#: original_texis/package.texi:600
msgid "By default @code{package-install} downloads a Tarball from a package archive and installs its files.  This might be inadequate if you wish to hack on the package sources and share your changes with others.  In that case, you may prefer to directly fetch and work on the upstream source.  This often makes it easier to develop patches and report bugs."
msgstr "@code{package-install}はデフォルトではパッケージアーカイブからtarballをダウンロードしてそのファイルをインストールします。あなたがパッケージのソースをハッキングして、あなたの変更を他の人たちと共有したい場合には、これでは不十分かもしれません。そのような場合にはアップストリームのソースを直接取得して、それにたいして作業したいと思うのではないでしょうか。そのようにすることによって、パッチ開発やバグレポートが容易になることが多々あるからです。"

#. type: findex
#: original_texis/package.texi:601
#, no-wrap
msgid "package-vc-install"
msgstr "package-vc-install"

#. type: findex
#: original_texis/package.texi:602
#, no-wrap
msgid "package-vc-checkout"
msgstr "package-vc-checkout"

#. type: Plain text
#: original_texis/package.texi:613
msgid "One way to do this is to use @code{package-vc-install}, to fetch the source code for a package directly from source.  The command will also automatically ensure that all files are byte-compiled and auto-loaded, just like with a regular package.  Packages installed this way behave just like any other package.  You can upgrade them using @code{package-upgrade} or @code{package-upgrade-all} and delete them again using @code{package-delete}.  They are even displayed in the regular package listing.  If you just wish to clone the source of a package, without adding it to the package list, use @code{package-vc-checkout}."
msgstr "パッケージのソースコードをソースから直接手に入れるために@code{package-vc-install}を使うのも1つの手段です。このコマンドは通常のパッケージの場合と同じように、すべてのファイルがバイトコンパイルされて、auto-loadされることも保証してくれます。この方法でインストールされたパッケージは、他のパッケージとまったく同じように振る舞うでしょう。それらのパッケージは@code{package-upgrade}や@code{package-upgrade-all}を使ってアップグレード、@code{package-delete}を使って再び削除することができます。通常のパッケージのリストにさえこれらのパッケージが表示されます。パッケージのリストに加えずにソースのcloneだけを望む場合には、@code{package-vc-checkout}を使用してください。"

#. type: findex
#: original_texis/package.texi:614
#, no-wrap
msgid "package-report-bug"
msgstr "package-report-bug"

#. type: findex
#: original_texis/package.texi:615
#, no-wrap
msgid "package-vc-prepare-patch"
msgstr "package-vc-prepare-patch"

#. type: Plain text
#: original_texis/package.texi:624
msgid "With the source checkout, you might want to reproduce a bug against the current development head or implement a new feature to scratch an itch.  If the package metadata indicates how to contact the maintainer, you can use the command @code{package-report-bug} to report a bug via Email.  This report will include all the user options that you have customized.  If you have made a change you wish to share with the maintainers, first commit your changes then use the command @code{package-vc-prepare-patch} to share it.  @xref{Preparing Patches}."
msgstr "ソースをチェックアウトするとカレントの開発HEADにたいするバグを再現させたり、新しい機能を実装して不満を解消したいと思うかもしれません。このパッケージのメタデータにメンテナーへ連絡する方法が示されていれば、コマンド@code{package-report-bug}を使用してバグを電子メール経由で報告することができます。このレポートにはあなたがカスタマイズしたすべてのユーザーオプションが含まれます。メンテナーと共有したい変更を行ったら、まずその変更をコミットしてからコマンド@code{package-vc-prepare-patch}でその変更を共有できます。@ref{Preparing Patches}を参照してください。"

#. type: findex
#: original_texis/package.texi:625
#, no-wrap
msgid "package-vc-install-from-checkout"
msgstr "package-vc-install-from-checkout"

#. type: findex
#: original_texis/package.texi:626
#, no-wrap
msgid "package-vc-rebuild"
msgstr "package-vc-rebuild"

#. type: Plain text
#: original_texis/package.texi:634
msgid "If you maintain your own packages you might want to use a local checkout instead of cloning a remote repository.  You can do this by using @code{package-vc-install-from-checkout}, which creates a symbolic link from the package directory (@pxref{Package Files}) to your checkout and initializes the code.  Note that you might have to use @code{package-vc-rebuild} to repeat the initialization and update the autoloads."
msgstr "あなたが自分のパッケージを保守している場合は、リモートレポジトリにoneするのではなくローカルでのチェックアウトを使いたいと思うかもしれません。@code{package-vc-install-from-checkout}を使ってこれを行うことができます。これはパッケージのディレクトリー(@ref{Package Files}を参照)からあなたのチェックアウトにシンボリックリンクを作成して、コードの初期化を行うコマンドです。初期化を繰り返してautoloadを更新するために、@code{package-vc-rebuild}の使用が必要かもしれないことに注意してください。"

#. type: subsection
#: original_texis/package.texi:635
#, no-wrap
msgid "Specifying Package Sources"
msgstr "Specifying Package Sources"

#. type: cindex
#: original_texis/package.texi:636
#, no-wrap
msgid "package specification"
msgstr "package specification"

#. type: cindex
#: original_texis/package.texi:637
#, no-wrap
msgid "specification, for source packages"
msgstr "specification, for source packages"

#. type: Plain text
#: original_texis/package.texi:644
msgid "To install a package from source, Emacs must know where to get the package's source code (such as a code repository) and basic information about the structure of the code (such as the main file in a multi-file package).  A @dfn{package specification} describes these properties."
msgstr "ソースからパッケージをインストールするためにはパッケージのソースをどこから取得するか(たとえばコードレポジトリ)、そしてコードの構造に関する基本情報(たとえば複数ファイルパッケージのメインファイル)をEmacsが承知していなければなりませんこれらのプロパティを記述するのが@dfn{パッケージ仕様(package specification)}です。"

#. type: Plain text
#: original_texis/package.texi:651
msgid "When supported by a package archive (@pxref{Package Archives,,,elisp, The Emacs Lisp Reference Manual}), Emacs can automatically download a package's specification from said archive.  If the first argument passed to @code{package-vc-install} is a symbol naming a package, then Emacs will use the specification provided by the archive for that package."
msgstr "パッケージアーカイブ(@ref{Package Archives,,,elisp, The Emacs Lisp Reference Manual}を参照)からサポートされると、Emacsはそのアーカイブからパッケージの仕様を自動的にダウンロードできます。@code{package-vc-install}に渡される1つ目の引数がパッケージを命名するシンボルであれば、Emacsはそのパッケージ用にアーカイブが提供する仕様を使用します。"

#. type: group
#: original_texis/package.texi:656
#, no-wrap
msgid ""
";; Emacs will download BBDB's specification from GNU ELPA:\n"
"(package-vc-install 'bbdb)\n"
msgstr ""
";; EmacsはGNU ELPAからBBDBの仕様をダウンロードする:\n"
"(package-vc-install 'bbdb)\n"

#. type: Plain text
#: original_texis/package.texi:665
msgid "The first argument to @code{package-vc-install} may also be a package specification.  This allows you to install source packages from locations other than the known archives listed in the user option @code{package-archives}.  A package specification is a list of the form @code{(@var{name} . @var{spec})}, in which @var{spec} should be a property list using any of the keys in the table below."
msgstr "@code{package-vc-install}の1つ目の引数はパッケージ仕様の場合もあります。これによってユーザーオプション@code{package-archives}にリストされている既知のアーカイブ以外の場所からソースパッケージをインストールできるようになります。パッケージ仕様は@code{(@var{name} . @var{spec})}という形式のリストです。ここで@var{spec}は下記テーブルの任意のキーを使用するプロパティリストである必要があります。"

#. type: Plain text
#: original_texis/package.texi:669
msgid "For definitions of basic terms for working with code repositories and version control systems, see @ref{VCS Concepts,,,emacs, The GNU Emacs Manual}."
msgstr "コードレポジトリやバージョンコントロールシステムでの作業に使用する基本的な用語の定義については@ref{VCS Concepts,,,emacs, The GNU Emacs Manual}を参照してください。"

#. type: item
#: original_texis/package.texi:671
#, no-wrap
msgid ":url"
msgstr ":url"

#. type: table
#: original_texis/package.texi:674
msgid "A string providing the URL that specifies the repository from which to fetch the package's source code."
msgstr "パッケージのソースコードを取得するレポジトリを指定するURL文字列。"

#. type: item
#: original_texis/package.texi:675
#, no-wrap
msgid ":branch"
msgstr ":branch"

#. type: table
#: original_texis/package.texi:678
msgid "A string providing the revision of the code to install.  Do not confuse this with a package's version number."
msgstr "インストールするコードのリビジョンを指定する文字列。バージョンのバージョン番号と混同しないこと。"

#. type: item
#: original_texis/package.texi:679
#, no-wrap
msgid ":lisp-dir"
msgstr ":lisp-dir"

#. type: table
#: original_texis/package.texi:683
msgid "A string providing the repository-relative name of the directory to use for loading the Lisp sources, which defaults to the root directory of the repository."
msgstr "Lispソースのロードに用いる、レポジトリに相対的なディレクトリー名文字列。デフォルトはレポジトリのルートディレクトリー。"

#. type: item
#: original_texis/package.texi:684
#, no-wrap
msgid ":main-file"
msgstr ":main-file"

#. type: table
#: original_texis/package.texi:688
msgid "A string providing the main file of the project, from which to gather package metadata.  If not given, the default is the package name with \".el\" appended to it."
msgstr "パッケージのメタデータを集約したプロジェクトのメインファイル名文字列。与えられない場合のデフォルトはパッケージ名に\".el\"を追加したファイル名。"

#. type: item
#: original_texis/package.texi:689
#, no-wrap
msgid ":doc"
msgstr ":doc"

#. type: table
#: original_texis/package.texi:693
msgid "A string providing the repository-relative name of the documentation file from which to build an Info file.  This can be a Texinfo file or an Org file."
msgstr "Infoファイルをビルドするためのレポジトリに相対的なドキュメンテーションファイル名文字列。TexinfoまたはOrgのファイルが指定できる。"

#. type: item
#: original_texis/package.texi:694
#, no-wrap
msgid ":make"
msgstr ":make"

#. type: table
#: original_texis/package.texi:699
#, fuzzy
#| msgid "A string or list of strings providing the target or targets defined in the repository Makefile which should run before building the Info file.  Only takes effect when @code{package-vc-allow-build-commands} is non-nil."
msgid "A string or list of strings providing the target or targets defined in the repository Makefile which should run before building the Info file.  Only takes effect when @code{package-vc-allow-build-commands} is non-@code{nil}."
msgstr "Infoファイルのビルド前に実行を要するレポジトリのMakefileで定義されたターゲットを与える文字列、またはリスト(ターゲットが複数の場合)。@code{package-vc-allow-build-commands}が非nilのときのみ効果がある。"

#. type: item
#: original_texis/package.texi:700
#, no-wrap
msgid ":shell-command"
msgstr ":shell-command"

#. type: table
#: original_texis/package.texi:704
msgid "A string providing the shell command to run before building the Info file.  Only takes effect when @code{package-vc-allow-build-commands} is non-@code{nil}."
msgstr "Infoファイルのビルド前に実行を要するシェルコマンドを与える文字列。@code{package-vc-allow-build-commands}が非@code{nil}のときのみ効果がある。"

#. type: item
#: original_texis/package.texi:705
#, no-wrap
msgid ":vc-backend"
msgstr ":vc-backend"

#. type: table
#: original_texis/package.texi:711
msgid "A symbol naming the VC backend to use for downloading a copy of the package's repository (@pxref{Version Control Systems,,,emacs, The GNU Emacs Manual}).  If omitted, Emacs will attempt to make a guess based on the provided URL, or, failing that, the process will fall back onto the value of @code{package-vc-default-backend}."
msgstr "パッケージのレポジトリのコピーのダウンロードに用いるVCバックエンドを指名する文字列(@ref{Version Control Systems,,,emacs, The GNU Emacs Manual}を参照)。省略時には提供されたURLからEmacsが推測を試み、それに失敗するとプロセスは@code{package-vc-default-backend}の値にフォールバックする。"

#. type: group
#: original_texis/package.texi:720
#, no-wrap
msgid ""
";; Specifying information manually:\n"
"(package-vc-install\n"
"  '(bbdb :url \"https://git.savannah.nongnu.org/git/bbdb.git\"\n"
"         :lisp-dir \"lisp\"\n"
"         :doc \"doc/bbdb.texi\"))\n"
msgstr ""
";;情報を手作業で指定:\n"
"(package-vc-install\n"
"  '(bbdb :url \"https://git.savannah.nongnu.org/git/bbdb.git\"\n"
"         :lisp-dir \"lisp\"\n"
"         :doc \"doc/bbdb.texi\"))\n"
