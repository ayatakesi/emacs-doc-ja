# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2024-08-24 20:08+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: cindex
#: original_texis/android.texi:4 original_texis/android.texi:6
#, no-wrap
msgid "Android"
msgstr ""

#. type: appendix
#: original_texis/android.texi:5
#, no-wrap
msgid "Emacs and Android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:11
msgid ""
"Android is a mobile operating system developed by the Open Handset "
"Alliance.  This section describes the peculiarities of using Emacs on an "
"Android device running Android 2.2 or later."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:15
msgid ""
"Android devices commonly rely a touch screen or digitizer device and virtual "
"keyboard for user input.  For more information about using such devices with "
"Emacs, @pxref{Other Input}."
msgstr ""

#. type: node
#: original_texis/android.texi:26 original_texis/android.texi:28
#, no-wrap
msgid "What is Android?"
msgstr ""

#. type: menuentry
#: original_texis/android.texi:26
msgid "Preamble."
msgstr ""

#. type: node
#: original_texis/android.texi:26 original_texis/android.texi:61
#, no-wrap
msgid "Android Startup"
msgstr ""

#. type: menuentry
#: original_texis/android.texi:26
msgid "Starting up Emacs on Android."
msgstr ""

#. type: node
#: original_texis/android.texi:26 original_texis/android.texi:170
#, no-wrap
msgid "Android File System"
msgstr ""

#. type: menuentry
#: original_texis/android.texi:26
msgid "The Android file system."
msgstr ""

#. type: node
#: original_texis/android.texi:26 original_texis/android.texi:296
#, no-wrap
msgid "Android Document Providers"
msgstr ""

#. type: menuentry
#: original_texis/android.texi:26
msgid "Accessing files from other programs."
msgstr ""

#. type: node
#: original_texis/android.texi:26 original_texis/android.texi:336
#, no-wrap
msgid "Android Environment"
msgstr ""

#. type: menuentry
#: original_texis/android.texi:26
msgid "Running Emacs under Android."
msgstr ""

#. type: node
#: original_texis/android.texi:26 original_texis/android.texi:858
#, no-wrap
msgid "Android Windowing"
msgstr ""

#. type: menuentry
#: original_texis/android.texi:26
msgid "The Android window system."
msgstr ""

#. type: node
#: original_texis/android.texi:26 original_texis/android.texi:1062
#, no-wrap
msgid "Android Fonts"
msgstr ""

#. type: menuentry
#: original_texis/android.texi:26
msgid "Font selection under Android."
msgstr ""

#. type: node
#: original_texis/android.texi:26 original_texis/android.texi:1122
#, no-wrap
msgid "Android Troubleshooting"
msgstr ""

#. type: menuentry
#: original_texis/android.texi:26
msgid "Dealing with problems."
msgstr ""

#. type: node
#: original_texis/android.texi:26 original_texis/android.texi:1170
#, no-wrap
msgid "Android Software"
msgstr ""

#. type: menuentry
#: original_texis/android.texi:26
msgid "Getting extra software."
msgstr ""

#. type: section
#: original_texis/android.texi:29
#, no-wrap
msgid "Android History"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:35
msgid ""
"Android is an operating system for mobile devices developed by the Open "
"Handset Alliance, a group of companies interested in developing handsets "
"that can run a common set of software.  It is supposedly free software."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:44
msgid ""
"Like the X Consortium of times past, the Open Handset Alliance believes that "
"``openness'' (namely, the regular release of the Android source code) is "
"simply a tool to increase the popularity of the Android platform.  Computer "
"companies normally produce proprietary software.  The companies in the Open "
"Handset Alliance are no different -- most versions of Android installed on "
"devices are proprietary, by virtue of containing proprietary components, "
"that often cannot even be replaced by the user."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:52
msgid ""
"Android is not designed to respect users' freedom.  Almost all versions of "
"Android (including some which are supposedly free software) include support "
"for Digital Restrictions Management, technology that is designed to limit "
"users' ability to copy media to and from their own devices.  Most Android "
"devices also come with proprietary Google applications which are required to "
"run the system, and many other Android applications."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:57
msgid ""
"Thus, it must be necessary to consider Android proprietary software from a "
"practical standpoint.  That is an injustice.  If you use Android, we urge "
"you to switch to a free operating system, if only for your freedom's sake."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:60
msgid ""
"We support GNU Emacs on proprietary operating systems because we hope this "
"taste of freedom will inspire users to escape from them."
msgstr ""

#. type: section
#: original_texis/android.texi:62
#, no-wrap
msgid "Starting Emacs on Android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:68
msgid ""
"Emacs is not installed on Android devices from source code or through a "
"package manager.  Instead, Emacs is compiled for Android on a different "
"operating system, with the resulting binaries packaged into an archive, that "
"is then transferred to the system and installed."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:72
msgid ""
"After being installed, the system places an application icon on the desktop "
"(a.k.a@: ``home screen''.)  Emacs then starts up once the application icon "
"is clicked."
msgstr ""

#. type: cindex
#: original_texis/android.texi:73
#, no-wrap
msgid "``adb logcat''"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:78
msgid ""
"During startup, Emacs will display messages in the system log buffer; "
"reading that buffer during start-up requires the Android Debug Bridge "
"(@command{adb}) utility to be installed on another computer."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:83
msgid ""
"After enabling the ``USB Debugging'' feature on the Android system, and "
"connecting it via USB to another system with the @command{adb} utility "
"installed, the log can be viewed by running the following command on that "
"other system:"
msgstr ""

#. type: example
#: original_texis/android.texi:86
#, no-wrap
msgid "$ adb logcat | grep -E \"(android_run_debug_thread|[Ee]macs)\"\n"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:90
msgid ""
"Assuming that the @command{adb} utility is installed on a GNU/Linux or Unix "
"system, follow the steps below to connect to your device."
msgstr ""

#. type: enumerate
#: original_texis/android.texi:96
msgid ""
"Enable ``developer options'' on your device, by going to the ``About'' page "
"in the system settings application and clicking on the ``build version'' or "
"``kernel version'' items five to seven times."
msgstr ""

#. type: enumerate
#: original_texis/android.texi:100
msgid ""
"Open the ``developer options'' settings page, which should be under the "
"``system'' page in the settings application."
msgstr ""

#. type: enumerate
#: original_texis/android.texi:103
msgid "Turn on the switch ``USB debugging''."
msgstr ""

#. type: enumerate
#: original_texis/android.texi:107
msgid ""
"Connect one end of a USB cable to your device, and the other end to your "
"computer's USB port."
msgstr ""

#. type: enumerate
#: original_texis/android.texi:112
msgid ""
"Run the command @command{adb shell} on your computer.  This will fail or "
"hang because you have not yet granted your computer permission to access the "
"connected device."
msgstr ""

#. type: enumerate
#: original_texis/android.texi:116
msgid ""
"Confirm the pop-up displayed on your device asking whether or not it should "
"allow access from your computer."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:123
msgid ""
"Depending on the versions of Android and @command{adb} installed, there may "
"be other ways to establish a connection.  See the official documentation at "
"@url{https://developer.android.com/studio/command-line/adb} for more "
"details."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:127
msgid ""
"Once Emacs starts up, simply running the command @command{logcat} as an "
"asynchronous shell command (@pxref{Shell}) will display the log buffer."
msgstr ""

#. type: cindex
#: original_texis/android.texi:128
#, no-wrap
msgid "emacsclient wrapper, android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:133
msgid ""
"Since there is no other way to start the @command{emacsclient} program "
"(@pxref{Emacs Server}) from another Android program, Emacs provides a "
"wrapper around the @command{emacsclient} program, which is registered with "
"the system as an application that can open any file."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:139
msgid ""
"When that wrapper is selected as the program with which to open a file, it "
"invokes @command{emacsclient} with the options @command{--reuse-frame}, "
"@command{--timeout=10}, @command{--no-wait}, and the name of the file being "
"opened.  Then, upon success, the focus is transferred to any open Emacs "
"frame."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:144
msgid ""
"However, if Emacs is not running at the time the wrapper is opened, it "
"starts Emacs and gives it the file to open as an argument.  Note that if "
"that Emacs in turn does not start the Emacs server, subsequent attempts to "
"open the file with the wrapper will fail."
msgstr ""

#. type: cindex
#: original_texis/android.texi:145
#, no-wrap
msgid "/content/by-authority directory, android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:146
#, no-wrap
msgid "/content/by-authority-named directory, android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:153
msgid ""
"Some files are given to Emacs as ``content identifiers'' that the system "
"provides access to outside the normal filesystem APIs.  Emacs uses "
"pseudo-directories named @file{/content/by-authority} and "
"@file{/content/by-authority-named} to access those files.  Do not make any "
"assumptions about the contents of these directories, or try to open files in "
"it yourself."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:157
msgid ""
"This feature is not provided on Android 4.3 and earlier, in which case such "
"files are copied to a temporary directory before being opened."
msgstr ""

#. type: cindex
#: original_texis/android.texi:158
#, no-wrap
msgid "``org-protocol'' links, android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:162
msgid ""
"In addition to opening ordinary text files, Emacs also registers its "
"@command{emacsclient} wrapper as a program capable of opening "
"``org-protocol'' links (@pxref{Protocols,,,org, The Org Manual})."
msgstr ""

#. type: cindex
#: original_texis/android.texi:163
#, no-wrap
msgid "``mailto'' links, android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:169
msgid ""
"Furthermore, the wrapper is also registered as a program capable of sending "
"mail to @code{mailto} URIs; when it is invoked to open such a URL, it calls "
"the function @code{message-mailto} with that URI as its first argument.  "
"This feature does not function when the Emacs server is not already running."
msgstr ""

#. type: section
#: original_texis/android.texi:171
#, no-wrap
msgid "What Files Emacs Can Access on Android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:172
#, no-wrap
msgid "/assets directory, android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:184
msgid ""
"Emacs exposes a special directory on Android systems: the name of the "
"directory is @file{/assets}, and it contains the @file{etc}, @file{lisp} and "
"@file{info} directories which are normally installed in "
"@file{/usr/share/emacs} directory on GNU and Unix systems.  On Android "
"systems, the Lisp emulation of @command{ls} (@pxref{ls in Lisp}) is also "
"enabled by default, as the @command{ls} binary which comes with the system "
"varies by manufacturer and usually does not support all of the features "
"required by Emacs.  One copy of @command{ls} distributed with some Android "
"systems is even known to lack support for the @code{-l} flag."
msgstr ""

#. type: cindex
#: original_texis/android.texi:185
#, no-wrap
msgid "limitations of the /assets directory"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:192
msgid ""
"This directory exists because Android does not extract the contents of "
"application packages on to the file system while unpacking them, but instead "
"requires programs like Emacs to access its contents using a special ``asset "
"manager'' interface.  Here are the peculiarities that result from such an "
"implementation:"
msgstr ""

#. type: itemize
#: original_texis/android.texi:200
msgid ""
"Subprocesses (such as @command{ls}) can not run from the @file{/assets} "
"directory; if you try to run a subprocess with @code{current-directory} set "
"to @file{/assets}, @file{/content/storage} or a subdirectory thereof, it "
"will run from the home directory instead."
msgstr ""

#. type: itemize
#: original_texis/android.texi:204
msgid ""
"There are no @file{.} and @file{..} directories inside the @file{/assets} or "
"@file{/content} directory."
msgstr ""

#. type: itemize
#: original_texis/android.texi:208
msgid ""
"Files in the @file{/assets} directory are always read only, and may be read "
"in to memory more than once each time they are opened."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:212
msgid ""
"Aside from the @file{/assets} directory, Android programs normally have "
"access to four other directories.  They are:"
msgstr ""

#. type: itemize
#: original_texis/android.texi:217
msgid ""
"The @dfn{app data} directory.  This also serves as the home directory for "
"Emacs, and is always accessible read-write."
msgstr ""

#. type: itemize
#: original_texis/android.texi:222
msgid ""
"The @dfn{app library} directory.  This is automatically appended to "
"@code{exec-path} and made @code{exec-directory} upon startup, and contains "
"utility executables alongside Emacs itself."
msgstr ""

#. type: itemize
#: original_texis/android.texi:227
msgid ""
"The @dfn{external storage} directory.  This is accessible to Emacs when the "
"user grants the ``Files and Media'' permission to Emacs via system settings."
msgstr ""

#. type: itemize
#: original_texis/android.texi:233
msgid ""
"Directories provided by @dfn{document providers} on Android 5.0 and later.  "
"These directories exist outside the normal Unix filesystem, containing files "
"provided by external programs (@pxref{Android Document Providers}.)"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:243
msgid ""
"Despite ordinary installations of Android not having files within the "
"(normally read-only) root directory named @file{content} or @file{assets}, "
"you may want to access real files by these names if the Android installation "
"in use has been customized.  These files will conflict with the "
"aforementioned special directories, but can nevertheless be accessed by "
"writing their names relative to the ``parent'' directory of the root "
"directory, as so illustrated: @file{/../content}, @file{/../assets}."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:248
msgid ""
"The external storage directory is found at @file{/sdcard}.  The other "
"directories are not found at any fixed location (but see below), although "
"the app data directory is typically symlinked to "
"@file{/data/data/org.gnu.emacs/files}."
msgstr ""

#. type: cindex
#: original_texis/android.texi:249
#, no-wrap
msgid "app library directory, android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:250
#, no-wrap
msgid "where is emacsclient under android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:255
msgid ""
"Older versions of Android used to place the app library directory under the "
"name @file{lib} in the parent of the app data directory.  Today, this "
"directory is often placed in a directory with a randomly generated name "
"under @file{/data/app}."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:261
msgid ""
"For the convenience of scripts running within applications sharing the same "
"user ID as Emacs (which have no access to the @code{exec-directory} "
"variable), a fairly considerable effort is made at startup to symlink the "
"application library directory to its traditional location within the parent "
"of the app data directory."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:266
msgid ""
"If Emacs is reinstalled and the location of the app library directory "
"consequently changes, that symlink will also be updated to point to its new "
"location the next time Emacs is started by the system."
msgstr ""

#. type: cindex
#: original_texis/android.texi:267
#, no-wrap
msgid "temp~unlinked.NNNN files, Android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:273
msgid ""
"On Android devices running very old (2.6.29) versions of the Linux kernel, "
"Emacs needs to create files named starting with @file{temp~unlinked} in the "
"temporary file directory in order to read from asset files.  Do not create "
"files with such names yourself, or they may be overwritten or removed."
msgstr ""

#. type: cindex
#: original_texis/android.texi:274
#, no-wrap
msgid "file system limitations, Android 11"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:278
msgid ""
"On Android 11 and later, the Android system restricts applications from "
"accessing files in the @file{/sdcard} directory using file-related system "
"calls such as @code{open} and @code{readdir}."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:286
msgid ""
"This restriction is known as ``Scoped Storage'', and supposedly makes the "
"system more secure.  Unfortunately, it also means that Emacs cannot access "
"files in those directories, despite holding the necessary permissions.  "
"Thankfully, the Open Handset Alliance's version of Android allows this "
"restriction to be disabled on a per-program basis; the corresponding option "
"in the system settings panel is:"
msgstr ""

#. type: example
#: original_texis/android.texi:289
#, no-wrap
msgid "System -> Apps -> Special App Access -> All files access -> Emacs\n"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:295
msgid ""
"After you disable or enable this setting as appropriate and grant Emacs the "
"``Files and Media'' permission, it will be able to access files under "
"@file{/sdcard} as usual.  These settings are not present on some proprietary "
"versions of Android."
msgstr ""

#. type: section
#: original_texis/android.texi:297
#, no-wrap
msgid "Accessing Files from Other Programs on Android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:298
#, no-wrap
msgid "document providers, Android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:299
#, no-wrap
msgid "/content/storage directory, Android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:307
msgid ""
"Android 5.0 introduces a new sort of program, the ``document provider'': "
"these programs are small services that provide access to their own files "
"independently of the asset manager and the Unix filesystem.  Emacs supports "
"accessing files and directories they provide, placing their files within the "
"directory @file{/content/storage}."
msgstr ""

#. type: findex
#: original_texis/android.texi:308
#, no-wrap
msgid "android-request-directory-access"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:313
msgid ""
"Before Emacs is granted access to one of these directories, it must first "
"request the right to access it.  This is done by running the command "
"(@pxref{M-x}) @code{android-request-directory-access}, which displays a file "
"selection dialog."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:319
msgid ""
"If a directory is selected from this dialog, its contents are subsequently "
"made available within a new directory named "
"@file{/content/storage/@var{authority}/@var{id}}, where @var{authority} is "
"the name of the document provider, and @var{id} is a unique identifier "
"assigned to the directory by the document provider."
msgstr ""

#. type: findex
#: original_texis/android.texi:320
#, no-wrap
msgid "android-relinquish-directory-access"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:323
msgid ""
"Such a directory can be deleted once no longer required by providing its "
"name to the command @code{android-relinquish-directory-access}."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:330
msgid ""
"The same limitations applied to the @file{/assets} directory (@pxref{Android "
"File System}) are applied when creating sub-processes within those "
"directories, because they do not exist within the Unix file-system.  In "
"addition, although Emacs can normally write and create files inside these "
"directories, it cannot create symlinks or hard links."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:335
msgid ""
"Since document providers are allowed to perform expensive network operations "
"to obtain file contents, a file access operation within one of these "
"directories has the potential to take a significant amount of time."
msgstr ""

#. type: section
#: original_texis/android.texi:337
#, no-wrap
msgid "Running Emacs under Android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:342
msgid ""
"From the perspective of users, Android is mostly a single user operating "
"system; however, from the perspective of applications and Emacs, the system "
"is host to an overwhelming number of users."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:350
msgid ""
"Each application runs in its own user, with its home directory set to its "
"app data directory (@pxref{Android File System}.)@footnote{Except in cases "
"where a ``shared user ID'' is specified and other applications signed using "
"the same ``package signing key'' are installed, in which case Emacs runs as "
"the same user and has access to the same files as each of the aforementioned "
"applications.}"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:353
msgid ""
"Each application is also prohibited from accessing many system directories "
"and the app data directories of other applications."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:366
msgid ""
"The Emacs distribution also incorporates several binaries.  While being "
"executable files, they are packaged as libraries in the library directory, "
"because otherwise the system will not unpack them while Emacs is being "
"installed.  This means that instead of @code{ctags} or @code{emacsclient}, "
"Lisp code must specify @code{libctags.so} or @code{libemacsclient.so} on the "
"command line when starting either of those programs in a subprocess; to "
"determine which names to use, consult the values of the variables "
"@code{ctags-program-name}, @code{etags-program-name}, "
"@code{hexl-program-name}, @code{emacsclient-program-name}, "
"@code{movemail-program-name}, @code{ebrowse-program-name}, and "
"@code{rcs2log-program-name}.  @xref{Subprocess Creation,,, elisp, the Emacs "
"Lisp Reference Manual}."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:378
msgid ""
"The @file{/assets} directory containing Emacs start-up files is meant to be "
"inaccessible to processes not directly created by @code{zygote}, the system "
"service responsible for starting applications.  Since required Lisp is found "
"in the @file{/assets} directory, it would thus follow that it is not "
"possible for Emacs to start itself as a subprocess.  A special binary named "
"@command{libandroid-emacs.so} is provided with Emacs, which is installed "
"into the library directory, and which tries its best to start Emacs for the "
"purpose of running Lisp in batch mode.  The approach it takes was devised by "
"reference to Android source code, and is not sanctioned by the Android "
"compatibility definition documents, so your mileage may vary."
msgstr ""

#. type: cindex
#: original_texis/android.texi:379
#, no-wrap
msgid "EMACS_CLASS_PATH environment variable, Android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:394
msgid ""
"Even when the location of the @command{libandroid-emacs.so} command is known "
"in advance, special preparation is required to run Emacs from elsewhere than "
"a subprocess of an existing Emacs session, as it must be made to understand "
"the location of resources and shared libraries in or extracted from the "
"installed application package.  The OS command @command{pm path "
"org.gnu.emacs} will print the location of the application package, though "
"the said command must be invoked in a peculiar manner to satisfy system "
"restrictions on communication between pseudoterminal devices created by user "
"applications and system services such as the package manager, which is to "
"say, with the standard IO streams redirected to a real file or a pipe.  This "
"value, once established, must be specified in the environment variables "
"@code{EMACS_CLASS_PATH}, so that this sample shell script may be installed "
"as @code{emacs} in any location that is accessible:"
msgstr ""

#. type: example
#: original_texis/android.texi:397
#, no-wrap
msgid ""
"#!/system/bin/sh\n"
"\n"
msgstr ""

#. type: example
#: original_texis/android.texi:402
#, no-wrap
msgid ""
"package_name=`pm path org.gnu.emacs 2>/dev/null </dev/null \\\n"
"               | sed 's/^package://'`\n"
"emacs=\n"
"EMACS_CLASS_PATH=$package_name\n"
"\n"
msgstr ""

#. type: example
#: original_texis/android.texi:408
#, no-wrap
msgid ""
"for libdir in `dirname $package_name`/lib/*; do\n"
"  ld_path=$@{ld_path:+$@{ld_path@}:@}$libdir\n"
"  test -x \"$libdir\"/libandroid-emacs.so \\\n"
"    && emacs=\"$libdir\"/libandroid-emacs.so\n"
"done\n"
"\n"
msgstr ""

#. type: example
#: original_texis/android.texi:412
#, no-wrap
msgid ""
"export EMACS_CLASS_PATH\n"
"test -x \"$emacs\" || exit 1\n"
"exec $emacs \"$@@\"\n"
msgstr ""

#. type: cindex
#: original_texis/android.texi:414
#, no-wrap
msgid "call-process, Android"
msgstr ""

#. type: vindex
#: original_texis/android.texi:415
#, no-wrap
msgid "android-use-exec-loader"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:424
msgid ""
"Android 10 and later also prohibit Emacs itself from running executables "
"inside the app data directory, ostensibly out of security concerns.  On "
"these systems, Emacs normally applies a workaround; however, this workaround "
"requires running all sub-processes through another subprocess which "
"implements an executable loader and applies process tracing to all its "
"children, which may prove problematic for a variety of reasons.  In that "
"case, the workaround can be disabled by changing the variable "
"@code{android-use-exec-loader} to @code{nil}."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:431
msgid ""
"When this workaround is in effect, process IDs retrieved through the "
"@code{process-id} function will be that of the executable loader process; "
"its child will belong to the same process group as the loader.  "
"Consequently, @code{interrupt-process}, and other related functions will "
"work correctly, but using the process ID returned by @code{process-id} for "
"other purposes will not."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:437
msgid ""
"One ramification of the mechanism by which process tracing is carried out is "
"that job control facilities inside inferior shells (@pxref{Interactive "
"Shell}) will not be able to stop processes, and @code{SIGSTOP} signals to "
"subprocesses created by Emacs will not take effect."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:443
msgid ""
"In addition, Android 12 also terminates subprocesses which are consuming CPU "
"while Emacs itself is in the background.  The system judges which processes "
"are consuming too much CPU at intervals of five minutes, and terminates the "
"process that has consumed the most CPU time."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:447
msgid ""
"Android 12.1 and Android 13 provide an option to disable this behavior; to "
"use it, enable ``USB debugging'' (@pxref{Android Startup}) connect the "
"Android system to another computer, and run:"
msgstr ""

#. type: example
#: original_texis/android.texi:450
#, no-wrap
msgid ""
"$ adb shell \"settings put global settings_enable_monitor_phantom_procs "
"false\"\n"
msgstr ""

#. type: cindex
#: original_texis/android.texi:452
#, no-wrap
msgid "system language settings, Android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:461
msgid ""
"The ``Languages & Input'' preferences which apply to the operating system do "
"not influence the C locale set for programs, but are taken into account by "
"Emacs during startup: a locale name is generated from the selected language "
"and regional variant and a language environment (@pxref{Language "
"Environments}) is selected on that basis, which does not overwrite "
"@code{LANG} or other locale-related environment variables.  The coding "
"system for language environments set in this fashion is @code{utf-8-unix} "
"without exception."
msgstr ""

#. type: cindex
#: original_texis/android.texi:462
#, no-wrap
msgid "C locale settings, Android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:469
msgid ""
"Instead, the @code{LANG} environment variable (@pxref{General Variables}) is "
"set to @code{en_US.utf8} when Emacs starts on Android 5.0 or newer, which "
"induces subprocesses linked against the Android C library to print output "
"sensibly.  Earlier versions of Android do not implement locales at all, and "
"on that account, the variable is set to @code{C}."
msgstr ""

#. type: cindex
#: original_texis/android.texi:470
#, no-wrap
msgid "running emacs in the background, android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:471
#, no-wrap
msgid "emacs killed, android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:472
#, no-wrap
msgid "emacs in the background, android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:478
msgid ""
"Application processes are treated as disposable entities by the system.  "
"When all Emacs frames move to the background, Emacs might be terminated by "
"the system at any time, for the purpose of saving system resources."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:482
msgid ""
"On Android 7.1 and earlier, Emacs designates itself a ``background "
"service'', which impels the system to avoid killing Emacs unless it is "
"stressed for memory."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:489
msgid ""
"Android 8.0 removed the ability for background services to receive such "
"special treatment.  However, Emacs applies a workaround: the system "
"considers applications that create a permanent notification to be performing "
"active work, and will avoid killing such applications.  Thus, on those "
"systems, Emacs displays a permanent notification for as long as it is "
"running."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:497
msgid ""
"Before Android 13, Emacs does not require rights to display notifications.  "
"Under Android 13 or later, the notification is hidden until the user accords "
"Emacs such rights.  In spite of that, merely attempting to display the "
"notification suffices to avert sudden death; whether the notification is "
"displayed has no bearing on Emacs's capacity to execute in the background, "
"and it may be disabled without any adverse consequences."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:505
msgid ""
"However, it is not guaranteed that the system will not kill Emacs.  Although "
"the Open Handset Alliance's sample implementation of Android behaves "
"correctly, many manufacturers institute additional restrictions on program "
"execution in the background in their proprietary versions of Android.  There "
"is a list of such troublesome manufacturers and sometimes workarounds at "
"@url{https://dontkillmyapp.com/}."
msgstr ""

#. type: cindex
#: original_texis/android.texi:506
#, no-wrap
msgid "permissions under android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:507
#, no-wrap
msgid "external storage, android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:513
msgid ""
"Android also defines a permissions system that determines what system "
"services Emacs is allowed to access.  Programs must specify what permissions "
"they want; what then happens is then subject to the version of Android being "
"used:"
msgstr ""

#. type: itemize
#: original_texis/android.texi:520
msgid ""
"Under more or less recent releases of Android, such as Android 6.0 and "
"later, Emacs only receives the following permissions upon installation, "
"subject to the presence or absence of individual permissions in the version "
"of Android installed:"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:524
msgid "android.permission.ACCESS_ADSERVICES_AD_ID"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:526
msgid "android.permission.ACCESS_ADSERVICES_ATTRIBUTION"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:528
msgid "android.permission.ACCESS_ADSERVICES_CUSTOM_AUDIENCE"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:530
msgid "android.permission.ACCESS_ADSERVICES_TOPICS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:532 original_texis/android.texi:779
msgid "android.permission.ACCESS_LOCATION_EXTRA_COMMANDS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:534 original_texis/android.texi:781
msgid "android.permission.ACCESS_NETWORK_STATE"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:536
msgid "android.permission.ACCESS_NOTIFICATION_POLICY"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:538 original_texis/android.texi:783
msgid "android.permission.ACCESS_WIFI_STATE"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:540
msgid "android.permission.AUTHENTICATE_ACCOUNTS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:542 original_texis/android.texi:785
msgid "android.permission.BLUETOOTH"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:544 original_texis/android.texi:787
msgid "android.permission.BLUETOOTH_ADMIN"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:546 original_texis/android.texi:789
msgid "android.permission.BROADCAST_STICKY"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:548
msgid "android.permission.CALL_COMPANION_APP"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:550 original_texis/android.texi:791
msgid "android.permission.CHANGE_NETWORK_STATE"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:552 original_texis/android.texi:793
msgid "android.permission.CHANGE_WIFI_MULTICAST_STATE"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:554 original_texis/android.texi:795
msgid "android.permission.CHANGE_WIFI_STATE"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:556
msgid "android.permission.CREDENTIAL_MANAGER_QUERY_CANDIDATE_CREDENTIALS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:558
msgid "android.permission.CREDENTIAL_MANAGER_SET_ALLOWED_PROVIDERS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:560
msgid "android.permission.CREDENTIAL_MANAGER_SET_ORIGIN"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:562
msgid "android.permission.DELIVER_COMPANION_MESSAGES"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:564
msgid "android.permission.DETECT_SCREEN_CAPTURE"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:566 original_texis/android.texi:797
msgid "android.permission.DISABLE_KEYGUARD"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:568
msgid "android.permission.ENFORCE_UPDATE_OWNERSHIP"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:570 original_texis/android.texi:799
msgid "android.permission.EXPAND_STATUS_BAR"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:572 original_texis/android.texi:801
msgid "android.permission.FLASHLIGHT"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:574
msgid "android.permission.FOREGROUND_SERVICE"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:576
msgid "android.permission.FOREGROUND_SERVICE_CAMERA"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:578
msgid "android.permission.FOREGROUND_SERVICE_CONNECTED_DEVICE"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:580
msgid "android.permission.FOREGROUND_SERVICE_DATA_SYNC"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:582
msgid "android.permission.FOREGROUND_SERVICE_FILE_MANAGEMENT"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:584
msgid "android.permission.FOREGROUND_SERVICE_HEALTH"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:586
msgid "android.permission.FOREGROUND_SERVICE_LOCATION"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:588
msgid "android.permission.FOREGROUND_SERVICE_MEDIA_PLAYBACK"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:590
msgid "android.permission.FOREGROUND_SERVICE_MEDIA_PROJECTION"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:592
msgid "android.permission.FOREGROUND_SERVICE_MICROPHONE"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:594
msgid "android.permission.FOREGROUND_SERVICE_PHONE_CALL"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:596
msgid "android.permission.FOREGROUND_SERVICE_REMOTE_MESSAGING"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:598
msgid "android.permission.FOREGROUND_SERVICE_SPECIAL_USE"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:600
msgid "android.permission.FOREGROUND_SERVICE_SYSTEM_EXEMPTED"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:602 original_texis/android.texi:803
msgid "android.permission.GET_PACKAGE_SIZE"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:604 original_texis/android.texi:805
msgid "android.permission.GET_TASKS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:606
msgid "android.permission.HIDE_OVERLAY_WINDOWS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:608
msgid "android.permission.HIGH_SAMPLING_RATE_SENSORS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:610 original_texis/android.texi:807
msgid "android.permission.INTERNET"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:612 original_texis/android.texi:809
msgid "android.permission.KILL_BACKGROUND_PROCESSES"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:614
msgid "android.permission.MANAGE_ACCOUNTS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:616
msgid "android.permission.MANAGE_OWN_CALLS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:618 original_texis/android.texi:811
msgid "android.permission.MODIFY_AUDIO_SETTINGS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:620 original_texis/android.texi:813
msgid "android.permission.NFC"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:622
msgid "android.permission.NFC_PREFERRED_PAYMENT_INFO"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:624
msgid "android.permission.NFC_TRANSACTION_EVENT"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:626 original_texis/android.texi:815
msgid "android.permission.PERSISTENT_ACTIVITY"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:628 original_texis/android.texi:817
msgid "android.permission.QUERY_ALL_PACKAGES"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:630 original_texis/android.texi:819
msgid "android.permission.READ_BASIC_PHONE_STATE"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:632
msgid "android.permission.READ_INSTALL_SESSIONS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:634
msgid "android.permission.READ_NEARBY_STREAMING_POLICY"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:636
msgid "android.permission.READ_PROFILE"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:638
msgid "android.permission.READ_SOCIAL_STREAM"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:640 original_texis/android.texi:821
msgid "android.permission.READ_SYNC_SETTINGS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:642 original_texis/android.texi:823
msgid "android.permission.READ_SYNC_STATS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:644 original_texis/android.texi:825
msgid "android.permission.READ_USER_DICTIONARY"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:646 original_texis/android.texi:827
msgid "android.permission.RECEIVE_BOOT_COMPLETED"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:648 original_texis/android.texi:829
msgid "android.permission.REORDER_TASKS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:650
msgid "android.permission.REQUEST_COMPANION_PROFILE_GLASSES"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:652
msgid "android.permission.REQUEST_COMPANION_PROFILE_WATCH"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:654
msgid "android.permission.REQUEST_COMPANION_RUN_IN_BACKGROUND"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:656
msgid "android.permission.REQUEST_COMPANION_START_FOREGROUND_SERVICES_FROM_BACKGROUND"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:658
msgid "android.permission.REQUEST_COMPANION_USE_DATA_IN_BACKGROUND"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:660 original_texis/android.texi:831
msgid "android.permission.REQUEST_DELETE_PACKAGES"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:662 original_texis/android.texi:833
msgid "android.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:664 original_texis/android.texi:835
msgid "android.permission.REQUEST_OBSERVE_COMPANION_DEVICE_PRESENCE"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:666
msgid "android.permission.REQUEST_PASSWORD_COMPLEXITY"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:668 original_texis/android.texi:837
msgid "android.permission.RESTART_PACKAGES"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:670
msgid "android.permission.RUN_USER_INITIATED_JOBS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:672 original_texis/android.texi:839
msgid "android.permission.SET_WALLPAPER"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:674 original_texis/android.texi:841
msgid "android.permission.SET_WALLPAPER_HINTS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:676
msgid "android.permission.SUBSCRIBED_FEEDS_READ"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:678
msgid "android.permission.SUBSCRIBED_FEEDS_WRITE"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:680 original_texis/android.texi:843
msgid "android.permission.TRANSMIT_IR"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:682
msgid "android.permission.UPDATE_PACKAGES_WITHOUT_USER_ACTION"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:684
msgid "android.permission.USE_BIOMETRIC"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:686
msgid "android.permission.USE_CREDENTIALS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:688
msgid "android.permission.USE_EXACT_ALARM"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:690
msgid "android.permission.USE_FINGERPRINT"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:692
msgid "android.permission.USE_FULL_SCREEN_INTENT"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:694 original_texis/android.texi:845
msgid "android.permission.VIBRATE"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:696 original_texis/android.texi:847
msgid "android.permission.WAKE_LOCK"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:698
msgid "android.permission.WRITE_PROFILE"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:700
msgid "android.permission.WRITE_SMS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:702
msgid "android.permission.WRITE_SOCIAL_STREAM"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:704 original_texis/android.texi:849
msgid "android.permission.WRITE_SYNC_SETTINGS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:706 original_texis/android.texi:851
msgid "android.permission.WRITE_USER_DICTIONARY"
msgstr ""

#. type: itemize
#: original_texis/android.texi:711
msgid ""
"Other permissions must be granted by the user from the system settings "
"application.  Consult the manufacturer of your device for more details, as "
"how to do this varies by device."
msgstr ""

#. type: itemize
#: original_texis/android.texi:715
msgid ""
"On Android 5.1 and earlier, Emacs automatically receives the following "
"permissions it has requested upon being installed:"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:719
msgid "android.permission.ACCESS_COARSE_LOCATION"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:721
msgid "android.permission.ACCESS_FINE_LOCATION"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:723
msgid "android.permission.BODY_SENSORS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:725
msgid "android.permission.CALL_PHONE"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:727
msgid "android.permission.CAMERA"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:729
msgid "android.permission.CAPTURE_CONSENTLESS_BUGREPORT_ON_USERDEBUG_BUILD"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:731
msgid "android.permission.GET_ACCOUNTS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:733
msgid "android.permission.POST_NOTIFICATIONS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:735
msgid "android.permission.PROCESS_OUTGOING_CALLS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:737
msgid "android.permission.READ_CALENDAR"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:739
msgid "android.permission.READ_CALL_LOG"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:741
msgid "android.permission.READ_CELL_BROADCASTS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:743
msgid "android.permission.READ_CONTACTS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:745
msgid "android.permission.READ_EXTERNAL_STORAGE"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:747
msgid "android.permission.READ_PHONE_NUMBERS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:749
msgid "android.permission.READ_PHONE_STATE"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:751
msgid "android.permission.READ_SMS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:753
msgid "android.permission.RECEIVE_MMS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:755
msgid "android.permission.RECEIVE_SMS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:757
msgid "android.permission.RECEIVE_WAP_PUSH"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:759
msgid "android.permission.RECORD_AUDIO"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:761
msgid "android.permission.REQUEST_INSTALL_PACKAGES"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:763
msgid "android.permission.SEND_SMS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:765
msgid "android.permission.SMS_FINANCIAL_TRANSACTIONS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:767
msgid "android.permission.SYSTEM_ALERT_WINDOW"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:769
msgid "android.permission.WRITE_CALENDAR"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:771
msgid "android.permission.WRITE_CALL_LOG"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:773
msgid "android.permission.WRITE_CONTACTS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:775
msgid "android.permission.WRITE_EXTERNAL_STORAGE"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:777
msgid "android.permission.WRITE_SETTINGS"
msgstr ""

#. type: itemize
#: original_texis/android.texi:856
msgid ""
"While most of these permissions are left unused by Emacs itself, they are "
"declared by Emacs as they could be useful for other programs; for example, "
"the permission to access contacts may be useful for EUDC."
msgstr ""

#. type: section
#: original_texis/android.texi:859
#, no-wrap
msgid "The Android Window System"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:867
msgid ""
"Android's window system is unusual in that all windows are reported to "
"applications as maximized or full-screen, and, in the general case, only one "
"window can be displayed at a time.  On larger devices, the system permits "
"simultaneously tiling up to four windows on the screen, though in emulators "
"or installations configured for ``desktop'' systems stacks freely resizable "
"windows as other desktop window managers do."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:875
msgid ""
"Windows, or, in system nomenclature, activities, do not exist indefinitely "
"after creation, as the system may choose to pause windows that are not "
"visible in order to conserve memory, on the assumption that the program will "
"save its contents to disk, to be restored when the user selects those "
"windows from the task switcher.  Furthermore, a window is created by the "
"operating system at Emacs startup that is afforded special treatment, which "
"Emacs is expected to adopt."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:887
msgid ""
"Emacs approaches window management with the general objective of minimizing "
"differences in frame behavior exposed to Lisp from that of frames on "
"ordinary window systems, such as X Windows; the degree to which this goal is "
"actually attained varies by the availability of facilities for window "
"management in the version of Android where it is installed, and operating "
"system policy towards inactive windows.  When it is unavoidable that "
"concessions should be made to such policy, Emacs prefers destroying frames "
"to retaining ones with no activities to display them, unless such a frame is "
"the initial frame and therefore displayed in the activity created at "
"startup, which it is possible to open and identify so long as Emacs is yet "
"executing."
msgstr ""

#. type: cindex
#: original_texis/android.texi:888
#, no-wrap
msgid "frames and windows, Android 5.0"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:894
msgid ""
"Android 5.0 and later support an accurate implementation of window "
"management where frames hold a one-to-one relation to the activities in "
"which they are displayed, enabling deletion of activities in the task "
"switcher to directly affect the frames concerned, and vice versa.  There are "
"just two exceptions:"
msgstr ""

#. type: itemize
#: original_texis/android.texi:906
msgid ""
"After the system pauses an activity that remains in the task switcher in "
"response to inactivity, removing it from the task switcher while it remains "
"in its inactive state will not delete the frame inside, as Emacs is not "
"notified of the deletion of its activities in such circumstances.  The frame "
"will be deleted upon the next window management operation that prompts an "
"examination of the list of live windows.  Likewise, an inactive activity "
"displaying a frame will not be immediately deleted with its frame, but will "
"be if it is selected from the window list or upon another examination of the "
"window list."
msgstr ""

#. type: itemize
#: original_texis/android.texi:917
msgid ""
"Any frame besides the initial frame might be deleted after 4 to 6 hours of "
"inactivity in the background, if it is removed by the system in ``trimming'' "
"the task switcher of excess, and presumably unwanted, tasks; the initial "
"frame is exempt from this treatment because it can be reopened otherwise "
"than from the task switcher, but as deletion by this mechanism is "
"indistinguishable from legitimate user action to remove activities from the "
"task switcher, the latter will also be ignored by the initial frame after a "
"4-hour interval elapses from the time of last activity."
msgstr ""

#. type: cindex
#: original_texis/android.texi:919
#, no-wrap
msgid "frames and windows, Android 4.4"
msgstr ""

#. type: cindex
#: original_texis/android.texi:920
#, no-wrap
msgid "frames and windows, Android 2.2"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:928
msgid ""
"Android 4.4 and earlier provide considerably inferior interfaces inadequate "
"for a complete implementation of window management.  On such systems, Emacs "
"substitutes a fairly primitive mechanism where all but the initial frame are "
"deleted when their activities are paused, only a single activity (not "
"counting the activity created at startup) is visible at a time, and "
"unattached frames are displayed in the first unoccupied activity available."
msgstr ""

#. type: cindex
#: original_texis/android.texi:929
#, no-wrap
msgid "windowing limitations, android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:930
#, no-wrap
msgid "frame parameters, android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:933
msgid ""
"Emacs only supports a limited subset of GUI features on Android; the "
"limitations are as follows:"
msgstr ""

#. type: itemize
#: original_texis/android.texi:938
msgid ""
"Scroll bars are not supported, as they are close to useless on Android "
"devices."
msgstr ""

#. type: itemize
#: original_texis/android.texi:945
msgid ""
"The @code{alpha}, @code{alpha-background}, @code{z-group}, "
"@code{override-redirect}, @code{mouse-color}, @code{title}, "
"@code{wait-for-wm}, @code{sticky}, and @code{undecorated} frame parameters "
"(@pxref{Frame Parameters,,, elisp, the Emacs Lisp Reference Manual}) are "
"unsupported."
msgstr ""

#. type: itemize
#: original_texis/android.texi:950
msgid ""
"On Android 4.0 and earlier, the @code{fullscreen} frame parameter is always "
"@code{maximized} for top-level frames; on later versions of Android, it can "
"also be @code{fullscreen}."
msgstr ""

#. type: cindex
#: original_texis/android.texi:952
#, no-wrap
msgid "selections, android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:953
#, no-wrap
msgid "android clipboard"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:958
msgid ""
"Emacs does not implement all selection related features supported under the "
"X Window System on Android.  For example, only the @code{CLIPBOARD} and "
"@code{PRIMARY} selections (@pxref{Cut and Paste})  are supported, and Emacs "
"is only able to set selections to plain text."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:961
msgid ""
"In addition, the Android system itself places certain restrictions on what "
"selection data Emacs can access:"
msgstr ""

#. type: itemize
#: original_texis/android.texi:966
msgid ""
"On Android 2.3 and earlier, the function @code{gui-selection-owner-p} always "
"returns @code{nil} for the clipboard selection."
msgstr ""

#. type: itemize
#: original_texis/android.texi:971
msgid ""
"Between Android 3.0 and Android 9.0, Emacs is able to access the clipboard "
"whenever it wants, and @code{gui-selection-owner-p} always returns accurate "
"results."
msgstr ""

#. type: itemize
#: original_texis/android.texi:977
msgid ""
"Under Android 10.0 and later, Emacs can only access clipboard data when one "
"of its frames has the input focus, and @code{gui-selection-owner-p} always "
"returns @code{nil} for the clipboard selection."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:983
msgid ""
"Since the Android system itself has no concept of a primary selection, Emacs "
"provides an emulation instead.  This means there is no way to transfer the "
"contents of the primary selection to another application via cut-and-paste."
msgstr ""

#. type: vindex
#: original_texis/android.texi:984
#, no-wrap
msgid "android-pass-multimedia-buttons-to-system"
msgstr ""

#. type: cindex
#: original_texis/android.texi:985
#, no-wrap
msgid "volume/multimedia buttons, Android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:996
msgid ""
"The volume keys are normally reserved by Emacs and used to provide the "
"ability to quit Emacs without a physical keyboard (@pxref{On-Screen "
"Keyboards}).  However, if you want them to adjust the volume instead, you "
"can set the variable @code{android-pass-multimedia-buttons-to-system} to a "
"non-@code{nil} value; note that you will no longer be able to quit Emacs "
"using the volume buttons in that case, and that it is generally easier to "
"activate the notification shade or another interface that momentarily "
"deprives Emacs of the keyboard focus while the volume buttons are being "
"depressed."
msgstr ""

#. type: cindex
#: original_texis/android.texi:997
#, no-wrap
msgid "dialog boxes, android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:1003
msgid ""
"Emacs is unable to display dialog boxes (@pxref{Dialog Boxes}) while it does "
"not have the input focus on Android 6.0 or later.  If this is important to "
"you, this capability can be restored by granting Emacs permission to display "
"over other programs.  On most systems, this can be done from the following "
"Settings menu:"
msgstr ""

#. type: example
#: original_texis/android.texi:1006
#, no-wrap
msgid "System -> Apps -> Emacs -> More -> Display over other apps\n"
msgstr ""

#. type: cindex
#: original_texis/android.texi:1008
#, no-wrap
msgid "keyboard modifiers, android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:1016
msgid ""
"There is a direct relation between physical modifier keys and Emacs "
"modifiers (@pxref{Modifier Keys}) reported within key events, subject to a "
"single exception: if @key{Alt} on your keyboard is depressed, then the "
"@key{Meta} modifier will be reported by Emacs in its place, and vice versa.  "
"This irregularity is since most keyboards possess no special @key{Meta} key, "
"and the @key{Alt} modifier is seldom employed in Emacs."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:1020
msgid ""
"Bear in mind that Android uses a different name for the @key{Super} "
"modifier: it is referred to as @key{SYM} on Android keyboards and within the "
"Settings keymap menu."
msgstr ""

#. type: vindex
#: original_texis/android.texi:1021
#, no-wrap
msgid "android-intercept-control-space"
msgstr ""

#. type: cindex
#: original_texis/android.texi:1022
#, no-wrap
msgid "@kbd{C-SPC} interception, android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:1028
msgid ""
"Android input methods have a penchant for irritating users by silently "
"discarding key sequences containing @kbd{C-SPC} during the event filtering "
"process, that they normally have no real application for such key sequences "
"notwithstanding.  By default, Emacs intercepts these key sequences before "
"they can be filtered by the input method."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:1033
msgid ""
"If this proves unwanted (for instance, if the input method treats "
"@kbd{C-SPC} as a shortcut key for switching languages), it can be disabled "
"by setting the variable @code{android-intercept-control-space} to "
"@code{nil}."
msgstr ""

#. type: vindex
#: original_texis/android.texi:1034
#, no-wrap
msgid "android-keyboard-bell-duration"
msgstr ""

#. type: cindex
#: original_texis/android.texi:1035
#, no-wrap
msgid "keyboard bell, android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:1042
msgid ""
"The keyboard bell installed within Android systems takes the form of a "
"vibrating element that is activated for a number of milliseconds whenever "
"the bell is rung.  The duration of this vibration can be customized through "
"altering the variable @code{android-keyboard-bell-duration} to any value "
"between @code{10} and @code{1000}."
msgstr ""

#. type: vindex
#: original_texis/android.texi:1043
#, no-wrap
msgid "android-display-planes"
msgstr ""

#. type: cindex
#: original_texis/android.texi:1044
#, no-wrap
msgid "visual class, Android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:1045
#, no-wrap
msgid "display color space, Android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:1056
msgid ""
"Color-related characteristics of the display are not automatically "
"detectable on Android, so the variable @code{android-display-planes} should "
"be configured to a suitable value if Emacs is to realize faces and images in "
"a manner consistent with the true visual attributes of a grayscale or "
"monochrome display: to @code{8} for the former class of display, and "
"@code{1} for the latter, which will, respectively, force all colors to be "
"rendered in 256 grays, or in monochrome.  As this variable is processed at "
"the time the display connection is established, customizations will not take "
"effect unless they be performed from @code{early-init.el} (@pxref{Early Init "
"File})."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:1061
msgid ""
"The value of this variable does not affect anti-aliasing in the font driver, "
"as monochrome displays nevertheless expect Emacs to provide antialiased "
"text, which they receive after it is processed into bitmap data by the "
"display driver."
msgstr ""

#. type: section
#: original_texis/android.texi:1063
#, no-wrap
msgid "Font Backends and Selection under Android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:1064
#, no-wrap
msgid "fonts, android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:1068
msgid ""
"Emacs supports two font backends under Android: they are respectively named "
"@code{sfnt-android} and @code{android}."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:1075
msgid ""
"Upon startup, Emacs enumerates all the TrueType format fonts in the "
"directories @file{/system/fonts} and @file{/product/fonts}, and the "
"@file{fonts} directory (@dfn{user fonts directory}) inside the Emacs home "
"directory.  Emacs assumes there will always be a font named ``Droid Sans "
"Mono'', and then defaults to using this font.  These fonts are then "
"displayed by the @code{sfnt-android} font driver."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:1080
msgid ""
"This font driver is presently without support for OpenType or color fonts; "
"hence, only a subset of the fonts installed on any given system are "
"available to Emacs.  If you are interested in lifting this limitation, "
"please contact @email{emacs-devel@@gnu.org}."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:1087
msgid ""
"If the @code{sfnt-android} font driver fails to find any fonts at all, Emacs "
"falls back to the @code{android} font driver.  This is a very poor font "
"driver, consequent upon limitations and inaccuracies in the font metrics "
"provided by the Android platform.  In that case, Emacs uses the "
"``Monospace'' typeface configured on your system; this should always be "
"Droid Sans Mono."
msgstr ""

#. type: cindex
#: original_texis/android.texi:1088
#, no-wrap
msgid "TrueType GX fonts, android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:1089
#, no-wrap
msgid "distortable fonts, android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:1095
msgid ""
"As on X systems, Emacs supports distortable fonts under Android.  These "
"fonts (also termed ``TrueType GX fonts'', ``variable fonts'', and ``multiple "
"master fonts'') provide multiple different styles (``Bold'', ``Italic'', and "
"the like) using a single font file."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:1105
msgid ""
"When a user-installed distortable font is found, each style that a "
"previously discovered font provided will no longer be used.  In addition, "
"any previously installed distortable fonts with the same family name are "
"also disregarded, provided that the new distortable font supplies a superset "
"of the styles furnished by the previously installed font.  When a "
"conventional font is found, any previous conventional font with the same "
"style and family will be removed; distortable fonts with the same family "
"will no longer be used to provide that style."
msgstr ""

#. type: cindex
#: original_texis/android.texi:1106
#, no-wrap
msgid "default font families, Android"
msgstr ""

#. type: vindex
#: original_texis/android.texi:1107
#, no-wrap
msgid "sfnt-default-family-alist"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:1114
msgid ""
"Emacs generally assumes the presence of font families named "
"@samp{Monospace}, @samp{Monospace Serif}, @samp{Sans Serif}, and "
"@samp{DejaVu Serif}.  Since Android does not provide any fonts by these "
"names, Emacs modifies requests for them to request one of a corresponding "
"set of font families distributed with Android."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:1121
msgid ""
"To change either the set of font families subject to replacement, or that by "
"which they are replaced, modify the variable "
"@code{sfnt-default-family-alist}; then, restart Emacs.  Bear in mind that "
"this is usually unwarranted, with customizations to the default or "
"@code{variable-pitch} faces better made through modifying their definitions "
"(@pxref{Face Customization})."
msgstr ""

#. type: section
#: original_texis/android.texi:1123
#, no-wrap
msgid "Troubleshooting Startup Problems on Android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:1124
#, no-wrap
msgid "troubleshooting, android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:1126
#, no-wrap
msgid "emacs -Q, android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:1127
#, no-wrap
msgid "emacs --debug-init, android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:1134
msgid ""
"Since Android has no command line, there is normally no way to specify "
"command-line arguments when starting Emacs.  This is very nasty when you "
"make a mistake in your Emacs initialization files that prevents Emacs from "
"starting up at all, as the system generally prohibits other programs from "
"accessing Emacs's home directory.  @xref{Initial Options}."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:1141
msgid ""
"However, Emacs can be started with the equivalent of either the option "
"@code{--quick}, or @code{--debug-init} through a special preferences "
"screen.  Under Android 7.0 and later, this can be accessed through the Emacs "
"``app info'' page in the system settings program; on older systems, this is "
"displayed as a separate icon on the desktop labeled ``Emacs options''."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:1144
msgid ""
"Consult the manufacturer of your device for more details, as how to do this "
"varies by device."
msgstr ""

#. type: cindex
#: original_texis/android.texi:1145
#, no-wrap
msgid "dumping, android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:1151
msgid ""
"The first time any given copy of Emacs starts on a device, it spends a while "
"loading the preloaded Lisp files which normally come with Emacs.  This "
"produces a ``dump file'' (@pxref{Initial Options}) in the files directory, "
"containing an identifier unique to that copy of Emacs."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:1154
msgid ""
"The next time that same copy of Emacs starts up, it simply loads the data "
"contained in that dump file, greatly reducing start up time."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:1159
msgid ""
"If by some unforeseen circumstance the dump file is corrupted, Emacs can "
"crash.  If that happens, the dump file stored in the Emacs files directory "
"can be erased through the preferences screen described above."
msgstr ""

#. type: cindex
#: original_texis/android.texi:1160
#, no-wrap
msgid "accessing Emacs directories, Android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:1165
msgid ""
"Emacs supports an alternative method of rescuing broken Emacs installations "
"on Android 4.4 and later: Emacs exports a ``documents provider'' which "
"accesses the contents of Emacs's home directory, that can then be accessed "
"by any file manager program."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:1169
msgid ""
"If you can find out how to open that documents provider in the file manager "
"that comes with your device, you can rename, delete, or edit your "
"initialization or dump files from there instead."
msgstr ""

#. type: section
#: original_texis/android.texi:1171
#, no-wrap
msgid "Installing Extra Software on Android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:1172
#, no-wrap
msgid "installing extra software on Android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:1173
#, no-wrap
msgid "installing Unix software on Android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:1181
msgid ""
"An exceptionally limited set of Unix-like command line tools is distributed "
"alongside default installations of Android.  Several projects exist to "
"augment this selection, providing options that range from improved "
"reproductions of Unix command-line utilities to package repositories "
"providing extensive collections of free GNU and Unix software."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:1186
msgid ""
"@uref{http://busybox.net, Busybox} provides Unix utilities and limited "
"replicas of certain popular GNU programs such as @command{wget} in a single "
"statically-linked Linux binary, which is capable of running under Android."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:1198
msgid ""
"@uref{https://termux.dev, Termux} provides a package manager based on the "
"Debian project's @command{dpkg} system and a set of package repositories "
"containing substantial amounts of free software for Unix systems, including "
"compilers, debuggers, and runtimes for languages such as C, C++, Java, "
"Python and Common Lisp.  These packages are customarily installed from "
"within a purpose-built terminal emulator application, but access is also "
"granted to Emacs when it is built with the same application signing key, and "
"its ``shared user ID'' is set to the same package name, as that of the "
"terminal emulator program.  The file @file{java/INSTALL} within the Emacs "
"distribution illustrates how to build Emacs in this fashion."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:1203
msgid ""
"@uref{https://github.com/termux/termux-packages, termux-packages} provides "
"the package definitions used by Termux to generate their package "
"repositories, which may also be independently compiled for installation "
"within Emacs's home directory."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:1206
msgid ""
"In addition to the projects mentioned above, statically linked binaries for "
"most Linux kernel-based systems can also be run on Android."
msgstr ""
