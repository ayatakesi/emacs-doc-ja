# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2024-06-30 07:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: node
#: original_texis/package.texi:5
#, no-wrap
msgid "Packages"
msgstr ""

#. type: chapter
#: original_texis/package.texi:6
#, no-wrap
msgid "Emacs Lisp Packages"
msgstr ""

#. type: cindex
#: original_texis/package.texi:7
#, no-wrap
msgid "Package"
msgstr ""

#. type: cindex
#: original_texis/package.texi:8
#, no-wrap
msgid "Package archive"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:20
msgid ""
"Emacs is extended by implementing additional features in @dfn{packages}, "
"which are Emacs Lisp libraries.  These could be written by you or provided "
"by someone else.  If you want to install such a package so it is available "
"in your future Emacs session, you need to compile it and put it in a "
"directory where Emacs looks for Lisp libraries.  @xref{Lisp Libraries}, for "
"more details about this manual installation method.  Many packages provide "
"installation and usage instructions in the large commentary near the "
"beginning of the Lisp file; you can use those instructions for installing "
"and fine-tuning your use of the package."
msgstr ""

#. type: cindex
#: original_texis/package.texi:21
#, no-wrap
msgid "Emacs Lisp package archive"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:28
msgid ""
"Packages can also be provided by @dfn{package archives}, which are large "
"collections of Emacs Lisp packages.  Each package is a separate Emacs Lisp "
"program, sometimes including other components such as an Info manual.  Emacs "
"includes a facility that lets you easily download and install packages from "
"such archives.  The rest of this chapter describes this facility."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:33
msgid ""
"To list the packages available for installation from package archives, type "
"@w{@kbd{M-x list-packages @key{RET}}}.  It brings up a buffer named "
"@file{*Packages*} with a list of all packages.  You can install or uninstall "
"packages via this buffer.  @xref{Package Menu}."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:37
msgid ""
"The command @kbd{C-h P} (@code{describe-package}) prompts for the name of a "
"package, and displays a help buffer describing the attributes of the package "
"and the features that it implements."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:42
msgid ""
"By default, Emacs downloads packages from a package archive maintained by "
"the Emacs developers and hosted by the GNU project.  Optionally, you can "
"also download packages from archives maintained by third parties.  "
"@xref{Package Installation}."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:46
msgid ""
"For information about turning an Emacs Lisp program into an installable "
"package, @xref{Packaging,,,elisp, The Emacs Lisp Reference Manual}."
msgstr ""

#. type: node
#: original_texis/package.texi:53 original_texis/package.texi:55
#, no-wrap
msgid "Package Menu"
msgstr ""

#. type: menuentry
#: original_texis/package.texi:53
msgid "Buffer for viewing and managing packages."
msgstr ""

#. type: section
#: original_texis/package.texi:53 original_texis/package.texi:289
#: original_texis/package.texi:290
#, no-wrap
msgid "Package Statuses"
msgstr ""

#. type: menuentry
#: original_texis/package.texi:53
msgid "Which statuses a package can have."
msgstr ""

#. type: section
#: original_texis/package.texi:53 original_texis/package.texi:346
#: original_texis/package.texi:347
#, no-wrap
msgid "Package Installation"
msgstr ""

#. type: menuentry
#: original_texis/package.texi:53
msgid "Options for package installation."
msgstr ""

#. type: node
#: original_texis/package.texi:53 original_texis/package.texi:546
#, no-wrap
msgid "Package Files"
msgstr ""

#. type: menuentry
#: original_texis/package.texi:53
msgid "Where packages are installed."
msgstr ""

#. type: section
#: original_texis/package.texi:53 original_texis/package.texi:584
#: original_texis/package.texi:585
#, no-wrap
msgid "Fetching Package Sources"
msgstr ""

#. type: menuentry
#: original_texis/package.texi:53
msgid "Managing packages directly from source."
msgstr ""

#. type: section
#: original_texis/package.texi:56
#, no-wrap
msgid "The Package Menu Buffer"
msgstr ""

#. type: cindex
#: original_texis/package.texi:57
#, no-wrap
msgid "package menu"
msgstr ""

#. type: cindex
#: original_texis/package.texi:58 original_texis/package.texi:304
#, no-wrap
msgid "built-in package"
msgstr ""

#. type: findex
#: original_texis/package.texi:59
#, no-wrap
msgid "list-packages"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:64
msgid ""
"The command @kbd{M-x list-packages} brings up the @dfn{package menu}.  This "
"is a buffer listing all the packages that Emacs knows about, one on each "
"line, with the following information:"
msgstr ""

#. type: itemize
#: original_texis/package.texi:68
msgid "The package name (e.g., @samp{auctex})."
msgstr ""

#. type: itemize
#: original_texis/package.texi:71
msgid "The package's version number (e.g., @samp{11.86})."
msgstr ""

#. type: itemize
#: original_texis/package.texi:78
msgid ""
"The package's status---normally one of @samp{available} (can be downloaded "
"from the package archive), @samp{installed}, or @samp{built-in} (included in "
"Emacs by default).  @xref{Package Statuses}."
msgstr ""

#. type: itemize
#: original_texis/package.texi:82
msgid ""
"Which package archive this package is from, if you have more than one "
"package archive enabled."
msgstr ""

#. type: itemize
#: original_texis/package.texi:85
msgid "A short description of the package."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:92
msgid ""
"The @code{list-packages} command accesses the network, to retrieve the list "
"of available packages from package archive servers.  If the network is "
"unavailable, it falls back on the most recently retrieved list."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:97
msgid ""
"The main command to use in the package list buffer is the @key{x} command.  "
"If the package under point isn't installed already, this command will "
"install it.  If the package under point is already installed, this command "
"will delete it."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:99
msgid "The following commands are available in the package menu:"
msgstr ""

#. type: item
#: original_texis/package.texi:101
#, no-wrap
msgid "h"
msgstr ""

#. type: kindex
#: original_texis/package.texi:102
#, no-wrap
msgid "h @r{(Package Menu)}"
msgstr ""

#. type: findex
#: original_texis/package.texi:103
#, no-wrap
msgid "package-menu-quick-help"
msgstr ""

#. type: table
#: original_texis/package.texi:106
msgid ""
"Print a short message summarizing how to use the package menu "
"(@code{package-menu-quick-help})."
msgstr ""

#. type: item
#: original_texis/package.texi:107
#, no-wrap
msgid "?"
msgstr ""

#. type: key{#1}
#: original_texis/package.texi:108
#, no-wrap
msgid "RET"
msgstr ""

#. type: kindex
#: original_texis/package.texi:109
#, no-wrap
msgid "? @r{(Package Menu)}"
msgstr ""

#. type: kindex
#: original_texis/package.texi:110
#, no-wrap
msgid "RET @r{(Package Menu)}"
msgstr ""

#. type: findex
#: original_texis/package.texi:111
#, no-wrap
msgid "package-menu-describe-package"
msgstr ""

#. type: table
#: original_texis/package.texi:115
msgid ""
"Display a help buffer for the package on the current line "
"(@code{package-menu-describe-package}), similar to the help window displayed "
"by the @kbd{C-h P} command (@pxref{Packages})."
msgstr ""

#. type: item
#: original_texis/package.texi:116
#, no-wrap
msgid "i"
msgstr ""

#. type: kindex
#: original_texis/package.texi:117
#, no-wrap
msgid "i @r{(Package Menu)}"
msgstr ""

#. type: findex
#: original_texis/package.texi:118
#, no-wrap
msgid "package-menu-mark-install"
msgstr ""

#. type: table
#: original_texis/package.texi:124
msgid ""
"Mark the package on the current line for installation "
"(@code{package-menu-mark-install}).  If the package status is "
"@samp{available}, this adds an @samp{I} character to the start of the line; "
"typing @kbd{x} (see below) will download and install the package."
msgstr ""

#. type: item
#: original_texis/package.texi:125
#, no-wrap
msgid "d"
msgstr ""

#. type: kindex
#: original_texis/package.texi:126
#, no-wrap
msgid "d @r{(Package Menu)}"
msgstr ""

#. type: findex
#: original_texis/package.texi:127
#, no-wrap
msgid "package-menu-mark-delete"
msgstr ""

#. type: table
#: original_texis/package.texi:134
msgid ""
"Mark the package on the current line for deletion "
"(@code{package-menu-mark-delete}).  If the package status is "
"@samp{installed}, this adds a @samp{D} character to the start of the line; "
"typing @kbd{x} (see below) will delete the package.  @xref{Package Files}, "
"for information about what package deletion entails."
msgstr ""

#. type: item
#: original_texis/package.texi:135
#, no-wrap
msgid "w"
msgstr ""

#. type: kindex
#: original_texis/package.texi:136
#, no-wrap
msgid "w @r{(Package Menu)}"
msgstr ""

#. type: findex
#: original_texis/package.texi:137
#, no-wrap
msgid "package-browse-url"
msgstr ""

#. type: table
#: original_texis/package.texi:141
msgid ""
"Open the package website on the current line in a browser "
"(@code{package-browse-url}).  @code{browse-url} is used to open the browser."
msgstr ""

#. type: item
#: original_texis/package.texi:142
#, no-wrap
msgid "~"
msgstr ""

#. type: kindex
#: original_texis/package.texi:143
#, no-wrap
msgid "~ @r{(Package Menu)}"
msgstr ""

#. type: findex
#: original_texis/package.texi:144
#, no-wrap
msgid "package-menu-mark-obsolete-for-deletion"
msgstr ""

#. type: table
#: original_texis/package.texi:148
msgid ""
"Mark all obsolete packages for deletion "
"(@code{package-menu-mark-obsolete-for-deletion}).  This marks for deletion "
"all the packages whose status is @samp{obsolete}."
msgstr ""

#. type: item
#: original_texis/package.texi:149
#, no-wrap
msgid "u"
msgstr ""

#. type: key{#1}
#: original_texis/package.texi:150
#, no-wrap
msgid "DEL"
msgstr ""

#. type: kindex
#: original_texis/package.texi:151
#, no-wrap
msgid "u @r{(Package Menu)}"
msgstr ""

#. type: findex
#: original_texis/package.texi:152
#, no-wrap
msgid "package-menu-mark-unmark"
msgstr ""

#. type: table
#: original_texis/package.texi:156
msgid ""
"Remove any installation or deletion mark previously added to the current "
"line by an @kbd{i} or @kbd{d} command (@code{package-menu-mark-unmark})."
msgstr ""

#. type: item
#: original_texis/package.texi:157
#, no-wrap
msgid "U"
msgstr ""

#. type: kindex
#: original_texis/package.texi:158
#, no-wrap
msgid "U @r{(Package Menu)}"
msgstr ""

#. type: findex
#: original_texis/package.texi:159
#, no-wrap
msgid "package-menu-mark-upgrades"
msgstr ""

#. type: table
#: original_texis/package.texi:170
msgid ""
"Mark all package with a newer available version for upgrading "
"(@code{package-menu-mark-upgrades}).  This places an installation mark on "
"the new available versions, and a deletion mark on the old installed "
"versions (marked with status @samp{obsolete}).  By default, this won't mark "
"built-in packages for which a newer version is available, but customizing "
"@code{package-install-upgrade-built-in} can change that.  @xref{Package "
"Installation}.  If you customize @code{package-install-upgrade-built-in} to "
"a non-@code{nil} value, be sure to review all the built-in packages the "
"@kbd{U} command marks, to avoid updating built-in packages you don't want to "
"overwrite."
msgstr ""

#. type: item
#: original_texis/package.texi:171
#, no-wrap
msgid "x"
msgstr ""

#. type: kindex
#: original_texis/package.texi:172
#, no-wrap
msgid "x @r{(Package Menu)}"
msgstr ""

#. type: vindex
#: original_texis/package.texi:173
#, no-wrap
msgid "package-menu-async"
msgstr ""

#. type: findex
#: original_texis/package.texi:174
#, no-wrap
msgid "package-menu-execute"
msgstr ""

#. type: table
#: original_texis/package.texi:181
msgid ""
"Download and install all packages marked with @kbd{i}, and their "
"dependencies; also, delete all packages marked with @kbd{d} "
"(@code{package-menu-execute}).  This also removes the marks.  If no packages "
"are marked, this command will install the package under point (if it isn't "
"installed already), or delete the package under point (if it's already "
"installed)."
msgstr ""

#. type: item
#: original_texis/package.texi:182
#, no-wrap
msgid "g"
msgstr ""

#. type: item
#: original_texis/package.texi:183
#, no-wrap
msgid "r"
msgstr ""

#. type: kindex
#: original_texis/package.texi:184
#, no-wrap
msgid "g @r{(Package Menu)}"
msgstr ""

#. type: kindex
#: original_texis/package.texi:185
#, no-wrap
msgid "r @r{(Package Menu)}"
msgstr ""

#. type: table
#: original_texis/package.texi:189
msgid ""
"Refresh the package list (@code{revert-buffer}).  This fetches the list of "
"available packages from the package archive again, and redisplays the "
"package list."
msgstr ""

#. type: item
#: original_texis/package.texi:190
#, no-wrap
msgid "H"
msgstr ""

#. type: kindex
#: original_texis/package.texi:191
#, no-wrap
msgid "H @r{(Package Menu)}"
msgstr ""

#. type: findex
#: original_texis/package.texi:192
#, no-wrap
msgid "package-menu-hide-package"
msgstr ""

#. type: table
#: original_texis/package.texi:198
msgid ""
"Hide packages whose names match a regexp "
"(@code{package-menu-hide-package}).  This prompts for a regexp, and then "
"hides the packages with matching names.  The default value of the regexp "
"will hide only the package whose name is at point, so just pressing "
"@key{RET} to the prompt will hide the current package."
msgstr ""

#. type: item
#: original_texis/package.texi:199
#, no-wrap
msgid "("
msgstr ""

#. type: kindex
#: original_texis/package.texi:200
#, no-wrap
msgid "( @r{(Package Menu)}"
msgstr ""

#. type: findex
#: original_texis/package.texi:201
#, no-wrap
msgid "package-menu-toggle-hiding"
msgstr ""

#. type: table
#: original_texis/package.texi:204
msgid ""
"Toggle visibility of old versions of packages and also of versions from "
"lower-priority archives (@code{package-menu-toggle-hiding})."
msgstr ""

#. type: item
#: original_texis/package.texi:205
#, no-wrap
msgid "/ a"
msgstr ""

#. type: kindex
#: original_texis/package.texi:206
#, no-wrap
msgid "/ a @r{(Package Menu)}"
msgstr ""

#. type: findex
#: original_texis/package.texi:207
#, no-wrap
msgid "package-menu-filter-by-archive"
msgstr ""

#. type: table
#: original_texis/package.texi:212
msgid ""
"Filter package list by archive (@code{package-menu-filter-by-archive}).  "
"This prompts for a package archive (e.g., @samp{gnu}), then shows only "
"packages from that archive.  You can specify several archives by typing "
"their names separated by commas."
msgstr ""

#. type: item
#: original_texis/package.texi:213
#, no-wrap
msgid "/ d"
msgstr ""

#. type: kindex
#: original_texis/package.texi:214
#, no-wrap
msgid "/ d @r{(Package Menu)}"
msgstr ""

#. type: findex
#: original_texis/package.texi:215
#, no-wrap
msgid "package-menu-filter-by-description"
msgstr ""

#. type: table
#: original_texis/package.texi:220
msgid ""
"Filter package list by description "
"(@code{package-menu-filter-by-description}).  This prompts for a regular "
"expression, then shows only packages with descriptions matching that regexp."
msgstr ""

#. type: item
#: original_texis/package.texi:221
#, no-wrap
msgid "/ k"
msgstr ""

#. type: kindex
#: original_texis/package.texi:222
#, no-wrap
msgid "/ k @r{(Package Menu)}"
msgstr ""

#. type: findex
#: original_texis/package.texi:223
#, no-wrap
msgid "package-menu-filter-by-keyword"
msgstr ""

#. type: table
#: original_texis/package.texi:228
msgid ""
"Filter package list by keyword (@code{package-menu-filter-by-keyword}).  "
"This prompts for a keyword (e.g., @samp{games}), then shows only packages "
"with that keyword.  You can specify several keywords by typing them "
"separated by commas."
msgstr ""

#. type: item
#: original_texis/package.texi:229
#, no-wrap
msgid "/ N"
msgstr ""

#. type: kindex
#: original_texis/package.texi:230
#, no-wrap
msgid "/ N @r{(Package Menu)}"
msgstr ""

#. type: findex
#: original_texis/package.texi:231
#, no-wrap
msgid "package-menu-filter-by-name-or-description"
msgstr ""

#. type: table
#: original_texis/package.texi:236
msgid ""
"Filter package list by name or description "
"(@code{package-menu-filter-by-name-or-description}).  This prompts for a "
"regular expression, then shows only packages with a name or description "
"matching that regexp."
msgstr ""

#. type: item
#: original_texis/package.texi:237
#, no-wrap
msgid "/ n"
msgstr ""

#. type: kindex
#: original_texis/package.texi:238
#, no-wrap
msgid "/ n @r{(Package Menu)}"
msgstr ""

#. type: findex
#: original_texis/package.texi:239
#, no-wrap
msgid "package-menu-filter-by-name"
msgstr ""

#. type: table
#: original_texis/package.texi:243
msgid ""
"Filter package list by name (@code{package-menu-filter-by-name}).  This "
"prompts for a regular expression, then shows only packages with names "
"matching that regexp."
msgstr ""

#. type: item
#: original_texis/package.texi:244
#, no-wrap
msgid "/ s"
msgstr ""

#. type: kindex
#: original_texis/package.texi:245
#, no-wrap
msgid "/ s @r{(Package Menu)}"
msgstr ""

#. type: findex
#: original_texis/package.texi:246
#, no-wrap
msgid "package-menu-filter-by-status"
msgstr ""

#. type: table
#: original_texis/package.texi:252
msgid ""
"Filter package list by status (@code{package-menu-filter-by-status}).  This "
"prompts for one or more statuses (e.g., @samp{available}, @pxref{Package "
"Statuses}), then shows only packages with matching status.  You can specify "
"several status values by typing them separated by commas."
msgstr ""

#. type: item
#: original_texis/package.texi:253
#, no-wrap
msgid "/ v"
msgstr ""

#. type: kindex
#: original_texis/package.texi:254
#, no-wrap
msgid "/ v @r{(Package Menu)}"
msgstr ""

#. type: findex
#: original_texis/package.texi:255
#, no-wrap
msgid "package-menu-filter-by-version"
msgstr ""

#. type: table
#: original_texis/package.texi:261
msgid ""
"Filter package list by version (@code{package-menu-filter-by-version}).  "
"This prompts first for one of the comparison symbols @samp{<}, @samp{>} or "
"@samp{=} and for a version string, and then shows packages whose versions "
"are correspondingly lower, equal or higher than the version you typed."
msgstr ""

#. type: item
#: original_texis/package.texi:262
#, no-wrap
msgid "/ m"
msgstr ""

#. type: kindex
#: original_texis/package.texi:263
#, no-wrap
msgid "/ m @r{(Package Menu)}"
msgstr ""

#. type: findex
#: original_texis/package.texi:264
#, no-wrap
msgid "package-menu-filter-marked"
msgstr ""

#. type: table
#: original_texis/package.texi:267
msgid ""
"Filter package list by non-empty mark (@code{package-menu-filter-marked}).  "
"This shows only the packages that have been marked to be installed or "
"deleted."
msgstr ""

#. type: item
#: original_texis/package.texi:268
#, no-wrap
msgid "/ u"
msgstr ""

#. type: kindex
#: original_texis/package.texi:269
#, no-wrap
msgid "/ u @r{(Package Menu)}"
msgstr ""

#. type: findex
#: original_texis/package.texi:270
#, no-wrap
msgid "package-menu-filter-upgradable"
msgstr ""

#. type: table
#: original_texis/package.texi:277
msgid ""
"Filter package list to show only packages for which there are available "
"upgrades (@code{package-menu-filter-upgradable}).  By default, this filter "
"excludes the built-in packages for which a newer version is available, but "
"customizing @code{package-install-upgrade-built-in} can change that.  "
"@xref{Package Installation}."
msgstr ""

#. type: item
#: original_texis/package.texi:278
#, no-wrap
msgid "/ /"
msgstr ""

#. type: kindex
#: original_texis/package.texi:279
#, no-wrap
msgid "/ / @r{(Package Menu)}"
msgstr ""

#. type: findex
#: original_texis/package.texi:280
#, no-wrap
msgid "package-menu-filter-clear"
msgstr ""

#. type: table
#: original_texis/package.texi:283
msgid ""
"Clear filter currently applied to the package list "
"(@code{package-menu-filter-clear})."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:288
msgid ""
"For example, you can install a package by typing @kbd{i} on the line listing "
"that package, followed by @kbd{x}."
msgstr ""

#. type: cindex
#: original_texis/package.texi:291
#, no-wrap
msgid "package status"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:294
msgid "A package can have one of the following statuses:"
msgstr ""

#. type: item
#: original_texis/package.texi:296
#, no-wrap
msgid "available"
msgstr ""

#. type: table
#: original_texis/package.texi:299
msgid ""
"The package is not installed, but can be downloaded and installed from the "
"package archive."
msgstr ""

#. type: item
#: original_texis/package.texi:300
#, no-wrap
msgid "avail-obso"
msgstr ""

#. type: table
#: original_texis/package.texi:303
msgid ""
"The package is available for installation, but a newer version is also "
"available.  Packages with this status are hidden by default."
msgstr ""

#. type: item
#: original_texis/package.texi:305
#, no-wrap
msgid "built-in"
msgstr ""

#. type: table
#: original_texis/package.texi:310
msgid ""
"The package is included in Emacs by default.  It cannot be deleted through "
"the package menu, and by default is not considered for upgrading (but you "
"can change that by customizing @code{package-install-upgrade-built-in}, "
"@pxref{Package Installation})."
msgstr ""

#. type: item
#: original_texis/package.texi:311
#, no-wrap
msgid "dependency"
msgstr ""

#. type: table
#: original_texis/package.texi:314
msgid ""
"The package was installed automatically to satisfy a dependency of another "
"package."
msgstr ""

#. type: item
#: original_texis/package.texi:315
#, no-wrap
msgid "disabled"
msgstr ""

#. type: table
#: original_texis/package.texi:318
msgid "The package has been disabled using the @code{package-load-list} variable."
msgstr ""

#. type: item
#: original_texis/package.texi:319
#, no-wrap
msgid "external"
msgstr ""

#. type: table
#: original_texis/package.texi:323
msgid ""
"The package is not built-in and not from the directory specified by "
"@code{package-user-dir} (@pxref{Package Files}).  External packages are "
"treated much like @samp{built-in} packages and cannot be deleted."
msgstr ""

#. type: item
#: original_texis/package.texi:324
#, no-wrap
msgid "held"
msgstr ""

#. type: table
#: original_texis/package.texi:326
msgid "The package is held, @xref{Package Installation}."
msgstr ""

#. type: item
#: original_texis/package.texi:327
#, no-wrap
msgid "incompat"
msgstr ""

#. type: table
#: original_texis/package.texi:330
msgid ""
"The package cannot be installed for some reason, for example because it "
"depends on uninstallable packages."
msgstr ""

#. type: item
#: original_texis/package.texi:331
#, no-wrap
msgid "installed"
msgstr ""

#. type: table
#: original_texis/package.texi:333
msgid "The package is installed."
msgstr ""

#. type: item
#: original_texis/package.texi:334
#, no-wrap
msgid "new"
msgstr ""

#. type: table
#: original_texis/package.texi:338
msgid ""
"Equivalent to @samp{available}, except that the package became newly "
"available on the package archive after your last invocation of @kbd{M-x "
"list-packages}."
msgstr ""

#. type: item
#: original_texis/package.texi:339
#, no-wrap
msgid "obsolete"
msgstr ""

#. type: table
#: original_texis/package.texi:342
msgid ""
"The package is an outdated installed version; in addition to this version of "
"the package, a newer version is also installed."
msgstr ""

#. type: findex
#: original_texis/package.texi:349
#, no-wrap
msgid "package-install"
msgstr ""

#. type: findex
#: original_texis/package.texi:350
#, no-wrap
msgid "package-upgrade"
msgstr ""

#. type: findex
#: original_texis/package.texi:351
#, no-wrap
msgid "package-upgrade-all"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:359
msgid ""
"Packages are most conveniently installed using the package menu "
"(@pxref{Package Menu}), but you can also use the command @kbd{M-x "
"package-install}.  This prompts for the name of a package with the "
"@samp{available} status, then downloads and installs it.  Similarly, if you "
"want to upgrade a package, you can use the @kbd{M-x package-upgrade} "
"command, and if you want to upgrade all the packages, you can use the "
"@kbd{M-x package-upgrade-all} command."
msgstr ""

#. type: vindex
#: original_texis/package.texi:360
#, no-wrap
msgid "package-install-upgrade-built-in"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:374
msgid ""
"By default, @code{package-install} doesn't consider built-in packages for "
"which new versions are available from the archives.  (A package is built-in "
"if it is included in the Emacs distribution.)  In particular, it will not "
"show built-in packages in the list of completion candidates when you type at "
"its prompt.  But if you invoke @code{package-install} with a prefix "
"argument, it will also consider built-in packages that can be upgraded.  You "
"can make this behavior the default by customizing the variable "
"@code{package-install-upgrade-built-in}: if its value is non-@code{nil}, "
"@code{package-install} will consider built-in packages even when invoked "
"without a prefix argument.  Note that the package-menu commands "
"(@pxref{Package Menu}) are also affected by "
"@code{package-install-upgrade-built-in}."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:382
msgid ""
"By contrast, @code{package-upgrade} and @code{package-upgrade-all} never "
"consider built-in packages.  If you want to use these commands for upgrading "
"some built-in packages, you need to upgrade each of those packages, once, "
"either via @kbd{C-u M-x package-install @key{RET}}, or by customizing "
"@code{package-install-upgrade-built-in} to a non-@code{nil} value, and then "
"upgrading the package once via the package menu or by "
"@code{package-install}."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:390
msgid ""
"If you customize @code{package-install-upgrade-built-in} to a non-@code{nil} "
"value, be very careful when using commands that update many packages at "
"once, like @code{package-upgrade-all} and @kbd{U} in the package menu: those "
"might overwrite built-in packages that you didn't intent to replace with "
"newer versions from the archives.  Don't use these bulk commands if you want "
"to update only a small number of built-in packages."
msgstr ""

#. type: cindex
#: original_texis/package.texi:391
#, no-wrap
msgid "package requirements"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:399
msgid ""
"A package may @dfn{require} certain other packages to be installed, because "
"it relies on functionality provided by them.  When Emacs installs such a "
"package, it also automatically downloads and installs any required package "
"that is not already installed.  (If a required package is somehow "
"unavailable, Emacs signals an error and stops installation.)  A package's "
"requirements list is shown in its help buffer."
msgstr ""

#. type: vindex
#: original_texis/package.texi:400
#, no-wrap
msgid "package-archives"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:410
msgid ""
"By default, packages are downloaded from a single package archive maintained "
"by the Emacs developers.  This is controlled by the variable "
"@code{package-archives}, whose value is a list of package archives known to "
"Emacs.  Each list element must have the form @code{(@var{id} "
". @var{location})}, where @var{id} is the name of a package archive and "
"@var{location} is the @acronym{URL} or name of the package archive "
"directory.  You can alter this list if you wish to use third party package "
"archives---but do so at your own risk, and use only third parties that you "
"think you can trust!"
msgstr ""

#. type: anchor{#1}
#: original_texis/package.texi:412
msgid "Package Signing"
msgstr ""

#. type: cindex
#: original_texis/package.texi:412
#, no-wrap
msgid "package security"
msgstr ""

#. type: cindex
#: original_texis/package.texi:413
#, no-wrap
msgid "package signing"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:436
msgid ""
"The maintainers of package archives can increase the trust that you can have "
"in their packages by @dfn{signing} them.  They generate a private/public "
"pair of cryptographic keys, and use the private key to create a "
"@dfn{signature file} for each package.  With the public key, you can use the "
"signature files to verify the package creator and make sure the package has "
"not been tampered with.  Signature verification uses "
"@uref{https://www.gnupg.org/, the GnuPG package} via the EasyPG interface "
"(@pxref{Top,, EasyPG, epa, Emacs EasyPG Assistant Manual}).  A valid "
"signature is not a cast-iron guarantee that a package is not malicious, so "
"you should still exercise caution.  Package archives should provide "
"instructions on how you can obtain their public key.  One way is to download "
"the key from a server such as @url{https://pgp.mit.edu/}.  Use @kbd{M-x "
"package-import-keyring} to import the key into Emacs.  Emacs stores package "
"keys in the directory specified by the variable "
"@code{package-gnupghome-dir}, by default in the @file{gnupg} subdirectory of "
"@code{package-user-dir}, which causes Emacs to invoke GnuPG with the option "
"@samp{--homedir} when verifying signatures.  If @code{package-gnupghome-dir} "
"is @code{nil}, GnuPG's option @samp{--homedir} is omitted.  The public key "
"for the GNU package archive is distributed with Emacs, in the "
"@file{etc/package-keyring.gpg}.  Emacs uses it automatically."
msgstr ""

#. type: vindex
#: original_texis/package.texi:437
#, no-wrap
msgid "package-check-signature"
msgstr ""

#. type: vindex
#: original_texis/package.texi:438
#, no-wrap
msgid "package-unsigned-archives"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:450
msgid ""
"If the user option @code{package-check-signature} is non-@code{nil}, Emacs "
"attempts to verify signatures when you install packages.  If the option has "
"the value @code{allow-unsigned}, and a usable OpenPGP configuration is "
"found, signed packages will be checked, but you can still install a package "
"that is not signed.  If you use some archives that do not sign their "
"packages, you can add them to the list @code{package-unsigned-archives}.  "
"(If the value is @code{allow-unsigned} and no usable OpenPGP is found, this "
"option is treated as if its value was @code{nil}.)  If the value is "
"@code{t}, at least one signature must be valid; if the value is @code{all}, "
"all of them must be valid."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:455
msgid ""
"For more information on cryptographic keys and signing, @pxref{Top,, GnuPG, "
"gnupg, The GNU Privacy Guard Manual}.  Emacs comes with an interface to GNU "
"Privacy Guard, @pxref{Top,, EasyPG, epa, Emacs EasyPG Assistant Manual}."
msgstr ""

#. type: vindex
#: original_texis/package.texi:456
#, no-wrap
msgid "package-pinned-packages"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:462
msgid ""
"If you have more than one package archive enabled, and some of them offer "
"different versions of the same package, you may find the option "
"@code{package-pinned-packages} useful.  You can add package/archive pairs to "
"this list, to ensure that the specified package is only ever downloaded from "
"the specified archive."
msgstr ""

#. type: vindex
#: original_texis/package.texi:463
#, no-wrap
msgid "package-archive-priorities"
msgstr ""

#. type: vindex
#: original_texis/package.texi:464
#, no-wrap
msgid "package-menu-hide-low-priority"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:473
msgid ""
"Another option that is useful when you have several package archives enabled "
"is @code{package-archive-priorities}.  It specifies the priority of each "
"archive (higher numbers specify higher priority archives).  By default, "
"archives have the priority of zero, unless specified otherwise by this "
"option's value.  Packages from lower-priority archives will not be shown in "
"the menu, if the same package is available from a higher-priority archive.  "
"(This is controlled by the value of @code{package-menu-hide-low-priority}.)"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:481
msgid ""
"Once a package is downloaded, byte-compiled and installed, it is made "
"available to the current Emacs session.  Making a package available adds its "
"directory to @code{load-path} and loads its autoloads.  The effect of a "
"package's autoloads varies from package to package.  Most packages just make "
"some new commands available, while others have more wide-ranging effects on "
"the Emacs session.  For such information, consult the package's help buffer."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:488
msgid ""
"Installed packages are automatically made available by Emacs in all "
"subsequent sessions.  This happens at startup, before processing the init "
"file but after processing the early init file (@pxref{Early Init File}).  As "
"an exception, Emacs does not make packages available at startup if invoked "
"with the @samp{-q} or @samp{--no-init-file} options (@pxref{Initial "
"Options})."
msgstr ""

#. type: vindex
#: original_texis/package.texi:489
#, no-wrap
msgid "package-enable-at-startup"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:495
msgid ""
"To keep Emacs from automatically making packages available at startup, "
"change the variable @code{package-enable-at-startup} to @code{nil}.  You "
"must do this in the early init file, as the variable is read before loading "
"the regular init file.  Currently this variable cannot be set via Customize."
msgstr ""

#. type: findex
#: original_texis/package.texi:496
#, no-wrap
msgid "package-quickstart-refresh"
msgstr ""

#. type: vindex
#: original_texis/package.texi:497
#, no-wrap
msgid "package-quickstart"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:506
msgid ""
"If you have many packages installed, you can improve startup times by "
"setting the user option @code{package-quickstart} to @code{t}.  Setting this "
"option will make Emacs precompute many things instead of re-computing them "
"on every Emacs startup.  However, if you do this, then you have to manually "
"run the command @code{package-quickstart-refresh} when the activations need "
"to be changed, such as when you change the value of "
"@code{package-load-list}."
msgstr ""

#. type: findex
#: original_texis/package.texi:507
#, no-wrap
msgid "package-activate-all"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:514
msgid ""
"If you have set @code{package-enable-at-startup} to @code{nil}, you can "
"still make packages available either during or after startup.  To make "
"installed packages available during startup, call the function "
"@code{package-activate-all} in your init file.  To make installed packages "
"available after startup, invoke the command @kbd{M-: (package-activate-all) "
"RET}."
msgstr ""

#. type: vindex
#: original_texis/package.texi:515
#, no-wrap
msgid "package-load-list"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:528
msgid ""
"For finer control over which packages are made available at startup, you can "
"use the variable @code{package-load-list}.  Its value should be a list.  A "
"list element of the form @w{@code{(@var{name} @var{version})}} tells Emacs "
"to make available version @var{version} of the package named @var{name}.  "
"Here, @var{version} should be a version string (corresponding to a specific "
"version of the package), or @code{t} (which means to make available any "
"installed version), or @code{nil} (which means no version; this disables the "
"package, preventing it from being made available).  A list element can also "
"be the symbol @code{all}, which means to make available the latest installed "
"version of any package not named by the other list elements.  The default "
"value is just @code{'(all)}."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:535
msgid ""
"For example, if you set @code{package-load-list} to @w{@code{'((muse "
"\"3.20\") all)}}, then Emacs only makes available version 3.20 of the "
"@samp{muse} package, plus any installed version of packages other than "
"@samp{muse}.  Any other version of @samp{muse} that happens to be installed "
"will be ignored.  The @samp{muse} package will be listed in the package menu "
"with the @samp{held} status."
msgstr ""

#. type: findex
#: original_texis/package.texi:536
#, no-wrap
msgid "package-recompile"
msgstr ""

#. type: findex
#: original_texis/package.texi:537
#, no-wrap
msgid "package-recompile-all"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:545
msgid ""
"Emacs byte code is quite stable, but it's possible for byte code to become "
"outdated, or for the compiled files to rely on macros that have changed in "
"new versions of Emacs.  You can use the command @w{@kbd{M-x "
"package-recompile}} to recompile a particular package, or @w{@kbd{M-x "
"package-recompile-all}} to recompile all the packages.  (The latter command "
"might take quite a while to run if you have many installed packages.)"
msgstr ""

#. type: section
#: original_texis/package.texi:547
#, no-wrap
msgid "Package Files and Directory Layout"
msgstr ""

#. type: cindex
#: original_texis/package.texi:548
#, no-wrap
msgid "package directory"
msgstr ""

#. type: cindex
#: original_texis/package.texi:550
#, no-wrap
msgid "package file"
msgstr ""

#. type: findex
#: original_texis/package.texi:551
#, no-wrap
msgid "package-install-file"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:561
msgid ""
"Each package is downloaded from the package archive in the form of a single "
"@dfn{package file}---either an Emacs Lisp source file, or a tar file "
"containing multiple Emacs Lisp source and other files.  Package files are "
"automatically retrieved, processed, and disposed of by the Emacs commands "
"that install packages.  Normally, you will not need to deal directly with "
"them, unless you are making a package (@pxref{Packaging,,,elisp, The Emacs "
"Lisp Reference Manual}).  Should you ever need to install a package directly "
"from a package file, use the command @kbd{M-x package-install-file}."
msgstr ""

#. type: vindex
#: original_texis/package.texi:562
#, no-wrap
msgid "package-user-dir"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:569
msgid ""
"Once installed, the contents of a package are placed in a subdirectory of "
"@file{~/.emacs.d/elpa/} (you can change the name of that directory by "
"changing the variable @code{package-user-dir}).  The package subdirectory is "
"named @file{@var{name}-@var{version}}, where @var{name} is the package name "
"and @var{version} is its version string."
msgstr ""

#. type: cindex
#: original_texis/package.texi:570
#, no-wrap
msgid "system-wide packages"
msgstr ""

#. type: vindex
#: original_texis/package.texi:571
#, no-wrap
msgid "package-directory-list"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:578
msgid ""
"In addition to @code{package-user-dir}, Emacs looks for installed packages "
"in the directories listed in @code{package-directory-list}.  These "
"directories are meant for system administrators to make Emacs packages "
"available system-wide; Emacs itself never installs packages there.  The "
"package subdirectories for @code{package-directory-list} are laid out in the "
"same way as in @code{package-user-dir}."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:583
msgid ""
"Deleting a package (@pxref{Package Menu}) involves deleting the "
"corresponding package subdirectory.  This only works for packages installed "
"in @code{package-user-dir}; if told to act on a package in a system-wide "
"package directory, the deletion command signals an error."
msgstr ""

#. type: cindex
#: original_texis/package.texi:586
#, no-wrap
msgid "package development source"
msgstr ""

#. type: cindex
#: original_texis/package.texi:587
#, no-wrap
msgid "upstream source, for packages"
msgstr ""

#. type: cindex
#: original_texis/package.texi:588
#, no-wrap
msgid "git source of package @c \"git\" is not technically correct"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:596
msgid ""
"By default @code{package-install} downloads a Tarball from a package archive "
"and installs its files.  This might be inadequate if you wish to hack on the "
"package sources and share your changes with others.  In that case, you may "
"prefer to directly fetch and work on the upstream source.  This often makes "
"it easier to develop patches and report bugs."
msgstr ""

#. type: findex
#: original_texis/package.texi:597
#, no-wrap
msgid "package-vc-install"
msgstr ""

#. type: findex
#: original_texis/package.texi:598
#, no-wrap
msgid "package-vc-checkout"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:609
msgid ""
"One way to do this is to use @code{package-vc-install}, to fetch the source "
"code for a package directly from source.  The command will also "
"automatically ensure that all files are byte-compiled and auto-loaded, just "
"like with a regular package.  Packages installed this way behave just like "
"any other package.  You can upgrade them using @code{package-upgrade} or "
"@code{package-upgrade-all} and delete them again using "
"@code{package-delete}.  They are even displayed in the regular package "
"listing.  If you just wish to clone the source of a package, without adding "
"it to the package list, use @code{package-vc-checkout}."
msgstr ""

#. type: findex
#: original_texis/package.texi:610
#, no-wrap
msgid "package-report-bug"
msgstr ""

#. type: findex
#: original_texis/package.texi:611
#, no-wrap
msgid "package-vc-prepare-patch"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:620
msgid ""
"With the source checkout, you might want to reproduce a bug against the "
"current development head or implement a new feature to scratch an itch.  If "
"the package metadata indicates how to contact the maintainer, you can use "
"the command @code{package-report-bug} to report a bug via Email.  This "
"report will include all the user options that you have customized.  If you "
"have made a change you wish to share with the maintainers, first commit your "
"changes then use the command @code{package-vc-prepare-patch} to share it.  "
"@xref{Preparing Patches}."
msgstr ""

#. type: findex
#: original_texis/package.texi:621
#, no-wrap
msgid "package-vc-install-from-checkout"
msgstr ""

#. type: findex
#: original_texis/package.texi:622
#, no-wrap
msgid "package-vc-rebuild"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:630
msgid ""
"If you maintain your own packages you might want to use a local checkout "
"instead of cloning a remote repository.  You can do this by using "
"@code{package-vc-install-from-checkout}, which creates a symbolic link from "
"the package directory (@pxref{Package Files}) to your checkout and "
"initializes the code.  Note that you might have to use "
"@code{package-vc-rebuild} to repeat the initialization and update the "
"autoloads."
msgstr ""

#. type: subsection
#: original_texis/package.texi:631
#, no-wrap
msgid "Specifying Package Sources"
msgstr ""

#. type: cindex
#: original_texis/package.texi:632
#, no-wrap
msgid "package specification"
msgstr ""

#. type: cindex
#: original_texis/package.texi:633
#, no-wrap
msgid "specification, for source packages"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:640
msgid ""
"To install a package from source, Emacs must know where to get the package's "
"source code (such as a code repository) and basic information about the "
"structure of the code (such as the main file in a multi-file package).  A "
"@dfn{package specification} describes these properties."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:647
msgid ""
"When supported by a package archive (@pxref{Package Archives,,,elisp, The "
"Emacs Lisp Reference Manual}), Emacs can automatically download a package's "
"specification from said archive.  If the first argument passed to "
"@code{package-vc-install} is a symbol naming a package, then Emacs will use "
"the specification provided by the archive for that package."
msgstr ""

#. type: group
#: original_texis/package.texi:652
#, no-wrap
msgid ""
";; Emacs will download BBDB's specification from GNU ELPA:\n"
"(package-vc-install 'bbdb)\n"
msgstr ""

#. type: Plain text
#: original_texis/package.texi:661
msgid ""
"The first argument to @code{package-vc-install} may also be a package "
"specification.  This allows you to install source packages from locations "
"other than the known archives listed in the user option "
"@code{package-archives}.  A package specification is a list of the form "
"@code{(@var{name} . @var{spec})}, in which @var{spec} should be a property "
"list using any of the keys in the table below."
msgstr ""

#. type: Plain text
#: original_texis/package.texi:665
msgid ""
"For definitions of basic terms for working with code repositories and "
"version control systems, see @ref{VCS Concepts,,,emacs, The GNU Emacs "
"Manual}."
msgstr ""

#. type: item
#: original_texis/package.texi:667
#, no-wrap
msgid ":url"
msgstr ""

#. type: table
#: original_texis/package.texi:670
msgid ""
"A string providing the URL that specifies the repository from which to fetch "
"the package's source code."
msgstr ""

#. type: item
#: original_texis/package.texi:671
#, no-wrap
msgid ":branch"
msgstr ""

#. type: table
#: original_texis/package.texi:674
msgid ""
"A string providing the revision of the code to install.  Do not confuse this "
"with a package's version number."
msgstr ""

#. type: item
#: original_texis/package.texi:675
#, no-wrap
msgid ":lisp-dir"
msgstr ""

#. type: table
#: original_texis/package.texi:679
msgid ""
"A string providing the repository-relative name of the directory to use for "
"loading the Lisp sources, which defaults to the root directory of the "
"repository."
msgstr ""

#. type: item
#: original_texis/package.texi:680
#, no-wrap
msgid ":main-file"
msgstr ""

#. type: table
#: original_texis/package.texi:684
msgid ""
"A string providing the main file of the project, from which to gather "
"package metadata.  If not given, the default is the package name with "
"\".el\" appended to it."
msgstr ""

#. type: item
#: original_texis/package.texi:685
#, no-wrap
msgid ":doc"
msgstr ""

#. type: table
#: original_texis/package.texi:689
msgid ""
"A string providing the repository-relative name of the documentation file "
"from which to build an Info file.  This can be a Texinfo file or an Org "
"file."
msgstr ""

#. type: item
#: original_texis/package.texi:690
#, no-wrap
msgid ":vc-backend"
msgstr ""

#. type: table
#: original_texis/package.texi:696
msgid ""
"A symbol naming the VC backend to use for downloading a copy of the "
"package's repository (@pxref{Version Control Systems,,,emacs, The GNU Emacs "
"Manual}).  If omitted, Emacs will attempt to make a guess based on the "
"provided URL, or, failing that, the process will fall back onto the value of "
"@code{package-vc-default-backend}."
msgstr ""

#. type: group
#: original_texis/package.texi:705
#, no-wrap
msgid ""
";; Specifying information manually:\n"
"(package-vc-install\n"
"  '(bbdb :url \"https://git.savannah.nongnu.org/git/bbdb.git\"\n"
"         :lisp-dir \"lisp\"\n"
"         :doc \"doc/bbdb.texi\"))\n"
msgstr ""
