@c ===========================================================================
@c
@c This file was generated with po4a. Translate the source file.
@c
@c ===========================================================================
@c This is part of the Emacs manual.
@c Copyright (C) 1985--1987, 1993--1995, 1997, 2000--2024 Free Software
@c Foundation, Inc.
@c See file emacs-ja.texi for copying conditions.
@node Help
@chapter ヘルプ
@cindex help
@cindex self-documentation
@findex help-command
@kindex C-h
@kindex F1

@kindex C-h C-h
@findex help-for-help
  Emacsはバラエティに富んだヘルプコマンドを提供しており、それらにはプレフィクスキー@kbd{C-h}(ファンクションキー@key{F1}でも可)からアクセスできます。以下のセクションではこれらのコマンドについて説明します。@kbd{C-h
C-h}
(@code{help-for-help})と入力すれば、ヘルプコマンドの一覧を見ることもできます。この一覧は@key{SPC}と@key{DEL}でスクロールでき、それから見たいヘルプコマンドを入力するか、@kbd{C-g}でキャンセルできます。

@cindex help buffer
  多くのヘルプコマンドは、@dfn{ヘルプバッファー(help
buffer)}という特別なバッファーに情報を表示します。このバッファーでは@key{SPC}と@key{DEL}によりスクロールし、@key{RET}でハイパーリンクをフォローすることができます。@ref{Help
Mode}を参照してください。

@vindex help-window-select
  ヘルプコマンドはデフォルトではヘルプバッファーを選択することなく、別のウィンドウに表示します。これを制御するのが変数@code{help-window-select}であり、デフォルト値は@code{nil}です。この変数の値を@code{t}にカスタマイズするとヘルプバッファーはヘルプウィンドウによって無条件に選択されます。値が@code{other}なら選択されたフレームのウィンドウが3つ以上の場合のみヘルプウィンドウが選択されます。

@vindex help-window-keep-selected
  これとは対照的に@samp{*Help*}バッファーの多くのコマンドが、結果を表示するために新たなウィンドウをポップアップします。たとえばソースコードを表示するリンクをクリックしたり、マニュアルのエントリーを表示するコマンド@key{i}を使用すると、(デフォルトでは)新たなウィンドウがポップアップされます。しかし@code{help-window-keep-selected}を非@code{nil}に変更すれば、@samp{*Help*}バッファーを表示しているウィンドウが再利用されるようになります。

@cindex searching documentation efficiently
@cindex looking for a subject in documentation
  If you are looking for a certain feature, but don't know what it is called
or where to look, we recommend three methods.  First, try apropos commands,
then try searching the manual index, then look in the FAQ and the package
keywords, and finally try listing external packages.

@table @kbd
@item C-h a @var{topics} @key{RET}
This searches for commands whose names match the argument @var{topics}.  The
argument can be a keyword, a list of keywords separated by whitespace, or a
regular expression (@pxref{Regexps}).  @xref{Apropos}.

@item C-h d @var{topics} @key{RET}
Similar, but searches the @emph{text} of the documentation strings rather
than the names of commands and functions.

@item C-h r i @var{topic} @key{RET}
Emacsのinfoマニュアルのインデックスから、@var{topic}を検索して最初にマッチしたものを表示します。@kbd{,}を押すと次にマッチしたものを表示します。@var{topic}には正規表現を指定できます。

@item C-h r s @var{topic} @key{RET}
同様ですが、インデックスではなくマニュアル本文の@emph{テキスト}を検索します。

@item C-h C-f
Infoを使ってEmacs FAQを表示します。

@item C-h p
キーワードに基づいて、利用可能なEmacsパッケージを表示します。@ref{Package Keywords}を参照してください。

@item M-x list-packages
外部パッケージのリストを表示します。@ref{Packages}を参照してください。
@end table

  他のさまざまなコンテキストでも、@kbd{C-h}や@key{F1}は``ヘルプ''を意味します。たとえばプレフィクスキーの後にこれらのキーを入力すると、プレフィクスキーに続けて入力できるキーの一覧を表示することができます(このコンテキストでは@kbd{?}も使用できます。いくつかのプレフィクスキーは@kbd{C-h}や@kbd{?}に別の意味を持たせているものがあるので使えませんが、それらのものでも@key{F1}はサポートされています)。

@menu
* Help Summary::             すべてのヘルプコマンドの要約リスト。
* Key Help::                 Emacsでキーが何を行うか尋ねる。
* Name Help::                コマンド、変数、関数名を尋ねる。
* Apropos::                  与えられたトピックに関係があるものを尋ねる。
* Help Mode::                へルポモードとヘルプバッファーの特別な機能。
* Package Keywords::         キーワード(トピック)でLispライブラリーを探す。
* Language Help::            国際的な言語サポートに関するヘルプ。
* Misc Help::                その他のヘルプコマンドについて。
* Help Files::               追加のヘルプファイルを表示するコマンド。
* Help Echo::                アクティブなテキストのヘルプとツールチップ(``バルーンヘルプ'')。
@end menu

@iftex
@node Help Summary
@end iftex
@ifnottex
@node Help Summary
@section ヘルプの概要
@end ifnottex

  ここではビルトインのドキュメントにアクセスする、ヘルプコマンドの要約を記します。これらの大部分については、以下のセクションで詳細を説明します。

@table @kbd
@item C-h a @var{topics} @key{RET}
名前が@var{topics}にマッチするコマンドの一覧を表示します(@code{apropos-command})。@ref{Apropos}を参照してください。
@item C-h b
有効なキーバインディングをすべて表示します。最初はマイナーモード、次にメジャーモード、それからグローバルのバインディングを表示します(@code{describe-bindings})。@ref{Misc
Help}を参照してください。
@item C-h C-q
よく使うコマンドとキーバインディングを表示するウィンドウの表示を切り替えます。@ref{Misc Help}を参照してください。
@item C-h c @var{key}
キーシーケンス@var{key}がバインドされているコマンドの名前を表示します(@code{describe-key-briefly})。@kbd{c}は``character''が由来です。@var{key}についてさらに詳しい情報を得るには@kbd{C-h
k}を使います。@ref{Key Help}を参照してください。
@item C-h d @var{topics} @key{RET}
@var{topics}にマッチするドキュメントをもつ、コマンドまたは変数を表示します(@code{apropos-documentation})。@ref{Apropos}を参照してください。
@item C-h e
バッファー@file{*Messages*}を表示します(@code{view-echo-area-messages})。@ref{Misc
Help}を参照してください。
@item C-h f @var{function} @key{RET}
@var{function}という名前のLisp関数のドキュメントを表示します(@code{describe-function})。コマンドもLisp関数なのでコマンドにも使用できますが、@code{C-h
x}も使用できます。@ref{Name Help}を参照してください。
@item C-h h
ファイル@file{HELLO}を表示します。このファイルは様々な文字セットの例です。
@item C-h i
GNUドキュメントブラウザー(@code{info})を実行します。Emacsのマニュアルはinfoで利用できます。@ref{Misc
Help}を参照してください。
@item C-h k @var{key}
@var{key}で実行されるコマンドの名前と、ドキュメントを表示します(@code{describe-key})。@ref{Key
Help}を参照してください。
@item C-h l
最近のキーストローク300回分の説明を表示します(@code{view-lossage})。@ref{Misc Help}を参照してください。
@item C-h m
カレントのメジャーモード、およびマイナーモードのドキュメントを表示します(@code{describe-mode})。@ref{Misc
Help}を参照してください。
@item C-h n
最近のEmacsの変更に関するニュースを表示します(@code{view-emacs-news})。@ref{Help Files}を参照してください。
@item C-h o @var{symbol}
@var{symbol}という名前のLispシンボルのドキュメントを表示します(@code{describe-symbol})。これはすべての種類のシンボル、すなわち関数、変数、フェイスのドキュメントも表示します。@ref{Name
Help}を参照してください。
@item C-h p
トピックのキーワードでパッケージを見つけます(@code{finder-by-keyword})。@ref{Package
Keywords}を参照してください。これはパッケージメニューバッファーを使ってパッケージを一覧します。@ref{Packages}を参照してください。
@item C-h P @var{package} @key{RET}
指定したパッケージのドキュメントを表示します(@code{describe-package})。@ref{Package
Keywords}を参照してください。
@item C-h r
Emacsのマニュアルをinfoで表示します(@code{info-emacs-manual})。
@item C-h s
現在の@dfn{構文テーブル(syntax table)}を表示します(@code{describe-syntax})。@ref{Misc
Help}を参照してください。構文テーブルはどの文字が開始デリミッターで、その文字が単語の一部なのかを定義します。詳細については@ref{Syntax
Tables,, Syntax Tables, elisp, The Emacs Lisp Reference Manual}を参照してください。
@item C-h t
Emacsの対話的なチュートリアルを開始します(@code{help-with-tutorial})。
@item C-h v @var{var} @key{RET}
Lisp変数@var{var}のドキュメントを表示します(@code{describe-variable})。@ref{Name
Help}を参照してください。
@item C-h w @var{command} @key{RET}
@var{command}という名前のコマンドを実行するキーを表示します(@code{where-is})。@ref{Key
Help}を参照してください。
@item C-h x @var{command} @key{RET}
名前@var{command}のドキュメントを表示します(@code{describe-command})。@ref{Name
Help}を参照してください。
@item C-h C @var{coding} @key{RET}
コーディングシステム@var{coding}を説明します(@code{describe-coding-system})。@ref{Coding
Systems}を参照してください。
@item C-h C @key{RET}
現在使用されているコーディングシステムを説明します。
@item C-h F @var{command} @key{RET}
infoを開始して、Emacsコマンド@var{command}のドキュメントのノードに移動します(@code{Info-goto-emacs-command-node})。@ref{Name
Help}を参照してください。
@item C-h I @var{method} @key{RET}
インプットメソッド@var{method}を説明します(@code{describe-input-method})。@ref{Select Input
Method}を参照してください。
@item C-h K @var{key}
infoを開始して、キーシーケンス@var{key}のドキュメントのノードに移動します(@code{Info-goto-emacs-key-command-node})。@ref{Key
Help}を参照してください。
@item C-h L @var{language-env} @key{RET}
言語環境(language
environment)@var{language-env}で使用される文字セット、コーディングシステム、インプットメソッドに関する情報を表示します。@ref{Language
Environments}を参照してください。
@item C-h S @var{symbol} @key{RET}
編集中のプログラム言語に基づいて、シンボル@var{symbol}のinfoドキュメントを表示します(@code{info-lookup-symbol})。@ref{Misc
Help}を参照してください。
@item C-h .
ポイントが特別なテキスト領域のとき(たとえば@file{*Help*}のリンクなどが含まれる)にはヘルプメッセージを表示します(@code{display-local-help})。@ref{Help
Echo}を参照してください。このコマンドを@kbd{C-u C-h
.}のようにプレフィックス引数とともに呼び出すと、ボタンやウィジェット上にポイントがあればボタンやウィジェットを説明するバッファーを新たにポップアップします。
@end table

@node Key Help
@section キーのドキュメント

@findex describe-key-briefly
@findex describe-key
  キーシーケンスに関する情報を得るためのヘルプコマンドは、@kbd{C-h c}
(@code{describe-key-briefly})と@kbd{C-h k} (@code{describe-key})です。

@kindex C-h c
  @kbd{C-h c @var{key}}は、@var{key}にバインドされているコマンドの名前を、エコーエリアに表示します。たとえば@kbd{C-h
c C-f}は、@samp{forward-char}と表示します。

@cindex documentation string
@kindex C-h k
  @kbd{C-h k
@var{key}}も同様ですが、さらに多くの情報が得られます。これはコマンドが何をするかが正確に説明する、@dfn{ドキュメント文字列(documentation
string)}を含むヘルプバッファーを表示します。

@kindex C-h K
@findex Info-goto-emacs-key-command-node
  @kbd{C-h K @var{key}}は、@var{key}に対応するコマンドが説明されている、Emacsマニュアルのセクションを表示します。

  @kbd{C-h c}、@kbd{C-h k}、@kbd{C-h K}はファンクションキー、メニュー、マウスイベント(ただし@kbd{C-h
c}はマウス移動イベントを無視する)を含む、任意のキーシーケンスにたいして動作します。たとえば@kbd{C-h
k}の後で、メニューバーからメニューアイテムを選択すれば、それにより実行されるコマンドのドキュメントが表示されます。

@kindex C-h w
@findex where-is
  @kbd{C-h w @var{command}
@key{RET}}は、@var{command}がバインドされているキーをリストします。リストはエコーエリアに表示されます。コマンドがキーにバインドされていないとき、それは@kbd{M-x}を使って実行しなければならないことを意味します。@kbd{C-h
w}はコマンド@code{where-is}を実行します。

@findex button-describe
@findex widget-describe
  Emacsでは何らかのアクションを起こすクリック可能な種々のボタン(@ref{Buttons,,,elisp, The Emacs Lisp
Reference Manual}を参照)やウィジェット(@ref{Introduction,,,widget, Emacs
Widgets}を参照)を使用するモードがあります。これらのボタンによって何の関数が最終的に呼び出されるかを調べるために、Emacsは@code{button-describe}コマンド
(ボタン上にポイントを置いて実行する必要がある)を提供します。

@anchor{which-key}
@kbd{M-x
which-key}はキーマップを探す手助けをするグローバルなマイナーモードです。このモードはカレントで入力中の完了していないコマンド(つまりプレフィクス)の後に続くキーバインディングを表示します。

@node Name Help
@section コマンドと変数名のヘルプ

@kindex C-h x
@findex describe-command
  @kbd{C-h x @var{command} @key{RET}}
(@code{describe-command})は@var{command}という名前のコマンドのドキュメントをウィンドウに表示します。たとえば、

@example
C-h x auto-fill-mode @key{RET}
@end example

@noindent
は@code{auto-fill-mode}のドキュメントを表示します。これはキーにバインドされていないコマンド(通常@kbd{M-x}で実行する)のドキュメントを閲覧する方法です。

@kindex C-h f
@findex describe-function
  @kbd{C-h f @var{function} @key{RET}}
(@code{describe-function})はLisp関数@var{function}のドキュメントを表示します。このコマンドはLispプログラム内で使用されるLisp関数を意図しています。たとえば式@code{(make-vector
len)}を記述した直後に、@code{make-vector}を正しく使用できているか確認したいときには@w{@kbd{C-h f
make-vector
@key{RET}}}とタイプします。加えてすべてのコマンドはLisp関数なので、任意のコマンドのドキュメントを閲覧するためにもこのコマンドを使用できます。

  @kbd{C-h f
@key{RET}}を入力すると、バッファーのポイントがある位置の、一番内側のLisp式で呼び出されている関数の名前が有効で、Lisp関数として定義されていれば、その関数の説明が表示されます(引数を入力するときデフォルトとして関数名が表示されます)。たとえばポイントが@samp{(make-vector
(car x)}の後ろにあるとき、ポイントを含む一番内側のリストは@samp{(make-vector}で始まっているので、@w{@kbd{C-h f
@key{RET}}}により関数@code{make-vector}の説明が表示されます。

  @kbd{C-h f}は、関数名を正しく記述しているか確かめたいときも便利です。@kbd{C-h
f}のミニバッファーのプロンプトで、編集中のバッファーの関数名がデフォルトとして表示されるなら、それは定義されたLisp関数であることを意味します。本当にドキュメントを見たい訳でなければ、@kbd{C-g}を押してコマンド@kbd{C-h
f}をキャンセルできます。

  @code{describe-function}によって表示される関数のドキュメントに含まれているは、単にドキュメント文字列とその関数のシグネチャ(signature)だけではありません。関数のタイプ、定義されているファイル、obsolete(廃止)と宣言されているかどかのような補助的な情報も表示されます。テキストの強調部分で@key{RET}をタイプすれば、さらに詳しい情報に到達できることも珍しくありません。

@vindex help-enable-symbol-autoload
  @code{autoload}フォーム(@ref{Autoload,,, elisp, The Emacs Lisp Reference
Manual}を参照)でドキュメント文字列を提供しないautoloaded関数にたいするヘルプを要求する場合には、@file{*Help*}バッファーに表示するドキュメント文字列は存在しないでしょう。このような場合、@code{help-enable-symbol-autoload}が非@code{nil}ならEmacsはドキュメント文字列が存在するかどうか確認するためにその関数が定義されているファイルのロードを試みます。

@findex shortdoc
  @kbd{M-x
shortdoc}コマンドを使用して、特定トピックに関連する関数の概要を取得できます。これはたとえば@code{string}のように、興味のある領域の入力を求めて、多くの文字列処理関連の関数をリストしたバッファーをポップアップします。

@kbd{C-h
f}でポップアップされた@file{*Help*}バッファーに表示される関数やコマンドのドキュメントに、それらの使用例を含めるようにリクエストすることもできます。それには初期化ファイル(@ref{Init
File}を参照)に以下を追加してください:

@example
(add-hook 'help-fns-describe-function-functions
          #'shortdoc-help-fns-examples-function)
@end example

@kindex C-h v
@findex describe-variable
  @kbd{C-h v} (@code{describe-variable})は、@kbd{C-h
f}と似ていますがLisp関数ではなく、Lisp関数の説明を表示します。ポイントの周囲または前にあるLispシンボルが、定義されたLisp変数名のときはそれがデフォルトとなります。@ref{Variables}を参照してください。

  通常Emacsの変数または関数を説明するヘルプバッファーには、ソースファイルがインストールされていれば、対応するソースコードへのハイパーリンクが含まれています(@ref{Hyperlinking}を参照してください)。

@kindex C-h F
@findex Info-goto-emacs-command-node
  マニュアルからコマンドのドキュメントを探すには、@kbd{C-h F}
(@code{Info-goto-emacs-command-node})を使います。これはEmacsのマニュアルだけでなく、さまざまなマニュアルを認識するので、正しいものを見つけられるでしょう。

@kindex C-h o
@findex describe-symbol
  @kbd{C-h o} (@code{describe-symbol})は、@kbd{C-h f}や@kbd{C-h
v}と似ていますが、これは任意のシンボル(関数、変数、フェイス)を説明します。シンボルが複数の定義をもつ場合(たとえばシンボルが関数と変数の両方の定義をもつような場合)、このコマンドはそれらすべてのドキュメントを順に表示します。

@kindex C-h 4 s
@findex help-find-source
  @kbd{C-h 4 s} (@code{help-find-source}) switch to a buffer visiting the
source definition of what is being described in the help buffer.

@vindex completions-detailed
  ユーザーオプション@code{completions-detailed}が非@code{nil}なら、いくつかのコマンドは補完の表示時に可能な値に関する詳細を提供します。たとえば@kbd{C-h
o
TAB}ならドキュメント文字列の最初を含めて、更にそれぞれのシンボルが関数なのか変数(あるいはその他)なのかを示します。どの詳細が含まれるかはコマンドの用途に依存します。

@node Apropos
@section Apropos(適切な)
@cindex apropos

@cindex apropos pattern
@cindex apropos commands, list of keywords
  The @dfn{apropos} commands answer questions like, ``What are the commands
for working with files?'' More precisely, you specify your query as an
@dfn{apropos pattern}, which is either a word, a list of words separated by
whitespace, or a regular expression.

  以下の各aproposコマンドは、ミニバッファーでaproposパターンを読み取り、パターンにマッチするアイテムを検索して、結果を別のウィンドウに表示します。

@table @kbd
@item C-h a
@kindex C-h a
@findex apropos-command
コマンドを検索します(@code{apropos-command})。プレフィクス引数を指定すると、非インタラクティブな関数も検索します。

@item M-x apropos
@findex apropos
関数と変数を検索します。これを使えばインタラクティブな関数(コマンド)と非インタラクティブな関数の両方を検索できます。

@item M-x apropos-user-option
@findex apropos-user-option
ユーザーがカスタマイズできる関数を検索します。プレフィクス引数を指定すると、カスタマイズできない変数も検索します。

@item M-x apropos-variable
@findex apropos-variable
変数を検索します。プレフィクス引数を指定すると、カスタマイズできる変数だけを検索します。

@item M-x apropos-local-variable
@findex apropos-local-variable
バッファーローカル変数を検索します。

@item M-x apropos-value
@findex apropos-value
指定したパターンにマッチする値の変数を検索します。プレフィクス引数を指定すると、定義がパターンにマッチする関数と、プロパティリストがパターンにマッチする、Lispシンボルも検索します。

@item M-x apropos-local-value
@findex apropos-local-value
値が指定されたパターンにマッチする、バッファーローカル変数を検索します。

@item C-h d
@kindex C-h d
@findex apropos-documentation
指定されたパターンにマッチするドキュメント文字列の関数、または変数を検索します(@code{apropos-documentation})。
@end table

  最も簡単な種類のaproposパターンは単語です。その単語が含まれていれば、パターンにマッチします。ファイルを処理するコマンドを探すには、@kbd{C-h
a file
@key{RET}}と入力します。これは@code{copy-file}、@code{find-file}などの、名前に@samp{file}を含むすべてのコマンドの一覧を表示します。各コマンド名には簡単な説明と、それを呼び出すためのキーの一覧が一緒に表示されます。この例だと、@code{find-file}は@kbd{C-x
C-f}で呼び出せることがわかります。

@vindex help-window-select@r{, and apropos commands}
  デフォルトでは問い合わせた結果であるaproposバッファーを表示するウィンドウは選択されませんが、変数@code{help-window-select}を任意の非@code{nil}値にカスタマイズして選択されるようにすることもできます。

  aproposバッファーの関数定義、変数、シンボルの属性についてもっと情報が欲しいときは、@kbd{mouse-1}または@kbd{mouse-2}でクリックするか、そこに移動して@key{RET}を押してください。

  2つ以上の単語をaproposパターンに指定したときは、マッチするために少なくとも名前に2つの単語が含まれていなければなりません。たとえばポイントの前のテキストをkillするコマンドを探すときは、@kbd{C-h
a kill back backward behind before
@key{RET}}などと試みることができます。これは実際のコマンド名@code{kill-backward}にマッチするでしょう。もし@code{kill-text-before}というコマンドがあったなら、これも指定した単語を2つ含んでいるのでマッチします。

  より一層フレキシビリティを高めるために、正規表現(@ref{Regexps}を参照)を指定できます。aproposパターンに正規表現の特殊文字@samp{^$*+?.\[}が含まれていると、それは正規表現として扱われます。

  Emacsコマンド命名の慣習に従うと、aproposパターンとして便利な単語がいくつかあります。これらを@kbd{C-h
a}で使うことにより、命名の慣習の必要性を感じることができるでしょう。

@quotation
char、line、word、sentence、paragraph、region、page、sexp、list、defun、rect、buffer、frame、window、face、file、dir、register、mode、beginning、end、forward、backward、next、previous、up、down、search、goto、kill、delete、mark、insert、yank、fill、indent、case、change、set、what、list、find、view、describe、default
@end quotation

@vindex apropos-do-all
  変数@code{apropos-do-all}が非@code{nil}の場合、ほとんどのaproposコマンドは、プレフィクス引数が与えられたかのように振る舞います。例外が1つあります。プレフィクス引数なしの@code{apropos-variable}は、@code{apropos-do-all}の値に関係なく、常にすべての変数を検索します。

@vindex apropos-sort-by-scores
@cindex apropos search results, order by score
@vindex apropos-documentation-sort-by-scores
  デフォルトでは、@code{apropos-documentation}を除くすべてのaproposコマンドは、結果をアルファベット順に一覧します。変数@code{apropos-sort-by-scores}が非@code{nil}のときは、かわりに結果の関連度を推測して、一番関連度が高いと思われるものを最初に表示します。@code{apropos-documentation}コマンドは、デフォルトで結果を関連度順で一覧します。これをアルファベット順にするには、変数@code{apropos-documentation-sort-by-scores}を@code{nil}に変更してください。

@node Help Mode
@section ヘルプモードのコマンド
@findex help-mode
@cindex help mode

  ヘルプバッファーのメジャーモードはHelpモードです。このHelpモードはViewモードと同じコマンドが提供されます(@ref{View
Mode}を参照)。たとえば前方へのスクロールは@key{SPC}、後方へのスクロールは@key{DEL}か@kbd{S-@key{SPC}}です。他にも特別なコマンドがいくつか提供されます:

@table @kbd
@item @key{RET}
Follow a cross-reference at point (@code{help-follow}).
@item @key{TAB}
ポイントを次のハイパーリンクへ進めます(@code{forward-button})。
@item S-@key{TAB}
ポイントを前のハイパーリンクへ戻します(@code{backward-button})。
@item mouse-1
@itemx mouse-2
クリックしたハイパーリンク先をフォローします。
@item n
@itemx p
Helpバッファー内のページを前方または後方に移動します。
@item C-c C-c
ポイント位置のシンボルに関する、すべてのドキュメントを表示します(@code{help-follow-symbol})。
@item C-c C-f
@itemx r
ヘルプコマンドのヒストリーを前方に移動します(@code{help-go-forward})。
@item C-c C-b
@itemx l
ヘルプコマンドのヒストリーを後方に移動します(@code{help-go-back})。
@item s
(もしあれば)カレントヘルプトピックのソースを閲覧します(@code{help-view-source})。
@item i
マニュアル(複数可)からカレントトピックを照会します(@code{help-goto-info})。
@item I
Emacs Lispマニュアルからカレントトピックを照会します(@code{help-goto-lispref-info})。
@item c
変数またはフェイスをカスタマイズします(@code{help-customize})。
@end table

@cindex hyperlink
@findex help-follow
@findex help-go-back
@findex help-go-forward
@kindex RET @r{(Help mode)}
@kindex C-c C-b @r{(Help mode)}
@kindex l @r{(Help mode)}
@kindex C-c C-f @r{(Help mode)}
@kindex r @r{(Help mode)}
  もし関数名、変数名、フェイス名(@ref{Faces}を参照してください)がヘルプバッファーのドキュメントにあると、通常はアンダーラインされた@dfn{ハイパーリンク(hyperlink)}として表示されます。関連するドキュメントを閲覧するには、ポイントをそこに移動して@key{RET}
(@code{help-follow})とタイプするか、ハイパーリンクを@kbd{mouse-1}または@kbd{mouse-2}でクリックします。するとヘルプバッファーの内容が入れ替わりますが、@kbd{C-c
C-b}、または@kbd{l} (@code{help-go-back})で元に戻すことができます。元に戻る途中では、@kbd{C-c
C-f}または@kbd{r} (@code{help-go-forward})を使用して前に進むことができます。

@kindex TAB @r{(Help mode)}
@findex forward-button
@kindex S-TAB @r{(Help mode)}
@findex backward-button
  ヘルプバッファーでは@key{TAB}
(@code{forward-button})で次のハイパーリンクに前方へ移動、@kbd{S-@key{TAB}}
(@code{backward-button})で前のハイパーリンクに後方へ移動します。
ヘルプバッファーでハイパーリンク間を移動するには@key{TAB}
(@code{forward-button})で次のハイパーリンクへ前方に移動、@kbd{S-@key{TAB}}
(@code{backward-button})で前のハイパーリンクに後方へ移動します。

@vindex help-clean-buttons
  デフォルトではヘルプバッファー内のリンクの多くはクォート文字で囲われて表示されます。ユーザーオプション@code{help-clean-buttons}が非@code{nil}だと、これらのクォート文字はバッファーから取り除かれます。

@kindex n @r{(Help mode)}
@kindex p @r{(Help mode)}
@findex help-goto-next-page
@findex help-goto-previous-page
  (キーバインディングの長大なリストを表示する@kbd{C-h
b}など)一部のHelpコマンドが生成するHelpバッファーは@samp{^L}文字によって複数のページに分割されます。そのようなバッファーではコマンド@kbd{n}
(@code{help-goto-next-page})で次ページ先頭、@kbd{p}
(@code{help-goto-previous-page})で前ページ先頭に移動することができます。この方法を使えば、ヘルプバッファー内の異なる種類のドキュメント間を素早く移動することができます。

@cindex URL, viewing in help
@cindex help, viewing web pages
@cindex viewing web pages in help
@cindex web pages, viewing in help
  ヘルプバッファーには、infoマニュアル、ソースコード定義、URL(ウェブページ)へのハイパーリンクを含むこともできます。最初の2つはEmacs上で表示され、3番目のURLはコマンド@code{browse-url}により、ウェブブラウザーを使って表示されます。

  テキスト中のシンボルに関するすべてのドキュメントを閲覧するには、ポイントをシンボルに移動して@kbd{C-c C-c}
(@code{help-follow-symbol})とタイプします。これは変数、関数、および/またはフェイスとしての、そのシンボルが意味する、すべてのドキュメントを表示します。

@node Package Keywords
@section パッケージのキーワード検索
@cindex finder

Emacsのたいていのオプション機能は、@dfn{パッケージ(packages)}にグループ化されています。Emacsには数百のビルトインパッケージが含まれており、ネットワークを通じて他のパッケージのインストールもできます(@ref{Packages}を参照してください)。

@kindex C-h p
@findex finder-by-keyword
  あるトピックに関連するパッケージを探すのを簡単にするため、ほとんどのパッケージは、それが何をするかにもとづき、1つ以上の@dfn{キーワード(keywords)}に関連付けられています。@kbd{C-h
p}
(@code{finder-by-keyword})とタイプすると、パッケージキーワードとキーワードの意味を説明するリストが表示されます。キーワードに属するパッケージのリストを表示するには、そのキーワードの行で@key{RET}をタイプします。これによりパッケージメニューバッファー(@ref{Package
Menu}を参照してください)で、パッケージの一覧が表示されます。

@findex describe-package
@kindex C-h P
  @kbd{C-h P}
(@code{describe-package})はパッケージ名(@ref{Packages}を参照)の入力を求めて、パッケージの属性と、それが実装する機能をヘルプバッファーで表示します。このバッファーは、ボタン形式で関連するパッケージのキーワードを一覧します。ボタン@kbd{mouse-1}か@kbd{mouse-2}をクリックすると、そのキーワードに関連する他のパッケージを見ることができます。

@node Language Help
@section 国際化言語のサポートに関するヘルプ

  特定の言語環境(language environment: @ref{Language
Environments}を参照してください)の情報を得るには、@kbd{C-h
L}とタイプします。これはヘルプバッファーを開いて、言語環境でサポートされる言語の説明と、関連する文字セット、コーディングシステム、インプットメソッド、およびその言語環境のサンプルテキストを表示します。

  コマンド@kbd{C-h h}
(@code{view-hello-file})は、ファイル@file{etc/HELLO}を表示します。このファイルはさまざまな言語で``hello''をどのように言うのかを、いろいろな文字セットで表示するデモンストレーションです。

  コマンド@kbd{C-h I}
(@code{describe-input-method})は、指定されたインプットメソッド、または現在使われているインプットメソッド(デフォルト)の説明します。@ref{Input
Methods}を参照してください。

  コマンド@kbd{C-h C}
(@code{describe-coding-system})は、指定されたコーディングシステム、または現在使われているものを説明します。@ref{Coding
Systems}を参照してください。

@node Misc Help
@section その他のヘルプコマンド

@kindex C-h i
@kindex C-h 4 i
@findex info
@findex info-other-window
@cindex Info
@cindex manuals, included
  @kbd{C-h i}
(@code{info})はinfoプログラムを実行します。infoは構造化されたドキュメントファイルを閲覧するものです。@kbd{C-h 4 i}
(@code{info-other-window})は同じことを行いますが、別のウィンドウにInfoバッファーを表示します。Emacsマニュアル全体は、GNUシステムのための他のマニュアルとともにinfoで利用可能です。infoを開始した後に@kbd{h}をタイプすると、infoの使い方のチュートリアルが実行されます。

@cindex find Info manual by its file name
  数引数@var{n}を指定すると、@kbd{C-h
i}はinfoバッファー@samp{*info*<@var{n}>}を選択します。これは同時に複数のinfoマニュアルを閲覧するとき便利です。プレフィクス引数@kbd{C-u}だけを指定した場合、@kbd{C-h
i}はドキュメントのファイル名を尋ねるので、infoメニューのトップレベルにエントリーがないファイルでも閲覧できます。

  上記で説明しているヘルプコマンド@kbd{C-h F @var{function} @key{RET}}と@kbd{C-h K
@var{key}}は、infoを実行して@var{関数(function)}または@var{キー(key)}に関するドキュメントを直接開きます。

@kindex C-h S
@findex info-lookup-symbol
  プログラムを編集しているとき、そのプログラム言語のinfo版のマニュアルを持っていれば、@kbd{C-h S}
(@code{info-lookup-symbol})を使ってシンボル(キーワード、関数、変数)のエントリーを、適切なマニュアルから探すことができます。コマンドがどのように動作するかの詳細は、メジャーモードに依存します。

@kindex C-h l
@findex view-lossage
@findex lossage-size
  何か予期しないことが起こって、何をタイプしたかわからなくなったときは、@kbd{C-h l}
(@code{view-lossage})を使います。@kbd{C-h
l}は最近のキーストロークと、それらが呼び出したコマンドを表示します。デフォルトでは、
Emacsは最近の300回分のキーストロークを保持します。これを変更したければ、コマンド@code{lossage-size}で回数を変更できます。馴染みのないコマンドを見つけたら、@kbd{C-h
k}や@kbd{C-h f}を使用して、それらのコマンドが何を行なうか調べることができます。

@kindex C-h e
@findex view-echo-area-messages
  最近のエコーエリアのメッセージを調べるには、@kbd{C-h e}
(@code{view-echo-area-messages})を使います。これはそれらのメッセージを保持するバッファー、@file{*Messages*}を表示します。

@kindex C-h m
@findex describe-mode
  Emacsの各メジャーモードでは、一般的にいくつかのキーが再定義されていて、編集動作も異なります。@kbd{C-h m}
(@code{describe-mode})は、現在のメジャーモードのドキュメントを表示します。これには通常このモードで変更されているコマンドや機能、およびそれらのキーバインドについても説明されています。

@kindex C-h b
@findex describe-bindings
@kindex C-h s
@findex describe-syntax
  @kbd{C-h b} (@code{describe-bindings})と@kbd{C-h s}
(@code{describe-syntax})は、現在のEmacs環境に関する、それ以外の情報を表示します。最初は現在のマイナーモードのローカルバインディング、次に現在のメジャーモードで定義されているローカルバインディング、最後にグローバルバインディングが表示されます。@kbd{C-h
s}は各文字の構文の説明とともに、構文テーブルの内容を表示します(@ref{Syntax Tables,, Syntax Tables, elisp,
The Emacs Lisp Reference Manual}を参照してください)。

@kindex C-h C-q
@findex help-quick-toggle
@findex help-quick
@cindex cheat sheet of popular Emacs commands
  @kbd{C-h C-q}
(@code{help-quick-toggle})はもっともよく使われるEmacsのコマンドとそれらのキーバインディングを表示するバッファー(``cheat
sheet''、いわゆる早見表)の表示のオンとオフを切り替えます。このバッファーの内容はコマンド@code{help-quick}によって作成されます。このバッファーで表示されているキーバインディングはボタンになっています。@kbd{mouse-1}か@kbd{mouse-2}でクリックすれば、そのキーシーケンスにバインドされているコマンドのドキュメントが表示されます。

@findex describe-prefix-bindings
  プレフィクスキーの後に@kbd{C-h}、@kbd{?}、@key{F1}をタイプすることにより、特定のプレフィクスキーにたいする、サブコマンドのリストを得ることができます(この方法が機能しないプレフィクスキーもあり、たとえば@key{ESC}を例にすると@kbd{@key{ESC}
C-h}は実際には@kbd{C-M-h} (@code{mark-defun})、@kbd{@key{ESC} ?}は@kbd{M-?}
(@code{xref-find-references})だが、@w{@kbd{@key{ESC} @key{F1}}}はうまく機能する)。

@findex describe-keymap
最後に@kbd{M-x
describe-keymap}は補完つきでキーマップ名の入力を求めて、そのキーマップ内のすべてのキーバインディングのリストを表示します。

@node Help Files
@section ヘルプファイル

  ビルトインのドキュメントとマニュアル以外にも、Emacsにはコピー条件(copying conditions)、リリースノート(release
notes)、デバッグ説明書(instructions for debugging)、バグ報告(reporting
bugs)などのトピックを説明する、いくつかのファイルが含まれています。これらのファイルは、以下のコマンドで閲覧することができます。@kbd{C-h
g}をのぞき、これらはすべて、@kbd{C-h C-@var{char}}という形式になっています。

@kindex C-h C-c
@findex describe-copying
@kindex C-h C-d
@findex view-emacs-debugging
@kindex C-h C-e
@findex view-external-packages
@kindex C-h C-f
@findex view-emacs-FAQ
@kindex C-h g
@findex describe-gnu-project
@kindex C-h C-m
@findex view-order-manuals
@kindex C-h C-n
@findex view-emacs-news
@kindex C-h C-o
@findex describe-distribution
@kindex C-h C-p
@findex view-emacs-problems
@kindex C-h C-t
@findex view-emacs-todo
@kindex C-h C-w
@findex describe-no-warranty

@table @kbd
@item C-h C-c
Emacsをコピー、再頒布する場合の規則を表示します(@code{describe-copying})。
@item C-h C-d
Emacsをデバッグするためのヘルプを表示します(@code{view-emacs-debugging})。
@item C-h C-e
外部のパッケージをどこで入手するかについての情報を表示します(@code{view-external-packages})。
@item C-h C-f
EmacsのFAQ(frequently-answered-questions:
頻繁に答えられる質問)のリストを表示します(@code{view-emacs-FAQ})。
@item C-h g
GNUプロジェクトに関する情報がある、@uref{http://www.gnu.org,
ページ}をvisitします(@code{describe-gnu-project})。
@item C-h C-m
Emacsマニュアルの印刷されたコピーの注文に関する情報を表示します(@code{view-order-manuals})。
@item C-h C-n
このバージョンの新しい機能の一覧が含まれるnewsファイルを表示します(@code{view-emacs-news})。
@item C-h C-o
Emacsおよび他のGNUソフトウェアーの最新バージョンを、注文またはダウンロードする方法を表示します(@code{describe-distribution})。
@item C-h C-p
Emacsの既知の問題(それにどう対処するかの提案がある場合もあります)を表示します(@code{view-emacs-problems})。
@item C-h C-t
EmacsのTODOリストを表示します(@code{view-emacs-todo})。
@item C-h C-w
GNU Emacsが完全に無保証なことにたいする、すべての詳細を表示します(@code{describe-no-warranty})。
@end table

@node Help Echo
@section アクティブテキストのヘルプとツールチップ

@cindex tooltip help
@cindex balloon help
@cindex active text
  Emacsでは拡大解釈される@dfn{アクティブテキスト}(active text:
マウスのクリックや@key{RET}に特別な反応をするテキスト)は、しばしばヘルプテキストに関連付けられています。これにはEmacsのバッファーのハイパーリンク、同様にモードラインの一部が含まれます。グラフィカルなディスプレイ、同様にいくつかのテキスト端末は、マウストラッキングをサポートしており、アクティブテキストの上をマウスが通過することにより、ヘルプテキストを@dfn{ツールチップ(tooltip)}で表示します。@ref{Tooltips}を参照してください。

@kindex C-h .
@findex display-local-help
@vindex help-at-pt-display-when-idle
  マウストラッキングをサポートしない端末では、バッファーのアクティブテキストにポイントを移動して、@kbd{C-h .}
(@code{display-local-help})をタイプすれば、ヘルプテキストを表示できます。これはヘルプテキストをエコーエリアに表示します。ポイントがある場所のヘルプテキストが利用可能な場合に、常に表示させるには、変数@code{help-at-pt-display-when-idle}に@code{t}をセットしてください。
