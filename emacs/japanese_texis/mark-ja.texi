@c ===========================================================================
@c
@c This file was generated with po4a. Translate the source file.
@c
@c ===========================================================================

@c This is part of the Emacs manual.
@c Copyright (C) 1985--1987, 1993--1995, 1997, 2001--2024 Free Software
@c Foundation, Inc.
@c See file emacs-ja.texi for copying conditions.
@node Mark
@chapter マークとリージョン
@cindex mark
@cindex setting a mark
@cindex region

  Emacsは他の多くのアプリケーションと同じようにバッファーのテキストの任意の部分を選択して、そのような@dfn{選択されたテキスト(selected
text)}を操作するコマンドを呼び出します。この選択されたテキストのことを、Emacsでは@dfn{(region)}と呼んでいます。リージョンにたいする処理の仕方は、他のプログラムが選択されたテキストを処理する方法と非常に似ていますが重要な違いも存在します。

@cindex active region
@cindex activating the mark
  リージョンとはバッファーの@dfn{マーク(mark)}と現時点の@dfn{ポイント(point)}の間にある部分のことです。(たとえば@kbd{C-SPC}コマンドで)どこかにマークをセットして、その後にリージョンの終端としたい場所までポイントを移動することによってリージョンを定義できます(マウスウォッシュリージョンの定義に使うことも可)。

  ポイントとマークのどちらが前にあったとしても、リージョンは常にポイントとマークの間にあります。ポイントが動くたびにリージョンは変化します。

  テキストのある位置にマークをセットすると、マークが@dfn{アクティブ(active)}になります。マークがアクティブのときは、そのリージョンもアクティブになります。Emacsはアクティブなリージョンの中にあるテキストを、フェイス@code{region}でハイライト表示します(@ref{Face
Customization}を参照してください)。

@cindex deactivating the mark
  バッファーのテキストを変更するコマンドを含む、特定の非移動系コマンド(non-motion
commands)の後で、Emacsは自動的にマークを@dfn{非アクティブ(deactivates)}にし、これによりハイライトも解除されます。@kbd{C-g}をタイプすれば、いつでも明示的に非アクティブにすることができます(@ref{Quitting}を参照してください)。

  操作をアクティブなリージョンのテキストに制限するコマンドが多数あります。たとえば(マッチしたテキストを置換する)@kbd{M-%}コマンドは、通常ならバッファーのアクセス可能な部分全体にたいして機能しますが、リージョンをアクティブにしたときにはそのリージョンだけにたいして機能するのです。

  たとえアクティブでなくても、マークは役に立ちます。たとえばマークリングを使えば、前のマーク位置に戻ることができます。更に非アクティブなリージョンであっても効果があるコマンドもいくつかあります(たとえば@dfn{upcase-region})。@kbd{C-x
C-x}のようなコマンドを使えば、そのリージョンを再びアクティブにすることもできます。

  インタラクティブなセッションではデフォルトである上記動作は、Transient
Markモード(暫定マークモード)という名で知られています。Transient
Markモードを無効にすると、Emacsは通常ではリージョンをハイライトしなくなります。@ref{Disabled Transient
Mark}を参照してください。

@vindex highlight-nonselected-windows
  あるバッファーでマークをセットしても、他のバッファーのマークは影響を受けません。アクティブなマークがあるバッファーに戻ったとき、マークは以前と同じ場所にあります。複数のウィンドウで同じバッファーを表示しているとき、これらのウィンドウはそれぞれのポイント位置をもっているので、リージョンも異なります。しかしこれらのウィンドウでは、マークの位置は共通です。@ref{Windows}を参照してください。通常、選択されたウィンドウのリージョンだけがハイライトされます。しかし変数@code{highlight-nonselected-windows}が非@code{nil}の場合、各ウィンドウのリージョンがハイライトされます。

  rectangular region(矩形リージョン)という、違う種類のリージョンもあります。@ref{Rectangles}を参照してください。

@menu
* Setting Mark::             マークをセットするコマンド。
* Marking Objects::          テキスト単位の周辺にリージョンをセットするコマンド。
* Using Region::             リージョンの内容を操作する方法の要約。
* Mark Ring::                後で戻れるように保存された以前のマーク位置。
* Global Mark Ring::         さまざまなバッファーの以前のマーク位置。
* Shift Selection::          シフトを押してカーソル移動キーを使う。
* Disabled Transient Mark::  デフォルトでリージョンをハイライトせずにおく。
@end menu

@node Setting Mark
@section マークのセット

  マークをセットするためのコマンドがいくつかあります:

@table @kbd
@item C-@key{SPC}
ポイント位置にマークをセットしてアクティブにします(@code{set-mark-command})。
@item C-@@
同じです。
@item C-x C-x
ポイント位置にマークをセットしてアクティブにしてから、以前のマークがあった位置にポイントを移動します(@code{exchange-point-and-mark})。
@item Drag-mouse-1
ドラッグしたテキストの周りにポイントとマークをセットします。
@item mouse-3
ポイント位置にマークをセットしてから、クリックした場所にポイントを移動します(@code{mouse-save-then-kill})。
@item @r{シフトを押したカーソル移動キー}
マークが非アクティブなら、ポイント位置にマークをセットしてポイントを移動します。@ref{Shift Selection}を参照してください。
@end table

@kindex C-SPC
@kindex C-@@
@findex set-mark-command
  マークをセットするもっとも一般的な方法は、@kbd{C-@key{SPC}}
(@code{set-mark-command})です@footnote{@acronym{ASCII}には、文字@kbd{C-@key{SPC}}はありません。テキスト端末で@kbd{C-@key{SPC}}をタイプすると、通常は文字@kbd{C-@@}が与えられます。このキーも@code{set-mark-command}にバインドされているので、もし異なる挙動を示すテキスト端末の場合は、@kbd{C-@key{SPC}}のかわりに@kbd{C-@@}を使うことを考えるのがよいかもしれません。}。これはポイントがある位置にマークをセットしてから、アクティブにします。その後、マークをそこに残したままポイントを移動できます。

  たとえばバッファーの一部を大文字に変換したいとします。これを行うには対象のテキストの一方の端に移動して、@kbd{C-@key{SPC}}をタイプし、対象のテキストがハイライトされるまでポイントを移動します。そして@kbd{C-x
C-u} (@code{upcase-region})をタイプすると、リージョンのテキストが大文字に変換されて、マークが非アクティブになります。

  マークがアクティブなときに非アクティブにしたいときは、@kbd{C-g}をタイプします(@ref{Quitting}を参照してください)。リージョンにたいして操作を行うほとんどのコマンドは、上記の例の@kbd{C-x
C-u}のように、自動的にマークを非アクティブにします。

  リージョンにたいしての操作は行わず、バッファーの位置を覚えておくためにマークをセット(@kbd{C-@key{SPC}
C-@key{SPC}}とタイプ)して、後でそこに戻る(@kbd{C-u
C-@key{SPC}}とタイプ)こともできます。詳細については、@ref{Mark Ring}を参照してください。

@kindex C-x C-x
@findex exchange-point-and-mark
  コマンド@kbd{C-x C-x}
(@code{exchange-point-and-mark})は、ポイントとマークの位置を交換します。ポイントの位置に問題はないが、リージョンのもう一方の端にポイントを移動したいとき@kbd{C-x
C-x}は便利です。2回目の@kbd{C-x
C-x}で、マークを新しいポイント位置にマークをセットしてから、ポイントを元の位置に戻すことができます。このコマンドはマークが非アクティブのとき、最初にマークをアクティブにします。これはマークが最後にどこにセットされたかを明確にするために、リージョンをハイライトするためです。しかしプレフィクス引数とともに呼び出せば、マークは非アクティブのままでリージョンもハイライトされません。これを使えば@kbd{C-u
C-@key{SPC}}と同様の方法で、マークの位置にジャンプできます。

  マウスでマークをセットすることもできます。マウスの左ボタン(@kbd{down-mouse-1})をクリックしてから、テキスト範囲をドラッグすると、最初にマウスボタンを押した位置にマークがセットされ、マウスボタンを話した位置にポイントが置かれます。かわりにマウスの右ボタン(@kbd{mouse-3})をクリックすれば、ポイントのある位置にマークがセットされ、クリックした位置にポイントが移動します。これらのマウスコマンドに関する詳細な説明は、@ref{Mouse
Commands}を参照してください。

  最後にシフトキーを押しながらカーソルを移動するコマンド(@kbd{S-@key{RIGHT}}、@kbd{S-C-f}、@kbd{S-C-n}など)でマークをセットできます。これは@dfn{シフト選択(shift-selection)}と呼ばれ、以前にシフト選択やマウスコマンドでセットされたアクティブなマークがないときに限り、ポイントを移動する前の位置にマークをセットします。マウスコマンドやシフト選択によるマークのセットは、通常のマークとは少し異なります。続けてシフトを押さないカーソル移動コマンドを実行するにより、マークは自動的に非アクティブになります。詳細は、@ref{Shift
Selection}を参照してください。

  @kbd{C-y}
(@code{yank})のようなテキストを挿入するコマンドの多くは、挿入されたテキストの先頭に、非アクティブなマークをセットします。これにより簡単にその位置に戻ることができます(@ref{Mark
Ring}を参照してください)。コマンドがこれを行っていることは、エコーエリアに@samp{Mark set}が表示されることで見分けることができます。

@cindex primary selection, when active region changes
  Xではアクティブなリージョンが変化するたびに、Emacsはリージョンのテキストを@dfn{プライマリー選択(primary
selection)}に保存します。これにより@kbd{mouse-2}をクリックして、他のXアプリケーションへテキストを挿入することができるようになります。@ref{Primary
Selection}を参照してください。

@node Marking Objects
@section テキストオブジェクトをマークするコマンド

@cindex marking sections of text
  単語(word)、リスト(list)、パラグラフ(paragraph:
段落)、ページ(page)などのテキストオブジェクトの周辺に、ポイントを配置してマークするコマンドがあります:

@table @kbd
@item M-@@
次の単語の末尾にマークをセットします(@code{mark-word})。ポイントは移動しません。
@item C-M-@@
次の対応のとれた式の後にマークをセットします(@code{mark-sexp})。ポイントは移動しません。
@item M-h
ポイントを現在のパラグラフの先頭に移動して、パラグラフの最後にマークをセットします(@code{mark-paragraph})。
@item C-M-h
ポイントを現在のdefunの先頭に移動して、defunの最後にマークをセットします(@code{mark-defun})。
@item C-x C-p
ポイントを現在のページの先頭に移動して、ページの最後にマークをセットします(@code{mark-page})。
@item C-x h
ポイントを現在のバッファーの先頭に移動して、バッファーの最後にマークをセットします(@code{mark-whole-buffer})。
@end table

@kindex M-@@
@findex mark-word
  @kbd{M-@@}
(@code{mark-word})は、次の単語の最後にマークをセットします(単語についての情報は、@ref{Words}を参照してください)。繰り返し呼び出されると、マークを1度に1単語進めてリージョンを拡張します。例外として、マークがアクティブでポイントの前にある場合、@kbd{M-@@}はマークを現在の位置から1単語後方に移動します。

  このコマンドに数引数@var{n}を指定することにより、@var{n}単語進めてマークするよう指定できます。負の引数@minus{}@var{n}は、@var{n}単語後方にマークを移動します。

@kindex C-M-@@
@findex mark-sexp
  同様に@kbd{C-M-@@}
(@code{mark-sexp})は、対応のとれた式の最後にマークをセットします(@ref{Expressions}を参照してください)。繰り返し呼び出すことにより、後続の式にリージョンを拡張します。正または負の数引数を指定するとその数に応じて前方または後方にマークを移動します。

   上記のリストの他のコマンドは、ポイントとマークの両方をセットするので、バッファー内のオブジェクトを区切るコマンドです。@kbd{M-h}
(@code{mark-paragraph})はパラグラフ(@ref{Paragraphs}を参照してください)、@kbd{C-M-h}
(@code{mark-defun})はトップレベルの関数定義(@ref{Moving by Defuns}を参照してください)、@kbd{C-x
C-p}
(@code{mark-page})はページ(@ref{Pages}を参照してください)をマークします。繰り返して呼び出すと、同種の連続するオブジェクトへと、リージョンを拡張します。数引数も同様で、マークを移動したいオブジェクトの数を指定します。

@kindex C-x h
@findex mark-whole-buffer
@cindex select all
  @kbd{C-x h}
(@code{mark-whole-buffer})はポイントをバッファーの先頭、マークを最後にセットすることによりバッファー全体をリージョンとします。

@node Using Region
@section リージョンを操作する

@cindex operations on a marked region
  一度リージョンを設定すると、それを処理するいくつかの方法があります:

@itemize @bullet
@item
@kbd{C-w} (@ref{Killing}を参照)でkillします。
@item
@kbd{M-w} でkillリングにコピーします(@ref{Yanking}を参照してください)。
@item
@kbd{C-x C-l}または@kbd{C-x C-u}で、大文字小文字を変換します(@ref{Case}を参照してください)。
@item
@kbd{C-u C-/}で変更をアンドゥ(undo)します(@ref{Undo}を参照してください)。
@item
@kbd{M-%}でリージョンの中のテキストを置換します(@ref{Query Replace}を参照してください)。
@item
@kbd{C-x @key{TAB}}または@kbd{C-M-\}でインデントします(@ref{Indentation}を参照してください)。
@item
@kbd{M-x fill-region}でテキストとしてフィルします(@ref{Filling}を参照してください)。
@item
@kbd{M-$}で単語のスペルをチェックします(@ref{Spelling}を参照してください)。
@item
@kbd{M-x eval-region}でLispコードとして評価します(@ref{Lisp Eval}を参照してください)。
@item
@kbd{C-x r s}でレジスターに保存します(@ref{Registers}を参照してください)。
@item
バッファーまたはファイルに保存します(@ref{Accumulating Text}を参照してください)。
@end itemize

  マークが非アクティブのときにはデフォルトの動作をするが、マークがアクティブのときはリージョンを処理するコマンドがいくつかあります。たとえば@kbd{M-$}
(@code{ispell-word})は、通常はポイントのある単語のスペルをチェックしますが、マークがアクティブのときはリージョンの中のテキストをチェックします(@ref{Spelling}を参照してください)。通常そのようなコマンドはリージョンが空のとき(たとえばマークとポイントが同じ位置のとき)は、デフォルトの動作をします。空のリージョンにたいして処理を行いたいときは、変数@code{use-empty-active-region}を@code{t}に変更してください。

@vindex delete-active-region
  @ref{Erasing}で説明したように、@key{DEL} (@code{backward-delete-char})と@key{Delete}
(@code{delete-forward-char})もこの方法で動作します。マークがアクティブのときはリージョンのテキストを削除します(例外として数引数@var{n}に1以外が指定されたとき、これらのコマンドはマークがアクティブか関係なく、@var{n}文字を削除します)。変数@code{delete-active-region}を@code{nil}に変更すると、これらのコマンドはマークがアクティブのとき異なる動作をしなくなります。これを@code{kill}に変更するとリージョンを削除するかわりに、@dfn{kill}するようになります(@ref{Killing}を参照してください)。

@vindex mark-even-if-inactive
  その他のコマンドにはデフォルトの動作はなく、常にリージョンを処理します。通常このようなコマンドには、@kbd{C-w}
(@code{kill-region})や@kbd{C-x C-u}
(@code{upcase-region})のように、名前に@code{region}がついています。マークが非アクティブのときは@dfn{非アクティブなリージョン}、すなわちポイントと最後にマークをセットした位置の間にあるテキストにたいして処理を行います(@ref{Mark
Ring}を参照してください)。この動作を無効にするには、変数@code{mark-even-if-inactive}を@code{nil}に変更してください。そうするとこれらのコマンドはマークが非アクティブのときエラーをシグナルします。

@cindex Delete Selection mode
@cindex mode, Delete Selection
@findex delete-selection-mode
@vindex delete-selection-temporary-region
  デフォルトでは、たとえマークがアクティブであっても通常のテキスト挿入のように、たとえば@kbd{a}をタイプすれば文字@kbd{a}が挿入されて、その後にマークが非アクティブになります。Delete
Selectionというマイナーモードでは、この挙動を変更できます。このモードが有効な場合には、マークがアクティブなときにテキストを挿入すると、まずリージョン内のテキストが最初に削除されるのです。ただしこの挙動は@code{delete-selection-temporary-region}オプションをカスタマイズして調整できます。このオプションのデフォルト値は@code{nil}ですが@code{t}にセットすることもできます。その場合にはマウス(@ref{Setting
Mark}を参照)、シフト選択(@ref{Shift Selection}を参照)、あるいはTransient Markモード無効時の@kbd{C-u
C-x
C-x}によってセットされた一時的にアクティブなリージョンだけは置き換えられるようになります。@code{delete-selection-temporary-region}に@code{selection}をセットすることによって、挙動を更に調整できます。この場合には@kbd{C-u
C-x
C-x}によってセットされたリージョンは置き換えられずに、マウスのドラッグやシフト選択によってアクティブになったリージョンだけが置き換えられるのです。Delete
Selectionのオンとオフを切り替えるには@kbd{M-x delete-selection-mode}をタイプしてください。

@node Mark Ring
@section マークリング

@cindex mark ring
  各バッファーは、@dfn{マークリング(mark
ring)}の中に、以前のマークの位置を記録しています。マークをセットするコマンドは、古いマークをこのリングにpushします。マークリングの1つの使い方として、後で戻りたい場所を記録させる使い方があります。

@table @kbd
@item C-@key{SPC} C-@key{SPC}
マークをアクティブにせずにマークをセットしてから、マークリングにpushします。
@item C-u C-@key{SPC}
マークがあった場所にポイントを移動し、マークリングから1つ前のマークを復元します。
@end table

@kindex C-SPC C-SPC
  コマンド@kbd{C-@key{SPC}
C-@key{SPC}}は、後で戻ってきたい位置をマークするときに便利です。これは現在の位置をマークを(Emacsがリージョンをハイライト表示してしまう)アクティブにすることなく、マークリングにpushします。実際にこれは@kbd{C-@key{SPC}}
(@code{set-mark-command})を連続して2回呼び出しています。最初の@kbd{C-@key{SPC}}はマークをセットし、2回目の@kbd{C-@key{SPC}}はそれを非アクティブにしています(Transient
Markモードがオフの場合、@kbd{C-@key{SPC} C-@key{SPC}}は一時的にTransient
Markモードを有効にします。@ref{Disabled Transient Mark}を参照してください)。

@kindex C-u C-SPC
  マークした位置に戻るには、@kbd{C-u
C-@key{SPC}}のようにプレフィクス引数を指定して、@code{set-mark-command}を使います。これはマークがあった場所にポイントを移動して、もしマークがアクティブのときは非アクティブにします。@kbd{C-u
C-@key{SPC}}を連続して呼び出すと、マークリングに保存された前の位置へジャンプしていきます。この方法で移動した位置の情報は失われません。それらはリングの最後に移動します。

@vindex set-mark-command-repeat-pop
  @code{set-mark-command-repeat-pop}を非@code{nil}にセットすると、@kbd{C-u
C-@key{SPC}}の後に続けて、@kbd{C-u
C-@key{SPC}}ではなく、@kbd{C-@key{SPC}}でマークリングを巡回できます。デフォルトでは@code{set-mark-command-repeat-pop}は@code{nil}です。

  各バッファーは自身のマークリングを持ちます。すべての編集コマンドは現在のバッファーのマークリングを使います。特に@kbd{C-u
C-@key{SPC}}は常に同じバッファーに留まります。

@vindex mark-ring-max
  変数@code{mark-ring-max}は、マークリングに保持する最大のエントリー数を指定します。デフォルトは16エントリーです。もしエントリー数が最大の場合、他のエントリーをpushするとリストの一番古いものが捨てられます。@kbd{C-u
C-@key{SPC}}を繰り返すと、リングの現在位置を巡回します。

  もし何度も同じ場所に戻りたいときは、マークリングでは不十分でしょう。そのような場合は後で使うために、その位置をレジスターに記録できます(@ref{Position
Registers}を参照してください)。

@node Global Mark Ring
@section グローバルマークリング
@cindex global mark ring

@vindex global-mark-ring-max
  各バッファーに属する普通のマークリングに加えて、Emacsには@dfn{グローバルマークリング(global mark
ring)}が1つあります。以前マークをセットしてからバッファーを切り替えた場合、マークをセットすると、マークはカレントバッファーのマークリングに加えて、グローバルマークリングにも記録されます。その結果、グローバルマークリングには訪れていたバッファーの系列が記録され、各バッファーではマークを設定した箇所が記録されます。グローバルマークリングの長さは、@code{global-mark-ring-max}で制御され、デフォルトは16です。

@kindex C-x C-SPC
@findex pop-global-mark
  コマンド@kbd{C-x C-@key{SPC}}
(@code{pop-global-mark})は、グローバルリングの最新のバッファー位置にジャンプします。これもリングを巡回するので、連続して@kbd{C-x
C-@key{SPC}}を使うことにより、古いバッファーのマーク位置に移動します。

@node Shift Selection
@section シフト選択
@cindex shift-selection

  シフトキーを押しながらカーソル移動コマンドをタイプすると、ポイントを移動する前の位置にマークをセットするので、リージョンが元のポイント位置から新しいポイント位置に拡張されます。この機能は@dfn{シフト選択(shift-selection)}と呼ばれます。これは他のエディターでテキストを選択する方法と似ています。

  シフト選択によるマークのセットは、これまでの説明とは少し異なる振る舞いをします。最初に、マークを非アクティブにする通常の方法(バッファーのテキストを変更したり@kbd{C-g}をタイプするなど)に加え、@emph{シフトキーを押さない(unshifted)}カーソル移動コマンドでも、マークが非アクティブになります。次に、連続する@emph{シフトキーを押した(shifted)}カーソル移動コマンドでは、マークの更新はされません。つまりシフトキーを押しながらカーソル移動コマンドを繰り返すと、リージョンは継続的に変更されます。

  シフト選択は、シフトキーを押したカーソル移動キーが、別のコマンドにバインドされていない場合のみ動作します(@ref{Customization}を参照してください)。たとえば@kbd{S-C-f}を他のコマンドにバインドしていると、@kbd{S-C-f}はシフト選択バージョンの@kbd{C-f}
(@code{forward-char})ではなく、バインドされたコマンドを実行します。

  マウスコマンドによるマークのセットも、シフト選択によるマークのセットと同様です(@ref{Setting
Mark}を参照してください)。たとえばマウスをドラッグしてリージョンを指定すると、シフトキーを押したカーソル移動コマンドを使って、そのリージョンの拡張を続けることができます。どちらのケースも、シフトキーを押さないカーソル移動コマンドで、マークが非アクティブになります。

@vindex shift-select-mode
  シフト選択をオフにするには、@code{shift-select-mode}を@code{nil}にセットします。これを行ってもマウスコマンドを通じたマークのセットは無効になりません。@code{shift-select-mode}に値@code{permanent}をセットするとシフト変換されていないカーソル移動キーによるマークの非アクティブ化が行われなくなり、たとえば前のコマンドでセットされたリージョンはシフト選択で拡張でき、シフト選択でセットされたリージョンはシフトキーを押していないカーソルキーで拡張されることになります。

@node Disabled Transient Mark
@section Transient Markモードを無効にする
@cindex mode, Transient Mark
@cindex Transient Mark mode
@cindex highlighting region
@cindex region highlighting
@cindex Zmacs mode
@findex transient-mark-mode

  マークとリージョンのデフォルト動作では、マークをアクティブにセットすると、リージョンがハイライトされます。これはTransient
Markモードと呼ばれます。これはインタラクティブなセッションではデフォルトで有効になっているマイナーモードです。@kbd{M-x
transient-mark-mode}、または@samp{Options}メニューの@samp{Highlight Active
Region}で切り替えることができます。オフにすることによりEmacsの操作モードは変更されます。

@itemize @bullet
@item
@kbd{C-@key{SPC}}や@kbd{C-x
C-x}のようなコマンドでマークをセットしても、リージョンはハイライトされません。そのためマークがどこにあるか見分けることができないので、覚えている必要があります。

マークをセットしたらどこにセットしたか忘れる前にすぐ使うというのが、この問題にたいする通常の解決策です。ポイントとマークの位置を交換する@kbd{C-x
C-x}で、マークがどこかチェックすることもできます。

@item
通常マークがアクティブのときリージョンにたいして処理を行ういくつかのコマンドは、そのような振る舞いをしなくなります。たとえば普通@kbd{M-%}
(@code{query-replace})は、マークがアクティブのときはリージョンにたいして置換を行います。Transient
Markがオフだと、常にポイントからバッファーの最後までを処理します。このような方法で動作するコマンドは、コマンド自身のドキュメントにより識別できます。
@end itemize

@cindex enabling Transient Mark mode temporarily
  Transient Markモードがオフのときは、@kbd{C-@key{SPC} C-@key{SPC}}または@kbd{C-u C-x
C-x}を使って一時的にアクティブにすることができます。

@table @kbd
@item C-@key{SPC} C-@key{SPC}
@kindex C-SPC C-SPC@r{, enabling Transient Mark mode temporarily}
ポイント位置にマークをセット(普通の@kbd{C-@key{SPC}}と同様)して、マークが非アクティブになるまでの間、1度だけTransient
Markモードを有効にします(実際にはこれは独立したコマンドではなく@kbd{C-@key{SPC}}コマンドを2回行っています)。

@item C-u C-x C-x
@kindex C-u C-x C-x
ポイントとマークを交換してからマークをアクティブにして、次にマークが非アクティブになるまでの間、Transient
Markモードを一時的に有効にします(これはプレフィクス引数を指定した@kbd{C-x C-x}
(@code{exchange-point-and-mark})コマンドです)。
@end table

  これらのコマンドはマークをセットまたはアクティブにして、マークが非アクティブになるまでの間Transient
Markモードを有効にします。これらを使う1つの理由は、いくつかのコマンドはTransient
Markモードがオフのとき、リージョンにたいしてではなくバッファー全体を処理するからです。Transient
Markモードを一時的に有効にできれば、これらのコマンドをリージョンにたいして処理させることができます。

  リージョンをマウス(@ref{Setting Mark}を参照してください)、またはシフト選択(@ref{Shift
Selection}を参照してください)で指定したときも、一時的にTransient Markモードが有効になり、リージョンがハイライトされます。
