@c ===========================================================================
@c
@c This file was generated with po4a. Translate the source file.
@c
@c ===========================================================================

@c This is part of the Emacs manual.
@c Copyright (C) 1985--2024 Free Software Foundation, Inc.
@c See file emacs-ja.texi for copying conditions.
@node Frames
@chapter フレームとグラフィカルなディスプレイ
@cindex frames

  Emacsがグラフィカルなディスプレイ(たとえばXウィンドウシステム)で開始されたときは、システムレベルのグラフィカルな表示領域(display
region)を占有します。このマニュアルではこれを@dfn{フレーム}と呼び、``ウィンドウ''という言葉はフレームでバッファーを表示する部分のために使います。フレームには最初1つのウィンドウが含まれていますが、これを複数のウィンドウに分割することができます。フレームには通常、メニューバー、ツールバー、エコーエリアも含まれます。

  追加のフレームを作ることもできます(@ref{Creating
Frames}を参照してください)。同じEmacsセッションで作られたすべてのフレームは、背後にあるバッファーや、その他のデータにアクセスします。たとえば１つ以上のフレームで表示されているバッファーは、あるフレームに表示されているものに変更を加えると、即座に他のフレームに反映されます。

  @kbd{C-x
C-c}とタイプすると、現在表示されているすべてのフレームを閉じて、他に表示されているフレームがなければ、Emacsセッションを終了します(@ref{Exiting}を参照してください)。選択されたフレームだけを閉じるには、@kbd{C-x
5 0}(これは@kbd{o}ではなくゼロです)とタイプします。

  このセクションでは、グラフィカルなディスプレイに特有の機能(特にマウスコマンド)と、複数フレームを管理する機能について説明します。テキスト端末では、これらの機能の多くは利用できません。しかしテキスト端末で複数のフレームを作ることは可能です。そのようなフレームは1度に１つだけ表示され、テキスト画面全体を占有します(@ref{Text
Terminals}を参照してください)。テキスト端末の中には、マウスを使うことが可能なものがいくつかあります(GNUおよびUnix
systemsでこれを行うには、@ref{Text-Only Mouse}を、MS-DOSでこれを使うには、
@iftex
@ref{MS-DOS Mouse,,,emacs-xtra,Specialized Emacs Features}を参照してください
@end iftex
@ifnottex
@ref{MS-DOS Mouse}を参照してください
@end ifnottex
)。メニューはすべてのテキスト端末でサポートされています。

@menu
* Mouse Commands::           マウスによる移動、切り取り、貼り付け。
* Word and Line Mouse::      単語または行全体を選択するマウスコマンド。
* Mouse References::         リストからアイテムを選択するのにマウスを使う。
* Menu Mouse Clicks::        メニューを表示させるマウスクリック。
* Mode Line Mouse::          モードライン上でのマウスクリック。
* Creating Frames::          さまざまな内容とともに追加のEmacsフレームを作成する。
* Frame Commands::           フレームのアイコン化とフレームの切り替え。
* Fonts::                    フレームフォントの変更。
* Speedbar::                 スピードバーフレームの作り方と使い方。
* Multiple Displays::        1つのEmacsインスタンスが複数ディスプレイと通信する方法。
* Frame Parameters::         フレームのカラーや他のモードの変更。
* Scroll Bars::              スクロールバーの有効と無効、および使い方。
* Window Dividers::          マウスでドラッグできるウィンドウセパレーター。
* Drag and Drop::            ファイルを開いたりテキストを挿入するのにドラッグアンドドロップを使う。
* Menu Bars::                メニューバーの有効と無効。
* Tool Bars::                ツールバーの有効と無効。
* Tab Bars::                 タブバーの有効と無効。
* Dialog Boxes::             ダイアログボックス使用の制御。
* Tooltips::                 マウスの現在位置の情報の表示。
* Mouse Avoidance::          マウスポインターがテキストを隠すのを防ぐ。
* Text Terminals::           フレームを1つだけ表示する端末での複数フレーム。
* Text-Only Mouse::          テキスト端末でのマウスの使用。
@end menu

@node Mouse Commands
@section 編集のためのマウスコマンド
@cindex mouse buttons (what they do)
@cindex mouse, selecting text using

@kindex mouse-1
@kindex mouse-2
@kindex mouse-3
@table @kbd
@item mouse-1
クリックした場所にポイントを移動します(@code{mouse-set-point})。

@item Drag-mouse-1
ドラッグにより選択されたテキストを取り囲むリージョンをアクティブ化して、そのテキストをプライマリー選択に置きます(@code{mouse-set-region})。

@item mouse-2
クリックした場所にポイントを移動して、そこにプライマリー選択の内容を挿入します(@code{mouse-yank-primary})。

@item mouse-3
リージョンがアクティブなときは、近くにあるリージョンの終端をクリックした位置に移動します。アクティブでないときは現在のポイントにマークをセットして、ポイントをクリックした位置に移動します。結果となるリージョンはkillリングに保存されます。2回目のクリックでリージョンをkillします(@code{mouse-save-then-kill})。

@item C-M-mouse-1
ドラッグにより選択されたテキストを取り囲む矩形リージョンをアクティブにします。@ref{Rectangles}を参照してください。
@end table

@findex mouse-set-point
  もっとも基本的なマウスコマンドは@code{mouse-set-point}で、これはウィンドウのテキスト領域でマウスの左ボタン、@kbd{mouse-1}をクリックすることにより呼び出されます。これはポイントをクリックされた位置に移動します。そのウィンドウが選択されたウィンドウでなかったとき、そのウィンドウが選択されたウィンドウになります。@kbd{mouse-1}をダブルクリックして、リージョンをアクティブにすることもできます(@ref{Word
and Line Mouse}を参照)。

@vindex x-mouse-click-focus-ignore-position
  クリックしたフレームが選択されたフレームでなかった場合は通常、クリックされたフレームが選択されたフレームになるのに加えて、ウィンドウも選択されてカーソルがセットされます。Xウィンドウシステムでは、変数@code{x-mouse-click-focus-ignore-position}を@code{t}にセットすることにより、これを変更できます。この場合、選択されていないフレームへの最初のクリックではフレームだけを選択し、他は変更しません。次にクリックするとそのウィンドウを選択してカーソルをその位置にセットします。

@cindex mouse, dragging
@findex mouse-set-region
  @kbd{mouse-1}を押してテキストの周辺をドラッグすると、最初にマウスボタンを押した位置にマークが置かれ、ボタンを離した位置にポイントがセットされ(@ref{Mark}を参照してください)、その領域がアクティブになります(@code{mouse-set-region})。それに加えてリージョンのテキストがプライマリー選択となります(@ref{Primary
Selection}を参照してください)。

@vindex mouse-drag-copy-region
  変数@code{mouse-drag-copy-region}を非@code{nil}値に変更すると、テキストの周囲をドラッグすることにより、そのテキストをkillリングに追加します。デフォルトは@code{nil}です。

  この変数が@code{non-empty}の場合には、リージョンが空でない場合にかぎりkillリングへコピーします。たとえばマウスで1文字の半分に満たないエリアをドラッグすると、通常なら空の文字列がkillリングにコピーされますが、@code{non-empty}ならこの短いマウスドラッグがkillリングに影響を与えることはありません。

@vindex mouse-scroll-min-lines
  ドラッグしている途中でマウスがウィンドウの上または下を超えた場合、マウスがウィンドウ内に戻るまで、ウィンドウが一定の割合でスクロールします。この方法により、スクリーン全体に収まらないリージョンを選択できます。1度に何行スクロールするかは、マウスがウィンドウの縁からどれだけ離れたかに依存します。変数@code{mouse-scroll-min-lines}は、最小ステップサイズを指定します。

@vindex mouse-drag-mode-line-buffer
  オプション@code{mouse-drag-mode-line-buffer}が有効、かつウィンドウシステムがファイルのドラッグをサポートしていれば、モードライン内のバッファー名部分をドラッグすることによって、そのバッファーのファイルを別のプログラムやフレー厶にドラッグできます。

@findex mouse-yank-primary
@findex mouse-yank-at-click
  マウスの真ん中のボタン、@kbd{mouse-2}をクリックすると、クリックした位置にポイントを移動して、プライマリー選択の内容を挿入します(@code{mouse-yank-primary})。@ref{Primary
Selection}を参照してください。この振る舞いは、他のXアプリケーションと一貫性があります。かわりに@kbd{mouse-2}を、@code{mouse-yank-at-click}にバインドできます。これはクリックした位置にyankするコマンドです。

@vindex mouse-yank-at-point
  変数@code{mouse-yank-at-point}を非@code{nil}値に変更すると、@kbd{mouse-2}はポイントを移動しません。これはどこをクリックしたか、フレームのどのウィンドウをクリックしたかに関係なく、ポイントのある位置にテキストを挿入します。この変数は@code{mouse-yank-primary}と@code{mouse-yank-at-click}の両方に影響します。

@findex mouse-save-then-kill
  マウスの右ボタン、@kbd{mouse-3}をクリックすると、コマンド@code{mouse-save-then-kill}が実行されます。これはどこをクリックしたかと、リージョンの状態に依存していくつかのアクションを処理します。

@itemize @bullet
@item
アクティブなリージョンがないときは、@kbd{mouse-3}のクリックにより、ポイントがあった位置にマークをセットし、クリックした位置にポイントを置いて、リージョンをアクティブにします。

@item
リージョンがアクティブなときは、@kbd{mouse-3}のクリックにより、クリックした位置に近いリージョンの終端を、クリックした位置に調整します。調整されたリージョンのテキストは、killリングにコピーされます。元のリージョンのテキストがすでにkillリングにある場合は、それを置き換えます。

@item
元のリージョンが@kbd{mouse-1}のダブルクリックまたはトリプルクリックで選択されたものである場合、リージョンは単語全体、または行全体にたいして定義されているので(@ref{Word
and Line Mouse}を参照してください)、@kbd{mouse-3}によるリージョンの調整も単語全体または行全体を単位として行われます。

@item
同じ場所で連続して2回@kbd{mouse-3}を使うことにより、すでに選択されているリージョンをkillできます。したがってマウスでテキストをkillする簡単な方法は、まずリージョンの始端を決めるため@kbd{mouse-1}をクリックして、もう一方の終端で@kbd{mouse-3}を2回クリックします。テキストを削除せずにkillリングにコピーするには、@kbd{mouse-3}を1回だけクリックするか、テキスト範囲をドラッグします。その後は適当な場所でyankしてコピーできます。
@end itemize

  @code{mouse-save-then-kill}コマンドは、変数@code{mouse-drag-copy-region}の値にもしたがいます(上記参照)。変数の値が非@code{nil}のときは、コマンドがアクティブなリージョンをセットまたは調整したとき、常にリージョンのテキストはkillリングにも追加されます。一番最近のkillリングのエントリーが同じ方法で追加されたものである場合、新しいエントリーを作成せず、そのエントリーを置き換えます。

  上記で説明した任意のマウスコマンドを使ってセットしたリージョンは、シフト選択以外のマウス移動コマンド、および通常のマークを非アクティブ化する方法により、マークが非アクティブになります。@ref{Shift
Selection}を参照してください。

@cindex mouse wheel
@findex mouse-wheel-mode
@cindex Mouse Wheel minor mode
@cindex mode, Mouse Wheel
@vindex mouse-wheel-follow-mouse
@vindex mouse-wheel-scroll-amount
@vindex mouse-wheel-progressive-speed
@cindex wheel-up, a mouse event
@cindex wheel-down, a mouse event
@cindex wheel-left, a mouse event
@cindex wheel-right, a mouse event
  スクロールに使うことができる``ホイール''があるマウスもいくつかあります。ほとんどのグラフィカルなディスプレイでEmacsはデフォルトでマウスホイールによるウィンドウのスクロールをサポートします。この機能を切り替えるには@kbd{M-x
mouse-wheel-mode}を使います。変数@code{mouse-wheel-follow-mouse}および@code{mouse-wheel-scroll-amount}は、(どこでホイールによるスクロール操作が行われたかによる)スクロール対象の選択方法と、バッファーがスクロールされる量を決定します。変数@code{mouse-wheel-progressive-speed}は、スクロールの早さがホイールを移動した早さにリンクするかを決定します。このモードはフォントサイズの拡大と縮小もサポートしており、デフォルトでは@key{Ctrl}修飾によるスクロールにバインドされています。このモードが有効だと、マウスホイールは@code{wheel-up}や@code{wheel-down}のようなスペシャルイベントを生成します(@code{mouse-4}や@code{mouse-5}と報告する古いシステムも一部あり)。マウスに水平スクロール用ホイールがあれば、@code{wheel-left}や@code{wheel-right}のようなイベントも同様に生成されます。

@vindex mouse-wheel-scroll-amount-horizontal
Emacsは@key{Shift}修飾による水平スクロールもサポートします。水平スクロールを開始する前に数プレフィックス引数(例:
@kbd{M-5})をタイプすることにより、ユーザーオプション@code{mouse-wheel-scroll-amount-horizontal}が定義するステップ値が変更されます。

@vindex mouse-wheel-tilt-scroll
@vindex mouse-wheel-flip-direction
マウスがホイールのチルトが可能、あるいはタッチパッドがチルトをサポートしていれば、変数@code{mouse-wheel-tilt-scroll}を非@code{nil}値にカスタマイズして水平スクロールも有効にできます。デフォルトではマウスホイールをチルトするとチルトした方向にウィンドウのビューがスクロールします。つまり右にチルトするとウィンドウは右にスクロールするのでウィンドウに表示されていたテキストは水平左方向に移動します。水平スクロールの方向を逆転したい場合は、変数@code{mwheel-flip-direction}を非@code{nil}値にカスタマイズしてください。

Imageモード(@ref{Image
Mode}を参照)ではイメージ上にマウスポインターがあるときには、@key{Ctrl}修飾とともにマウスホイールのスクロールはマウスポインター下のイメージをスケーリング、@key{Shift}修飾でイメージを水平方向にスクロールします。


@node Word and Line Mouse
@section 単語と行にたいするマウスコマンド

  以下の@kbd{mouse-1}の変種は、1度に単語全体または行全体を選択します。Emacsは選択されたテキスト周辺のリージョンをアクティブにして、killリングにもコピーされます。

@table @kbd
@item Double-mouse-1
クリックした単語や文字周辺のテキストを選択します。

シンボルの構文をもつ文字(C
modeでのアンダースコアーなど)をダブルクリックすると、シンボルを取り囲むその文字を選択します。開きカッコ(または閉じカッコ)の構文をもつ文字をダブルクリックすると、そのカッコで始まる(または終わる)グループを選択します。区切り文字の構文をもつ文字(Cのシングルクォーテーションやダブルクォーテーション)をダブルクリックすると、文字列定数を選択します(Emacsはその文字により開始するのか(または終了するのか)を、発見的な手法を使って見つけ出します)。

カッコによるグループ化、または文字列の区切り文字の先頭をダブルクリックすると、そのリージョンの最後にポイントが移動します。新たな位置を表示するために必要なら、バッファーの表示を前方にスクロールします。カッコによるグループ化、または文字列の区切り文字の終端をダブルクリックしても、デフォルトではポイントはそのリージョンの終端に留まり、リージョンの先頭がウィンドウ上端より上にある場合は表示されません。必要ならバッファーの表示を後方にスクロールすてリージョンの先頭に移動するように変更するには、ユーザーオプション@code{mouse-select-region-move-to-beginning}を非@code{nil}にセットしてください。

@item Double-Drag-mouse-1
単語全体を単位として、ドラッグした箇所のテキストを選択します。

@item Triple-mouse-1
クリックした行を選択します。

@item Triple-Drag-mouse-1
行全体を単位として、ドラッグした箇所のテキストを選択します。
@end table

@node Mouse References
@section マウスで参照をフォローする
@kindex mouse-1 @r{(on buttons)}
@kindex mouse-2 @r{(on buttons)}
@cindex hyperlinks
@cindex links
@cindex text buttons
@cindex buttons

@vindex mouse-highlight
  Emacsのバッファーには@dfn{ボタン}や、アクティブ化(例えばクリック)したとき何らかのアクション(例えば参照をフォローする)を行う、@dfn{ハイパーリンク}を含むものがあります。ボタンのテキストは通常、アンダーラインが引かれていたり、周囲にボックスが描かれて、視覚的にハイライトされています。ボタンの上にマウスを移動すると、マウスカーソルの形状が変化して、ボタンがライトアップされます。変数@code{mouse-highlight}を@code{nil}に変更すると、Emacsはこのハイライト機能を無効にします。

  ボタンをアクティブにするには、ポイントをそこに移動して@key{RET}をタイプするか、@kbd{mouse-1}または@kbd{mouse-2}でボタンをクリックします。たとえばDiredバッファーでは、ファイル名がボタンです。これをアクティブにすることにより、Emacsはそのファイルをvisitします(@ref{Dired}を参照してください)。@file{*Compilation*}バッファーでは、各エラーメッセージがボタンです。これをアクティブにすることにより、そのエラーにたいするソースコードをvisitします(@ref{Compilation}を参照してください)。

  ボタンを@kbd{mouse-1}でクリックすると、ボタンがアクティブになりますが、マウスボタンを押してから離すまで一定時間(厳密に言うと450ミリ秒以上)が経過すると、Emacsはボタンをアクティブにせず、ポイントをクリックした場所に移動します。この方法によりボタンをアクティブにせずにポイントを移動するのに、マウスを使用できます。マウスをボタンの上にドラッグすると、通常どおりリージョンをセットして、ボタンはアクティブにしません。

@vindex mouse-1-click-follows-link
  ボタンにたいして@kbd{mouse-1}がどのように適用されるかは、@code{mouse-1-click-follows-link}をカスタマイズすることにより変更できます。変数の値が正の整数の場合、それはボタンのアクティブ化を取り消すのに、何ミリ秒マウスボタンを押しつづける必要があるかを指定します。前のパラグラフで説明したように、デフォルトは450です。値が@code{nil}の場合、@kbd{mouse-1}は単にクリックした場所にポイントを移動するだけで、ボタンをアクティブにしません。値が@code{double}の場合、シングルクリックでポイントのセット、ダブルクリックでボタンをアクティブにします。

@vindex mouse-1-click-in-non-selected-windows
  選択されていないウィンドウのボタンでも通常、@kbd{mouse-1}でクリックすればボタンがアクティブになります。変数@code{mouse-1-click-in-non-selected-windows}を@code{nil}に変更した場合、選択されていないウィンドウのボタンを@kbd{mouse-1}でクリックすると、クリックした位置にポイントを移動してウィンドウを選択しますが、ボタンはアクティブになりません。

@node Menu Mouse Clicks
@section メニューにたいするマウスクリック

  @key{Ctrl}および@key{SHIFT}で修飾されたマウスクリックにより、メニューが表示されるものがいくつかあります。

@table @kbd
@item C-mouse-1
@kindex C-mouse-1
このメニューはバッファーを選択するためのものです。

MSB(``mouse select buffer'')グローバルマイナーモードは、このメニューをスマートで、よりカスタマイズ可能なものにします。
@ref{Buffer Menus}を参照してください。

@item C-mouse-2
@kindex C-mouse-2
このメニューには、フェイスや他のテキストプロパティをテストしたり、それらを設定するものが含まれます(後者は主にEnriched
textを編集するのに便利です。@ref{Enriched Text}を参照してください)。

@item C-mouse-3
@kindex C-mouse-3
このメニューは、モードに特有なメニューです。Menu-barモードがオンの場合、ほとんどのモードでは、このメニューに、そのモード特有なメニューバーのメニューと同じアイテムを表示します。このボタンに異なるメニューを指定するモードもいくつかあります。Menu-barモードがオフの場合、このメニューにはモード特有のメニューだけでなく、本来メニューバーに含まれるべきすべてのアイテムが含まれるので、メニューバーを表示せずに、それらにアクセスすることができます。

@item S-mouse-1
このメニューはそのウィンドウのバッファーの、デフォルトのフェイスを変更するためのものです。@ref{Text Scale}を参照してください。
@end table

@cindex context menu
@findex context-menu-mode
@vindex context-menu-functions
@kindex Down-mouse-3
@kindex S-F10
  GUIアプリケーションの多くは@dfn{コンテキストメニュー(context
menus)}の表示に@kbd{mouse-3}を使用しています。コンテキストメニューはマウスがクリックされた位置とコンテキスト(文脈)にたいして適している、さまざまなセッティングやアクションへのアクセスを提供します。マイナーモード@code{context-menu-mode}を有効にすれば、Emacsで@kbd{mouse-3}のデフォルト関数(@code{mouse-save-then-kill}にバインドされている。@ref{Mouse
Commands}を参照)をコンテキストメニューにできます。有効にした後は、@kbd{mouse-3}のクリックによりEmacsはコンテキストメニューを表示します。これらのコンテキストメニューの正確な内容は、カレントメジャーモード、およびマウスクリック箇所周辺のバッファーコンテンツに依存します。コンテキストメニューの内容をカスタマイズするために、変数@code{context-menu-functions}を使用できます(@ref{Major
Mode Conventions,,, elisp, The Emacs Lisp Reference
Manual}を参照)。@kbd{S-@key{F10}}を押下してコンテキストメニューを呼び出すこともできます。

@node Mode Line Mouse
@section モードラインのマウスコマンド
@cindex mode line, mouse
@cindex mouse on mode line

  ウィンドウのモードラインをマウスでクリックして、ウィンドウを選択したり操作することができます。

  モードラインのいくつかの領域、たとえばバッファー名や、メジャーモードおよびマイナーモードは、独自のマウスバインディングをもっています。これらの領域にマウスを移動すると、その領域がハイライトされ、特別なバインディングが表示されます(@ref{Tooltips}を参照してください)。このセクションのコマンドは、それらの領域には適用できません。

@table @kbd
@item mouse-1
@kindex mouse-1 @r{(mode line)}
モードラインを@kbd{mouse-1}でクリックすると、それが属するウィンドウを選択します。モードライン上で@kbd{mouse-1}でドラッグすることにより、それを移動することができるので、ウィンドウの高さを変更することができます。マウスでの高さの変更により、ウィンドウが削除されることはありません。ウィンドウの高さが定められた最小値より小さくなる場合は、拒絶されます。

@item mouse-2
@kindex mouse-2 @r{(mode line)}
モードラインを@kbd{mouse-2}でクリックすると、そのウィンドウがフレーム全体に表示されます。

@item mouse-3
@kindex mouse-3 @r{(mode line)}
モードラインを@kbd{mouse-3}でクリックすると、それが属するウィンドウを削除します。フレームにウィンドウが1つしかないときは、何もしません。

@item C-mouse-2
モードラインを@kbd{C-mouse-2}でクリックすると、クリックした位置でウィンドウを左右に分割します(@ref{Split
Window}を参照してください)。
@end table

@kindex mouse-1 @r{(scroll bar)}
  さらに、左右に並んだモードラインの間にある分割線を、@kbd{mouse-1}でクリックしてドラッグすることにより、垂直の境界線を左右に移動できます。

  ウィンドウのサイズ変更は、@code{window-resize-pixelwise}の値に影響されることに注意してください。詳細は@ref{Split
Window}を参照してください。

@node Creating Frames
@section フレームの作成
@cindex creating frames

@kindex C-x 5
  プレフィクスキー@kbd{C-x 5}は、@kbd{C-x 4}に類似しています。@kbd{C-x
4}コマンドが、選択されたフレームの別ウィンドウにバッファーを表示するのにたいして、@kbd{C-x
5}は異なるフレームを使います。可視またはアイコン化(``最小化''とも言われる。@ref{Visibility of Frames,,, elisp,
The Emacs Lisp Reference
Manual}を参照)されたフレームで、すでに要求されたバッファーが表示されている場合、そのフレームを手前に表示して非アイコン化(``最小化解除'')されます。それ以外の場合は、新しいフレームが現在の表示端末に作成されます。

  以下の@kbd{C-x 5}コマンドは、選択するバッファーを検索したり作成する方法が異なります。

@table @kbd
@item C-x 5 2
@kindex C-x 5 2
@findex make-frame-command
デフォルトフレームパラメーターを使用して新しいフレームを作成します(@code{make-frame-command})。

@item C-x 5 c
@kindex C-x 5 c
@findex clone-frame
カレントフレームのウィンドウ構成とフレームパラメーターを使用して新しいフレームを作成します(@code{clone-frame})。

@item C-x 5 b @var{bufname} @key{RET}
バッファー@var{bufname}を他のフレームで選択します。これは@code{switch-to-buffer-other-frame}を実行します。

@item C-x 5 f @var{filename} @key{RET}
ファイル@var{filename}をvisitして、そのバッファーを他のフレームで選択します。これは@code{find-file-other-frame}を実行します。@ref{Visiting}を参照してください。

@item C-x 5 d @var{directory} @key{RET}
ディレクトリー@var{directory}にたいするDiredバッファーを、他のフレームで選択します。これは@code{dired-other-frame}を実行します。@ref{Dired}を参照してください。

@item C-x 5 m
他のフレームでメールメッセージの作成を開始します。これは@code{compose-mail-other-frame}を実行します。これは@kbd{C-x
m}の異なるフレーム版です。@ref{Sending Mail}を参照してください。

@item C-x 5 .
他のフレームで識別子の定義を検索します。これは@code{xref-find-definitions-other-frame}を実行する、@kbd{M-.}の複数フレーム版です。@ref{Xref}を参照してください。

@item C-x 5 r @var{filename} @key{RET}
@kindex C-x 5 r
@findex find-file-read-only-other-frame
ファイル@var{filename}を読み取り専用でvisitして、そのバッファーを他のフレームで選択します。これは@code{find-file-read-only-other-frame}を実行します。@ref{Visiting}を参照してください。

@item C-x 5 5
このプレフィックスコマンド直後に呼び出した次コマンドが表示するバッファーに効果を及ぼす、より一般的なプレフィックスコマンドです(@code{other-frame-prefix})。これには別フレームに表示される次コマンドのバッファーが必要です。
@end table

  @dfn{フレームパラメーター(frame
parameters)}を指定することにより、新しく作成されるフレームの外見と動作を制御できます。@ref{Frame
Parameters}を参照してください。

@node Frame Commands
@section フレームコマンド

  以下のコマンドは、フレームを削除したり操作するために使われます:

@table @kbd
@item C-x 5 0
@kindex C-x 5 0
@findex delete-frame
選択されたフレームを削除します(@code{delete-frame})。1つしかフレームがないときは、エラーをシグナルします。

@item C-x 5 u
@kindex C-x 5 u
@findex undelete-frame
@findex undelete-frame-mode
@code{undelete-frame-mode}が有効なら、最近削除された16のフレームのうちの1つのフレームにたいする削除を取り消します。プレフィックス引数なしならもっとも最近削除されたフレーム、1から16までのプレフィックス数引数を指定すると対応するフレームの削除を取り消します(1が最近削除されたフレーム)。

@item C-z
@kindex C-z @r{(X windows)}
選択されたEmacsフレームを最小化(またはアイコン化)します(@code{suspend-frame})。@ref{Exiting}を参照してください。

@item C-x 5 o
@kindex C-x 5 o
@findex other-frame
他のフレームを選択して手前に表示します。このコマンドを繰り返すと、端末のすべてのフレームを循環することができます。

@item C-x 5 1
@kindex C-x 5 1
@findex delete-other-frames
現在の端末の、選択されたフレーム以外のすべてのフレームを削除します。

@item M-@key{F10}
@kindex M-F10
@findex toggle-frame-maximized
カレントフレームの最大化を切り替えます。フレームが最大化されているときはスクリーン全体に表示されます。

@item @key{F11}
@kindex F11
@findex toggle-frame-fullscreen
カレントフレームのフルスクリーンモードを切り替えます(フルスクリーンと最大化の違いは、前者がウィンドウマネージャーの装飾を隠すことで、これによりEmacs自身のスクリーンスペースが若干増えます)。
@end table

@vindex frame-resize-pixelwise
  フレームを本当に最大化またはフルスクリーンにするためには、変数@code{frame-resize-pixelwise}を非@code{nil}値にカスタマイズする必要があるウィンドウマネージャーもいくつかあります。この変数を非@code{nil}値にセットすると、一般的にフレームのサイズ変更を行や列の整数倍ではなく、ピクセル単位で行うことができます。

  @kbd{C-x 5 0}
(@code{delete-frame})コマンドは、選択されたフレームを削除します。しかしEmacsセッションとの対話能力が失われるのを防ぐため、Emacsセッションの最後のフレームの削除は拒絶します。Emacsがデーモンとして実行されているとき(@ref{Emacs
Server}を参照してください)は、普通の対話的なフレームがすべて削除された後も、常に仮想的なフレーム(virtual
frame)が残ります。この場合、@kbd{C-x 5
0}は最後の対話的なフレームを削除できます。Emacsセッションに再接続するには、@command{emacsclient}を使うことができます。

  @kbd{C-x 5 1}
(@code{delete-other-frames})コマンドは、現在の端末(端末にはグラフィカルなディスプレイとテキスト端末の両方が含まれます)の、カレントのフレーム以外のすべてのフレームを削除します。@ref{Text
Terminals}を参照してください)。他のグラフィカルなディスプレイ、またはテキスト端末で開いたフレームをもっている場合、これらは削除されません。

@vindex focus-follows-mouse
  @kbd{C-x 5 o}
(@code{other-frame})コマンドは、現在の端末の次のフレームを選択します。EmacsをXウィンドウシステム上のウィンドウマネージャーで使っていて、どんなフレームだろうと、マウスカーソルが上にくるとそのフレームを選択(または@dfn{フォーカスを与える})するようになっている場合、このコマンドが正常に機能するために、変数@code{focus-follows-mouse}を@code{t}に変更する必要があります。これは@kbd{C-x
5 o}を呼び出し、マウスカーソルを選択されたフレームにワープさせます。

@node Fonts
@section フォント
@cindex fonts

  デフォルトではEmacsはグラフィカルなディスプレイでテキストを表示するのに10ポイントのmonospaceフォントを使います。フォントのサイズはインタラクティブに変更可能です(@ref{Text
Scale}を参照)。

  異なるフォントを指定するために複数の異なる方法があります:

@itemize
@item
@samp{Options}メニューの@samp{Set Default
Font}をクリックします。これは既存のグラフィカルなフレームすべてのデフォルトを、選択したフォントにします。これを将来のセッションのために保存するには、@samp{Options}メニューの@samp{Save
Options}をクリックしてください。

@item
以下のように、@code{font}パラメーターを指定するように、変数@code{default-frame-alist}を変更する行をinitファイルに追加します:

@example
(add-to-list 'default-frame-alist
             '(font . "DejaVu Sans Mono-10"))
@end example

@noindent
これはこのinitファイルで再起動した後の、Emacsが作るすべてのグラフィカルなフレームのデフォルトを、指定したフォントにします。

@cindex X defaults file
@cindex X resources file
@item
以下のようにXリソースファイルに、Xリソースセッティング@samp{emacs.font}を追加します:

@example
emacs.font: DejaVu Sans Mono-12
@end example

@noindent
Xリソースファイルが効果を表すには、Xを再起動するか@command{xrdb}コマンドを使わなければなりません。@ref{Resources}を参照してください。Xリソースファイルでは、フォント名をクォートしないでください。

@item
EmacsをGNOMEデスクトップやHaikuで実行している場合には、変数@code{font-use-system-font}を@code{t}(デフォルトは@code{nil})にセットすることによって、Emacsにデフォルトのシステムフォントの変更とともに、フレームのデフォルトフォントを調節するよう指示できます。これが機能するには、EmacsがGsetting(または古いGconf)のサポートつきでコンパイルされていなければなりません(使用するGsetting設定名は具体的には@samp{org.gnome.desktop.interface
monospace-font-name}と@samp{org.gnome.desktop.interface font-name})。

@item
コマンドラインオプション@samp{-fn}(または@samp{--font})を使います。@ref{Font X}を参照してください。
@end itemize

  現在使っているフォントをチェックするには、@kbd{C-u C-x
=}コマンドが有用です。これはポイント位置の文字の説明と、それを描画しているフォント名を表示します。

@cindex fontconfig
  フォント名を表現する異なる方法がいくつか存在します。1番目は@dfn{Fontconfigパターン}を使う方法です。Fontconfigパターンは以下の形式をもちます:

@example
@var{fontname}[-@var{fontsize}][:@var{name1}=@var{values1}][:@var{name2}=@var{values2}]...
@end example

@noindent
このフォーマットでは、大カッコ(brackets)の中の要素は省略可能です。@var{fontname}は、@samp{Monospace}や@samp{DejaVu
Sans
Mono}のような、フォントの@dfn{ファミリー名}です。@var{fontsize}は、フォントの@dfn{ポイントサイズ}(1@dfn{プリンターポイント}はおよそ1/72インチです)で、エントリー@samp{@var{name}=@var{values}}は、フォントのslantやweightなどのセッティングを指定します。@var{values}には1つの値か、カンマで区切られた値のリストを指定します。それらに加えていくつかのプロパティ値は、ある種のプロパティ名だけで有効なものがあり、それらについては@samp{@var{name}=}部分を省略できます。

以下は、一般的なフォントプロパティの一覧です:

@table @samp
@item slant
@samp{italic}、@samp{oblique}、@samp{roman}のうちの、どれか1つです。

@item weight
@samp{light}、@samp{medium}、@samp{demibold}、@samp{bold}、@samp{black}のうちの、どれか1つです。

@item style
slantとweightを組み合わせた、特別なstyleを定義するフォントがいくつかあります。たとえば@samp{Dejavu
Sans}は、@samp{book} styleを定義し、これはslantおよびweightプロパティをオーバーライドします。

@item width
@samp{condensed}、@samp{normal}、@samp{expanded}のうちの、どれか1つです。

@item spacing
@samp{monospace}、@samp{proportional}、@samp{dual-width}、@samp{charcell}のうちの、どれか1つです。
@end table

@noindent
以下はFontconfigパターンの例です:

@example
Monospace
Monospace-12
Monospace-12:bold
DejaVu Sans Mono:bold:italic
Monospace-12:weight=bold:slant=italic
@end example

Fontconfigパターンの、より詳細な説明は、Fontconfigのマニュアルを参照してください。これはFontconfigとともに配布されており、@url{https://fontconfig.org/fontconfig-user.html}からオンラインで利用可能です。

MS-Windowsではすべてのフォントにたいして@var{fontname}[-@var{fontsize}]形式のサブセットだけがサポートされています。これらの形式すべてにたいして完全なFontconfigパターンは機能しないかもしれません。

@cindex GTK font pattern
  フォントを指定する2番目の方法は、@dfn{GTKフォントパターン}を使う方法です。これらは以下の構文を使います。

@example
@var{fontname} [@var{properties}] [@var{fontsize}]
@end example

@noindent
@var{fontname}はファミリー名、@var{properties}はスペースで区切られたプロパティ値のリストで、@var{fontsize}はポイントサイズです。GTKフォントパターンで指定するプロパティは以下のようなものでしょう:

@itemize
@item
Slantプロパティ: @samp{Italic}、@samp{Oblique}。省略したときはデフォルトのslant(roman)が暗に指定されます。
@item
Weightプロパティ:
@samp{Bold}、@samp{Book}、@samp{Light}、@samp{Medium}、@samp{Semi-bold}、@samp{Ultra-light}。省略したときは@samp{Medium}
weightが暗に指定されます。
@item
Widthプロパティ:
@samp{Semi-Condensed}、@samp{Condensed}。省略したときはデフォルトのwidthが使用されます。
@end itemize

@noindent
以下にGTKフォントパターンの例をいくつか示します:

@example
Monospace 12
Monospace Bold Italic 12
@end example

MS-Windowsでは@var{fontname}のサブセットだけがサポートされています。

@cindex XLFD
@cindex X Logical Font Description
  フォントを指定する3番目の方法は@dfn{XLFD(X Logical Font
Description)}を使う方法であり、MS-Windowsでもサポートされています。これはXでフォントを指定する際の伝統的な手法です。以下のように、各XLFDは14の単語か数字をダッシュで区切ったものからなります:

@example
-misc-fixed-medium-r-semicondensed--13-*-*-*-c-60-iso8859-1
@end example

@noindent
XLFDでのワイルドカード文字(@samp{*})は、任意の文字の並び(noneを含む)にマッチし、@samp{?}は任意の1文字にマッチします。しかしマッチングは実装依存で、長い名前の中のダッシュにたいするワイルドカードのマッチが不正確なことがあります。信頼できる結果を得るためには、14個すべてのダッシュを指定して、ワイルドカードを1つのフィールドだけに使います。XLFDでは大文字小文字の違いは重要ではありません。XLFDの構文は以下のとおりです:

@example
-@var{maker}-@var{family}-@var{weight}-@var{slant}-@var{widthtype}-@var{style}@dots{}
@dots{}-@var{pixels}-@var{height}-@var{horiz}-@var{vert}-@var{spacing}-@var{width}-@var{registry}-@var{encoding}
@end example

@noindent
エントリーは以下の意味をもちます:

@table @var
@item maker
フォントのmanufacturer(製造者名)です。
@item family
フォントのファミリー名です(たとえば@samp{courier})。
@item weight
フォントのweightで、通常は@samp{bold}、@samp{medium}、@samp{light}のどれかです。他の値をサポートするフォント名もいくつかあります。
@item slant
フォントのslantで、通常は@samp{r}(roman)、@samp{i}(italic)、@samp{o}(oblique)、@samp{ri}(reverse
italic)、@samp{ot}(other)のどれかです。他の値をサポートするフォント名もいくつかあります。
@item widthtype
フォントのwidthで、通常は@samp{normal}、@samp{condensed}、@samp{semicondensed}、@samp{extended}のどれかです。他の値をサポートするフォント名もいくつかあります。
@item style
オプションの追加のstyle名です。通常これは空で、ほとんどのXLFDでは、この位置に2つのハイフンを続けて指定します。style名には、@samp{ja}や@samp{ko}のような、ISO-639
language nameの2文字を指定することもできます。CJKスクリプトをサポートするいくつかのフォントは、style名の部分にこの記述をもちます。
@item pixels
フォントのheightをピクセルで指定します。
@item height
プリンターのポイントの1/10を単位とした、スクリーン上のフォントのheightです。フォントのポイントサイズの10倍です。垂直解像度(vertical
resolution)を与えれば、@var{height}と@var{pixels}は比例します。したがって一方を指定して、もう一方に@samp{*}を指定するのが一般的です。
@item horiz
フォントが意図するインチあたりのピクセル数で表した、水平解像度(horizontal resolution)です。
@item vert
フォントが意図するインチあたりのピクセル数で表した、垂直解像度(vertical
resolution)です。通常、システムのフォント解像度は、スクリーンにたいして正しい値になっています。したがって、これと@var{horiz}には@samp{*}を指定するのが普通です。
@item spacing
これには@samp{m}(monospace)、@samp{p}(proportional)、@samp{c}(character
cell)を指定します。
@item width
ピクセル単位で表した文字の平均widthの10倍です。
@item registry
@itemx encoding
フォントを描画するXフォント文字セット(X font character
set)です(Xフォント文字セットはEmacs文字セットと同じではありませんが、似ています)。フォントの選択をチェックするのに、@command{xfontsel}コマンドを使うことができます。通常は、@var{registry}に@samp{iso8859}、@var{encoding}に@samp{1}を使うべきです。
@end table

  フォントを指定する4番目の方法は、フォントニックネーム(font
nickname)を使う方法です。特定のフォントは通常のフォント指定のかわりに、短いニックネームをもつものがあります。たとえば@samp{6x13}は以下と同じです

@example
-misc-fixed-medium-r-semicondensed--13-*-*-*-c-60-iso8859-1
@end example

この形式はMS-Windowsではサポートされていません。

@cindex client-side fonts
@cindex server-side fonts
  X上でのEmacsは、2つのタイプのフォントを認識します。1つは@dfn{クライアントサイド}のフォントで、これはXftおよびFontconfigライブラリーにより提供されます。もう1つは@dfn{サーバーサイド}のフォントで、これはXサーバー自身により提供されます。ほとんどのクライアントサイドフォントは、アンチエイリアシング(antialiasing)やサブピクセルンティング(subpixel
hinting)などの、サーバーサイドフォントにはない、進んだフォント機能をサポートします。FontconfigとGTKパターンは、クライアントサイドフォントだけにマッチします。

@cindex listing system fonts
  すべての文字が同じ幅をもつ固定幅フォントを使いたいと思うでしょう。XftおよびFontconfigフォントでは、@command{fc-list}コマンドを使って、以下のようにして利用可能な固定幅フォントを一覧することができます。

@example
fc-list :spacing=mono
fc-list :spacing=charcell
@end example

@noindent
サーバーサイドのXフォントにたいしては、@command{xlsfonts}プログラムを使って、以下のようにして利用可能な固定幅フォントを一覧することができます。

@example
xlsfonts -fn '*x*' | grep -E '^[0-9]+x[0-9]+'
xlsfonts -fn '*-*-*-*-*-*-*-*-*-*-*-m*'
xlsfonts -fn '*-*-*-*-*-*-*-*-*-*-*-c*'
@end example

@noindent
XLFDの@var{spacing}フィールドが、@samp{m}または@samp{c}のフォントは固定幅フォントです。特定のフォントの外見を見るには、以下のように@command{xfd}コマンドを使います:

@example
xfd -fn 6x13
@end example

@noindent
これはフォント@samp{6x13}の全体を表示します。

  Emacsを実行しているときは、特定の種類のテキスト(@ref{Faces}を参照してください)や、特定のフレーム(@ref{Frame
Parameters}を参照してください)のフォントをセットすることもできます。

@node Speedbar
@section スピードバーフレーム
@cindex speedbar

@cindex attached frame (of speedbar)
  @dfn{スピードバー(speedbar)}は、簡単に他のフレームを操作したり処理するための、特別なフレームです。スピードバーが存在するとき、それは常に@dfn{アタッチされたフレーム(attached
frame)}と呼ばれる、特定のフレームに対応しています。すべてのスピードバー操作は、そのフレームにたいして処理されます。

  @kbd{M-x
speedbar}とタイプすると、スピードバーを作成して、カレントフレームに関連付けます。スピードバーを解除するには、再度@kbd{M-x
speedbar}とタイプするか、スピードバーを選択して@kbd{q}とタイプします(他のEmacsフレームを削除するのと同じ方法で、スピードバーフレームを削除することもできます)。スピードバーを他のフレームに関連付けたいときは、一旦解除してから、そのフレームで@kbd{M-x
speedbar}を呼び出します。

  スピードバーは、さまざまなモードを処理できます。デフォルトモードは@dfn{File
Display(ファイル表示)}モードで、これはアタッチされたフレームの、選択されたウィンドウのカレントディレクトリーのファイルを、1行に1ファイルずつ表示します。ディレクトリー以外をクリックすると、アタッチされたフレームの、選択されたウィンドウでそのファイルをvisitし、ディレクトリーをクリックすると、スピードバーでそのディレクトリーを表示します(@ref{Mouse
References}を参照してください)。各行には@samp{[+]}や@samp{<+>}が記されたボックスがあり、それをクリックすると、そのアイテムの内容を@dfn{展開}します。ディレクトリーを展開すると、ディレクトリーの内容を、ディレクトリー自身の行の下に加えてスピードバー表示します。通常のファイルを展開すると、ファイルの中のtagリストをスピードバー表示に加えます。tag名をクリックして、アタッチされたフレームの選択されたウィンドウで、tagにジャンプできます。ファイルまたはディレクトリーが展開されているときは、@samp{[+]}が@samp{[-]}に変化します。ボックスを再度クリックすると、アイテムを収納して、内容を隠すことができます。

  キーボードを使ってスピードバーを操作することもできます。スピードバーでポイントのある行で@key{RET}をタイプするのは、そのアイテムをクリックするのと等しく、@key{SPC}はアイテムを展開または収納します。@kbd{U}は、カレントディレクトリーの親ディレクトリーを表示します。カレント行のファイルをコピー、削除、リネーム<するには、@kbd{C}、@kbd{D}、@kbd{R}をタイプします。新しいディレクトリーを作成するには、@kbd{M}をタイプします。

  スピードバーのモードで、他に一般的な目的に使われるのは@dfn{Buffer
Display(バッファー表示)}モードです。このモードでは、スピードバーはEmacsバッファーのリストを表示します。このモードに切り替えるにはスピードバーで@kbd{b}をタイプします。File
Displayモードに戻るには、@kbd{f}をタイプします。スピードバーのウィンドウのどこかを@kbd{mouse-3}でクリック(またはモードラインを@kbd{mouse-1}でクリック)して、ポップアップメニューの@samp{Displays}を選択しても、表示モードを変更することができます。

  Rmailモード、Info、GUDを含むいくつかのメジャーモードは、スピードバーに選択可能な便利なアイテムを配する、特別な方法をもっています。たとえばRmailモードでは、スピードバーはRmailファイルのリストを表示し、カレントメッセージを他のRmailファイルに移動する場合は、それの@samp{<M>}ボックスをクリックします。

  スピードバーの使い方とプログラミングに関する詳細は、@ref{Top, Speedbar,,speedbar, Speedbar
Manual}を参照してください。

@node Multiple Displays
@section 複数ディスプレー
@cindex multiple displays
@cindex display server

  1つのEmacsが、1つ以上のXディスプレイと通信できます。最初、Emacsは環境変数@env{DISPLAY}、または@samp{--display}オプション(@ref{Initial
Options}を参照してください)で指定された、ただ1つのディスプレイに表示されます。他のディスプレイに接続するには、コマンド@code{make-frame-on-display}を使います:

@findex make-frame-on-display
@table @kbd
@item M-x make-frame-on-display @key{RET} @var{display} @key{RET}
ディスプレイ@var{display}に新しいフレームを作成します。
@end table

  1つのXサーバーは、1つ以上のスクリーンを処理できます。1つのサーバーに属する2つのスクリーンでフレームを開いた場合、Emacsはそれらが1つのキーボードを共有するのを知っているので、これらのスクリーンから到着するすべてのコマンドを1つの入力ストリームとして扱います。

  異なるXサーバーでフレームを開いた場合、Emacsは各サーバーごとに別な入力ストリームを作成します。各サーバーは、それぞれ選択されたフレームをもちます。特定のXサーバーで入力したコマンドは、そのサーバーの選択されたフレームに適用されます。

  マルチモニターディスプレイではコマンド@code{make-frame-on-monitor}が使用可能です:

@findex make-frame-on-monitor
@table @kbd
@item M-x make-frame-on-monitor @key{RET} @var{monitor} @key{RET}
モニター@var{monitor}上にスクリーン領域がカレントディスプレイの一部であるようなフレームを新たに作成します。
@end table

@node Frame Parameters
@section フレームパラメーター
@vindex default-frame-alist

  変数@code{default-frame-alist}の中の、@dfn{フレームパラメーター(frame
parameters)}のデフォルトリストを指定することにより、すべてのフレームのデフォルトの外見と振る舞いを制御することができます。この値はエントリーのリストで、各エントリーにはパラメーター名と、そのパラメーターの値を指定します。これらのエントリーはEmacsが新しいフレームを作るとき(初期フレームを含む)に効果を及ぼします。

@cindex frame size, specifying default
  たとえば以下のファイルをinitファイル(@ref{Init
File}を参照してください)に追加することにより、デフォルトのフレーム幅が90列、デフォルトのフレーム高さが40行、デフォルトフォントに@samp{Monospace-10}を指定します。

@example
(add-to-list 'default-frame-alist '(width  . 90))
(add-to-list 'default-frame-alist '(height . 40))
(add-to-list 'default-frame-alist '(font . "Monospace-10"))
@end example

  フレームパラメーターのリストと、その効果については、@ref{Frame Parameters,,, elisp, The Emacs Lisp
Reference Manual}を参照してください.

@vindex initial-frame-alist
  変数@code{initial-frame-alist}をカスタマイズすることにより、初期フレームだけに適用されるフレームパラメーターのリストを指定することもできます。

  EmacsがX
ツールキットを使ってコンパイルされている場合、カラーとフォントを指定するフレームパラメーターは、メニューとメニューバーには影響を及ぼしません。なぜなら、それらはEmacsが直接描画しているのではなく、ツールキットにより描画されているからです。

  フレームの外観と振る舞いも、Xリソースを通じてカスタマイズできます(@ref{X
Resources}を参照)。これらはinitファイル内で指定された初期フレームのパラメーターをオーバーライドします。

  セッションの保存とリストアのためにdesktopライブラリーを使用している場合は、desktopファイルに記録されたフレームが、これらのパラメーターとともにリストアされることに注意してください。これらのフレームがリストアされるときは、initファイル内で@code{default-frame-alist}および@code{initial-frame-alist}で指定されているフレームパラメーターよりも、記録されたパラメーターが優先されます。これを避ける方法については、@ref{Saving
Emacs Sessions}を参照してください。

@node Scroll Bars
@section スクロールバー
@cindex Scroll Bar mode
@cindex mode, Scroll Bar
@cindex Vertical Scroll Bar

  グラフィカルなディスプレイでは、Emacsウィンドの横に@dfn{垂直スクロールバー(vertical scroll
bar)}があります。スクロールバーのupボタンまたはdownボタンを@kbd{mouse-1}でクリックすると、ウィンドウを1行ずつスクロールします(しかし、これらのボタンがないようにスクロールバーをカスタマイズできるツールキットもある)。スクロールバー内部のボックスの上または下を@kbd{mouse-1}でクリックすると、@kbd{M-v}または@kbd{C-v}と同様に、ほぼウィンドウ全体の高さ分スクロールします(@ref{Moving
Point}を参照)
(これも、いくつかのツールキットでは動作が異なるかもしれない)。スクロールバー内部のボックスをドラッグすると、連続してスクロールします。

  EmacsがXウィンドウシステム上でXツールキットサポートなしでコンパイルされている場合、スクロールバーは違った振る舞いをします。スクロールバーの任意の箇所を@kbd{mouse-1}でクリックすると@kbd{C-v}のように前方にスクロールし、@kbd{mouse-3}でクリックすると@kbd{M-v}のように後方にスクロールします。スクロールバーで@kbd{mouse-2}をクリックすると、スクロールバー内部のボックスを上下にドラッグできます。

@findex scroll-bar-mode
@findex toggle-scroll-bar
  垂直スクロールバーの使用を切り替えるには、@kbd{M-x
scroll-bar-mode}とタイプします。このコマンドは、まだ作成されていないフレームも含めて、すべてのフレームに適用されます。選択されたフレームの垂直スクロールバーだけ切り替えたい場合は、コマンド@kbd{M-x
toggle-scroll-bar}を使用してください。

@vindex scroll-bar-mode
  起動時に垂直スクロールバーの使用を制御するには、変数@code{scroll-bar-mode}
(@ref{Customization}を参照)をカスタマイズします。この変数の値は、@code{right}(ウィンドウの右にスクロールバーを配します)、@code{left}(ウィンドウの左にスクロールバーを配します)、@code{nil}(垂直スクロールバーを無効にします)のどれかです。EmacsがXウィンドウシステム上でGTK+サポートつきでコンパイルされている、またはMS-Windows、macOSの場合、デフォルトでは右にスクロールバーを配します。EmacsがXウィンドウシステム上でGTK+サポートなしでコンパイルされている場合、(古いXアプリケーションの慣例にしたがって)スクロールバーを左に配します。

@vindex scroll-bar-width
@cindex width of the vertical scroll bar
  Xリソース@samp{verticalScrollBars}を使って、スクロールバーの有効または無効にすることができます(@ref{Resources}を参照してください)。スクロールバーの幅を制御するにはフレームパラメーター@code{scroll-bar-width}を変更してください(@ref{Frame
Parameters,,, elisp, The Emacs Lisp Reference Manual}を参照してください)。

@vindex scroll-bar-adjust-thumb-portion
@cindex overscrolling
(GTK+またはMotifとともに)X上でEmacsを使っている場合、変数@code{scroll-bar-adjust-thumb-portion}をカスタマイズして、スクロールバーの@dfn{オーバースクロール(overscrolling:
たとえばバッファーの最後が表示されていてもさらに下にスクロールします)}を制御できます。変数の値が非@code{nil}の場合、バッファーの最後が表示されていてもスクロールバーを下にドラッグできます。@code{nil}の場合、バッファーの最後が表示されたとき、内部のボックスはスクロールバーの最下になります。バッファー全体が表示されているときは、オーバースクロールできません。

@cindex @code{scroll-bar} face
  スクロールバーの視覚的な外見は、@code{scroll-bar}フェイスにより制御されます。

@cindex vertical border
  グラフィカルなフレームでは、垂直スクロールバーは暗に横並びのウィンドウを区別する役目を担っています。垂直スクロールバーが無効なとき、Emacsはデフォルトでは幅1ピクセルの@dfn{垂直ボーダー(vertical
border)}によりそのようなウィンドウを区別します。このボーダーは右側のウィンドウの最初の1ピクセルの列を占め、したがってそこに表示されていたグリフの左端ピクセルの上に上書きされることになるでしょう。これらのピクセルに重要な情報が含まれる場合は、window
dividerを有効にしてそれらを可視にできます(@ref{Window
Dividers}を参照)。垂直ボーダーの見栄えを複製するには、フレームの@code{right-divider-width}パラメーターを1にセットして、@code{window-divider}フェイスを@code{vertical-border}のフェイスから継承してください(@ref{Window
Dividers,, Window Dividers, elisp, The Emacs Lisp Reference Manual}を参照)。

@cindex Horizontal Scroll Bar
@cindex Horizontal Scroll Bar mode
  ツールキットサポート付きのグラフィカルなディスプレイでは、Emacsは各ウィンドウの最下に@dfn{水平スクロールバー(horizontal
scroll
bar)}も提供します。スクロールバーのleftボタンまたはrightボタンを@kbd{mouse-1}でクリックすると、ウィンドウを1列ずつ水平にスクロールします(これらのボタンを表示しないようスクロールバーをカスタマイズできるツールキットがあることに注意)。スクロールバーの内部ボックスの左または右下を@kbd{mouse-1}でクリックすると、ウィンドウは4列スクロールします。スクロールバー内部のボックスをドラッグすると、連続してスクロールします。

  このような水平スクロールにより、そのウィンドウのポイント位置が、右側または左側の見えない場所になるかもしれないことに注意してください。文字をタイプしてテキストを挿入したり、キーボードコマンドでポイントを移動することにより通常、ポイントは視界に戻るでしょう。

@findex horizontal-scroll-bar-mode
  To toggle the use of horizontal scroll bars, type @w{@kbd{M-x
horizontal-scroll-bar-mode}}.  This command applies to all frames, including
frames yet to be created.  To toggle horizontal scroll bars for just the
selected frame, use the command @w{@kbd{M-x toggle-horizontal-scroll-bar}}.

@vindex horizontal-scroll-bar-mode
  起動時に水平スクロールバーの使用を制御するには、変数@code{horizontal-scroll-bar-mode}をカスタマイズしてください。

@vindex scroll-bar-height
@cindex height of the horizontal scroll bar
  Xリソース@samp{horizontalScrollBars}を使って、水平スクロールバーを有効または無効にすることができます(@ref{Resources}を参照してください)。スクロールバーの高さを制御するには、フレームパラメーター@code{scroll-bar-height}を変更してください(@ref{Frame
Parameters,,, elisp, The Emacs Lisp Reference Manual}を参照してください)。

@node Window Dividers
@section ウィンドウdivider
@cindex Window Divider mode
@cindex mode, Window Divider

  グラフィカルなディスプレイでは、ウィンドウの外観を分割するために、@dfn{window dividers}を使用することができます。window
dividersはマウスでドラッグできるバーなので、隣接したウィンドウを簡単にリサイズできます。

@findex window-divider-mode
  window dividersの表示を切り替えるには、コマンド@kbd{M-x window-divider-mode}を使用します。

@vindex window-divider-default-places
  dividersをどこに表示するかカスタマイズするには、オプション@code{window-divider-default-places}を使用します。変数の値には@code{bottom-only}
(dividersをウィンドウの下だけに表示します)、@code{right-only}
(dividersをウィンドウの右だけに表示します)、または@code{t} (下と右の両方に表示します)を指定します。

@vindex window-divider-default-bottom-width
@vindex window-divider-default-right-width
  このモードにより表示されるwindow
dividersの幅を調整するには、オプション@code{window-divider-default-bottom-width}および@code{window-divider-default-right-width}をカスタマイズします。

  ウィンドウの列の最初の1ピクセル(window
dividerが無効な場合は横並びのウィンドウを区別する垂直ボーダーに使用されます)を可視とするwindow
dividerは、垂直スクロールバーが無効のときにも有用です(@ref{Scroll Bars}を参照)。

window dividersについての詳細は、@ref{Window Dividers,, Window Dividers, elisp, The
Emacs Lisp Reference Manual}を参照してください。

@node Drag and Drop
@section ドラッグアンドドロップ
@cindex drag and drop

  ほとんどのグラフィカルなデスクトップ環境で、Emacsは@dfn{ドラッグアンドドロップ(drag and
drop)}操作にたいする、基本的なサポートを提供します。たとえばEmacsのフレームにテキストをドロップすると、ドロップされた箇所にテキストを挿入し、ファイルをドロップすると、Emacsフレームはそのファイルをvisitします。特別なケースとしては、Diredバッファーにファイルをドロップすることにより、バッファーに表示されているディレクトリーにファイルを移動またはコピーします(アプリケーションの慣例に基づきます)。

@vindex dnd-open-file-other-window
  ファイルをドロップすると、通常はドロップされたウィンドウでファイルをvisitします。そのような場合に、新しいウィンドウでファイルをvisitしたいときは、変数@code{dnd-open-file-other-window}をカスタマイズします。

  現在のところ、XDNDおよびMotif drag and drop protocolsと、古いKDE 1.x protocolがサポートされています。

@vindex dnd-indicate-insertion-point
@vindex dnd-scroll-margin

  Emacsのウィンドウにテキストをドラッグしている際に、スクロールやドロップされたテキストが挿入される場所を判断するのが難しい場合があるでしょう。オプション@code{dnd-indicate-insertion-point}を非@code{nil}値にセットすれば、ドラッグ中にマウスがウィンドウ内を移動する際にドロップされるテキストが挿入される位置にポイント移動がするようにできます。また@code{dnd-scroll-margin}を整数値にセットすれば、ドラッグ中にウィンドウの上端または下端の指定した行数部分にマウスが移動するとウィンドウがスクロールするようにできます。

@vindex mouse-drag-and-drop-region
  Emacsはオプションで、テキストのリージョンを他のバッファーの他の部分へドラッグする操作もサポートします。これを有効にするには、変数@code{mouse-drag-and-drop-region}を非@code{nil}値にカスタマイズしてください。通常そのテキストは、ドロップ先が元のリージョンと同じなら移動(カットアンドペースト)され、他のバッファーならそのリージョンがコピーされます。この変数の値が@samp{shift}、@samp{control}、@samp{alt}のような修飾キー名の場合、その修飾キーを押しながらテキストをドロップすると、ドロップ先がドラッグ元と同じバッファーでも、テキストはカットされずにコピーされます。

@vindex mouse-drag-and-drop-region-cut-when-buffers-differ
@vindex mouse-drag-and-drop-region-show-tooltip
@vindex mouse-drag-and-drop-region-show-cursor
ドラッグ元とドロップ先が異なるバッファーのときにもテキストをカットするためには、オプション@code{mouse-drag-and-drop-region-cut-when-buffers-differ}を非@code{nil}値にセットします。デフォルトでは、グラフィカルなディスプレイの選択されたテキストはツールチップ内に表示され、ドラッグ中にはマウスカーソルとともにポイントが移動します。このような動作を抑止するには、オプション@code{mouse-drag-and-drop-region-show-tooltip}、および/または@code{mouse-drag-and-drop-region-show-cursor}に@code{nil}をセットしてください。

@vindex mouse-drag-and-drop-region-cross-program
Emacsから他のプログラムにテキストをドラッグできるようにするには、オプション@code{mouse-drag-and-drop-region-cross-program}に非@code{nil}値をセットしてください。

  Xウィンドウシステムでは、Emacsによるファイルの保存を期待してファイルをEmacsにドロップできるプログラムがいくつかあります。通常だとEmacsはファイルを保存する名前の入力を求めた後にそのファイルをオープンしますが、変数@code{x-dnd-direct-save-function}を変更することによってこの挙動を変えることができます。@ref{Drag
and Drop,,, elisp, The Emacs Lisp Reference Manual}を参照してください。

@node Menu Bars
@section メニューバー
@cindex menu bar mode
@cindex mode, Menu Bar
@findex menu-bar-mode
@vindex menu-bar-mode

  @kbd{M-x
menu-bar-mode}で、メニューバーの使用を切り替えることができます。引数を指定しないと、このコマンドはグローバルマイナーモードのMenu
Barを切り替えます。引数を指定した場合、引数が正ならMenu
Barモードをオンにして、負ならオフにします。起動時にメニューバーの使用を制御するには、変数@code{menu-bar-mode}をカスタマイズしてください。

@kindex C-mouse-3 @r{(when menu bar is disabled)}
  熟練したユーザーは、テキストのために更なる行を得るために、メニューをオフにしている場合がしばしばあります(特にテキスト端末時)。メニューバーがオフでも、ポップアップメニューをサポートするディスプレイなら、@kbd{C-mouse-3}でメニュー内容を含むポップアップメニューを表示できます。あるいは@kbd{mouse-3}でコンテキストメニューをポップアップするために、@code{context-menu-mode}を有効にして変数@code{context-menu-functions}をカスタマイズすることもできます。@ref{Menu
Mouse Clicks}を参照してください。

  メニューバーのコマンドを呼び出す方法については、@ref{Menu
Bar}を参照してください。メニューバーのメニューの視覚的な外見をカスタマイズする方法は、@ref{X Resources}を参照してください。

@node Tool Bars
@section ツールバー
@cindex tool bar mode
@cindex tool bar, attached to frame
@cindex mode, Tool Bar
@cindex icons, toolbar

  On graphical displays, Emacs puts a @dfn{tool bar} at the top of each frame,
just below the menu bar.  This is a row of buttons with icons which you can
click on with the mouse to invoke various commands.  Emacs can also
optionally display a tool bar at the top of each window (@pxref{Window Tool
Bar}).

@vindex tool-bar-always-show-default
  The global (default) tool bar contains general commands.  Some major modes
define their own tool bars; whenever a buffer with such a major mode is
current, the mode's tool bar replaces the global tool bar.  To prevent this
replacement from happening, customize the variable
@code{tool-bar-always-show-default}.

@findex tool-bar-mode
@vindex tool-bar-mode
  ツールバーの使用を切り替えるには、@kbd{M-x
tool-bar-mode}とタイプします。このコマンドは、まだ作成されていないフレームを含むすべてのフレームに適用されます。起動時にツールバーの使用を制御するには、変数@code{tool-bar-mode}をカスタマイズします。

@vindex tool-bar-style
@cindex Tool Bar style
  EmacsがGTK+サポートつきでコンパイルされている場合、ツールバーアイテムには、イメージ、テキストラベル、またはそれら両方を含むことができます。デフォルトではEmacsはGnomeデスクトップの、ツールバースタイルセッティングにしたがいます。もし何も定義されていない場合、ツールバーのアイテムにはイメージだけが表示されます。特定のツールバースタイルを強要するには、変数@code{tool-bar-style}をカスタマイズしてください。

@cindex Tool Bar position
  フレームパラメーター@code{tool-bar-position}で、GTK+ツールバーのためのツールバーの配置を制御することもできます。@ref{Frame
Parameters,,, elisp, The Emacs Lisp Reference Manual}を参照してください。

  NSビルドはツールバーをウィンドウ装飾と判断するため、ウィンドウが装飾されていないときはツールバーを表示しません。@ref{Frame
Parameters,,, elisp, The Emacs Lisp Reference
Manual}を参照してください。macOSでは、フレームがフルスクリーンのときツールバーは表示されませんが、スクリーン上端にマウスポインターを移動することにより表示することができます。

@vindex modifier-bar-mode
@findex modifier-bar-mode
@cindex displaying modifier keys in the tool bar
@cindex mode, Modifier Bar
@cindex Modifier Bar
  キーボードでEmacsで使用したい修飾キーが1つ以上欠落しているせいで、それらを含んだキーシーケンスの入力が難しかったり、不可能なときがよくあります。Emacsはオプションとしてそれらの修飾キーの代替えとして動作するようなボタンのリストを、ツールバーに表示できます。これらのボタンのことを``修飾バー(modifier
bar)''と呼ぶ場合もあります。修飾バーのアイコンをクリックすると、次に読み取られるキーボードイベントにその修飾キーが適用されます。この修飾バーはグローバルマイナーモード@code{modifier-bar-mode}が有効な際に表示されます。有効にするには@kbd{M-x
modifier-bar-mode}とタイプしてください。

@node Tab Bars
@section タブバー
@cindex tab bar mode
@cindex mode, Tab Bar
@cindex tabs, on the Tab Bar

  グラフィカルなディスプレイとテキスト端末では、Emacsは変数@code{tab-bar-position}に応じてオプションで各フレームのトップ、メニューバー(@ref{Menu
Bars}を参照)の直下に@dfn{タブバー(Tab Bar)}、上または下にツールバー(@ref{Tool
Bars}を参照)を表示できます。タブバーとは@dfn{タブ(tabs)}の行(そのフレーム上のウィンドウ構成間を切り替えるためにクリック可能)です。

  タブバー上の各タブは、そのフレームの名前をもった永続的なウィンドウ構成(そのフレームがウィンドウに分割される方法と各ウィンドウにどのバッファーを表示するか)を表します。タブの名前はウィンドウ構成で可視なバッファーの名前のリストから構成されます。タブをクリックすることによってタブに記録されたウィンドウ構成(以前そのタブがカレントタブだったときにフレームで使用されたウィンドウとバッファーの構成)に切り替わります。

  セッションの保存とリストアにデスクトップライブラリー(@ref{Saving Emacs
Sessions}を参照)を使用している場合には、タブバーのタブは関連付けられたウィンドウ構成とともにデスクトップファイルに記録されて、それはセッションをリストアした後に利用することができます。

タブバーはタブラインとは異なることに注意してください(@ref{Tab
Line}を参照)。各ウィンドウ上端にあるタブラインのタブはウィンドウ内でのバッファーの切り替え、各フレーム上端にあるタブバーのタブは1つ以上のバッファーを表示する複数のウィンドウを含むウィンドウ構成の切り替えに使用します。

@findex tab-bar-mode
  タブバーの使用を切り替えるには、@kbd{M-x
tab-bar-mode}とタイプします。このコマンドは、まだ作成されていないフレームを含むすべてのフレームに適用されます。起動時にタブバーの使用を制御するには、変数@code{tab-bar-mode}をカスタマイズして保存してください。

@vindex tab-bar-show
  変数@code{tab-bar-show}はTab
Barモードを自動的にオンにするかどうかを制御します。この値が@code{t}なら、新たなタブを作成するコマンドの使用時に@code{tab-bar-mode}モードが有効に成増。値が@code{1}ならタブが1つだけのときはタブバーを隠して、さらにタブが作成されたら再び表示します。より一般的には値が非負の整数なら、タブ数がその数より多くなったときだけタブバーを表示します。値@code{nil}は常にタブバーを非表示にします。この場合でも@kbd{M-x
tab-next}、@kbd{M-x
tab-switcher}、およびタブ名の補完を提供するその他のコマンドを使用することによってタブバーなしで名前つきのウィンドウ構成を切り替えることができます。@kbd{M-x
tab-new}、@kbd{M-x tab-close}等のコマンドを使用することにより、タブバーの作成やクローズも可能です。

  @code{tab-bar-show}に数値をセットすることで、フレームごとに作成されたタブ数に応じて、あるフレームではタブバーを表示したり、他のフレームでは表示しないようにすることができます。

@findex toggle-frame-tab-bar
  選択されたフレーム上のタブバーのみ使用を切り替えるには@kbd{M-x
toggle-frame-tab-bar}とタイプします。このコマンドの機能により変数@code{tab-bar-mode}や@code{tab-bar-show}の値とは関係なく、あるフレームではTab
Barを有効にして他のフレームでは無効のままにするといった選択的な適用ができるようになります。

@kindex C-x t
  プレフィクスキー@kbd{C-x t}は@kbd{C-x 5}と似ています。@kbd{C-x
5}コマンドはバッファーを別フレームにポップアップしますが(@ref{Creating Frames}を参照)、@kbd{C-x
t}コマンドは選択されたフレームで異なるウィンドウ構成に別のタブを使用します。

  以下の@kbd{C-x
t}コマンドは選択するバッファーを検索したり作成する方法が異なります。以下のコマンドは新たなタブでのバッファーの選択に使用できます。:

@table @kbd
@kindex C-x t 2
@findex tab-new
@vindex tab-bar-tab-name-function
@item C-x t 2
タブを新たに追加します(@code{tab-new})。変数@code{tab-bar-new-tab-choice}のカスタマイズによって新たなタブに表示するバッファーの選択を制御できます。変数@code{tab-bar-tab-name-function}をカスタマイズすれば新しいタブに付与されるデフォルト名を制御できます。

@kindex C-x t b
@findex switch-to-buffer-other-tab
@item C-x t b @var{bufname} @key{RET}
バッファー@var{bufname}を他のタブで選択します。これは@code{switch-to-buffer-other-tab}を実行します。

@kindex C-x t f
@findex find-file-other-tab
@item C-x t f @var{filename} @key{RET}
ファイル@var{filename}をvisit(@ref{Visiting}を参照)して、そのバッファーを他のタブで選択します。これは@code{find-file-other-tab}を実行します。

@kindex C-x t d
@findex dired-other-tab
@item C-x t d @var{directory} @key{RET}
別のタブで指定された@var{directory}を編集します(@ref{Dired}を参照)。ディレクトリーにたいするDiredバッファーを、他のタブで選択します。これは@code{dired-other-tab}を実行します。

@kindex C-x t t
@findex other-tab-prefix
@item C-x t t
これはプレフィクスコマンド(@code{other-tab-prefix})であり、これの直後に呼び出される次コマンドに効果を及ぼします。このプレフィクスコマンドは次コマンドにより表示されるバッファーが別のタブに表示されるるよう要求します。
@end table

@vindex tab-bar-new-tab-choice
  デフォルトでは新たなタブを追加したコマンドの呼び出し前にカレントだったバッファーとともに新たなタブが開始されます。別のバッファーとともに新たなタブを開始するには、変数@code{tab-bar-new-tab-choice}をカスタマイズしてください。

@vindex tab-bar-new-tab-to
  変数@code{tab-bar-new-tab-to}は新たなタブを配置する場所を定義します。デフォルトでは新たなタブはカレントタブの右側に追加されます。

  以下のコマンドはタブの削除に使用されます:

@table @kbd
@kindex C-x t 0
@findex tab-close
@vindex tab-bar-close-last-tab-choice
@item C-x t 0
選択されたタブをクローズします(@code{tab-close})。変数@code{tab-bar-close-last-tab-choice}がデフォルト値なら、1つのタブの場合には効果はありません。

@kindex C-x t 1
@findex tab-close-other
@item C-x t 1
選択されたタブを除き、選択されたフレーム上のすべてのタブを削除します。
@end table

@vindex tab-bar-close-tab-select
  変数@code{tab-bar-close-tab-select}はカレントタブをクローズ後に選択するタブを定義します。デフォルトではもっとも最近使用したタブを選択します。

@findex tab-undo
  コマンド@code{tab-undo}は最後にクローズしたタブをリストアします。

  以下のコマンドはタブ間を切り替えるために使用されます:

@table @kbd
@kindex C-x t o
@kindex C-TAB
@findex tab-next
@item C-x t o
@itemx C-@key{TAB}
次のタブに切り替えます(@code{tab-next})。このコマンドを繰り返すと選択されたフレームのすべてのタブを巡回します。正の数引数@var{n}では次の@var{n}番目のタブ、負の引数@minus{}@var{n}では前の@var{n}番目のタブに切り替えます。

@kindex S-C-TAB
@findex tab-previous
@item S-C-@key{TAB}
前のタブに切り替えます(@code{tab-previous})。正に数引数@var{n}では前の@var{n}番目のタブ、負の引数@minus{}@var{n}では次の@var{n}番目のタブに切り替えます。

@kindex C-x t @key{RET}
@findex tab-switch
@item C-x t @key{RET} @var{tabname} @key{RET}
すべてのタブの名前の補完つきで名前でタブを切り替えます(@code{tab-switch})。デフォルト値、およびタブ名の``将来のヒストリー(future
history)''はもっとも最近使用された順にソートされたタブ名なので、@kbd{M-n}
(@code{next-history-element})で最後にvisitしたタブ、その前のタブ、...を取得します。

@kindex C-1, tab bar
@kindex M-1, tab bar
@findex tab-select
@vindex tab-bar-select-tab-modifiers
@vindex tab-bar-tab-hints
@item @var{modifier}-@var{tab-number}
Switch to the tab by its number @var{tab-number} (@code{tab-select}).  After
customizing the variable @code{tab-bar-select-tab-modifiers} to specify one
or more @var{modifier} keys, you can select a tab by its ordinal number
using one of the specified modifiers in combination with the tab number to
select.  The number 9 can be used to select the last tab.  You can select
any modifiers supported by Emacs, @pxref{Modifier Keys}.  To display the tab
number alongside the tab name, you can customize another variable
@code{tab-bar-tab-hints}.  This will help you decide which numerical key to
press to select the tab by its number.

@kindex C-9, tab bar
@kindex M-9, tab bar
@findex tab-last
@item @var{modifier}-@kbd{9}
最後に使用したタブに切り替えます(@code{tab-last})。キーの組み合わせは@code{tab-bar-select-tab-modifiers}で指定した修飾キーと@kbd{9}です。数引数@var{n}では最後から@var{n}番目に使用したタブに切り替えます。

@kindex C-0, tab bar
@kindex M-0, tab bar
@findex tab-recent
@item @var{modifier}-@kbd{0}
最近使用したタブに切り替えます(@code{tab-recent})。キーの組み合わせは@code{tab-bar-select-tab-modifiers}で指定した修飾キーと@kbd{0}です。数引数@var{n}では@var{n}番目に最近使用したタブに切り替えます。
@end table

  以下のコマンドはタブを操作するために使用されます:

@table @kbd
@kindex C-x t r
@findex tab-rename
@item C-x t r @var{tabname} @key{RET}
カレントタブを@var{tabname}りリネームします(@code{tab-rename})。

@kindex C-x t m
@findex tab-move
@item C-x t m
カレントタブの位置を1つ右に移動します(@code{tab-move})。正の数引数@var{n}ではその回数分右、負の引数@minus{}@var{n}では@var{n}個左の位置へ移動します。
@end table

  タブの操作にマウスを使うことができます。@kbd{mouse-2}のクリックでタブのクローズ、@kbd{mouse-3}のクリックによりクリックしたタブを操作するアイテムを含んだコンテキストメニューをポップアップ、@kbd{mouse-1}でタブをドラッグすることによってタブバー上の別の位置にタブを移動できます。マウスホイールをスクロールすると次、または前のタブに切り替わります。スクロール中に@key{SHIFT}キーを押下すればタブが左、または右に移動します。

  タッチスクリーン入力(@ref{Other
Input}を参照)をタブ操作に用いることもできます。タブを長押し(@ref{Touchscreens}を参照)すると、押下されているタブを操作するアイテムをもつコンテキストメニューが表示されます。タブバー自体を長押しすれば、タブの作成や削除が行えるコンテキストメニューが表示されます。タブ自体をタップするとそのタブのウィンドウ構成が選択されて、タブバー上のボタンをタップしたときはあたかもボタンが@kbd{mouse-1}でクリックされたかのように振る舞うでしょう。

@findex tab-bar-history-mode
  すべてのタブに使用されたウィンドウ構成の記録と後でリストアするために@code{tab-bar-history-mode}を有効にできます。

@table @kbd
@findex tab-bar-history-back
@item M-x tab-bar-history-back
カレントタブで前に仕様されたウィンドウ構成をリストアします。これによりウィンドウ構成のヒストリーを戻ります。

@findex tab-bar-history-forward
@item M-x tab-bar-history-forward
前のウィンドウ構成のリストアを取り消します。これはウィンドウ構成のヒストリーを前に移動します。
@end table

  ユーザーオプション@code{tab-bar-format}でタブバー上に表示されるアイテムをカスタマイズできます。

@node Dialog Boxes
@section ダイアログボックスの使用
@cindex dialog boxes

@vindex use-dialog-box
  ダイアログボックスとは、yes-or-noの質問(はい／いいえで応える問いかけ)をしたり、他の何か特別な質問を問いかけるための、特別な種類のメニューです。コマンドを呼び出すためにマウスを使い、それがユーザーへの質問を要するような操作の場合、多くのEmacsコマンドはyes-or-noを問うために、ダイアログボックスを使います。

  ダイアログボックスの使用を無効にするには、変数@code{use-dialog-box}を@code{nil}に変更します。この場合、Emacsはエコーエリアとキーボード入力を使ってyes-or-noプロンプトを処理します。この変数はファイル選択ウィンドウの使用も制御します(しかしこれらはすべてのプラットフォームでサポートされているわけではありません)。

@vindex use-file-dialog
@cindex file selection dialog, how to disable
  ファイル選択ウィンドウはファイル名を問うための、特別な種類のダイアログボックスです。変数@code{use-file-dialog}をカスタマイズすれば、他の種類のダイアログボックスを使用して、ファイル選択ウィンドウを使用しないようにできます。変数@code{use-dialog-box}ですべてのダイアログボックスを使用しないようにしている場合、この変数は効果がありません。

@vindex x-gtk-show-hidden-files
@vindex x-gtk-file-dialog-help-text
@cindex hidden files, in GTK+ file chooser
@cindex help text, in GTK+ file chooser
  EmacsがGTK+サポートつきでコンパイルされている場合、EmacsはGTK+のファイル選択ダイアログを使います。Emacsは非表示のファイル(名前がドットで始まるファイル)の表示の有効・無効を切り替えるボタンを、ダイアログボックスに追加します。この切り替えをデフォルトで有効にしたい場合、変数@code{x-gtk-show-hidden-files}を@code{t}に変更します。さらにEmacsは、GTK+ファイル選択ダイアログにヘルプテキストを追加します。このヘルプテキストを無効にするには、変数@code{x-gtk-file-dialog-help-text}を@code{nil}に変更してください。

@node Tooltips
@section ツールチップ
@cindex tooltips

  @dfn{ツールチップ}は、小さい特別なフレームに、マウスのカレント位置に関するテキスト情報を表示します。ツールチップはウィンドウの重要なテキストの上や、ツールバーのボタンやメニューアイテムのような、Emacsフレームの他の部分の上でマウスを停止させたときにアクティブになります。

@findex tooltip-mode
  ツールチップの使用は、コマンド@kbd{M-x
tooltip-mode}で切り替えることができます。Tooltipモードが無効な場合、ヘルプテキストは、かわりにエコーエリアに表示されます。ツールチップの使用を起動時に制御するには、変数@code{tooltip-mode}をカスタマイズしてください。

以下の変数はツールチップ表示にたいするカスタマイズオプションを提供します:

@vtable @code
@item tooltip-delay
この変数は、最初のツールチップを表示する前に、Emacsがwaitする長さを指定します。値は秒です。

@item tooltip-short-delay
この変数は、すでに最初のツールチップが表示されているとき、異なるアイテムにたいする後続のツールチップを表示する前に、Emacsがwaitする長さを指定します。値は秒です。

@item tooltip-hide-delay
マウスが静止しているとき、ツールチップを隠すまでの秒数です。

@item tooltip-x-offset
@itemx tooltip-y-offset
マウスポインター位置から、ツールチップの左上隅までのXオフセットとYオフセットを、ピクセルで指定します。@code{tooltip-frame-parameters}が、@code{left}および@code{top}パラメーターをインクルードするためにカスタマイズされている場合、これらは無視されることに注意してください。オフセットには、ツールチップがマウスのクリックと干渉するような、マウスポインターのホットスポットを覆い隠さない値を指定するべきです。

@item tooltip-frame-parameters
ツールチップの表示のために、フレームパラメーターが使用されます。@ref{Frame Parameters,,, elisp, The Emacs
Lisp Reference Manual}、および@ref{Tooltips,,, elisp, The Emacs Lisp Reference
Manual}を参照してください。
@end vtable

ツールチップの表示にたいする追加のカスタマイズオプションについては、@kbd{M-x customize-group @key{RET} tooltip
@key{RET}}を使用してください。

@vindex use-system-tooltips
  EmacsがGTK+ツールキット、あるいはNextstepやHaikuのウィンドウサポートつきでビルドされていれば、それらのツールキットがもつツールチップのデフォルトの外観を用いて、ツールキットを通じたツールチップ表示ができます@footnote{Nextstepではツールキットが作成するツールチップのフォアグラウンドとバックグラウンドのカラーは、@code{tooltip-frame-parameters}に含まれるフレームパラメーター@code{foreground}と@code{background}をセットしてカスタマイズすることもできます
}。無効にする場合には、変数@code{use-system-tooltips}を@code{nil}に変更してください。無効にした場合や、適切なウィンドウサポートなしでEmacsがビルドされていた場合には、ツールチップテキストの属性のほとんどが@code{tooltip}、およびXリソースによって指定されることになります(@ref{X
Resources}を参照)。

  @dfn{GUDツールチップ}は、プログラムをGUDでデバッグしているときに変数の値を表示する、特別なツールチップです。@ref{Debugger
Operation}を参照してください。

@node Mouse Avoidance
@section マウスの回避
@cindex avoiding mouse in the way of your typing
@cindex mouse avoidance

  グラフィカルな端末では、マウスポインターがEmacsフレームのテキストを隠してしまうことがありえます。この問題を避けるために、Emacsは2つの方法を提供します。

  1番目の方法は、ユーザーが自己挿入文字をタイプしたとき、Emacsがマウスポインターを非表示にして、マウスポインターを動かしたときに、ポインターがEmacsフレームの内側にあるときは、再びポインターを表示する方法です。この機能を無効にするには、変数@code{make-pointer-invisible}を@code{nil}にセットしてください。@ref{Display
Custom}を参照してください。

@vindex mouse-avoidance-mode
  2番目の方法はMouse Avoidance(マウス回避)モードを使って、マウスポインターをポイントから遠ざける方法です。Mouse
Avoidanceモードを使うには、変数@code{mouse-avoidance-mode}をカスタマイズします。この変数にさまざまな値をセットすることにより、マウスを遠ざけるいくつかの方法を選択できます。

@table @code
@item banish
キーが押されたらポインターをフレームの隅に移動します。ポインターをどこに遠ざけるかは、変数@code{mouse-avoidance-banish-position}でカスタマイズできます。
@item exile
カーソルがポインターに近づきすぎたときだけポインターを遠ざけて、カーソルが離れたらポインターを元に戻します。
@item jump
カーソルがポインターに近づきすぎたら、ランダムな方向と距離にポインターを移動します。
@item animate
@code{jump}と同様ですが、移動モーションをアニメ化します。
@item cat-and-mouse
@code{animate}と同じです。
@item proteus
@code{animate}と同様ですが、マウスポインターの外見も変更します。
@end table

@findex mouse-avoidance-mode
コマンド@kbd{M-x mouse-avoidance-mode}を使って、このモードを有効にすることもできます。Mouse
Avoidanceモードがマウスを移動したときは、常にそのフレームを前に表示します。

@node Text Terminals
@section テキスト端末
@cindex text terminal

  テキスト端末では、Emacsは1度に1つのEmacsフレームしか表示できません。それでも複数のEmacsフレームを作成して、それらを切り替えることができます。これらの端末でフレームを切り替えるのは、異なるウィンドウの設定を切り替えるのによく似ています。

  @kbd{C-x 5 2}を使うと新しいフレームを作成してそれに切り替えます。@kbd{C-x 5
o}を使うと既存のフレームを巡回します。@kbd{C-x 5 0}を使うと、カレントフレームを削除します。

  各フレームには区別するための番号があります。端末が1度に1つのフレームしか表示できない場合、選択されたフレームの番号@var{n}が、モードラインの先頭に近い位置に、@samp{F@var{n}}という形式で表示されます。

@findex set-frame-name
@findex select-frame-by-name
  @samp{F@var{n}}は、フレームの実際の初期名称です。フレームにもっと意味のある名前を与えて、その名前でフレームを選択できます。コマンド@kbd{M-x
set-frame-name @key{RET} @var{name}
@key{RET}}を使うと、選択されたフレームに新しい名前を指定し、@kbd{M-x select-frame-by-name @key{RET}
@var{name}
@key{RET}}を使うとその名前に一致するフレームを選択します。指定した名前は、そのフレームが選択されたときに、モードラインに表示されます。

@node Text-Only Mouse
@section テキスト端末でのマウスの使用
@cindex mouse support
@cindex terminal emulators, mouse support

端末ウィンドウでのマウスクリックをサポートするテキスト端末がいくつかあります。

@cindex xterm
  @command{xterm}と互換性のある端末エミュレーターでは、@kbd{M-x
xterm-mouse-mode}を使って、Emacsに簡単なマウスの使用 --- 基本的には修飾なしのシングルクリックだけがサポートされます ---
を制御させることができます。より新しいバージョンの@command{xterm}は、マウストラッキングもサポートします。そのようなクリックにたいする通常の@command{xterm}のマウス機能は、マウスボタンを押すときに@key{SHIFT}キーを押すことにより、利用できます。Xterm
Mouseモードはグローバルマイナーモードです(@ref{Minor
Modes}を参照してください)。コマンドを繰り返すと、このモードを再びオフにします。

@findex gpm-mouse-mode
  GNU/Linuxのコンソールでは、@kbd{M-x
gpm-mouse-mode}を使ってマウスサポートを有効にできます。これが機能するためにはgpmサーバーがインストールされていて、システムで実行されていなければなりません。このモードが有効な場合、EmacsとGPMを使用する他のプログラムとの間で、マウスによるテキスト転送ができないことに注意してください。これはGPMとLinux
kernelによる制限です。

@iftex
MS-DOSでのマウスサポートに関する情報は、@ref{MS-DOS Mouse,,,emacs-xtra,Specialized Emacs
Features}を参照してください
@end iftex
@ifnottex
MS-DOSでのマウスサポートに関する情報は、@ref{MS-DOS Mouse}を参照してください
@end ifnottex
。
