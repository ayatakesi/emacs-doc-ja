# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2024-04-18 06:15+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: chapter
#: original_texis/abbrevs.texi:5 original_texis/abbrevs.texi:6
#, no-wrap
msgid "Abbrevs"
msgstr ""

#. type: cindex
#: original_texis/abbrevs.texi:7
#, no-wrap
msgid "abbrevs"
msgstr ""

#. type: cindex
#: original_texis/abbrevs.texi:8
#, no-wrap
msgid "expansion (of abbrevs)"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:16
msgid ""
"A defined @dfn{abbrev} is a word which @dfn{expands}, if you insert it, into "
"some different text.  Abbrevs are defined by the user to expand in specific "
"ways.  For example, you might define @samp{foo} as an abbrev expanding to "
"@samp{find outer otter}.  Then you could insert @samp{find outer otter } "
"into the buffer by typing @kbd{f o o @key{SPC}}."
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:22
msgid ""
"A second kind of abbreviation facility is called @dfn{dynamic abbrev "
"expansion}.  You use dynamic abbrev expansion with an explicit command to "
"expand the letters in the buffer before point by looking for other words in "
"the buffer that start with those letters.  @xref{Dynamic Abbrevs}."
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:26
msgid ""
"A third kind, @dfn{hippie expansion}, generalizes abbreviation expansion.  "
"@xref{Hippie Expand, , Hippie Expansion, autotype, Features for Automatic "
"Typing}."
msgstr ""

#. type: section
#: original_texis/abbrevs.texi:36 original_texis/abbrevs.texi:38
#: original_texis/abbrevs.texi:39
#, no-wrap
msgid "Abbrev Concepts"
msgstr ""

#. type: menuentry
#: original_texis/abbrevs.texi:36
msgid "Fundamentals of defined abbrevs."
msgstr ""

#. type: section
#: original_texis/abbrevs.texi:36 original_texis/abbrevs.texi:69
#: original_texis/abbrevs.texi:70
#, no-wrap
msgid "Defining Abbrevs"
msgstr ""

#. type: menuentry
#: original_texis/abbrevs.texi:36
msgid "Defining an abbrev, so it will expand when typed."
msgstr ""

#. type: node
#: original_texis/abbrevs.texi:36 original_texis/abbrevs.texi:148
#, no-wrap
msgid "Expanding Abbrevs"
msgstr ""

#. type: menuentry
#: original_texis/abbrevs.texi:36
msgid "Controlling expansion: prefixes, canceling expansion."
msgstr ""

#. type: section
#: original_texis/abbrevs.texi:36 original_texis/abbrevs.texi:229
#: original_texis/abbrevs.texi:230
#, no-wrap
msgid "Abbrevs Suggestions"
msgstr ""

#. type: menuentry
#: original_texis/abbrevs.texi:36
msgid "Get automatic suggestions about defined abbrevs."
msgstr ""

#. type: node
#: original_texis/abbrevs.texi:36 original_texis/abbrevs.texi:261
#, no-wrap
msgid "Editing Abbrevs"
msgstr ""

#. type: menuentry
#: original_texis/abbrevs.texi:36
msgid "Viewing or editing the entire list of defined abbrevs."
msgstr ""

#. type: section
#: original_texis/abbrevs.texi:36 original_texis/abbrevs.texi:324
#: original_texis/abbrevs.texi:325
#, no-wrap
msgid "Saving Abbrevs"
msgstr ""

#. type: menuentry
#: original_texis/abbrevs.texi:36
msgid "Saving the entire list of abbrevs for another session."
msgstr ""

#. type: node
#: original_texis/abbrevs.texi:36 original_texis/abbrevs.texi:384
#, no-wrap
msgid "Dynamic Abbrevs"
msgstr ""

#. type: menuentry
#: original_texis/abbrevs.texi:36
msgid "Abbreviations for words already in the buffer."
msgstr ""

#. type: node
#: original_texis/abbrevs.texi:36 original_texis/abbrevs.texi:464
#, no-wrap
msgid "Dabbrev Customization"
msgstr ""

#. type: menuentry
#: original_texis/abbrevs.texi:36
msgid "What is a word, for dynamic abbrevs.  Case handling."
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:47
msgid ""
"An @dfn{abbrev} is a word that has been defined to @dfn{expand} into a "
"specified @dfn{expansion}.  When you insert a word-separator character "
"following the abbrev, that expands the abbrev---replacing the abbrev with "
"its expansion.  For example, if @samp{foo} is defined as an abbrev expanding "
"to @samp{find outer otter}, then typing @kbd{f o o .} will insert @samp{find "
"outer otter.}."
msgstr ""

#. type: findex
#: original_texis/abbrevs.texi:48
#, no-wrap
msgid "abbrev-mode"
msgstr ""

#. type: cindex
#: original_texis/abbrevs.texi:49
#, no-wrap
msgid "Abbrev mode"
msgstr ""

#. type: cindex
#: original_texis/abbrevs.texi:50
#, no-wrap
msgid "mode, Abbrev"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:57
msgid ""
"Abbrevs expand only when Abbrev mode, a buffer-local minor mode, is "
"enabled.  Disabling Abbrev mode does not cause abbrev definitions to be "
"forgotten, but they do not expand until Abbrev mode is enabled again.  The "
"command @kbd{M-x abbrev-mode} toggles Abbrev mode; with a numeric argument, "
"it turns Abbrev mode on if the argument is positive, off otherwise.  "
"@xref{Minor Modes}."
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:63
msgid ""
"Abbrevs can have @dfn{mode-specific} definitions, active only in one major "
"mode.  Abbrevs can also have @dfn{global} definitions that are active in all "
"major modes.  The same abbrev can have a global definition and various "
"mode-specific definitions for different major modes.  A mode-specific "
"definition for the current major mode overrides a global definition."
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:68
msgid ""
"You can define abbrevs interactively during the editing session, "
"irrespective of whether Abbrev mode is enabled.  You can also save lists of "
"abbrev definitions in files, which you can then reload for use in later "
"sessions."
msgstr ""

#. type: kindex
#: original_texis/abbrevs.texi:73 original_texis/abbrevs.texi:98
#, no-wrap
msgid "C-x a g"
msgstr ""

#. type: table
#: original_texis/abbrevs.texi:76
msgid ""
"Define an abbrev, using one or more words before point as its expansion "
"(@code{add-global-abbrev})."
msgstr ""

#. type: kindex
#: original_texis/abbrevs.texi:77 original_texis/abbrevs.texi:114
#, no-wrap
msgid "C-x a l"
msgstr ""

#. type: table
#: original_texis/abbrevs.texi:80
msgid ""
"Similar, but define an abbrev specific to the current major mode "
"(@code{add-mode-abbrev})."
msgstr ""

#. type: kindex
#: original_texis/abbrevs.texi:81 original_texis/abbrevs.texi:120
#, no-wrap
msgid "C-x a i g"
msgstr ""

#. type: table
#: original_texis/abbrevs.texi:83
msgid "Define a word in the buffer as an abbrev (@code{inverse-add-global-abbrev})."
msgstr ""

#. type: kindex
#: original_texis/abbrevs.texi:84 original_texis/abbrevs.texi:122
#, no-wrap
msgid "C-x a i l"
msgstr ""

#. type: table
#: original_texis/abbrevs.texi:87
msgid ""
"Define a word in the buffer as a mode-specific abbrev "
"(@code{inverse-add-mode-abbrev})."
msgstr ""

#. type: item
#: original_texis/abbrevs.texi:88
#, no-wrap
msgid ""
"M-x define-global-abbrev @key{RET} @var{abbrev} @key{RET} @var{exp} "
"@key{RET}"
msgstr ""

#. type: table
#: original_texis/abbrevs.texi:90
msgid "Define @var{abbrev} as an abbrev expanding into @var{exp}."
msgstr ""

#. type: item
#: original_texis/abbrevs.texi:91
#, no-wrap
msgid "M-x define-mode-abbrev @key{RET} @var{abbrev} @key{RET} @var{exp} @key{RET}"
msgstr ""

#. type: table
#: original_texis/abbrevs.texi:93
msgid "Define @var{abbrev} as a mode-specific abbrev expanding into @var{exp}."
msgstr ""

#. type: item
#: original_texis/abbrevs.texi:94
#, no-wrap
msgid "M-x kill-all-abbrevs"
msgstr ""

#. type: table
#: original_texis/abbrevs.texi:96
msgid "Discard all abbrev definitions, leaving a blank slate."
msgstr ""

#. type: findex
#: original_texis/abbrevs.texi:99
#, no-wrap
msgid "add-global-abbrev"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:108
msgid ""
"The usual way to define an abbrev is to enter the text you want the abbrev "
"to expand to, position point after it, and type @kbd{C-x a g} "
"(@code{add-global-abbrev}).  This reads the abbrev itself using the "
"minibuffer, and then defines it as an abbrev for one or more words before "
"point.  Use a numeric argument to say how many words before point should be "
"taken as the expansion.  For example, to define the abbrev @samp{foo} as "
"mentioned above, insert the text @samp{find outer otter} and then type "
"@kbd{C-u 3 C-x a g f o o @key{RET}}."
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:113
msgid ""
"If you're using @code{transient-mark-mode} (which is the default), the "
"active region will be used as the expansion of the abbrev being defined.  If "
"not, an argument of zero to @kbd{C-x a g} means to use the contents of the "
"region."
msgstr ""

#. type: findex
#: original_texis/abbrevs.texi:115
#, no-wrap
msgid "add-mode-abbrev"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:119
msgid ""
"The command @kbd{C-x a l} (@code{add-mode-abbrev}) is similar, but defines a "
"mode-specific abbrev for the current major mode.  The arguments work the "
"same as for @kbd{C-x a g}."
msgstr ""

#. type: findex
#: original_texis/abbrevs.texi:121
#, no-wrap
msgid "inverse-add-global-abbrev"
msgstr ""

#. type: findex
#: original_texis/abbrevs.texi:123
#, no-wrap
msgid "inverse-add-mode-abbrev"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:129
msgid ""
"@kbd{C-x a i g} (@code{inverse-add-global-abbrev}) and @kbd{C-x a i l} "
"(@code{inverse-add-mode-abbrev}) perform the opposite task: if the abbrev "
"text is already in the buffer, you use these commands to define an abbrev by "
"specifying the expansion in the minibuffer.  These commands will expand the "
"abbrev text used for the definition."
msgstr ""

#. type: findex
#: original_texis/abbrevs.texi:130
#, no-wrap
msgid "define-mode-abbrev"
msgstr ""

#. type: findex
#: original_texis/abbrevs.texi:131
#, no-wrap
msgid "define-global-abbrev"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:136
msgid ""
"You can define an abbrev without inserting either the abbrev or its "
"expansion in the buffer using the command @code{define-global-abbrev}.  It "
"reads two arguments---the abbrev, and its expansion.  The command "
"@code{define-mode-abbrev} does likewise for a mode-specific abbrev."
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:140
msgid ""
"To change the definition of an abbrev, just make a new definition.  When an "
"abbrev has a prior definition, the abbrev definition commands ask for "
"confirmation before replacing it."
msgstr ""

#. type: findex
#: original_texis/abbrevs.texi:141
#, no-wrap
msgid "kill-all-abbrevs"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:147
msgid ""
"To remove an abbrev definition, give a negative argument to the abbrev "
"definition command: @kbd{C-u - C-x a g} or @kbd{C-u - C-x a l}.  The former "
"removes a global definition, while the latter removes a mode-specific "
"definition.  @kbd{M-x kill-all-abbrevs} removes all abbrev definitions, both "
"global and local."
msgstr ""

#. type: section
#: original_texis/abbrevs.texi:149
#, no-wrap
msgid "Controlling Abbrev Expansion"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:158
msgid ""
"When Abbrev mode is enabled, an abbrev expands whenever it is present in the "
"buffer just before point and you type a self-inserting whitespace or "
"punctuation character (@key{SPC}, comma, etc.).  More precisely, any "
"character that is not a word constituent expands an abbrev, and any "
"word-constituent character can be part of an abbrev.  The most common way to "
"use an abbrev is to insert it and then insert a punctuation or whitespace "
"character to expand it."
msgstr ""

#. type: vindex
#: original_texis/abbrevs.texi:159
#, no-wrap
msgid "abbrev-all-caps"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:165
msgid ""
"Abbrev expansion preserves case: @samp{foo} expands to @samp{find outer "
"otter}, and @samp{Foo} to @samp{Find outer otter}.  @samp{FOO} expands to "
"@samp{Find Outer Otter} by default, but if you change the variable "
"@code{abbrev-all-caps} to a non-@code{nil} value, it expands to @samp{FIND "
"OUTER OTTER}."
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:167
msgid "These commands are used to control abbrev expansion:"
msgstr ""

#. type: kindex
#: original_texis/abbrevs.texi:169 original_texis/abbrevs.texi:186
#, no-wrap
msgid "M-'"
msgstr ""

#. type: table
#: original_texis/abbrevs.texi:172
msgid ""
"Separate a prefix from a following abbrev to be expanded "
"(@code{abbrev-prefix-mark})."
msgstr ""

#. type: item
#: original_texis/abbrevs.texi:173
#, no-wrap
msgid "C-x a e"
msgstr ""

#. type: findex
#: original_texis/abbrevs.texi:174
#, no-wrap
msgid "expand-abbrev"
msgstr ""

#. type: table
#: original_texis/abbrevs.texi:177
msgid ""
"Expand the abbrev before point (@code{expand-abbrev}).  This is effective "
"even when Abbrev mode is not enabled."
msgstr ""

#. type: item
#: original_texis/abbrevs.texi:178
#, no-wrap
msgid "M-x unexpand-abbrev"
msgstr ""

#. type: findex
#: original_texis/abbrevs.texi:179
#, no-wrap
msgid "unexpand-abbrev"
msgstr ""

#. type: table
#: original_texis/abbrevs.texi:181
msgid "Undo the expansion of the last expanded abbrev."
msgstr ""

#. type: item
#: original_texis/abbrevs.texi:182
#, no-wrap
msgid "M-x expand-region-abbrevs"
msgstr ""

#. type: table
#: original_texis/abbrevs.texi:184
msgid "Expand some or all abbrevs found in the region."
msgstr ""

#. type: findex
#: original_texis/abbrevs.texi:187
#, no-wrap
msgid "abbrev-prefix-mark"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:200
msgid ""
"You may wish to expand an abbrev and attach a prefix to the expansion; for "
"example, if @samp{cnst} expands into @samp{construction}, you might want to "
"use it to enter @samp{reconstruction}.  It does not work to type "
"@kbd{recnst}, because that is not necessarily a defined abbrev.  What you "
"can do is use the command @kbd{M-'} (@code{abbrev-prefix-mark}) in between "
"the prefix @samp{re} and the abbrev @samp{cnst}.  First, insert @samp{re}.  "
"Then type @kbd{M-'}; this inserts a hyphen in the buffer to indicate that it "
"has done its work.  Then insert the abbrev @samp{cnst}; the buffer now "
"contains @samp{re-cnst}.  Now insert a non-word character to expand the "
"abbrev @samp{cnst} into @samp{construction}.  This expansion step also "
"deletes the hyphen that indicated @kbd{M-'} had been used.  The result is "
"the desired @samp{reconstruction}."
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:205
msgid ""
"If you actually want the text of the abbrev in the buffer, rather than its "
"expansion, you can accomplish this by inserting the following punctuation "
"with @kbd{C-q}.  Thus, @kbd{foo C-q ,} leaves @samp{foo,} in the buffer, not "
"expanding it."
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:214
msgid ""
"If you expand an abbrev by mistake, you can undo the expansion by typing "
"@kbd{C-/} (@code{undo}).  @xref{Undo}.  This undoes the insertion of the "
"abbrev expansion and brings back the abbrev text.  If the result you want is "
"the terminating non-word character plus the unexpanded abbrev, you must "
"reinsert the terminating character, quoting it with @kbd{C-q}.  You can also "
"use the command @kbd{M-x unexpand-abbrev} to cancel the last expansion "
"without deleting the terminating character."
msgstr ""

#. type: findex
#: original_texis/abbrevs.texi:215
#, no-wrap
msgid "expand-region-abbrevs"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:222
msgid ""
"@kbd{M-x expand-region-abbrevs} searches through the region for defined "
"abbrevs, and for each one found offers to replace it with its expansion.  "
"This command is useful if you have typed in text using abbrevs but forgot to "
"turn on Abbrev mode first.  It may also be useful together with a special "
"set of abbrev definitions for making several global replacements at once.  "
"This command is effective even if Abbrev mode is not enabled."
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:228
msgid ""
"The function @code{expand-abbrev} performs the expansion by calling the "
"function that @code{abbrev-expand-function} specifies.  By changing this "
"function you can make arbitrary changes to the abbrev expansion.  "
"@xref{Abbrev Expansion,,, elisp, The Emacs Lisp Reference Manual}."
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:237
msgid ""
"You can get abbrev suggestions when you manually type text for which there "
"is currently an active defined abbrev.  For example, if there is an abbrev "
"@samp{foo} with the expansion @samp{find outer otter}, and you manually type "
"@samp{find outer otter}, Emacs can notice this and show a hint in the echo "
"area when you have stopped typing."
msgstr ""

#. type: vindex
#: original_texis/abbrevs.texi:238
#, no-wrap
msgid "abbrev-suggest"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:241
msgid ""
"To enable the abbrev suggestion feature, customize the option "
"@code{abbrev-suggest} to a non-@code{nil} value."
msgstr ""

#. type: vindex
#: original_texis/abbrevs.texi:242
#, no-wrap
msgid "abbrev-suggest-hint-threshold"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:254
msgid ""
"The variable @code{abbrev-suggest-hint-threshold} controls when to suggest "
"an abbrev to the user.  This variable defines the minimum savings (in terms "
"of the number of characters the user will not have to type) required for "
"Emacs to suggest using an abbrev.  For example, if the user types @samp{foo "
"bar} (seven characters) and there is an abbrev @samp{fubar} defined (five "
"characters), the user will not get any suggestion unless the threshold is "
"set to the number 2 or lower.  With the default value 3, the user would not "
"get any suggestion in this example, because the savings in using the abbrev "
"are below the threshold.  If you always want to get abbrev suggestions, set "
"this variable's value to zero."
msgstr ""

#. type: findex
#: original_texis/abbrevs.texi:255
#, no-wrap
msgid "abbrev-suggest-show-report"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:260
msgid ""
"The command @code{abbrev-suggest-show-report} displays a buffer with all the "
"abbrev suggestions shown during the current editing session.  This can be "
"useful if you get several abbrev suggestions and don't remember them all."
msgstr ""

#. type: section
#: original_texis/abbrevs.texi:262
#, no-wrap
msgid "Examining and Editing Abbrevs"
msgstr ""

#. type: item
#: original_texis/abbrevs.texi:265
#, no-wrap
msgid "M-x list-abbrevs"
msgstr ""

#. type: table
#: original_texis/abbrevs.texi:268
msgid ""
"Display a list of all abbrev definitions.  With a numeric argument, list "
"only local abbrevs."
msgstr ""

#. type: item
#: original_texis/abbrevs.texi:269
#, no-wrap
msgid "M-x edit-abbrevs"
msgstr ""

#. type: table
#: original_texis/abbrevs.texi:271
msgid "Edit a list of abbrevs; you can add, alter or remove definitions."
msgstr ""

#. type: findex
#: original_texis/abbrevs.texi:273
#, no-wrap
msgid "list-abbrevs"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:275
msgid "The output from @kbd{M-x list-abbrevs} looks like this:"
msgstr ""

#. type: example
#: original_texis/abbrevs.texi:284
#, no-wrap
msgid ""
"@var{various other tables@dots{}}\n"
"(python-mode-skeleton-abbrev-table)\n"
"\"class\" (sys)\t    0 \"\" python-skeleton-class\n"
"(lisp-mode-abbrev-table)\n"
"\"ks\"          0    \"keymap-set\"\n"
"(global-abbrev-table)\n"
"\"dfn\"         0    \"definition\"\n"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:289
msgid ""
"(Some blank lines of no semantic significance, and some other abbrev tables, "
"have been omitted.)"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:294
msgid ""
"A line containing a name in parentheses is the header for abbrevs in a "
"particular abbrev table; @code{global-abbrev-table} contains all the global "
"abbrevs, and the other abbrev tables that are named after major modes "
"contain the mode-specific abbrevs."
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:301
msgid ""
"Within each abbrev table, each nonblank line defines one abbrev.  The word "
"at the beginning of the line is the abbrev.  The number that follows is the "
"number of times the abbrev has been expanded.  Emacs keeps track of this to "
"help you see which abbrevs you actually use, so that you can eliminate those "
"that you don't use often.  The string at the end of the line is the "
"expansion."
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:310
msgid ""
"Some abbrevs are marked with @samp{(sys)}.  These @dfn{system abbrevs} "
"(@pxref{Abbrevs,,, elisp, The Emacs Lisp Reference Manual})  are pre-defined "
"by various modes, and are not saved to your abbrev file.  To disable a "
"system abbrev, define an abbrev of the same name that expands to itself, and "
"save it to your abbrev file.  The system abbrevs have an associated hook "
"function, which is called to perform the abbrev expansion; the name of that "
"function follows the abbrev expansion in the buffer shown by "
"@code{list-abbrevs}."
msgstr ""

#. type: findex
#: original_texis/abbrevs.texi:311
#, no-wrap
msgid "edit-abbrevs"
msgstr ""

#. type: kindex
#: original_texis/abbrevs.texi:312
#, no-wrap
msgid "C-c C-c @r{(Edit Abbrevs)}"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:319
msgid ""
"@kbd{M-x edit-abbrevs} allows you to add, change or kill abbrev definitions "
"by editing a list of them in an Emacs buffer.  The list has the same format "
"described above.  The buffer of abbrevs is called @file{*Abbrevs*}, and is "
"in Edit-Abbrevs mode.  Type @kbd{C-c C-c} in this buffer to install the "
"abbrev definitions as specified in the buffer---and delete any abbrev "
"definitions not listed."
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:323
msgid ""
"The command @code{edit-abbrevs} is actually the same as @code{list-abbrevs} "
"except that it selects the buffer @file{*Abbrevs*} whereas "
"@code{list-abbrevs} merely displays it in another window."
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:329
msgid ""
"These commands allow you to keep abbrev definitions between editing "
"sessions."
msgstr ""

#. type: item
#: original_texis/abbrevs.texi:331
#, no-wrap
msgid "M-x write-abbrev-file @key{RET} @var{file} @key{RET}"
msgstr ""

#. type: table
#: original_texis/abbrevs.texi:333
msgid "Write a file @var{file} describing all defined abbrevs."
msgstr ""

#. type: item
#: original_texis/abbrevs.texi:334
#, no-wrap
msgid "M-x read-abbrev-file @key{RET} @var{file} @key{RET}"
msgstr ""

#. type: table
#: original_texis/abbrevs.texi:336
msgid "Read the file @var{file} and define abbrevs as specified therein."
msgstr ""

#. type: item
#: original_texis/abbrevs.texi:337
#, no-wrap
msgid "M-x define-abbrevs"
msgstr ""

#. type: table
#: original_texis/abbrevs.texi:339
msgid "Define abbrevs from definitions in current buffer."
msgstr ""

#. type: item
#: original_texis/abbrevs.texi:340
#, no-wrap
msgid "M-x insert-abbrevs"
msgstr ""

#. type: table
#: original_texis/abbrevs.texi:342
msgid "Insert all abbrevs and their expansions into current buffer."
msgstr ""

#. type: findex
#: original_texis/abbrevs.texi:344
#, no-wrap
msgid "write-abbrev-file"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:350
msgid ""
"@kbd{M-x write-abbrev-file} reads a file name using the minibuffer and then "
"writes a description of all current abbrev definitions into that file.  This "
"is used to save abbrev definitions for use in a later session.  The text "
"stored in the file is a series of Lisp expressions that, when executed, "
"define the same abbrevs that you currently have."
msgstr ""

#. type: findex
#: original_texis/abbrevs.texi:351
#, no-wrap
msgid "read-abbrev-file"
msgstr ""

#. type: findex
#: original_texis/abbrevs.texi:352
#, no-wrap
msgid "quietly-read-abbrev-file"
msgstr ""

#. type: vindex
#: original_texis/abbrevs.texi:353
#, no-wrap
msgid "abbrev-file-name"
msgstr ""

#. type: cindex
#: original_texis/abbrevs.texi:354
#, no-wrap
msgid "abbrev file"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:367
msgid ""
"@kbd{M-x read-abbrev-file} reads a file name using the minibuffer and then "
"reads the file, defining abbrevs according to the contents of the file.  The "
"function @code{quietly-read-abbrev-file} is similar except that it does not "
"display a message in the echo area; you cannot invoke it interactively, and "
"it is used primarily in your init file (@pxref{Init File}).  If either of "
"these functions is called with @code{nil} as the argument, it uses the file "
"given by the variable @code{abbrev-file-name}, which is "
"@file{~/.emacs.d/abbrev_defs} by default.  This is your standard abbrev "
"definition file, and Emacs loads abbrevs from it automatically when it "
"starts up.  (As an exception, Emacs does not load the abbrev file when it is "
"started in batch mode.  @xref{Initial Options}, for a description of batch "
"mode.)"
msgstr ""

#. type: vindex
#: original_texis/abbrevs.texi:368
#, no-wrap
msgid "save-abbrevs"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:375
msgid ""
"Emacs will offer to save abbrevs automatically if you have changed any of "
"them, whenever it offers to save all files (for @kbd{C-x s} or @kbd{C-x "
"C-c}).  It saves them in the file specified by @code{abbrev-file-name}.  "
"This feature can be inhibited by setting the variable @code{save-abbrevs} to "
"@code{nil}; setting it to @code{silently} will save the abbrevs "
"automatically without asking."
msgstr ""

#. type: findex
#: original_texis/abbrevs.texi:376
#, no-wrap
msgid "insert-abbrevs"
msgstr ""

#. type: findex
#: original_texis/abbrevs.texi:377
#, no-wrap
msgid "define-abbrevs"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:383
msgid ""
"The commands @kbd{M-x insert-abbrevs} and @kbd{M-x define-abbrevs} are "
"similar to the previous commands but work on text in an Emacs buffer.  "
"@kbd{M-x insert-abbrevs} inserts text into the current buffer after point, "
"describing all current abbrev definitions; @kbd{M-x define-abbrevs} parses "
"the entire current buffer and defines abbrevs accordingly."
msgstr ""

#. type: section
#: original_texis/abbrevs.texi:385
#, no-wrap
msgid "Dynamic Abbrev Expansion"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:392
msgid ""
"The abbrev facility described above operates automatically as you insert "
"text, but all abbrevs must be defined explicitly.  By contrast, @dfn{dynamic "
"abbrevs} allow the meanings of abbreviations to be determined automatically "
"from the contents of the buffer, but dynamic abbrev expansion happens only "
"when you request it explicitly."
msgstr ""

#. type: item
#: original_texis/abbrevs.texi:393 original_texis/abbrevs.texi:398
#, no-wrap
msgid "M-/"
msgstr ""

#. type: item
#: original_texis/abbrevs.texi:394 original_texis/abbrevs.texi:403
#, no-wrap
msgid "C-M-/"
msgstr ""

#. type: findex
#: original_texis/abbrevs.texi:395
#, no-wrap
msgid "dabbrev-expand"
msgstr ""

#. type: findex
#: original_texis/abbrevs.texi:396
#, no-wrap
msgid "dabbrev-completion"
msgstr ""

#. type: table
#: original_texis/abbrevs.texi:402
msgid ""
"Expand the word in the buffer before point as a @dfn{dynamic abbrev}, by "
"searching for words starting with that abbreviation (@code{dabbrev-expand})."
msgstr ""

#. type: table
#: original_texis/abbrevs.texi:406
msgid ""
"Complete the word before point as a dynamic abbrev "
"(@code{dabbrev-completion})."
msgstr ""

#. type: vindex
#: original_texis/abbrevs.texi:408
#, no-wrap
msgid "dabbrev-limit"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:418
msgid ""
"For example, if the buffer contains @samp{does this follow } and you type "
"@kbd{f o M-/}, the effect is to insert @samp{follow} because that is the "
"last word in the buffer that starts with @samp{fo}.  A numeric argument to "
"@kbd{M-/} says to take the second, third, etc.@: distinct expansion found "
"looking backward from point.  Repeating @kbd{M-/} searches for an "
"alternative expansion by looking farther back.  After scanning all the text "
"before point, it searches the text after point.  The variable "
"@code{dabbrev-limit}, if non-@code{nil}, specifies how far away in the "
"buffer to search for an expansion."
msgstr ""

#. type: vindex
#: original_texis/abbrevs.texi:419
#, no-wrap
msgid "dabbrev-check-all-buffers"
msgstr ""

#. type: vindex
#: original_texis/abbrevs.texi:420
#, no-wrap
msgid "dabbrev-check-other-buffers"
msgstr ""

#. type: vindex
#: original_texis/abbrevs.texi:421
#, no-wrap
msgid "dabbrev-ignored-buffer-modes"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:428
msgid ""
"After scanning the current buffer, @kbd{M-/} normally searches other "
"buffers.  The variables @code{dabbrev-check-all-buffers} and "
"@code{dabbrev-check-other-buffers} can be used to determine which other "
"buffers, if any, are searched.  Buffers that have major modes derived from "
"any of the modes in @code{dabbrev-ignored-buffer-modes} are ignored."
msgstr ""

#. type: vindex
#: original_texis/abbrevs.texi:429
#, no-wrap
msgid "dabbrev-ignored-buffer-names"
msgstr ""

#. type: vindex
#: original_texis/abbrevs.texi:430
#, no-wrap
msgid "dabbrev-ignored-buffer-regexps"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:437
msgid ""
"For finer control over which buffers to scan, customize the variables "
"@code{dabbrev-ignored-buffer-names} and "
"@code{dabbrev-ignored-buffer-regexps}.  The value of the former is a list of "
"buffer names to skip.  The value of the latter is a list of regular "
"expressions; if a buffer's name matches any of these regular expressions, "
"dynamic abbrev expansion skips that buffer."
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:444
msgid ""
"A negative argument to @kbd{M-/}, as in @kbd{C-u - M-/}, says to search "
"first for expansions after point, then other buffers, and consider "
"expansions before point only as a last resort.  If you repeat the @kbd{M-/} "
"to look for another expansion, do not specify an argument.  Repeating "
"@kbd{M-/} cycles through all the expansions after point and then the "
"expansions before point."
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:449
msgid ""
"After you have expanded a dynamic abbrev, you can copy additional words that "
"follow the expansion in its original context.  Simply type @kbd{@key{SPC} "
"M-/} for each additional word you want to copy.  The spacing and punctuation "
"between words is copied along with the words."
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:452
msgid ""
"You can control the way @kbd{M-/} determines the word to expand and how to "
"expand it, see @ref{Dabbrev Customization}."
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:459
msgid ""
"The command @kbd{C-M-/} (@code{dabbrev-completion}) performs completion of a "
"dynamic abbrev.  Instead of trying the possible expansions one by one, it "
"finds all of them, then inserts the text that they have in common.  If they "
"have nothing in common, @kbd{C-M-/} displays a list of completions, from "
"which you can select a choice in the usual manner.  @xref{Completion}."
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:463
msgid ""
"Dynamic abbrev expansion is completely independent of Abbrev mode; the "
"expansion of a word with @kbd{M-/} is completely independent of whether it "
"has a definition as an ordinary abbrev."
msgstr ""

#. type: section
#: original_texis/abbrevs.texi:465
#, no-wrap
msgid "Customizing Dynamic Abbreviation"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:470
msgid ""
"Normally, dynamic abbrev expansion ignores case when searching for "
"expansions.  That is, the expansion need not agree in case with the word you "
"are expanding."
msgstr ""

#. type: vindex
#: original_texis/abbrevs.texi:471
#, no-wrap
msgid "dabbrev-case-fold-search"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:478
msgid ""
"This feature is controlled by the variable @code{dabbrev-case-fold-search}.  "
"If it is @code{t}, case is ignored in this search; if it is @code{nil}, the "
"word and the expansion must match in case.  If the value is "
"@code{case-fold-search} (the default), then the variable "
"@code{case-fold-search} controls whether to ignore case while searching for "
"expansions (@pxref{Lax Search})."
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:482
msgid ""
"Normally, dynamic abbrev expansion preserves the case pattern @emph{of the "
"dynamic abbrev you are expanding}, by converting the expansion to that case "
"pattern."
msgstr ""

#. type: vindex
#: original_texis/abbrevs.texi:483
#, no-wrap
msgid "dabbrev-case-replace"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:491
msgid ""
"The variable @code{dabbrev-case-replace} controls whether to preserve the "
"case pattern of the dynamic abbrev.  If it is @code{t}, the dynamic abbrev's "
"case pattern is preserved in most cases; if it is @code{nil}, the expansion "
"is always copied verbatim.  If the value is @code{case-replace} (the "
"default), then the variable @code{case-replace} controls whether to copy the "
"expansion verbatim (@pxref{Replacement and Lax Matches})."
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:498
msgid ""
"However, if the expansion contains a complex mixed case pattern, and the "
"dynamic abbrev matches this pattern as far as it goes, then the expansion is "
"always copied verbatim, regardless of those variables.  Thus, for example, "
"if the buffer contains @code{variableWithSillyCasePattern}, and you type "
"@kbd{v a M-/}, it copies the expansion verbatim including its case pattern."
msgstr ""

#. type: vindex
#: original_texis/abbrevs.texi:499
#, no-wrap
msgid "dabbrev-abbrev-char-regexp"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:512
msgid ""
"The variable @code{dabbrev-abbrev-char-regexp}, if non-@code{nil}, controls "
"which characters are considered part of a word, for dynamic expansion "
"purposes.  The regular expression must match just one character, never two "
"or more.  The same regular expression also determines which characters are "
"part of an expansion.  The (default)  value @code{nil} has a special "
"meaning: dynamic abbrevs (i.e.@: the word at point) are made of word "
"characters, but their expansions are looked for as sequences of word and "
"symbol characters.  This is generally appropriate for expanding symbols in a "
"program source and also for human-readable text in many languages, but may "
"not be what you want in a text buffer that includes unusual punctuation "
"characters; in that case, the value @code{\"\\\\sw\"} might produce better "
"results."
msgstr ""

#. type: vindex
#: original_texis/abbrevs.texi:513
#, no-wrap
msgid "dabbrev-abbrev-skip-leading-regexp"
msgstr ""

#. type: Plain text
#: original_texis/abbrevs.texi:520
msgid ""
"In shell scripts and makefiles, a variable name is sometimes prefixed with "
"@samp{$} and sometimes not.  Major modes for this kind of text can customize "
"dynamic abbrev expansion to handle optional prefixes by setting the variable "
"@code{dabbrev-abbrev-skip-leading-regexp}.  Its value should be a regular "
"expression that matches the optional prefix that dynamic abbrev expression "
"should ignore.  The default is @code{nil}, which means no characters should "
"be skipped."
msgstr ""
