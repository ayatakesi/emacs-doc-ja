# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-02 00:54+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: cindex
#: original_texis/android.texi:4 original_texis/android.texi:6
#, no-wrap
msgid "Android"
msgstr ""

#. type: appendix
#: original_texis/android.texi:5
#, no-wrap
msgid "Emacs and Android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:11
msgid "Android is a mobile operating system developed by the Open Handset Alliance.  This section describes the peculiarities of using Emacs on an Android device running Android 2.2 or later."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:15
msgid "Android devices commonly rely on user input through a touch screen or digitizer device and on-screen keyboard.  For more information about using such devices with Emacs, @pxref{Other Input Devices}."
msgstr ""

#. type: node
#: original_texis/android.texi:26 original_texis/android.texi:28
#, no-wrap
msgid "What is Android?"
msgstr ""

#. type: menuentry
#: original_texis/android.texi:26
msgid "Preamble."
msgstr ""

#. type: node
#: original_texis/android.texi:26 original_texis/android.texi:61
#, no-wrap
msgid "Android Startup"
msgstr ""

#. type: menuentry
#: original_texis/android.texi:26
msgid "Starting up Emacs on Android."
msgstr ""

#. type: node
#: original_texis/android.texi:26 original_texis/android.texi:157
#, no-wrap
msgid "Android File System"
msgstr ""

#. type: menuentry
#: original_texis/android.texi:26
msgid "The Android file system."
msgstr ""

#. type: node
#: original_texis/android.texi:26 original_texis/android.texi:283
#, no-wrap
msgid "Android Document Providers"
msgstr ""

#. type: menuentry
#: original_texis/android.texi:26
msgid "Accessing files from other programs."
msgstr ""

#. type: node
#: original_texis/android.texi:26 original_texis/android.texi:320
#, no-wrap
msgid "Android Environment"
msgstr ""

#. type: menuentry
#: original_texis/android.texi:26
msgid "Running Emacs under Android."
msgstr ""

#. type: node
#: original_texis/android.texi:26 original_texis/android.texi:528
#, no-wrap
msgid "Android Windowing"
msgstr ""

#. type: menuentry
#: original_texis/android.texi:26
msgid "The Android window system."
msgstr ""

#. type: node
#: original_texis/android.texi:26 original_texis/android.texi:679
#, no-wrap
msgid "Android Fonts"
msgstr ""

#. type: menuentry
#: original_texis/android.texi:26
msgid "Font selection under Android."
msgstr ""

#. type: node
#: original_texis/android.texi:26 original_texis/android.texi:723
#, no-wrap
msgid "Android Troubleshooting"
msgstr ""

#. type: menuentry
#: original_texis/android.texi:26
msgid "Dealing with problems."
msgstr ""

#. type: node
#: original_texis/android.texi:26 original_texis/android.texi:771
#, no-wrap
msgid "Android Software"
msgstr ""

#. type: menuentry
#: original_texis/android.texi:26
msgid "Getting extra software."
msgstr ""

#. type: section
#: original_texis/android.texi:29
#, no-wrap
msgid "Android History"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:35
msgid "Android is an operating system for mobile devices developed by the Open Handset Alliance, a group of companies interested in developing handsets that can run a common set of software.  It is supposedly free software."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:44
msgid "Like the X Consortium of times past, the Open Handset Alliance believes that ``openness'' (namely, the regular release of the Android source code) is simply a tool to increase the popularity of the Android platform.  Computer companies normally produce proprietary software.  The companies in the Open Handset Alliance are no different -- most versions of Android installed on devices are proprietary, by virtue of containing proprietary components, that often cannot even be replaced by the user."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:52
msgid "Android is not designed to respect users' freedom.  Almost all versions of Android (including some which are supposedly free software) include support for Digital Restrictions Management, technology that is designed to limit users' ability to copy media to and from their own devices.  Most Android devices also come with proprietary Google applications which are required to run the system, and many other Android applications."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:57
msgid "Thus, it must be necessary to consider Android proprietary software from a practical standpoint.  That is an injustice.  If you use Android, we urge you to switch to a free operating system, if only for your freedom's sake."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:60
msgid "We support GNU Emacs on proprietary operating systems because we hope this taste of freedom will inspire users to escape from them."
msgstr ""

#. type: section
#: original_texis/android.texi:62
#, no-wrap
msgid "Starting Emacs on Android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:68
msgid "Emacs is not installed on Android devices from source code or through a package manager.  Instead, Emacs is compiled for Android on a different operating system, with the resulting binaries packaged into an archive, that is then transferred to the system and installed."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:72
msgid "After being installed, the system places an application icon on the desktop (a.k.a@: ``home screen''.)  Emacs then starts up once the application icon is clicked."
msgstr ""

#. type: cindex
#: original_texis/android.texi:73
#, no-wrap
msgid "``adb logcat''"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:78
msgid "During startup, Emacs will display messages in the system log buffer; reading that buffer during start-up requires the Android Debug Bridge (@command{adb}) utility to be installed on another computer."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:83
msgid "After enabling the ``USB Debugging'' feature on the Android system, and connecting it via USB to another system with the @command{adb} utility installed, the log can be viewed by running the following command on that other system:"
msgstr ""

#. type: example
#: original_texis/android.texi:86
#, no-wrap
msgid "$ adb logcat | grep -E \"(android_run_debug_thread|[Ee]macs)\"\n"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:90
msgid "Assuming that the @command{adb} utility is installed on a GNU/Linux or Unix system, follow the steps below to connect to your device."
msgstr ""

#. type: enumerate
#: original_texis/android.texi:96
msgid "Enable ``developer options'' on your device, by going to the ``About'' page in the system settings application and clicking on the ``build version'' or ``kernel version'' items five to seven times."
msgstr ""

#. type: enumerate
#: original_texis/android.texi:100
msgid "Open the ``developer options'' settings page, which should be under the ``system'' page in the settings application."
msgstr ""

#. type: enumerate
#: original_texis/android.texi:103
msgid "Turn on the switch ``USB debugging''."
msgstr ""

#. type: enumerate
#: original_texis/android.texi:107
msgid "Connect one end of a USB cable to your device, and the other end to your computer's USB port."
msgstr ""

#. type: enumerate
#: original_texis/android.texi:112
msgid "Run the command @command{adb shell} on your computer.  This will fail or hang because you have not yet granted your computer permission to access the connected device."
msgstr ""

#. type: enumerate
#: original_texis/android.texi:116
msgid "Confirm the pop-up displayed on your device asking whether or not it should allow access from your computer."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:123
msgid "Depending on the versions of Android and @command{adb} installed, there may be other ways to establish a connection.  See the official documentation at @url{https://developer.android.com/studio/command-line/adb} for more details."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:127
msgid "Once Emacs starts up, simply running the command @command{logcat} as an asynchronous shell command (@pxref{Shell}) will display the log buffer."
msgstr ""

#. type: cindex
#: original_texis/android.texi:128
#, no-wrap
msgid "emacsclient wrapper, android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:134
msgid "Since there is no other way to start the @command{emacsclient} program (@pxref{Emacs Server}) from another Android program, Emacs provides a wrapper around the @command{emacsclient} program, which is registered with the system as an application that can open all text files."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:140
msgid "When that wrapper is selected as the program with which to open a file, it invokes @command{emacsclient} with the options @command{--reuse-frame}, @command{--timeout=10}, @command{--no-wait}, and the name of the file being opened.  Then, upon success, the focus is transferred to any open Emacs frame."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:145
msgid "However, if Emacs is not running at the time the wrapper is opened, it starts Emacs and gives it the file to open as an argument.  Note that if that Emacs in turn does not start the Emacs server, subsequent attempts to open the file with the wrapper will fail."
msgstr ""

#. type: cindex
#: original_texis/android.texi:146
#, no-wrap
msgid "/content/by-authority directory, android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:152
msgid "Some files are given to Emacs as ``content identifiers'' that the system provides access to outside the normal filesystem APIs.  Emacs uses a pseudo-directory named @file{/content/by-authority} to access those files.  Do not make any assumptions about the contents of this directory, or try to open files in it yourself."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:156
msgid "This feature is not provided on Android 4.3 and earlier, in which case such files are copied to a temporary directory before being opened."
msgstr ""

#. type: section
#: original_texis/android.texi:158
#, no-wrap
msgid "What Files Emacs Can Access on Android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:159
#, no-wrap
msgid "/assets directory, android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:171
msgid "Emacs exposes a special directory on Android systems: the name of the directory is @file{/assets}, and it contains the @file{etc}, @file{lisp} and @file{info} directories which are normally installed in @file{/usr/share/emacs} directory on GNU and Unix systems.  On Android systems, the Lisp emulation of @command{ls} (@pxref{ls in Lisp}) is also enabled by default, as the @command{ls} binary which comes with the system varies by manufacturer and usually does not support all of the features required by Emacs.  One copy of @command{ls} distributed with some Android systems is even known to lack support for the @code{-l} flag."
msgstr ""

#. type: cindex
#: original_texis/android.texi:172
#, no-wrap
msgid "limitations of the /assets directory"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:179
msgid "This directory exists because Android does not extract the contents of application packages on to the file system while unpacking them, but instead requires programs like Emacs to access its contents using a special ``asset manager'' interface.  Here are the peculiarities that result from such an implementation:"
msgstr ""

#. type: itemize
#: original_texis/android.texi:187
msgid "Subprocesses (such as @command{ls}) can not run from the @file{/assets} directory; if you try to run a subprocess with @code{current-directory} set to @file{/assets}, @file{/content/storage} or a subdirectory thereof, it will run from the home directory instead."
msgstr ""

#. type: itemize
#: original_texis/android.texi:191
msgid "There are no @file{.} and @file{..} directories inside the @file{/assets} or @file{/content} directory."
msgstr ""

#. type: itemize
#: original_texis/android.texi:195
msgid "Files in the @file{/assets} directory are always read only, and may be read in to memory more than once each time they are opened."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:199
msgid "Aside from the @file{/assets} directory, Android programs normally have access to four other directories.  They are:"
msgstr ""

#. type: itemize
#: original_texis/android.texi:204
msgid "The @dfn{app data} directory.  This also serves as the home directory for Emacs, and is always accessible read-write."
msgstr ""

#. type: itemize
#: original_texis/android.texi:209
msgid "The @dfn{app library} directory.  This is automatically appended to @code{exec-path} and made @code{exec-directory} upon startup, and contains utility executables alongside Emacs itself."
msgstr ""

#. type: itemize
#: original_texis/android.texi:214
msgid "The @dfn{external storage} directory.  This is accessible to Emacs when the user grants the ``Files and Media'' permission to Emacs via system settings."
msgstr ""

#. type: itemize
#: original_texis/android.texi:220
msgid "Directories provided by @dfn{document providers} on Android 5.0 and later.  These directories exist outside the normal Unix filesystem, containing files provided by external programs (@pxref{Android Document Providers}.)"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:230
msgid "Despite ordinary installations of Android not having files within the (normally read-only) root directory named @file{content} or @file{assets}, you may want to access real files by these names if the Android installation in use has been customized.  These files will conflict with the aformentioned special directories, but can nevertheless be accessed by writing their names relative to the ``parent'' directory of the root directory, as so illustrated: @file{/../content}, @file{/../assets}."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:235
msgid "The external storage directory is found at @file{/sdcard}.  The other directories are not found at any fixed location (but see below), although the app data directory is typically symlinked to @file{/data/data/org.gnu.emacs/files}."
msgstr ""

#. type: cindex
#: original_texis/android.texi:236
#, no-wrap
msgid "app library directory, android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:237
#, no-wrap
msgid "where is emacsclient under android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:242
msgid "Older versions of Android used to place the app library directory under the name @file{lib} in the parent of the app data directory.  Today, this directory is often placed in a directory with a randomly generated name under @file{/data/app}."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:248
msgid "For the convenience of scripts running within applications sharing the same user ID as Emacs (which have no access to the @code{exec-directory} variable), a fairly considerable effort is made at startup to symlink the application library directory to its traditional location within the parent of the app data directory."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:253
msgid "If Emacs is reinstalled and the location of the app library directory consequentially changes, that symlink will also be updated to point to its new location the next time Emacs is started by the system."
msgstr ""

#. type: cindex
#: original_texis/android.texi:254
#, no-wrap
msgid "temp~unlinked.NNNN files, Android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:260
msgid "On Android devices running very old (2.6.29) versions of the Linux kernel, Emacs needs to create files named starting with @file{temp~unlinked} in the the temporary file directory in order to read from asset files.  Do not create files with such names yourself, or they may be overwritten or removed."
msgstr ""

#. type: cindex
#: original_texis/android.texi:261
#, no-wrap
msgid "file system limitations, Android 11"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:265
msgid "On Android 11 and later, the Android system restricts applications from accessing files in the @file{/sdcard} directory using file-related system calls such as @code{open} and @code{readdir}."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:273
msgid "This restriction is known as ``Scoped Storage'', and supposedly makes the system more secure.  Unfortunately, it also means that Emacs cannot access files in those directories, despite holding the necessary permissions.  Thankfully, the Open Handset Alliance's version of Android allows this restriction to be disabled on a per-program basis; the corresponding option in the system settings panel is:"
msgstr ""

#. type: example
#: original_texis/android.texi:276
#, no-wrap
msgid "System -> Apps -> Special App Access -> All files access -> Emacs\n"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:282
msgid "After you disable or enable this setting as appropriate and grant Emacs the ``Files and Media'' permission, it will be able to access files under @file{/sdcard} as usual.  These settings are not present on some proprietary versions of Android."
msgstr ""

#. type: section
#: original_texis/android.texi:284
#, no-wrap
msgid "Accessing Files from Other Programs on Android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:285
#, no-wrap
msgid "document providers, Android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:286
#, no-wrap
msgid "/content/storage directory, Android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:294
msgid "Android 5.0 introduces a new sort of program, the ``document provider'': these programs are small programs that provide access to their own files outside both the asset manager and the Unix filesystem.  Emacs supports accessing files and directories they provide, placing their files within the directory @file{/content/storage}."
msgstr ""

#. type: findex
#: original_texis/android.texi:295
#, no-wrap
msgid "android-request-directory-access"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:300
msgid "Before Emacs is granted access to one of these directories, it must first request the right to access it.  This is done by running the command (@pxref{M-x}) @code{android-request-directory-access}, which displays a file selection dialog."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:307
msgid "If a directory is selected within this dialog, its contents are subsequently made available within a new directory named @file{/content/storage/@var{authority}/@var{id}}, where @var{authority} is the name of the document provider, and @var{id} is a unique identifier assigned to the directory by the document provider."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:314
msgid "The same limitations applied to the @file{/assets} directory (@pxref{Android File System}) are applied when creating sub-processes within those directories, because they do not exist within the Unix file-system.  In addition, although Emacs can normally write and create files inside these directories, it cannot create symlinks or hard links."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:319
msgid "Since document providers are allowed to perform expensive network operations to obtain file contents, a file access operation within one of these directories has the potential to take a significant amount of time."
msgstr ""

#. type: section
#: original_texis/android.texi:321
#, no-wrap
msgid "Running Emacs under Android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:326
msgid "From the perspective of users, Android is mostly a single user operating system; however, from the perspective of applications and Emacs, the system has an overwhelming number of users."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:334
msgid "Each application runs in its own user, with its home directory set to its app data directory (@pxref{Android File System}.)@footnote{Except in cases where a ``shared user ID'' is specified and other applications signed using the same ``package signing key'' are installed, in which case Emacs runs as the same user and has access to the same files as each of the aformentioned applications.}"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:337
msgid "Each application is also prohibited from accessing many system directories and the app data directories of other applications."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:350
msgid "The Emacs distribution also incorporates several binaries.  While being executable files, they are packaged as libraries in the library directory, because otherwise the system will not unpack them while Emacs is being installed.  This means that instead of @code{ctags} or @code{emacsclient}, Lisp code must specify @code{libctags.so} or @code{libemacsclient.so} on the command line when starting either of those programs in a subprocess; to determine which names to use, consult the values of the variables @code{ctags-program-name}, @code{etags-program-name}, @code{hexl-program-name}, @code{emacsclient-program-name}, @code{movemail-program-name}, @code{ebrowse-program-name}, and @code{rcs2log-program-name}.  @xref{Subprocess Creation,,, elisp, the Emacs Lisp Reference Manual}."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:362
msgid "The @file{/assets} directory containing Emacs start-up files is supposed to be inaccessible to processes not directly created by @code{zygote}, the system service responsible for starting applications.  Since required Lisp is found in the @file{/assets} directory, it would thus follow that it is not possible for Emacs to start itself as a subprocess.  A special binary named @command{libandroid-emacs.so} is provided with Emacs, and does its best to start Emacs for the purpose of running Lisp in batch mode.  However, the approach it takes was devised by reading Android source code, and is not sanctioned by the Android compatibility definition documents, so your mileage may vary."
msgstr ""

#. type: cindex
#: original_texis/android.texi:363
#, no-wrap
msgid "call-process, Android"
msgstr ""

#. type: vindex
#: original_texis/android.texi:364
#, no-wrap
msgid "android-use-exec-loader"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:374
msgid "Android 10 and later also prohibit Emacs itself from running executables inside the app data directory, obstensibly for security reasons.  On these systems, Emacs normally applies a workaround; however, this workaround requires running all sub-processes through another subprocess which implements an executable loader and applies process tracing to all its children, which may prove to be problematic for various different reasons.  In that case, the workaround can be disabled by changing the variable @code{android-use-exec-loader} to @code{nil}."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:381
msgid "When this workaround is in effect, process IDs retrieved through the @code{process-id} function will be that of the executable loader process; its child will belong to the same process group as the loader.  As a result, @code{interrupt-process}, and other related functions will work correctly, but using the process ID returned by @code{process-id} for other purposes will not."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:387
msgid "One side effect of the mechanism by which process tracing is carried out is that job control facilities inside inferior shells (@pxref{Interactive Shell}) will not be able to stop processes, and sending the @code{SIGSTOP} signal to a subprocess created by Emacs will appear to have no effect."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:393
msgid "In addition, Android 12 also terminates subprocesses which are consuming CPU while Emacs itself is in the background.  The system determines which processes are consuming too much CPU in intervals of five minutes, and terminates the process that has consumed the most CPU time."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:397
msgid "Android 12.1 and Android 13 provide an option to disable this behavior; to use it, enable ``USB debugging'' (@pxref{Android Startup}) connect the Android system to another computer, and run:"
msgstr ""

#. type: example
#: original_texis/android.texi:400
#, no-wrap
msgid "$ adb shell \"settings put global settings_enable_monitor_phantom_procs false\"\n"
msgstr ""

#. type: cindex
#: original_texis/android.texi:402
#, no-wrap
msgid "running emacs in the background, android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:403
#, no-wrap
msgid "emacs killed, android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:404
#, no-wrap
msgid "emacs in the background, android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:410
msgid "Application processes are treated as disposable entities by the system.  When all Emacs frames move to the background, Emacs might be terminated by the system at any time, for the purpose of saving system resources."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:414
msgid "On Android 7.1 and earlier, Emacs tells the system to treat it as a ``background service''.  The system will try to avoid killing Emacs unless the system is stressed for memory."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:423
msgid "Android 8.0 removed the ability for background services to receive such special treatment.  However, Emacs applies a workaround: the system considers applications that create a permanent notification to be performing active work, and will avoid killing such applications.  Thus, on those systems, Emacs displays a permanent notification for as long as it is running.  Once the notification is displayed, it can be safely hidden through the system settings without resulting in Emacs being killed."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:431
msgid "However, it is not guaranteed that the system will not kill Emacs even if a notification is being displayed.  While the Open Handset Alliance's sample implementation of Android behaves correctly, many manufacturers place additional restrictions on program execution in the background in their proprietary versions of Android.  There is a list of such troublesome manufacturers and sometimes workarounds at @url{https://dontkillmyapp.com/}."
msgstr ""

#. type: cindex
#: original_texis/android.texi:432
#, no-wrap
msgid "permissions under android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:433
#, no-wrap
msgid "external storage, android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:439
msgid "Android also defines a permissions system that determines what system services Emacs is allowed to access.  Programs must specify what permissions they want; what then happens depends on the version of Android being used:"
msgstr ""

#. type: itemize
#: original_texis/android.texi:444
msgid "On Android 5.1 and earlier, Emacs automatically receives the following permissions it has requested upon being installed:"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:448
msgid "android.permission.READ_CONTACTS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:450
msgid "android.permission.WRITE_CONTACTS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:452 original_texis/android.texi:509
msgid "android.permission.VIBRATE"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:454
msgid "android.permission.ACCESS_COARSE_LOCATION"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:456 original_texis/android.texi:511
msgid "android.permission.ACCESS_NETWORK_STATE"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:458 original_texis/android.texi:513
msgid "android.permission.INTERNET"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:460 original_texis/android.texi:515
msgid "android.permission.SET_WALLPAPER"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:462
msgid "android.permission.READ_EXTERNAL_STORAGE"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:464
msgid "android.permission.WRITE_EXTERNAL_STORAGE"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:466
msgid "android.permission.SEND_SMS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:468
msgid "android.permission.RECEIVE_SMS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:470
msgid "android.permission.RECEIVE_MMS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:472
msgid "android.permission.WRITE_SMS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:474
msgid "android.permission.READ_SMS"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:476 original_texis/android.texi:517
msgid "android.permission.NFC"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:478 original_texis/android.texi:519
msgid "android.permission.TRANSMIT_IR"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:480
msgid "android.permission.READ_PHONE_STATE"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:482 original_texis/android.texi:521
msgid "android.permission.WAKE_LOCK"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:484
msgid "android.permission.FOREGROUND_SEVICE"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:486
msgid "android.permission.REQUEST_INSTALL_PACKAGES"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:488
msgid "android.permission.REQUEST_DELETE_PACKAGES"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:490
msgid "android.permission.SYSTEM_ALERT_WINDOW"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:492
msgid "android.permission.RECORD_AUDIO"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:494
msgid "android.permission.CAMERA"
msgstr ""

#. type: code{#1}
#: original_texis/android.texi:496
msgid "android.permission.POST_NOTIFICATIONS"
msgstr ""

#. type: itemize
#: original_texis/android.texi:501
msgid "While most of these permissions are left unused by Emacs itself, they are declared by Emacs as they could be useful for other programs; for example, the permission to access contacts may be useful for EUDC."
msgstr ""

#. type: itemize
#: original_texis/android.texi:505
msgid "On Android 6.0 and later, Emacs only receives the following permissions upon installation:"
msgstr ""

#. type: itemize
#: original_texis/android.texi:526
msgid "Other permissions must be granted by the user through the system settings application.  Consult the manufacturer of your device for more details, as how to do this varies by device."
msgstr ""

#. type: section
#: original_texis/android.texi:529
#, no-wrap
msgid "The Android Window System"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:535
msgid "Android has an unusual window system; there, all windows are maximized or full-screen, and only one window can be displayed at a time.  On larger devices, the system allows up to four windows to be tiled on the screen at any time."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:543
msgid "Windows on Android do not continue to exist indefinitely after they are created.  Instead, the system may choose to close windows that are not on screen in order to save memory, with the assumption that the program will save its contents to disk and restore them later, when the user asks for it to be opened again.  As this is obviously not possible with Emacs, Emacs separates the resources associated with a frame from its system window."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:557
msgid "Each system window created (including the initial window created during Emacs startup) is appended to a list of windows that do not have associated frames.  When a frame is created, Emacs looks up any window within that list, and displays the contents of the frame within; if there is no window at all, then one is created.  Likewise, when a new window is created by the system, Emacs places the contents of any frame that is not already displayed within a window inside.  When a frame is closed, the corresponding system window is also closed.  Upon startup, the system creates a window itself (within which Emacs displays the first window system frame shortly thereafter.)  Emacs differentiates between that window and windows created on behalf of other frames to determine what to do when the system window associated with a frame is closed:"
msgstr ""

#. type: itemize
#: original_texis/android.texi:563
msgid "When the system closes the window created during application startup in order to save memory, Emacs retains the frame for when that window is created later."
msgstr ""

#. type: itemize
#: original_texis/android.texi:568
msgid "When the user closes the window created during application startup, and the window was not previously closed by the system in order to save resources, Emacs deletes any frame displayed within that window."
msgstr ""

#. type: itemize
#: original_texis/android.texi:573
msgid "When the user or the system closes any window created by Emacs on behalf of a specific frame, Emacs deletes the frame displayed within that window."
msgstr ""

#. type: cindex
#: original_texis/android.texi:575
#, no-wrap
msgid "windowing limitations, android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:576
#, no-wrap
msgid "frame parameters, android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:579
msgid "Emacs only supports a limited subset of GUI features on Android; the limitations are as follows:"
msgstr ""

#. type: itemize
#: original_texis/android.texi:584
msgid "Scroll bars are not supported, as they are close to useless on Android devices."
msgstr ""

#. type: itemize
#: original_texis/android.texi:591
msgid "The @code{alpha}, @code{alpha-background}, @code{z-group}, @code{override-redirect}, @code{mouse-color}, @code{title}, @code{wait-for-wm}, @code{sticky}, @code{undecorated} and @code{tool-bar-position} frame parameters (@pxref{Frame Parameters,,, elisp, the Emacs Lisp Reference Manual}) are unsupported."
msgstr ""

#. type: itemize
#: original_texis/android.texi:596
msgid "On Android 4.0 and earlier, the @code{fullscreen} frame parameter is always @code{maximized} for top-level frames; on later versions of Android, it can also be @code{fullscreen}."
msgstr ""

#. type: cindex
#: original_texis/android.texi:598
#, no-wrap
msgid "selections, android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:599
#, no-wrap
msgid "android clipboard"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:604
msgid "Emacs does not implement all selection related features supported under the X Window System on Android.  For example, only the @code{CLIPBOARD} and @code{PRIMARY} selections (@pxref{Cut and Paste})  are supported, and Emacs is only able to set selections to plain text."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:607
msgid "In addition, the Android system itself places certain restrictions on what selection data Emacs can access:"
msgstr ""

#. type: itemize
#: original_texis/android.texi:612
msgid "On Android 2.3 and earlier, the function @code{gui-selection-owner-p} always returns @code{nil} for the clipboard selection."
msgstr ""

#. type: itemize
#: original_texis/android.texi:617
msgid "Between Android 3.0 and Android 9.0, Emacs is able to access the clipboard whenever it wants, and @code{gui-selection-owner-p} always returns accurate results."
msgstr ""

#. type: itemize
#: original_texis/android.texi:623
msgid "Under Android 10.0 and later, Emacs can only access clipboard data when one of its frames has the input focus, and @code{gui-selection-owner-p} always returns @code{nil} for the clipboard selection."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:629
msgid "Since the Android system itself has no concept of a primary selection, Emacs provides an emulation instead.  This means there is no way to transfer the contents of the primary selection to another application via cut-and-paste."
msgstr ""

#. type: vindex
#: original_texis/android.texi:630
#, no-wrap
msgid "android-pass-multimedia-buttons-to-system"
msgstr ""

#. type: cindex
#: original_texis/android.texi:631
#, no-wrap
msgid "volume/multimedia buttons, Android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:639
msgid "The volume keys are normally reserved by Emacs and used to provide the ability to quit Emacs without a physical keyboard (@pxref{On-Screen Keyboards}.)  However, if you want them to adjust the volume instead, you can set the variable @code{android-pass-multimedia-buttons-to-system} to a non-@code{nil} value; note that you will no longer be able to quit Emacs using the volume buttons in that case."
msgstr ""

#. type: cindex
#: original_texis/android.texi:640
#, no-wrap
msgid "dialog boxes, android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:646
msgid "Emacs is unable to display dialog boxes (@pxref{Dialog Boxes}) while it does not have the input focus on Android 6.0 or later.  If this is important to you, this ability can be restored by granting Emacs permission to display over other programs.  Normally, this can be done from the:"
msgstr ""

#. type: example
#: original_texis/android.texi:649
#, no-wrap
msgid "System -> Apps -> Emacs -> More -> Display over other apps\n"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:652
msgid "menu in the system settings, but this procedure may vary by device."
msgstr ""

#. type: cindex
#: original_texis/android.texi:653
#, no-wrap
msgid "keyboard modifiers, android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:661
msgid "There is a direct relation between physical modifier keys and Emacs modifiers (@pxref{Modifier Keys}) reported within key events, subject to a single exception: if @key{Alt} on your keyboard is depressed, then the @key{Meta} modifier will be reported by Emacs in its place, and vice versa.  This irregularity is since most keyboards posses no special @key{Meta} key, and the @key{Alt} modifier is seldom employed in Emacs."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:665
msgid "Bear in mind that Android uses a different name for the @key{Super} modifier: it is referred to as @key{SYM} on Android keyboards and within the Settings keymap menu."
msgstr ""

#. type: vindex
#: original_texis/android.texi:666
#, no-wrap
msgid "android-intercept-control-space"
msgstr ""

#. type: cindex
#: original_texis/android.texi:667
#, no-wrap
msgid "@kbd{C-SPC} interception, android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:673
msgid "Android input methods have a penchant for irritating users by silently discarding key sequences containing @kbd{C-SPC} during the event filtering process, that they normally have no real application for such key sequences notwithstanding.  By default, Emacs intercepts these key sequences before they can be filtered by the input method."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:678
msgid "If this proves unwanted (for instance, if the input method treats @kbd{C-SPC} as a shortcut key for switching languages), it can be disabled by setting the variable @code{android-intercept-control-space} to @code{nil}."
msgstr ""

#. type: section
#: original_texis/android.texi:680
#, no-wrap
msgid "Font Backends and Selection under Android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:681
#, no-wrap
msgid "fonts, android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:685
msgid "Emacs supports two font backends under Android: they are respectively named @code{sfnt-android} and @code{android}."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:692
msgid "Upon startup, Emacs enumerates all the TrueType format fonts in the directories @file{/system/fonts} and @file{/product/fonts}, and the @file{fonts} directory (@dfn{user fonts directory}) inside the Emacs home directory.  Emacs assumes there will always be a font named ``Droid Sans Mono'', and then defaults to using this font.  These fonts are then displayed by the @code{sfnt-android} font driver."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:697
msgid "When running on Android, Emacs currently lacks support for OpenType fonts.  This means that only a subset of the fonts installed on the system are currently available to Emacs.  If you are interested in lifting this limitation, please contact @email{emacs-devel@@gnu.org}."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:704
msgid "If the @code{sfnt-android} font driver fails to find any fonts at all, Emacs falls back to the @code{android} font driver.  This is a very lousy font driver, because of limitations and inaccuracies in the font metrics provided by the Android platform.  In that case, Emacs uses the ``Monospace'' typeface configured on your system; this should always be Droid Sans Mono."
msgstr ""

#. type: cindex
#: original_texis/android.texi:705
#, no-wrap
msgid "TrueType GX fonts, android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:706
#, no-wrap
msgid "distortable fonts, android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:712
msgid "As on X systems, Emacs supports distortable fonts under Android.  These fonts (also termed ``TrueType GX fonts'', ``variable fonts'', and ``multiple master fonts'') provide multiple different styles (``Bold'', ``Italic'', etc) using a single font file."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:722
msgid "When a user-installed distortable font is found, each style that a previously discovered font provided will no longer be used.  In addition, any previously installed distortable fonts with the same family name are also disregarded, provided that the new distortable font supplies a superset of the styles furnished by the previously installed font.  When a conventional font is found, any previous conventional font with the same style and family will be removed; distortable fonts with the same family will no longer be used to provide that style."
msgstr ""

#. type: section
#: original_texis/android.texi:724
#, no-wrap
msgid "Troubleshooting Startup Problems on Android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:725
#, no-wrap
msgid "troubleshooting, android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:727
#, no-wrap
msgid "emacs -Q, android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:728
#, no-wrap
msgid "emacs --debug-init, android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:735
msgid "Since Android has no command line, there is normally no way to specify command-line arguments when starting Emacs.  This is very nasty when you make a mistake in your Emacs initialization files that prevents Emacs from starting up at all, as the system normally prevents other programs from accessing Emacs's home directory.  @xref{Initial Options}."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:742
msgid "However, Emacs can be started with the equivalent of either the option @code{--quick}, or @code{--debug-init} through a special preferences screen.  Under Android 7.0 and later, this can be accessed through the Emacs ``app info'' page in the system settings program; on older systems, this is displayed as a separate icon on the desktop labeled ``Emacs options''."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:745
msgid "Consult the manufacturer of your device for more details, as how to do this varies by device."
msgstr ""

#. type: cindex
#: original_texis/android.texi:746
#, no-wrap
msgid "dumping, android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:752
msgid "The first time any given copy of Emacs starts on a device, it spends a while loading the preloaded Lisp files which normally come with Emacs.  This produces a ``dump file'' (@pxref{Initial Options}) in the files directory, containing an identifier unique to that copy of Emacs."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:755
msgid "The next time that same copy of Emacs starts up, it simply loads the data contained in that dump file, greatly reducing start up time."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:760
msgid "If by some unforeseen circumstance the dump file is corrupted, Emacs can crash.  If that happens, the dump file stored in the Emacs files directory can be erased through the preferences screen described above."
msgstr ""

#. type: cindex
#: original_texis/android.texi:761
#, no-wrap
msgid "accessing Emacs directories, Android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:766
msgid "Emacs supports an alternative method of rescuing broken Emacs installations on Android 4.4 and later: Emacs exports a ``documents provider'' which accesses the contents of Emacs's home directory, that can then be accessed by any file manager program."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:770
msgid "If you can find out how to open that documents provider in the file manager that comes with your device, you can rename, delete, or edit your initialization or dump files from there instead."
msgstr ""

#. type: section
#: original_texis/android.texi:772
#, no-wrap
msgid "Installing Extra Software on Android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:773
#, no-wrap
msgid "installing extra software on Android"
msgstr ""

#. type: cindex
#: original_texis/android.texi:774
#, no-wrap
msgid "installing Unix software on Android"
msgstr ""

#. type: Plain text
#: original_texis/android.texi:781
msgid "Android includes an extremely limited set of Unix-like command line tools in a default installation.  Several projects exist to argument this selection, providing options that range from improved reproductions of Unix command-line utilities to package repositories containing extensive collections of free GNU and Unix software."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:786
msgid "@uref{http://busybox.net, Busybox} provides Unix utilities and limited replicas of certain popular GNU programs such as @command{wget} in a single statically-linked Linux binary, which is capable of running under Android."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:798
msgid "@uref{https://termux.dev, Termux} provides a package manager based on the Debian project's @command{dpkg} system and a set of package repositories containing substantial amounts of free software for Unix systems, including compilers, debuggers, and runtimes for languages such as C, C++, Java, Python and Common Lisp.  These packages are normally installed from within a purpose-built terminal emulator application, but Emacs can access them if it is built with the same application signing key as the Termux terminal emulator, and with its ``shared user ID'' set to the package name of the terminal emulator program.  The file @file{java/INSTALL} within the Emacs distribution explains how to build Emacs in this fashion."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:803
msgid "@uref{https://github.com/termux/termux-packages, termux-packages} provides the package definitions that are used by Termux to generate their package repositories, which may also be independently compiled for installation within Emacs's home directory."
msgstr ""

#. type: Plain text
#: original_texis/android.texi:806
msgid "In addition to the projects mentioned above, statically linked binaries for most Linux kernel-based systems can also be run on Android."
msgstr ""
