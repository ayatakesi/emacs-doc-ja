#. type: node
#: original_texis/windows.texi:5
#, no-wrap
msgid "Windows"
msgstr ""

#. type: chapter
#: original_texis/windows.texi:6
#, no-wrap
msgid "Multiple Windows"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:7
#, no-wrap
msgid "windows in Emacs"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:8
#, no-wrap
msgid "multiple windows in Emacs"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:15
msgid "Emacs can split a frame into two or many windows.  Multiple windows can display parts of different buffers, or different parts of one buffer.  Multiple frames always imply multiple windows, because each frame has its own set of windows.  Each window belongs to one and only one frame."
msgstr ""

#. type: node
#: original_texis/windows.texi:26 original_texis/windows.texi:28
#, no-wrap
msgid "Basic Window"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:26
msgid "Introduction to Emacs windows."
msgstr ""

#. type: node
#: original_texis/windows.texi:26 original_texis/windows.texi:66
#, no-wrap
msgid "Split Window"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:26
msgid "New windows are made by splitting existing windows."
msgstr ""

#. type: node
#: original_texis/windows.texi:26 original_texis/windows.texi:155
#, no-wrap
msgid "Other Window"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:26
msgid "Moving to another window or doing something to it."
msgstr ""

#. type: node
#: original_texis/windows.texi:26 original_texis/windows.texi:220
#, no-wrap
msgid "Pop Up Window"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:26
msgid "Finding a file or buffer in another window."
msgstr ""

#. type: node
#: original_texis/windows.texi:26 original_texis/windows.texi:276
#, no-wrap
msgid "Change Window"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:26
msgid "Deleting windows and changing their sizes."
msgstr ""

#. type: node
#: original_texis/windows.texi:26 original_texis/windows.texi:383
#, no-wrap
msgid "Displaying Buffers"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:26
msgid "How Emacs picks a window for displaying a buffer."
msgstr ""

#. type: node
#: original_texis/windows.texi:26 original_texis/windows.texi:589
#, no-wrap
msgid "Window Convenience"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:26
msgid "Convenience functions for window handling."
msgstr ""

#. type: node
#: original_texis/windows.texi:26 original_texis/windows.texi:658
#, no-wrap
msgid "Tab Line"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:26
msgid "Window tab line."
msgstr ""

#. type: section
#: original_texis/windows.texi:26 original_texis/windows.texi:705
#: original_texis/windows.texi:706
#, no-wrap
msgid "Window Tool Bar"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:26
msgid "A tool bar that is attached to windows."
msgstr ""

#. type: section
#: original_texis/windows.texi:29
#, no-wrap
msgid "Concepts of Emacs Windows"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:36
msgid "Each Emacs window displays one Emacs buffer at any time.  A single buffer may appear in more than one window; if it does, any changes in its text are displayed in all the windows where it appears.  But these windows can show different parts of the buffer, because each window has its own value of point."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:37
#, no-wrap
msgid "selected window"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:44
msgid "At any time, one Emacs window is the @dfn{selected window}; the buffer this window is displaying is the current buffer.  On graphical displays, the point is indicated by a solid blinking cursor in the selected window, and by a hollow box in non-selected windows.  On text terminals, the cursor is drawn only in the selected window.  @xref{Cursor Display}."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:55
msgid "Commands to move point affect the value of point for the selected Emacs window only.  They do not change the value of point in other Emacs windows, even those showing the same buffer.  The same is true for buffer-switching commands such as @kbd{C-x b}; they do not affect other windows at all.  However, there are other commands such as @kbd{C-x 4 b} that select a different window and switch buffers in it.  Also, all commands that display information in a window, including (for example) @kbd{C-h f} (@code{describe-function}) and @kbd{C-x C-b} (@code{list-buffers}), usually work by displaying buffers in a nonselected window without affecting the selected window."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:60
msgid "When multiple windows show the same buffer, they can have different regions, because they can have different values of point.  However, they all have the same value for the mark, because each buffer has only one mark position."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:65
msgid "Each window has its own mode line, which displays the buffer name, modification status and major and minor modes of the buffer that is displayed in the window.  The selected window's mode line appears in a different color.  @xref{Mode Line}, for details."
msgstr ""

#. type: section
#: original_texis/windows.texi:67
#, no-wrap
msgid "Splitting Windows"
msgstr ""

#. type: kindex
#: original_texis/windows.texi:70 original_texis/windows.texi:80
#, no-wrap
msgid "C-x 2"
msgstr ""

#. type: table
#: original_texis/windows.texi:73
msgid "Split the selected window into two windows, one above the other (@code{split-window-below})."
msgstr ""

#. type: kindex
#: original_texis/windows.texi:73 original_texis/windows.texi:102
#, no-wrap
msgid "C-x 3"
msgstr ""

#. type: table
#: original_texis/windows.texi:76
msgid "Split the selected window into two windows, positioned side by side (@code{split-window-right})."
msgstr ""

#. type: item
#: original_texis/windows.texi:76
#, no-wrap
msgid "C-mouse-2"
msgstr ""

#. type: table
#: original_texis/windows.texi:78
msgid "In the mode line of a window, split that window."
msgstr ""

#. type: findex
#: original_texis/windows.texi:81
#, no-wrap
msgid "split-window-below"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:92
msgid "@kbd{C-x 2} (@code{split-window-below}) splits the selected window into two windows, one above the other.  After splitting, the selected window is the upper one, and the newly split-off window is below.  Both windows have the same value of point as before, and display the same portion of the buffer (or as close to it as possible).  If necessary, the windows are scrolled to keep point on-screen.  By default, the two windows each get half the height of the original window.  A positive numeric argument specifies how many lines to give to the top window; a negative numeric argument specifies how many lines to give to the bottom window."
msgstr ""

#. type: vindex
#: original_texis/windows.texi:93
#, no-wrap
msgid "split-window-keep-point"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:101
msgid "If you change the variable @code{split-window-keep-point} to @code{nil}, @kbd{C-x 2} instead adjusts the portion of the buffer displayed by the two windows, as well as the value of point in each window, in order to keep the text on the screen as close as possible to what it was before; furthermore, if point was in the lower half of the original window, the bottom window is selected instead of the upper one."
msgstr ""

#. type: findex
#: original_texis/windows.texi:103
#, no-wrap
msgid "split-window-right"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:110
msgid "@kbd{C-x 3} (@code{split-window-right}) splits the selected window into two side-by-side windows.  The left window is the selected one; the right window displays the same portion of the same buffer, and has the same value of point.  A positive numeric argument specifies how many columns to give the left window; a negative numeric argument specifies how many columns to give the right window."
msgstr ""

#. type: vindex
#: original_texis/windows.texi:111
#, no-wrap
msgid "truncate-partial-width-windows"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:130
msgid "When you split a window with @kbd{C-x 3}, each resulting window occupies less than the full width of the frame.  If it becomes too narrow, the buffer may be difficult to read if continuation lines are in use (@pxref{Continuation Lines}).  Therefore, Emacs automatically switches to line truncation if the window width becomes narrower than 50 columns.  This truncation occurs regardless of the value of the variable @code{truncate-lines} (@pxref{Line Truncation}); it is instead controlled by the variable @code{truncate-partial-width-windows}.  If the value of this variable is a positive integer (the default is 50), that specifies the minimum total width for a partial-width window before automatic line truncation occurs; if the value is @code{nil}, automatic line truncation is disabled; and for any other non-@code{nil} value, Emacs truncates lines in every partial-width window regardless of its width.  The total width of a window is in column units as reported by @code{window-total-width} (@pxref{Window Sizes,,, elisp, The Emacs Lisp Reference Manual}), it includes the fringes, the continuation and truncation glyphs, the margins, and the scroll bar."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:133
msgid "On text terminals, side-by-side windows are separated by a vertical divider which is drawn using the @code{vertical-border} face."
msgstr ""

#. type: kindex
#: original_texis/windows.texi:134
#, no-wrap
msgid "C-mouse-2 @r{(mode line)}"
msgstr ""

#. type: kindex
#: original_texis/windows.texi:135
#, no-wrap
msgid "C-mouse-2 @r{(scroll bar)}"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:142
msgid "If you click @kbd{C-mouse-2} in the mode line of a window, that splits the window, putting a vertical divider where you click.  Depending on how Emacs is compiled, you can also split a window by clicking @kbd{C-mouse-2} in the scroll bar, which puts a horizontal divider where you click (this feature does not work when Emacs uses GTK+ scroll bars)."
msgstr ""

#. type: vindex
#: original_texis/windows.texi:143
#, no-wrap
msgid "window-resize-pixelwise"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:154
msgid "By default, when you split a window, Emacs gives each of the resulting windows dimensions that are an integral multiple of the default font size of the frame.  That might subdivide the screen estate unevenly between the resulting windows.  If you set the variable @code{window-resize-pixelwise} to a non-@code{nil} value, Emacs will give each window the same number of pixels (give or take one pixel if the initial dimension was an odd number of pixels).  Note that when a frame's pixel size is not a multiple of the frame's character size, at least one window may get resized pixelwise even if this option is @code{nil}."
msgstr ""

#. type: section
#: original_texis/windows.texi:156
#, no-wrap
msgid "Using Other Windows"
msgstr ""

#. type: kindex
#: original_texis/windows.texi:159 original_texis/windows.texi:173
#, no-wrap
msgid "C-x o"
msgstr ""

#. type: table
#: original_texis/windows.texi:161
msgid "Select another window (@code{other-window})."
msgstr ""

#. type: kindex
#: original_texis/windows.texi:161 original_texis/windows.texi:196
#, no-wrap
msgid "C-M-v"
msgstr ""

#. type: table
#: original_texis/windows.texi:163
msgid "Scroll the next window upward (@code{scroll-other-window})."
msgstr ""

#. type: kindex
#: original_texis/windows.texi:163 original_texis/windows.texi:198
#, no-wrap
msgid "C-M-S-v"
msgstr ""

#. type: table
#: original_texis/windows.texi:165
msgid "Scroll the next window downward (@code{scroll-other-window-down})."
msgstr ""

#. type: kindex
#: original_texis/windows.texi:165 original_texis/windows.texi:200
#, no-wrap
msgid "C-M-S-l"
msgstr ""

#. type: table
#: original_texis/windows.texi:167
msgid "Recenter the next window (@code{recenter-other-window})."
msgstr ""

#. type: item
#: original_texis/windows.texi:167
#, no-wrap
msgid "mouse-1"
msgstr ""

#. type: table
#: original_texis/windows.texi:171
msgid "@kbd{mouse-1}, in the text area of a window, selects the window and moves point to the position clicked.  Clicking in the mode line selects the window without moving point in it."
msgstr ""

#. type: findex
#: original_texis/windows.texi:174
#, no-wrap
msgid "other-window"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:187
msgid "With the keyboard, you can switch windows by typing @kbd{C-x o} (@code{other-window}).  That is an @kbd{o}, for ``other'', not a zero.  When there are more than two windows, this command moves through all the windows in a cyclic order, generally top to bottom and left to right.  After the rightmost and bottommost window, it goes back to the one at the upper left corner.  A numeric argument means to move several steps in the cyclic order of windows.  A negative argument moves around the cycle in the opposite order.  When the minibuffer is active, the minibuffer window is the last window in the cycle; you can switch from the minibuffer window to one of the other windows, and later switch back and finish supplying the minibuffer argument that is requested.  @xref{Minibuffer Edit}."
msgstr ""

#. type: findex
#: original_texis/windows.texi:188
#, no-wrap
msgid "next-window-any-frame"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:195
msgid "The @code{other-window} command will normally only switch to the next window in the current frame (unless otherwise configured).  If you work in a multi-frame environment and you want windows in all frames to be part of the cycle, you can rebind @kbd{C-x o} to the @code{next-window-any-frame} command.  (@xref{Rebinding}, for how to rebind a command.)"
msgstr ""

#. type: findex
#: original_texis/windows.texi:197
#, no-wrap
msgid "scroll-other-window"
msgstr ""

#. type: findex
#: original_texis/windows.texi:199
#, no-wrap
msgid "scroll-other-window-down"
msgstr ""

#. type: findex
#: original_texis/windows.texi:201
#, no-wrap
msgid "recenter-other-window"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:214
msgid "The usual scrolling commands (@pxref{Display}) apply to the selected window only, but there are also commands to scroll the next window.  @kbd{C-M-v} (@code{scroll-other-window}) scrolls the window that @kbd{C-x o} would select.  In other respects, the command behaves like @kbd{C-v}; both move the buffer text upward relative to the window, and take positive and negative arguments.  (In the minibuffer, @kbd{C-M-v} scrolls the help window associated with the minibuffer, if any, rather than the next window in the standard cyclic order; @pxref{Minibuffer Edit}.)  @kbd{C-M-S-v} (@code{scroll-other-window-down}) scrolls the next window downward in a similar way.  Likewise, @kbd{C-M-S-l} (@code{recenter-other-window}) behaves like @kbd{C-l} (@code{recenter-top-bottom}) in the next window."
msgstr ""

#. type: vindex
#: original_texis/windows.texi:215
#, no-wrap
msgid "mouse-autoselect-window"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:219
msgid "If you set @code{mouse-autoselect-window} to a non-@code{nil} value, moving the mouse over a different window selects that window.  This feature is off by default."
msgstr ""

#. type: section
#: original_texis/windows.texi:221
#, no-wrap
msgid "Displaying in Another Window"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:223
#, no-wrap
msgid "selecting buffers in other windows"
msgstr ""

#. type: kindex
#: original_texis/windows.texi:224
#, no-wrap
msgid "C-x 4"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:229
msgid "@kbd{C-x 4} is a prefix key for a variety of commands that switch to a buffer in a different window---either another existing window, or a new window created by splitting the selected window.  @xref{Window Choice}, for how Emacs picks or creates the window to use."
msgstr ""

#. type: item
#: original_texis/windows.texi:231
#, no-wrap
msgid "C-x 4 b @var{bufname} @key{RET}"
msgstr ""

#. type: table
#: original_texis/windows.texi:234
msgid "Select buffer @var{bufname} in another window (@code{switch-to-buffer-other-window}).  @xref{Select Buffer}."
msgstr ""

#. type: findex
#: original_texis/windows.texi:235
#, no-wrap
msgid "display-buffer @r{(command)}"
msgstr ""

#. type: item
#: original_texis/windows.texi:236
#, no-wrap
msgid "C-x 4 C-o @var{bufname} @key{RET}"
msgstr ""

#. type: kindex
#: original_texis/windows.texi:237
#, no-wrap
msgid "C-x 4 C-o"
msgstr ""

#. type: table
#: original_texis/windows.texi:241
msgid "Display buffer @var{bufname} in some window, without trying to select it (@code{display-buffer}).  @xref{Displaying Buffers}, for details about how the window is chosen."
msgstr ""

#. type: item
#: original_texis/windows.texi:242
#, no-wrap
msgid "C-x 4 f @var{filename} @key{RET}"
msgstr ""

#. type: table
#: original_texis/windows.texi:245
msgid "Visit file @var{filename} and select its buffer in another window (@code{find-file-other-window}).  @xref{Visiting}."
msgstr ""

#. type: item
#: original_texis/windows.texi:246
#, no-wrap
msgid "C-x 4 d @var{directory} @key{RET}"
msgstr ""

#. type: table
#: original_texis/windows.texi:249
msgid "Select a Dired buffer for directory @var{directory} in another window (@code{dired-other-window}).  @xref{Dired}."
msgstr ""

#. type: item
#: original_texis/windows.texi:252
#, no-wrap
msgid "C-x 4 m"
msgstr ""

#. type: table
#: original_texis/windows.texi:255
msgid "Start composing a mail message, similar to @kbd{C-x m} (@pxref{Sending Mail}), but in another window (@code{compose-mail-other-window})."
msgstr ""

#. type: findex
#: original_texis/windows.texi:256
#, no-wrap
msgid "find-tag-other-window"
msgstr ""

#. type: item
#: original_texis/windows.texi:257
#, no-wrap
msgid "C-x 4 ."
msgstr ""

#. type: table
#: original_texis/windows.texi:261
msgid "Find the definition of an identifier, similar to @kbd{M-.} (@pxref{Xref}), but in another window (@code{xref-find-definitions-other-window})."
msgstr ""

#. type: item
#: original_texis/windows.texi:262
#, no-wrap
msgid "C-x 4 r @var{filename} @key{RET}"
msgstr ""

#. type: table
#: original_texis/windows.texi:265
msgid "Visit file @var{filename} read-only, and select its buffer in another window (@code{find-file-read-only-other-window}).  @xref{Visiting}."
msgstr ""

#. type: item
#: original_texis/windows.texi:266
#, no-wrap
msgid "C-x 4 4"
msgstr ""

#. type: table
#: original_texis/windows.texi:270
msgid "A more general prefix command affects the buffer displayed by the next command invoked immediately after this prefix command.  It requests the buffer of the next command to be displayed in another window."
msgstr ""

#. type: item
#: original_texis/windows.texi:271
#, no-wrap
msgid "C-x 4 1"
msgstr ""

#. type: table
#: original_texis/windows.texi:274
msgid "This general prefix command requests the buffer of the next command to be displayed in the same window."
msgstr ""

#. type: section
#: original_texis/windows.texi:277
#, no-wrap
msgid "Deleting and Resizing Windows"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:279
#, no-wrap
msgid "delete window"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:280
#, no-wrap
msgid "deleting windows"
msgstr ""

#. type: kindex
#: original_texis/windows.texi:282 original_texis/windows.texi:307
#, no-wrap
msgid "C-x 0"
msgstr ""

#. type: table
#: original_texis/windows.texi:284
msgid "Delete the selected window (@code{delete-window})."
msgstr ""

#. type: kindex
#: original_texis/windows.texi:284 original_texis/windows.texi:325
#, no-wrap
msgid "C-x 1"
msgstr ""

#. type: table
#: original_texis/windows.texi:287
msgid "Delete all windows in the selected frame except the selected window (@code{delete-other-windows})."
msgstr ""

#. type: kindex
#: original_texis/windows.texi:287 original_texis/windows.texi:320
#, no-wrap
msgid "C-x 4 0"
msgstr ""

#. type: table
#: original_texis/windows.texi:291
msgid "Delete the selected window and kill the buffer that was showing in it (@code{kill-buffer-and-window}).  The last character in this key sequence is a zero."
msgstr ""

#. type: item
#: original_texis/windows.texi:291
#, no-wrap
msgid "C-x w 0 @key{RET} @var{buffer} @key{RET}"
msgstr ""

#. type: table
#: original_texis/windows.texi:293
msgid "Delete windows showing the specified @var{buffer}."
msgstr ""

#. type: kindex
#: original_texis/windows.texi:293 original_texis/windows.texi:339
#, no-wrap
msgid "C-x ^"
msgstr ""

#. type: table
#: original_texis/windows.texi:295
msgid "Make selected window taller (@code{enlarge-window})."
msgstr ""

#. type: kindex
#: original_texis/windows.texi:295 original_texis/windows.texi:341
#, no-wrap
msgid "C-x @}"
msgstr ""

#. type: table
#: original_texis/windows.texi:297
msgid "Make selected window wider (@code{enlarge-window-horizontally})."
msgstr ""

#. type: item
#: original_texis/windows.texi:297
#, no-wrap
msgid "C-x @{"
msgstr ""

#. type: table
#: original_texis/windows.texi:299
msgid "Make selected window narrower (@code{shrink-window-horizontally})."
msgstr ""

#. type: kindex
#: original_texis/windows.texi:299 original_texis/windows.texi:368
#, no-wrap
msgid "C-x -"
msgstr ""

#. type: table
#: original_texis/windows.texi:302
msgid "Shrink this window if its buffer doesn't need so many lines (@code{shrink-window-if-larger-than-buffer})."
msgstr ""

#. type: kindex
#: original_texis/windows.texi:302 original_texis/windows.texi:375
#, no-wrap
msgid "C-x +"
msgstr ""

#. type: table
#: original_texis/windows.texi:305
msgid "Balance the sizes of all the windows of the selected frame (@code{balance-windows})."
msgstr ""

#. type: findex
#: original_texis/windows.texi:308
#, no-wrap
msgid "delete-window"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:318
msgid "To delete the selected window, type @kbd{C-x 0} (@code{delete-window}).  (That is a zero.)  Once a window is deleted, the space that it occupied is given to an adjacent window (but not the minibuffer window, even if that is active at the time).  Deleting the window has no effect on the buffer it used to display; the buffer continues to exist, and you can still switch to it with @kbd{C-x b}.  The option @code{delete-window-choose-selected} controls which window is chosen as the new selected window instead (@pxref{Deleting Windows,,, elisp, The Emacs Lisp Reference Manual})."
msgstr ""

#. type: findex
#: original_texis/windows.texi:319
#, no-wrap
msgid "kill-buffer-and-window"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:324
msgid "@kbd{C-x 4 0} (@code{kill-buffer-and-window}) is a stronger command than @kbd{C-x 0}; it kills the current buffer and then deletes the selected window."
msgstr ""

#. type: findex
#: original_texis/windows.texi:326
#, no-wrap
msgid "delete-other-windows"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:331
msgid "@kbd{C-x 1} (@code{delete-other-windows}) deletes all the windows, @emph{except} the selected one; the selected window expands to use the whole frame.  (This command cannot be used while the minibuffer window is active; attempting to do so signals an error.)"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:336
msgid "@kbd{M-x delete-windows-on} deletes windows that show a specific buffer.  It prompts for the buffer, defaulting to the current buffer.  With prefix argument of zero, @kbd{C-u 0}, this command deletes windows only on the current display's frames."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:337
#, no-wrap
msgid "resize window"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:338
#, no-wrap
msgid "resizing windows"
msgstr ""

#. type: findex
#: original_texis/windows.texi:340
#, no-wrap
msgid "enlarge-window"
msgstr ""

#. type: vindex
#: original_texis/windows.texi:342
#, no-wrap
msgid "window-min-height"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:353
msgid "The command @kbd{C-x ^} (@code{enlarge-window}) makes the selected window one line taller, taking space from a vertically adjacent window without changing the height of the frame.  With a positive numeric argument, this command increases the window height by that many lines; with a negative argument, it reduces the height by that many lines.  If there are no vertically adjacent windows (i.e., the window is at the full frame height), that signals an error.  The command also signals an error if you attempt to reduce the height of any window below a certain minimum number of lines, specified by the variable @code{window-min-height} (the default is 4)."
msgstr ""

#. type: findex
#: original_texis/windows.texi:354
#, no-wrap
msgid "enlarge-window-horizontally"
msgstr ""

#. type: findex
#: original_texis/windows.texi:355
#, no-wrap
msgid "shrink-window-horizontally"
msgstr ""

#. type: vindex
#: original_texis/windows.texi:356
#, no-wrap
msgid "window-min-width"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:363
msgid "Similarly, @kbd{C-x @}} (@code{enlarge-window-horizontally}) makes the selected window wider, and @kbd{C-x @{} (@code{shrink-window-horizontally}) makes it narrower.  These commands signal an error if you attempt to reduce the width of any window below a certain minimum number of columns, specified by the variable @code{window-min-width} (the default is 10)."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:367
msgid "Mouse clicks on the mode line (@pxref{Mode Line Mouse}) or on window dividers (@pxref{Window Dividers}) provide another way to change window heights and to split or delete windows."
msgstr ""

#. type: findex
#: original_texis/windows.texi:369
#, no-wrap
msgid "shrink-window-if-larger-than-buffer"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:374
msgid "@kbd{C-x -} (@code{shrink-window-if-larger-than-buffer}) reduces the height of the selected window, if it is taller than necessary to show the whole text of the buffer it is displaying.  It gives the extra lines to other windows in the frame."
msgstr ""

#. type: findex
#: original_texis/windows.texi:376
#, no-wrap
msgid "balance-windows"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:382
msgid "You can also use @kbd{C-x +} (@code{balance-windows}) to balance the sizes of all the windows of the selected frame (with the exception of the minibuffer window, @pxref{Minibuffer}).  This command makes each horizontal pair of adjacent windows the same height, and each vertical pair of adjacent windows the same width."
msgstr ""

#. type: section
#: original_texis/windows.texi:384
#, no-wrap
msgid "Displaying a Buffer in a Window"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:389
msgid "It is a common Emacs operation to display or pop up some buffer in response to a user command.  There are several different ways in which commands do this."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:393
msgid "Many commands, like @kbd{C-x C-f} (@code{find-file}), by default display the buffer by ``taking over'' the selected window, expecting that the user's attention will be diverted to that buffer."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:399
msgid "Some commands try to display intelligently, trying not to take over the selected window, e.g., by splitting off a new window and displaying the desired buffer there.  Such commands, which include the various help commands (@pxref{Help}), work by calling @code{display-buffer} internally.  @xref{Window Choice}, for details."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:407
msgid "Other commands do the same as @code{display-buffer}, and additionally select the displaying window so that you can begin editing its buffer.  The command @kbd{M-g M-n} (@code{next-error}) is one example (@pxref{Compilation Mode}).  Such commands work by calling the function @code{pop-to-buffer} internally.  @xref{Switching Buffers,,Switching to a Buffer in a Window, elisp, The Emacs Lisp Reference Manual}."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:412
msgid "Commands with names ending in @code{-other-window} behave like @code{display-buffer}, except that they never display in the selected window.  Several of these commands are bound in the @kbd{C-x 4} prefix key (@pxref{Pop Up Window})."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:418
msgid "Commands with names ending in @code{-other-frame} behave like @code{display-buffer}, except that they (i) never display in the selected window and (ii) prefer to either create a new frame or use a window on some other frame to display the desired buffer.  Several of these commands are bound in the @kbd{C-x 5} prefix key."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:419
#, no-wrap
msgid "dedicated window"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:427
msgid "Sometimes, a window is ``dedicated'' to its current buffer.  @xref{Dedicated Windows,,, elisp, The Emacs Lisp Reference Manual}.  @code{display-buffer} will avoid reusing dedicated windows most of the time.  This is indicated by a @samp{d} in the mode line (@pxref{Mode Line}).  A window can also be strongly dedicated, which prevents any changes to the buffer displayed in the window.  This is indicated by a @samp{D} in the mode line."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:434
msgid "Usually, dedicated windows are used to display specialized buffers, but dedication can sometimes be useful interactively.  For example, when viewing errors with @kbd{M-g M-n} @code{next-error}, newly displayed source code may replace a buffer you want to refer to.  If you dedicate a window to that buffer, the command (through @code{display-buffer}) will prefer to use a different window instead."
msgstr ""

#. type: kindex
#: original_texis/windows.texi:435
#, no-wrap
msgid "C-x w d"
msgstr ""

#. type: findex
#: original_texis/windows.texi:436
#, no-wrap
msgid "toggle-window-dedicated"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:440
msgid "You can use the command @kbd{C-x w d} (@code{toggle-window-dedicated})  to toggle whether the selected window is dedicated to the current buffer.  With a prefix argument, it makes the window strongly dedicated."
msgstr ""

#. type: node
#: original_texis/windows.texi:444 original_texis/windows.texi:446
#, no-wrap
msgid "Window Choice"
msgstr ""

#. type: menuentry
#: original_texis/windows.texi:444
msgid "How @code{display-buffer} works."
msgstr ""

#. type: node
#: original_texis/windows.texi:444 original_texis/windows.texi:540
#, no-wrap
msgid "Temporary Displays"
msgstr ""

#. type: subsection
#: original_texis/windows.texi:444 original_texis/windows.texi:541
#, no-wrap
msgid "Displaying non-editable buffers."
msgstr ""

#. type: subsection
#: original_texis/windows.texi:447
#, no-wrap
msgid "How @code{display-buffer} works"
msgstr ""

#. type: findex
#: original_texis/windows.texi:448
#, no-wrap
msgid "display-buffer@r{, detailed description}"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:455
msgid "The @code{display-buffer} command (as well as commands that call it internally) chooses a window to display by following the steps given below.  @xref{Choosing Window,,Choosing a Window for Displaying a Buffer, elisp, The Emacs Lisp Reference Manual}, for details about how to alter this sequence of steps."
msgstr ""

#. type: itemize
#: original_texis/windows.texi:469
msgid "If the buffer should be displayed in the selected window regardless of other considerations, reuse the selected window.  By default, this step is skipped, but you can tell Emacs not to skip it by adding a regular expression matching the buffer's name together with a reference to the @code{display-buffer-same-window} action function (@pxref{Buffer Display Action Functions,,Action Functions for Buffer Display, elisp, The Emacs Lisp Reference Manual}) to the option @code{display-buffer-alist} (@pxref{Choosing Window,,Choosing a Window for Displaying a Buffer, elisp, The Emacs Lisp Reference Manual}).  For example, to display the buffer @file{*scratch*} preferably in the selected window write:"
msgstr ""

#. type: group
#: original_texis/windows.texi:475
#, no-wrap
msgid ""
"(setopt\n"
" display-buffer-alist\n"
" '((\"\\\\*scratch\\\\*\" (display-buffer-same-window))))\n"
msgstr ""

#. type: itemize
#: original_texis/windows.texi:479
msgid "By default, @code{display-buffer-alist} is @code{nil}."
msgstr ""

#. type: itemize
#: original_texis/windows.texi:488
msgid "Otherwise, if the buffer is already displayed in an existing window, reuse that window.  Normally, only windows on the selected frame are considered, but windows on other frames are also reusable if you use the corresponding @code{reusable-frames} action alist entry (@pxref{Buffer Display Action Alists,,Action Alists for Buffer Display, elisp, The Emacs Lisp Reference Manual}).  See the next step for an example of how to do that."
msgstr ""

#. type: itemize
#: original_texis/windows.texi:495
msgid "Otherwise, optionally create a new frame and display the buffer there.  By default, this step is skipped.  To enable it, change the value of the option @code{display-buffer-base-action} (@pxref{Choosing Window,,Choosing a Window for Displaying a Buffer, elisp, The Emacs Lisp Reference Manual}) as follows:"
msgstr ""

#. type: group
#: original_texis/windows.texi:502
#, no-wrap
msgid ""
"(setopt\n"
" display-buffer-base-action\n"
" '((display-buffer-reuse-window display-buffer-pop-up-frame)\n"
"   (reusable-frames . 0)))\n"
msgstr ""

#. type: itemize
#: original_texis/windows.texi:507
msgid "This customization will also try to make the preceding step search for a reusable window on all visible or iconified frames."
msgstr ""

#. type: itemize
#: original_texis/windows.texi:511
msgid "Otherwise, try to create a new window by splitting a window on the selected frame, and display the buffer in that new window."
msgstr ""

#. type: vindex
#: original_texis/windows.texi:512
#, no-wrap
msgid "split-height-threshold"
msgstr ""

#. type: vindex
#: original_texis/windows.texi:513
#, no-wrap
msgid "split-width-threshold"
msgstr ""

#. type: itemize
#: original_texis/windows.texi:523
msgid "The split can be either vertical or horizontal, depending on the variables @code{split-height-threshold} and @code{split-width-threshold}.  These variables should have integer values.  If @code{split-height-threshold} is smaller than the chosen window's height, the split puts the new window below.  Otherwise, if @code{split-width-threshold} is smaller than the window's width, the split puts the new window on the right.  If neither condition holds, Emacs tries to split so that the new window is below---but only if the window was not split before (to avoid excessive splitting)."
msgstr ""

#. type: itemize
#: original_texis/windows.texi:529
msgid "Otherwise, display the buffer in a window previously showing it.  Normally, only windows on the selected frame are considered, but with a suitable @code{reusable-frames} action alist entry (see above) the window may be also on another frame."
msgstr ""

#. type: itemize
#: original_texis/windows.texi:533
msgid "Otherwise, display the buffer in an existing window on the selected frame."
msgstr ""

#. type: itemize
#: original_texis/windows.texi:537
msgid "If all the above methods fail for whatever reason, create a new frame and display the buffer there."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:542
#, no-wrap
msgid "temporary windows"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:549
msgid "Some buffers are shown in windows for perusal rather than for editing.  Help commands (@pxref{Help}) typically use a buffer called @file{*Help*} for that purpose, minibuffer completion (@pxref{Completion}) uses a buffer called @file{*Completions*}, etc.  Such buffers are usually displayed only for a short period of time."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:555
msgid "Normally, Emacs chooses the window for such temporary displays via @code{display-buffer}, as described in the previous subsection.  The @file{*Completions*} buffer, on the other hand, is normally displayed in a window at the bottom of the selected frame, regardless of the number of windows already shown on that frame."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:562
msgid "If you prefer Emacs to display a temporary buffer in a different fashion, customize the variable @code{display-buffer-alist} (@pxref{Choosing Window,,Choosing a Window for Displaying a Buffer, elisp, The Emacs Lisp Reference Manual}) appropriately.  For example, to display @file{*Completions*} always below the selected window, use the following form in your initialization file (@pxref{Init File}):"
msgstr ""

#. type: group
#: original_texis/windows.texi:568
#, no-wrap
msgid ""
"(setopt\n"
" display-buffer-alist\n"
" '((\"\\\\*Completions\\\\*\" display-buffer-below-selected)))\n"
msgstr ""

#. type: findex
#: original_texis/windows.texi:571
#, no-wrap
msgid "temp-buffer-resize-mode"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:579
msgid "The @file{*Completions*} buffer is also special in the sense that Emacs usually tries to make its window just as large as necessary to display all of its contents.  To resize windows showing other temporary displays, like, for example, the @file{*Help*} buffer, turn on the minor mode (@pxref{Minor Modes}) @code{temp-buffer-resize-mode} (@pxref{Temporary Displays,,Temporary Displays, elisp, The Emacs Lisp Reference Manual})."
msgstr ""

#. type: vindex
#: original_texis/windows.texi:580
#, no-wrap
msgid "temp-buffer-max-height"
msgstr ""

#. type: vindex
#: original_texis/windows.texi:581
#, no-wrap
msgid "temp-buffer-max-width"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:587
msgid "The maximum size of windows resized by @code{temp-buffer-resize-mode} can be controlled by customizing the options @code{temp-buffer-max-height} and @code{temp-buffer-max-width} (@pxref{Temporary Displays,,Temporary Displays, elisp, The Emacs Lisp Reference Manual}), and cannot exceed the size of the containing frame."
msgstr ""

#. type: section
#: original_texis/windows.texi:590
#, no-wrap
msgid "Convenience Features for Window Handling"
msgstr ""

#. type: findex
#: original_texis/windows.texi:592
#, no-wrap
msgid "winner-mode"
msgstr ""

#. type: vindex
#: original_texis/windows.texi:593
#, no-wrap
msgid "winner-dont-bind-my-keys"
msgstr ""

#. type: vindex
#: original_texis/windows.texi:594
#, no-wrap
msgid "winner-ring-size"
msgstr ""

#. type: vindex
#: original_texis/windows.texi:595
#, no-wrap
msgid "winner-boring-buffers"
msgstr ""

#. type: vindex
#: original_texis/windows.texi:596
#, no-wrap
msgid "winner-boring-buffers-regexp"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:597
#, no-wrap
msgid "Winner mode"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:598
#, no-wrap
msgid "mode, Winner"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:599
#, no-wrap
msgid "undoing window configuration changes"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:600
#, no-wrap
msgid "window configuration changes, undoing"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:617
msgid "Winner mode is a global minor mode that records the changes in the window configuration (i.e., how the frames are partitioned into windows), so that you can undo them.  You can toggle Winner mode with @kbd{M-x winner-mode}, or by customizing the variable @code{winner-mode}.  When the mode is enabled, @kbd{C-c left} (@code{winner-undo}) undoes the last window configuration change.  If you change your mind while undoing, you can redo the changes you had undone using @kbd{C-c right} (@code{M-x winner-redo}).  To prevent Winner mode from binding @kbd{C-c left} and @kbd{C-c right}, you can customize the variable @code{winner-dont-bind-my-keys} to a non-@code{nil} value.  By default, Winner mode stores a maximum of 200 window configurations per frame, but you can change that by modifying the variable @code{winner-ring-size}.  If there are some buffers whose windows you wouldn't want Winner mode to restore, add their names to the list variable @code{winner-boring-buffers} or to the regexp @code{winner-boring-buffers-regexp}."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:621
msgid "Follow mode (@kbd{M-x follow-mode}) synchronizes several windows on the same buffer so that they always display adjacent sections of that buffer.  @xref{Follow Mode}."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:622
#, no-wrap
msgid "Windmove package"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:623
#, no-wrap
msgid "directional window selection"
msgstr ""

#. type: findex
#: original_texis/windows.texi:624
#, no-wrap
msgid "windmove-right"
msgstr ""

#. type: findex
#: original_texis/windows.texi:625
#, no-wrap
msgid "windmove-default-keybindings"
msgstr ""

#. type: findex
#: original_texis/windows.texi:626
#, no-wrap
msgid "windmove-display-default-keybindings"
msgstr ""

#. type: findex
#: original_texis/windows.texi:627
#, no-wrap
msgid "windmove-delete-default-keybindings"
msgstr ""

#. type: findex
#: original_texis/windows.texi:628
#, no-wrap
msgid "windmove-swap-states-default-keybindings"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:645
msgid "The Windmove package defines commands for moving directionally between neighboring windows in a frame.  @kbd{M-x windmove-right} selects the window immediately to the right of the currently selected one, and similarly for the left, up, and down counterparts.  @code{windmove-default-keybindings} binds these commands to @kbd{S-right} etc.; doing so disables shift selection for those keys (@pxref{Shift Selection}).  In the same way as key bindings can be defined for commands that select windows directionally, you can use @code{windmove-display-default-keybindings} to define keybindings for commands that specify in what direction to display the window for the buffer that the next command is going to display.  Also there is @code{windmove-delete-default-keybindings} to define keybindings for commands that delete windows directionally, and @code{windmove-swap-states-default-keybindings} that defines key bindings for commands that swap the window contents of the selected window with the window in the specified direction."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:648
msgid "The command @kbd{M-x compare-windows} lets you compare the text shown in different windows.  @xref{Comparing Files}."
msgstr ""

#. type: vindex
#: original_texis/windows.texi:649
#, no-wrap
msgid "scroll-all-mode"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:650
#, no-wrap
msgid "scrolling windows together"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:651
#, no-wrap
msgid "Scroll-all mode"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:652
#, no-wrap
msgid "mode, Scroll-all"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:656
msgid "Scroll All mode (@kbd{M-x scroll-all-mode}) is a global minor mode that causes scrolling commands and point motion commands to apply to every single window."
msgstr ""

#. type: section
#: original_texis/windows.texi:659
#, no-wrap
msgid "Window Tab Line"
msgstr ""

#. type: findex
#: original_texis/windows.texi:661
#, no-wrap
msgid "global-tab-line-mode"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:662
#, no-wrap
msgid "tab line"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:671
msgid "The command @code{global-tab-line-mode} toggles the display of a @dfn{tab line} on the top screen line of each window.  The Tab Line shows special buttons (``tabs'') for each buffer that was displayed in a window, and allows switching to any of these buffers by clicking the corresponding button.  Clicking on the @kbd{+} icon adds a new buffer to the window-local tab line of buffers, and clicking on the @kbd{x} icon of a tab deletes it.  The mouse wheel on the tab line scrolls the tabs horizontally."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:678
msgid "Touch screen input (@pxref{Other Input}) can also be used to interact with the ``tab line''.  Long-pressing (@pxref{Touchscreens})  a tab will display a context menu with items that operate on the tab that was pressed; tapping a tab itself will result in switching to that tab's buffer, and tapping a button on the tab line will behave as if it was clicked with @kbd{mouse-1}."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:683
msgid "Selecting the previous window-local tab is the same as typing @kbd{C-x @key{LEFT}} (@code{previous-buffer}), selecting the next tab is the same as @kbd{C-x @key{RIGHT}} (@code{next-buffer}).  Both commands support a numeric prefix argument as a repeat count."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:691
msgid "You can customize the variable @code{tab-line-tabs-function} to define the preferred contents of the tab line.  By default, it displays all buffers previously visited in the window, as described above.  But you can also set it to display a list of buffers with the same major mode as the current buffer, or to display buffers grouped by their major mode, where clicking on the mode name in the first tab displays a list of all major modes where you can select another group of buffers."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:697
msgid "Note that the Tab Line is different from the Tab Bar (@pxref{Tab Bars}).  Whereas tabs on the Tab Bar at the top of each frame are used to switch between window configurations containing several windows with buffers, tabs on the Tab Line at the top of each window are used to switch between buffers in the window."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:703
msgid "Also note that the tab line displays in the same space as the window tool bar, so only one of them can be displayed at any given time, unless you customize the value of @code{tab-line-format} in Lisp to add @w{@code{(:eval (tab-line-format))}} to @code{tab-line-format}.  @xref{Mode Line Format,,, elisp, The Emacs Lisp Reference Manual}."
msgstr ""

#. type: cindex
#: original_texis/windows.texi:708
#, no-wrap
msgid "window tool bar"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:709
#, no-wrap
msgid "mode, window tool bar"
msgstr ""

#. type: cindex
#: original_texis/windows.texi:710
#, no-wrap
msgid "tool bar, attached to window"
msgstr ""

#. type: findex
#: original_texis/windows.texi:712
#, no-wrap
msgid "global-window-tool-bar-mode"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:718
msgid "The command @code{global-window-tool-bar-mode} toggles the display of a tool bar at the top of each window.  When enabled, multiple windows can display their own tool bar simultaneously.  To conserve space, a window tool bar is hidden if there are no buttons to show, i.e. if @code{tool-bar-map} is @code{nil}."
msgstr ""

#. type: findex
#: original_texis/windows.texi:719
#, no-wrap
msgid "window-tool-bar-mode"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:726
msgid "If you want to toggle the display of a window tool bar for only some buffers, run the command @code{window-tool-bar-mode} in those buffers.  This is useful to put in a mode hook.  For example, if you want the window tool bar to appear only for buffers that do not represent files and have a custom tool bar, you could add the following code to your init file (@pxref{Init File}):"
msgstr ""

#. type: example
#: original_texis/windows.texi:729
#, no-wrap
msgid "(add-hook 'special-mode-hook 'window-tool-bar-mode)\n"
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:733
msgid "Emacs can also display a single tool bar at the top of frames (@pxref{Tool Bars})."
msgstr ""

#. type: Plain text
#: original_texis/windows.texi:738
msgid "Note that the window tool bar displays in the same space as the tab line, so only one of them can be displayed at any given time, unless you customize the value of @code{tab-line-format} to add @w{@code{(:eval (window-tool-bar-string))}} to @code{tab-line-format}.  @xref{Mode Line Format,,, elisp, The Emacs Lisp Reference Manual}."
msgstr ""
