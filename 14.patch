From d14813cbcb1b29ffd83cfdc009fc8316e32e49c8 Mon Sep 17 00:00:00 2001
From: m-kirihara <sfaddmki-git@yahoo.co.jp>
Date: Tue, 8 Aug 2023 22:10:29 +0900
Subject: [PATCH 1/3] =?UTF-8?q?=E3=82=84=E3=82=81=E2=86=92=E3=81=9F?=
 =?UTF-8?q?=E3=82=81?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

emacs-28ブランチは変更されていますが，emacs-29ブランチは忘れています．
---
 lispref/objects.texi.po | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lispref/objects.texi.po b/lispref/objects.texi.po
index b59973ad..f28cb01a 100644
--- a/lispref/objects.texi.po
+++ b/lispref/objects.texi.po
@@ -1513,7 +1513,7 @@ msgstr "リスト、文字列、およびその他の配列型も、重要な類
 #. type: Plain text
 #: original_texis/objects.texi:742
 msgid "It is generally impossible to read the same sequence twice, since sequences are always created anew upon reading.  If you read the read syntax for a sequence twice, you get two sequences with equal contents.  There is one exception: the empty list @code{()} always stands for the same object, @code{nil}."
-msgstr "シーケンスは読み取りにより常に新たに作成されるやめ、同じシーケンスを2回読み取るのは一般的に不可能です。シーケンスにたいする入力構文を2回読み取った場合には、内容が等しい2つのシーケンスを得ます。これには1つ例外があります。空リスト@code{()}は、常に同じオブジェクト@code{nil}を表します。"
+msgstr "シーケンスは読み取りにより常に新たに作成されるため、同じシーケンスを2回読み取るのは一般的に不可能です。シーケンスにたいする入力構文を2回読み取った場合には、内容が等しい2つのシーケンスを得ます。これには1つ例外があります。空リスト@code{()}は、常に同じオブジェクト@code{nil}を表します。"
 
 #. type: subsection
 #: original_texis/objects.texi:744

From 6e06f586fa55050c24122f15a6d1543e94c2a04e Mon Sep 17 00:00:00 2001
From: m-kirihara <sfaddmki-git@yahoo.co.jp>
Date: Tue, 8 Aug 2023 22:19:35 +0900
Subject: [PATCH 2/3] =?UTF-8?q?=E5=89=AF=E4=BD=9C=E7=94=A8=E3=82=92?=
 =?UTF-8?q?=E2=80=A6=E3=82=AA=E3=83=96=E3=82=B8=E3=82=A7=E3=82=AF=E3=83=88?=
 =?UTF-8?q?=E3=81=A7=E3=81=99=E3=80=82=E2=86=92@dfn{mutable(=E5=8F=AF?=
 =?UTF-8?q?=E5=A4=89)}=E2=80=A6=E5=AE=89=E5=85=A8=E3=81=A7=E3=81=99?=
 =?UTF-8?q?=E3=80=82?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

emacs-28ブランチは変更されていますが，emacs-29ブランチは忘れています．
---
 lispref/objects.texi.po | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lispref/objects.texi.po b/lispref/objects.texi.po
index f28cb01a..8bfa0a74 100644
--- a/lispref/objects.texi.po
+++ b/lispref/objects.texi.po
@@ -4201,7 +4201,7 @@ msgstr "変更されるべきではないLispオブジェクトがいくつか
 #. type: Plain text
 #: original_texis/objects.texi:2423
 msgid "Other Lisp objects are @dfn{mutable}: it is safe to change their values via destructive operations involving side effects.  For example, an existing marker can be changed by moving the marker to point to somewhere else."
-msgstr "その他のLispオブジェクトは副作用をともなう破壊的な操作を通じて安全に値を変更可能な@dfn{mutable(可変)}オブジェクトです。たとえばマーカーを別のポイントを指すマーカーに移動することにより、既存のマーカーを変更することができます。"
+msgstr "その他のLispオブジェクトは@dfn{mutable(可変)}オブジェクトで、副作用をともなう破壊的な操作を通じて値を変更しても安全です。たとえばマーカーを別のポイントを指すマーカーに移動することにより、既存のマーカーを変更することができます。"
 
 #. type: Plain text
 #: original_texis/objects.texi:2431

From 80978868f55ba1ef588ab736bb0839fb7088072b Mon Sep 17 00:00:00 2001
From: m-kirihara <sfaddmki-git@yahoo.co.jp>
Date: Tue, 8 Aug 2023 22:27:55 +0900
Subject: [PATCH 3/3] =?UTF-8?q?=E3=82=92=E2=86=92=E3=81=AB?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

emacs-28ブランチもemacs-29ブランチも忘れています．
---
 lispref/numbers.texi.po | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lispref/numbers.texi.po b/lispref/numbers.texi.po
index 3b6dac61..04f56d6c 100644
--- a/lispref/numbers.texi.po
+++ b/lispref/numbers.texi.po
@@ -1688,7 +1688,7 @@ msgstr "arithmetic shift"
 #. type: defun
 #: original_texis/numbers.texi:886
 msgid "@code{ash} (@dfn{arithmetic shift}) shifts the bits in @var{integer1} to the left @var{count} places, or to the right if @var{count} is negative.  Left shifts introduce zero bits on the right; right shifts discard the rightmost bits.  Considered as an integer operation, @code{ash} multiplies @var{integer1} by"
-msgstr "@code{ash} (@dfn{算術シフト(arithmetic shift)})は、@var{integer1}の中のビット位置を左に@var{count}シフトする。@var{count}が負なら右にシフトする。左シフトでは右側に0が挿入されて、右シフトでは最右ビットが破棄される。整数処理として考えると、@code{ash}は@var{integer1}を"
+msgstr "@code{ash} (@dfn{算術シフト(arithmetic shift)})は、@var{integer1}の中のビット位置を左に@var{count}シフトする。@var{count}が負なら右にシフトする。左シフトでは右側に0が挿入されて、右シフトでは最右ビットが破棄される。整数処理として考えると、@code{ash}は@var{integer1}に"
 
 #. type: ifnottex
 #: original_texis/numbers.texi:888
